{
    "adds a utility target ( run - v4 ) for running SC with a preference for IPv4 rather than the default IPv6": "diff --git a/build.xml b/build.xml\nindex 55dde1aec..516ed7bc3 100644\n--- a/build.xml\n+++ b/build.xml\n@@ -705,6 +705,12 @@\n         </antcall>\n     </target>\n \n+    <target name=\"run-v4\" description=\"Starts SC with a preference for IPv4.\">\n+        <ant target=\"run\">\n+          <property name=\"java.net.preferIPv6Addresses\" value=\"false\"/>\n+        </ant>\n+    </target>\n+\n     <!--PROFILE-SIP-COMMUNICATOR-IN-NETBEANS-IDE -->\n     <target name=\"profile\" depends=\"bundle-plugin-profiler4j,deploy-os-specific-bundles\"\n         description=\"Profile Project\">\n@@ -812,7 +818,7 @@\n         bundle-argdelegation,bundle-zrtp4j,\n         bundle-filehistory,bundle-metahistory,bundle-metahistory-slick,\n         bundle-facebook,bundle-plugin-facebookaccregwizz,\n-\t\tbundle-bouncycastle,bundle-plugin-otr\"/>\n+        bundle-bouncycastle,bundle-plugin-otr\"/>\n \n     <!--BUNDLE-SC-LAUNCHER-->\n     <target name=\"bundle-sc-launcher\">\n@@ -1142,7 +1148,7 @@ javax.swing.event, javax.swing.border\"/>\n                 <include name=\"protocol/jabber/**/*\"/>\n                 <include name=\"protocol/msn/**/*\"/>\n                 <include name=\"protocol/yahoo/**/*\"/>\n-            </zipfileset> \n+            </zipfileset>\n         </jar>\n     </target>\n \n@@ -1467,7 +1473,7 @@ javax.swing.event, javax.swing.border\"/>\n              Wizard.-->\n         <jar compress=\"false\" destfile=\"${bundles.dest}/facebookaccregwizz.jar\"\n                 manifest=\"${src}/net/java/sip/communicator/plugin/facebookaccregwizz/facebookaccregwizz.manifest.mf\">\n-            <zipfileset dir=\"${dest}/net/java/sip/communicator/plugin/facebookaccregwizz\" \n+            <zipfileset dir=\"${dest}/net/java/sip/communicator/plugin/facebookaccregwizz\"\n                     prefix=\"net/java/sip/communicator/plugin/facebookaccregwizz\" />\n         </jar>\n     </target>\n@@ -2032,16 +2038,16 @@ org.apache.http.util\"/>\n             <zipfileset src=\"${lib.noinst}/zrtp4j-light.jar\" prefix=\"\"/>\n             <manifest>\n                 <attribute name=\"Export-Package\" value=\"\n-                \tgnu.java.zrtp,\n-                \tgnu.java.zrtp.packets,\n-                \tgnu.java.zrtp.utils,\n-                \tgnu.java.zrtp.zidfile\"/>\n-    \t        <attribute name=\"Import-Package\" value=\"org.bouncycastle.crypto,\n-    \t        \torg.bouncycastle.crypto.digests,\n-    \t        \torg.bouncycastle.crypto.macs,\n-    \t        \torg.bouncycastle.crypto.params,\n-    \t        \torg.bouncycastle.crypto.engines,\n-    \t        \torg.bouncycastle.crypto.modes\"/>\n+                    gnu.java.zrtp,\n+                    gnu.java.zrtp.packets,\n+                    gnu.java.zrtp.utils,\n+                    gnu.java.zrtp.zidfile\"/>\n+                <attribute name=\"Import-Package\" value=\"org.bouncycastle.crypto,\n+                    org.bouncycastle.crypto.digests,\n+                    org.bouncycastle.crypto.macs,\n+                    org.bouncycastle.crypto.params,\n+                    org.bouncycastle.crypto.engines,\n+                    org.bouncycastle.crypto.modes\"/>\n                 <attribute name=\"Bundle-Name\" value=\"ZRTP4J\"/>\n                 <attribute name=\"Bundle-Description\" value=\"ZRTP for Java library.\"/>\n                 <attribute name=\"Bundle-Version\" value=\"1.4.5\"/>\n@@ -2072,33 +2078,33 @@ org.apache.http.util\"/>\n                 prefix=\"net/java/sip/communicator/impl/metahistory\" />\n         </jar>\n     </target>\n-\t<!--BUNDLE-BOUNCYCASTLE -->\n+    <!--BUNDLE-BOUNCYCASTLE -->\n     <target name=\"bundle-bouncycastle\">\n-    \t<jar compress=\"true\" destfile=\"${bundles.dest}/bouncycastle.jar\">\n-    \t\t<zipfileset src=\"${lib.noinst}/lcrypto-jdk16-143.jar\"/>\n-    \t\t<manifest>\n-    \t\t    <attribute name=\"Export-Package\" value=\"org.bouncycastle.crypto,\n-    \t        \torg.bouncycastle.crypto.digests,\n-    \t        \torg.bouncycastle.crypto.macs,\n-    \t        \torg.bouncycastle.crypto.params,\n-    \t        \torg.bouncycastle.crypto.engines,\n-    \t        \torg.bouncycastle.crypto.modes,\n-    \t\t    \torg.bouncycastle.crypto.generators,\n-    \t\t    \torg.bouncycastle.crypto.signers,\n-    \t\t    \torg.bouncycastle.util.encoders,\n-    \t\t    \torg.bouncycastle.util\"/>\n-    \t\t    <attribute name=\"Bundle-Name\" value=\"BouncyCastle\"/>\n-    \t\t    <attribute name=\"Bundle-Version\" value=\"1.4.3.1\"/>\n-    \t\t    <attribute name=\"System-Bundle\" value=\"yes\"/>\n+        <jar compress=\"true\" destfile=\"${bundles.dest}/bouncycastle.jar\">\n+            <zipfileset src=\"${lib.noinst}/lcrypto-jdk16-143.jar\"/>\n+            <manifest>\n+                <attribute name=\"Export-Package\" value=\"org.bouncycastle.crypto,\n+                    org.bouncycastle.crypto.digests,\n+                    org.bouncycastle.crypto.macs,\n+                    org.bouncycastle.crypto.params,\n+                    org.bouncycastle.crypto.engines,\n+                    org.bouncycastle.crypto.modes,\n+                    org.bouncycastle.crypto.generators,\n+                    org.bouncycastle.crypto.signers,\n+                    org.bouncycastle.util.encoders,\n+                    org.bouncycastle.util\"/>\n+                <attribute name=\"Bundle-Name\" value=\"BouncyCastle\"/>\n+                <attribute name=\"Bundle-Version\" value=\"1.4.3.1\"/>\n+                <attribute name=\"System-Bundle\" value=\"yes\"/>\n             </manifest>\n-    \t</jar>\n+        </jar>\n     </target>\n-\t<!--BUNDLE-PLUGIN-OTR -->\n+    <!--BUNDLE-PLUGIN-OTR -->\n     <target name=\"bundle-plugin-otr\">\n         <jar compress=\"false\" destfile=\"${bundles.dest}/otr.jar\" manifest=\"${src}/net/java/sip/communicator/plugin/otr/otr.manifest.mf\">\n             <zipfileset dir=\"${dest}/net/java/sip/communicator/plugin/otr\"\n                 prefix=\"net/java/sip/communicator/plugin/otr\"/>\n-        \t<zipfileset src=\"${lib.noinst}/otr4j.jar\"/>\n+            <zipfileset src=\"${lib.noinst}/otr4j.jar\"/>\n         </jar>\n     </target>\n     <!--BUNDLE-METAHISTORY-SLICK-->",
    "Add copyright headers .": "diff --git a/vm/benchmarks/agentscript/sieve-filter1.js b/vm/benchmarks/agentscript/sieve-filter1.js\nindex 168e65a0fc9..6aec8202ff9 100644\n--- a/vm/benchmarks/agentscript/sieve-filter1.js\n+++ b/vm/benchmarks/agentscript/sieve-filter1.js\n@@ -1,3 +1,28 @@\n+/*\n+ * Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n /* global agent */\n \n var sum = 0;\ndiff --git a/vm/benchmarks/agentscript/sieve-filter2.js b/vm/benchmarks/agentscript/sieve-filter2.js\nindex 1a40cfcbf5a..62112543e95 100644\n--- a/vm/benchmarks/agentscript/sieve-filter2.js\n+++ b/vm/benchmarks/agentscript/sieve-filter2.js\n@@ -1,3 +1,28 @@\n+/*\n+ * Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n /* global agent */\n \n var sum = 0;\ndiff --git a/vm/benchmarks/agentscript/sieve.js b/vm/benchmarks/agentscript/sieve.js\nindex 57646999de7..d38366ce811 100644\n--- a/vm/benchmarks/agentscript/sieve.js\n+++ b/vm/benchmarks/agentscript/sieve.js\n@@ -1,3 +1,28 @@\n+/*\n+ * Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n function Natural() {\n     this.x = 2;\n };",
    "Optimize retry for FailbackRegistry .": "diff --git a/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/AbstractRetryTask.java b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/AbstractRetryTask.java\nnew file mode 100644\nindex 000000000..b299b2fd7\n--- /dev/null\n+++ b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/AbstractRetryTask.java\n@@ -0,0 +1,112 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dubbo.registry.retry;\n+\n+import org.apache.dubbo.common.Constants;\n+import org.apache.dubbo.common.URL;\n+import org.apache.dubbo.common.logger.Logger;\n+import org.apache.dubbo.common.logger.LoggerFactory;\n+import org.apache.dubbo.common.timer.Timeout;\n+import org.apache.dubbo.common.timer.Timer;\n+import org.apache.dubbo.common.timer.TimerTask;\n+import org.apache.dubbo.common.utils.StringUtils;\n+import org.apache.dubbo.registry.support.FailbackRegistry;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+/**\n+ * AbstractRetryTask\n+ */\n+public abstract class AbstractRetryTask implements TimerTask {\n+\n+    protected final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    /**\n+     * url for retry task\n+     */\n+    protected final URL url;\n+\n+    /**\n+     * registry for this task\n+     */\n+    protected final FailbackRegistry registry;\n+\n+    /**\n+     * retry period\n+     */\n+    protected final long retryPeriod;\n+\n+    /**\n+     * task name for this task\n+     */\n+    protected final String taskName;\n+\n+    private volatile boolean cancel;\n+\n+    AbstractRetryTask(URL url, FailbackRegistry registry, String taskName) {\n+        if (url == null || StringUtils.isBlank(taskName)) {\n+            throw new IllegalArgumentException();\n+        }\n+        this.url = url;\n+        this.registry = registry;\n+        this.taskName = taskName;\n+        cancel = false;\n+        this.retryPeriod = url.getParameter(Constants.REGISTRY_RETRY_PERIOD_KEY, Constants.DEFAULT_REGISTRY_RETRY_PERIOD);\n+    }\n+\n+    public void cancel() {\n+        cancel = true;\n+    }\n+\n+    public boolean isCancel() {\n+        return cancel;\n+    }\n+\n+    protected void reput(Timeout timeout, long tick) {\n+        if (timeout == null) {\n+            throw new IllegalArgumentException();\n+        }\n+\n+        Timer timer = timeout.timer();\n+        if (timer.isStop() || timeout.isCancelled() || isCancel()) {\n+            return;\n+        }\n+\n+        timer.newTimeout(timeout.task(), tick, TimeUnit.MILLISECONDS);\n+    }\n+\n+    @Override\n+    public void run(Timeout timeout) throws Exception {\n+        if (timeout.isCancelled() || timeout.timer().isStop() || isCancel()) {\n+            // other thread cancel this timeout or stop the timer.\n+            return;\n+        }\n+        if (logger.isInfoEnabled()) {\n+            logger.info(taskName + \" : \" + url);\n+        }\n+        try {\n+            doRetry(url, registry, timeout);\n+        } catch (Throwable t) { // Ignore all the exceptions and wait for the next retry\n+            logger.warn(\"Failed to execute task \" + taskName + \", url: \" + url + \", waiting for again, cause:\" + t.getMessage(), t);\n+            // reput this task when catch exception.\n+            reput(timeout, retryPeriod);\n+        }\n+    }\n+\n+    protected abstract void doRetry(URL url, FailbackRegistry registry, Timeout timeout);\n+}\ndiff --git a/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedNotifiedTask.java b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedNotifiedTask.java\nnew file mode 100644\nindex 000000000..9ccb67301\n--- /dev/null\n+++ b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedNotifiedTask.java\n@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dubbo.registry.retry;\n+\n+import org.apache.dubbo.common.URL;\n+import org.apache.dubbo.common.timer.Timeout;\n+import org.apache.dubbo.common.utils.CollectionUtils;\n+import org.apache.dubbo.registry.NotifyListener;\n+import org.apache.dubbo.registry.support.FailbackRegistry;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+\n+/**\n+ * FailedNotifiedTask\n+ */\n+public final class FailedNotifiedTask extends AbstractRetryTask {\n+\n+    private static final String NAME = \"retry subscribe\";\n+\n+    private final NotifyListener listener;\n+\n+    private final List<URL> urls = new CopyOnWriteArrayList<>();\n+\n+    public FailedNotifiedTask(URL url, NotifyListener listener) {\n+        super(url, null, NAME);\n+        if (listener == null) {\n+            throw new IllegalArgumentException();\n+        }\n+        this.listener = listener;\n+    }\n+\n+    public void addUrlToRetry(List<URL> urls) {\n+        if (CollectionUtils.isEmpty(urls)) {\n+            return;\n+        }\n+        this.urls.addAll(urls);\n+    }\n+\n+    public void removeRetryUrl(List<URL> urls) {\n+        this.urls.removeAll(urls);\n+    }\n+\n+    @Override\n+    protected void doRetry(URL url, FailbackRegistry registry, Timeout timeout) {\n+        if (CollectionUtils.isNotEmpty(urls)) {\n+            listener.notify(urls);\n+            urls.clear();\n+        }\n+        reput(timeout, retryPeriod);\n+    }\n+}\ndiff --git a/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedRegisteredTask.java b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedRegisteredTask.java\nnew file mode 100644\nindex 000000000..c4d9cc6f0\n--- /dev/null\n+++ b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedRegisteredTask.java\n@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dubbo.registry.retry;\n+\n+import org.apache.dubbo.common.URL;\n+import org.apache.dubbo.common.timer.Timeout;\n+import org.apache.dubbo.registry.support.FailbackRegistry;\n+\n+/**\n+ * FailedRegisteredTask\n+ */\n+public final class FailedRegisteredTask extends AbstractRetryTask {\n+\n+    private static final String NAME = \"retry register\";\n+\n+    public FailedRegisteredTask(URL url, FailbackRegistry registry) {\n+        super(url, registry, NAME);\n+    }\n+\n+    @Override\n+    protected void doRetry(URL url, FailbackRegistry registry, Timeout timeout) {\n+        registry.doRegister(url);\n+        registry.removeFailedRegisteredTask(url);\n+    }\n+}\ndiff --git a/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedSubscribedTask.java b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedSubscribedTask.java\nnew file mode 100644\nindex 000000000..06d1ec315\n--- /dev/null\n+++ b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedSubscribedTask.java\n@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dubbo.registry.retry;\n+\n+import org.apache.dubbo.common.URL;\n+import org.apache.dubbo.common.timer.Timeout;\n+import org.apache.dubbo.registry.NotifyListener;\n+import org.apache.dubbo.registry.support.FailbackRegistry;\n+\n+/**\n+ * FailedSubscribedTask\n+ */\n+public final class FailedSubscribedTask extends AbstractRetryTask {\n+\n+    private static final String NAME = \"retry subscribe\";\n+\n+    private final NotifyListener listener;\n+\n+    public FailedSubscribedTask(URL url, FailbackRegistry registry, NotifyListener listener) {\n+        super(url, registry, NAME);\n+        if (listener == null) {\n+            throw new IllegalArgumentException();\n+        }\n+        this.listener = listener;\n+    }\n+\n+    @Override\n+    protected void doRetry(URL url, FailbackRegistry registry, Timeout timeout) {\n+        registry.doSubscribe(url, listener);\n+        registry.removeFailedSubscribedTask(url, listener);\n+    }\n+}\ndiff --git a/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedUnregisteredTask.java b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedUnregisteredTask.java\nnew file mode 100644\nindex 000000000..4cf3aa4eb\n--- /dev/null\n+++ b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedUnregisteredTask.java\n@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dubbo.registry.retry;\n+\n+import org.apache.dubbo.common.URL;\n+import org.apache.dubbo.common.timer.Timeout;\n+import org.apache.dubbo.registry.support.FailbackRegistry;\n+\n+/**\n+ * FailedUnregisteredTask\n+ */\n+public final class FailedUnregisteredTask extends AbstractRetryTask {\n+\n+    private static final String NAME = \"retry unregister\";\n+\n+    public FailedUnregisteredTask(URL url, FailbackRegistry registry) {\n+        super(url, registry, NAME);\n+    }\n+\n+    @Override\n+    protected void doRetry(URL url, FailbackRegistry registry, Timeout timeout) {\n+        registry.doUnregister(url);\n+        registry.removeFailedUnregisteredTask(url);\n+    }\n+}\ndiff --git a/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedUnsubscribedTask.java b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedUnsubscribedTask.java\nnew file mode 100644\nindex 000000000..6814583df\n--- /dev/null\n+++ b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/retry/FailedUnsubscribedTask.java\n@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dubbo.registry.retry;\n+\n+import org.apache.dubbo.common.URL;\n+import org.apache.dubbo.common.timer.Timeout;\n+import org.apache.dubbo.registry.NotifyListener;\n+import org.apache.dubbo.registry.support.FailbackRegistry;\n+\n+/**\n+ * FailedUnsubscribedTask\n+ */\n+public final class FailedUnsubscribedTask extends AbstractRetryTask {\n+\n+    private static final String NAME = \"retry unsubscribe\";\n+\n+    private final NotifyListener listener;\n+\n+    public FailedUnsubscribedTask(URL url, FailbackRegistry registry, NotifyListener listener) {\n+        super(url, registry, NAME);\n+        if (listener == null) {\n+            throw new IllegalArgumentException();\n+        }\n+        this.listener = listener;\n+    }\n+\n+    @Override\n+    protected void doRetry(URL url, FailbackRegistry registry, Timeout timeout) {\n+        registry.unsubscribe(url, listener);\n+        registry.removeFailedUnsubscribedTask(url, listener);\n+    }\n+}\ndiff --git a/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/FailbackRegistry.java b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/FailbackRegistry.java\nindex 5c456d528..5d2d2f041 100644\n--- a/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/FailbackRegistry.java\n+++ b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/FailbackRegistry.java\n@@ -18,10 +18,14 @@ package org.apache.dubbo.registry.support;\n \r\n import org.apache.dubbo.common.Constants;\r\n import org.apache.dubbo.common.URL;\r\n-import org.apache.dubbo.common.utils.ConcurrentHashSet;\r\n-import org.apache.dubbo.common.utils.ExecutorUtil;\r\n+import org.apache.dubbo.common.timer.HashedWheelTimer;\r\n import org.apache.dubbo.common.utils.NamedThreadFactory;\r\n import org.apache.dubbo.registry.NotifyListener;\r\n+import org.apache.dubbo.registry.retry.FailedNotifiedTask;\r\n+import org.apache.dubbo.registry.retry.FailedRegisteredTask;\r\n+import org.apache.dubbo.registry.retry.FailedSubscribedTask;\r\n+import org.apache.dubbo.registry.retry.FailedUnregisteredTask;\r\n+import org.apache.dubbo.registry.retry.FailedUnsubscribedTask;\r\n \r\n import java.util.HashMap;\r\n import java.util.HashSet;\r\n@@ -30,108 +34,197 @@ import java.util.Map;\n import java.util.Set;\r\n import java.util.concurrent.ConcurrentHashMap;\r\n import java.util.concurrent.ConcurrentMap;\r\n-import java.util.concurrent.Executors;\r\n-import java.util.concurrent.Future;\r\n-import java.util.concurrent.ScheduledExecutorService;\r\n-import java.util.concurrent.ScheduledFuture;\r\n import java.util.concurrent.TimeUnit;\r\n \r\n /**\r\n  * FailbackRegistry. (SPI, Prototype, ThreadSafe)\r\n- *\r\n  */\r\n public abstract class FailbackRegistry extends AbstractRegistry {\r\n \r\n-    // Scheduled executor service\r\n-    private final ScheduledExecutorService retryExecutor = Executors.newScheduledThreadPool(1, new NamedThreadFactory(\"DubboRegistryFailedRetryTimer\", true));\r\n-\r\n-    // Timer for failure retry, regular check if there is a request for failure, and if there is, an unlimited retry\r\n-    private final ScheduledFuture<?> retryFuture;\r\n+    /*  retry task map */\r\n \r\n-    private final Set<URL> failedRegistered = new ConcurrentHashSet<URL>();\r\n+    private final ConcurrentMap<URL, FailedRegisteredTask> failedRegistered = new ConcurrentHashMap<URL, FailedRegisteredTask>();\r\n \r\n-    private final Set<URL> failedUnregistered = new ConcurrentHashSet<URL>();\r\n+    private final ConcurrentMap<URL, FailedUnregisteredTask> failedUnregistered = new ConcurrentHashMap<URL, FailedUnregisteredTask>();\r\n \r\n-    private final ConcurrentMap<URL, Set<NotifyListener>> failedSubscribed = new ConcurrentHashMap<URL, Set<NotifyListener>>();\r\n+    private final ConcurrentMap<Holder, FailedSubscribedTask> failedSubscribed = new ConcurrentHashMap<Holder, FailedSubscribedTask>();\r\n \r\n-    private final ConcurrentMap<URL, Set<NotifyListener>> failedUnsubscribed = new ConcurrentHashMap<URL, Set<NotifyListener>>();\r\n+    private final ConcurrentMap<Holder, FailedUnsubscribedTask> failedUnsubscribed = new ConcurrentHashMap<Holder, FailedUnsubscribedTask>();\r\n \r\n-    private final ConcurrentMap<URL, Map<NotifyListener, List<URL>>> failedNotified = new ConcurrentHashMap<URL, Map<NotifyListener, List<URL>>>();\r\n+    private final ConcurrentMap<Holder, FailedNotifiedTask> failedNotified = new ConcurrentHashMap<Holder, FailedNotifiedTask>();\r\n \r\n     /**\r\n      * The time in milliseconds the retryExecutor will wait\r\n      */\r\n     private final int retryPeriod;\r\n \r\n+    // Timer for failure retry, regular check if there is a request for failure, and if there is, an unlimited retry\r\n+    private final HashedWheelTimer retryTimer;\r\n+\r\n     public FailbackRegistry(URL url) {\r\n         super(url);\r\n         this.retryPeriod = url.getParameter(Constants.REGISTRY_RETRY_PERIOD_KEY, Constants.DEFAULT_REGISTRY_RETRY_PERIOD);\r\n-        this.retryFuture = retryExecutor.scheduleWithFixedDelay(new Runnable() {\r\n-            @Override\r\n-            public void run() {\r\n-                // Check and connect to the registry\r\n-                try {\r\n-                    retry();\r\n-                } catch (Throwable t) { // Defensive fault tolerance\r\n-                    logger.error(\"Unexpected error occur at failed retry, cause: \" + t.getMessage(), t);\r\n-                }\r\n-            }\r\n-        }, retryPeriod, retryPeriod, TimeUnit.MILLISECONDS);\r\n+\r\n+        // since the retry task will not be very much. 128 ticks is enough.\r\n+        retryTimer = new HashedWheelTimer(new NamedThreadFactory(\"DubboRegistryRetryTimer\", true), retryPeriod, TimeUnit.MILLISECONDS, 128);\r\n     }\r\n \r\n-    public Future<?> getRetryFuture() {\r\n-        return retryFuture;\r\n+    public void removeFailedRegisteredTask(URL url) {\r\n+        failedRegistered.remove(url);\r\n     }\r\n \r\n-    public Set<URL> getFailedRegistered() {\r\n-        return failedRegistered;\r\n+    public void removeFailedUnregisteredTask(URL url) {\r\n+        failedUnregistered.remove(url);\r\n     }\r\n \r\n-    public Set<URL> getFailedUnregistered() {\r\n-        return failedUnregistered;\r\n+    public void removeFailedSubscribedTask(URL url, NotifyListener listener) {\r\n+        Holder h = new Holder(url, listener);\r\n+        failedSubscribed.remove(h);\r\n     }\r\n \r\n-    public Map<URL, Set<NotifyListener>> getFailedSubscribed() {\r\n-        return failedSubscribed;\r\n+    public void removeFailedUnsubscribedTask(URL url, NotifyListener listener) {\r\n+        Holder h = new Holder(url, listener);\r\n+        failedUnsubscribed.remove(h);\r\n     }\r\n \r\n-    public Map<URL, Set<NotifyListener>> getFailedUnsubscribed() {\r\n-        return failedUnsubscribed;\r\n+    public void removeFailedNotifiedTask(URL url, NotifyListener listener) {\r\n+        Holder h = new Holder(url, listener);\r\n+        failedNotified.remove(h);\r\n     }\r\n \r\n-    public Map<URL, Map<NotifyListener, List<URL>>> getFailedNotified() {\r\n-        return failedNotified;\r\n+    private void addFailedRegistered(URL url) {\r\n+        FailedRegisteredTask oldOne = failedRegistered.get(url);\r\n+        if (oldOne != null) {\r\n+            return;\r\n+        }\r\n+        FailedRegisteredTask newTask = new FailedRegisteredTask(url, this);\r\n+        oldOne = failedRegistered.putIfAbsent(url, newTask);\r\n+        if (oldOne == null) {\r\n+            // never has a retry task. then start a new task for retry.\r\n+            retryTimer.newTimeout(newTask, retryPeriod, TimeUnit.MILLISECONDS);\r\n+        }\r\n+    }\r\n+\r\n+    private void removeFailedRegistered(URL url) {\r\n+        FailedRegisteredTask f = failedRegistered.remove(url);\r\n+        if (f != null) {\r\n+            f.cancel();\r\n+        }\r\n+    }\r\n+\r\n+    private void addFailedUnregistered(URL url) {\r\n+        FailedUnregisteredTask oldOne = failedUnregistered.get(url);\r\n+        if (oldOne != null) {\r\n+            return;\r\n+        }\r\n+        FailedUnregisteredTask newTask = new FailedUnregisteredTask(url, this);\r\n+        oldOne = failedUnregistered.putIfAbsent(url, newTask);\r\n+        if (oldOne == null) {\r\n+            // never has a retry task. then start a new task for retry.\r\n+            retryTimer.newTimeout(newTask, retryPeriod, TimeUnit.MILLISECONDS);\r\n+        }\r\n+    }\r\n+\r\n+    private void removeFailedUnregistered(URL url) {\r\n+        FailedUnregisteredTask f = failedUnregistered.remove(url);\r\n+        if (f != null) {\r\n+            f.cancel();\r\n+        }\r\n     }\r\n \r\n     private void addFailedSubscribed(URL url, NotifyListener listener) {\r\n-        Set<NotifyListener> listeners = failedSubscribed.get(url);\r\n-        if (listeners == null) {\r\n-            failedSubscribed.putIfAbsent(url, new ConcurrentHashSet<NotifyListener>());\r\n-            listeners = failedSubscribed.get(url);\r\n+        Holder h = new Holder(url, listener);\r\n+        FailedSubscribedTask oldOne = failedSubscribed.get(h);\r\n+        if (oldOne != null) {\r\n+            return;\r\n+        }\r\n+        FailedSubscribedTask newTask = new FailedSubscribedTask(url, this, listener);\r\n+        oldOne = failedSubscribed.putIfAbsent(h, newTask);\r\n+        if (oldOne == null) {\r\n+            // never has a retry task. then start a new task for retry.\r\n+            retryTimer.newTimeout(newTask, retryPeriod, TimeUnit.MILLISECONDS);\r\n         }\r\n-        listeners.add(listener);\r\n     }\r\n \r\n     private void removeFailedSubscribed(URL url, NotifyListener listener) {\r\n-        Set<NotifyListener> listeners = failedSubscribed.get(url);\r\n-        if (listeners != null) {\r\n-            listeners.remove(listener);\r\n+        Holder h = new Holder(url, listener);\r\n+        FailedSubscribedTask f = failedSubscribed.remove(h);\r\n+        if (f != null) {\r\n+            f.cancel();\r\n+        }\r\n+        removeFailedUnsubscribed(url, listener);\r\n+        removeFailedNotified(url, listener);\r\n+    }\r\n+\r\n+    private void addFailedUnsubscribed(URL url, NotifyListener listener) {\r\n+        Holder h = new Holder(url, listener);\r\n+        FailedUnsubscribedTask oldOne = failedUnsubscribed.get(h);\r\n+        if (oldOne != null) {\r\n+            return;\r\n+        }\r\n+        FailedUnsubscribedTask newTask = new FailedUnsubscribedTask(url, this, listener);\r\n+        oldOne = failedUnsubscribed.putIfAbsent(h, newTask);\r\n+        if (oldOne == null) {\r\n+            // never has a retry task. then start a new task for retry.\r\n+            retryTimer.newTimeout(newTask, retryPeriod, TimeUnit.MILLISECONDS);\r\n+        }\r\n+    }\r\n+\r\n+    private void removeFailedUnsubscribed(URL url, NotifyListener listener) {\r\n+        Holder h = new Holder(url, listener);\r\n+        FailedUnsubscribedTask f = failedUnsubscribed.remove(h);\r\n+        if (f != null) {\r\n+            f.cancel();\r\n         }\r\n-        listeners = failedUnsubscribed.get(url);\r\n-        if (listeners != null) {\r\n-            listeners.remove(listener);\r\n+    }\r\n+\r\n+    private void addFailedNotified(URL url, NotifyListener listener, List<URL> urls) {\r\n+        Holder h = new Holder(url, listener);\r\n+        FailedNotifiedTask newTask = new FailedNotifiedTask(url, listener);\r\n+        FailedNotifiedTask f = failedNotified.putIfAbsent(h, newTask);\r\n+        if (f == null) {\r\n+            // never has a retry task. then start a new task for retry.\r\n+            newTask.addUrlToRetry(urls);\r\n+            retryTimer.newTimeout(newTask, retryPeriod, TimeUnit.MILLISECONDS);\r\n+        } else {\r\n+            // just add urls which needs retry.\r\n+            newTask.addUrlToRetry(urls);\r\n         }\r\n-        Map<NotifyListener, List<URL>> notified = failedNotified.get(url);\r\n-        if (notified != null) {\r\n-            notified.remove(listener);\r\n+    }\r\n+\r\n+    private void removeFailedNotified(URL url, NotifyListener listener) {\r\n+        Holder h = new Holder(url, listener);\r\n+        FailedNotifiedTask f = failedNotified.remove(h);\r\n+        if (f != null) {\r\n+            f.cancel();\r\n         }\r\n     }\r\n \r\n+    public ConcurrentMap<URL, FailedRegisteredTask> getFailedRegistered() {\r\n+        return failedRegistered;\r\n+    }\r\n+\r\n+    public ConcurrentMap<URL, FailedUnregisteredTask> getFailedUnregistered() {\r\n+        return failedUnregistered;\r\n+    }\r\n+\r\n+    public ConcurrentMap<Holder, FailedSubscribedTask> getFailedSubscribed() {\r\n+        return failedSubscribed;\r\n+    }\r\n+\r\n+    public ConcurrentMap<Holder, FailedUnsubscribedTask> getFailedUnsubscribed() {\r\n+        return failedUnsubscribed;\r\n+    }\r\n+\r\n+    public ConcurrentMap<Holder, FailedNotifiedTask> getFailedNotified() {\r\n+        return failedNotified;\r\n+    }\r\n+\r\n     @Override\r\n     public void register(URL url) {\r\n         super.register(url);\r\n-        failedRegistered.remove(url);\r\n-        failedUnregistered.remove(url);\r\n+        removeFailedRegistered(url);\r\n+        removeFailedUnregistered(url);\r\n         try {\r\n             // Sending a registration request to the server side\r\n             doRegister(url);\r\n@@ -153,15 +246,15 @@ public abstract class FailbackRegistry extends AbstractRegistry {\n     ",
    "Regenerate the parser": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParser.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParser.java\nindex 5fe7d6b868f..772cbd6d81d 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParser.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParser.java\n@@ -80,8 +80,8 @@ public class BallerinaParser extends Parser {\n \t\tRULE_objectFunctionDefinition = 23, RULE_annotationDefinition = 24, RULE_constantDefinition = 25, \n \t\tRULE_globalVariableDefinition = 26, RULE_channelType = 27, RULE_attachmentPoint = 28, \n \t\tRULE_workerDeclaration = 29, RULE_workerDefinition = 30, RULE_finiteType = 31, \n-\t\tRULE_finiteTypeUnit = 32, RULE_typeName = 33, RULE_openRecordTypeDescriptor = 34, \n-\t\tRULE_closedRecordTypeDescriptor = 35, RULE_fieldDescriptor = 36, RULE_simpleTypeName = 37, \n+\t\tRULE_finiteTypeUnit = 32, RULE_typeName = 33, RULE_inclusiveRecordTypeDescriptor = 34, \n+\t\tRULE_exclusiveRecordTypeDescriptor = 35, RULE_fieldDescriptor = 36, RULE_simpleTypeName = 37, \n \t\tRULE_referenceTypeName = 38, RULE_userDefineTypeName = 39, RULE_valueTypeName = 40, \n \t\tRULE_builtInReferenceTypeName = 41, RULE_functionTypeName = 42, RULE_errorTypeName = 43, \n \t\tRULE_xmlNamespaceName = 44, RULE_xmlLocalName = 45, RULE_annotationAttachment = 46, \n@@ -157,18 +157,18 @@ public class BallerinaParser extends Parser {\n \t\t\"sealedLiteral\", \"restDescriptorPredicate\", \"objectFunctionDefinition\", \n \t\t\"annotationDefinition\", \"constantDefinition\", \"globalVariableDefinition\", \n \t\t\"channelType\", \"attachmentPoint\", \"workerDeclaration\", \"workerDefinition\", \n-\t\t\"finiteType\", \"finiteTypeUnit\", \"typeName\", \"openRecordTypeDescriptor\", \n-\t\t\"closedRecordTypeDescriptor\", \"fieldDescriptor\", \"simpleTypeName\", \"referenceTypeName\", \n-\t\t\"userDefineTypeName\", \"valueTypeName\", \"builtInReferenceTypeName\", \"functionTypeName\", \n-\t\t\"errorTypeName\", \"xmlNamespaceName\", \"xmlLocalName\", \"annotationAttachment\", \n-\t\t\"statement\", \"variableDefinitionStatement\", \"recordLiteral\", \"staticMatchLiterals\", \n-\t\t\"tupleLiteral\", \"recordKeyValue\", \"recordKey\", \"tableLiteral\", \"tableColumnDefinition\", \n-\t\t\"tableColumn\", \"tableDataArray\", \"tableDataList\", \"tableData\", \"arrayLiteral\", \n-\t\t\"assignmentStatement\", \"tupleDestructuringStatement\", \"recordDestructuringStatement\", \n-\t\t\"errorDestructuringStatement\", \"compoundAssignmentStatement\", \"compoundOperator\", \n-\t\t\"variableReferenceList\", \"ifElseStatement\", \"ifClause\", \"elseIfClause\", \n-\t\t\"elseClause\", \"matchStatement\", \"matchPatternClause\", \"bindingPattern\", \n-\t\t\"structuredBindingPattern\", \"errorBindingPattern\", \"tupleBindingPattern\", \n+\t\t\"finiteType\", \"finiteTypeUnit\", \"typeName\", \"inclusiveRecordTypeDescriptor\", \n+\t\t\"exclusiveRecordTypeDescriptor\", \"fieldDescriptor\", \"simpleTypeName\", \n+\t\t\"referenceTypeName\", \"userDefineTypeName\", \"valueTypeName\", \"builtInReferenceTypeName\", \n+\t\t\"functionTypeName\", \"errorTypeName\", \"xmlNamespaceName\", \"xmlLocalName\", \n+\t\t\"annotationAttachment\", \"statement\", \"variableDefinitionStatement\", \"recordLiteral\", \n+\t\t\"staticMatchLiterals\", \"tupleLiteral\", \"recordKeyValue\", \"recordKey\", \n+\t\t\"tableLiteral\", \"tableColumnDefinition\", \"tableColumn\", \"tableDataArray\", \n+\t\t\"tableDataList\", \"tableData\", \"arrayLiteral\", \"assignmentStatement\", \"tupleDestructuringStatement\", \n+\t\t\"recordDestructuringStatement\", \"errorDestructuringStatement\", \"compoundAssignmentStatement\", \n+\t\t\"compoundOperator\", \"variableReferenceList\", \"ifElseStatement\", \"ifClause\", \n+\t\t\"elseIfClause\", \"elseClause\", \"matchStatement\", \"matchPatternClause\", \n+\t\t\"bindingPattern\", \"structuredBindingPattern\", \"errorBindingPattern\", \"tupleBindingPattern\", \n \t\t\"recordBindingPattern\", \"openRecordBindingPattern\", \"closedRecordBindingPattern\", \n \t\t\"entryBindingPattern\", \"fieldBindingPattern\", \"restBindingPattern\", \"bindingRefPattern\", \n \t\t\"structuredRefBindingPattern\", \"tupleRefBindingPattern\", \"recordRefBindingPattern\", \n@@ -2845,20 +2845,6 @@ public class BallerinaParser extends Parser {\n \t\t\tsuper.copyFrom(ctx);\n \t\t}\n \t}\n-\tpublic static class OpenRecordTypeNameLabelContext extends TypeNameContext {\n-\t\tpublic OpenRecordTypeDescriptorContext openRecordTypeDescriptor() {\n-\t\t\treturn getRuleContext(OpenRecordTypeDescriptorContext.class,0);\n-\t\t}\n-\t\tpublic OpenRecordTypeNameLabelContext(TypeNameContext ctx) { copyFrom(ctx); }\n-\t\t@Override\n-\t\tpublic void enterRule(ParseTreeListener listener) {\n-\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).enterOpenRecordTypeNameLabel(this);\n-\t\t}\n-\t\t@Override\n-\t\tpublic void exitRule(ParseTreeListener listener) {\n-\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).exitOpenRecordTypeNameLabel(this);\n-\t\t}\n-\t}\n \tpublic static class TupleTypeNameLabelContext extends TypeNameContext {\n \t\tpublic TerminalNode LEFT_PARENTHESIS() { return getToken(BallerinaParser.LEFT_PARENTHESIS, 0); }\n \t\tpublic List<TypeNameContext> typeName() {\n@@ -2903,6 +2889,20 @@ public class BallerinaParser extends Parser {\n \t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).exitUnionTypeNameLabel(this);\n \t\t}\n \t}\n+\tpublic static class ExclusiveRecordTypeNameLabelContext extends TypeNameContext {\n+\t\tpublic ExclusiveRecordTypeDescriptorContext exclusiveRecordTypeDescriptor() {\n+\t\t\treturn getRuleContext(ExclusiveRecordTypeDescriptorContext.class,0);\n+\t\t}\n+\t\tpublic ExclusiveRecordTypeNameLabelContext(TypeNameContext ctx) { copyFrom(ctx); }\n+\t\t@Override\n+\t\tpublic void enterRule(ParseTreeListener listener) {\n+\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).enterExclusiveRecordTypeNameLabel(this);\n+\t\t}\n+\t\t@Override\n+\t\tpublic void exitRule(ParseTreeListener listener) {\n+\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).exitExclusiveRecordTypeNameLabel(this);\n+\t\t}\n+\t}\n \tpublic static class SimpleTypeNameLabelContext extends TypeNameContext {\n \t\tpublic SimpleTypeNameContext simpleTypeName() {\n \t\t\treturn getRuleContext(SimpleTypeNameContext.class,0);\n@@ -2932,20 +2932,6 @@ public class BallerinaParser extends Parser {\n \t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).exitNullableTypeNameLabel(this);\n \t\t}\n \t}\n-\tpublic static class ClosedRecordTypeNameLabelContext extends TypeNameContext {\n-\t\tpublic ClosedRecordTypeDescriptorContext closedRecordTypeDescriptor() {\n-\t\t\treturn getRuleContext(ClosedRecordTypeDescriptorContext.class,0);\n-\t\t}\n-\t\tpublic ClosedRecordTypeNameLabelContext(TypeNameContext ctx) { copyFrom(ctx); }\n-\t\t@Override\n-\t\tpublic void enterRule(ParseTreeListener listener) {\n-\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).enterClosedRecordTypeNameLabel(this);\n-\t\t}\n-\t\t@Override\n-\t\tpublic void exitRule(ParseTreeListener listener) {\n-\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).exitClosedRecordTypeNameLabel(this);\n-\t\t}\n-\t}\n \tpublic static class ArrayTypeNameLabelContext extends TypeNameContext {\n \t\tpublic TypeNameContext typeName() {\n \t\t\treturn getRuleContext(TypeNameContext.class,0);\n@@ -3013,6 +2999,20 @@ public class BallerinaParser extends Parser {\n \t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).exitGroupTypeNameLabel(this);\n \t\t}\n \t}\n+\tpublic static class InclusiveRecordTypeNameLabelContext extends TypeNameContext {\n+\t\tpublic InclusiveRecordTypeDescriptorContext inclusiveRecordTypeDescriptor() {\n+\t\t\treturn getRuleContext(InclusiveRecordTypeDescriptorContext.class,0);\n+\t\t}\n+\t\tpublic InclusiveRecordTypeNameLabelContext(TypeNameContext ctx) { copyFrom(ctx); }\n+\t\t@Override\n+\t\tpublic void enterRule(ParseTreeListener listener) {\n+\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).enterInclusiveRecordTypeNameLabel(this);\n+\t\t}\n+\t\t@Override\n+\t\tpublic void exitRule(ParseTreeListener listener) {\n+\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).exitInclusiveRecordTypeNameLabel(this);\n+\t\t}\n+\t}\n \n \tpublic final TypeNameContext typeName() throws RecognitionException {\n \t\treturn typeName(0);\n@@ -3147,20 +3147,20 @@ public class BallerinaParser extends Parser {\n \t\t\t\tbreak;\n \t\t\tcase 5:\n \t\t\t\t{\n-\t\t\t\t_localctx = new OpenRecordTypeNameLabelContext(_localctx);\n+\t\t\t\t_localctx = new InclusiveRecordTypeNameLabelContext(_localctx);\n \t\t\t\t_ctx = _localctx;\n \t\t\t\t_prevctx = _localctx;\n \t\t\t\tsetState(847);\n-\t\t\t\topenRecordTypeDescriptor();\n+\t\t\t\tinclusiveRecordTypeDescriptor();\n \t\t\t\t}\n \t\t\t\tbreak;\n \t\t\tcase 6:\n \t\t\t\t{\n-\t\t\t\t_localctx = new ClosedRecordTypeNameLabelContext(_localctx);\n+\t\t\t\t_localctx = new ExclusiveRecordTypeNameLabelContext(_localctx);\n \t\t\t\t_ctx = _localctx;\n \t\t\t\t_prevctx = _localctx;\n \t\t\t\tsetState(848);\n-\t\t\t\tclosedRecordTypeDescriptor();\n+\t\t\t\texclusiveRecordTypeDescriptor();\n \t\t\t\t}\n \t\t\t\tbreak;\n \t\t\t}\n@@ -3286,7 +3286,7 @@ public class BallerinaParser extends Parser {\n \t\treturn _localctx;\n \t}\n \n-\tpublic static class OpenRecordTypeDescriptorContext extends ParserRuleContext {\n+\tpublic static class InclusiveRecordTypeDescriptorContext extends ParserRuleContext {\n \t\tpublic TerminalNode RECORD() { return getToken(BallerinaParser.RECORD, 0); }\n \t\tpublic TerminalNode LEFT_BRACE() { return getToken(BallerinaParser.LEFT_BRACE, 0); }\n \t\tpublic TerminalNode RIGHT_BRACE() { return getToken(BallerinaParser.RIGHT_BRACE, 0); }\n@@ -3296,29 +3296,25 @@ public class BallerinaParser extends Parser {\n \t\tpublic FieldDescriptorContext fieldDescriptor(int i) {\n \t\t\treturn getRuleContext(FieldDescriptorContext.class,i);\n \t\t}\n-\t\tpublic RecordRestFieldDefinitionContext recordRestFieldDefinition() {\n-\t\t\treturn getRuleContext(RecordRestFieldDefinitionContext.class,0);\n-\t\t}\n-\t\tpublic OpenRecordTypeDescriptorContext(ParserRuleContext parent, int invokingState) {\n+\t\tpublic InclusiveRecordTypeDescriptorContext(ParserRuleContext parent, int invokingState) {\n \t\t\tsuper(parent, invokingState);\n \t\t}\n-\t\t@Override public int getRuleIndex() { return RULE_openRecordTypeDescriptor; }\n+\t\t@Override public int getRuleIndex() { return RULE_inclusiveRecordTypeDescriptor; }\n \t\t@Override\n \t\tpublic void enterRule(ParseTreeListener listener) {\n-\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).enterOpenRecordTypeDescriptor(this);\n+\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).enterInclusiveRecordTypeDescriptor(this);\n \t\t}\n \t\t@Override\n \t\tpublic void exitRule(ParseTreeListener listener) {\n-\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).exitOpenRecordTypeDescriptor(this);\n+\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).exitInclusiveRecordTypeDescriptor(this);\n \t\t}\n \t}\n \n-\tpublic final OpenRecordTypeDescriptorContext openRecordTypeDescriptor() throws RecognitionException {\n-\t\tOpenRecordTypeDescriptorContext _localctx = new OpenRecordTypeDescriptorContext(_ctx, getState());\n-\t\tenterRule(_localctx, 68, RULE_openRecordTypeDescriptor);\n+\tpublic final InclusiveRecordTypeDescriptorContext inclusiveRecordTypeDescriptor() throws RecognitionException {\n+\t\tInclusiveRecordTypeDescriptorContext _localctx = new InclusiveRecordTypeDescriptorContext(_ctx, getState());\n+\t\tenterRule(_localctx, 68, RULE_inclusiveRecordTypeDescriptor);\n \t\tint _la;\n \t\ttry {\n-\t\t\tint _alt;\n \t\t\tenterOuterAlt(_localctx, 1);\n \t\t\t{\n \t\t\tsetState(876);\n@@ -3327,30 +3323,19 @@ public class BallerinaParser extends Parser {\n \t\t\tmatch(LEFT_BRACE);\n \t\t\tsetState(881);\n \t\t\t_errHandler.sync(this);\n-\t\t\t_alt = getInterpreter().adaptivePredict(_input,69,_ctx);\n-\t\t\twhile ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {\n-\t\t\t\tif ( _alt==1 ) {\n-\t\t\t\t\t{\n-\t\t\t\t\t{\n-\t\t\t\t\tsetState(878);\n-\t\t\t\t\tfieldDescriptor();\n-\t\t\t\t\t}\n-\t\t\t\t\t} \n-\t\t\t\t}\n-\t\t\t\tsetState(883);\n-\t\t\t\t_errHandler.sync(this);\n-\t\t\t\t_alt = getInterpreter().adaptivePredict(_input,69,_ctx);\n-\t\t\t}\n-\t\t\tsetState(885);\n \t\t\t_la = _input.LA(1);\n-\t\t\tif ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << SERVICE) | (1L << FUNCTION) | (1L << OBJECT) | (1L << RECORD) | (1L << ABSTRACT) | (1L << CLIENT))) != 0) || ((((_la - 65)) & ~0x3f) == 0 && ((1L << (_la - 65)) & ((1L << (TYPE_INT - 65)) | (1L << (TYPE_BYTE - 65)) | (1L << (TYPE_FLOAT - 65)) | (1L << (TYPE_DECIMAL - 65)) | (1L << (TYPE_BOOL - 65)) | (1L << (TYPE_STRING - 65)) | (1L << (TYPE_ERROR - 65)) | (1L << (TYPE_MAP - 65)) | (1L << (TYPE_JSON - 65)) | (1L << (TYPE_XML - 65)) | (1L << (TYPE_TABLE - 65)) | (1L << (TYPE_STREAM - 65)) | (1L << (TYPE_ANY - 65)) | (1L << (TYPE_DESC - 65)) | (1L << (TYPE_FUTURE - 65)) | (1L << (TYPE_ANYDATA - 65)))) != 0) || _la==LEFT_PARENTHESIS || _la==Identifier) {\n+\t\t\twhile ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << SERVICE) | (1L << FUNCTION) | (1L << OBJECT) | (1L << RECORD) | (1L << ABSTRACT) | (1L << CLIENT))) != 0) || ((((_la - 65)) & ~0x3f) == 0 && ((1L << (_la - 65)) & ((1L << (TYPE_INT - 65)) | (1L << (TYPE_BYTE - 65)) | (1L << (TYPE_FLOAT - 65)) | (1L << (TYPE_DECIMAL - 65)) | (1L << (TYPE_BOOL - 65)) | (1L << (TYPE_STRING - 65)) | (1L << (TYPE_ERROR - 65)) | (1L << (TYPE_MAP - 65)) | (1L << (TYPE_JSON - 65)) | (1L << (TYPE_XML - 65)) | (1L << (TYPE_TABLE - 65)) | (1L << (TYPE_STREAM - 65)) | (1L << (TYPE_ANY - 65)) | (1L << (TYPE_DESC - 65)) | (1L << (TYPE_FUTURE - 65)) | (1L << (TYPE_ANYDATA - 65)))) != 0) || ((((_la - 129)) & ~0x3f) == 0 && ((1L << (_la - 129)) & ((1L << (LEFT_PARENTHESIS - 129)) | (1L << (MUL - 129)) | (1L << (AT - 129)) | (1L << (Identifier - 129)))) != 0)) {\n \t\t\t\t{\n-\t\t\t\tsetState(884);\n-\t\t\t\trecordRestFieldDefinition();\n+\t\t\t\t{\n+\t\t\t\tsetState(878);\n+\t\t\t\tfieldDescriptor();\n \t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tsetState(883);\n+\t\t\t\t_errHandler.sync(this);\n+\t\t\t\t_la = _input.LA(1);\n \t\t\t}\n-\n-\t\t\tsetState(887);\n+\t\t\tsetState(884);\n \t\t\tmatch(RIGHT_BRACE);\n \t\t\t}\n \t\t}\n@@ -3365,7 +3350,7 @@ public class BallerinaParser extends Parser {\n \t\treturn _localctx;\n \t}\n \n-\tpublic static class ClosedRecordTypeDescriptorContext extends ParserRuleContext {\n+\tpublic static class ExclusiveRecordTypeDescriptorContext extends ParserRuleContext {\n \t\tpublic TerminalNode RECORD() { return getToken(BallerinaParser.RECORD, 0); }\n \t\tpublic TerminalNode LEFT_CLOSED_RECORD_DELIMITER() { return getToken(BallerinaParser.LEFT_CLOSED_RECORD_DELIMITER, 0); }\n \t\tpublic TerminalNode RIGHT_CLOSED_RECORD_DELIMITER() { return getToken(BallerinaParser.RIGHT_CLOSED_RECORD_DELIMITER, 0); }\n@@ -3375,45 +3360,60 @@ public class BallerinaParser extends Parser {\n \t\tpublic FieldDescriptorContext fieldDescriptor(int i) {\n \t\t\treturn getRuleContext(FieldDescriptorContext.class,i);\n \t\t}\n-\t\tpublic ClosedRecordTypeDescriptorContext(ParserRuleContext parent, int invokingState) {\n+\t\tpublic RecordRestFieldDefinitionContext recordRestFieldDefinition() {\n+\t\t\treturn getRuleContext(RecordRestFieldDefinitionContext.class,0);\n+\t\t}\n+\t\tpublic ExclusiveRecordTypeDescriptorContext(ParserRuleContext parent, int invokingState) {\n \t\t\tsuper(parent, invokingState);\n \t\t}\n-\t\t@Override public int getRuleIndex() { return RULE_closedRecordTypeDescriptor; }\n+\t\t@Override public int getRuleIndex() { return RULE_exclusiveRecordTypeDescriptor; }\n \t\t@Override\n \t\tpublic void enterRule(ParseTreeListener listener) {\n-\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).enterClosedRecordTypeDescriptor(this);\n+\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).enterExclusiveRecordTypeDescriptor(this);\n \t\t}\n \t\t@Override\n \t\tpublic void exitRule(ParseTreeListener listener) {\n-\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).exitClosedRecordTypeDescriptor(this);\n+\t\t\tif ( listener instanceof BallerinaParserListener ) ((BallerinaParserListener)listener).exitExclusiveRecordTypeDescriptor(this);\n \t\t}\n \t}\n \n-\tpublic final ClosedRecordTypeDescriptorContext closedRecordTypeDescriptor() throws RecognitionException {\n-\t\tClosedRecordTypeDescriptorContext _localctx = new ClosedRecordTypeDescriptorContext(_ctx, getState());\n-\t\tenterRule(_localctx, 70, RULE_closedRecordTypeDescriptor);\n+\tpublic final ExclusiveRecordTypeDescriptorContext exclusiveRecordTypeDescriptor() throws RecognitionException {\n+\t\tExclusiveRecordTypeDescriptorContext _localctx = new ExclusiveRecordTypeDescriptorContext(_ctx, getState());\n+\t\tenterRule(_localctx, 70, RULE_exclusiveRecordTypeDescriptor);\n \t\tint _la;\n \t\ttry {\n+\t\t\tint _alt;\n \t\t\tenterOuterAlt(_localctx, 1);\n \t\t\t{\n-\t\t\tsetState(889);\n+\t\t\tsetState(886);\n \t\t\tmatch(RECORD);\n-\t\t\tsetState(890);\n+\t\t\tsetState(887);\n \t\t\tmatch(LEFT_CLOSED_RECORD_DELIMITER);\n-\t\t\tsetState(894);\n+\t\t\tsetState(891);\n \t\t\t_errHandler.sync(this);\n+\t\t\t_alt = getInterpreter().adaptivePredict(_input,70,_ctx);\n+\t\t\twhile ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {\n+\t\t\t\tif ( _alt==1 ) {\n+\t\t\t\t\t{\n+\t\t\t\t\t{\n+\t\t\t\t\tsetState(888);\n+\t\t\t\t\tfieldDescriptor();\n+\t\t\t\t\t}\n+\t\t\t\t\t} \n+\t\t\t\t}\n+\t\t\t\tsetState(893);\n+\t\t\t\t_errHandler.sync(this);\n+\t\t\t\t_alt = getInterpreter().adaptivePredict(_input,70,_ctx);\n+\t\t\t}\n+\t\t\tsetState(895);\n \t\t\t_la = _input.LA(1);\n-\t\t\twhile ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << SERVICE) | (1L << FUNCTION) | (1L << OBJECT) | (1L << RECORD) | (1L << ABSTRACT) | (1L << CLIENT))) != 0) || ((((_la - 65)) & ~0x3f) == 0 && ((1L << (_la - 65)) & ((1L << (TYPE_INT - 65)) | (1L << (TYPE_BYTE - 65)) | (1L << (TYPE_FLOAT - 65)) | (1L << (TYPE_DECIMAL - 65)) | (1L << (TYPE_BOOL - 65)) | (1L << (TYPE_STRING - 65)) | (1L << (TYPE_ERROR - 65)) | (1L << (TYPE_MAP - 65)) | (1L << (TYPE_JSON - 65)) | (1L << (TYPE_XML - 65)) | (1L << (TYPE_TABLE - 65)) | (1L << (TYPE_STREAM - 65)) | (1L << (TYPE_ANY - 65)) | (1L << (TYPE_DESC - 65)) | (1L << (TYPE_FUTURE - 65)) | (1L << (TYPE_ANYDATA - 65)))) != 0) || ((((_la - 129)) & ~0x3f) == 0 && ((1L << (_la - 129)) & ((1L << (LEFT_PARENTHESIS - 129)) | (1L << (MUL - 129)) | (1L << (AT - 129)) | (1L << (Identifier - 129)))) != 0)) {\n-\t\t\t\t{\n+\t\t\tif ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << SERVICE) | (1L << FUNCTION) | (1L << OBJECT) | (1L << RECORD) | (1L << ABSTRACT) | (1L << CLIENT))) != 0) || ((((_la - 65)) & ~0x3f) == 0 && ((1L << (_la - 65)) & ((1L << (TYPE_INT - 65)) | (1L << (TYPE_BYTE - 65)) | (1L << (TYPE_FLOAT - 65)) | (1L << (TYPE_DECIMAL - 65)) | (1L << (TYPE_BOOL - 65)) | (1L << (TYPE_STRING - 65)) | (1L << (TYPE_ERROR - 65)) | (1L << (TYPE_MAP - 65)) | (1L << (TYPE_JSON - 65)) | (1L << (TYPE_XML - 65)) | (1L << (TYPE_TABLE - 65)) | (1L << (TYPE_STREAM - 65)) | (1L << (TYPE_ANY - 65)) | (1L << (TYPE_DESC - 65)) | (1L << (TYPE_FUTURE - 65)) | (1L << (TYPE_ANYDATA - 65)))) != 0) || _la==LEFT_PARENTHESIS || _la==Identifier) {\n \t\t\t\t{\n-\t\t\t\tsetState(891);\n-\t\t\t\tfieldDescriptor();\n-\t\t\t\t}\n+\t\t\t\tsetState(894);\n+\t\t\t\trecordRestFieldDefinition();\n \t\t\t\t}\n-\t\t\t\tsetState(896);\n-\t\t\t\t_errHandler.sync(this);\n-\t\t\t\t_la = _input.LA(1);\n \t\t\t}\n+\n \t\t\tsetState(897);\n \t\t\tmatch(RIGHT_CLOSED_RECORD_DELIMITER);\n \t\t\t}\n@@ -17659,7 +17659,7 @@ public class BallerinaParser extends Parser {\n \t\t\"\\5#\\u0348\\n#\\3#\\5#\\u034b\\n#\\3#\\3#\\3#\\3#\\3#\\3#\\3#\\5#\\u0354\\n#\\3#\\3#\\3#\"+\n \t\t\"\\3#\\5#\\u035a\\n#\\3#\\6#\\u035d\\n#\\r#\\16#\\u035e\\3#\\3#\\3#\\6#\\u0364\\n#\\r#\\16\"+\n \t\t\"#\\u0365\\3#\\3#\\7#\\u036a\\n#\\f#\\16#\\u036d\\13#\\3$\\3$\\3$\\7$\\u0372\\n$\\f$\\16\"+\n-\t\t\"$\\u0375\\13$\\3$\\5$\\u0378\\n$\\3$\\3$\\3%\\3%\\3%\\7%\\u037f\\n%\\f%\\16%\\u0382\\13\"+\n+\t\t\"$\\u0375\\13$\\3$\\3$\\3%\\3%\\3%\\7%\\u037c\\n%\\f%\\16%\\u037f\\13%\\3%\\5%\\u0382\\n\"+\n \t\t\"%\\3%\\3%\\3&\\3&\\5&\\u0388\\n&\\3\\'\\3\\'\\3\\'\\3\\'\\3\\'\\3\\'\\5\\'\\u0390\\n\\'\\3(\\3(\"+\n \t\t\"\\5(\\u0394\\n(\\3)\\3)\\3*\\3*\\3+\\3+\\3+\\3+\\3+\\3+\\3+\\3+\\3+\\3+\\3+\\3+\\3+\\3+\\3+\"+\n \t\t\"\\3+\\3+\\3+\\3+\\3+\\3+\\3+\\3+\\3+\\3+\\5+\\u03b3\\n+\\3,\\3,\\3,\\3,\\5,\\u03b9\\n,\\3,\"+\n@@ -17853,7 +17853,7 @@ public class BallerinaParser extends Parser {\n \t\t\"\\2\\2\\2.\\u02b1\\3\\2\\2\\2\\60\\u02b4\\3\\2\\2\\2\\62\\u02cd\\3\\2\\2\\2\\64\\u02e4\\3\\2\\2\"+\n \t\t\"\\2\\66\\u030b\\3\\2\\2\\28\\u030d\\3\\2\\2\\2:\\u0312\\3\\2\\2\\2<\\u0314\\3\\2\\2\\2>\\u031e\"+\n \t\t\"\\3\\2\\2\\2@\\u0323\\3\\2\\2\\2B\\u032d\\3\\2\\2\\2D\\u0353\\3\\2\\2\\2F\\u036e\\3\\2\\2\\2H\"+\n-\t\t\"\\u037b\\3\\2\\2\\2J\\u0387\\3\\2\\2\\2L\\u038f\\3\\2\\2\\2N\\u0393\\3\\2\\2\\2P\\u0395\\3\\2\"+\n+\t\t\"\\u0378\\3\\2\\2\\2J\\u0387\\3\\2\\2\\2L\\u038f\\3\\2\\2\\2N\\u0393\\3\\2\\2\\2P\\u0395\\3\\2\"+\n \t\t\"\\2\\2R\\u0397\\3\\2\\2\\2T\\u03b2\\3\\2\\2\\2V\\u03b4\\3\\2\\2\\2X\\u03be\\3\\2\\2\\2Z\\u03c9\"+\n \t\t\"\\3\\2\\2\\2\\\\\\u03cb\\3\\2\\2\\2^\\u03cd\\3\\2\\2\\2`\\u03ec\\3\\2\\2\\2b\\u03fe\\3\\2\\2\\2\"+\n \t\t\"d\\u0400\\3\\2\\2\\2f\\u0412\\3\\2\\2\\2h\\u041c\\3\\2\\2\\2j\\u0427\\3\\2\\2\\2l\\u042d\\3\"+\n@@ -18052,12 +18052,12 @@ public class BallerinaParser extends Parser {\n \t\t\"\\3\\2\\2\\2\\u0369\\u0367\\3\\2\\2\\2\\u036a\\u036d\\3\\2\\2\\2\\u036b\\u0369\\3\\2\\2\\2\\u036b\"+\n \t\t\"\\u036c\\3\\2\\2\\2\\u036cE\\3\\2\\2\\2\\u036d\\u036b\\3\\2\\2\\2\\u036e\\u036f\\7\\r\\2\\2\"+\n \t\t\"\\u036f\\u0373\\7\\u0081\\2\\2\\u0370\\u0372\\5J&\\2\\u0371\\u0370\\3\\2\\2\\2\\u0372\\u0375\"+\n-\t\t\"\\3\\2\\2\\2\\u0373\\u0371\\3\\2\\2\\2\\u0373\\u0374\\3\\2\\2\\2\\u0374\\u0377\\3\\2\\2\\2\\u0375\"+\n-\t\t\"\\u0373\\3\\2\\2\\2\\u0376\\u0378\\5*\\26\\2\\u0377\\u0376\\3\\2\\2\\2\\u0377\\u0378\\3\\2\"+\n-\t\t\"\\2\\2\\u0378\\u0379\\3\\2\\2\\2\\u0379\\u037a\\7\\u0082\\2\\2\\u037aG\\3\\2\\2\\2\\u037b\"+\n-\t\t\"\\u037c\\7\\r\\2\\2\\u037c\\u0380\\7\\u0088\\2\\2\\u037d\\u037f\\5J&\\2\\u037e\\u037d\\3\"+\n-\t\t\"\\2\\2\\2\\u037f\\u0382\\3\\2\\2\\2\\u0380\\u037e\\3\\2\\2\\2\\u0380\\u0381\\3\\2\\2\\2\\u0381\"+\n-\t\t\"\\u0383\\3\\2\\2\\2\\u0382\\u0380\\3\\2\\2\\2\\u0383\\u0384\\7\\u0089\\2\\2\\u0384I\\3\\2\"+\n+\t\t\"\\3\\2\\2\\2\\u0373\\u0371\\3\\2\\2\\2\\u0373\\u0374\\3\\2\\2\\2\\u0374\\u0376\\3\\2\\2\\2\\u0375\"+\n+\t\t\"\\u0373\\3\\2\\2\\2\\u0376\\u0377\\7\\u0082\\2\\2\\u0377G\\3\\2\\2\\2\\u0378\\u0379\\7\\r\"+\n+\t\t\"\\2\\2\\u0379\\u037d\\7\\u0088\\2\\2\\u037a\\u037c\\5J&\\2\\u037b\\u037a\\3\\2\\2\\2\\u037c\"+\n+\t\t\"\\u037f\\3\\2\\2\\2\\u037d\\u037b\\3\\2\\2\\2\\u037d\\u037e\\3\\2\\2\\2\\u037e\\u0381\\3\\2\"+\n+\t\t\"\\2\\2\\u037f\\u037d\\3\\2\\2\\2\\u0380\\u0382\\5*\\26\\2\\u0381\\u0380\\3\\2\\2\\2\\u0381\"+\n+\t\t\"\\u0382\\3\\2\\2\\2\\u0382\\u0383\\3\\2\\2\\2\\u0383\\u0384\\7\\u0089\\2\\2\\u0384I\\3\\2\"+\n \t\t\"\\2\\2\\u0385\\u0388\\5(\\25\\2\\u0386\\u0388\\5$\\23\\2\\u0387\\u0385\\3\\2\\2\\2\\u0387\"+\n \t\t\"\\u0386\\3\\2\\2\\2\\u0388K\\3\\2\\2\\2\\u0389\\u0390\\7O\\2\\2\\u038a\\u0390\\7S\\2\\2\\u038b\"+\n \t\t\"\\u0390\\7P\\2\\2\\u038c\\u0390\\5R*\\2\\u038d\\u0390\\5N(\\2\\u038e\\u0390\\5\\u0144\"+\n@@ -18657,7 +18657,7 @@ public class BallerinaParser extends Parser {\n \t\t\"\\u025d\\u0260\\u0265\\u026c\\u0270\\u0273\\u027d\\u027f\\u0289\\u028d\\u0293\\u029a\"+\n \t\t\"\\u02a0\\u02a4\\u02b4\\u02b9\\u02bd\\u02c0\\u02c7\\u02ca\\u02cd\\u02d6\\u02db\\u02df\"+\n \t\t\"\\u02e4\\u02e8\\u02f0\\u02fa\\u02fe\\u030b\\u0319\\u0321\\u0328\\u032d\\u033b\\u0341\"+\n-\t\t\"\\u0344\\u0347\\u034a\\u0353\\u0359\\u035e\\u0365\\u0369\\u036b\\u0373\\u0377\\u0380\"+\n+\t\t\"\\u0344\\u0347\\u034a\\u0353\\u0359\\u035e\\u0365\\u0369\\u036b\\u0373\\u037d\\u0381\"+\n \t\t\"\\u0387\\u038f\\u0393\\u03b2\\u03b8\\u03bc\\u03c3\\u03c7\\u03d0\\u03ec\\u03f3\\u03f7\"+\n \t\t\"\\u03fe\\u0406\\u0409\\u0412\\u0419\\u0422\\u042d\\u0432\\u0436\\u0440\\u0443\\u0448\"+\n \t\t\"\\u044e\\u0457\\u045b\\u0463\\u0487\\u048e\\u0492\\u049a\\u04a6\\u04b0\\u04bb\\u04c6\"+\ndiff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParserBaseListener.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParserBaseListener.java\nindex 3aa83943773..f81874ba341 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParserBaseListener.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParserBaseListener.java\n@@ -412,37 +412,37 @@ public class BallerinaParserBaseListener implements BallerinaParserListener {\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void enterOpenRecordTypeNameLabel(BallerinaParser.OpenRecordTypeNameLabelContext ctx) { }\n+\t@Override public void enterTupleTypeNameLabel(BallerinaParser.TupleTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void exitOpenRecordTypeNameLabel(BallerinaParser.OpenRecordTypeNameLabelContext ctx) { }\n+\t@Override public void exitTupleTypeNameLabel(BallerinaParser.TupleTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void enterTupleTypeNameLabel(BallerinaParser.TupleTypeNameLabelContext ctx) { }\n+\t@Override public void enterUnionTypeNameLabel(BallerinaParser.UnionTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void exitTupleTypeNameLabel(BallerinaParser.TupleTypeNameLabelContext ctx) { }\n+\t@Override public void exitUnionTypeNameLabel(BallerinaParser.UnionTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void enterUnionTypeNameLabel(BallerinaParser.UnionTypeNameLabelContext ctx) { }\n+\t@Override public void enterExclusiveRecordTypeNameLabel(BallerinaParser.ExclusiveRecordTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void exitUnionTypeNameLabel(BallerinaParser.UnionTypeNameLabelContext ctx) { }\n+\t@Override public void exitExclusiveRecordTypeNameLabel(BallerinaParser.ExclusiveRecordTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n@@ -472,73 +472,73 @@ public class BallerinaParserBaseListener implements BallerinaParserListener {\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void enterClosedRecordTypeNameLabel(BallerinaParser.ClosedRecordTypeNameLabelContext ctx) { }\n+\t@Override public void enterArrayTypeNameLabel(BallerinaParser.ArrayTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void exitClosedRecordTypeNameLabel(BallerinaParser.ClosedRecordTypeNameLabelContext ctx) { }\n+\t@Override public void exitArrayTypeNameLabel(BallerinaParser.ArrayTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void enterArrayTypeNameLabel(BallerinaParser.ArrayTypeNameLabelContext ctx) { }\n+\t@Override public void enterObjectTypeNameLabel(BallerinaParser.ObjectTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void exitArrayTypeNameLabel(BallerinaParser.ArrayTypeNameLabelContext ctx) { }\n+\t@Override public void exitObjectTypeNameLabel(BallerinaParser.ObjectTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void enterObjectTypeNameLabel(BallerinaParser.ObjectTypeNameLabelContext ctx) { }\n+\t@Override public void enterGroupTypeNameLabel(BallerinaParser.GroupTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void exitObjectTypeNameLabel(BallerinaParser.ObjectTypeNameLabelContext ctx) { }\n+\t@Override public void exitGroupTypeNameLabel(BallerinaParser.GroupTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void enterGroupTypeNameLabel(BallerinaParser.GroupTypeNameLabelContext ctx) { }\n+\t@Override public void enterInclusiveRecordTypeNameLabel(BallerinaParser.InclusiveRecordTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void exitGroupTypeNameLabel(BallerinaParser.GroupTypeNameLabelContext ctx) { }\n+\t@Override public void exitInclusiveRecordTypeNameLabel(BallerinaParser.InclusiveRecordTypeNameLabelContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void enterOpenRecordTypeDescriptor(BallerinaParser.OpenRecordTypeDescriptorContext ctx) { }\n+\t@Override public void enterInclusiveRecordTypeDescriptor(BallerinaParser.InclusiveRecordTypeDescriptorContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void exitOpenRecordTypeDescriptor(BallerinaParser.OpenRecordTypeDescriptorContext ctx) { }\n+\t@Override public void exitInclusiveRecordTypeDescriptor(BallerinaParser.InclusiveRecordTypeDescriptorContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void enterClosedRecordTypeDescriptor(BallerinaParser.ClosedRecordTypeDescriptorContext ctx) { }\n+\t@Override public void enterExclusiveRecordTypeDescriptor(BallerinaParser.ExclusiveRecordTypeDescriptorContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\n \t * <p>The default implementation does nothing.</p>\n \t */\n-\t@Override public void exitClosedRecordTypeDescriptor(BallerinaParser.ClosedRecordTypeDescriptorContext ctx) { }\n+\t@Override public void exitExclusiveRecordTypeDescriptor(BallerinaParser.ExclusiveRecordTypeDescriptorContext ctx) { }\n \t/**\n \t * {@inheritDoc}\n \t *\ndiff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParserListener.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParserListener.java\nindex c34d997f40f..51bd71975d7 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParserListener.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParserListener.java\n@@ -337,18 +337,6 @@ public interface BallerinaParserListener extends ParseTreeListener {\n \t * @param ctx the parse tree\n \t */\n \tvoid exitFiniteTypeUnit(BallerinaParser.FiniteTypeUnitContext ctx);\n-\t/**\n-\t * Enter a parse tree produced by the {@code openRecordTypeNameLabel}\n-\t * labeled alternative in {@link BallerinaParser#typeName}.\n-\t * @param ctx the parse tree\n-\t */\n-\tvoid enterOpenRecordTypeNameLabel(BallerinaParser.OpenRecordTypeNameLabelContext ctx);\n-\t/**\n-\t * Exit a parse tree produced by the {@code openRecordTypeNameLabel}\n-\t * labeled alternative in {@link BallerinaParser#typeName}.\n-\t * @param ctx the parse tree\n-\t */\n-\tvoid exitOpenRecordTypeNameLabel(BallerinaParser.OpenRecordTypeNameLabelContext ctx);\n \t/**\n \t * Enter a parse tree produced by the {@code tupleTypeNameLabel}\n \t * labeled alternative in {@link BallerinaParser#typeName}.\n@@ -374,41 +362,41 @@ public interface BallerinaParserListener extends ParseTreeListener {\n \t */\n \tvoid exitUnionTypeNameLabel(BallerinaParser.UnionTypeNameLabelContext ctx);\n \t/**\n-\t * Enter a parse tree produced by the {@code simpleTypeNameLabel}\n+\t * Enter a parse tree produced by the {@code exclusiveRecordTypeNameLabel}\n \t * labeled alternative in {@link BallerinaParser#typeName}.\n \t * @param ctx the parse tree\n \t */\n-\tvoid enterSimpleTypeNameLabel(BallerinaParser.SimpleTypeNameLabelContext ctx);\n+\tvoid enterExclusiveRecordTypeNameLabel(BallerinaParser.ExclusiveRecordTypeNameLabelContext ctx);\n \t/**\n-\t * Exit a parse tree produced by the {@code simpleTypeNameLabel}\n+\t * Exit a parse tree produced by the {@code exclusiveRecordTypeNameLabel}\n \t * labeled alternative in {@link BallerinaParser#typeName}.\n \t * @param ctx the parse tree\n \t */\n-\tvoid exitSimpleTypeNameLabel(BallerinaParser.SimpleTypeNameLabelContext ctx);\n+\tvoid exitExclusiveRecordTypeNameLabel(BallerinaParser.ExclusiveRecordTypeNameLabelContext ctx);\n \t/**\n-\t * Enter a parse tree produced by the {@code nullableTypeNameLabel}\n+\t * Enter a parse tree produced by the {@code simpleTypeNameLabel}\n \t * labeled alternative in {@link BallerinaParser#typeName}.\n \t * @param ctx the parse tree\n \t */\n-\tvoid enterNullableTypeNameLabel(BallerinaParser.NullableTypeNameLabelContext ctx);\n+\tvoid enterSimpleTypeNameLabel(BallerinaParser.SimpleTypeNameLabelContext ctx);\n \t/**\n-\t * Exit a parse tree produced by the {@code nullableTypeNameLabel}\n+\t * Exit a parse tree produced by the {@code simpleTypeNameLabel}\n \t * labeled alternative in {@link BallerinaParser#typeName}.\n \t * @param ctx the parse tree\n \t */\n-\tvoid exitNullableTypeNameLabel(BallerinaParser.NullableTypeNameLabelContext ctx);\n+\tvoid exitSimpleTypeNameLabel(BallerinaParser.SimpleTypeNameLabelContext ctx);\n \t/**\n-\t * Enter a parse tree produced by the {@code closedRecordTypeNameLabel}\n+\t * Enter a parse tree produced by the {@code nullableTypeNameLabel}\n \t * labeled alternative in {@link BallerinaParser#typeName}.\n \t * @param ctx the parse tree\n \t */\n-\tvoid enterClosedRecordTypeNameLabel(BallerinaParser.ClosedRecordTypeNameLabelContext ctx);\n+\tvoid enterNullableTypeNameLabel(BallerinaParser.NullableTypeNameLabelContext ctx);\n \t/**\n-\t * Exit a parse tree produced by the {@code closedRecordTypeNameLabel}\n+\t * Exit a parse tree produced by the {@code nullableTypeNameLabel}\n \t * labeled alternative in {@link BallerinaParser#typeName}.\n \t * @param ctx the parse tree\n \t */\n-\tvoid exitClosedRecordTypeNameLabel(BallerinaParser.ClosedRecordTypeNameLabelContext ctx);\n+\tvoid exitNullableTypeNameLabel(BallerinaParser.NullableTypeNameLabelContext ctx);\n \t/**\n \t * Enter a parse tree produced by the {@code arrayTypeNameLabel}\n \t * labeled alternative in {@link BallerinaParser#typeName}.\n@@ -446,25 +434,37 @@ public interface BallerinaParserListener extends ParseTreeListener {\n \t */\n \tvoid exitGroupTypeNameLabel(BallerinaParser.GroupTypeNameLabelContext ctx);\n \t/**\n-\t * Enter a parse tree produced by {@link BallerinaParser#openRecordTypeDescriptor}.\n+\t * Enter a parse tree produced by the {@code inclusiveRecordTypeNameLabel}\n+\t * labeled alternative in {@link BallerinaParser#typeName}.\n+\t * @param ctx the parse tree\n+\t */\n+\tvoid enterInclusiveRecordTypeNameLabel(BallerinaParser.InclusiveRecordTypeNameLabelContext ctx);\n+\t/**\n+\t * Exit a parse tree produced by the {@code inclusiveRecordTypeNameLabel}\n+\t * labeled alternative in {@link BallerinaParser#typeName}.\n+\t * @param ctx the parse tree\n+\t */\n+\tvoid exitInclusiveRecordTypeNameLabel(BallerinaParser.InclusiveRecordTypeNameLabelContext ctx);\n+\t/**\n+\t * Enter a parse tree produced by {@link BallerinaParser#inclusiveRecordTypeDescriptor}.\n \t * @param ctx the parse tree\n \t */\n-\tvoid enterOpenRecordTypeDescriptor(BallerinaParser.OpenRecordTypeDescriptorContext ctx);\n+\tvoid enterInclusiveRecordTypeDescriptor(BallerinaParser.InclusiveRecordTypeDescriptorContext ctx);\n \t/**\n-\t * Exit a parse tree produced by {@link BallerinaParser#openRecordTypeDescriptor}.\n+\t * Exit a parse tree produced by {@link BallerinaParser#inclusiveRecordTypeDescriptor}.\n \t * @param ctx the parse tree\n \t */\n-\tvoid exitOpenRecordTypeDescriptor(BallerinaParser.OpenRecordTypeDescriptorContext ctx);\n+\tvoid exitInclusiveRecordTypeDescriptor(BallerinaParser.InclusiveRecordTypeDescriptorContext ctx);\n \t/**\n-\t * Enter a parse tree produced by {@link BallerinaParser#closedRecordTypeDescriptor}.\n+\t * Enter a parse tree produced by {@link BallerinaParser#exclusiveRecordTypeDescriptor}.\n \t * @param ctx the parse tree\n \t */\n-\tvoid enterClosedRecordTypeDescriptor(BallerinaParser.ClosedRecordTypeDescriptorContext ctx);\n+\tvoid enterExclusiveRecordTypeDescriptor(BallerinaParser.ExclusiveRecordTypeDescriptorContext ctx);\n \t/**\n-\t * Exit a parse tree produced by {@link BallerinaParser#closedRecordTypeDescriptor}.\n+\t * Exit a parse tree produced by {@link BallerinaParser#exclusiveRecordTypeDescriptor}.\n \t * @param ctx the parse tree\n \t */\n-\tvoid exitClosedRecordTypeDescriptor(BallerinaParser.ClosedRecordTypeDescriptorContext ctx);\n+\tvoid exitExclusiveRecordTypeDescriptor(BallerinaParser.ExclusiveRecordTypeDescriptorContext ctx);\n \t/**\n \t * Enter a parse tree produced by {@link BallerinaParser#fieldDescriptor}.\n \t * @param ctx the parse tree",
    "Set up application - client . xml parsing": "diff --git a/appclient/pom.xml b/appclient/pom.xml\nindex 42a8fd0612..131a7df34d 100644\n--- a/appclient/pom.xml\n+++ b/appclient/pom.xml\n@@ -130,6 +130,11 @@\n             <artifactId>jboss-marshalling-river</artifactId>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.jboss.metadata</groupId>\n+            <artifactId>jboss-metadata-appclient</artifactId>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.jboss.spec.javax.jms</groupId>\n             <artifactId>jboss-jms-api_1.1_spec</artifactId>\ndiff --git a/appclient/src/main/java/org/jboss/as/appclient/deployment/AppClientAttachments.java b/appclient/src/main/java/org/jboss/as/appclient/deployment/AppClientAttachments.java\nindex 043e24c885..51bd6f1108 100644\n--- a/appclient/src/main/java/org/jboss/as/appclient/deployment/AppClientAttachments.java\n+++ b/appclient/src/main/java/org/jboss/as/appclient/deployment/AppClientAttachments.java\n@@ -22,6 +22,7 @@\n package org.jboss.as.appclient.deployment;\n \n import org.jboss.as.server.deployment.AttachmentKey;\n+import org.jboss.metadata.appclient.spec.ApplicationClientMetaData;\n \n /**\n  * @author Stuart Douglas\n@@ -32,6 +33,8 @@ public class AppClientAttachments {\n \n     public static final AttachmentKey<Boolean> START_APP_CLIENT = AttachmentKey.create(Boolean.class);\n \n+    public static final AttachmentKey<ApplicationClientMetaData> APPLICATION_CLIENT_META_DATA = AttachmentKey.create(ApplicationClientMetaData.class);\n+\n     private AppClientAttachments() {\n     }\n }\ndiff --git a/appclient/src/main/java/org/jboss/as/appclient/deployment/ApplicationClientParsingDeploymentProcessor.java b/appclient/src/main/java/org/jboss/as/appclient/deployment/ApplicationClientParsingDeploymentProcessor.java\nnew file mode 100644\nindex 0000000000..1ee3f65ba0\n--- /dev/null\n+++ b/appclient/src/main/java/org/jboss/as/appclient/deployment/ApplicationClientParsingDeploymentProcessor.java\n@@ -0,0 +1,90 @@\n+/*\n+ * JBoss, Home of Professional Open Source\n+ * Copyright 2010, Red Hat Inc., and individual contributors as indicated\n+ * by the @authors tag. See the copyright.txt in the distribution for a\n+ * full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.jboss.as.appclient.deployment;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+\n+import org.jboss.as.ee.component.DeploymentDescriptorEnvironment;\n+import org.jboss.as.ee.structure.DeploymentType;\n+import org.jboss.as.ee.structure.DeploymentTypeMarker;\n+import org.jboss.as.server.deployment.Attachments;\n+import org.jboss.as.server.deployment.DeploymentPhaseContext;\n+import org.jboss.as.server.deployment.DeploymentUnit;\n+import org.jboss.as.server.deployment.DeploymentUnitProcessingException;\n+import org.jboss.as.server.deployment.DeploymentUnitProcessor;\n+import org.jboss.metadata.appclient.parser.spec.ApplicationClientMetaDataParser;\n+import org.jboss.metadata.appclient.spec.ApplicationClientMetaData;\n+import org.jboss.metadata.parser.util.NoopXmlResolver;\n+import org.jboss.vfs.VirtualFile;\n+\n+/**\n+ * @author Stuart Douglas\n+ */\n+public class ApplicationClientParsingDeploymentProcessor implements DeploymentUnitProcessor {\n+\n+    private static final String APP_XML = \"META-INF/application-client.xml\";\n+\n+    @Override\n+    public void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException {\n+        final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit();\n+        if (!DeploymentTypeMarker.isType(DeploymentType.APPLICATION_CLIENT, deploymentUnit)) {\n+            return;\n+        }\n+        final VirtualFile deploymentRoot = deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT).getRoot();\n+        final VirtualFile appXml = deploymentRoot.getChild(APP_XML);\n+        if (appXml.exists()) {\n+            InputStream is = null;\n+            try {\n+                is = appXml.openStream();\n+                final XMLInputFactory inputFactory = XMLInputFactory.newInstance();\n+                inputFactory.setXMLResolver(NoopXmlResolver.create());\n+                XMLStreamReader xmlReader = inputFactory.createXMLStreamReader(is);\n+                ApplicationClientMetaData data = new ApplicationClientMetaDataParser().parse(xmlReader);\n+                deploymentUnit.putAttachment(AppClientAttachments.APPLICATION_CLIENT_META_DATA, data);\n+                DeploymentDescriptorEnvironment environment = new DeploymentDescriptorEnvironment(\"java:module/env\",data.getEnvironmentRefsGroupMetaData() );\n+                deploymentUnit.putAttachment(org.jboss.as.ee.component.Attachments.MODULE_DEPLOYMENT_DESCRIPTOR_ENVIRONMENT, environment);\n+\n+            } catch (XMLStreamException e) {\n+                throw new DeploymentUnitProcessingException(\"Failed to parse \" + appXml + \" at [\" + e.getLocation().getLineNumber() + \",\" +  e.getLocation().getColumnNumber() + \"]\");\n+            } catch (IOException e) {\n+                throw new DeploymentUnitProcessingException(\"Failed to parse \" + appXml, e);\n+            } finally {\n+                try {\n+                    if (is != null) {\n+                        is.close();\n+                    }\n+                } catch (IOException e) {\n+                    // Ignore\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void undeploy(DeploymentUnit context) {\n+    }\n+}\ndiff --git a/appclient/src/main/java/org/jboss/as/appclient/deployment/ApplicationClientStartProcessor.java b/appclient/src/main/java/org/jboss/as/appclient/deployment/ApplicationClientStartProcessor.java\nindex 55e9dc1c56..3f7111fa6b 100644\n--- a/appclient/src/main/java/org/jboss/as/appclient/deployment/ApplicationClientStartProcessor.java\n+++ b/appclient/src/main/java/org/jboss/as/appclient/deployment/ApplicationClientStartProcessor.java\n@@ -25,6 +25,7 @@ import java.lang.reflect.Method;\n \n import org.jboss.as.appclient.service.ApplicationClientDeploymentService;\n import org.jboss.as.appclient.service.ApplicationClientStartService;\n+import org.jboss.as.ee.component.EEModuleDescription;\n import org.jboss.as.server.deployment.Attachments;\n import org.jboss.as.server.deployment.DeploymentPhaseContext;\n import org.jboss.as.server.deployment.DeploymentUnit;\n@@ -35,6 +36,7 @@ import org.jboss.as.server.deployment.reflect.DeploymentReflectionIndex;\n \n /**\n  * Processor that starts an application client deployment\n+ *\n  * @author Stuart Douglas\n  */\n public class ApplicationClientStartProcessor implements DeploymentUnitProcessor {\n@@ -48,7 +50,7 @@ public class ApplicationClientStartProcessor implements DeploymentUnitProcessor\n     @Override\n     public void deploy(final DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException {\n         final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit();\n-        final DeploymentUnit topLevel = deploymentUnit.getParent() == null ? deploymentUnit : deploymentUnit.getParent();\n+        final EEModuleDescription moduleDescription = deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);\n \n         final DeploymentReflectionIndex deploymentReflectionIndex = deploymentUnit.getAttachment(Attachments.REFLECTION_INDEX);\n         Boolean activate = deploymentUnit.getAttachment(AppClientAttachments.START_APP_CLIENT);\n@@ -65,10 +67,10 @@ public class ApplicationClientStartProcessor implements DeploymentUnitProcessor\n         if (method == null) {\n             throw new RuntimeException(\"Could not start app client \" + deploymentUnit.getName() + \" as no main main was found on main class \" + mainClass);\n         }\n-        final ApplicationClientStartService startService = new ApplicationClientStartService(method, parameters);\n+        final ApplicationClientStartService startService = new ApplicationClientStartService(method, parameters, moduleDescription.getNamespaceContextSelector());\n         phaseContext.getServiceTarget()\n                 .addService(deploymentUnit.getServiceName().append(ApplicationClientStartService.SERVICE_NAME), startService)\n-                .addDependency(ApplicationClientDeploymentService.SERVICE_NAME, ApplicationClientDeploymentService.class,  startService.getApplicationClientDeploymentServiceInjectedValue())\n+                .addDependency(ApplicationClientDeploymentService.SERVICE_NAME, ApplicationClientDeploymentService.class, startService.getApplicationClientDeploymentServiceInjectedValue())\n                 .install();\n     }\n \ndiff --git a/appclient/src/main/java/org/jboss/as/appclient/service/ApplicationClientStartService.java b/appclient/src/main/java/org/jboss/as/appclient/service/ApplicationClientStartService.java\nindex 6c7a185326..81cdea761e 100644\n--- a/appclient/src/main/java/org/jboss/as/appclient/service/ApplicationClientStartService.java\n+++ b/appclient/src/main/java/org/jboss/as/appclient/service/ApplicationClientStartService.java\n@@ -24,6 +24,8 @@ package org.jboss.as.appclient.service;\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n \n+import org.jboss.as.ee.naming.InjectedEENamespaceContextSelector;\n+import org.jboss.as.naming.context.NamespaceContextSelector;\n import org.jboss.as.server.CurrentServiceContainer;\n import org.jboss.logging.Logger;\n import org.jboss.msc.service.Service;\n@@ -46,6 +48,7 @@ public class ApplicationClientStartService implements Service<ApplicationClientS\n     public static final ServiceName SERVICE_NAME = ServiceName.of(\"appClientStart\");\n \n     private final InjectedValue<ApplicationClientDeploymentService> applicationClientDeploymentServiceInjectedValue = new InjectedValue<ApplicationClientDeploymentService>();\n+    private final InjectedEENamespaceContextSelector namespaceContextSelectorInjectedValue;\n     private final Method mainMethod;\n     private final String[] parameters;\n \n@@ -53,9 +56,10 @@ public class ApplicationClientStartService implements Service<ApplicationClientS\n \n     private final Logger logger = Logger.getLogger(ApplicationClientStartService.class);\n \n-    public ApplicationClientStartService(final Method mainMethod, final String[] parameters) {\n+    public ApplicationClientStartService(final Method mainMethod, final String[] parameters, final InjectedEENamespaceContextSelector namespaceContextSelectorInjectedValue) {\n         this.mainMethod = mainMethod;\n         this.parameters = parameters;\n+        this.namespaceContextSelectorInjectedValue = namespaceContextSelectorInjectedValue;\n     }\n \n     @Override\n@@ -66,6 +70,7 @@ public class ApplicationClientStartService implements Service<ApplicationClientS\n             public void run() {\n                 try {\n                     applicationClientDeploymentServiceInjectedValue.getValue().getDeploymentCompleteLatch().await();\n+                    NamespaceContextSelector.pushCurrentSelector(namespaceContextSelectorInjectedValue);\n                     mainMethod.invoke(null,new Object[] { parameters});\n                 } catch (InvocationTargetException e) {\n                     logger.error(e.getTargetException(), e.getTargetException());\n@@ -74,6 +79,7 @@ public class ApplicationClientStartService implements Service<ApplicationClientS\n                 } catch (InterruptedException e) {\n                     logger.error(e);\n                 } finally {\n+                    NamespaceContextSelector.popCurrentSelector();\n                     CurrentServiceContainer.getServiceContainer().shutdown();\n                 }\n             }\n@@ -95,4 +101,5 @@ public class ApplicationClientStartService implements Service<ApplicationClientS\n     public InjectedValue<ApplicationClientDeploymentService> getApplicationClientDeploymentServiceInjectedValue() {\n         return applicationClientDeploymentServiceInjectedValue;\n     }\n+\n }\ndiff --git a/build/build.xml b/build/build.xml\nindex c266fb3c08..1671fc285a 100644\n--- a/build/build.xml\n+++ b/build/build.xml\n@@ -752,6 +752,7 @@\n \n         <module-def name=\"org.jboss.metadata\">\n             <maven-resource group=\"org.jboss.metadata\" artifact=\"jboss-metadata-common\"/>\n+            <maven-resource group=\"org.jboss.metadata\" artifact=\"jboss-metadata-appclient\"/>\n             <maven-resource group=\"org.jboss.metadata\" artifact=\"jboss-metadata-ejb\"/>\n             <maven-resource group=\"org.jboss.metadata\" artifact=\"jboss-metadata-web\"/>\n             <maven-resource group=\"org.jboss.metadata\" artifact=\"jboss-metadata-ear\"/>\ndiff --git a/build/pom.xml b/build/pom.xml\nindex 9905f1b83a..f294c9b340 100644\n--- a/build/pom.xml\n+++ b/build/pom.xml\n@@ -53,7 +53,7 @@\n                         <phase>package</phase>\n                         <configuration>\n                             <target>\n-                                <ant antfile=\"build.xml\"  inheritRefs=\"true\">\n+                                <ant antfile=\"build.xml\" inheritRefs=\"true\">\n                                     <target name=\"all\"/>\n                                 </ant>\n                             </target>\n@@ -611,45 +611,45 @@\n             <groupId>org.jboss.as</groupId>\n             <artifactId>jboss-as-appclient</artifactId>\n         </dependency>\n-        \n+\n         <dependency>\n             <groupId>org.jboss.as</groupId>\n             <artifactId>jboss-as-cli</artifactId>\n         </dependency>\n \n         <dependency>\n-           <groupId>org.jboss.as</groupId>\n-           <artifactId>jboss-as-clustering-api</artifactId>\n+            <groupId>org.jboss.as</groupId>\n+            <artifactId>jboss-as-clustering-api</artifactId>\n         </dependency>\n \n         <dependency>\n-           <groupId>org.jboss.as</groupId>\n-           <artifactId>jboss-as-clustering-common</artifactId>\n+            <groupId>org.jboss.as</groupId>\n+            <artifactId>jboss-as-clustering-common</artifactId>\n         </dependency>\n \n         <dependency>\n-           <groupId>org.jboss.as</groupId>\n-           <artifactId>jboss-as-clustering-impl</artifactId>\n+            <groupId>org.jboss.as</groupId>\n+            <artifactId>jboss-as-clustering-impl</artifactId>\n         </dependency>\n \n         <dependency>\n-           <groupId>org.jboss.as</groupId>\n-           <artifactId>jboss-as-clustering-infinispan</artifactId>\n+            <groupId>org.jboss.as</groupId>\n+            <artifactId>jboss-as-clustering-infinispan</artifactId>\n         </dependency>\n \n         <dependency>\n-           <groupId>org.jboss.as</groupId>\n-           <artifactId>jboss-as-clustering-jgroups</artifactId>\n+            <groupId>org.jboss.as</groupId>\n+            <artifactId>jboss-as-clustering-jgroups</artifactId>\n         </dependency>\n \n         <dependency>\n-           <groupId>org.jboss.as</groupId>\n-           <artifactId>jboss-as-clustering-web-infinispan</artifactId>\n+            <groupId>org.jboss.as</groupId>\n+            <artifactId>jboss-as-clustering-web-infinispan</artifactId>\n         </dependency>\n \n         <dependency>\n-           <groupId>org.jboss.as</groupId>\n-           <artifactId>jboss-as-clustering-web-spi</artifactId>\n+            <groupId>org.jboss.as</groupId>\n+            <artifactId>jboss-as-clustering-web-spi</artifactId>\n         </dependency>\n \n         <dependency>\n@@ -1008,6 +1008,11 @@\n             <artifactId>jboss-marshalling-river</artifactId>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.jboss.metadata</groupId>\n+            <artifactId>jboss-metadata-appclient</artifactId>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.jboss.metadata</groupId>\n             <artifactId>jboss-metadata-common</artifactId>\n@@ -1543,8 +1548,12 @@\n                                 </goals>\n                                 <phase>package</phase>\n                                 <configuration>\n-                                    <licensesOutputDirectory>${project.build.directory}/jboss-as-${jboss.as.release.version}/docs/licenses</licensesOutputDirectory>\n-                                    <licensesOutputFile>${project.build.directory}/jboss-as-${jboss.as.release.version}/docs/licenses/licenses.xml</licensesOutputFile>\n+                                    <licensesOutputDirectory>\n+                                        ${project.build.directory}/jboss-as-${jboss.as.release.version}/docs/licenses\n+                                    </licensesOutputDirectory>\n+                                    <licensesOutputFile>\n+                                        ${project.build.directory}/jboss-as-${jboss.as.release.version}/docs/licenses/licenses.xml\n+                                    </licensesOutputFile>\n                                 </configuration>\n                             </execution>\n                         </executions>\ndiff --git a/build/src/main/resources/modules/org/jboss/as/appclient/main/module.xml b/build/src/main/resources/modules/org/jboss/as/appclient/main/module.xml\nindex 6fba0a1d16..859710e2ae 100644\n--- a/build/src/main/resources/modules/org/jboss/as/appclient/main/module.xml\n+++ b/build/src/main/resources/modules/org/jboss/as/appclient/main/module.xml\n@@ -44,6 +44,7 @@\n         <module name=\"org.jboss.stdio\"/>\n         <module name=\"org.jboss.threads\"/>\n         <module name=\"org.jboss.vfs\"/>\n+        <module name=\"org.jboss.as.naming\"/>\n         <module name=\"org.jboss.as.controller\"/>\n         <module name=\"org.jboss.as.deployment-repository\"/>\n         <module name=\"org.jboss.as.domain-http-api\"/>\n@@ -55,5 +56,6 @@\n         <module name=\"org.jboss.as.process-controller\"/>\n         <module name=\"org.jboss.as.protocol\"/>\n         <module name=\"org.jboss.as.remoting\"/>\n+        <module name=\"org.jboss.metadata\"/>\n     </dependencies>\n </module>\ndiff --git a/ee/src/main/java/org/jboss/as/ee/component/DeploymentDescriptorEnvironment.java b/ee/src/main/java/org/jboss/as/ee/component/DeploymentDescriptorEnvironment.java\nindex ff7301d2f3..e7f25178a3 100644\n--- a/ee/src/main/java/org/jboss/as/ee/component/DeploymentDescriptorEnvironment.java\n+++ b/ee/src/main/java/org/jboss/as/ee/component/DeploymentDescriptorEnvironment.java\n@@ -21,7 +21,7 @@\n  */\n package org.jboss.as.ee.component;\n \n-import org.jboss.metadata.javaee.spec.Environment;\n+import org.jboss.metadata.javaee.spec.RemoteEnvironment;\n \n /**\n  * The environment as read from a deployment descriptor\n@@ -32,9 +32,9 @@ public class DeploymentDescriptorEnvironment {\n \n     private final String defaultContext;\n \n-    private final Environment environment;\n+    private final RemoteEnvironment environment;\n \n-    public DeploymentDescriptorEnvironment(String defaultContext, Environment environment) {\n+    public DeploymentDescriptorEnvironment(String defaultContext, RemoteEnvironment environment) {\n         this.defaultContext = defaultContext;\n         this.environment = environment;\n     }\n@@ -43,7 +43,7 @@ public class DeploymentDescriptorEnvironment {\n         return defaultContext;\n     }\n \n-    public Environment getEnvironment() {\n+    public RemoteEnvironment getEnvironment() {\n         return environment;\n     }\n }\ndiff --git a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbRefProcessor.java b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbRefProcessor.java\nindex 4b0c545cc7..36fb450f70 100644\n--- a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbRefProcessor.java\n+++ b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbRefProcessor.java\n@@ -22,6 +22,9 @@\n \n package org.jboss.as.ejb3.deployment.processors;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n import org.jboss.as.ee.component.BindingConfiguration;\n import org.jboss.as.ee.component.ComponentDescription;\n import org.jboss.as.ee.component.DeploymentDescriptorEnvironment;\n@@ -35,9 +38,10 @@ import org.jboss.as.server.deployment.DeploymentUnitProcessingException;\n import org.jboss.as.server.deployment.reflect.DeploymentReflectionIndex;\n import org.jboss.metadata.javaee.spec.EJBLocalReferenceMetaData;\n import org.jboss.metadata.javaee.spec.EJBLocalReferencesMetaData;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n+import org.jboss.metadata.javaee.spec.EJBReferenceMetaData;\n+import org.jboss.metadata.javaee.spec.EJBReferencesMetaData;\n+import org.jboss.metadata.javaee.spec.Environment;\n+import org.jboss.metadata.javaee.spec.RemoteEnvironment;\n \n /**\n  * Deployment processor responsible for processing ejb references from deployment descriptors\n@@ -57,22 +61,23 @@ public class EjbRefProcessor extends AbstractDeploymentDescriptorBindingsProcess\n      * @return The bindings for the environment entries\n      */\n     protected List<BindingConfiguration> processDescriptorEntries(DeploymentUnit deploymentUnit, DeploymentDescriptorEnvironment environment, EEModuleDescription moduleDescription, ComponentDescription componentDescription, ClassLoader classLoader, DeploymentReflectionIndex deploymentReflectionIndex, final EEApplicationClasses applicationClasses) throws DeploymentUnitProcessingException {\n-        EJBLocalReferencesMetaData ejbLocalRefs = environment.getEnvironment().getEjbLocalReferences();\n+        final RemoteEnvironment remoteEnvironment = environment.getEnvironment();\n         List<BindingConfiguration> bindingDescriptions = new ArrayList<BindingConfiguration>();\n-        //TODO: this needs a lot more work\n-        if (ejbLocalRefs != null) {\n-            for (EJBLocalReferenceMetaData ejbRef : ejbLocalRefs) {\n+\n+        EJBReferencesMetaData ejbRefs = remoteEnvironment.getEjbReferences();\n+        if (ejbRefs != null) {\n+            for (EJBReferenceMetaData ejbRef : ejbRefs) {\n                 String name = ejbRef.getEjbRefName();\n                 String ejbName = ejbRef.getLink();\n                 String lookup = ejbRef.getLookupName();\n-                String localInterface = ejbRef.getLocal();\n-                Class<?> localInterfaceType = null;\n+                String remoteInterface = ejbRef.getRemote();\n+                Class<?> remoteInterfaceType = null;\n \n-                if (!isEmpty(localInterface)) {\n+                if (!isEmpty(remoteInterface)) {\n                     try {\n-                        localInterfaceType = classLoader.loadClass(localInterface);\n+                        remoteInterfaceType = classLoader.loadClass(remoteInterface);\n                     } catch (ClassNotFoundException e) {\n-                        throw new DeploymentUnitProcessingException(\"Could not load local interface type \" + localInterface, e);\n+                        throw new DeploymentUnitProcessingException(\"Could not load local interface type \" + remoteInterface, e);\n                     }\n                 }\n \n@@ -84,10 +89,10 @@ public class EjbRefProcessor extends AbstractDeploymentDescriptorBindingsProcess\n                 LookupInjectionSource injectionSource = new LookupInjectionSource(name);\n \n                 //add any injection targets\n-                localInterfaceType = processInjectionTargets(moduleDescription, applicationClasses, injectionSource, classLoader, deploymentReflectionIndex, ejbRef, localInterfaceType);\n+                remoteInterfaceType = processInjectionTargets(moduleDescription, applicationClasses, injectionSource, classLoader, deploymentReflectionIndex, ejbRef, remoteInterfaceType);\n \n-                if (localInterfaceType == null) {\n-                    throw new DeploymentUnitProcessingException(\"Could not determine type of ejb-local-ref \" + name + \" for component \" + componentDescription);\n+                if (remoteInterfaceType == null) {\n+                    throw new DeploymentUnitProcessingException(\"Could not determine type of ejb-ref \" + name + \" for component \" + componentDescription);\n                 }\n                 final BindingConfiguration bindingConfiguration;\n                 EjbInjectionSource ejbInjectionSource = null;\n@@ -99,9 +104,9 @@ public class EjbRefProcessor extends AbstractDeploymentDescriptorBindingsProcess\n                         bindingConfiguration = new BindingConfiguration(name, new LookupInjectionSource(lookup));\n                     }\n              ",
    "Implement initial debugging support": "diff --git a/smalidea/META-INF/plugin.xml b/smalidea/META-INF/plugin.xml\nindex 82cf8dd0..1229db1f 100644\n--- a/smalidea/META-INF/plugin.xml\n+++ b/smalidea/META-INF/plugin.xml\n@@ -21,6 +21,9 @@\n       <lang.parserDefinition language=\"smali\" implementationClass=\"org.jf.smalidea.SmaliParserDefinition\"/>\n       <java.elementFinder implementation=\"org.jf.smalidea.psi.index.SmaliClassFinder\"/>\n       <stubIndex implementation=\"org.jf.smalidea.psi.index.SmaliClassNameIndex\"/>\n+      <debugger.positionManagerFactory implementation=\"org.jf.smalidea.debugging.SmaliPositionManagerFactory\"/>\n+      <xdebugger.debuggerSupport id=\"SmaliDebuggerSupport\" order=\"first,before XDebuggerSupport\"\n+                                 implementation=\"org.jf.smalidea.debugging.SmaliDebuggerSupport\"/>\n   </extensions>\n \n   <application-components>\ndiff --git a/smalidea/src/main/java/org/jf/smalidea/debugging/SmaliDebuggerSupport.java b/smalidea/src/main/java/org/jf/smalidea/debugging/SmaliDebuggerSupport.java\nnew file mode 100644\nindex 00000000..a5105fee\n--- /dev/null\n+++ b/smalidea/src/main/java/org/jf/smalidea/debugging/SmaliDebuggerSupport.java\n@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2014, Google Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are\n+ * met:\n+ *\n+ *     * Redistributions of source code must retain the above copyright\n+ * notice, this list of conditions and the following disclaimer.\n+ *     * Redistributions in binary form must reproduce the above\n+ * copyright notice, this list of conditions and the following disclaimer\n+ * in the documentation and/or other materials provided with the\n+ * distribution.\n+ *     * Neither the name of Google Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+ * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package org.jf.smalidea.debugging;\n+\n+import com.intellij.debugger.actions.StepOverActionHandler;\n+import com.intellij.debugger.impl.DebuggerSession;\n+import com.intellij.debugger.ui.JavaDebuggerSupport;\n+import com.intellij.openapi.actionSystem.AnActionEvent;\n+import com.intellij.openapi.project.Project;\n+import com.intellij.xdebugger.impl.actions.DebuggerActionHandler;\n+import com.sun.jdi.request.StepRequest;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.lang.reflect.Method;\n+\n+public class SmaliDebuggerSupport extends JavaDebuggerSupport {\n+    private static boolean useModifiedMethod;\n+\n+    {\n+        try {\n+            Method method = DebuggerSession.class.getMethod(\"stepOver\", boolean.class, int.class);\n+            useModifiedMethod = true;\n+        } catch (NoSuchMethodException ex) {\n+        }\n+    }\n+\n+    private final StepOverActionHandler myStepOverActionHandler = new StepOverActionHandler() {\n+        @Override\n+        public void perform(@NotNull final Project project, AnActionEvent e) {\n+            final DebuggerSession session = getSession(project);\n+\n+            if (session != null) {\n+                if (useModifiedMethod) {\n+                    session.stepOver(false, StepRequest.STEP_MIN);\n+                } else {\n+                    session.stepOver(false);\n+                }\n+            }\n+        }\n+\n+        @Override public boolean isEnabled(@NotNull Project project, AnActionEvent event) {\n+            // TODO: check if we're currently in a smali file?\n+            return super.isEnabled(project, event);\n+        }\n+    };\n+\n+    @NotNull\n+    @Override\n+    public DebuggerActionHandler getStepOverHandler() {\n+        return myStepOverActionHandler;\n+    }\n+\n+}\ndiff --git a/smalidea/src/main/java/org/jf/smalidea/debugging/SmaliPositionManager.java b/smalidea/src/main/java/org/jf/smalidea/debugging/SmaliPositionManager.java\nnew file mode 100644\nindex 00000000..97423bc8\n--- /dev/null\n+++ b/smalidea/src/main/java/org/jf/smalidea/debugging/SmaliPositionManager.java\n@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2014, Google Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are\n+ * met:\n+ *\n+ *     * Redistributions of source code must retain the above copyright\n+ * notice, this list of conditions and the following disclaimer.\n+ *     * Redistributions in binary form must reproduce the above\n+ * copyright notice, this list of conditions and the following disclaimer\n+ * in the documentation and/or other materials provided with the\n+ * distribution.\n+ *     * Neither the name of Google Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+ * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package org.jf.smalidea.debugging;\n+\n+import com.intellij.debugger.NoDataException;\n+import com.intellij.debugger.PositionManager;\n+import com.intellij.debugger.SourcePosition;\n+import com.intellij.debugger.engine.DebugProcess;\n+import com.intellij.debugger.requests.ClassPrepareRequestor;\n+import com.intellij.openapi.application.ApplicationManager;\n+import com.intellij.openapi.util.Computable;\n+import com.intellij.psi.search.GlobalSearchScope;\n+import com.sun.jdi.Location;\n+import com.sun.jdi.ReferenceType;\n+import com.sun.jdi.request.ClassPrepareRequest;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+import org.jf.smalidea.psi.impl.SmaliClass;\n+import org.jf.smalidea.psi.impl.SmaliFile;\n+import org.jf.smalidea.psi.impl.SmaliMethod;\n+import org.jf.smalidea.psi.index.SmaliClassNameIndex;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+public class SmaliPositionManager implements PositionManager {\n+    private final DebugProcess debugProcess;\n+\n+    public SmaliPositionManager(DebugProcess debugProcess) {\n+        this.debugProcess = debugProcess;\n+    }\n+\n+    public SourcePosition getSourcePosition(String declaringType, String methodName, String methodSignature,\n+                                            int codeIndex) throws NoDataException {\n+        Collection<SmaliClass> classes = SmaliClassNameIndex.INSTANCE.get(declaringType,\n+                debugProcess.getProject(), GlobalSearchScope.projectScope(debugProcess.getProject()));\n+\n+        if (classes.size() > 0) {\n+            SmaliClass smaliClass = classes.iterator().next();\n+\n+            // TODO: make an index for this?\n+            for (SmaliMethod smaliMethod: smaliClass.getMethods()) {\n+                if (smaliMethod.getName().equals(methodName) &&\n+                        smaliMethod.getMethodPrototype().getText().equals(methodSignature)) {\n+                    return smaliMethod.getSourcePositionForCodeOffset(codeIndex * 2);\n+                }\n+            }\n+        }\n+\n+        throw NoDataException.INSTANCE;\n+    }\n+\n+    @Override\n+    public SourcePosition getSourcePosition(@Nullable Location location) throws NoDataException {\n+        if (location == null) {\n+            throw NoDataException.INSTANCE;\n+        }\n+\n+        return getSourcePosition(location.declaringType().name(), location.method().name(),\n+                location.method().signature(), (int)location.codeIndex());\n+    }\n+\n+    @Override @NotNull\n+    public List<ReferenceType> getAllClasses(@NotNull SourcePosition classPosition) throws NoDataException {\n+        if (!(classPosition.getElementAt().getContainingFile() instanceof SmaliFile)) {\n+            throw NoDataException.INSTANCE;\n+        }\n+\n+        String className = getClassFromPosition(classPosition);\n+        return debugProcess.getVirtualMachineProxy().classesByName(className);\n+    }\n+\n+    @NotNull\n+    private String getClassFromPosition(@NotNull final SourcePosition position) {\n+        return ApplicationManager.getApplication().runReadAction(new Computable<String>() {\n+            @Override public String compute() {\n+                return ((SmaliClass)position.getElementAt().getContainingFile().getFirstChild()).getQualifiedName();\n+            }\n+        });\n+    }\n+\n+    @Override @NotNull\n+    public List<Location> locationsOfLine(@NotNull final ReferenceType type,\n+                                          @NotNull final SourcePosition position) throws NoDataException {\n+        if (!(position.getElementAt().getContainingFile() instanceof SmaliFile)) {\n+            throw NoDataException.INSTANCE;\n+        }\n+\n+        final ArrayList<Location> locations = new ArrayList<Location>(1);\n+\n+        ApplicationManager.getApplication().runReadAction(new Runnable() {\n+            @Override\n+            public void run() {\n+                String typeName = type.name();\n+                Collection<SmaliClass> classes = SmaliClassNameIndex.INSTANCE.get(typeName, debugProcess.getProject(),\n+                        GlobalSearchScope.projectScope(debugProcess.getProject()));\n+\n+                if (classes.size() > 0) {\n+                    final SmaliClass smaliClass = classes.iterator().next();\n+\n+                    Location location = smaliClass.getLocationForSourcePosition(type, position);\n+\n+                    if (location != null) {\n+                        locations.add(location);\n+                    }\n+                }\n+            }\n+        });\n+        return locations;\n+    }\n+\n+    @Override\n+    public ClassPrepareRequest createPrepareRequest(@NotNull final ClassPrepareRequestor requestor,\n+                                                    @NotNull final SourcePosition position) throws NoDataException {\n+        if (!(position.getElementAt().getContainingFile() instanceof SmaliFile)) {\n+            throw NoDataException.INSTANCE;\n+        }\n+\n+        String className = getClassFromPosition(position);\n+        return debugProcess.getRequestsManager().createClassPrepareRequest(new ClassPrepareRequestor() {\n+            @Override\n+            public void processClassPrepare(DebugProcess debuggerProcess, ReferenceType referenceType) {\n+                requestor.processClassPrepare(debuggerProcess, referenceType);\n+            }\n+        }, className);\n+    }\n+}\n\\ No newline at end of file\ndiff --git a/smalidea/src/main/java/org/jf/smalidea/debugging/SmaliPositionManagerFactory.java b/smalidea/src/main/java/org/jf/smalidea/debugging/SmaliPositionManagerFactory.java\nnew file mode 100644\nindex 00000000..3d261096\n--- /dev/null\n+++ b/smalidea/src/main/java/org/jf/smalidea/debugging/SmaliPositionManagerFactory.java\n@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2012, Google Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are\n+ * met:\n+ *\n+ *     * Redistributions of source code must retain the above copyright\n+ * notice, this list of conditions and the following disclaimer.\n+ *     * Redistributions in binary form must reproduce the above\n+ * copyright notice, this list of conditions and the following disclaimer\n+ * in the documentation and/or other materials provided with the\n+ * distribution.\n+ *     * Neither the name of Google Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+ * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package org.jf.smalidea.debugging;\n+\n+import com.intellij.debugger.PositionManager;\n+import com.intellij.debugger.PositionManagerFactory;\n+import com.intellij.debugger.engine.DebugProcess;\n+\n+public class SmaliPositionManagerFactory extends PositionManagerFactory {\n+    @Override\n+    public PositionManager createPositionManager(DebugProcess process) {\n+        return new SmaliPositionManager(process);\n+    }\n+}\ndiff --git a/smalidea/src/main/java/org/jf/smalidea/psi/impl/SmaliClass.java b/smalidea/src/main/java/org/jf/smalidea/psi/impl/SmaliClass.java\nindex 274098a6..d390dfab 100644\n--- a/smalidea/src/main/java/org/jf/smalidea/psi/impl/SmaliClass.java\n+++ b/smalidea/src/main/java/org/jf/smalidea/psi/impl/SmaliClass.java\n@@ -31,6 +31,7 @@\n \n package org.jf.smalidea.psi.impl;\n \n+import com.intellij.debugger.SourcePosition;\n import com.intellij.lang.ASTNode;\n import com.intellij.openapi.util.Pair;\n import com.intellij.psi.*;\n@@ -39,6 +40,9 @@ import com.intellij.psi.impl.PsiClassImplUtil;\n import com.intellij.psi.impl.PsiImplUtil;\n import com.intellij.psi.javadoc.PsiDocComment;\n import com.intellij.util.IncorrectOperationException;\n+import com.sun.jdi.Location;\n+import com.sun.jdi.Method;\n+import com.sun.jdi.ReferenceType;\n import org.jetbrains.annotations.NonNls;\n import org.jetbrains.annotations.NotNull;\n import org.jetbrains.annotations.Nullable;\n@@ -307,4 +311,23 @@ public class SmaliClass extends SmaliStubBasedPsiElement<SmaliClassStub> impleme\n         // TODO: implement this\n         return null;\n     }\n+\n+    @Nullable public Location getLocationForSourcePosition(@Nonnull ReferenceType type,\n+                                                           @Nonnull SourcePosition position) {\n+\n+        SmaliMethod[] smaliMethods = findChildrenByType(SmaliElementTypes.METHOD, SmaliMethod.class);\n+\n+        for (SmaliMethod smaliMethod: smaliMethods) {\n+            //TODO: check the start line+end line of the method\n+            int offset = smaliMethod.getOffsetForLine(position.getLine());\n+            if (offset != -1) {\n+                List<Method> methods = type.methodsByName(smaliMethod.getName(),\n+                        smaliMethod.getMethodPrototype().getText());\n+                if (methods.size() > 0) {\n+                    return methods.get(0).locationOfCodeIndex(offset/2);\n+                }\n+            }\n+        }\n+        return null;\n+    }\n }\n\\ No newline at end of file\ndiff --git a/smalidea/src/main/java/org/jf/smalidea/psi/impl/SmaliMethod.java b/smalidea/src/main/java/org/jf/smalidea/psi/impl/SmaliMethod.java\nindex 72c30c68..0a33abad 100644\n--- a/smalidea/src/main/java/org/jf/smalidea/psi/impl/SmaliMethod.java\n+++ b/smalidea/src/main/java/org/jf/smalidea/psi/impl/SmaliMethod.java\n@@ -33,6 +33,7 @@ package org.jf.smalidea.psi.impl;\n \n import com.intellij.debugger.SourcePosition;\n import com.intellij.lang.ASTNode;\n+import com.intellij.openapi.editor.Document;\n import com.intellij.psi.*;\n import com.intellij.psi.PsiModifier.ModifierConstant;\n import com.intellij.psi.impl.PsiImplUtil;\n@@ -119,6 +120,22 @@ public class SmaliMethod extends SmaliStubBasedPsiElement<SmaliMethodStub>\n         return null;\n     }\n \n+    public int getOffsetForLine(int line) {\n+        PsiDocumentManager documentManager = PsiDocumentManager.getInstance(getProject());\n+        final Document document = documentManager.getDocument(getContainingFile());\n+        if (document == null) {\n+            return -1;\n+        }\n+\n+        for (final SmaliInstruction instruction: getInstructions()) {\n+            int curLine = document.getLineNumber(instruction.getTextOffset());\n+            if (curLine >= line) {\n+                return instruction.getOffset();\n+            }\n+        }\n+        return -1;\n+    }\n+\n     public int getRegisterCount() {\n         SmaliRegistersStatement registersStatement = findChildByClass(SmaliRegistersStatement.class);\n         if (registersStatement == null) {\ndiff --git a/smalidea/src/test/java/org/jf/smalidea/SmaliPositionManagerTest.java b/smalidea/src/test/java/org/jf/smalidea/SmaliPositionManagerTest.java\nnew file mode 100644\nindex 00000000..7104b96e\n--- /dev/null\n+++ b/smalidea/src/test/java/org/jf/smalidea/SmaliPositionManagerTest.java\n@@ -0,0 +1,237 @@\n+/*\n+ * Copyright 2014, Google Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are\n+ * met:\n+ *\n+ *     * Redistributions of source code must retain the above copyright\n+ * notice, this list of conditions and the following disclaimer.\n+ *     * Redistributions in binary form must reproduce the above\n+ * copyright notice, this list of conditions and the following disclaimer\n+ * in the documentation and/or other materials provided with the\n+ * distribution.\n+ *     * Neither the name of Google Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+ * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package org.jf.smalidea;\n+\n+import com.google.common.collect.Lists;\n+import com.intellij.debugger.NoDataException;\n+import com.intellij.debugger.PositionManager;\n+import com.intellij.debugger.SourcePosition;\n+import com.intellij.debugger.engine.DebugProcess;\n+import com.intellij.debugger.engine.DebugProcessListener;\n+import com.intellij.debugger.engine.evaluation.EvaluateException;\n+import com.intellij.debugger.engine.evaluation.EvaluationContext;\n+import com.intellij.debugger.engine.jdi.VirtualMachineProxy;\n+import com.intellij.debugger.engine.managerThread.DebuggerManagerThread;\n+import com.intellij.debugger.requests.RequestManager;\n+import com.intellij.execution.ExecutionResult;\n+import com.intellij.execution.process.ProcessHandler;\n+import com.intellij.openapi.project.Project;\n+import com.intellij.openapi.util.Key;\n+import com.intellij.psi.search.GlobalSearchScope;\n+import com.intellij.testFramework.fixtures.LightCodeInsightFixtureTestCase;\n+import com.sun.jdi.*;\n+import org.jetbrains.annotations.NotNull;\n+import org.jf.dexlib2.Opcode;\n+import org.jf.smalidea.debugging.SmaliPositionManager;\n+import org.jf.smalidea.psi.impl.SmaliInstruction;\n+import org.junit.Assert;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+public class SmaliPositionManagerTest extends LightCodeInsightFixtureTestCase {\n+    private static final String testClass =\n+            \".class public Lmy/pkg/blah; .super Ljava/lang/Object;\\n\" +\n+                    \".method public getRandomParentType(I)I\\n\" +\n+                    \"    .registers 4\\n\" +\n+                    \"    .param p1, \\\"edge\\\"    # I\\n\" +\n+                    \"\\n\" +\n+                    \"    .prologue\\n\" +\n+                    \"    const/4 v1, 0x2\\n\" +\n+                    \"\\n\" +\n+                    \"    .line 179\\n\" +\n+                    \"    if-nez p1, :cond_5\\n\" +\n+                    \"\\n\" +\n+                    \"    move v0, v1\\n\" +\n+                    \"\\n\" +\n+                    \"    .line 185\\n\" +\n+                    \"    :goto_4\\n\" +\n+                    \"    return v0\\n\" +\n+                    \"\\n\" +\n+                    \"    .line 182\\n\" +\n+                    \"    :cond_5\\n\" +\n+                    \"    if-ne p1, v1, :cond_f\\n\" +\n+                    \"\\n\" +\n+                    \"    .line 183\\n\" +\n+                    \"    sget-object v0, Lorg/jf/Penroser/PenroserApp;->random:Ljava/util/Random;\\n\" +\n+                    \"\\n\" +\n+                    \"    const/4 v1, 0x3\\n\" +\n+                    \"\\n\" +\n+                    \"    invoke-virtual {v0, v1}, Ljava/util/Random;->nextInt(I)I\\n\" +\n+                    \"\\n\" +\n+                    \"    move-result v0\\n\" +\n+                    \"\\n\" +\n+                    \"    goto :goto_4\\n\" +\n+                    \"\\n\" +\n+                    \"    .line 185\\n\" +\n+                    \"    :cond_f\\n\" +\n+                    \"    sget-object v0, Lorg/jf/Penroser/PenroserApp;->random:Ljava/util/Random;\\n\" +\n+                    \"\\n\" +\n+                    \"    invoke-virtual {v0, v1}, Ljava/util/Random;->nextInt(I)I\\n\" +\n+                    \"\\n\" +\n+                    \"    move-result v0\\n\" +\n+                    \"\\n\" +\n+                    \"    goto :goto_4\\n\" +\n+                    \".end method\";\n+\n+    public void testGetSourcePosition() throws NoDataException {\n+        myFixture.addFileToProject(\"my/pkg/blah.smali\", testClass);\n+\n+        SmaliPositionManager positionManager = new SmaliPositionManager(new MockDebugProcess());\n+\n+        SourcePosition sourcePosition = positionManager.getSourcePosition(\n+                \"my.pkg.blah\", \"getRandomParentType\", \"(I)I\", 0);\n+        Assert.assertEquals(Opcode.CONST_4, ((SmaliInstruction)sourcePosition.getElementAt()).getOpcode());\n+        Assert.assertEquals(0, ((SmaliInstruction)sourcePosition.getElementAt()).getOffset());\n+\n+        sourcePosition = positionManager.getSourcePosition(\"my.pkg.blah\", \"getRandomParentType\", \"(I)I\", 10);\n+        Assert.assertEquals(Opcode.INVOKE_VIRTUAL, ((SmaliInstruction)sourcePosition.getElementAt()).getOpcode());\n+  ",
    "prepare release mp4parser - project - 1 . 0 . 5 . 6 - 5": "diff --git a/examples/pom.xml b/examples/pom.xml\nindex 20b6ec47..f9f91567 100644\n--- a/examples/pom.xml\n+++ b/examples/pom.xml\n@@ -5,17 +5,17 @@\n \n     <artifactId>examples</artifactId>\n     <name>ISO Parser Examples</name>\n-    <version>1.0.5.7-SNAPSHOT</version>\n+    <version>1.0.5.6</version>\n     <parent>\n         <groupId>com.googlecode.mp4parser</groupId>\n         <artifactId>mp4parser-project</artifactId>\n-        <version>1.0.5.7-SNAPSHOT</version>\n+        <version>1.0.5.6</version>\n     </parent>\n     <dependencies>\n         <dependency>\n             <groupId>com.googlecode.mp4parser</groupId>\n             <artifactId>isoparser</artifactId>\n-            <version>1.0.5.7-SNAPSHOT</version>\n+            <version>1.0.5.6</version>\n         </dependency>\n         <dependency>\n             <groupId>xom</groupId>\n@@ -74,7 +74,7 @@\n     <scm>\n         <url>http://code.google.com/p/mp4parser/source/browse/</url>\n         <connection>scm:svn:https://mp4parser.googlecode.com/svn/trunk/examples</connection>\n-      <tag>mp4parser-project-1.0.4-3</tag>\n+      <tag>mp4parser-project-1.0.5.6-5</tag>\n   </scm>\n     <repositories>\n         <repository>\ndiff --git a/isoparser/pom.xml b/isoparser/pom.xml\nindex 3dccefc8..d78d2290 100644\n--- a/isoparser/pom.xml\n+++ b/isoparser/pom.xml\n@@ -7,7 +7,7 @@\n     <description>A generic parser and writer for all ISO 14496 based files (MP4, Quicktime, DCF, PDCF, ...)\n     </description>\n     <url>http://code.google.com/p/mp4parser/</url>\n-    <version>1.0.5.7-SNAPSHOT</version>\n+    <version>1.0.5.6</version>\n \n     <properties>\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n@@ -207,7 +207,7 @@\n \n     <scm>\n         <url>https://github.com/sannies/mp4parser</url>\n-      <tag>mp4parser-project-1.0.4-3</tag>\n+      <tag>mp4parser-project-1.0.5.6-5</tag>\n   </scm>\n \n     <licenses>\ndiff --git a/pom.xml b/pom.xml\nindex 92f11280..6386067b 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -3,7 +3,7 @@\n     <groupId>com.googlecode.mp4parser</groupId>\n     <artifactId>mp4parser-project</artifactId>\n     <packaging>pom</packaging>\n-    <version>1.0.5.7-SNAPSHOT</version>\n+    <version>1.0.5.6</version>\n     <name>MP4 Parser Project</name>\n     <url>http://code.google.com/p/mp4parser/</url>\n     <licenses>\n@@ -83,6 +83,6 @@\n     <scm>\n         <url>https://github.com/sannies/mp4parser</url>\n         <connection>scm:git:git@github.com:sannies/mp4parser.git</connection>\n-        <tag>mp4parser-project-1.0.4-3</tag>\n+        <tag>mp4parser-project-1.0.5.6-5</tag>\n     </scm>\n </project>",
    "Clarify GCE documentation": "diff --git a/docs/en/Running-Alluxio-on-GCE.md b/docs/en/Running-Alluxio-on-GCE.md\nindex 7ae517bca1..054df65158 100644\n--- a/docs/en/Running-Alluxio-on-GCE.md\n+++ b/docs/en/Running-Alluxio-on-GCE.md\n@@ -33,14 +33,14 @@ Download Alluxio to your local machine, and unzip it:\n \n Install [python>=2.7](https://www.python.org/), not python3.\n \n-Under `deploy/vagrant` directory in your home directory, run:\n+If you already have [pip](https://pip.pypa.io/en/latest/installing/) installed, you can directly\n+install the dependencies by running the following in the `deploy/vagrant` of the Alluxio install:\n \n-{% include Running-Alluxio-on-GCE/install-vagrant.md %}\n+{% include Running-Alluxio-on-GCE/install-pip.md %}\n \n-Alternatively, you can manually install [pip](https://pip.pypa.io/en/latest/installing/), and then\n-in `deploy/vagrant` run:\n+If you do not have `pip` installed, in the `deploy/vagrant` directory of the Alluxio install, run:\n \n-{% include Running-Alluxio-on-GCE/install-pip.md %}\n+{% include Running-Alluxio-on-GCE/install-vagrant.md %}\n \n ## Launch a Cluster\n \n@@ -48,9 +48,16 @@ To run an Alluxio cluster on GCE, you need a [Google Cloud](https://cloud.google\n \n If you are new to Google Cloud, create a billing account and project at the [free trial signup page](https://console.cloud.google.com/billing/freetrial). Also, If you are not familiar with Google Compute Engine, you may want to review the [documentation](https://cloud.google.com/compute/docs) first.\n \n-Next, new and existing Google Cloud users need to choose or create a service account within the [Console](https://console.google.com) on the [Permissions](https://console.cloud.google.com/permissions) page, under the [Service Accounts](https://console.cloud.google.com/permissions) tab.\n-If creating a new service account, check \"Furnish a new private key.\" from the account creation dialog box. Download and store the JSON key in a safe location.\n-If reusing a service account, you'll need to have saved JSON keys for the account or download new keys. To download keys for an existing service account, while still in the [Service Accounts](https://console.cloud.google.com/permissions) tab, find the menu for the account under the 3 dots at the right of the service account list and select \"create key.\" Save the JSON key in a safe location.\n+Next, you will need your JSON keys for your GCE project. Go to the\n+[Service Accounts](https://console.cloud.google.com/iam-admin/serviceaccounts) section of the\n+[IAM & Admin](https://console.cloud.google.com/projectselector/iam-admin) page in the Console.\n+\n+If you are creating a new service account, make sure to check the option \"Furnish a new private key\"\n+and the \"JSON\" key type, and the JSON key will be downloaded. Save the JSON key in a safe location.\n+\n+If you are using an existing service account, you should have already downloaded the JSON keys.\n+If not, you can create a new JSON key for the existing service account (click on the 3 dots to the\n+right, then \"create key\"), which will download the JSON key. Save the JSON key in a safe location.\n \n Using the [gcloud sdk](https://console.cloud.google.com) configure keys for ssh:\n \n@@ -62,13 +69,14 @@ Copy `deploy/vagrant/conf/gce.yml.template` to `deploy/vagrant/conf/gce.yml` by:\n \n In the configuration file `deploy/vagrant/conf/gce.yml`, set the project id, service account, location to JSON key and ssh username you've just created.\n \n-For GCE, the default underfs is Google Cloud Storage (GCS). You need to sign into your\n-[Google Cloud console](https://console.cloud.google.com), create a GCS bucket and write\n-the bucket's name to the field `GCS:Bucket` in `conf/ufs.yml`. To use other under storage systems,\n-configure the field `Type` and the corresponding configurations in `conf/ufs.yml`.\n+For GCE, the default underfs is Google Cloud Storage (GCS). Visit the\n+[Storage](https://console.cloud.google.com/storage/)  of the Google Cloud console, create a GCS\n+bucket, and fill in the bucket's name to the field `GCS:Bucket` in `conf/ufs.yml`. To use other\n+under storage systems, configure the field `Type` and the corresponding configurations in\n+`conf/ufs.yml`.\n \n-To access GCS with access keys, you need to create [developer keys](https://cloud.google.com/storage/docs/migrating#keys)\n-in GCS console [Interoperability setting](https://console.cloud.google.com/storage/settings)\n+To access GCS, you need to create [developer keys](https://cloud.google.com/storage/docs/migrating#keys)\n+in the [Interoperability tab](https://console.cloud.google.com/storage/settings) of the GCS console,\n and set shell environment variables `GCS_ACCESS_KEY_ID` and `GCS_SECRET_ACCESS_KEY` by:\n \n {% include Running-Alluxio-on-GCE/access-key.md %}\n@@ -97,15 +105,14 @@ following, which assumes a network named 'default'.\n \n {% include Running-Alluxio-on-GCE/add-firewall-rule.md %}\n \n-Visit `http://{MASTER_IP}:{PORT}` in the browser to access the Web UIs.\n+Visit `http://{MASTER_IP}:{PORT}` in the browser to access the Alluxio Web UI.\n \n You can also monitor the instances state through\n [Google Cloud console](https://console.cloud.google.com).\n \n Here are some scenarios when you may want to check the console:\n  - When the cluster creation fails, check GCE instances status/logs.\n- - After the cluster is destroyed, confirm GCE instances are terminated.\n- - When you no longer need the cluster, make sure GCE instances are NOT costing you extra money.\n+ - After the cluster is destroyed, confirm GCE instances are terminated (to avoid unexpected costs).\n \n **Access with ssh**\n \n@@ -121,21 +128,20 @@ For example, you can ssh into `AlluxioMaster` with:\n \n All software is installed under the root directory, e.g. Alluxio is installed in `/alluxio`.\n \n-On the `AlluxioMaster` node, you can run tests against Alluxio to check its health:\n+On the `AlluxioMaster` node, you can run sample tests on Alluxio to check its health:\n \n {% include Running-Alluxio-on-GCE/runTests.md %}\n \n After the tests finish, visit Alluxio web UI at `http://{MASTER_IP}:19999` again. Click `Browse\n-File System` in the navigation bar, and you should see the files written to Alluxio by the above\n-tests.\n+File System` in the navigation bar, and you should see the files written to Alluxio by the tests.\n \n-From a node in the cluster, you can ssh to other nodes in the cluster without password with:\n+From a node in the cluster, you can ssh to other nodes in the cluster with:\n \n {% include Running-Alluxio-on-GCE/ssh-other-node.md %}\n \n ## Destroy the cluster\n \n-Under `deploy/vagrant` directory, you can run:\n+In the `deploy/vagrant` directory, you can run:\n \n {% include Running-Alluxio-on-GCE/destroy.md %}\n ",
    "Adding scandir to third - party .": "diff --git a/third-party/py/scandir/.gitattributes b/third-party/py/scandir/.gitattributes\nnew file mode 100755\nindex 0000000000..176a458f94\n--- /dev/null\n+++ b/third-party/py/scandir/.gitattributes\n@@ -0,0 +1 @@\n+* text=auto\ndiff --git a/third-party/py/scandir/.gitignore b/third-party/py/scandir/.gitignore\nnew file mode 100755\nindex 0000000000..0b5c2d88ec\n--- /dev/null\n+++ b/third-party/py/scandir/.gitignore\n@@ -0,0 +1,14 @@\n+*.pyc\n+*.pyd\n+*.so\n+*.sublime-project\n+*.sublime-workspace\n+benchtree\n+build\n+dist\n+build.bat\n+upload.bat\n+MANIFEST\n+test/*.log\n+test/testdir\n+__pycache__\ndiff --git a/third-party/py/scandir/LICENSE.txt b/third-party/py/scandir/LICENSE.txt\nnew file mode 100755\nindex 0000000000..0759f503f2\n--- /dev/null\n+++ b/third-party/py/scandir/LICENSE.txt\n@@ -0,0 +1,27 @@\n+Copyright (c) 2012, Ben Hoyt\n+All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions are met:\n+\n+* Redistributions of source code must retain the above copyright notice, this\n+list of conditions and the following disclaimer.\n+\n+* Redistributions in binary form must reproduce the above copyright notice,\n+this list of conditions and the following disclaimer in the documentation\n+and/or other materials provided with the distribution.\n+\n+* Neither the name of Ben Hoyt nor the names of its contributors may be used\n+to endorse or promote products derived from this software without specific\n+prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n+FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n+CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\ndiff --git a/third-party/py/scandir/MANIFEST.in b/third-party/py/scandir/MANIFEST.in\nnew file mode 100755\nindex 0000000000..91d586c9a9\n--- /dev/null\n+++ b/third-party/py/scandir/MANIFEST.in\n@@ -0,0 +1,7 @@\n+include *.py\n+include *.c\n+include *.h\n+include *.txt\n+include README.md\n+recursive-include test *.py\n+recursive-include test *.txt\ndiff --git a/third-party/py/scandir/README.facebook b/third-party/py/scandir/README.facebook\nnew file mode 100644\nindex 0000000000..8091d9585a\n--- /dev/null\n+++ b/third-party/py/scandir/README.facebook\n@@ -0,0 +1,6 @@\n+Project URL:\n+Git repo to clone: https://github.com/benhoyt/scandir\n+Git revision: 03d8b14b9c25543cbf26e0351935c83f658f701d\n+License: BSD\n+Local modifications:\n+  - None\ndiff --git a/third-party/py/scandir/README.rst b/third-party/py/scandir/README.rst\nnew file mode 100755\nindex 0000000000..9c6c885743\n--- /dev/null\n+++ b/third-party/py/scandir/README.rst\n@@ -0,0 +1,193 @@\n+scandir, a better directory iterator and faster os.walk()\n+=========================================================\n+\n+``scandir()`` is a directory iteration function like ``os.listdir()``,\n+except that instead of returning a list of bare filenames, it yields\n+``DirEntry`` objects that include file type and stat information along\n+with the name. Using ``scandir()`` increases the speed of ``os.walk()``\n+by 2-20 times (depending on the platform and file system) by avoiding\n+unnecessary calls to ``os.stat()`` in most cases.\n+\n+\n+Now included in a Python near you!\n+----------------------------------\n+\n+``scandir`` has been included in the Python 3.5 standard library as\n+``os.scandir()``, and the related performance improvements to\n+``os.walk()`` have also been included. So if you're lucky enough to be\n+using Python 3.5 (release date September 13, 2015) you get the benefit\n+immediately, otherwise just\n+`download this module from PyPI <https://pypi.python.org/pypi/scandir>`_,\n+install it with ``pip install scandir``, and then do something like\n+this in your code::\n+\n+    # Use the built-in version of scandir/walk if possible, otherwise\n+    # use the scandir module version\n+    try:\n+        from os import scandir, walk\n+    except ImportError:\n+        from scandir import scandir, walk\n+\n+`PEP 471 <https://www.python.org/dev/peps/pep-0471/>`_, which is the\n+PEP that proposes including ``scandir`` in the Python standard library,\n+was `accepted <https://mail.python.org/pipermail/python-dev/2014-July/135561.html>`_\n+in July 2014 by Victor Stinner, the BDFL-delegate for the PEP.\n+\n+This ``scandir`` module is intended to work on Python 2.6+ and Python\n+3.2+ (and it has been tested on those versions).\n+\n+\n+Background\n+----------\n+\n+Python's built-in ``os.walk()`` is significantly slower than it needs to be,\n+because -- in addition to calling ``listdir()`` on each directory -- it calls\n+``stat()`` on each file to determine whether the filename is a directory or not.\n+But both ``FindFirstFile`` / ``FindNextFile`` on Windows and ``readdir`` on Linux/OS\n+X already tell you whether the files returned are directories or not, so\n+no further ``stat`` system calls are needed. In short, you can reduce the number\n+of system calls from about 2N to N, where N is the total number of files and\n+directories in the tree.\n+\n+In practice, removing all those extra system calls makes ``os.walk()`` about\n+**7-50 times as fast on Windows, and about 3-10 times as fast on Linux and Mac OS\n+X.** So we're not talking about micro-optimizations. See more benchmarks\n+in the \"Benchmarks\" section below.\n+\n+Somewhat relatedly, many people have also asked for a version of\n+``os.listdir()`` that yields filenames as it iterates instead of returning them\n+as one big list. This improves memory efficiency for iterating very large\n+directories.\n+\n+So as well as a faster ``walk()``, scandir adds a new ``scandir()`` function.\n+They're pretty easy to use, but see \"The API\" below for the full docs.\n+\n+\n+Benchmarks\n+----------\n+\n+Below are results showing how many times as fast ``scandir.walk()`` is than\n+``os.walk()`` on various systems, found by running ``benchmark.py`` with no\n+arguments:\n+\n+====================   ==============   =============\n+System version         Python version   Times as fast\n+====================   ==============   =============\n+Windows 7 64-bit       2.7.7 64-bit     10.4\n+Windows 7 64-bit SSD   2.7.7 64-bit     10.3\n+Windows 7 64-bit NFS   2.7.6 64-bit     36.8\n+Windows 7 64-bit SSD   3.4.1 64-bit     9.9\n+Windows 7 64-bit SSD   3.5.0 64-bit     9.5\n+CentOS 6.2 64-bit      2.6.6 64-bit     3.9\n+Ubuntu 14.04 64-bit    2.7.6 64-bit     5.8\n+Mac OS X 10.9.3        2.7.5 64-bit     3.8\n+====================   ==============   =============\n+\n+All of the above tests were done using the fast C version of scandir\n+(source code in ``_scandir.c``).\n+\n+Note that the gains are less than the above on smaller directories and greater\n+on larger directories. This is why ``benchmark.py`` creates a test directory\n+tree with a standardized size.\n+\n+\n+The API\n+-------\n+\n+walk()\n+~~~~~~\n+\n+The API for ``scandir.walk()`` is exactly the same as ``os.walk()``, so just\n+`read the Python docs <https://docs.python.org/3.5/library/os.html#os.walk>`_.\n+\n+scandir()\n+~~~~~~~~~\n+\n+The full docs for ``scandir()`` and the ``DirEntry`` objects it yields are\n+available in the `Python documentation here <https://docs.python.org/3.5/library/os.html#os.scandir>`_. \n+But below is a brief summary as well.\n+\n+    scandir(path='.') -> iterator of DirEntry objects for given path\n+\n+Like ``listdir``, ``scandir`` calls the operating system's directory\n+iteration system calls to get the names of the files in the given\n+``path``, but it's different from ``listdir`` in two ways:\n+\n+* Instead of returning bare filename strings, it returns lightweight\n+  ``DirEntry`` objects that hold the filename string and provide\n+  simple methods that allow access to the additional data the\n+  operating system may have returned.\n+\n+* It returns a generator instead of a list, so that ``scandir`` acts\n+  as a true iterator instead of returning the full list immediately.\n+\n+``scandir()`` yields a ``DirEntry`` object for each file and\n+sub-directory in ``path``. Just like ``listdir``, the ``'.'``\n+and ``'..'`` pseudo-directories are skipped, and the entries are\n+yielded in system-dependent order. Each ``DirEntry`` object has the\n+following attributes and methods:\n+\n+* ``name``: the entry's filename, relative to the scandir ``path``\n+  argument (corresponds to the return values of ``os.listdir``)\n+\n+* ``path``: the entry's full path name (not necessarily an absolute\n+  path) -- the equivalent of ``os.path.join(scandir_path, entry.name)``\n+\n+* ``is_dir(*, follow_symlinks=True)``: similar to\n+  ``pathlib.Path.is_dir()``, but the return value is cached on the\n+  ``DirEntry`` object; doesn't require a system call in most cases;\n+  don't follow symbolic links if ``follow_symlinks`` is False\n+\n+* ``is_file(*, follow_symlinks=True)``: similar to\n+  ``pathlib.Path.is_file()``, but the return value is cached on the\n+  ``DirEntry`` object; doesn't require a system call in most cases; \n+  don't follow symbolic links if ``follow_symlinks`` is False\n+\n+* ``is_symlink()``: similar to ``pathlib.Path.is_symlink()``, but the\n+  return value is cached on the ``DirEntry`` object; doesn't require a\n+  system call in most cases\n+\n+* ``stat(*, follow_symlinks=True)``: like ``os.stat()``, but the\n+  return value is cached on the ``DirEntry`` object; does not require a\n+  system call on Windows (except for symlinks); don't follow symbolic links\n+  (like ``os.lstat()``) if ``follow_symlinks`` is False\n+\n+* ``inode()``: return the inode number of the entry; the return value\n+  is cached on the ``DirEntry`` object\n+\n+Here's a very simple example of ``scandir()`` showing use of the\n+``DirEntry.name`` attribute and the ``DirEntry.is_dir()`` method::\n+\n+    def subdirs(path):\n+        \"\"\"Yield directory names not starting with '.' under given path.\"\"\"\n+        for entry in os.scandir(path):\n+            if not entry.name.startswith('.') and entry.is_dir():\n+                yield entry.name\n+\n+This ``subdirs()`` function will be significantly faster with scandir\n+than ``os.listdir()`` and ``os.path.isdir()`` on both Windows and POSIX\n+systems, especially on medium-sized or large directories.\n+\n+\n+Further reading\n+---------------\n+\n+* `The Python docs for scandir <https://docs.python.org/3.5/library/os.html#os.scandir>`_\n+* `PEP 471 <https://www.python.org/dev/peps/pep-0471/>`_, the\n+  (now-accepted) Python Enhancement Proposal that proposed adding\n+  ``scandir`` to the standard library -- a lot of details here,\n+  including rejected ideas and previous discussion\n+\n+\n+Flames, comments, bug reports\n+-----------------------------\n+\n+Please send flames, comments, and questions about scandir to Ben Hoyt:\n+\n+http://benhoyt.com/\n+\n+File bug reports for the version in the Python 3.5 standard library\n+`here <https://docs.python.org/3.5/bugs.html>`_, or file bug reports\n+or feature requests for this module at the GitHub project page:\n+\n+https://github.com/benhoyt/scandir\ndiff --git a/third-party/py/scandir/_scandir.c b/third-party/py/scandir/_scandir.c\nnew file mode 100755\nindex 0000000000..12a6706f67\n--- /dev/null\n+++ b/third-party/py/scandir/_scandir.c\n@@ -0,0 +1,1818 @@\n+/* C speedups for scandir module\n+\n+This is divided into four sections (each prefixed with a \"SECTION:\"\n+comment):\n+\n+1) Python 2/3 compatibility\n+2) Helper utilities from posixmodule.c, fileutils.h, etc\n+3) SECTION: Main DirEntry and scandir implementation, taken from\n+   Python 3.5's posixmodule.c\n+4) Module and method definitions and initialization code\n+\n+*/\n+\n+#include <Python.h>\n+#include <structseq.h>\n+#include <structmember.h>\n+#include \"osdefs.h\"\n+\n+#ifdef MS_WINDOWS\n+#include <windows.h>\n+#include \"winreparse.h\"\n+#else\n+#include <dirent.h>\n+#ifndef HAVE_DIRENT_H\n+#define HAVE_DIRENT_H 1\n+#endif\n+#endif\n+\n+#define MODNAME \"scandir\"\n+\n+\n+/* SECTION: Python 2/3 compatibility */\n+\n+#if PY_MAJOR_VERSION >= 3\n+#define INIT_ERROR return NULL\n+#else\n+#define INIT_ERROR return\n+#endif\n+\n+#if PY_MAJOR_VERSION < 3 || PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION <= 2\n+#define _Py_IDENTIFIER(name) static char * PyId_##name = #name;\n+#define _PyObject_GetAttrId(obj, pyid_name) PyObject_GetAttrString((obj), *(pyid_name))\n+#define PyExc_FileNotFoundError PyExc_OSError\n+#define PyUnicode_AsUnicodeAndSize(unicode, addr_length) \\\n+    PyUnicode_AsUnicode(unicode); *(addr_length) = PyUnicode_GetSize(unicode)\n+#endif\n+\n+\n+/* SECTION: Helper utilities from posixmodule.c, fileutils.h, etc */\n+\n+#if !defined(MS_WINDOWS) && defined(DT_UNKNOWN)\n+#define HAVE_DIRENT_D_TYPE 1\n+#endif\n+\n+#ifdef HAVE_DIRENT_H\n+#include <dirent.h>\n+#define NAMLEN(dirent) strlen((dirent)->d_name)\n+#else\n+#if defined(__WATCOMC__) && !defined(__QNX__)\n+#include <direct.h>\n+#define NAMLEN(dirent) strlen((dirent)->d_name)\n+#else\n+#define dirent direct\n+#define NAMLEN(dirent) (dirent)->d_namlen\n+#endif\n+#ifdef HAVE_SYS_NDIR_H\n+#include <sys/ndir.h>\n+#endif\n+#ifdef HAVE_SYS_DIR_H\n+#include <sys/dir.h>\n+#endif\n+#ifdef HAVE_NDIR_H\n+#include <ndir.h>\n+#endif\n+#endif\n+\n+#ifndef Py_CLEANUP_SUPPORTED\n+#define Py_CLEANUP_SUPPORTED 0x20000\n+#endif\n+\n+#ifndef S_IFLNK\n+/* Windows doesn't define S_IFLNK but posixmodule.c maps\n+ * IO_REPARSE_TAG_SYMLINK to S_IFLNK */\n+#  define S_IFLNK 0120000\n+#endif\n+\n+// _Py_stat_struct is already defined in fileutils.h on Python 3.5+\n+#if PY_MAJOR_VERSION < 3 || (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION < 5)\n+#ifdef MS_WINDOWS\n+struct _Py_stat_struct {\n+    unsigned long st_dev;\n+    __int64 st_ino;\n+    unsigned short st_mode;\n+    int st_nlink;\n+    int st_uid;\n+    int st_gid;\n+    unsigned long st_rdev;\n+    __int64 st_size;\n+    time_t st_atime;\n+    int st_atime_nsec;\n+    time_t st_mtime;\n+    int st_mtime_nsec;\n+    time_t st_ctime;\n+    int st_ctime_nsec;\n+    unsigned long st_file_attributes;\n+};\n+#else\n+#  define _Py_stat_struct stat\n+#endif\n+#endif\n+\n+/* choose the appropriate stat and fstat functions and return structs */\n+#undef STAT\n+#undef FSTAT\n+#undef STRUCT_STAT\n+#ifdef MS_WINDOWS\n+#       define STAT win32_stat\n+#       define LSTAT win32_lstat\n+#       define FSTAT _Py_fstat_noraise\n+#       define STRUCT_STAT struct _Py_stat_struct\n+#else\n+#       define STAT stat\n+#       define LSTAT lstat\n+#       define FSTAT fstat\n+#       define STRUCT_STAT struct stat\n+#endif\n+\n+#ifdef MS_WINDOWS\n+\n+static __int64 secs_between_epochs = 11644473600; /* Seconds between 1.1.1601 and 1.1.1970 */\n+\n+static void\n+FILE_TIME_to_time_t_nsec(FILETIME *in_ptr, time_t *time_out, int* nsec_out)\n+{\n+    /* XXX endianness. Shouldn't matter, as all Windows implementations are little-endian */\n+    /* Cannot simply cast and dereference in_ptr,\n+       since it might not be aligned properly */\n+    __int64 in;\n+    memcpy(&in, in_ptr, sizeof(in));\n+    *nsec_out = (int)(in % 10000000) * 100; /* FILETIME is in units of 100 nsec. */\n+    *time_out = Py_SAFE_DOWNCAST((in / 10000000) - secs_between_epochs, __int64, time_t);\n+}\n+\n+/* Below, we *know* that ugo+r is 0444 */\n+#if _S_IREAD != 0400\n+#error Unsupported C library\n+#endif\n+static int\n+attributes_to_mode(DWORD attr)\n+{\n+    int m = 0;\n+    if (attr & FILE_ATTRIBUTE_DIRECTORY)\n+        m |= _S_IFDIR | 0111; /* IFEXEC for user,group,other */\n+    else\n+        m |= _S_IFREG;\n+    if (attr & FILE_ATTRIBUTE_READONLY)\n+        m |= 0444;\n+    else\n+        m |= 0666;\n+    return m;\n+}\n+\n+void\n+_Py_attribute_data_to_stat(BY_HANDLE_FILE_INFORMATION *info, ULONG reparse_tag,\n+                           struct _Py_stat_struct *result)\n+{\n+    memset(result, 0, sizeof(*result));\n+    result->st_mode = attributes_to_mode(info->dwFileAttributes);\n+    result->st_size = (((__int64)info->nFileSizeHigh)<<32) + info->nFileSizeLow;\n+    result->st_dev = info->dwVolumeSerialNumber;\n+    result->st_rdev = result->st_dev;\n+    FILE_TIME_to_time_t_nsec(&info->ftCreationTime, &result->st_ctime, &result->st_ctime_nsec);\n+    FILE_TIME_to_time_t_nsec(&info->ftLastWriteTime, &result->st_mtime, &result->st_mtime_nsec);\n+    FILE_TIME_to_time_t_nsec(&info->ftLastAccessTime, &result->st_atime, &result->st_atime_nsec);\n+    result->st_nlink = info->nNumberOfLinks;\n+    result->st_ino = (((__int64)info->nFileIndexHigh)<<32) + info->nFileIndexLow;\n+    if (reparse_tag == IO_REPARSE_TAG_SYMLINK) {\n+        /* first clear the S_IFMT bits */\n+        result->st_mode ^= (result->st_mode & S_IFMT);\n+        /* now set the bits that make this a symlink */\n+        result->st_mode |= S_IFLNK;\n+    }\n+    result->st_file_attributes = info->dwFileAttributes;\n+}\n+\n+static BOOL\n+get_target_path(HANDLE hdl, wchar_t **target_path)\n+{\n+    int buf_size, result_length;\n+    wchar_t *buf;\n+\n+    /* We have a good handle to the target, use it to determine\n+       the target path name (then we'll call lstat on it). */\n+    buf_size = GetFinalPathNameByHandleW(hdl, 0, 0,\n+                                         VOLUME_NAME_DOS);\n+    if(!buf_size)\n+        return FALSE;\n+\n+    buf = PyMem_New(wchar_t, buf_size+1);\n+    if (!buf) {\n+        SetLastError(ERROR_OUTOFMEMORY);\n+        return FALSE;\n+    }\n+\n+    result_length = GetFinalPathNameByHandleW(hdl,\n+                       buf, buf_size, VOLUME_NAME_DOS);\n+\n+    if(!result_length) {\n+        PyMem_Free(buf);\n+        return FALSE;\n+    }\n+\n+    if(!CloseHandle(hdl)) {\n+        PyMem_Free(buf);\n+        return FALSE;\n+    }\n+\n+    buf[result_length] = 0;\n+\n+    *target_path = buf;\n+    return TRUE;\n+}\n+\n+static int\n+win32_get_reparse_tag(HANDLE reparse_point_handle, ULONG *reparse_tag)\n+{\n+    char target_buffer[MAXIMUM_REPARSE_DATA_BUFFER_SIZE];\n+    REPARSE_DATA_BUFFER *rdb = (REPARSE_DATA_BUFFER *)target_buffer;\n+    DWORD n_bytes_returned;\n+\n+    if (0 == DeviceIoControl(\n+        reparse_point_handle,\n+        FSCTL_GET_REPARSE_POINT,\n+        NULL, 0, /* in buffer */\n+        target_buffer, sizeof(target_buffer),\n+        &n_bytes_returned,\n+        NULL)) /* we're not using OVERLAPPED_IO */\n+        return FALSE;\n+\n+    if (reparse_tag)\n+        *reparse_tag = rdb->ReparseTag;\n+\n+    return TRUE;\n+}\n+\n+static void\n+find_data_to_file_info_w(WIN32_FIND_DATAW *pFileData,\n+                         BY_HANDLE_FILE_INFORMATION *info,\n+                         ULONG *reparse_tag)\n+{\n+    memset(info, 0, sizeof(*info));\n+    info->dwFileAttributes = pFileData->dwFileAttributes;\n+    info->ftCreationTime   = pFileData->ftCreationTime;\n+    info->ftLastAccessTime = pFileData->ftLastAccessTime;\n+    info->ftLastWriteTime  = pFileData->ftLastWriteTime;\n+    info->nFileSizeHigh    = pFileData->nFileSizeHigh;\n+    info->nFileSizeLow     = pFileData->nFileSizeLow;\n+/*  info->nNumberOfLinks   = 1; */\n+    if (pFileData->dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT)\n+        *reparse_tag = pFileData->dwReserved0;\n+    else\n+        *reparse_tag = 0;\n+}\n+\n+static BOOL\n+attributes_from_dir_w(LPCWSTR pszFile, BY_HANDLE_FILE_INFORMATION *info, ULONG *reparse_tag)\n+{\n+    HANDLE hFindFile;\n+    WIN32_FIND_DATAW FileData;\n+    hFindFile = FindFirstFileW(pszFile, &FileData);\n+    if (hFindFile == INVALID_HANDLE_VALUE)\n+        return FALSE;\n+    FindClose(hFindFile);\n+    find_data_to_file_info_w(&FileData, info, reparse_tag);\n+    return TRUE;\n+}\n+\n+static int\n+win32_xstat_impl_w(const wchar_t *path, struct _Py_stat_struct *result,\n+                   BOOL traverse)\n+{\n+    int code;\n+    HANDLE hFile, hFile2;\n+    BY_HANDLE_FILE_INFORMATION info;\n+    ULONG reparse_tag = 0;\n+    wchar_t *target_path;\n+    const wchar_t *dot;\n+\n+    hFile = CreateFileW(\n+        path,\n+        FILE_READ_ATTRIBUTES, /* desired access */\n+        0, /* share mode */\n+        NULL, /* security attributes */\n+        OPEN_EXISTING,\n+        /* FILE_FLAG_BACKUP_SEMANTICS is required to open a directory */\n+        /* FILE_FLAG_OPEN_REPARSE_POINT does not follow the symlink.\n+           Because of this, calls like GetFinalPathNameByHandle will return\n+           the symlink path again and not the actual final path. */\n+        FILE_ATTRIBUTE_NORMAL|FILE_FLAG_BACKUP_SEMANTICS|\n+            FILE_FLAG_OPEN_REPARSE_POINT,\n+        NULL);\n+\n+    if (hFile == INVALID_HANDLE_VALUE) {\n+        /* Either the target doesn't exist, or we don't have access to\n+           get a handle to it. If the former, we need to return an error.\n+           If the latter, we can use attributes_from_dir. */\n+        if (GetLastError() != ERROR_SHARING_VIOLATION)\n+            return -1;\n+        /* Could not get attributes on open file. Fall back to\n+           reading the directory. */\n+        if (!attributes_from_dir_w(path, &info, &reparse_tag))\n+            /* Very strange. This should not fail now */\n+            return -1;\n+        if (info.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT) {\n+            if (traverse) {\n+                /* Should traverse, but could not open reparse point handle */\n+                SetLastError(ERROR_SHARING_VIOLATION);\n+                return -1;\n+            }\n+        }\n+    } else {\n+        if (!GetFileInformationByHandle(hFile, &info)) {\n+            CloseHandle(hFile);\n+            return -1;\n+        }\n+        if (info.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT) {\n+            if (!win32_get_reparse_tag(hFile, &reparse_tag))\n+                return -1;\n+\n+            /* Close the outer open file handle now that we're about to\n+               reopen it with different flags. */\n+            if (!CloseHandle(hFile))\n+                return -1;\n+\n+            if (traverse) {\n+                /* In order to call GetFinalPathNameByHandle we need to open\n+                   the file without the reparse handling flag set. */\n+                hFile2 = CreateFileW(\n+                           path, FILE_READ_ATTRIBUTES, FILE_SHARE_READ,\n+                           NULL, OPEN_EXISTING,\n+                           FILE_ATTRIBUTE_NORMAL|FILE_FLAG_BACKUP_SEMANTICS,\n+                           NULL);\n+                if (hFile2 == INVALID_HANDLE_VALUE)\n+                    return -1;\n+\n+                if (!get_target_path(hFile2, &target_path))\n+                    return -1;\n+\n+                code = win32_xstat_impl_w(target_path, result, FALSE);\n+                PyMem_Free(target_path);\n+                return code;\n+            }\n+        } else\n+            CloseHandle(hFile);\n+    }\n+    _Py_attribute_data_to_stat(&info, reparse_tag, result);\n+\n+    /* Set S_IEXEC if it is an .exe, .bat, ... */\n+    dot = wcsrchr(path, '.');\n+    if (dot) {\n+        if (_wcsicmp(dot, L\".bat\") == 0 || _wcsicmp(dot, L\".cmd\") == 0 ||\n+            _wcsicmp(dot, L\".exe\") == 0 || _wcsicmp(dot, L\".com\") == 0)\n+            result->st_mode |= 0111;\n+    }\n+    return 0;\n+}\n+\n+static int\n+win32_xstat_w(const wchar_t *path, struct _Py_stat_struct *result, BOOL traverse)\n+{\n+    /* Protocol violation: we explicitly clear errno, instead of\n+       setting it to a POSIX error. Callers should use GetLastError. */\n+    int code = win32_xstat_impl_w(path, result, traverse);\n+    errno = 0;\n+    return code;\n+}\n+\n+static int\n+win32_lstat_w(const wchar_t* path, struct _Py_stat_struct *result)\n+{\n+    return win32_xstat_w(path, result, FALSE);\n+}\n+\n+static int\n+win32_stat_w(const wchar_t* path, struct _Py_stat_struct *result)\n+{\n+    return win32_xstat_w(path, result, TRUE);\n+}\n+\n+#endif /* MS_WINDOWS */\n+\n+static PyTypeObject StatResultType;\n+\n+static PyObject *billion = NULL;\n+\n+static newfunc structseq_new;\n+\n+static PyObject *\n+statresult_new(PyTypeObject *type, PyObject *args, PyObject *kwds)\n+{\n+    PyStructSequence *result;\n+    int i;\n+\n+    result = (PyStructSequence*)structseq_new(type, args, kwds);\n+    if (!result)\n+        return NULL;\n+    /* If we have been initialized from a tuple,\n+       st_?time might be set to None. Initialize it\n+       from the int slots.  */\n+    for (i = 7; i <= 9; i++) {\n+        if (result->ob_item[i+3] == Py_None) {\n+            Py_DECREF(Py_None);\n+            Py_INCREF(result->ob_item[i]);\n+            result->ob_item[i+3] = result->ob_item[i];\n+        }\n+    }\n+    return (PyObject*)result;\n+}\n+\n+/* If true, st_?time is float. */\n+static int _stat_float_times = 1;\n+\n+static void\n+fill_time(PyObject *v, int index, time_t sec, unsigned long nsec)\n+{\n+#if SIZEOF_TIME_T > SIZEOF_LONG\n+    PyObject *s = PyLong_FromLongLong((PY_LONG_LONG)sec);\n+#else\n+#if PY_MAJOR_VERSION >= 3\n+    PyObject *s = PyLong_FromLong((long)sec);\n+#else\n+    PyObject *s = PyInt_FromLong((long)sec);\n+#endif\n+#endif\n+    PyObject *ns_fractional = PyLong_FromUnsignedLong(nsec);\n+    PyObject *s_in_ns = NULL;\n+    PyObject *ns_total = NULL;\n+    PyObject *float_s = NULL;\n+\n+    if (!(s && ns_fractional))\n+        goto exit;\n+\n+    s_in_ns = PyNumber_Multiply(s, billion);\n+    if (!s_in_ns)\n+        goto exit;\n+\n+    ns_total = PyNumber_Add(s_in_ns, ns_fractional);\n+    if (!ns_total)\n+        goto exit;\n+\n+    if (_stat_float_times) {\n+        float_s = PyFloat_FromDouble(sec + 1e-9*nsec);\n+        if (!float_s)\n+            goto exit;\n+    }\n+    else {\n+        float_s = s;\n+        Py_INCREF(float_s);\n+    }\n+\n+    PyStructSequence_SET_ITEM(v, index, s);\n+    PyStructSequence_SET_ITEM(v, index+3, float_s);\n+    PyStructSequence_SET_ITEM(v, index+6, ns_total);\n+    s = NULL;\n+    float_s = NULL;\n+    ns_total = NULL;\n+exit:\n+    Py_XDECREF(s);\n+    Py_XDECREF(ns_fractional);\n+    Py_XDECREF(s_in_ns);\n+    Py_XDECREF(ns_total);\n+    Py_XDECREF(float_s);\n+}\n+\n+#ifdef MS_WINDOWS\n+#define HAVE_STAT_NSEC 1\n+#define HAVE_STRUCT_STAT_ST_FILE_ATTRIBUTES 1\n+#endif\n+\n+#ifdef HAVE_STRUCT_STAT_ST_BLKSIZE\n+#define ST_BLKSIZE_IDX 16\n+#else\n+#define ST_BLKSIZE_IDX 15\n+#endif\n+\n+#ifdef HAVE_STRUCT_STAT_ST_BLOCKS\n+#define ST_BLOCKS_IDX (ST_BLKSIZE_IDX+1)\n+#else\n+#define ST_BLOCKS_IDX ST_BLKSIZE_IDX\n+#endif\n+\n+#ifdef HAVE_STRUCT_STAT_ST_RDEV\n+#define ST_RDEV_IDX (ST_BLOCKS_IDX+1)\n+#else\n+#define ST_RDEV_IDX ST_BLOCKS_IDX\n+#endif\n+\n+#ifdef HAVE_STRUCT_STAT_ST_FLAGS\n+#define ST_FLAGS_IDX (ST_RDEV_IDX+1)\n+#else\n+#define ST_FLAGS_IDX ST_RDEV_IDX\n+#endif\n+\n+#ifdef HAVE_STRUCT_STAT_ST_GEN\n+#define ST_GEN_IDX (ST_FLAGS_IDX+1)\n+#else\n+#define ST_GEN_IDX ST_FLAGS_IDX\n+#endif\n+\n+#ifdef HAVE_STRUCT_STAT_ST_BIRTHTIME\n+#define ST_BIRTHTIME_IDX (ST_GEN_IDX+1)\n+#else\n+#define ST_BIRTHTIME_IDX ST_GEN_IDX\n+#endif\n+\n+#ifdef HAVE_STRUCT_STAT_ST_FILE_ATTRIBUTES\n+#define ST_FILE_ATTRIBUTES_IDX (ST_BIRTHTIME_IDX+1)\n+#else\n+#define ST_FILE_ATTRIBUTES_IDX ST_BIRTHTIME_IDX\n+#endif\n+\n+#ifdef HAVE_LONG_LONG\n+#  define _PyLong_FromDev PyLong_FromLongLong\n+#else\n+#  define _PyLong_FromDev PyLong_FromLong\n+#endif\n+\n+#ifndef MS_WINDOWS\n+PyObject *\n+_PyLong_FromUid(uid_t uid)\n+{\n+    if (uid == (uid_t)-1)\n+        return PyLong_FromLong(-1);\n+    return PyLong_FromUnsignedLong(uid);\n+}\n+\n+PyObject *\n+_PyLong_FromGid(gid_t gid)\n+{\n+    if (gid == (gid_t)-1)\n+        return PyLong_FromLong(-1);\n+    return PyLong_FromUnsignedLong(gid);\n+}\n+#endif\n+\n+/* pack a system stat C structure into the Python stat tuple\n+   (used by posix_stat() and posix_fstat()) */\n+static PyObject*\n+_pystat_fromstructstat(STRUCT_STAT *st)\n+{\n+    unsigned long ansec, mnsec, cnsec;\n+    PyObject *v = PyStructSequence_New(&StatResultType);\n+    if (v == NULL)\n+     ",
    "Fix quality flaws": "diff --git a/server/sonar-server/src/main/java/org/sonar/server/projectanalysis/ws/EventValidator.java b/server/sonar-server/src/main/java/org/sonar/server/projectanalysis/ws/EventValidator.java\nindex 52604c00cb6..480fd627c66 100644\n--- a/server/sonar-server/src/main/java/org/sonar/server/projectanalysis/ws/EventValidator.java\n+++ b/server/sonar-server/src/main/java/org/sonar/server/projectanalysis/ws/EventValidator.java\n@@ -32,6 +32,10 @@ class EventValidator {\n   private static final Set<String> AUTHORIZED_CATEGORIES = ImmutableSet.of(\"Version\", \"Other\");\n   private static final String AUTHORIZED_CATEGORIES_INLINED = Joiner.on(\", \").join(AUTHORIZED_CATEGORIES);\n \n+  private EventValidator() {\n+    // prevent instantiation\n+  }\n+\n   static Consumer<EventDto> checkModifiable() {\n     return event -> checkArgument(AUTHORIZED_CATEGORIES.contains(event.getCategory()),\n       \"Event of category '%s' cannot be modified. Authorized categories: %s\",\ndiff --git a/server/sonar-server/src/main/java/org/sonar/server/setting/ws/ResetAction.java b/server/sonar-server/src/main/java/org/sonar/server/setting/ws/ResetAction.java\nindex baea3587c53..482c5ee554d 100644\n--- a/server/sonar-server/src/main/java/org/sonar/server/setting/ws/ResetAction.java\n+++ b/server/sonar-server/src/main/java/org/sonar/server/setting/ws/ResetAction.java\n@@ -98,7 +98,7 @@ public class ResetAction implements SettingsWsAction {\n       resetRequest.getKeys().forEach(key -> {\n         SettingData data = new SettingData(key, emptyList(), component.orElse(null));\n         ImmutableList.of(validations.scope(), validations.qualifier())\n-          .forEach(validation -> validation.validate(data));\n+          .forEach(validation -> validation.accept(data));\n       });\n \n       List<String> keys = getKeys(resetRequest);\ndiff --git a/server/sonar-server/src/main/java/org/sonar/server/setting/ws/SetAction.java b/server/sonar-server/src/main/java/org/sonar/server/setting/ws/SetAction.java\nindex 38fbb074e17..7036a0572f1 100644\n--- a/server/sonar-server/src/main/java/org/sonar/server/setting/ws/SetAction.java\n+++ b/server/sonar-server/src/main/java/org/sonar/server/setting/ws/SetAction.java\n@@ -206,10 +206,10 @@ public class SetAction implements SettingsWsAction {\n     checkValueIsSet(request);\n     SettingData settingData = new SettingData(request.getKey(), valuesFromRequest(request), component.orElse(null));\n     ImmutableList.of(validations.scope(), validations.qualifier(), validations.valueType())\n-      .forEach(validation -> validation.validate(settingData));\n+      .forEach(validation -> validation.accept(settingData));\n   }\n \n-  private void validatePropertySet(SetRequest request, @Nullable PropertyDefinition definition) {\n+  private static void validatePropertySet(SetRequest request, @Nullable PropertyDefinition definition) {\n     checkRequest(definition != null, \"Setting '%s' is undefined\", request.getKey());\n     checkRequest(PropertyType.PROPERTY_SET.equals(definition.type()), \"Parameter '%s' is used for setting of property set type only\", PARAM_FIELD_VALUES);\n \ndiff --git a/server/sonar-server/src/main/java/org/sonar/server/setting/ws/SettingValidations.java b/server/sonar-server/src/main/java/org/sonar/server/setting/ws/SettingValidations.java\nindex 89291bbc97b..c5b905d8b02 100644\n--- a/server/sonar-server/src/main/java/org/sonar/server/setting/ws/SettingValidations.java\n+++ b/server/sonar-server/src/main/java/org/sonar/server/setting/ws/SettingValidations.java\n@@ -22,6 +22,7 @@ package org.sonar.server.setting.ws;\n \n import java.util.List;\n import java.util.Locale;\n+import java.util.function.Consumer;\n import java.util.stream.Collectors;\n import javax.annotation.CheckForNull;\n import javax.annotation.Nullable;\n@@ -51,7 +52,7 @@ public class SettingValidations {\n     this.i18n = i18n;\n   }\n \n-  public SettingValidation scope() {\n+  public Consumer<SettingData> scope() {\n     return data -> {\n       PropertyDefinition definition = definitions.get(data.key);\n       checkRequest(data.component != null || definition == null || definition.global() || isGlobal(definition),\n@@ -59,7 +60,7 @@ public class SettingValidations {\n     };\n   }\n \n-  public SettingValidation qualifier() {\n+  public Consumer<SettingData> qualifier() {\n     return data -> {\n       String qualifier = data.component == null ? \"\" : data.component.qualifier();\n       PropertyDefinition definition = definitions.get(data.key);\n@@ -68,7 +69,7 @@ public class SettingValidations {\n     };\n   }\n \n-  public SettingValidation valueType() {\n+  public Consumer<SettingData> valueType() {\n     return new ValueTypeValidation();\n   }\n \n@@ -76,11 +77,6 @@ public class SettingValidations {\n     return !definition.global() && definition.qualifiers().isEmpty();\n   }\n \n-  @FunctionalInterface\n-  public interface SettingValidation {\n-    void validate(SettingData data);\n-  }\n-\n   public static class SettingData {\n     private final String key;\n     private final List<String> values;\n@@ -94,10 +90,9 @@ public class SettingValidations {\n     }\n   }\n \n-  private class ValueTypeValidation implements SettingValidation {\n-\n+  private class ValueTypeValidation implements Consumer<SettingData> {\n     @Override\n-    public void validate(SettingData data) {\n+    public void accept(SettingData data) {\n       PropertyDefinition definition = definitions.get(data.key);\n       if (definition == null) {\n         return;\ndiff --git a/sonar-ws/src/main/java/org/sonarqube/ws/client/license/package-info.java b/sonar-ws/src/main/java/org/sonarqube/ws/client/license/package-info.java\nnew file mode 100644\nindex 00000000000..9b7cf2aeb0c\n--- /dev/null\n+++ b/sonar-ws/src/main/java/org/sonarqube/ws/client/license/package-info.java\n@@ -0,0 +1,25 @@\n+/*\n+ * SonarQube\n+ * Copyright (C) 2009-2016 SonarSource SA\n+ * mailto:contact AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+\n+@ParametersAreNonnullByDefault\n+package org.sonarqube.ws.client.license;\n+\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\ndiff --git a/sonar-ws/src/test/java/org/sonarqube/ws/client/projectanalysis/CreateEventRequestTest.java b/sonar-ws/src/test/java/org/sonarqube/ws/client/projectanalysis/CreateEventRequestTest.java\nindex 75586393422..1d07f29b1ce 100644\n--- a/sonar-ws/src/test/java/org/sonarqube/ws/client/projectanalysis/CreateEventRequestTest.java\n+++ b/sonar-ws/src/test/java/org/sonarqube/ws/client/projectanalysis/CreateEventRequestTest.java\n@@ -49,7 +49,7 @@ public class CreateEventRequestTest {\n   public void other_category_by_default() {\n     CreateEventRequest result = underTest.setAnalysis(\"P1\").setName(\"name\").build();\n \n-    assertThat(OTHER.equals(result.getCategory()));\n+    assertThat(OTHER).isEqualTo(result.getCategory());\n   }\n \n   @Test",
    "Added template groups": "diff --git a/app/schemas/eu.faircode.email.DB/174.json b/app/schemas/eu.faircode.email.DB/174.json\nnew file mode 100644\nindex 0000000000..5f2a12f36e\n--- /dev/null\n+++ b/app/schemas/eu.faircode.email.DB/174.json\n@@ -0,0 +1,2298 @@\n+{\n+  \"formatVersion\": 1,\n+  \"database\": {\n+    \"version\": 174,\n+    \"identityHash\": \"48657efe9bc7d6c7a844ec83604d6f9a\",\n+    \"entities\": [\n+      {\n+        \"tableName\": \"identity\",\n+        \"createSql\": \"CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` TEXT NOT NULL, `email` TEXT NOT NULL, `account` INTEGER NOT NULL, `display` TEXT, `color` INTEGER, `signature` TEXT, `host` TEXT NOT NULL, `starttls` INTEGER NOT NULL, `insecure` INTEGER NOT NULL, `port` INTEGER NOT NULL, `auth_type` INTEGER NOT NULL, `provider` TEXT, `user` TEXT NOT NULL, `password` TEXT NOT NULL, `certificate` INTEGER NOT NULL, `certificate_alias` TEXT, `realm` TEXT, `fingerprint` TEXT, `use_ip` INTEGER NOT NULL, `ehlo` TEXT, `synchronize` INTEGER NOT NULL, `primary` INTEGER NOT NULL, `self` INTEGER NOT NULL, `sender_extra` INTEGER NOT NULL, `sender_extra_regex` TEXT, `replyto` TEXT, `cc` TEXT, `bcc` TEXT, `unicode` INTEGER NOT NULL, `plain_only` INTEGER NOT NULL, `encrypt` INTEGER NOT NULL, `delivery_receipt` INTEGER NOT NULL, `read_receipt` INTEGER NOT NULL, `store_sent` INTEGER NOT NULL, `sent_folder` INTEGER, `sign_key` INTEGER, `sign_key_alias` TEXT, `tbd` INTEGER, `state` TEXT, `error` TEXT, `last_connected` INTEGER, `max_size` INTEGER, FOREIGN KEY(`account`) REFERENCES `account`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )\",\n+        \"fields\": [\n+          {\n+            \"fieldPath\": \"id\",\n+            \"columnName\": \"id\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"name\",\n+            \"columnName\": \"name\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"email\",\n+            \"columnName\": \"email\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"account\",\n+            \"columnName\": \"account\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"display\",\n+            \"columnName\": \"display\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"color\",\n+            \"columnName\": \"color\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"signature\",\n+            \"columnName\": \"signature\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"host\",\n+            \"columnName\": \"host\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"encryption\",\n+            \"columnName\": \"starttls\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"insecure\",\n+            \"columnName\": \"insecure\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"port\",\n+            \"columnName\": \"port\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"auth_type\",\n+            \"columnName\": \"auth_type\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"provider\",\n+            \"columnName\": \"provider\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"user\",\n+            \"columnName\": \"user\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"password\",\n+            \"columnName\": \"password\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"certificate\",\n+            \"columnName\": \"certificate\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"certificate_alias\",\n+            \"columnName\": \"certificate_alias\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"realm\",\n+            \"columnName\": \"realm\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"fingerprint\",\n+            \"columnName\": \"fingerprint\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"use_ip\",\n+            \"columnName\": \"use_ip\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"ehlo\",\n+            \"columnName\": \"ehlo\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"synchronize\",\n+            \"columnName\": \"synchronize\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"primary\",\n+            \"columnName\": \"primary\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"self\",\n+            \"columnName\": \"self\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"sender_extra\",\n+            \"columnName\": \"sender_extra\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"sender_extra_regex\",\n+            \"columnName\": \"sender_extra_regex\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"replyto\",\n+            \"columnName\": \"replyto\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"cc\",\n+            \"columnName\": \"cc\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"bcc\",\n+            \"columnName\": \"bcc\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"unicode\",\n+            \"columnName\": \"unicode\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"plain_only\",\n+            \"columnName\": \"plain_only\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"encrypt\",\n+            \"columnName\": \"encrypt\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"delivery_receipt\",\n+            \"columnName\": \"delivery_receipt\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"read_receipt\",\n+            \"columnName\": \"read_receipt\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"store_sent\",\n+            \"columnName\": \"store_sent\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"sent_folder\",\n+            \"columnName\": \"sent_folder\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"sign_key\",\n+            \"columnName\": \"sign_key\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"sign_key_alias\",\n+            \"columnName\": \"sign_key_alias\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"tbd\",\n+            \"columnName\": \"tbd\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"state\",\n+            \"columnName\": \"state\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"error\",\n+            \"columnName\": \"error\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"last_connected\",\n+            \"columnName\": \"last_connected\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"max_size\",\n+            \"columnName\": \"max_size\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": false\n+          }\n+        ],\n+        \"primaryKey\": {\n+          \"columnNames\": [\n+            \"id\"\n+          ],\n+          \"autoGenerate\": true\n+        },\n+        \"indices\": [\n+          {\n+            \"name\": \"index_identity_account\",\n+            \"unique\": false,\n+            \"columnNames\": [\n+              \"account\"\n+            ],\n+            \"createSql\": \"CREATE INDEX IF NOT EXISTS `index_identity_account` ON `${TABLE_NAME}` (`account`)\"\n+          },\n+          {\n+            \"name\": \"index_identity_account_email\",\n+            \"unique\": false,\n+            \"columnNames\": [\n+              \"account\",\n+              \"email\"\n+            ],\n+            \"createSql\": \"CREATE INDEX IF NOT EXISTS `index_identity_account_email` ON `${TABLE_NAME}` (`account`, `email`)\"\n+          }\n+        ],\n+        \"foreignKeys\": [\n+          {\n+            \"table\": \"account\",\n+            \"onDelete\": \"CASCADE\",\n+            \"onUpdate\": \"NO ACTION\",\n+            \"columns\": [\n+              \"account\"\n+            ],\n+            \"referencedColumns\": [\n+              \"id\"\n+            ]\n+          }\n+        ]\n+      },\n+      {\n+        \"tableName\": \"account\",\n+        \"createSql\": \"CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`order` INTEGER, `id` INTEGER PRIMARY KEY AUTOINCREMENT, `pop` INTEGER NOT NULL, `host` TEXT NOT NULL, `starttls` INTEGER NOT NULL, `insecure` INTEGER NOT NULL, `port` INTEGER NOT NULL, `auth_type` INTEGER NOT NULL, `provider` TEXT, `user` TEXT NOT NULL, `password` TEXT NOT NULL, `certificate` INTEGER NOT NULL, `certificate_alias` TEXT, `realm` TEXT, `fingerprint` TEXT, `name` TEXT, `signature` TEXT, `color` INTEGER, `synchronize` INTEGER NOT NULL, `ondemand` INTEGER NOT NULL, `poll_exempted` INTEGER NOT NULL, `primary` INTEGER NOT NULL, `notify` INTEGER NOT NULL, `browse` INTEGER NOT NULL, `leave_on_server` INTEGER NOT NULL, `leave_deleted` INTEGER NOT NULL, `leave_on_device` INTEGER NOT NULL, `max_messages` INTEGER, `auto_seen` INTEGER NOT NULL, `separator` INTEGER, `swipe_left` INTEGER, `swipe_right` INTEGER, `move_to` INTEGER, `poll_interval` INTEGER NOT NULL, `keep_alive_ok` INTEGER NOT NULL, `keep_alive_failed` INTEGER NOT NULL, `keep_alive_succeeded` INTEGER NOT NULL, `partial_fetch` INTEGER NOT NULL, `ignore_size` INTEGER NOT NULL, `use_date` INTEGER NOT NULL, `use_received` INTEGER NOT NULL, `prefix` TEXT, `quota_usage` INTEGER, `quota_limit` INTEGER, `created` INTEGER, `tbd` INTEGER, `thread` INTEGER, `state` TEXT, `warning` TEXT, `error` TEXT, `last_connected` INTEGER, `max_size` INTEGER)\",\n+        \"fields\": [\n+          {\n+            \"fieldPath\": \"order\",\n+            \"columnName\": \"order\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"id\",\n+            \"columnName\": \"id\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": false\n+          },\n+          {\n+            \"fieldPath\": \"protocol\",\n+            \"columnName\": \"pop\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"host\",\n+            \"columnName\": \"host\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"encryption\",\n+            \"columnName\": \"starttls\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"insecure\",\n+            \"columnName\": \"insecure\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"port\",\n+            \"columnName\": \"port\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+",
    "fix bug in web client related to snapped_waypoints <issue_id>": "diff --git a/web/src/main/java/com/graphhopper/http/GraphHopperWeb.java b/web/src/main/java/com/graphhopper/http/GraphHopperWeb.java\nindex 3d76f7204..2e7244413 100644\n--- a/web/src/main/java/com/graphhopper/http/GraphHopperWeb.java\n+++ b/web/src/main/java/com/graphhopper/http/GraphHopperWeb.java\n@@ -191,12 +191,12 @@ public class GraphHopperWeb implements GraphHopperAPI\n         if (pathWrapper.hasErrors())\n             return pathWrapper;\n \n-        double distance = path.getDouble(\"distance\");\n-        long time = path.getLong(\"time\");\n-\n-        String snappedPointStr = path.getString(\"points\");\n-        PointList snappedPoints = WebHelper.decodePolyline(snappedPointStr, 5, tmpElevation);\n-        pathWrapper.setWaypoints(snappedPoints);\n+        if (path.has(\"snapped_waypoints\"))\n+        {\n+            String snappedPointStr = path.getString(\"snapped_waypoints\");\n+            PointList snappedPoints = WebHelper.decodePolyline(snappedPointStr, 5, tmpElevation);\n+            pathWrapper.setWaypoints(snappedPoints);\n+        }\n \n         if (tmpCalcPoints)\n         {\n@@ -275,6 +275,9 @@ public class GraphHopperWeb implements GraphHopperAPI\n                 pathWrapper.setInstructions(il);\n             }\n         }\n+\n+        double distance = path.getDouble(\"distance\");\n+        long time = path.getLong(\"time\");\n         pathWrapper.setDistance(distance).setTime(time);\n         return pathWrapper;\n     }\ndiff --git a/web/src/test/java/com/graphhopper/http/GraphHopperWebTest.java b/web/src/test/java/com/graphhopper/http/GraphHopperWebTest.java\nindex 479050e8c..423b0e142 100644\n--- a/web/src/test/java/com/graphhopper/http/GraphHopperWebTest.java\n+++ b/web/src/test/java/com/graphhopper/http/GraphHopperWebTest.java\n@@ -58,10 +58,10 @@ public class GraphHopperWebTest\n         assertEquals(5, arsp.getInstructions().getSize());\n         assertEquals(\"(0,Geradeaus auf A 100,1268.519329705091,65237)\", arsp.getInstructions().get(0).toString());\n         assertEquals(11, arsp.getInstructions().get(0).getPoints().size());\n-        \n-        assertEquals(52.47384, arsp.getWaypoints().getLat(0), 1e-4);\n-        assertEquals(13.36285, arsp.getWaypoints().getLon(0), 1e-4);\n-        assertEquals(52.47361, arsp.getWaypoints().getLat(1), 1e-4);\n+\n+        assertEquals(43.73595, arsp.getWaypoints().getLat(0), 1e-4);\n+        assertEquals(7.42015, arsp.getWaypoints().getLon(0), 1e-4);\n+        assertEquals(43.73761, arsp.getWaypoints().getLat(1), 1e-4);\n     }\n \n     @Test",
    "Add unit tests for RandomUniqueId .": "diff --git a/Makefile.am b/Makefile.am\nindex 12cf6330..2d7888be 100644\n--- a/Makefile.am\n+++ b/Makefile.am\n@@ -203,6 +203,7 @@ test_SRC := \\\n \ttest/tsd/TestTreeRpc.java\t\\\n \ttest/tsd/TestUniqueIdRpc.java\t\\\n \ttest/uid/TestNoSuchUniqueId.java\t\\\n+\ttest/uid/TestRandomUniqueId.java\t\\\n \ttest/uid/TestUniqueId.java \\\n \ttest/utils/TestByteArrayPair.java \\\n \ttest/utils/TestConfig.java \\\ndiff --git a/test/uid/TestRandomUniqueId.java b/test/uid/TestRandomUniqueId.java\nnew file mode 100644\nindex 00000000..079938c7\n--- /dev/null\n+++ b/test/uid/TestRandomUniqueId.java\n@@ -0,0 +1,92 @@\n+// This file is part of OpenTSDB.\n+// Copyright (C) 2015  The OpenTSDB Authors.\n+//\n+// This program is free software: you can redistribute it and/or modify it\n+// under the terms of the GNU Lesser General Public License as published by\n+// the Free Software Foundation, either version 2.1 of the License, or (at your\n+// option) any later version.  This program is distributed in the hope that it\n+// will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty\n+// of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser\n+// General Public License for more details.  You should have received a copy\n+// of the GNU Lesser General Public License along with this program.  If not,\n+// see <http://www.gnu.org/licenses/>.\n+package net.opentsdb.uid;\n+\n+import static org.junit.Assert.assertTrue;\n+import net.opentsdb.core.TSDB;\n+\n+import org.hbase.async.Bytes;\n+import org.junit.Test;\n+\n+public final class TestRandomUniqueId {\n+\n+  @Test\n+  public void getRandomUIDMetricWidth() throws Exception {\n+    generateAndTestUID(TSDB.metrics_width(), 100);\n+  }\n+  \n+  @Test\n+  public void getRandomUID1Byte() throws Exception {\n+    generateAndTestUID(1, 100);\n+  }\n+  \n+  @Test\n+  public void getRandomUID2Byte() throws Exception {\n+    generateAndTestUID(2, 100);\n+  }\n+  \n+  @Test\n+  public void getRandomUID3Byte() throws Exception {\n+    generateAndTestUID(3, 100);\n+  }\n+  \n+  @Test\n+  public void getRandomUID4Byte() throws Exception {\n+    generateAndTestUID(4, 100);\n+  }\n+  \n+  @Test\n+  public void getRandomUID5Byte() throws Exception {\n+    generateAndTestUID(5, 100);\n+  }\n+  \n+  @Test\n+  public void getRandomUID6Byte() throws Exception {\n+    generateAndTestUID(6, 100);\n+  }\n+  \n+  @Test\n+  public void getRandomUID7Byte() throws Exception {\n+    generateAndTestUID(7, 100);\n+  }\n+  /**\n+   * Runs the test n times and makes sure it's greater than 0 and less than or\n+   * equal to the max value on {@link width} bytes.\n+   * @param width The number of bytes to generate a UID for\n+   * @param n How many times to run the tests\n+   */\n+  private void generateAndTestUID(final int width, final int n) {\n+    final long max_value = getMax(width);\n+    for (int i = 0; i < n; i++) {\n+      long uid = RandomUniqueId.getRandomUID(width);\n+      assertTrue(uid > 0 && uid <= max_value);\n+    }\n+  }\n+  \n+  /**\n+   * Simple helper to calculate the max value for any width of long\n+   * @param width The width of the byte array we're comparing\n+   * @return The maximum integer value on {@link width} bytes.\n+   */\n+  private long getMax(final int width) {\n+    if (width > 7) {\n+      throw new IllegalArgumentException(\"Can't use a width of [\" + width + \n+          \"] in this unit test\");\n+    }\n+    final byte[] value = new byte[8];\n+    for (int i = 0; i < width; i++) {\n+      value[8 - (i + 1)] = (byte) 0xFF;\n+    }\n+    return Bytes.getLong(value);\n+  }\n+}",
    "adding check for failures subroutine and fixing worker delete bug ( <issue_id> ) .": "diff --git a/pulsar-functions/conf/function_worker.yml b/pulsar-functions/conf/function_worker.yml\nindex 895614c1ab..e636e8b7f2 100644\n--- a/pulsar-functions/conf/function_worker.yml\n+++ b/pulsar-functions/conf/function_worker.yml\n@@ -48,3 +48,5 @@ processContainerFactory:\n \n schedulerClassName: \"org.apache.pulsar.functions.worker.scheduler.RoundRobinScheduler\"\n functionAssignmentTopicName: \"assignments\"\n+failureCheckFreqMs: 30000\n+rescheduleTimeoutMs: 60000\ndiff --git a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/ClusterServiceCoordinator.java b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/ClusterServiceCoordinator.java\nindex e7e6b95814..71371b08b9 100644\n--- a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/ClusterServiceCoordinator.java\n+++ b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/ClusterServiceCoordinator.java\n@@ -73,7 +73,7 @@ public class ClusterServiceCoordinator implements AutoCloseable {\n                     try {\n                         isLeader = membershipManager.becomeLeader().get(30, TimeUnit.SECONDS);\n                     } catch (InterruptedException | ExecutionException | TimeoutException e) {\n-                        log.warn(\"Failed to attempt becoming leader\", e);\n+                        log.debug(\"Failed to attempt becoming leader\", e);\n                     }\n \n                     if (isLeader) {\ndiff --git a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java\nindex 88e745f225..1b57f0beac 100644\n--- a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java\n+++ b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java\n@@ -128,7 +128,7 @@ public class FunctionMetaDataManager implements AutoCloseable {\n         return getFunctionMetaData(functionMetaData.getFunctionConfig());\n     }\n \n-    List<FunctionMetaData> getAllFunctionMetaData() {\n+    public List<FunctionMetaData> getAllFunctionMetaData() {\n         List<FunctionMetaData> ret = new LinkedList<>();\n         for (Map<String, Map<String, FunctionMetaData>> i : this.functionMetaDataMap.values()) {\n             for (Map<String, FunctionMetaData> j : i.values()) {\ndiff --git a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionRuntimeManager.java b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionRuntimeManager.java\nindex 82bbc0d198..cd198ce144 100644\n--- a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionRuntimeManager.java\n+++ b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionRuntimeManager.java\n@@ -132,10 +132,18 @@ public class FunctionRuntimeManager implements AutoCloseable{\n         return this.functionRuntimeInfoMap.get(fullyQualifiedName);\n     }\n \n+    public synchronized Assignment findFunctionAssignment(String tenant, String namespace, String functionName) {\n+        return this.findAssignment(tenant, namespace, functionName);\n+    }\n+\n     public synchronized long getCurrentAssignmentVersion() {\n         return this.currentAssignmentVersion;\n     }\n \n+    public synchronized void removeAssignment(Assignment assignment) {\n+        this.deleteAssignment(assignment);\n+    }\n+\n     public void start() {\n         log.info(\"/** Starting Function Runtime Manager **/\");\n         log.info(\"Initialize metrics sink...\");\ndiff --git a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/MembershipManager.java b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/MembershipManager.java\nindex 580a7bc4e3..f190c24fc4 100644\n--- a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/MembershipManager.java\n+++ b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/MembershipManager.java\n@@ -18,10 +18,18 @@\n  */\n package org.apache.pulsar.functions.worker;\n \n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n import java.util.concurrent.CompletableFuture;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n+import com.google.common.annotations.VisibleForTesting;\n import lombok.AccessLevel;\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n@@ -38,6 +46,8 @@ import org.apache.pulsar.client.api.SubscriptionType;\n import org.apache.pulsar.client.impl.MessageIdImpl;\n import org.apache.pulsar.common.policies.data.ConsumerStats;\n import org.apache.pulsar.common.policies.data.PersistentTopicStats;\n+import org.apache.pulsar.functions.proto.Function;\n+import org.apache.pulsar.functions.utils.FunctionConfigUtils;\n \n /**\n  * A simple implementation of leader election using a pulsar topic.\n@@ -120,7 +130,7 @@ public class MembershipManager implements AutoCloseable {\n             persistentTopicStats = pulsarAdmin.persistentTopics().getStats(\n                     this.workerConfig.getClusterCoordinationTopic());\n         } catch (PulsarAdminException e) {\n-            log.error(\"Failled to get status of coordinate topic {}\",\n+            log.error(\"Failed to get status of coordinate topic {}\",\n                     this.workerConfig.getClusterCoordinationTopic(), e);\n             throw new RuntimeException(e);\n         }\n@@ -157,6 +167,10 @@ public class MembershipManager implements AutoCloseable {\n         private String workerHostname;\n         private int port;\n \n+        public static WorkerInfo of (String workerId, String workerHostname, int port) {\n+            return new WorkerInfo(workerId, workerHostname, port);\n+        }\n+\n         public static WorkerInfo parseFrom(String str) {\n             String[] tokens = str.split(\":\");\n             if (tokens.length != 3) {\n@@ -171,4 +185,86 @@ public class MembershipManager implements AutoCloseable {\n         }\n     }\n \n-}\n\\ No newline at end of file\n+    @VisibleForTesting\n+    Map<String, Long> unsignedFunctionDurations = new HashMap<>();\n+    public void checkFailures(FunctionMetaDataManager functionMetaDataManager,\n+                              FunctionRuntimeManager functionRuntimeManager,\n+                              SchedulerManager schedulerManager) {\n+\n+        Set<String> currentMembership = this.getCurrentMembership().stream()\n+                .map(entry -> entry.getWorkerId()).collect(Collectors.toSet());\n+        List<Function.FunctionMetaData> functionMetaDataList = functionMetaDataManager.getAllFunctionMetaData();\n+        Map<String, Map<String, Function.Assignment>> currentAssignments = functionRuntimeManager.getCurrentAssignments();\n+        Map<String, Function.Assignment> assignmentMap = new HashMap<>();\n+        for (Map<String, Function.Assignment> entry : currentAssignments.values()) {\n+            assignmentMap.putAll(entry);\n+        }\n+        long currentTimeMs = System.currentTimeMillis();\n+\n+        //remove functions that have been scheduled\n+        Iterator<Map.Entry<String, Long>> it = unsignedFunctionDurations.entrySet().iterator();\n+        while (it.hasNext()) {\n+            Map.Entry<String, Long> entry = it.next();\n+            String fullyQualifiedName = entry.getKey();\n+            Function.Assignment assignment = assignmentMap.get(fullyQualifiedName);\n+            if (assignment != null) {\n+                String assignedWorkerId = assignment.getWorkerId();\n+                // check if assigned to worker that has failed\n+                if (currentMembership.contains(assignedWorkerId)) {\n+                    it.remove();\n+                }\n+            }\n+        }\n+\n+        // check for functions that haven't been assigned\n+        for (Function.FunctionMetaData functionMetaData : functionMetaDataList) {\n+            Function.Assignment assignment\n+                    = functionRuntimeManager.findFunctionAssignment(functionMetaData.getFunctionConfig().getTenant(),\n+                    functionMetaData.getFunctionConfig().getNamespace(),\n+                    functionMetaData.getFunctionConfig().getName());\n+\n+            String fullyQualifiedName = FunctionConfigUtils.getFullyQualifiedName(functionMetaData.getFunctionConfig());\n+            // Function is unassigned\n+            if (assignment == null && !this.unsignedFunctionDurations.containsKey(fullyQualifiedName)) {\n+                this.unsignedFunctionDurations.put(fullyQualifiedName, currentTimeMs);\n+            }\n+        }\n+\n+        // check failed nodes\n+        for (Map.Entry<String, Map<String, Function.Assignment>> entry : currentAssignments.entrySet()) {\n+            String workerId = entry.getKey();\n+            Map<String, Function.Assignment> assignmentEntries = entry.getValue();\n+            if (!currentMembership.contains(workerId)) {\n+                for (Function.Assignment assignmentEntry : assignmentEntries.values()) {\n+                    String fullyQualifiedName = FunctionConfigUtils.getFullyQualifiedName(\n+                            assignmentEntry.getFunctionMetaData().getFunctionConfig());\n+                    if (!this.unsignedFunctionDurations.containsKey(fullyQualifiedName)) {\n+                        this.unsignedFunctionDurations.put(FunctionConfigUtils.getFullyQualifiedName(\n+                                assignmentEntry.getFunctionMetaData().getFunctionConfig()), currentTimeMs);\n+                    }\n+                }\n+            }\n+        }\n+\n+        boolean triggerScheduler = false;\n+        // check unassigned\n+        Collection<String>  needSchedule = new LinkedList<>();\n+        for (Map.Entry<String, Long> entry : this.unsignedFunctionDurations.entrySet()) {\n+            String fullyQualifiedName = entry.getKey();\n+            long unassignedDurationMs = entry.getValue();\n+            if (currentTimeMs - unassignedDurationMs > this.workerConfig.getRescheduleTimeoutMs()) {\n+                needSchedule.add(fullyQualifiedName);\n+                // remove assignment from failed node\n+                Function.Assignment assignment = assignmentMap.get(fullyQualifiedName);\n+                if (assignment != null) {\n+                    functionRuntimeManager.removeAssignment(assignment);\n+                }\n+                triggerScheduler = true;\n+            }\n+        }\n+        if (triggerScheduler) {\n+            log.info(\"Functions that need scheduling/rescheduling: {}\", needSchedule);\n+            schedulerManager.schedule();\n+        }\n+    }\n+}\ndiff --git a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/SchedulerManager.java b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/SchedulerManager.java\nindex 523e908a0d..9680cb1401 100644\n--- a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/SchedulerManager.java\n+++ b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/SchedulerManager.java\n@@ -35,6 +35,7 @@ import java.util.HashMap;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.ExecutorService;\n@@ -89,7 +90,7 @@ public class SchedulerManager implements AutoCloseable {\n                 try {\n                     isLeader = membershipManager.becomeLeader().get(30, TimeUnit.SECONDS);\n                 } catch (InterruptedException | ExecutionException | TimeoutException e) {\n-                    log.warn(\"Failed to attempt becoming leader\", e);\n+                    log.debug(\"Failed to attempt becoming leader\", e);\n                 }\n \n                 if (isLeader) {\n@@ -99,14 +100,33 @@ public class SchedulerManager implements AutoCloseable {\n         });\n     }\n \n-    public void invokeScheduler() {\n+    private void invokeScheduler() {\n         List<String> currentMembership = this.membershipManager.getCurrentMembership()\n                 .stream().map(workerInfo -> workerInfo.getWorkerId()).collect(Collectors.toList());\n \n         List<FunctionMetaData> allFunctions = this.functionMetaDataManager.getAllFunctionMetaData();\n+        Set<String> fullyQualifiedNames = allFunctions.stream()\n+                .map(functionMetaData -> FunctionConfigUtils.getFullyQualifiedName(functionMetaData.getFunctionConfig()))\n+                .collect(Collectors.toSet());\n \n         Map<String, Map<String, Assignment>> workerIdToAssignments = this.functionRuntimeManager.getCurrentAssignments();\n \n+        //delete assignments of functions that don't exist anymore\n+        List<Assignment> invalidAssignments = new LinkedList<>();\n+        for (Map<String, Assignment> entryMap : workerIdToAssignments.values()) {\n+            for (Map.Entry<String, Assignment> entry : entryMap.entrySet()) {\n+                String fullyQualifiedName = entry.getKey();\n+                Assignment assignment = entry.getValue();\n+                if (!fullyQualifiedNames.contains(fullyQualifiedName)) {\n+                    invalidAssignments.add(assignment);\n+                }\n+            }\n+        }\n+\n+        for (Assignment assignment : invalidAssignments) {\n+            this.functionRuntimeManager.removeAssignment(assignment);\n+        }\n+\n         List<Assignment> currentAssignments = workerIdToAssignments\n                 .entrySet().stream()\n                 .flatMap(stringMapEntry -> stringMapEntry.getValue().values().stream()).collect(Collectors.toList());\ndiff --git a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java\nindex e084b381c8..a0337f43e1 100644\n--- a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java\n+++ b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java\n@@ -158,6 +158,12 @@ public class Worker extends AbstractService {\n                     \"snapshot\",\n                     this.workerConfig.getSnapshotFreqMs(),\n                     () -> functionMetaDataManager.snapshot());\n+\n+            this.clusterServiceCoordinator.addTask(\"membership-monitor\",\n+                    this.workerConfig.getFailureCheckFreqMs(),\n+                    () -> membershipManager.checkFailures(\n+                            functionMetaDataManager, functionRuntimeManager, schedulerManager));\n+\n             this.clusterServiceCoordinator.start();\n \n             // Start function runtime manager\ndiff --git a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/WorkerConfig.java b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/WorkerConfig.java\nindex 86d1c9ffd5..63badb5a8f 100644\n--- a/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/WorkerConfig.java\n+++ b/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/WorkerConfig.java\n@@ -60,6 +60,8 @@ public class WorkerConfig implements Serializable {\n     private String stateStorageServiceUrl;\n     private String functionAssignmentTopicName;\n     private String schedulerClassName;\n+    private long failureCheckFreqMs;\n+    private long rescheduleTimeoutMs;\n \n     @Data\n     @Setter\ndiff --git a/pulsar-functions/worker/src/test/java/org/apache/pulsar/functions/worker/MembershipManagerTest.java b/pulsar-functions/worker/src/test/java/org/apache/pulsar/functions/worker/MembershipManagerTest.java\nnew file mode 100644\nindex 0000000000..c9be576770\n--- /dev/null\n+++ b/pulsar-functions/worker/src/test/java/org/apache/pulsar/functions/worker/MembershipManagerTest.java\n@@ -0,0 +1,238 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.functions.worker;\n+\n+import org.apache.distributedlog.api.namespace.Namespace;\n+import org.apache.pulsar.client.api.PulsarClient;\n+import org.apache.pulsar.functions.fs.LimitsConfig;\n+import org.apache.pulsar.functions.fs.MetricsConfig;\n+import org.apache.pulsar.functions.proto.Function;\n+import org.mockito.ArgumentMatcher;\n+import org.mockito.Mockito;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+import static org.mockito.Matchers.any;\n+import static org.mockito.Matchers.argThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+public class MembershipManagerTest {\n+\n+    @Test\n+    public void testCheckFailuresNoFailures() throws Exception {\n+        WorkerConfig workerConfig = new WorkerConfig();\n+        workerConfig.setWorkerId(\"worker-1\");\n+        workerConfig.setThreadContainerFactory(new WorkerConfig.ThreadContainerFactory().setThreadGroupName(\"test\"));\n+        workerConfig.setLimitsConfig(new LimitsConfig().setMaxBufferedTuples(10));\n+        workerConfig.setPulsarServiceUrl(\"pulsar://localhost:6650\");\n+        workerConfig.setStateStorageServiceUrl(\"foo\");\n+        workerConfig.setMetricsConfig(new MetricsConfig().setMetricsSinkClassName(FunctionRuntimeManagerTest.TestSink.class.getName()));\n+        SchedulerManager schedulerManager = mock(SchedulerManager.class);\n+        FunctionRuntimeManager functionRuntimeManager = spy(new FunctionRuntimeManager(\n+                workerConfig,\n+                mock(PulsarClient.class),\n+                mock(Namespace.class),\n+                mock(MembershipManager.class)\n+        ));        FunctionMetaDataManager functionMetaDataManager = mock(FunctionMetaDataManager.class);\n+        MembershipManager membershipManager = spy(new MembershipManager(workerConfig, schedulerManager, mock(PulsarClient.class)));\n+\n+        List<MembershipManager.WorkerInfo> workerInfoList = new LinkedList<>();\n+        workerInfoList.add(MembershipManager.WorkerInfo.of(\"worker-1\", \"host-1\", 8000));\n+        workerInfoList.add(MembershipManager.WorkerInfo.of(\"worker-2\", \"host-2\", 8001));\n+\n+        Mockito.doReturn(workerInfoList).when(membershipManager).getCurrentMembership();\n+\n+        Function.FunctionMetaData function1 = Function.FunctionMetaData.newBuilder().setFunctionConfig(\n+                Function.FunctionConfig.newBuilder()\n+                        .setTenant(\"test-tenant\").setNamespace(\"test-namespace\").setName(\"func-1\")).build();\n+\n+        Function.FunctionMetaData function2 = Function.FunctionMetaData.newBuilder().setFunctionConfig(\n+                Function.FunctionConfig.newBuilder()\n+                        .setTenant(\"test-tenant\").setNamespace(\"test-namespace\").setName(\"func-2\")).build();\n+\n+        List<Function.FunctionMetaData> metaDataList = new LinkedList<>();\n+        metaDataList.add(function1);\n+        metaDataList.add(function2);\n+\n+        Mockito.doReturn(metaDataList).when(functionMetaDataManager).getAllFunctionMetaData();\n+        Function.Assignment assignment1 = Function.Assignment.newBuilder()\n+                .setWorkerId(\"worker-1\")\n+                .setFunctionMetaData(function1).build();\n+        Function.Assignment assignment2 = Function.Assignment.newBuilder()\n+                .setWorkerId(\"worker-2\")\n+                .setFunctionMetaData(function2).build();\n+\n+        // add existing assignments\n+        functionRuntimeManager.setAssignment(assignment1);\n+        functionRuntimeManager.setAssignment(assignment2);\n+\n+\n+        membershipManager.checkFailures(functionMetaDataManager, functionRuntimeManager, schedulerManager);\n+\n+        verify(schedulerManager, times(0)).schedule();\n+        verify(functionRuntimeManager, times(0)).removeAssignment(any(Function.Assignment.class));\n+        Assert.assertEquals(membershipManager.unsignedFunctionDurations.size(), 0);\n+    }\n+\n+    @Test\n+    public void testCheckFailuresSomeFailures() throws Exception {\n+        WorkerConfig workerConfig = new WorkerConfig();\n+        workerConfig.setWorkerId(\"worker-1\");\n+        workerConfig.setThreadContainerFactory(new WorkerConfig.ThreadContainerFactory().setThreadGroupName(\"test\"));\n+        workerConfig.setLimitsConfig(new LimitsConfig().setMaxBufferedTuples(10));\n+        workerConfig.setPulsarServiceUrl(\"pulsar://localhost:6650\");\n+        workerConfig.setStateStorageServiceUrl(\"foo\");\n+        workerConfig.setMetricsConfig(new MetricsConfig().setMetricsSinkClassName(FunctionRuntimeManagerTest.TestSink.class.getName()));\n+        workerConfig.setRescheduleTimeoutMs(30000);\n+        SchedulerManager schedulerManager = mock(SchedulerManager.class);\n+        FunctionRuntimeManager functionRuntimeManager = spy(new FunctionRuntimeManager(\n+                workerConfig,\n+                mock(PulsarClient.class),\n+                mock(Namespace.class),\n+                mock(MembershipManager.class)\n+        ));        FunctionMetaDataManager functionMetaDataManager = mock(FunctionMetaDataManager.class);\n+        MembershipManager membershipManager = spy(new MembershipManager(workerConfig, schedulerManager, mock(PulsarClient.class)));\n+\n+        List<MembershipManager.WorkerInfo> workerInfoList = new LinkedList<>();\n+        workerInfoList.add(MembershipManager.WorkerInfo.of(\"worker-1\", \"host-1\", 8000));\n+\n+        Mockito.doReturn(workerInfoList).when(membershipManager).getCurrentMembership();\n+\n+        Function.FunctionMetaData function1 = Function.FunctionMetaData.newBuilder().setFunctionConfig(\n+                Function.FunctionConfig.newBuilder()\n+                        .setTenant(\"test-tenant\").setNamespace(\"test-namespace\").setName(\"func-1\")).build();\n+\n+        Function.FunctionMetaData function2 = Function.FunctionMetaData.newBuilder().setFunctionConfig(\n+                Function.FunctionConfig.newBuilder()\n+                        .setTenant(\"test-tenant\").setNamespace(\"test-namespace\").setName(\"func-2\")).build();\n+\n+        List<Function.FunctionMetaData> metaDataList = new LinkedList<>();\n+        metaDataList.add(function1);\n+        metaDataList.add(function2);\n+\n+        Mockito.doReturn(metaDataList).when(functionMetaDataManager).getAllFunctionMetaData();\n+        Function.Assignment assignment1 = Function.Assignment.newBuilder()\n+                .setWorkerId(\"worker-1\")\n+                .setFunctionMetaData(function1).build();\n+        Function.Assignment assignment2 = Function.Assignment.newBuilder()\n+                .setWorkerId(\"worker-2\")\n+                .setFunctionMetaData(function2).build();\n+\n+        // add existing assignments\n+        functionRuntimeManager.setAssignment(assignment1);\n+        functionRuntimeManager.setAssignment(assignment2);\n+\n+        membershipManager.checkFailures(functionMetaDataManager, functionRuntimeManager, schedulerManager);\n+\n+        verify(schedulerManager, times(0)).schedule();\n+        verify(functionRuntimeManager, times(0)).removeAssignment(any(Function.Assignment.class));\n+        Assert.assertEquals(membershipManager.unsignedFunctionDurations.size(), 1);\n+        Assert.assertTrue(membershipManager.unsignedFunctionDurations.get(\"test-tenant/test-namespace/func-2\") != null);\n+\n+        membershipManager.unsignedFunctionDurations.put(\"test-tenant/test-namespace/func-2\",\n+                membershipManager.unsignedFunctionDurations.get(\"test-tenant/test-namespace/func-2\") - 30001);\n+\n+        membershipManager.checkFailures(functionMetaDataManager, functionRuntimeManager, schedulerManager);\n+\n+        verify(functionRuntimeManager, times(1)).removeAssignment(\n+                argThat(new ArgumentMatcher<Function.Assignment>() {\n+            @Override\n+            public boolean matches(Object o) {\n+                if (o instanceof Function.Assignment) {\n+                    Function.Assignment assignment = (Function.Assignment) o;\n+\n+                    if (!assignment.equals(assignment2)) {\n+                        return false;\n+                    }\n+                    return true;\n+                }\n+                return false;\n+            }\n+        }));\n+\n+        verify(schedulerManager, times(1)).schedule();\n+    }\n+\n+    @Test\n+    public void testCheckFailuresSomeUnassigned() throws Exception {\n+        WorkerConfig workerConfig = new WorkerConfig();\n+        workerConfig.setWorkerId(\"worker-1\");\n+        workerConfig.setThreadContainerFactory(new WorkerConfig.ThreadContainerFactory().setThreadGroupName(\"test\"));\n+        workerConfig.setLimitsConfig(new LimitsConfig().setMaxBufferedTuples(10));\n+        workerConfig.setPulsarServiceUrl(\"pulsar://localhost:6650\");\n+        workerConfig.setStateStorageServiceUrl(\"foo\");\n+        workerConfig.setMetricsConfig(new MetricsConfig().setMetricsSinkClassName(FunctionRuntimeManagerTest.TestSink.class.getName()));\n+        workerConfig.setRescheduleTimeoutMs(30000);\n+        SchedulerManager schedulerManager = mock(SchedulerManager.class);\n+        FunctionRuntimeManager functionRuntimeManager = spy(new FunctionRuntimeManager(\n+                workerConfig,\n+                mock(PulsarClient.class),\n+                mock(Namespace.class),\n+         ",
    "Clarify rolling - upgrade docs ( <issue_id> ) .": "diff --git a/docs/reference/upgrade/rolling_upgrade.asciidoc b/docs/reference/upgrade/rolling_upgrade.asciidoc\nindex 37be4d8cf8b..b29aaaf5e12 100644\n--- a/docs/reference/upgrade/rolling_upgrade.asciidoc\n+++ b/docs/reference/upgrade/rolling_upgrade.asciidoc\n@@ -7,6 +7,12 @@ a time so upgrading does not interrupt service. Running multiple versions of\n not supported, as shards cannot be replicated from upgraded nodes to nodes\n running the older version.\n \n+It is best to upgrade the master-ineligible nodes in your cluster first and then\n+upgrade the master-eligible nodes. Once enough of the master-eligible nodes have\n+been upgraded they may form a cluster that nodes of older versions cannot join.\n+If you upgrade the master-eligible nodes last then all the other nodes will not\n+be running an older version and so they will be able to join the cluster.\n+\n Rolling upgrades are supported:\n \n * Between minor versions\n@@ -53,6 +59,11 @@ include::shut-down-node.asciidoc[]\n --\n include::upgrade-node.asciidoc[]\n include::set-paths-tip.asciidoc[]\n+\n+[[rolling-upgrades-bootstrapping]]\n+NOTE: You should leave `cluster.initial_master_nodes` unset while performing a\n+rolling upgrade. Each upgraded node is joining an existing cluster so there is\n+no need for <<modules-discovery-bootstrap-cluster,cluster bootstrapping>>.\n --\n \n . *Upgrade any plugins.*",
    "Fix broken HDFS link on built - in IO page": "diff --git a/website/src/documentation/io/built-in.md b/website/src/documentation/io/built-in.md\nindex 580f3ed73e..6a73f6b2f0 100644\n--- a/website/src/documentation/io/built-in.md\n+++ b/website/src/documentation/io/built-in.md\n@@ -24,7 +24,7 @@ Consult the [Programming Guide I/O section]({{site.baseurl }}/documentation/prog\n   <td>Java</td>\n   <td>\n     <p><a href=\"https://github.com/apache/beam/blob/master/sdks/java/core/src/main/java/org/apache/beam/sdk/io/AvroIO.java\">AvroIO</a></p>\n-    <p><a href=\"https://github.com/apache/beam/tree/master/sdks/java/io/hdfs\">Apache Hadoop HDFS</a></p>\n+    <p><a href=\"https://github.com/apache/beam/tree/master/sdks/java/io/hadoop-file-system\">Apache Hadoop File System</a></p>\n     <p><a href=\"https://github.com/apache/beam/blob/master/sdks/java/core/src/main/java/org/apache/beam/sdk/io/TextIO.java\">TextIO</a></p>\n     <p><a href=\"https://github.com/apache/beam/blob/master/sdks/java/core/src/main/java/org/apache/beam/sdk/io/\">XML</a></p>\n   </td>",
    "Migrate 2 CC tests to junit 5": "diff --git a/community/community-it/consistency-it/src/test/java/org/neo4j/consistency/LabelScanStoreTxApplyRaceIT.java b/community/community-it/consistency-it/src/test/java/org/neo4j/consistency/LabelScanStoreTxApplyRaceIT.java\nindex a0ef5ef5d1d..933974e4bf5 100644\n--- a/community/community-it/consistency-it/src/test/java/org/neo4j/consistency/LabelScanStoreTxApplyRaceIT.java\n+++ b/community/community-it/consistency-it/src/test/java/org/neo4j/consistency/LabelScanStoreTxApplyRaceIT.java\n@@ -19,8 +19,8 @@\n  */\n package org.neo4j.consistency;\n \n-import org.junit.Rule;\n-import org.junit.Test;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n \n import java.util.Arrays;\n import java.util.concurrent.ThreadLocalRandom;\n@@ -28,6 +28,7 @@ import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicReferenceArray;\n \n import org.neo4j.consistency.checking.full.ConsistencyFlags;\n+import org.neo4j.dbms.api.DatabaseManagementService;\n import org.neo4j.graphdb.Label;\n import org.neo4j.graphdb.Node;\n import org.neo4j.graphdb.NotFoundException;\n@@ -35,16 +36,18 @@ import org.neo4j.graphdb.Transaction;\n import org.neo4j.internal.index.label.LabelScanStore;\n import org.neo4j.internal.recordstorage.RecordStorageEngine;\n import org.neo4j.io.layout.DatabaseLayout;\n+import org.neo4j.kernel.internal.GraphDatabaseAPI;\n import org.neo4j.storageengine.api.CommandsToApply;\n import org.neo4j.storageengine.api.TransactionApplicationMode;\n import org.neo4j.test.Race;\n import org.neo4j.test.TestLabels;\n-import org.neo4j.test.rule.EmbeddedDbmsRule;\n-import org.neo4j.test.rule.SuppressOutput;\n+import org.neo4j.test.extension.DbmsExtension;\n+import org.neo4j.test.extension.Inject;\n+import org.neo4j.test.extension.SuppressOutputExtension;\n \n import static java.lang.Integer.max;\n import static java.util.UUID.randomUUID;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.neo4j.configuration.Config.defaults;\n import static org.neo4j.internal.helpers.progress.ProgressMonitorFactory.NONE;\n import static org.neo4j.logging.FormattedLogProvider.toOutputStream;\n@@ -54,7 +57,9 @@ import static org.neo4j.logging.FormattedLogProvider.toOutputStream;\n  * where e.g. a transaction A which did CREATE NODE N and transaction B which did DELETE NODE N would have a chance to be applied to the\n  * {@link LabelScanStore} in the reverse order, i.e. transaction B before transaction A, resulting in outdated label data remaining in the label index.\n  */\n-public class LabelScanStoreTxApplyRaceIT\n+@DbmsExtension\n+@ExtendWith( SuppressOutputExtension.class )\n+class LabelScanStoreTxApplyRaceIT\n {\n     // === CONTROL PANEL ===\n     private static final int NUMBER_OF_DELETORS = 2;\n@@ -65,18 +70,17 @@ public class LabelScanStoreTxApplyRaceIT\n \n     private static final Label[] LABELS = TestLabels.values();\n \n-    @Rule\n-    public final EmbeddedDbmsRule db = new EmbeddedDbmsRule();\n-\n-    @Rule\n-    public final SuppressOutput suppressOutput = SuppressOutput.suppressAll();\n+    @Inject\n+    private GraphDatabaseAPI db;\n+    @Inject\n+    private DatabaseManagementService managementService;\n \n     /**\n      * The test case is basically loads of concurrent CREATE/DELETE NODE or sometimes just CREATE, keeping the created node in an array\n      * for dedicated deleter threads to pick up and delete as fast as they can see them. This concurrently with large creation transactions.\n      */\n     @Test\n-    public void shouldStressIt() throws Throwable\n+    void shouldStressIt() throws Throwable\n     {\n         // given\n         Race race = new Race().withMaxDuration( 5, TimeUnit.SECONDS );\n@@ -92,7 +96,8 @@ public class LabelScanStoreTxApplyRaceIT\n \n         // then\n         DatabaseLayout dbLayout = db.databaseLayout();\n-        db.shutdownAndKeepStore();\n+        managementService.shutdown();\n+\n         assertTrue( new ConsistencyCheckService().runFullConsistencyCheck( dbLayout, defaults(), NONE,\n                 toOutputStream( System.out ), false, new ConsistencyFlags( true, true, true, false ) ).isSuccessful() );\n     }\ndiff --git a/community/community-it/consistency-it/src/test/java/org/neo4j/consistency/checking/IndexConsistencyIT.java b/community/community-it/consistency-it/src/test/java/org/neo4j/consistency/checking/IndexConsistencyIT.java\nindex f46d1e113d2..90bccd8625d 100644\n--- a/community/community-it/consistency-it/src/test/java/org/neo4j/consistency/checking/IndexConsistencyIT.java\n+++ b/community/community-it/consistency-it/src/test/java/org/neo4j/consistency/checking/IndexConsistencyIT.java\n@@ -19,8 +19,8 @@\n  */\n package org.neo4j.consistency.checking;\n \n-import org.junit.Rule;\n-import org.junit.Test;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n \n import java.io.File;\n import java.io.FileFilter;\n@@ -34,6 +34,7 @@ import org.neo4j.configuration.Config;\n import org.neo4j.consistency.ConsistencyCheckService;\n import org.neo4j.consistency.checking.full.ConsistencyCheckIncompleteException;\n import org.neo4j.consistency.checking.full.ConsistencyFlags;\n+import org.neo4j.dbms.api.DatabaseManagementService;\n import org.neo4j.graphdb.Label;\n import org.neo4j.graphdb.Node;\n import org.neo4j.graphdb.Transaction;\n@@ -44,27 +45,34 @@ import org.neo4j.io.layout.DatabaseLayout;\n import org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointer;\n import org.neo4j.kernel.impl.transaction.log.checkpoint.SimpleTriggerInfo;\n import org.neo4j.kernel.impl.transaction.state.DefaultIndexProviderMap;\n+import org.neo4j.kernel.internal.GraphDatabaseAPI;\n import org.neo4j.logging.AssertableLogProvider;\n-import org.neo4j.test.rule.EmbeddedDbmsRule;\n+import org.neo4j.test.extension.DbmsExtension;\n+import org.neo4j.test.extension.Inject;\n+import org.neo4j.test.extension.RandomExtension;\n import org.neo4j.test.rule.RandomRule;\n \n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.containsString;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertThat;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.neo4j.internal.helpers.progress.ProgressMonitorFactory.NONE;\n import static org.neo4j.io.fs.FileUtils.copyRecursively;\n import static org.neo4j.test.TestLabels.LABEL_ONE;\n import static org.neo4j.test.TestLabels.LABEL_THREE;\n import static org.neo4j.test.TestLabels.LABEL_TWO;\n \n-public class IndexConsistencyIT\n+@DbmsExtension\n+@ExtendWith( RandomExtension.class )\n+class IndexConsistencyIT\n {\n-    @Rule\n-    public final EmbeddedDbmsRule db = new EmbeddedDbmsRule();\n+    @Inject\n+    private GraphDatabaseAPI db;\n+    @Inject\n+    private DatabaseManagementService managementService;\n \n-    @Rule\n-    public final RandomRule random = new RandomRule();\n+    @Inject\n+    private RandomRule random;\n \n     private final AssertableLogProvider log = new AssertableLogProvider();\n     private static final Label[] LABELS = new Label[]{LABEL_ONE, LABEL_TWO, LABEL_THREE};\n@@ -75,7 +83,7 @@ public class IndexConsistencyIT\n     private final FileFilter SOURCE_COPY_FILE_FILTER = file -> file.isDirectory() || file.getName().startsWith( \"index\" );\n \n     @Test\n-    public void reportNotCleanNativeIndex() throws IOException, ConsistencyCheckIncompleteException\n+    void reportNotCleanNativeIndex() throws IOException, ConsistencyCheckIncompleteException\n     {\n         DatabaseLayout databaseLayout = db.databaseLayout();\n         someData();\n@@ -90,17 +98,17 @@ public class IndexConsistencyIT\n             tx.success();\n         }\n \n-        db.shutdownAndKeepStore();\n+        managementService.shutdown();\n \n         copyRecursively( indexesCopy, indexSources );\n \n         ConsistencyCheckService.Result result = fullConsistencyCheck();\n-        assertFalse( \"Expected consistency check to fail\", result.isSuccessful() );\n+        assertFalse( result.isSuccessful(), \"Expected consistency check to fail\" );\n         assertThat( readReport( result ), containsString(\"WARN : Index was not properly shutdown and rebuild is required.\") );\n     }\n \n     @Test\n-    public void reportNotCleanNativeIndexWithCorrectData() throws IOException, ConsistencyCheckIncompleteException\n+    void reportNotCleanNativeIndexWithCorrectData() throws IOException, ConsistencyCheckIncompleteException\n     {\n         DatabaseLayout databaseLayout = db.databaseLayout();\n         someData();\n@@ -109,18 +117,18 @@ public class IndexConsistencyIT\n         File indexSources = resolveComponent( DefaultIndexProviderMap.class ).getDefaultProvider().directoryStructure().rootDirectory();\n         copyRecursively( indexSources, indexesCopy, SOURCE_COPY_FILE_FILTER );\n \n-        db.shutdownAndKeepStore();\n+        managementService.shutdown();\n \n         copyRecursively( indexesCopy, indexSources );\n \n         ConsistencyCheckService.Result result = fullConsistencyCheck();\n-        assertTrue( \"Expected consistency check to fail\", result.isSuccessful() );\n+        assertTrue( result.isSuccessful(), \"Expected consistency check to fail\" );\n         assertThat( readReport( result ), containsString(\"WARN : Index was not properly shutdown and rebuild is required.\") );\n     }\n \n     private <T> T resolveComponent( Class<T> clazz )\n     {\n-        return db.resolveDependency( clazz );\n+        return db.getDependencyResolver().resolveDependency( clazz );\n     }\n \n     private String readReport( ConsistencyCheckService.Result result ) throws IOException\n@@ -128,12 +136,12 @@ public class IndexConsistencyIT\n         return Files.readString( result.reportFile().toPath() );\n     }\n \n-    List<Pair<Long,Label[]>> someData()\n+    void someData()\n     {\n-        return someData( 50 );\n+        someData( 50 );\n     }\n \n-    List<Pair<Long,Label[]>> someData( int numberOfModifications )\n+    void someData( int numberOfModifications )\n     {\n         List<Pair<Long,Label[]>> existingNodes;\n         existingNodes = new ArrayList<>();\n@@ -152,10 +160,9 @@ public class IndexConsistencyIT\n             db.schema().awaitIndexesOnline( 1, TimeUnit.MINUTES );\n             tx.success();\n         }\n-        return existingNodes;\n     }\n \n-    private List<Pair<Long,Label[]>> randomModifications( List<Pair<Long,Label[]>> existingNodes,\n+    private void randomModifications( List<Pair<Long,Label[]>> existingNodes,\n             int numberOfModifications )\n     {\n         for ( int i = 0; i < numberOfModifications; i++ )\n@@ -174,7 +181,6 @@ public class IndexConsistencyIT\n                 modifyLabelsOnExistingNode( existingNodes );\n             }\n         }\n-        return existingNodes;\n     }\n \n     private void createNewNode( List<Pair<Long,Label[]>> existingNodes )",
    "Rename ArithmeticExpression to ArithmeticBinaryExpression": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/AggregationAnalyzer.java b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/AggregationAnalyzer.java\nindex f6a3b7d7c0..87cb5cc4c5 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/AggregationAnalyzer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/AggregationAnalyzer.java\n@@ -14,7 +14,7 @@\n package com.facebook.presto.sql.analyzer;\n \n import com.facebook.presto.metadata.Metadata;\n-import com.facebook.presto.sql.tree.ArithmeticExpression;\n+import com.facebook.presto.sql.tree.ArithmeticBinaryExpression;\n import com.facebook.presto.sql.tree.ArrayConstructor;\n import com.facebook.presto.sql.tree.AstVisitor;\n import com.facebook.presto.sql.tree.BetweenPredicate;\n@@ -196,7 +196,7 @@ public class AggregationAnalyzer\n         }\n \n         @Override\n-        protected Boolean visitArithmeticExpression(ArithmeticExpression node, Void context)\n+        protected Boolean visitArithmeticBinary(ArithmeticBinaryExpression node, Void context)\n         {\n             return process(node.getLeft(), context) && process(node.getRight(), context);\n         }\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java\nindex fef0bf7b5e..ab57dee8ae 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java\n@@ -24,7 +24,7 @@ import com.facebook.presto.spi.type.TypeSignature;\n import com.facebook.presto.sql.parser.SqlParser;\n import com.facebook.presto.sql.planner.DependencyExtractor;\n import com.facebook.presto.sql.planner.Symbol;\n-import com.facebook.presto.sql.tree.ArithmeticExpression;\n+import com.facebook.presto.sql.tree.ArithmeticBinaryExpression;\n import com.facebook.presto.sql.tree.ArrayConstructor;\n import com.facebook.presto.sql.tree.AstVisitor;\n import com.facebook.presto.sql.tree.BetweenPredicate;\n@@ -443,7 +443,7 @@ public class ExpressionAnalyzer\n         }\n \n         @Override\n-        protected Type visitArithmeticExpression(ArithmeticExpression node, AnalysisContext context)\n+        protected Type visitArithmeticBinary(ArithmeticBinaryExpression node, AnalysisContext context)\n         {\n             return getOperator(context, node, OperatorType.valueOf(node.getType().name()), node.getLeft(), node.getRight());\n         }\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/ExpressionInterpreter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/ExpressionInterpreter.java\nindex b077f97acf..192fc1a40d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/ExpressionInterpreter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/ExpressionInterpreter.java\n@@ -23,7 +23,7 @@ import com.facebook.presto.spi.PrestoException;\n import com.facebook.presto.spi.RecordCursor;\n import com.facebook.presto.spi.block.Block;\n import com.facebook.presto.spi.type.Type;\n-import com.facebook.presto.sql.tree.ArithmeticExpression;\n+import com.facebook.presto.sql.tree.ArithmeticBinaryExpression;\n import com.facebook.presto.sql.tree.ArrayConstructor;\n import com.facebook.presto.sql.tree.AstVisitor;\n import com.facebook.presto.sql.tree.BetweenPredicate;\n@@ -433,7 +433,7 @@ public class ExpressionInterpreter\n         }\n \n         @Override\n-        protected Object visitArithmeticExpression(ArithmeticExpression node, Object context)\n+        protected Object visitArithmeticBinary(ArithmeticBinaryExpression node, Object context)\n         {\n             Object left = process(node.getLeft(), context);\n             if (left == null) {\n@@ -445,7 +445,7 @@ public class ExpressionInterpreter\n             }\n \n             if (hasUnresolvedValue(left, right)) {\n-                return new ArithmeticExpression(node.getType(), toExpression(left, expressionTypes.get(node.getLeft())), toExpression(right, expressionTypes.get(node.getRight())));\n+                return new ArithmeticBinaryExpression(node.getType(), toExpression(left, expressionTypes.get(node.getLeft())), toExpression(right, expressionTypes.get(node.getRight())));\n             }\n \n             return invokeOperator(OperatorType.valueOf(node.getType().name()), types(node.getLeft(), node.getRight()), ImmutableList.of(left, right));\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/RelationPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/RelationPlanner.java\nindex 2b02a36e4e..c1b34b6e8f 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/RelationPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/RelationPlanner.java\n@@ -39,7 +39,7 @@ import com.facebook.presto.sql.planner.plan.UnionNode;\n import com.facebook.presto.sql.planner.plan.UnnestNode;\n import com.facebook.presto.sql.planner.plan.ValuesNode;\n import com.facebook.presto.sql.tree.AliasedRelation;\n-import com.facebook.presto.sql.tree.ArithmeticExpression;\n+import com.facebook.presto.sql.tree.ArithmeticBinaryExpression;\n import com.facebook.presto.sql.tree.BooleanLiteral;\n import com.facebook.presto.sql.tree.CoalesceExpression;\n import com.facebook.presto.sql.tree.ComparisonExpression;\n@@ -307,7 +307,7 @@ class RelationPlanner\n         }\n         Optional<Symbol> sampleWeight = Optional.empty();\n         if (leftPlanBuilder.getSampleWeight().isPresent() || rightPlanBuilder.getSampleWeight().isPresent()) {\n-            Expression expression = new ArithmeticExpression(ArithmeticExpression.Type.MULTIPLY, oneIfNull(leftPlanBuilder.getSampleWeight()), oneIfNull(rightPlanBuilder.getSampleWeight()));\n+            Expression expression = new ArithmeticBinaryExpression(ArithmeticBinaryExpression.Type.MULTIPLY, oneIfNull(leftPlanBuilder.getSampleWeight()), oneIfNull(rightPlanBuilder.getSampleWeight()));\n             sampleWeight = Optional.of(symbolAllocator.newSymbol(expression, BIGINT));\n             ImmutableMap.Builder<Symbol, Expression> projections = ImmutableMap.builder();\n             projections.put(sampleWeight.get(), expression);\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/Signatures.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/Signatures.java\nindex f057776c1d..e124212980 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/Signatures.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/Signatures.java\n@@ -18,7 +18,7 @@ import com.facebook.presto.metadata.Signature;\n import com.facebook.presto.spi.type.StandardTypes;\n import com.facebook.presto.spi.type.Type;\n import com.facebook.presto.spi.type.TypeSignature;\n-import com.facebook.presto.sql.tree.ArithmeticExpression;\n+import com.facebook.presto.sql.tree.ArithmeticBinaryExpression;\n import com.facebook.presto.sql.tree.ComparisonExpression;\n import com.facebook.presto.sql.tree.LogicalBinaryExpression;\n import com.facebook.presto.type.LikePatternType;\n@@ -91,7 +91,7 @@ public final class Signatures\n         return internalOperator(\"NEGATION\", returnType.getTypeSignature(), valueType.getTypeSignature());\n     }\n \n-    public static Signature arithmeticExpressionSignature(ArithmeticExpression.Type expressionType, Type returnType, Type leftType, Type rightType)\n+    public static Signature arithmeticExpressionSignature(ArithmeticBinaryExpression.Type expressionType, Type returnType, Type leftType, Type rightType)\n     {\n         return internalOperator(expressionType.name(), returnType.getTypeSignature(), leftType.getTypeSignature(), rightType.getTypeSignature());\n     }\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlToRowExpressionTranslator.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlToRowExpressionTranslator.java\nindex 23bacfaaa7..8fe60e6dfe 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlToRowExpressionTranslator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlToRowExpressionTranslator.java\n@@ -20,7 +20,7 @@ import com.facebook.presto.spi.type.TimeZoneKey;\n import com.facebook.presto.spi.type.Type;\n import com.facebook.presto.spi.type.TypeSignature;\n import com.facebook.presto.sql.relational.optimizer.ExpressionOptimizer;\n-import com.facebook.presto.sql.tree.ArithmeticExpression;\n+import com.facebook.presto.sql.tree.ArithmeticBinaryExpression;\n import com.facebook.presto.sql.tree.ArrayConstructor;\n import com.facebook.presto.sql.tree.AstVisitor;\n import com.facebook.presto.sql.tree.BetweenPredicate;\n@@ -269,7 +269,7 @@ public final class SqlToRowExpressionTranslator\n         }\n \n         @Override\n-        protected RowExpression visitArithmeticExpression(ArithmeticExpression node, Void context)\n+        protected RowExpression visitArithmeticBinary(ArithmeticBinaryExpression node, Void context)\n         {\n             RowExpression left = process(node.getLeft(), context);\n             RowExpression right = process(node.getRight(), context);\ndiff --git a/presto-main/src/test/java/com/facebook/presto/sql/planner/TestEqualityInference.java b/presto-main/src/test/java/com/facebook/presto/sql/planner/TestEqualityInference.java\nindex f0f81f4964..37b36c4119 100644\n--- a/presto-main/src/test/java/com/facebook/presto/sql/planner/TestEqualityInference.java\n+++ b/presto-main/src/test/java/com/facebook/presto/sql/planner/TestEqualityInference.java\n@@ -14,7 +14,7 @@\n package com.facebook.presto.sql.planner;\n \n import com.facebook.presto.sql.ExpressionUtils;\n-import com.facebook.presto.sql.tree.ArithmeticExpression;\n+import com.facebook.presto.sql.tree.ArithmeticBinaryExpression;\n import com.facebook.presto.sql.tree.ComparisonExpression;\n import com.facebook.presto.sql.tree.Expression;\n import com.facebook.presto.sql.tree.LongLiteral;\n@@ -336,7 +336,7 @@ public class TestEqualityInference\n \n     private static Expression add(Expression expression1, Expression expression2)\n     {\n-        return new ArithmeticExpression(ArithmeticExpression.Type.ADD, expression1, expression2);\n+        return new ArithmeticBinaryExpression(ArithmeticBinaryExpression.Type.ADD, expression1, expression2);\n     }\n \n     private static Expression multiply(String symbol1, String symbol2)\n@@ -346,7 +346,7 @@ public class TestEqualityInference\n \n     private static Expression multiply(Expression expression1, Expression expression2)\n     {\n-        return new ArithmeticExpression(ArithmeticExpression.Type.MULTIPLY, expression1, expression2);\n+        return new ArithmeticBinaryExpression(ArithmeticBinaryExpression.Type.MULTIPLY, expression1, expression2);\n     }\n \n     private static Expression equals(String symbol1, String symbol2)\ndiff --git a/presto-main/src/test/java/com/facebook/presto/sql/planner/TestInterpretedProjectionFunction.java b/presto-main/src/test/java/com/facebook/presto/sql/planner/TestInterpretedProjectionFunction.java\nindex bfe6c53835..2104143f8a 100644\n--- a/presto-main/src/test/java/com/facebook/presto/sql/planner/TestInterpretedProjectionFunction.java\n+++ b/presto-main/src/test/java/com/facebook/presto/sql/planner/TestInterpretedProjectionFunction.java\n@@ -22,7 +22,7 @@ import com.facebook.presto.spi.block.BlockBuilder;\n import com.facebook.presto.spi.block.BlockBuilderStatus;\n import com.facebook.presto.spi.type.Type;\n import com.facebook.presto.sql.parser.SqlParser;\n-import com.facebook.presto.sql.tree.ArithmeticExpression;\n+import com.facebook.presto.sql.tree.ArithmeticBinaryExpression;\n import com.google.common.collect.ImmutableMap;\n import org.testng.annotations.Test;\n \n@@ -80,7 +80,7 @@ public class TestInterpretedProjectionFunction\n     @Test\n     public void testArithmeticExpressionWithNulls()\n     {\n-        for (ArithmeticExpression.Type type : ArithmeticExpression.Type.values()) {\n+        for (ArithmeticBinaryExpression.Type type : ArithmeticBinaryExpression.Type.values()) {\n             assertProjection(\"NULL \" + type.getValue() + \" NULL\", null);\n \n             assertProjection(\"42 \" + type.getValue() + \" NULL\", null);\ndiff --git a/presto-parser/src/main/java/com/facebook/presto/sql/ExpressionFormatter.java b/presto-parser/src/main/java/com/facebook/presto/sql/ExpressionFormatter.java\nindex 43c0fd0463..712a2e6ae6 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/ExpressionFormatter.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/ExpressionFormatter.java\n@@ -14,7 +14,7 @@\n package com.facebook.presto.sql;\n \n import com.facebook.presto.sql.tree.AllColumns;\n-import com.facebook.presto.sql.tree.ArithmeticExpression;\n+import com.facebook.presto.sql.tree.ArithmeticBinaryExpression;\n import com.facebook.presto.sql.tree.ArrayConstructor;\n import com.facebook.presto.sql.tree.AstVisitor;\n import com.facebook.presto.sql.tree.BetweenPredicate;\n@@ -317,7 +317,7 @@ public final class ExpressionFormatter\n         }\n \n         @Override\n-        protected String visitArithmeticExpression(ArithmeticExpression node, Void context)\n+        protected String visitArithmeticBinary(ArithmeticBinaryExpression node, Void context)\n         {\n             return formatBinaryExpression(node.getType().getValue(), node.getLeft(), node.getRight());\n         }\ndiff --git a/presto-parser/src/main/java/com/facebook/presto/sql/TreePrinter.java b/presto-parser/src/main/java/com/facebook/presto/sql/TreePrinter.java\nindex 1ea5586a31..491c233a69 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/TreePrinter.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/TreePrinter.java\n@@ -15,7 +15,7 @@ package com.facebook.presto.sql;\n \n import com.facebook.presto.sql.tree.AliasedRelation;\n import com.facebook.presto.sql.tree.AllColumns;\n-import com.facebook.presto.sql.tree.ArithmeticExpression;\n+import com.facebook.presto.sql.tree.ArithmeticBinaryExpression;\n import com.facebook.presto.sql.tree.AstVisitor;\n import com.facebook.presto.sql.tree.BooleanLiteral;\n import com.facebook.presto.sql.tree.ComparisonExpression;\n@@ -189,11 +189,11 @@ public class TreePrinter\n             }\n \n             @Override\n-            protected Void visitArithmeticExpression(ArithmeticExpression node, Integer indentLevel)\n+            protected Void visitArithmeticBinary(ArithmeticBinaryExpression node, Integer indentLevel)\n             {\n                 print(indentLevel, node.getType().toString());\n \n-                super.visitArithmeticExpression(node, indentLevel + 1);\n+                super.visitArithmeticBinary(node, indentLevel + 1);\n \n                 return null;\n             }\ndiff --git a/presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java b/presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java\nindex c7880d5a88..6f6bc16efe 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java\n@@ -16,7 +16,7 @@ package com.facebook.presto.sql.parser;\n import com.facebook.presto.sql.tree.AliasedRelation;\n import com.facebook.presto.sql.tree.AllColumns;\n import com.facebook.presto.sql.tree.Approximate;\n-import com.facebook.presto.sql.tree.ArithmeticExpression;\n+import com.facebook.presto.sql.tree.ArithmeticBinaryExpression;\n import com.facebook.presto.sql.tree.ArrayConstructor;\n import com.facebook.presto.sql.tree.BetweenPredicate;\n import com.facebook.presto.sql.tree.BooleanLiteral;\n@@ -676,7 +676,7 @@ class AstBuilder\n     @Override\n     public Node visitArithmeticBinary(@NotNull SqlBaseParser.ArithmeticBinaryContext context)\n     {\n-        return new ArithmeticExpression(\n+        return new ArithmeticBinaryExpression(\n                 getArithmeticBinaryOperator(context.operator),\n                 (Expression) visit(context.left),\n                 (Expression) visit(context.right));\n@@ -1042,22 +1042,22 @@ class AstBuilder\n                 .collect(Collectors.toList());\n     }\n \n-    private static ArithmeticExpression.Type getArithmeticBinaryOperator(Token operator)\n+    private static ArithmeticBinaryExpression.Type getArithmeticBinaryOperator(Token operator)\n     {\n         switch (operator.getType()) {\n             case SqlBaseLexer.PLUS:\n-                return ArithmeticExpression.Type.ADD;\n+                return ArithmeticBinaryExpression.Type.ADD;\n             case SqlBaseLexer.MINUS:\n-                return ArithmeticExpression.Type.SUBTRACT;\n+                return ArithmeticBinaryExpression.Type.SUBTRACT;\n             case SqlBaseLexer.ASTERISK:\n-                return ArithmeticExpression.Type.MULTIPLY;\n+                return ArithmeticBinaryExpression.Type.MULTIPLY;\n             case SqlBaseLexer.SLASH:\n-                return ArithmeticExpression.Type.DIVIDE;\n+                return ArithmeticBinaryExpression.Type.DIVIDE;\n             case SqlBaseLexer.PERCENT:\n-                return ArithmeticExpression.Type.MODULUS;\n+                return ArithmeticBinaryExpression.Type.MODULUS;\n         }\n \n-        throw new IllegalArgumentException(\"Unsupported operator: \" + operator.getText());\n+        throw new UnsupportedOperationException(\"Unsupported operator: \" + operator.getText());\n     }\n \n     private static ComparisonExpression.Type getComparisonOperator(Token symbol)\ndiff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/ArithmeticExpression.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/ArithmeticBinaryExpression.java\nsimilarity index 89%\nrename from presto-parser/src/main/java/com/facebook/presto/sql/tree/ArithmeticExpression.java\nrename to presto-parser/src/main/java/com/facebook/presto/sql/tree/ArithmeticBinaryExpression.java\nindex 69189df47c..e915e92aba 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/ArithmeticExpression.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/ArithmeticBinaryExpression.java\n@@ -13,7 +13,7 @@\n  */\n package com.facebook.presto.sql.tree;\n \n-public class ArithmeticExpression\n+public class ArithmeticBinaryExpression\n         extends Expression\n {\n     public enum Type\n@@ -40,7 +40,7 @@ public class ArithmeticExpression\n     private final Expression left;\n     private final Expression right;\n \n-    public ArithmeticExpression(Type type, Expression left, Expression right)\n+    public ArithmeticBinaryExpression(Type type, Expression left, Expression right)\n     {\n         this.type = type;\n         this.left = left;\n@@ -65,7 +65,7 @@ public class ArithmeticExpression\n     @Override\n     public <R, C> R accept(AstVisitor<R, C> visitor, C context)\n     {\n-        return visitor.visitArithmeticExpression(this, context);\n+        return visitor.visitArithmeticBinary(this, context);\n     }\n \n     @Override\n@@ -78,7 +78,7 @@ public class ArithmeticExpression\n             return false;\n         }\n \n-        ArithmeticExpression that = (ArithmeticExpression) o;\n+        ArithmeticBinaryExpression that = (ArithmeticBinaryExpression) o;\n \n         if (!left.equals(that.left)) {\n             return false;\ndiff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\nindex 28175dbcaf..ccc2d806aa 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\n@@ -42,7 +42,7 @@ public abstract class AstVisitor<R, C>\n         return visitExpression(node, context);\n     }\n \n-    protected R visitArithmeticExpression(ArithmeticExpression node, C context)\n+    protected R visitArithmeticBinary(ArithmeticBinaryExpression node, C context)\n     {\n         return visitExpression(node, context);\n     }\ndiff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultTraversalVisitor.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultTraversalVisitor.java\nindex c48448d4f0..35e6ed3454 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultTraversalVisitor.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultTraversalVisitor.java\n@@ -29,7 +29,7 @@ public abstract class DefaultTraversalVisitor<R, C>\n     }\n \n     @Override\n-    protected R visitArithmeticExpression(ArithmeticExpression node, C context)\n+    protected R visitArithmeticBinary(ArithmeticBinaryExpression node, C context)\n     {\n         process(node.getLeft(), context);\n         process(node.getRight(), context);\ndiff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/ExpressionRewriter.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/ExpressionRewriter.java\nindex ae0750329e..664aab517a 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/ExpressionRewriter.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/ExpressionRewriter.java\n@@ -25,7 +25,7 @@ public class ExpressionRewriter<C>\n         return rewriteExpression(node, context, treeRewriter);\n     }\n \n-    public Expression rewriteArithmeticExpression(ArithmeticExpression node, C context, ExpressionTreeRewriter<C> treeRewriter)\n+    public Expression rewriteArithmeticBinary(ArithmeticBinaryExpression node, C context, ExpressionTreeRewriter<C> treeRewriter)\n     {\n         return rewriteExpression(node, context, treeRewriter);\n     }\ndiff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/ExpressionTreeRewriter.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/ExpressionTreeRewriter.java\nindex c5d345e6e4..ff9bc6af11 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/ExpressionTreeRewriter.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/ExpressionTreeRewriter.java\n@@ -87,10 +87,10 @@ public final class ExpressionTreeRewriter<C>\n         }\n \n         @Override\n-        public Expression visitArithmeticExpression(ArithmeticExpression node, Context<C> context)\n+        public Expression visitArithmeticBinary(ArithmeticBinaryExpression node, Context<C> context)\n         {\n             if (!context.isDefaultRewrite()) {\n-                Expression result = rewriter.rewriteArithmeticExpression(node, context.get(), ExpressionTreeRewriter.this);\n+                Expression result = rewriter.rewriteArithmeticBinary(node, context.get(), ExpressionTreeRewriter.this);\n                 if (result != null) {\n                     return result;\n                 }\n@@ -100,7 +100,7 @@ public final class ExpressionTreeRewriter<C>\n             Expression right = rewrite(node.getRight(), context.get());\n \n             if (left != node.getLeft() || right != node.getRight()) {\n-                return new ArithmeticExpression(node.getType(), left, right);\n+                return new ArithmeticBinaryExpression(node.getType(), left, right);\n             }\n \n             return node;\ndiff --git a/presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java b/presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java\nindex 6d81836c7f..e2d90e458e 100644\n--- a/presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java\n+++ b/presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java\n@@ -14,7 +14,7 @@\n package com.facebook.presto.sql.parser;\n \n import com.facebook.presto.sql.tree.AllColumns;\n-import com.facebook.presto.sql.tree.ArithmeticExpression;\n+import com.facebook.presto.sql.tree.ArithmeticBinaryExpression;\n import com.facebook.presto.sql.tree.ArrayConstructor;\n import com.facebook.presto.sql.tree.Cast;\n import com.facebook.presto.sql.tree.CurrentTime;\n@@ -320,25 +320,25 @@ public class TestSqlParser\n                 new NotExpression(new LongLiteral(\"1\")),\n                 new LongLiteral(\"2\")));\n \n-        assertExpression(\"-1 + 2\", new ArithmeticExpression(ArithmeticExpression.Type.ADD,\n+        assertExpression(\"-1 + 2\", new ArithmeticBinaryExpression(ArithmeticBinaryExpression.Type.ADD,\n                 new NegativeExpression(new LongLiteral(\"1\")),\n                 new LongLiteral(\"2\")));\n \n-        assertExpression(\"1 - 2 - 3\", new ArithmeticExpression(ArithmeticExpression.Type.SUBTRACT,\n-                new ArithmeticExpression(ArithmeticExpression.Type.SUBTRACT,\n+        assertExpression(\"1 - 2 - 3\", new ArithmeticBinaryExpression(ArithmeticBinaryExpression.Type.SUBTRACT,\n+                new ArithmeticBinaryExpression(ArithmeticBinaryExpression.Type.SUBTRACT,\n                         new LongLiteral(\"1\"),\n                         new LongLiteral(\"2\")),\n                 new LongLiteral(\"3\")));\n \n-        assertExpression(\"1 / 2 / 3\", new ArithmeticExpression(ArithmeticExpression.Type.DIVIDE,\n-                new ArithmeticExpression(ArithmeticExpression.Type.DIVIDE,\n+        assertExpression(\"1 / 2 / 3\", new ArithmeticBinaryExpression(ArithmeticBinaryExpression.Type.DIVIDE,\n+                new ArithmeticBinaryExpression(ArithmeticBinaryExpression.Type.DIVIDE,\n                         new LongLiteral(\"1\"),\n                         new LongLiteral(\"2\")),\n                 new LongLiteral(\"3\")));\n \n-        assertExpression(\"1 + 2 * 3\", new ArithmeticExpression(ArithmeticExpression.Type.ADD,\n+        assertExpression(\"1 + 2 * 3\", new ArithmeticBinaryExpression(ArithmeticBinaryExpression.Type.ADD,\n                 new LongLiteral(\"1\"),\n-                new ArithmeticExpression(ArithmeticExpression.Type.MULTIPLY,\n+                new ArithmeticBinaryExpression(ArithmeticBinaryExpression.Type.MULTIPLY,\n                         new LongLiteral(\"2\"),\n                         new LongLiteral(\"3\"))));\n ",
    "1 . add pom . xml .": "diff --git a/dex-dumper/pom.xml b/dex-dumper/pom.xml\nindex 8c64c39..256b88f 100644\n--- a/dex-dumper/pom.xml\n+++ b/dex-dumper/pom.xml\n@@ -1,10 +1,17 @@\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n \txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\r\n \t<modelVersion>4.0.0</modelVersion>\r\n+\r\n+\t<parent>\r\n+\t\t<groupId>com.googlecode.dex2jar</groupId>\r\n+\t\t<artifactId>dex2jar</artifactId>\r\n+\t\t<version>1.0</version>\r\n+\t</parent>\r\n+\r\n \t<groupId>com.googlecode.dex2jar</groupId>\r\n \t<artifactId>dex-dumper</artifactId>\r\n-\t<name>dex2jar</name>\r\n \t<version>1.0</version>\r\n+\t<name>Dex Dumper</name>\r\n \t<description>A tool for converting Android's .dex format to Java's .class format</description>\r\n \t<url>http://code.google.como/p/dex2jar/</url>\r\n \t<dependencies>\r\ndiff --git a/dex-reader/pom.xml b/dex-reader/pom.xml\nindex e1b87cb..f33b5d1 100644\n--- a/dex-reader/pom.xml\n+++ b/dex-reader/pom.xml\n@@ -1,10 +1,17 @@\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n \txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\r\n \t<modelVersion>4.0.0</modelVersion>\r\n+\r\n+\t<parent>\r\n+\t\t<groupId>com.googlecode.dex2jar</groupId>\r\n+\t\t<artifactId>dex2jar</artifactId>\r\n+\t\t<version>1.0</version>\r\n+\t</parent>\r\n+\r\n \t<groupId>com.googlecode.dex2jar</groupId>\r\n \t<artifactId>dex-reader</artifactId>\r\n-\t<name>dex2jar-Dex file reader</name>\r\n \t<version>1.0</version>\r\n+\t<name>Dex Reader</name>\r\n \t<description>A tool for converting Android's .dex format to Java's .class format</description>\r\n \t<url>http://code.google.como/p/dex2jar/</url>\r\n \t<dependencies>\r\ndiff --git a/dex-translator/pom.xml b/dex-translator/pom.xml\nindex 4ba7bef..1417508 100644\n--- a/dex-translator/pom.xml\n+++ b/dex-translator/pom.xml\n@@ -1,10 +1,17 @@\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n \txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\r\n \t<modelVersion>4.0.0</modelVersion>\r\n+\r\n+\t<parent>\r\n+\t\t<groupId>com.googlecode.dex2jar</groupId>\r\n+\t\t<artifactId>dex2jar</artifactId>\r\n+\t\t<version>1.0</version>\r\n+\t</parent>\r\n+\r\n \t<groupId>com.googlecode.dex2jar</groupId>\r\n \t<artifactId>dex-translator</artifactId>\r\n-\t<name>dex2jar</name>\r\n \t<version>0.0.9.0-SNAPSHOT</version>\r\n+\t<name>Dex Translator</name>\r\n \t<description>A tool for converting Android's .dex format to Java's .class format</description>\r\n \t<url>http://code.google.como/p/dex2jar/</url>\r\n \t<dependencies>\r\ndiff --git a/pom.xml b/pom.xml\nnew file mode 100644\nindex 0000000..2733dd2\n--- /dev/null\n+++ b/pom.xml\n@@ -0,0 +1,53 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\r\n+\t<modelVersion>4.0.0</modelVersion>\r\n+\t<groupId>com.googlecode.dex2jar</groupId>\r\n+\t<artifactId>dex2jar</artifactId>\r\n+\t<packaging>pom</packaging>\r\n+\t<name>dex2jar</name>\r\n+\t<version>1.0</version>\r\n+\t<description>A tool for converting Android's .dex format to Java's .class format</description>\r\n+\t<url>http://code.google.como/p/dex2jar/</url>\r\n+\r\n+\t<modules>\r\n+\t\t<module>dex-reader</module>\r\n+\t\t<module>dex-dumper</module>\r\n+\t\t<module>dex-translator</module>\r\n+\t</modules>\r\n+\r\n+\t<build>\r\n+\t\t<plugins>\r\n+\t\t\t<plugin>\r\n+\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n+\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\r\n+\t\t\t\t<configuration>\r\n+\t\t\t\t\t<source>1.6</source>\r\n+\t\t\t\t\t<target>1.6</target>\r\n+\t\t\t\t\t<encoding>${project.build.sourceEncoding}</encoding>\r\n+\t\t\t\t</configuration>\r\n+\t\t\t</plugin>\r\n+\t\t\t<plugin>\r\n+\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n+\t\t\t\t<artifactId>maven-source-plugin</artifactId>\r\n+\t\t\t\t<executions>\r\n+\t\t\t\t\t<execution>\r\n+\t\t\t\t\t\t<id>attach-sources</id>\r\n+\t\t\t\t\t\t<goals>\r\n+\t\t\t\t\t\t\t<goal>jar</goal>\r\n+\t\t\t\t\t\t</goals>\r\n+\t\t\t\t\t</execution>\r\n+\t\t\t\t</executions>\r\n+\t\t\t</plugin>\r\n+\t\t\t<plugin>\r\n+\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n+\t\t\t\t<artifactId>maven-resources-plugin</artifactId>\r\n+\t\t\t\t<configuration>\r\n+\t\t\t\t\t<encoding>${project.build.sourceEncoding}</encoding>\r\n+\t\t\t\t</configuration>\r\n+\t\t\t</plugin>\r\n+\t\t</plugins>\r\n+\t</build>\r\n+\t<properties>\r\n+\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n+\t</properties>\r\n+</project>\n\\ No newline at end of file",
    "Limit the number of parallel jobs in test Bazel instances so that running the tests ( which spawn multiple tests in the outside Bazel instance with each its own inner Bazel instance which in turn have their own thread pool ) doesn \\' t grind the machine t": "diff --git a/src/test/shell/bazel/test-setup.sh b/src/test/shell/bazel/test-setup.sh\nindex b9cc243ee7..b4ae28f051 100755\n--- a/src/test/shell/bazel/test-setup.sh\n+++ b/src/test/shell/bazel/test-setup.sh\n@@ -36,6 +36,7 @@ function setup_bazelrc() {\n   cat >$TEST_TMPDIR/bazelrc <<EOF\n startup --output_user_root=${bazel_root}\n startup --host_javabase=${bazel_javabase}\n+build -j 8\n ${EXTRA_BAZELRC:-}\n EOF\n }",
    "detect osx 10 . 10 in isMavericks checks": "diff --git a/src/cpp/desktop-mac/GwtCallbacks.mm b/src/cpp/desktop-mac/GwtCallbacks.mm\nindex 986541fabd..e37d964bb4 100644\n--- a/src/cpp/desktop-mac/GwtCallbacks.mm\n+++ b/src/cpp/desktop-mac/GwtCallbacks.mm\n@@ -893,7 +893,8 @@ private:\n    std::string version(\n                        [systemVersion cStringUsingEncoding:NSASCIIStringEncoding]);\n    \n-   return boost::algorithm::starts_with(version, \"10.9\");\n+   return boost::algorithm::starts_with(version, \"10.9\") ||\n+          boost::algorithm::starts_with(version, \"10.10\");\n }\n \n // On Mavericks we need to tell the OS that we are busy so that\ndiff --git a/src/cpp/session/SessionModuleContext.mm b/src/cpp/session/SessionModuleContext.mm\nindex b9f9ce88e8..9e476150c5 100644\n--- a/src/cpp/session/SessionModuleContext.mm\n+++ b/src/cpp/session/SessionModuleContext.mm\n@@ -48,7 +48,8 @@ bool isOSXMavericks()\n \n    [pool release];\n \n-   return boost::algorithm::starts_with(version, \"10.9\");\n+   return boost::algorithm::starts_with(version, \"10.9\") ||\n+          boost::algorithm::starts_with(version, \"10.10\");\n }\n \n bool hasOSXMavericksDeveloperTools()",
    "Build libffi on windows . . PullRequest : graal / 2822": "diff --git a/compiler/src/org.graalvm.compiler.hotspot.test/src/org/graalvm/compiler/hotspot/test/CheckGraalIntrinsics.java b/compiler/src/org.graalvm.compiler.hotspot.test/src/org/graalvm/compiler/hotspot/test/CheckGraalIntrinsics.java\nindex 9b1dd1c80b9..8c2cba0bfae 100644\n--- a/compiler/src/org.graalvm.compiler.hotspot.test/src/org/graalvm/compiler/hotspot/test/CheckGraalIntrinsics.java\n+++ b/compiler/src/org.graalvm.compiler.hotspot.test/src/org/graalvm/compiler/hotspot/test/CheckGraalIntrinsics.java\n@@ -277,8 +277,6 @@ public class CheckGraalIntrinsics extends GraalTest {\n                             \"java/lang/Math.fma(FFF)F\",\n                             // Just check if the argument is a compile time constant\n                             \"java/lang/invoke/MethodHandleImpl.isCompileConstant(Ljava/lang/Object;)Z\",\n-                            // Some logic and a runtime call\n-                            \"java/util/ArraysSupport.vectorizedMismatch(Ljava/lang/Object;JLjava/lang/Object;JII)I\",\n                             // Only used as a marker for vectorization?\n                             \"java/util/stream/Streams$RangeIntSpliterator.forEachRemaining(Ljava/util/function/IntConsumer;)V\",\n                             // Only implemented on non-AMD64 platforms (some logic and runtime call)\n@@ -365,8 +363,7 @@ public class CheckGraalIntrinsics extends GraalTest {\n \n         if (isJDK10OrHigher()) {\n             add(toBeInvestigated,\n-                            \"java/lang/Math.multiplyHigh(JJ)J\",\n-                            \"jdk/internal/util/ArraysSupport.vectorizedMismatch(Ljava/lang/Object;JLjava/lang/Object;JII)I\");\n+                            \"java/lang/Math.multiplyHigh(JJ)J\");\n         }\n \n         if (isJDK11OrHigher()) {\n@@ -443,6 +440,7 @@ public class CheckGraalIntrinsics extends GraalTest {\n                 add(toBeInvestigated,\n                                 \"com/sun/crypto/provider/CounterMode.implCrypt([BII[BI)I\",\n                                 \"java/lang/Thread.onSpinWait()V\",\n+                                \"java/util/ArraysSupport.vectorizedMismatch(Ljava/lang/Object;JLjava/lang/Object;JII)I\",\n                                 \"jdk/internal/misc/Unsafe.getCharUnaligned(Ljava/lang/Object;J)C\",\n                                 \"jdk/internal/misc/Unsafe.getIntUnaligned(Ljava/lang/Object;J)I\",\n                                 \"jdk/internal/misc/Unsafe.getLongUnaligned(Ljava/lang/Object;J)J\",\n@@ -452,6 +450,10 @@ public class CheckGraalIntrinsics extends GraalTest {\n                                 \"jdk/internal/misc/Unsafe.putLongUnaligned(Ljava/lang/Object;JJ)V\",\n                                 \"jdk/internal/misc/Unsafe.putShortUnaligned(Ljava/lang/Object;JS)V\");\n             }\n+            if (isJDK10OrHigher()) {\n+                add(toBeInvestigated,\n+                                \"jdk/internal/util/ArraysSupport.vectorizedMismatch(Ljava/lang/Object;JLjava/lang/Object;JII)I\");\n+            }\n         }\n \n         /*\ndiff --git a/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/GraalHotSpotVMConfig.java b/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/GraalHotSpotVMConfig.java\nindex 13a53554e6d..e637f48dad0 100644\n--- a/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/GraalHotSpotVMConfig.java\n+++ b/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/GraalHotSpotVMConfig.java\n@@ -106,6 +106,7 @@ public class GraalHotSpotVMConfig extends GraalHotSpotVMConfigBase {\n     private final boolean useMontgomerySquareIntrinsic = getFlag(\"UseMontgomerySquareIntrinsic\", Boolean.class, false);\n     private final boolean useMulAddIntrinsic = getFlag(\"UseMulAddIntrinsic\", Boolean.class, false);\n     private final boolean useSquareToLenIntrinsic = getFlag(\"UseSquareToLenIntrinsic\", Boolean.class, false);\n+    public final boolean useVectorizedMismatchIntrinsic = getFlag(\"UseVectorizedMismatchIntrinsic\", Boolean.class, false);\n \n     /*\n      * These are methods because in some JDKs the flags are visible but the stubs themselves haven't\ndiff --git a/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/HotSpotBackend.java b/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/HotSpotBackend.java\nindex 9e74903b0f3..716cfce524d 100644\n--- a/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/HotSpotBackend.java\n+++ b/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/HotSpotBackend.java\n@@ -288,6 +288,18 @@ public abstract class HotSpotBackend extends Backend implements FrameMap.Referen\n     private static native int counterModeAESCrypt(@ConstantNodeParameter ForeignCallDescriptor descriptor, Word srcAddr, Word dstAddr, Word kPtr, Word cntPtr, int len, Word encCntPtr,\n                     Word used);\n \n+    /**\n+     * Descriptor for {@code StubRoutines::_vectorizedMismatch}.\n+     */\n+    public static final ForeignCallDescriptor VECTORIZED_MISMATCHED = new ForeignCallDescriptor(\"vectorizedMismatch\", int.class, Word.class, Word.class, int.class, int.class);\n+\n+    public static int vectorizedMismatch(Word aAddr, Word bAddr, int length, int log2ArrayIndexScale) {\n+        return vectorizedMismatchStub(VECTORIZED_MISMATCHED, aAddr, bAddr, length, log2ArrayIndexScale);\n+    }\n+\n+    @NodeIntrinsic(ForeignCallNode.class)\n+    private static native int vectorizedMismatchStub(@ConstantNodeParameter ForeignCallDescriptor descriptor, Word aAddr, Word bAddr, int length, int log2ArrayIndexScale);\n+\n     /**\n      * @see VMErrorNode\n      */\ndiff --git a/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/meta/HotSpotGraphBuilderPlugins.java b/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/meta/HotSpotGraphBuilderPlugins.java\nindex 57405753ebc..2d616dcf7ef 100644\n--- a/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/meta/HotSpotGraphBuilderPlugins.java\n+++ b/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/meta/HotSpotGraphBuilderPlugins.java\n@@ -47,6 +47,7 @@ import org.graalvm.compiler.core.common.type.TypeReference;\n import org.graalvm.compiler.hotspot.GraalHotSpotVMConfig;\n import org.graalvm.compiler.hotspot.nodes.CurrentJavaThreadNode;\n import org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions;\n+import org.graalvm.compiler.hotspot.replacements.ArraysSupportSubstitutions;\n import org.graalvm.compiler.hotspot.replacements.BigIntegerSubstitutions;\n import org.graalvm.compiler.hotspot.replacements.CounterModeSubstitutions;\n import org.graalvm.compiler.hotspot.replacements.CRC32CSubstitutions;\n@@ -174,6 +175,7 @@ public class HotSpotGraphBuilderPlugins {\n                 StandardGraphBuilderPlugins.registerInvocationPlugins(metaAccess, snippetReflection, invocationPlugins, replacementBytecodeProvider, true, false);\n                 registerArrayPlugins(invocationPlugins, replacementBytecodeProvider);\n                 registerStringPlugins(invocationPlugins, replacementBytecodeProvider);\n+                registerArraysSupportPlugins(invocationPlugins, config, replacementBytecodeProvider);\n \n                 for (NodeIntrinsicPluginFactory factory : GraalServices.load(NodeIntrinsicPluginFactory.class)) {\n                     factory.registerPlugins(invocationPlugins, nodeIntrinsificationProvider);\n@@ -572,4 +574,11 @@ public class HotSpotGraphBuilderPlugins {\n             r.registerMethodSubstitution(CRC32CSubstitutions.class, \"updateDirectByteBuffer\", int.class, long.class, int.class, int.class);\n         }\n     }\n+\n+    private static void registerArraysSupportPlugins(InvocationPlugins plugins, GraalHotSpotVMConfig config, BytecodeProvider bytecodeProvider) {\n+        if (config.useVectorizedMismatchIntrinsic) {\n+            Registration r = new Registration(plugins, \"jdk.internal.util.ArraysSupport\", bytecodeProvider);\n+            r.registerMethodSubstitution(ArraysSupportSubstitutions.class, \"vectorizedMismatch\", Object.class, long.class, Object.class, long.class, int.class, int.class);\n+        }\n+    }\n }\ndiff --git a/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/meta/HotSpotHostForeignCallsProvider.java b/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/meta/HotSpotHostForeignCallsProvider.java\nindex 476dbeeefb0..85229b261f9 100644\n--- a/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/meta/HotSpotHostForeignCallsProvider.java\n+++ b/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/meta/HotSpotHostForeignCallsProvider.java\n@@ -60,6 +60,7 @@ import static org.graalvm.compiler.hotspot.HotSpotBackend.SHA5_IMPL_COMPRESS;\n import static org.graalvm.compiler.hotspot.HotSpotBackend.SHA_IMPL_COMPRESS;\n import static org.graalvm.compiler.hotspot.HotSpotBackend.SQUARE_TO_LEN;\n import static org.graalvm.compiler.hotspot.HotSpotBackend.UNWIND_EXCEPTION_TO_CALLER;\n+import static org.graalvm.compiler.hotspot.HotSpotBackend.VECTORIZED_MISMATCHED;\n import static org.graalvm.compiler.hotspot.HotSpotBackend.VM_ERROR;\n import static org.graalvm.compiler.hotspot.HotSpotBackend.WRONG_METHOD_HANDLER;\n import static org.graalvm.compiler.hotspot.HotSpotForeignCallLinkage.Reexecutability.NOT_REEXECUTABLE;\n@@ -444,6 +445,13 @@ public abstract class HotSpotHostForeignCallsProvider extends HotSpotForeignCall\n             registerForeignCall(COUNTERMODE_IMPL_CRYPT, c.counterModeAESCrypt, NativeCall, PRESERVES_REGISTERS, LEAF, REEXECUTABLE_ONLY_AFTER_EXCEPTION,\n                             NamedLocationIdentity.any());\n         }\n+\n+        if (c.useVectorizedMismatchIntrinsic) {\n+            assert (c.vectorizedMismatch != 0L);\n+            registerForeignCall(VECTORIZED_MISMATCHED, c.vectorizedMismatch, NativeCall, PRESERVES_REGISTERS, LEAF, REEXECUTABLE_ONLY_AFTER_EXCEPTION,\n+                            NamedLocationIdentity.any());\n+\n+        }\n     }\n \n     public HotSpotForeignCallLinkage getForeignCall(ForeignCallDescriptor descriptor) {\ndiff --git a/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/replacements/ArraysSupportSubstitutions.java b/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/replacements/ArraysSupportSubstitutions.java\nnew file mode 100644\nindex 00000000000..24aa3976c88\n--- /dev/null\n+++ b/compiler/src/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/replacements/ArraysSupportSubstitutions.java\n@@ -0,0 +1,47 @@\n+/*\n+ * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, Red Hat Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+package org.graalvm.compiler.hotspot.replacements;\n+\n+import org.graalvm.compiler.api.replacements.ClassSubstitution;\n+import org.graalvm.compiler.api.replacements.MethodSubstitution;\n+import org.graalvm.compiler.hotspot.HotSpotBackend;\n+import org.graalvm.compiler.nodes.ComputeObjectAddressNode;\n+import org.graalvm.compiler.word.Word;\n+import org.graalvm.word.WordFactory;\n+\n+@ClassSubstitution(className = \"jdk.internal.util.ArraysSupport\", optional = true)\n+public class ArraysSupportSubstitutions {\n+\n+    @SuppressWarnings(\"unused\")\n+    @MethodSubstitution(isStatic = true)\n+    static int vectorizedMismatch(Object a, long aOffset, Object b, long bOffset, int length, int log2ArrayIndexScale) {\n+        Word aAddr = WordFactory.unsigned(ComputeObjectAddressNode.get(a, aOffset));\n+        Word bAddr = WordFactory.unsigned(ComputeObjectAddressNode.get(b, bOffset));\n+\n+        return HotSpotBackend.vectorizedMismatch(aAddr, bAddr, length, log2ArrayIndexScale);\n+    }\n+}\ndiff --git a/tools/src/com.oracle.truffle.tools.chromeinspector.test/src/com/oracle/truffle/tools/chromeinspector/test/SLInspectDebugTest.java b/tools/src/com.oracle.truffle.tools.chromeinspector.test/src/com/oracle/truffle/tools/chromeinspector/test/SLInspectDebugTest.java\nindex 5331f79e34d..d36efef4a50 100644\n--- a/tools/src/com.oracle.truffle.tools.chromeinspector.test/src/com/oracle/truffle/tools/chromeinspector/test/SLInspectDebugTest.java\n+++ b/tools/src/com.oracle.truffle.tools.chromeinspector.test/src/com/oracle/truffle/tools/chromeinspector/test/SLInspectDebugTest.java\n@@ -1336,6 +1336,19 @@ public class SLInspectDebugTest {\n         tester.sendMessage(\"{\\\"id\\\":6,\\\"method\\\":\\\"Debugger.getPossibleBreakpoints\\\",\\\"params\\\":{\\\"start\\\":{\\\"scriptId\\\":\\\"1\\\",\\\"lineNumber\\\":11,\\\"columnNumber\\\":0},\\\"end\\\":{\\\"scriptId\\\":\\\"1\\\",\\\"lineNumber\\\":11,\\\"columnNumber\\\":37},\\\"restrictToFunction\\\":false}}\");\n         assertEquals(\"{\\\"result\\\":{\\\"locations\\\":[{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":2,\\\"lineNumber\\\":11},{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":13,\\\"lineNumber\\\":11},{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":24,\\\"lineNumber\\\":11}]},\\\"id\\\":6}\", tester.getMessages(true).trim());\n \n+        // When only start location is provided:\n+        tester.sendMessage(\"{\\\"id\\\":3,\\\"method\\\":\\\"Debugger.getPossibleBreakpoints\\\",\\\"params\\\":{\\\"start\\\":{\\\"scriptId\\\":\\\"1\\\",\\\"lineNumber\\\":5,\\\"columnNumber\\\":0},\\\"restrictToFunction\\\":false}}\");\n+        assertEquals(\"{\\\"result\\\":{\\\"locations\\\":[{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":2,\\\"lineNumber\\\":6}]},\\\"id\\\":3}\", tester.getMessages(true).trim());\n+        // Provides statement location when only beginning is included\n+        tester.sendMessage(\"{\\\"id\\\":4,\\\"method\\\":\\\"Debugger.getPossibleBreakpoints\\\",\\\"params\\\":{\\\"start\\\":{\\\"scriptId\\\":\\\"1\\\",\\\"lineNumber\\\":8,\\\"columnNumber\\\":2},\\\"restrictToFunction\\\":false}}\");\n+        assertEquals(\"{\\\"result\\\":{\\\"locations\\\":[{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":2,\\\"lineNumber\\\":8}]},\\\"id\\\":4}\", tester.getMessages(true).trim());\n+        // Provides statement location when only end is included\n+        tester.sendMessage(\"{\\\"id\\\":5,\\\"method\\\":\\\"Debugger.getPossibleBreakpoints\\\",\\\"params\\\":{\\\"start\\\":{\\\"scriptId\\\":\\\"1\\\",\\\"lineNumber\\\":9,\\\"columnNumber\\\":8},\\\"restrictToFunction\\\":false}}\");\n+        assertEquals(\"{\\\"result\\\":{\\\"locations\\\":[{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":2,\\\"lineNumber\\\":8}]},\\\"id\\\":5}\", tester.getMessages(true).trim());\n+        // Provides all statement locations on a line\n+        tester.sendMessage(\"{\\\"id\\\":6,\\\"method\\\":\\\"Debugger.getPossibleBreakpoints\\\",\\\"params\\\":{\\\"start\\\":{\\\"scriptId\\\":\\\"1\\\",\\\"lineNumber\\\":11,\\\"columnNumber\\\":0},\\\"restrictToFunction\\\":false}}\");\n+        assertEquals(\"{\\\"result\\\":{\\\"locations\\\":[{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":2,\\\"lineNumber\\\":11},{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":13,\\\"lineNumber\\\":11},{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":24,\\\"lineNumber\\\":11}]},\\\"id\\\":6}\", tester.getMessages(true).trim());\n+\n         // Resume to finish:\n         tester.sendMessage(\"{\\\"id\\\":20,\\\"method\\\":\\\"Debugger.resume\\\"}\");\n         assertTrue(tester.compareReceivedMessages(\ndiff --git a/tools/src/com.oracle.truffle.tools.chromeinspector/src/com/oracle/truffle/tools/chromeinspector/InspectorDebugger.java b/tools/src/com.oracle.truffle.tools.chromeinspector/src/com/oracle/truffle/tools/chromeinspector/InspectorDebugger.java\nindex 7b217291104..40e534b6e97 100644\n--- a/tools/src/com.oracle.truffle.tools.chromeinspector/src/com/oracle/truffle/tools/chromeinspector/InspectorDebugger.java\n+++ b/tools/src/com.oracle.truffle.tools.chromeinspector/src/com/oracle/truffle/tools/chromeinspector/InspectorDebugger.java\n@@ -204,8 +204,11 @@ public final class InspectorDebugger extends DebuggerDomain {\n \n     @Override\n     public Params getPossibleBreakpoints(Location start, Location end, boolean restrictToFunction) throws CommandProcessException {\n+        if (start == null) {\n+            throw new CommandProcessException(\"Start location required.\");\n+        }\n         int scriptId = start.getScriptId();\n-        if (scriptId != end.getScriptId()) {\n+        if (end != null && scriptId != end.getScriptId()) {\n             throw new CommandProcessException(\"Different location scripts: \" + scriptId + \", \" + end.getScriptId());\n         }\n         Script script = slh.getScript(scriptId);\n@@ -219,19 +222,31 @@ public final class InspectorDebugger extends DebuggerDomain {\n             c1 = -1;\n         }\n         int l2;\n-        if (source.hasCharacters()) {\n-            int lc = source.getLineCount();\n-            if (end.getLine() > lc) {\n-                l2 = lc;\n+        int c2;\n+        if (end != null) {\n+            if (source.hasCharacters()) {\n+                int lc = source.getLineCount();\n+                if (end.getLine() > lc) {\n+                    l2 = lc;\n+                } else {\n+                    l2 = end.getLine();\n+                }\n             } else {\n                 l2 = end.getLine();\n             }\n+            c2 = end.getColumn();\n+            if (c2 <= 0) {\n+                c2 = -1;\n+            }\n         } else {\n-            l2 = end.getLine();\n-        }\n-        int c2 = end.getColumn();\n-        if (c2 <= 0) {\n-            c2 = -1;\n+            l2 = l1;\n+            if (c1 == -1) {\n+                c2 = -1;\n+            } else if (source.hasCharacters()) {\n+                c2 = source.getLineLength(l2);\n+            } else {\n+                c2 = c1 + 1;\n+            }\n         }\n         SourceSection range = source.createSection(l1, c1, l2, c2);\n         Iterable<SourceSection> locations = SuspendableLocationFinder.findSuspendableLocations(range, restrictToFunction, ds, context.getEnv());\ndiff --git a/tools/src/com.oracle.truffle.tools.chromeinspector/src/com/oracle/truffle/tools/chromeinspector/server/InspectServerSession.java b/tools/src/com.oracle.truffle.tools.chromeinspector/src/com/oracle/truffle/tools/chromeinspector/server/InspectServerSession.java\nindex ba92d1f0403..c2986c32406 100644\n--- a/tools/src/com.oracle.truffle.tools.chromeinspector/src/com/oracle/truffle/tools/chromeinspector/server/InspectServerSession.java\n+++ b/tools/src/com.oracle.truffle.tools.chromeinspector/src/com/oracle/truffle/tools/chromeinspector/server/InspectServerSession.java\n@@ -195,8 +195,8 @@ public final class InspectServerSession implements MessageEndpoint {\n             case \"Debugger.getPossibleBreakpoints\":\n                 json = cmd.getParams().getJSONObject();\n                 resultParams = debugger.getPossibleBreakpoints(\n-                                Location.create(json.getJSONObject(\"start\")),\n-                                Location.create(json.getJSONObject(\"end\")),\n+                                Location.create(json.optJSONObject(\"start\")),\n+                                Location.create(json.optJSONObject(\"end\")),\n                                 json.optBoolean(\"restrictToFunction\"));\n                 break;\n             case \"Debugger.getScriptSource\":",
    "remove more hidden configs BECAUSE GOD DAMN ANDROID STUDIO PUT MY HOME FOLDER SOMEWHERE": "diff --git a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build.json b/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build.json\ndeleted file mode 100644\nindex 7946d4a25..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build.json\n+++ /dev/null\n@@ -1,107 +0,0 @@\n-{\n-  \"buildFiles\": [\n-    \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk\",\n-    \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk\"\n-  ],\n-  \"cleanCommands\": [\n-    \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darm64-v8a NDK_ALL_ABIS\\u003darm64-v8a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib clean\"\n-  ],\n-  \"buildTargetsCommand\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darm64-v8a NDK_ALL_ABIS\\u003darm64-v8a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib {LIST_OF_TARGETS_TO_BUILD}\",\n-  \"libraries\": {\n-    \"pojavexec-release-arm64-v8a\": {\n-      \"buildCommand\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darm64-v8a NDK_ALL_ABIS\\u003darm64-v8a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/libpojavexec.so\",\n-      \"toolchain\": \"toolchain-arm64-v8a\",\n-      \"abi\": \"arm64-v8a\",\n-      \"artifactName\": \"pojavexec\",\n-      \"files\": [\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_bridge.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/egl_bridge.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/input_bridge_v3.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/jre_launcher.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/utils.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        }\n-      ],\n-      \"output\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/libpojavexec.so\"\n-    },\n-    \"awt_xawt-release-arm64-v8a\": {\n-      \"buildCommand\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darm64-v8a NDK_ALL_ABIS\\u003darm64-v8a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/libawt_xawt.so\",\n-      \"toolchain\": \"toolchain-arm64-v8a\",\n-      \"abi\": \"arm64-v8a\",\n-      \"artifactName\": \"awt_xawt\",\n-      \"files\": [\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/XToolkit.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/XlibWrapper.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_AWTEvent.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Desktop.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Event.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_GraphicsEnv.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_InputMethod.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Insets.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Robot.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Taskbar.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_UNIXToolkit.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/xawt_fake.c\",\n-          \"flags\": \"-target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -O2 -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        }\n-      ],\n-      \"output\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/libawt_xawt.so\"\n-    }\n-  },\n-  \"toolchains\": {\n-    \"toolchain-arm64-v8a\": {\n-      \"cCompilerExecutable\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang\"\n-    }\n-  },\n-  \"cFileExtensions\": [\n-    \"c\"\n-  ],\n-  \"cppFileExtensions\": []\n-}\n\\ No newline at end of file\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build_mini.json b/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build_mini.json\ndeleted file mode 100644\nindex 5cdd814f5..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build_mini.json\n+++ /dev/null\n@@ -1,24 +0,0 @@\n-{\n-  \"buildFiles\": [\n-    \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk\",\n-    \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk\"\n-  ],\n-  \"cleanCommands\": [\n-    \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darm64-v8a NDK_ALL_ABIS\\u003darm64-v8a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib clean\"\n-  ],\n-  \"buildTargetsCommand\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darm64-v8a NDK_ALL_ABIS\\u003darm64-v8a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib {LIST_OF_TARGETS_TO_BUILD}\",\n-  \"libraries\": {\n-    \"pojavexec-release-arm64-v8a\": {\n-      \"artifactName\": \"pojavexec\",\n-      \"buildCommand\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darm64-v8a NDK_ALL_ABIS\\u003darm64-v8a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/libpojavexec.so\",\n-      \"abi\": \"arm64-v8a\",\n-      \"output\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/libpojavexec.so\"\n-    },\n-    \"awt_xawt-release-arm64-v8a\": {\n-      \"artifactName\": \"awt_xawt\",\n-      \"buildCommand\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darm64-v8a NDK_ALL_ABIS\\u003darm64-v8a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/libawt_xawt.so\",\n-      \"abi\": \"arm64-v8a\",\n-      \"output\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/libawt_xawt.so\"\n-    }\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build_targets.command.txt b/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build_targets.command.txt\ndeleted file mode 100644\nindex fb5c1db35..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build_targets.command.txt\n+++ /dev/null\n@@ -1,15 +0,0 @@\n-Executable : /home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build\n-arguments : \n-NDK_PROJECT_PATH=null\n-APP_BUILD_SCRIPT=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk\n-NDK_APPLICATION_MK=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk\n-APP_ABI=arm64-v8a\n-NDK_ALL_ABIS=arm64-v8a\n-NDK_DEBUG=0\n-APP_PLATFORM=android-21\n-NDK_OUT=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj\n-NDK_LIBS_OUT=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib\n-awt_xawt\n-pojavexec\n-jvmArgs : \n-\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build_targets.stderr.txt b/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build_targets.stderr.txt\ndeleted file mode 100644\nindex e69de29bb..000000000\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build_targets.stdout.txt b/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build_targets.stdout.txt\ndeleted file mode 100644\nindex dcddcd9ab..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build_targets.stdout.txt\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-make: Nothing to be done for 'awt_xawt'.\n-make: Nothing to be done for 'pojavexec'.\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/build_command.txt b/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/build_command.txt\ndeleted file mode 100644\nindex f1ecc91df..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/build_command.txt\n+++ /dev/null\n@@ -1,17 +0,0 @@\n-Executable : /home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build\n-arguments : \n-NDK_PROJECT_PATH=null\n-APP_BUILD_SCRIPT=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk\n-NDK_APPLICATION_MK=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk\n-APP_ABI=arm64-v8a\n-NDK_ALL_ABIS=arm64-v8a\n-NDK_DEBUG=0\n-APP_PLATFORM=android-21\n-NDK_OUT=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj\n-NDK_LIBS_OUT=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib\n-APP_SHORT_COMMANDS=false\n-LOCAL_SHORT_COMMANDS=false\n--B\n--n\n-jvmArgs : \n-\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/build_model.json b/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/build_model.json\ndeleted file mode 100644\nindex 4f7d14b13..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/build_model.json\n+++ /dev/null\n@@ -1,60 +0,0 @@\n-{\n-  \"variant\": {\n-    \"module\": {\n-      \"rootBuildGradleFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher\",\n-      \"sdkFolder\": \"/home/maks/Android/Sdk\",\n-      \"isNativeCompilerSettingsCacheEnabled\": false,\n-      \"isBuildOnlyTargetAbiEnabled\": true,\n-      \"splitsAbiFilterSet\": [],\n-      \"intermediatesFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates\",\n-      \"gradleModulePathName\": \":app_pojavlauncher\",\n-      \"moduleRootFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher\",\n-      \"makeFile\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk\",\n-      \"buildSystem\": \"NDK_BUILD\",\n-      \"compilerSettingsCacheFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/.cxx\",\n-      \"cxxFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx\",\n-      \"ndkFolder\": \"/home/maks/Android/Sdk/ndk/21.3.6528147\",\n-      \"ndkVersion\": \"21.3.6528147\",\n-      \"ndkSupportedAbiList\": [\n-        \"ARMEABI_V7A\",\n-        \"ARM64_V8A\",\n-        \"X86\",\n-        \"X86_64\"\n-      ],\n-      \"ndkDefaultAbiList\": [\n-        \"ARMEABI_V7A\",\n-        \"ARM64_V8A\",\n-        \"X86\",\n-        \"X86_64\"\n-      ],\n-      \"cmakeToolchainFile\": \".\"\n-    },\n-    \"buildSystemArgumentList\": [],\n-    \"cFlagList\": [],\n-    \"cppFlagsList\": [],\n-    \"variantName\": \"release\",\n-    \"soFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib\",\n-    \"objFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local\",\n-    \"jsonFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx/ndkBuild/release\",\n-    \"gradleBuildOutputFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx/cxx/release\",\n-    \"isDebuggableEnabled\": false,\n-    \"validAbiList\": [\n-      \"ARMEABI_V7A\",\n-      \"ARM64_V8A\",\n-      \"X86\",\n-      \"X86_64\"\n-    ],\n-    \"buildTargetSet\": []\n-  },\n-  \"abi\": \"ARM64_V8A\",\n-  \"abiPlatformVersion\": 21,\n-  \"cxxBuildFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a\",\n-  \"jsonFile\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build.json\",\n-  \"gradleBuildOutputFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx/cxx/release/arm64-v8a\",\n-  \"objFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a\",\n-  \"buildCommandFile\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/build_command.txt\",\n-  \"buildOutputFile\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/build_output.txt\",\n-  \"modelOutputFile\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/build_model.json\",\n-  \"jsonGenerationLoggingRecordFile\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/json_generation_record.json\",\n-  \"compileCommandsJsonFile\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/compile_commands.json\"\n-}\n\\ No newline at end of file\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/build_output.txt b/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/build_output.txt\ndeleted file mode 100644\nindex b2823dc1d..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/build_output.txt\n+++ /dev/null\n@@ -1,68 +0,0 @@\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib/arm64-v8a/*\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib/arm64-v8a/gdbserver\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib/arm64-v8a/gdb.setup\n-mkdir -p /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt\n-echo [arm64-v8a] \"Compile        \": \"awt_xawt <= xawt_fake.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/xawt_fake.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/xawt_fake.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/xawt_fake.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/xawt_fake.o\n-echo [arm64-v8a] \"Compile        \": \"awt_xawt <= awt_AWTEvent.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_AWTEvent.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_AWTEvent.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_AWTEvent.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_AWTEvent.o\n-echo [arm64-v8a] \"Compile        \": \"awt_xawt <= awt_Event.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Event.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Event.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Event.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Event.o\n-echo [arm64-v8a] \"Compile        \": \"awt_xawt <= awt_GraphicsEnv.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_GraphicsEnv.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_GraphicsEnv.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_GraphicsEnv.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_GraphicsEnv.o\n-echo [arm64-v8a] \"Compile        \": \"awt_xawt <= awt_InputMethod.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_InputMethod.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_InputMethod.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_InputMethod.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_InputMethod.o\n-echo [arm64-v8a] \"Compile        \": \"awt_xawt <= awt_Insets.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Insets.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Insets.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Insets.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Insets.o\n-echo [arm64-v8a] \"Compile        \": \"awt_xawt <= awt_Robot.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Robot.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Robot.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Robot.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Robot.o\n-echo [arm64-v8a] \"Compile        \": \"awt_xawt <= awt_UNIXToolkit.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_UNIXToolkit.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_UNIXToolkit.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_UNIXToolkit.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_UNIXToolkit.o\n-echo [arm64-v8a] \"Compile        \": \"awt_xawt <= awt_Desktop.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Desktop.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Desktop.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Desktop.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Desktop.o\n-echo [arm64-v8a] \"Compile        \": \"awt_xawt <= awt_Taskbar.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Taskbar.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Taskbar.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Taskbar.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Taskbar.o\n-echo [arm64-v8a] \"Compile        \": \"awt_xawt <= XlibWrapper.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/XlibWrapper.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/XlibWrapper.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/XlibWrapper.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/XlibWrapper.o\n-echo [arm64-v8a] \"Compile        \": \"awt_xawt <= XToolkit.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/XToolkit.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/XToolkit.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/XToolkit.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/XToolkit.o\n-mkdir -p /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a\n-echo [arm64-v8a] \"SharedLibrary  \": \"libawt_xawt.so\"\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++ -Wl,-soname,libawt_xawt.so -shared /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/xawt_fake.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_AWTEvent.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Event.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_GraphicsEnv.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_InputMethod.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Insets.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Robot.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_UNIXToolkit.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Desktop.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/awt_Taskbar.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/XlibWrapper.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/awt_xawt/XToolkit.o -lgcc -Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libgcc_real.a -latomic -Wl,--exclude-libs,libatomic.a -target aarch64-none-linux-android21 -no-canonical-prefixes    -Wl,--build-id   -stdlib=libstdc++ -Wl,--no-undefined -Wl,--fatal-warnings  -lc -lm -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/libawt_xawt.so\n-mkdir -p /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib/arm64-v8a\n-echo [arm64-v8a] \"Install        \": \"libawt_xawt.so => /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib/arm64-v8a/libawt_xawt.so\"\n-install -p /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/libawt_xawt.so /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib/arm64-v8a/libawt_xawt.so\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-strip --strip-unneeded  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib/arm64-v8a/libawt_xawt.so\n-mkdir -p /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec\n-echo [arm64-v8a] \"Compile        \": \"pojavexec <= awt_bridge.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/awt_bridge.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/awt_bridge.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_bridge.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/awt_bridge.o\n-echo [arm64-v8a] \"Compile        \": \"pojavexec <= egl_bridge.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/egl_bridge.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/egl_bridge.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/egl_bridge.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/egl_bridge.o\n-echo [arm64-v8a] \"Compile        \": \"pojavexec <= input_bridge_v3.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/input_bridge_v3.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/input_bridge_v3.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/input_bridge_v3.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/input_bridge_v3.o\n-echo [arm64-v8a] \"Compile        \": \"pojavexec <= jre_launcher.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/jre_launcher.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/jre_launcher.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/jre_launcher.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/jre_launcher.o\n-echo [arm64-v8a] \"Compile        \": \"pojavexec <= utils.c\"\n-rm -f /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/utils.o\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -MMD -MP -MF /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/utils.o.d -target aarch64-none-linux-android21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes  --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument  -D_FORTIFY_SOURCE=2 -fpic -O2 -DNDEBUG  -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni   -DANDROID  -Wformat -Werror=format-security  -c  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/utils.c -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/utils.o\n-echo [arm64-v8a] \"SharedLibrary  \": \"libpojavexec.so\"\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++ -Wl,-soname,libpojavexec.so -shared /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/awt_bridge.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/egl_bridge.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/input_bridge_v3.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/jre_launcher.o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/objs/pojavexec/utils.o -lgcc -Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libgcc_real.a -latomic -Wl,--exclude-libs,libatomic.a -target aarch64-none-linux-android21 -no-canonical-prefixes    -Wl,--build-id   -stdlib=libstdc++ -Wl,--no-undefined -Wl,--fatal-warnings -ldl -llog -landroid -lEGL -lc -lm -o /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/libpojavexec.so\n-echo [arm64-v8a] \"Install        \": \"libpojavexec.so => /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib/arm64-v8a/libpojavexec.so\"\n-install -p /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/arm64-v8a/libpojavexec.so /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib/arm64-v8a/libpojavexec.so\n-/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-strip --strip-unneeded  /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib/arm64-v8a/libpojavexec.so\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/json_generation_record.json b/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/json_generation_record.json\ndeleted file mode 100644\nindex 67d58a390..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/json_generation_record.json\n+++ /dev/null\n@@ -1,14 +0,0 @@\n-[\n-  {\n-    \"level\": \"INFO\",\n-    \"message\": \"Start JSON generation. Platform version: 21 min SDK version: arm64-v8a\"\n-  },\n-  {\n-    \"level\": \"INFO\",\n-    \"message\": \"JSON \\u0027/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx/ndkBuild/release/arm64-v8a/android_gradle_build.json\\u0027 was up-to-date\"\n-  },\n-  {\n-    \"level\": \"INFO\",\n-    \"message\": \"JSON generation completed without problems\"\n-  }\n-]\n\\ No newline at end of file\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build.json b/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build.json\ndeleted file mode 100644\nindex 748fd185f..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build.json\n+++ /dev/null\n@@ -1,107 +0,0 @@\n-{\n-  \"buildFiles\": [\n-    \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk\",\n-    \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk\"\n-  ],\n-  \"cleanCommands\": [\n-    \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darmeabi-v7a NDK_ALL_ABIS\\u003darmeabi-v7a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib clean\"\n-  ],\n-  \"buildTargetsCommand\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darmeabi-v7a NDK_ALL_ABIS\\u003darmeabi-v7a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib {LIST_OF_TARGETS_TO_BUILD}\",\n-  \"libraries\": {\n-    \"awt_xawt-release-armeabi-v7a\": {\n-      \"buildCommand\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darmeabi-v7a NDK_ALL_ABIS\\u003darmeabi-v7a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/armeabi-v7a/libawt_xawt.so\",\n-      \"toolchain\": \"toolchain-armeabi-v7a\",\n-      \"abi\": \"armeabi-v7a\",\n-      \"artifactName\": \"awt_xawt\",\n-      \"files\": [\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/XToolkit.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/XlibWrapper.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_AWTEvent.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Desktop.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Event.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_GraphicsEnv.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_InputMethod.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Insets.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Robot.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_Taskbar.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/awt_UNIXToolkit.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt/xawt_fake.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_xawt -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        }\n-      ],\n-      \"output\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/armeabi-v7a/libawt_xawt.so\"\n-    },\n-    \"pojavexec-release-armeabi-v7a\": {\n-      \"buildCommand\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darmeabi-v7a NDK_ALL_ABIS\\u003darmeabi-v7a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/armeabi-v7a/libpojavexec.so\",\n-      \"toolchain\": \"toolchain-armeabi-v7a\",\n-      \"abi\": \"armeabi-v7a\",\n-      \"artifactName\": \"pojavexec\",\n-      \"files\": [\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/awt_bridge.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/egl_bridge.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/input_bridge_v3.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/jre_launcher.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        },\n-        {\n-          \"src\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/utils.c\",\n-          \"flags\": \"-target armv7-none-linux-androideabi21 -fdata-sections -ffunction-sections -fstack-protector-strong -funwind-tables -no-canonical-prefixes --sysroot /home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/sysroot -g -Wno-invalid-command-line-argument -Wno-unused-command-line-argument -D_FORTIFY_SOURCE\\u003d2 -fpic -march\\u003darmv7-a -mthumb -Oz -DNDEBUG -I/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni -DANDROID -Wformat -Werror\\u003dformat-security\"\n-        }\n-      ],\n-      \"output\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/armeabi-v7a/libpojavexec.so\"\n-    }\n-  },\n-  \"toolchains\": {\n-    \"toolchain-armeabi-v7a\": {\n-      \"cCompilerExecutable\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/toolchains/llvm/prebuilt/linux-x86_64/bin/clang\"\n-    }\n-  },\n-  \"cFileExtensions\": [\n-    \"c\"\n-  ],\n-  \"cppFileExtensions\": []\n-}\n\\ No newline at end of file\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build_mini.json b/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build_mini.json\ndeleted file mode 100644\nindex 69ae1914f..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build_mini.json\n+++ /dev/null\n@@ -1,24 +0,0 @@\n-{\n-  \"buildFiles\": [\n-    \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk\",\n-    \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk\"\n-  ],\n-  \"cleanCommands\": [\n-    \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darmeabi-v7a NDK_ALL_ABIS\\u003darmeabi-v7a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib clean\"\n-  ],\n-  \"buildTargetsCommand\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darmeabi-v7a NDK_ALL_ABIS\\u003darmeabi-v7a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib {LIST_OF_TARGETS_TO_BUILD}\",\n-  \"libraries\": {\n-    \"awt_xawt-release-armeabi-v7a\": {\n-      \"artifactName\": \"awt_xawt\",\n-      \"buildCommand\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darmeabi-v7a NDK_ALL_ABIS\\u003darmeabi-v7a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/armeabi-v7a/libawt_xawt.so\",\n-      \"abi\": \"armeabi-v7a\",\n-      \"output\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/armeabi-v7a/libawt_xawt.so\"\n-    },\n-    \"pojavexec-release-armeabi-v7a\": {\n-      \"artifactName\": \"pojavexec\",\n-      \"buildCommand\": \"/home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build NDK_PROJECT_PATH\\u003dnull APP_BUILD_SCRIPT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk NDK_APPLICATION_MK\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk APP_ABI\\u003darmeabi-v7a NDK_ALL_ABIS\\u003darmeabi-v7a NDK_DEBUG\\u003d0 APP_PLATFORM\\u003dandroid-21 NDK_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj NDK_LIBS_OUT\\u003d/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib /home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/armeabi-v7a/libpojavexec.so\",\n-      \"abi\": \"armeabi-v7a\",\n-      \"output\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj/local/armeabi-v7a/libpojavexec.so\"\n-    }\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build_targets.command.txt b/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build_targets.command.txt\ndeleted file mode 100644\nindex 44c86b50e..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build_targets.command.txt\n+++ /dev/null\n@@ -1,15 +0,0 @@\n-Executable : /home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build\n-arguments : \n-NDK_PROJECT_PATH=null\n-APP_BUILD_SCRIPT=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk\n-NDK_APPLICATION_MK=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk\n-APP_ABI=armeabi-v7a\n-NDK_ALL_ABIS=armeabi-v7a\n-NDK_DEBUG=0\n-APP_PLATFORM=android-21\n-NDK_OUT=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj\n-NDK_LIBS_OUT=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib\n-awt_xawt\n-pojavexec\n-jvmArgs : \n-\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build_targets.stderr.txt b/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build_targets.stderr.txt\ndeleted file mode 100644\nindex e69de29bb..000000000\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build_targets.stdout.txt b/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build_targets.stdout.txt\ndeleted file mode 100644\nindex dcddcd9ab..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/android_gradle_build_targets.stdout.txt\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-make: Nothing to be done for 'awt_xawt'.\n-make: Nothing to be done for 'pojavexec'.\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/build_command.txt b/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/build_command.txt\ndeleted file mode 100644\nindex 862f4afa3..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/build_command.txt\n+++ /dev/null\n@@ -1,17 +0,0 @@\n-Executable : /home/maks/Android/Sdk/ndk/21.3.6528147/ndk-build\n-arguments : \n-NDK_PROJECT_PATH=null\n-APP_BUILD_SCRIPT=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk\n-NDK_APPLICATION_MK=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Application.mk\n-APP_ABI=armeabi-v7a\n-NDK_ALL_ABIS=armeabi-v7a\n-NDK_DEBUG=0\n-APP_PLATFORM=android-21\n-NDK_OUT=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/obj\n-NDK_LIBS_OUT=/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates/ndkBuild/release/lib\n-APP_SHORT_COMMANDS=false\n-LOCAL_SHORT_COMMANDS=false\n--B\n--n\n-jvmArgs : \n-\ndiff --git a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/build_model.json b/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/build_model.json\ndeleted file mode 100644\nindex 0d385d30e..000000000\n--- a/app_pojavlauncher/.cxx/ndkBuild/release/armeabi-v7a/build_model.json\n+++ /dev/null\n@@ -1,60 +0,0 @@\n-{\n-  \"variant\": {\n-    \"module\": {\n-      \"rootBuildGradleFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher\",\n-      \"sdkFolder\": \"/home/maks/Android/Sdk\",\n-      \"isNativeCompilerSettingsCacheEnabled\": false,\n-      \"isBuildOnlyTargetAbiEnabled\": true,\n-      \"splitsAbiFilterSet\": [],\n-      \"intermediatesFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/build/intermediates\",\n-      \"gradleModulePathName\": \":app_pojavlauncher\",\n-      \"moduleRootFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher\",\n-      \"makeFile\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/src/main/jni/Android.mk\",\n-      \"buildSystem\": \"NDK_BUILD\",\n-      \"compilerSettingsCacheFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/.cxx\",\n-      \"cxxFolder\": \"/home/maks/AndroidStudioProjects/PojavLauncher/app_pojavlauncher/.cxx\",\n-      \"ndkFolder\": \"/home/maks/Android/Sdk/ndk/21.3.6528147\",\n-      \"ndkVersion\": \"21.3.6528147\",\n-      \"ndkSupportedAbiList\": [\n-        \"ARMEABI_V7A\",\n-        \"ARM64_V8A\",\n-        \"X86\",\n-        \"X86_64\"\n-      ],\n-      \"ndkDefaultAbiList\": [\n- ",
    "Add Maven \\' all - tests \\' Profile to Travis Script": "diff --git a/dev-tools/travis/travis-script.sh b/dev-tools/travis/travis-script.sh\nindex a4610426e..ac09f5b18 100755\n--- a/dev-tools/travis/travis-script.sh\n+++ b/dev-tools/travis/travis-script.sh\n@@ -25,7 +25,7 @@ cd ${STORM_SRC_ROOT_DIR}\n # We should be concerned that Travis CI could be very slow because it uses VM\n export STORM_TEST_TIMEOUT_MS=150000\n \n-mvn --batch-mode test -fae -Pnative -pl $2\n+mvn --batch-mode test -fae -Pnative,all-tests -pl $2\n BUILD_RET_VAL=$?\n \n for dir in `find . -type d -and -wholename \\*/target/\\*-reports`;",
    "Add quick switch tile feature .": "diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml\nindex 0f16875..4048cb5 100644\n--- a/app/src/main/AndroidManifest.xml\n+++ b/app/src/main/AndroidManifest.xml\n@@ -5,6 +5,7 @@\n     <uses-permission android:name=\"android.permission.INTERNET\" />\n     <uses-permission android:name=\"android.permission.CAMERA\" />\n     <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n+    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\"/>\n \n     <application\n         android:name=\".IgniterApplication\"\n@@ -13,11 +14,16 @@\n         android:label=\"@string/app_name\"\n         android:roundIcon=\"@mipmap/ic_launcher_round\"\n         android:supportsRtl=\"true\"\n+        xmlns:tools=\"http://schemas.android.com/tools\"\n         android:theme=\"@style/AppTheme\">\n-        <activity android:name=\".exempt.activity.ExemptAppActivity\" android:theme=\"@style/AppThemeNoTitle\"></activity>\n+        <activity\n+            android:name=\".exempt.activity.ExemptAppActivity\"\n+            android:theme=\"@style/AppThemeNoTitle\" />\n         <activity android:name=\".qrcode.ScanQRCodeActivity\" />\n         <activity android:name=\".servers.activity.ServerListActivity\" />\n-        <activity android:name=\".MainActivity\">\n+        <activity\n+            android:name=\".MainActivity\"\n+            android:launchMode=\"singleTop\">\n             <intent-filter>\n                 <action android:name=\"android.intent.action.MAIN\" />\n \n@@ -27,11 +33,40 @@\n \n         <service\n             android:name=\".ProxyService\"\n-            android:permission=\"android.permission.BIND_VPN_SERVICE\">\n+            android:permission=\"android.permission.BIND_VPN_SERVICE\"\n+            android:directBootAware=\"true\"\n+            android:exported=\"false\"\n+            tools:targetApi=\"N\"\n+            android:process=\":tools\">\n             <intent-filter>\n                 <action android:name=\"android.net.VpnService\" />\n+                <action android:name=\"io.github.trojan_gfw.igniter.STOP_SERVICE\" />\n+                <action android:name=\"io.github.trojan_gfw.igniter.BIND_SERVICE\" />\n             </intent-filter>\n         </service>\n+        <service\n+            android:name=\".tile.IgniterTileService\"\n+            android:enabled=\"true\"\n+            tools:targetApi=\"N\"\n+            android:directBootAware=\"true\"\n+            android:icon=\"@drawable/ic_launcher_foreground\"\n+            android:label=\"@string/app_name\"\n+            android:permission=\"android.permission.BIND_QUICK_SETTINGS_TILE\"\n+            android:process=\":tools\">\n+            <intent-filter>\n+                <action android:name=\"android.service.quicksettings.action.QS_TILE\" />\n+            </intent-filter>\n+        </service>\n+\n+        <activity\n+            android:name=\".tile.ProxyControlActivity\"\n+            android:launchMode=\"singleInstance\"\n+            android:process=\":tools\"\n+            android:theme=\"@style/Theme.AppCompat.Translucent\">\n+            <intent-filter>\n+                <action android:name=\"android.service.quicksettings.action.QS_TILE_PREFERENCES\" />\n+            </intent-filter>\n+        </activity>\n     </application>\n \n </manifest>\n\\ No newline at end of file\ndiff --git a/app/src/main/aidl/io/github/trojan_gfw/igniter/proxy/aidl/ITrojanService.aidl b/app/src/main/aidl/io/github/trojan_gfw/igniter/proxy/aidl/ITrojanService.aidl\nnew file mode 100644\nindex 0000000..ddf64fc\n--- /dev/null\n+++ b/app/src/main/aidl/io/github/trojan_gfw/igniter/proxy/aidl/ITrojanService.aidl\n@@ -0,0 +1,11 @@\n+// ITrojanService.aidl\n+package io.github.trojan_gfw.igniter.proxy.aidl;\n+import io.github.trojan_gfw.igniter.proxy.aidl.ITrojanServiceCallback;\n+// Declare any non-default types here with import statements\n+\n+interface ITrojanService {\n+    int getState();\n+    void testConnection(String testUrl);\n+    oneway void registerCallback(in ITrojanServiceCallback callback);\n+    oneway void unregisterCallback(in ITrojanServiceCallback callback);\n+}\ndiff --git a/app/src/main/aidl/io/github/trojan_gfw/igniter/proxy/aidl/ITrojanServiceCallback.aidl b/app/src/main/aidl/io/github/trojan_gfw/igniter/proxy/aidl/ITrojanServiceCallback.aidl\nnew file mode 100644\nindex 0000000..583c8ae\n--- /dev/null\n+++ b/app/src/main/aidl/io/github/trojan_gfw/igniter/proxy/aidl/ITrojanServiceCallback.aidl\n@@ -0,0 +1,9 @@\n+// ITrojanServiceCallback.aidl\n+package io.github.trojan_gfw.igniter.proxy.aidl;\n+\n+// Declare any non-default types here with import statements\n+\n+interface ITrojanServiceCallback {\n+    void onStateChanged(int state, String msg);\n+    void onTestResult(String testUrl, boolean connected, long delay, String error);\n+}\ndiff --git a/app/src/main/java/io/github/trojan_gfw/igniter/IgniterApplication.java b/app/src/main/java/io/github/trojan_gfw/igniter/IgniterApplication.java\nindex 2e6db19..6841831 100644\n--- a/app/src/main/java/io/github/trojan_gfw/igniter/IgniterApplication.java\n+++ b/app/src/main/java/io/github/trojan_gfw/igniter/IgniterApplication.java\n@@ -2,13 +2,12 @@ package io.github.trojan_gfw.igniter;\n \n import android.app.Application;\n \n-import io.github.trojan_gfw.igniter.common.os.CommonSP;\n+import io.github.trojan_gfw.igniter.initializer.InitializerHelper;\n \n public class IgniterApplication extends Application {\n-\n     @Override\n     public void onCreate() {\n         super.onCreate();\n-        CommonSP.init(this);\n+        InitializerHelper.runInit(this);\n     }\n }\ndiff --git a/app/src/main/java/io/github/trojan_gfw/igniter/MainActivity.java b/app/src/main/java/io/github/trojan_gfw/igniter/MainActivity.java\nindex 74dd09e..754d2ac 100644\n--- a/app/src/main/java/io/github/trojan_gfw/igniter/MainActivity.java\n+++ b/app/src/main/java/io/github/trojan_gfw/igniter/MainActivity.java\n@@ -2,17 +2,11 @@ package io.github.trojan_gfw.igniter;\n \n \n import android.app.Activity;\n-import android.app.NotificationChannel;\n-import android.app.NotificationManager;\n-import android.content.BroadcastReceiver;\n-import android.content.Context;\n import android.content.Intent;\n-import android.content.IntentFilter;\n-import android.net.VpnService;\n-import android.os.Build;\n import android.os.Bundle;\n+import android.os.RemoteException;\n+import android.support.annotation.NonNull;\n import android.support.annotation.Nullable;\n-import android.support.v4.content.LocalBroadcastManager;\n import android.support.v7.app.AppCompatActivity;\n import android.text.method.LinkMovementMethod;\n import android.view.Menu;\n@@ -32,20 +26,23 @@ import java.io.FileInputStream;\n import java.io.FileOutputStream;\n import java.io.InputStream;\n \n+import io.github.trojan_gfw.igniter.common.os.MultiProcessSP;\n import io.github.trojan_gfw.igniter.common.os.Task;\n import io.github.trojan_gfw.igniter.common.os.Threads;\n import io.github.trojan_gfw.igniter.common.utils.SnackbarUtils;\n+import io.github.trojan_gfw.igniter.connection.TrojanConnection;\n import io.github.trojan_gfw.igniter.exempt.activity.ExemptAppActivity;\n+import io.github.trojan_gfw.igniter.proxy.aidl.ITrojanService;\n import io.github.trojan_gfw.igniter.servers.activity.ServerListActivity;\n import io.github.trojan_gfw.igniter.servers.data.ServerListDataManager;\n import io.github.trojan_gfw.igniter.servers.data.ServerListDataSource;\n+import io.github.trojan_gfw.igniter.tile.ProxyControlActivity;\n \n \n-public class MainActivity extends AppCompatActivity {\n+public class MainActivity extends AppCompatActivity implements TrojanConnection.Callback {\n     private static final String TAG = \"MainActivity\";\n     private static final int SERVER_LIST_CHOOSE_REQUEST_CODE = 1024;\n     private static final int EXEMPT_APP_CONFIGURE_REQUEST_CODE = 2077;\n-    private static final int VPN_REQUEST_CODE = 0;\n     private static final String CONNECTION_TEST_URL = \"https://www.google.com\";\n \n     private ViewGroup rootViewGroup;\n@@ -58,8 +55,10 @@ public class MainActivity extends AppCompatActivity {\n     private TextView clashLink;\n     private Button startStopButton;\n     private EditText trojanURLText;\n-\n-    private BroadcastReceiver serviceStateReceiver;\n+    private @ProxyService.ProxyState\n+    int proxyState = ProxyService.STATE_NONE;\n+    private final TrojanConnection connection = new TrojanConnection(false);\n+    private ITrojanService trojanService;\n     private ServerListDataSource serverListDataManager;\n     private TextViewListener remoteAddrTextListener = new TextViewListener() {\n         @Override\n@@ -105,33 +104,6 @@ public class MainActivity extends AppCompatActivity {\n         }\n     };\n \n-    private void createNotificationChannel(String channelId) {\n-        // Create the NotificationChannel, but only on API 26+ because\n-        // the NotificationChannel class is new and not in the support library\n-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n-            CharSequence name = getString(R.string.notification_channel_name);\n-            String description = getString(R.string.notification_channel_description);\n-            int importance = NotificationManager.IMPORTANCE_HIGH;\n-            NotificationChannel channel = new NotificationChannel(channelId, name, importance);\n-            channel.setDescription(description);\n-            // Register the channel with the system; you can't change the importance\n-            // or other notification behaviors after this\n-            NotificationManager notificationManager = getSystemService(NotificationManager.class);\n-            notificationManager.createNotificationChannel(channel);\n-        }\n-    }\n-\n-    private void destoryNotificationChannel(String channelId) {\n-        // Create the NotificationChannel, but only on API 26+ because\n-        // the NotificationChannel class is new and not in the support library\n-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n-            // Register the channel with the system; you can't change the importance\n-            // or other notification behaviors after this\n-            NotificationManager notificationManager = getSystemService(NotificationManager.class);\n-            notificationManager.deleteNotificationChannel(channelId);\n-        }\n-    }\n-\n     private void copyRawResourceToDir(int resId, String destPathName, boolean override) {\n         File file = new File(destPathName);\n         if (override || !file.exists()) {\n@@ -151,6 +123,7 @@ public class MainActivity extends AppCompatActivity {\n     }\n \n     private void updateViews(int state) {\n+        proxyState = state;\n         boolean inputEnabled;\n         switch (state) {\n             case ProxyService.STARTING: {\n@@ -205,9 +178,6 @@ public class MainActivity extends AppCompatActivity {\n         clashLink.setMovementMethod(LinkMovementMethod.getInstance());\n         startStopButton = findViewById(R.id.startStopButton);\n \n-        Globals.Init(this);\n-        createNotificationChannel(getString(R.string.notification_channel_id));\n-\n         copyRawResourceToDir(R.raw.cacert, Globals.getCaCertPath(), true);\n         copyRawResourceToDir(R.raw.country, Globals.getCountryMmdbPath(), true);\n         copyRawResourceToDir(R.raw.clash_config, Globals.getClashConfigPath(), false);\n@@ -229,6 +199,14 @@ public class MainActivity extends AppCompatActivity {\n             }\n         });\n \n+        clashSwitch.setChecked(MultiProcessSP.getEnableClash(true));\n+        clashSwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n+            @Override\n+            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n+                MultiProcessSP.setEnableClash(isChecked);\n+            }\n+        });\n+\n         passwordText.addTextChangedListener(passwordTextListener);\n \n         ipv6Switch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n@@ -305,43 +283,26 @@ public class MainActivity extends AppCompatActivity {\n \n         startStopButton.setOnClickListener(new View.OnClickListener() {\n             public void onClick(View v) {\n-\n                 if (!Globals.getTrojanConfigInstance().isValidRunningConfig()) {\n                     Toast.makeText(MainActivity.this,\n                             R.string.invalid_configuration,\n                             Toast.LENGTH_LONG).show();\n                     return;\n                 }\n-\n-                ProxyService serviceInstance = ProxyService.getInstance();\n-                if (serviceInstance == null) {\n+                if (proxyState == ProxyService.STATE_NONE || proxyState == ProxyService.STOPPED) {\n                     TrojanHelper.WriteTrojanConfig(\n                             Globals.getTrojanConfigInstance(),\n                             Globals.getTrojanConfigPath()\n                     );\n                     TrojanHelper.ShowConfig(Globals.getTrojanConfigPath());\n-\n-                    Intent i = VpnService.prepare(getApplicationContext());\n-                    if (i != null) {\n-                        startActivityForResult(i, VPN_REQUEST_CODE);\n-                    } else {\n-                        onActivityResult(VPN_REQUEST_CODE, Activity.RESULT_OK, null);\n-                    }\n-                } else {\n-                    serviceInstance.stop();\n+                    // start ProxyService\n+                    startActivity(ProxyControlActivity.startOrStopProxy(MainActivity.this, true, true));\n+                } else if (proxyState == ProxyService.STARTED) {\n+                    // stop ProxyService\n+                    startActivity(ProxyControlActivity.startOrStopProxy(MainActivity.this, false, true));\n                 }\n-\n             }\n         });\n-\n-        serviceStateReceiver = new BroadcastReceiver() {\n-            @Override\n-            public void onReceive(Context context, Intent intent) {\n-                int state = intent.getIntExtra(ProxyService.STATUS_EXTRA_NAME, ProxyService.STARTED);\n-                updateViews(state);\n-            }\n-        };\n-\n         saveServerIb.setOnClickListener(new View.OnClickListener() {\n             @Override\n             public void onClick(View v) {\n@@ -352,13 +313,100 @@ public class MainActivity extends AppCompatActivity {\n                 Threads.instance().runOnWorkThread(new Task() {\n                     @Override\n                     public void onRun() {\n-                        serverListDataManager.saveServerConfig(Globals.getTrojanConfigInstance());\n+                        TrojanConfig config = Globals.getTrojanConfigInstance();\n+                        TrojanHelper.WriteTrojanConfig(config, Globals.getTrojanConfigPath());\n+                        serverListDataManager.saveServerConfig(config);\n                         showSaveConfigResult(true);\n                     }\n                 });\n             }\n         });\n         serverListDataManager = new ServerListDataManager(Globals.getTrojanConfigListPath());\n+        connection.connect(this, this);\n+    }\n+\n+    @Override\n+    public void onServiceConnected(final ITrojanService service) {\n+        LogHelper.i(TAG, \"onServiceConnected\");\n+        trojanService = service;\n+        Threads.instance().runOnWorkThread(new Task() {\n+            @Override\n+            public void onRun() {\n+                try {\n+                    final int state = service.getState();\n+                    runOnUiThread(new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            updateViews(state);\n+                        }\n+                    });\n+                } catch (RemoteException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void onServiceDisconnected() {\n+        LogHelper.i(TAG, \"onServiceConnected\");\n+        trojanService = null;\n+    }\n+\n+    @Override\n+    public void onStateChanged(int state, String msg) {\n+        LogHelper.i(TAG, \"onStateChanged# state: \" + state + \" msg: \" + msg);\n+        updateViews(state);\n+    }\n+\n+    @Override\n+    public void onTestResult(final String testUrl, final boolean connected, final long delay, @NonNull final String error) {\n+        runOnUiThread(new Runnable() {\n+            @Override\n+            public void run() {\n+                showTestConnectionResult(testUrl, connected, delay, error);\n+            }\n+        });\n+    }\n+\n+    private void showTestConnectionResult(String testUrl, boolean connected, long delay, @NonNull String error) {\n+        if (connected) {\n+            Toast.makeText(getApplicationContext(), getString(R.string.connected_to__in__ms,\n+                    testUrl, String.valueOf(delay)), Toast.LENGTH_LONG).show();\n+        } else {\n+            LogHelper.e(TAG, \"TestError: \" + error);\n+            Toast.makeText(getApplicationContext(),\n+                    getString(R.string.failed_to_connect_to__,\n+                            testUrl, \"Please start igniter before testing\"),\n+                    Toast.LENGTH_LONG).show();\n+        }\n+    }\n+\n+    @Override\n+    public void onBinderDied() {\n+        LogHelper.i(TAG, \"onBinderDied\");\n+        connection.disconnect(this);\n+        // connect the new binder\n+        connection.connect(this, this);\n+    }\n+\n+    /**\n+     * Test connection by invoking {@link ITrojanService#testConnection(String)}. Since {@link ITrojanService}\n+     * is from remote process, a {@link RemoteException} might be thrown. Test result will be delivered\n+     * to {@link #onTestResult(String, boolean, long, String)} by {@link TrojanConnection}.\n+     */\n+    private void testConnection() {\n+        ITrojanService service = trojanService;\n+        if (service == null) {\n+            showTestConnectionResult(CONNECTION_TEST_URL, false, 0L, \"Trojan service is not available.\");\n+        } else {\n+            try {\n+                service.testConnection(CONNECTION_TEST_URL);\n+            } catch (RemoteException e) {\n+                showTestConnectionResult(CONNECTION_TEST_URL, false, 0L, \"Trojan service throws RemoteException.\");\n+                e.printStackTrace();\n+            }\n+        }\n     }\n \n     private void clearEditTextFocus() {\n@@ -382,11 +430,7 @@ public class MainActivity extends AppCompatActivity {\n     @Override\n     protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n         super.onActivityResult(requestCode, resultCode, data);\n-        if (requestCode == VPN_REQUEST_CODE && resultCode == Activity.RESULT_OK) {\n-            Intent intent = new Intent(this, ProxyService.class);\n-            intent.putExtra(ProxyService.CLASH_EXTRA_NAME, clashSwitch.isChecked());\n-            startService(intent);\n-        } else if (SERVER_LIST_CHOOSE_REQUEST_CODE == requestCode && resultCode == Activity.RESULT_OK && data != null) {\n+        if (SERVER_LIST_CHOOSE_REQUEST_CODE == requestCode && resultCode == Activity.RESULT_OK && data != null) {\n             trojanURLText.setText(\"\");\n             final TrojanConfig config = data.getParcelableExtra(ServerListActivity.KEY_TROJAN_CONFIG);\n             if (config != null) {\n@@ -405,16 +449,12 @@ public class MainActivity extends AppCompatActivity {\n                 verifySwitch.setChecked(config.getVerifyCert());\n             }\n         } else if (EXEMPT_APP_CONFIGURE_REQUEST_CODE == requestCode && Activity.RESULT_OK == resultCode) {\n-            if (isProxyRunning()) {\n+            if (ProxyService.STARTED == proxyState) {\n                 SnackbarUtils.showTextLong(rootViewGroup, R.string.main_restart_proxy_service_tip);\n             }\n         }\n     }\n \n-    private boolean isProxyRunning() {\n-        return ProxyService.getInstance() != null;\n-    }\n-\n     @Override\n     public boolean onCreateOptionsMenu(Menu menu) {\n         // Inflate the menu; this adds items to the action bar if it is present.\n@@ -427,7 +467,7 @@ public class MainActivity extends AppCompatActivity {\n         // Bind menu items to their relative actions\n         switch (item.getItemId()) {\n             case R.id.action_test_connection:\n-                new TestConnection(MainActivity.this).execute(CONNECTION_TEST_URL);\n+                testConnection();\n                 return true;\n             case R.id.action_show_develop_info_logcat:\n                 util.Util.logGoRoutineCount();\n@@ -472,28 +512,8 @@ public class MainActivity extends AppCompatActivity {\n     }\n \n     @Override\n-    protected void onResume() {\n-        super.onResume();\n-        ProxyService serviceInstance = ProxyService.getInstance();\n-        if (serviceInstance == null) {\n-            updateViews(ProxyService.STOPPED);\n-        } else {\n-            updateViews(serviceInstance.getState());\n-           ",
    "update release - parent version in root pom .": "diff --git a/pom.xml b/pom.xml\nindex 234937cbd6..784c5c7727 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -4,7 +4,7 @@\n   <parent>\n     <groupId>org.camunda</groupId>\n     <artifactId>camunda-release-parent</artifactId>\n-    <version>3.1</version>\n+    <version>3.2</version>\n     <!-- do not remove empty tag - http://jira.codehaus.org/browse/MNG-4687 -->\n     <relativePath />\n   </parent>",
    "Bump transport version": "diff --git a/pom.xml b/pom.xml\nindex 7acc215ab37..25b4790f75c 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -1318,7 +1318,7 @@\n         <equinox.osgi.version>3.10.2.v20150203-1939</equinox.osgi.version>\n         <equinox.osgi.services.version>3.4.0.v20140312-2051</equinox.osgi.services.version>\n         <carbon.kernel.version>5.1.0</carbon.kernel.version>\n-        <transport.http.version>6.0.114</transport.http.version>\n+        <transport.http.version>6.0.116</transport.http.version>\n         <carbon.messaging.version>2.3.7</carbon.messaging.version>\n         <carbon.deployment.version>5.0.0</carbon.deployment.version>\n         <carbon.config.version>2.1.2</carbon.config.version>",
    "Annotate interface to make it Immutable .": "diff --git a/src/com/facebook/buck/cxx/BUCK b/src/com/facebook/buck/cxx/BUCK\nindex 7d0327ea41..8b71f16a7b 100644\n--- a/src/com/facebook/buck/cxx/BUCK\n+++ b/src/com/facebook/buck/cxx/BUCK\n@@ -11,7 +11,7 @@ PLATFORM_SRCS = [\n   'SourcePathTool.java',\n   'VersionedTool.java',\n ]\n-java_library(\n+java_immutables_library(\n   name = 'platform',\n   srcs = PLATFORM_SRCS,\n   deps = [\ndiff --git a/src/com/facebook/buck/cxx/CxxPlatform.java b/src/com/facebook/buck/cxx/CxxPlatform.java\nindex 228125b304..64b6b8e1d9 100644\n--- a/src/com/facebook/buck/cxx/CxxPlatform.java\n+++ b/src/com/facebook/buck/cxx/CxxPlatform.java\n@@ -18,50 +18,56 @@ package com.facebook.buck.cxx;\n \n import com.facebook.buck.model.Flavor;\n import com.facebook.buck.rules.SourcePath;\n+import com.facebook.buck.util.immutables.BuckStyleImmutable;\n import com.google.common.base.Optional;\n-import com.google.common.collect.ImmutableList;\n-import com.google.common.collect.ImmutableMultimap;\n+import com.google.common.collect.Multimap;\n+\n+import org.immutables.value.Value;\n+\n+import java.util.List;\n \n /**\n  * Interface describing a C/C++ toolchain and platform to build for.\n  */\n+@Value.Immutable\n+@BuckStyleImmutable\n public interface CxxPlatform {\n \n   Flavor getFlavor();\n \n   Tool getAs();\n-  ImmutableList<String> getAsflags();\n+  List<String> getAsflags();\n \n   Tool getAspp();\n-  ImmutableList<String> getAsppflags();\n+  List<String> getAsppflags();\n \n   Tool getCc();\n-  ImmutableList<String> getCflags();\n+  List<String> getCflags();\n \n   Tool getCxx();\n-  ImmutableList<String> getCxxflags();\n+  List<String> getCxxflags();\n \n   Tool getCpp();\n-  ImmutableList<String> getCppflags();\n+  List<String> getCppflags();\n \n   Tool getCxxpp();\n-  ImmutableList<String> getCxxppflags();\n+  List<String> getCxxppflags();\n \n   Tool getCxxld();\n-  ImmutableList<String> getCxxldflags();\n+  List<String> getCxxldflags();\n \n   Linker getLd();\n-  ImmutableList<String> getLdflags();\n-  ImmutableMultimap<Linker.LinkableDepType, String> getRuntimeLdflags();\n+  List<String> getLdflags();\n+  Multimap<Linker.LinkableDepType, String> getRuntimeLdflags();\n \n   Tool getAr();\n-  ImmutableList<String> getArflags();\n+  List<String> getArflags();\n \n   SourcePath getLex();\n-  ImmutableList<String> getLexFlags();\n+  List<String> getLexFlags();\n \n   SourcePath getYacc();\n-  ImmutableList<String> getYaccFlags();\n+  List<String> getYaccFlags();\n \n   String getSharedLibraryExtension();\n \ndiff --git a/src/com/facebook/buck/ocaml/OCamlBuckConfig.java b/src/com/facebook/buck/ocaml/OCamlBuckConfig.java\nindex 3a0c1cfa18..169cb734ab 100644\n--- a/src/com/facebook/buck/ocaml/OCamlBuckConfig.java\n+++ b/src/com/facebook/buck/ocaml/OCamlBuckConfig.java\n@@ -23,9 +23,9 @@ import com.facebook.buck.cxx.Linker;\n import com.facebook.buck.cxx.Tool;\n import com.facebook.buck.util.environment.Platform;\n import com.google.common.base.Optional;\n-import com.google.common.collect.ImmutableList;\n \n import java.nio.file.Path;\n+import java.util.List;\n \n public class OCamlBuckConfig {\n \n@@ -69,15 +69,15 @@ public class OCamlBuckConfig {\n     return cxxPlatform.getCxx();\n   }\n \n-  public ImmutableList<String> getCFlags() {\n+  public List<String> getCFlags() {\n     return cxxPlatform.getCppflags();\n   }\n \n-  public ImmutableList<String> getCLinkerFlags() {\n+  public List<String> getCLinkerFlags() {\n     return cxxPlatform.getCxxldflags();\n   }\n \n-  public ImmutableList<String> getLdFlags() {\n+  public List<String> getLdFlags() {\n     return cxxPlatform.getLdflags();\n   }\n ",
    "Add an abstraction for State and Timers .": "diff --git a/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/DirectExecutionContext.java b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/DirectExecutionContext.java\ndeleted file mode 100644\nindex c27c762a8e..0000000000\n--- a/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/DirectExecutionContext.java\n+++ /dev/null\n@@ -1,113 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.beam.runners.direct.portable;\n-\n-import java.util.LinkedHashMap;\n-import java.util.Map;\n-import org.apache.beam.runners.core.StepContext;\n-import org.apache.beam.runners.core.TimerInternals;\n-import org.apache.beam.runners.direct.Clock;\n-import org.apache.beam.runners.direct.WatermarkManager.TimerUpdate;\n-import org.apache.beam.runners.direct.WatermarkManager.TransformWatermarks;\n-import org.apache.beam.runners.local.StructuralKey;\n-\n-/**\n- * Execution Context for the {@code DirectRunner}.\n- *\n- * <p>This implementation is not thread safe. A new {@link DirectExecutionContext} must be created\n- * for each thread that requires it.\n- */\n-class DirectExecutionContext {\n-  private final Clock clock;\n-  private final StructuralKey<?> key;\n-  private final CopyOnAccessInMemoryStateInternals existingState;\n-  private final TransformWatermarks watermarks;\n-  private Map<String, DirectStepContext> cachedStepContexts = new LinkedHashMap<>();\n-\n-  public DirectExecutionContext(\n-      Clock clock,\n-      StructuralKey<?> key,\n-      CopyOnAccessInMemoryStateInternals existingState,\n-      TransformWatermarks watermarks) {\n-    this.clock = clock;\n-    this.key = key;\n-    this.existingState = existingState;\n-    this.watermarks = watermarks;\n-  }\n-\n-  private DirectStepContext createStepContext() {\n-    return new DirectStepContext();\n-  }\n-\n-  /**\n-   * Returns the {@link StepContext} associated with the given step.\n-   */\n-  public DirectStepContext getStepContext(String stepName) {\n-    return cachedStepContexts.computeIfAbsent(stepName, k -> createStepContext());\n-  }\n-\n-  /**\n-   * Step Context for the {@code DirectRunner}.\n-   */\n-  public class DirectStepContext implements StepContext {\n-    private CopyOnAccessInMemoryStateInternals<?> stateInternals;\n-    private DirectTimerInternals timerInternals;\n-\n-    public DirectStepContext() { }\n-\n-    @Override\n-    public CopyOnAccessInMemoryStateInternals<?> stateInternals() {\n-      if (stateInternals == null) {\n-        stateInternals = CopyOnAccessInMemoryStateInternals.withUnderlying(key, existingState);\n-      }\n-      return stateInternals;\n-    }\n-\n-    @Override\n-    public DirectTimerInternals timerInternals() {\n-      if (timerInternals == null) {\n-        timerInternals =\n-            DirectTimerInternals.create(clock, watermarks, TimerUpdate.builder(key));\n-      }\n-      return timerInternals;\n-    }\n-\n-    /**\n-     * Commits the state of this step, and returns the committed state. If the step has not\n-     * accessed any state, return null.\n-     */\n-    public CopyOnAccessInMemoryStateInternals commitState() {\n-      if (stateInternals != null) {\n-        return stateInternals.commit();\n-      }\n-      return null;\n-    }\n-\n-    /**\n-     * Gets the timer update of the {@link TimerInternals} of this {@link DirectStepContext},\n-     * which is empty if the {@link TimerInternals} were never accessed.\n-     */\n-    public TimerUpdate getTimerUpdate() {\n-      if (timerInternals == null) {\n-        return TimerUpdate.empty();\n-      }\n-      return timerInternals.getTimerUpdate();\n-    }\n-  }\n-}\ndiff --git a/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/DirectStateAndTimers.java b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/DirectStateAndTimers.java\nnew file mode 100644\nindex 0000000000..11969165b1\n--- /dev/null\n+++ b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/DirectStateAndTimers.java\n@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.beam.runners.direct.portable;\n+\n+import org.apache.beam.runners.direct.Clock;\n+import org.apache.beam.runners.direct.WatermarkManager.TimerUpdate;\n+import org.apache.beam.runners.direct.WatermarkManager.TransformWatermarks;\n+import org.apache.beam.runners.local.StructuralKey;\n+\n+/**\n+ * Execution Context for the {@code DirectRunner}.\n+ *\n+ * <p>This implementation is not thread safe. A new {@link DirectStateAndTimers} must be created for\n+ * each thread that requires it.\n+ */\n+class DirectStateAndTimers<K> implements StepStateAndTimers<K> {\n+  private final StructuralKey<K> key;\n+  private final CopyOnAccessInMemoryStateInternals existingState;\n+\n+  private final Clock clock;\n+  private final TransformWatermarks watermarks;\n+\n+  private CopyOnAccessInMemoryStateInternals<K> stateInternals;\n+  private DirectTimerInternals timerInternals;\n+\n+  DirectStateAndTimers(\n+      StructuralKey<K> key,\n+      CopyOnAccessInMemoryStateInternals existingState,\n+      Clock clock,\n+      TransformWatermarks watermarks) {\n+    this.key = key;\n+    this.existingState = existingState;\n+    this.clock = clock;\n+    this.watermarks = watermarks;\n+  }\n+\n+  @Override\n+  public CopyOnAccessInMemoryStateInternals<K> stateInternals() {\n+    if (stateInternals == null) {\n+      stateInternals = CopyOnAccessInMemoryStateInternals.withUnderlying(key, existingState);\n+    }\n+    return stateInternals;\n+  }\n+\n+  @Override\n+  public DirectTimerInternals timerInternals() {\n+    if (timerInternals == null) {\n+      timerInternals = DirectTimerInternals.create(clock, watermarks, TimerUpdate.builder(key));\n+    }\n+    return timerInternals;\n+  }\n+}\ndiff --git a/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/EvaluationContext.java b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/EvaluationContext.java\nindex e387272e9a..b4ed030609 100644\n--- a/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/EvaluationContext.java\n+++ b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/EvaluationContext.java\n@@ -57,9 +57,9 @@ import org.joda.time.Instant;\n  * <p>{@link EvaluationContext} contains shared state for an execution of the {@code DirectRunner}\n  * that can be used while evaluating a {@link PTransform}. This consists of views into underlying\n  * state and watermark implementations, access to read and write {@link PCollectionView\n- * PCollectionViews}, and managing the {@link DirectExecutionContext ExecutionContexts}. This\n- * includes executing callbacks asynchronously when state changes to the appropriate point (e.g.\n- * when a {@link PCollectionView} is requested and known to be empty).\n+ * PCollectionViews}, and managing the {@link DirectStateAndTimers ExecutionContexts}. This includes\n+ * executing callbacks asynchronously when state changes to the appropriate point (e.g. when a\n+ * {@link PCollectionView} is requested and known to be empty).\n  *\n  * <p>{@link EvaluationContext} also handles results by committing finalizing bundles based on the\n  * current global state and updating the global state appropriately. This includes updating the\n@@ -271,47 +271,22 @@ class EvaluationContext {\n       WindowingStrategy<?, ?> windowingStrategy,\n       Runnable runnable) {\n     PTransformNode producing = graph.getProducer(value);\n-    callbackExecutor.callOnGuaranteedFiring(producing, window, windowingStrategy, runnable);\n-\n-    fireAvailableCallbacks(producing);\n-  }\n-\n-  /**\n-   * Schedule a callback to be executed after the given window is expired.\n-   *\n-   * <p>For example, upstream state associated with the window may be cleared.\n-   */\n-  public void scheduleAfterWindowExpiration(\n-      PTransformNode producing,\n-      BoundedWindow window,\n-      WindowingStrategy<?, ?> windowingStrategy,\n-      Runnable runnable) {\n     callbackExecutor.callOnWindowExpiration(producing, window, windowingStrategy, runnable);\n \n     fireAvailableCallbacks(producing);\n   }\n \n-  /**\n-   * Get a {@link DirectExecutionContext} for the provided {@link PTransformNode} and key.\n-   */\n-  public DirectExecutionContext getExecutionContext(\n-      PTransformNode application, StructuralKey<?> key) {\n+  /** Get a {@link DirectStateAndTimers} for the provided {@link PTransformNode} and key. */\n+  public <K> StepStateAndTimers<K> getStateAndTimers(\n+      PTransformNode application, StructuralKey<K> key) {\n     StepAndKey stepAndKey = StepAndKey.of(application, key);\n-    return new DirectExecutionContext(\n-        clock,\n+    return new DirectStateAndTimers<>(\n         key,\n         applicationStateInternals.get(stepAndKey),\n+        clock,\n         watermarkManager.getWatermarks(application));\n   }\n \n-\n-  /**\n-   * Get the Step Name for the provided application.\n-   */\n-  String getStepName(PTransformNode application) {\n-    throw new UnsupportedOperationException(\"getStepName Unsupported\");\n-  }\n-\n   /** Returns all of the steps in this {@link Pipeline}. */\n   Collection<PTransformNode> getSteps() {\n     return graph.getExecutables();\ndiff --git a/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/EvaluationContextStepStateAndTimersProvider.java b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/EvaluationContextStepStateAndTimersProvider.java\nnew file mode 100644\nindex 0000000000..f6ef49c2c3\n--- /dev/null\n+++ b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/EvaluationContextStepStateAndTimersProvider.java\n@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.runners.direct.portable;\n+\n+import org.apache.beam.runners.core.construction.graph.PipelineNode.PTransformNode;\n+import org.apache.beam.runners.local.StructuralKey;\n+\n+/** A {@link StepStateAndTimers.Provider} that uses an {@link EvaluationContext}. */\n+class EvaluationContextStepStateAndTimersProvider implements StepStateAndTimers.Provider {\n+  public static StepStateAndTimers.Provider forContext(EvaluationContext context) {\n+    return new EvaluationContextStepStateAndTimersProvider(context);\n+  }\n+\n+  private final EvaluationContext context;\n+\n+  private EvaluationContextStepStateAndTimersProvider(EvaluationContext context) {\n+    this.context = context;\n+  }\n+\n+  @Override\n+  public <K> StepStateAndTimers<K> forStepAndKey(PTransformNode transform, StructuralKey<K> key) {\n+    return context.getStateAndTimers(transform, key);\n+  }\n+}\ndiff --git a/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/GroupAlsoByWindowEvaluatorFactory.java b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/GroupAlsoByWindowEvaluatorFactory.java\nindex 2e67c8a2e0..b8737b34d0 100644\n--- a/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/GroupAlsoByWindowEvaluatorFactory.java\n+++ b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/GroupAlsoByWindowEvaluatorFactory.java\n@@ -68,13 +68,13 @@ class GroupAlsoByWindowEvaluatorFactory implements TransformEvaluatorFactory {\n   private final BundleFactory bundleFactory;\n   private final ExecutableGraph<PTransformNode, PCollectionNode> graph;\n   private final Components components;\n-  private final StateAndTimerProvider stp;\n+  private final StepStateAndTimers.Provider stp;\n \n   GroupAlsoByWindowEvaluatorFactory(\n       ExecutableGraph<PTransformNode, PCollectionNode> graph,\n       Components components,\n       BundleFactory bundleFactory,\n-      StateAndTimerProvider stp) {\n+      StepStateAndTimers.Provider stp) {\n     this.bundleFactory = bundleFactory;\n     this.graph = graph;\n     this.components = components;\n@@ -98,7 +98,7 @@ class GroupAlsoByWindowEvaluatorFactory implements TransformEvaluatorFactory {\n     @SuppressWarnings(\"unchecked\")\n     StructuralKey<K> key = (StructuralKey<K>) inputBundle.getKey();\n     return new GroupAlsoByWindowEvaluator<>(\n-        bundleFactory, key, application, graph, components, stp);\n+        bundleFactory, key, application, graph, components, stp.forStepAndKey(application, key));\n   }\n \n   /**\n@@ -132,14 +132,14 @@ class GroupAlsoByWindowEvaluatorFactory implements TransformEvaluatorFactory {\n         PTransformNode application,\n         ExecutableGraph<PTransformNode, PCollectionNode> graph,\n         Components components,\n-        StateAndTimerProvider stp) {\n+        StepStateAndTimers<K> stp) {\n       this.bundleFactory = bundleFactory;\n       this.application = application;\n       this.outputCollection = getOnlyElement(graph.getProduced(application));\n       this.key = key;\n \n-      this.stateInternals = stp.stateInternals(application, key);\n-      this.timerInternals = stp.timerInternals(application, key);\n+      this.stateInternals = stp.stateInternals();\n+      this.timerInternals = stp.timerInternals();\n \n       PCollectionNode inputCollection = getOnlyElement(graph.getPerElementInputs(application));\n       try {\ndiff --git a/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/StateAndTimerProvider.java b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/StepStateAndTimers.java\nsimilarity index 82%\nrename from runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/StateAndTimerProvider.java\nrename to runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/StepStateAndTimers.java\nindex d7fa6bd6c4..9126eb470a 100644\n--- a/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/StateAndTimerProvider.java\n+++ b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/StepStateAndTimers.java\n@@ -24,9 +24,12 @@ import org.apache.beam.runners.core.construction.graph.PipelineNode.PTransformNo\n import org.apache.beam.runners.local.StructuralKey;\n \n /** A provider of {@link StateInternals} and {@link TimerInternals}. */\n-interface StateAndTimerProvider {\n-  <K> CopyOnAccessInMemoryStateInternals<K> stateInternals(\n-      PTransformNode transform, StructuralKey<K> key);\n+interface StepStateAndTimers<K> {\n+  interface Provider {\n+    <K> StepStateAndTimers<K> forStepAndKey(PTransformNode transform, StructuralKey<K> key);\n+  }\n \n-  DirectTimerInternals timerInternals(PTransformNode transform, StructuralKey<?> key);\n+  CopyOnAccessInMemoryStateInternals<K> stateInternals();\n+\n+  DirectTimerInternals timerInternals();\n }\ndiff --git a/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/TransformEvaluatorRegistry.java b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/TransformEvaluatorRegistry.java\nindex 08123d3b87..0a919e406f 100644\n--- a/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/TransformEvaluatorRegistry.java\n+++ b/runners/direct-java/src/main/java/org/apache/beam/runners/direct/portable/TransformEvaluatorRegistry.java\n@@ -48,7 +48,7 @@ class TransformEvaluatorRegistry {\n       Components components,\n       BundleFactory bundleFactory,\n       JobBundleFactory jobBundleFactory,\n-      StateAndTimerProvider stateAndTimerProvider) {\n+      StepStateAndTimers.Provider stepStateAndTimers) {\n     return new TransformEvaluatorRegistry(\n         ImmutableMap.<String, TransformEvaluatorFactory>builder()\n             .put(\n@@ -63,7 +63,7 @@ class TransformEvaluatorRegistry {\n             .put(\n                 DirectGroupByKey.DIRECT_GABW_URN,\n                 new GroupAlsoByWindowEvaluatorFactory(\n-                    graph, components, bundleFactory, stateAndTimerProvider))\n+                    graph, components, bundleFactory, stepStateAndTimers))\n             .put(\n                 ExecutableStage.URN,\n                 new RemoteStageEvaluatorFactory(bundleFactory, jobBundleFactory))\n@@ -90,6 +90,7 @@ class TransformEvaluatorRegistry {\n \n     TransformEvaluatorFactory factory =\n         checkNotNull(factories.get(urn), \"No evaluator for PTransform \\\"%s\\\"\", urn);\n+    LOG.warn(\"Evaluator Factory {} for PTransform {}\", factory, application);\n     return factory.forApplication(application, inputBundle);\n   }\n \ndiff --git a/runners/direct-java/src/test/java/org/apache/beam/runners/direct/portable/EvaluationContextTest.java b/runners/direct-java/src/test/java/org/apache/beam/runners/direct/portable/EvaluationContextTest.java\nindex 9809c481db..6ce38b53f1 100644\n--- a/runners/direct-java/src/test/java/org/apache/beam/runners/direct/portable/EvaluationContextTest.java\n+++ b/runners/direct-java/src/test/java/org/apache/beam/runners/direct/portable/EvaluationContextTest.java\n@@ -39,7 +39,6 @@ import org.apache.beam.runners.core.construction.graph.PipelineNode.PTransformNo\n import org.apache.beam.runners.direct.ExecutableGraph;\n import org.apache.beam.runners.direct.WatermarkManager.FiredTimers;\n import org.apache.beam.runners.direct.WatermarkManager.TimerUpdate;\n-import org.apache.beam.runners.direct.portable.DirectExecutionContext.DirectStepContext;\n import org.apache.beam.runners.local.StructuralKey;\n import org.apache.beam.sdk.coders.ByteArrayCoder;\n import org.apache.beam.sdk.coders.StringUtf8Coder;\n@@ -93,13 +92,12 @@ public class EvaluationContextTest {\n \n   @Test\n   public void getExecutionContextSameStepSameKeyState() {\n-    DirectExecutionContext fooContext =\n-        context.getExecutionContext(createdProducer, StructuralKey.of(\"foo\", StringUtf8Coder.of()));\n+    StepStateAndTimers<String> fooContext =\n+        context.getStateAndTimers(createdProducer, StructuralKey.of(\"foo\", StringUtf8Coder.of()));\n \n     StateTag<BagState<Integer>> intBag = StateTags.bag(\"myBag\", VarIntCoder.of());\n \n-    DirectStepContext stepContext = fooContext.getStepContext(\"s1\");\n-    stepContext.stateInternals().state(StateNamespaces.global(), intBag).add(1);\n+    fooContext.stateInternals().state(StateNamespaces.global(), intBag).add(1);\n \n     context.handleResult(\n         ImmutableListBundleFactory.create()\n@@ -107,68 +105,56 @@ public class EvaluationContextTest {\n             .commit(Instant.now()),\n         ImmutableList.of(),\n         StepTransformResult.withoutHold(createdProducer)\n-            .withState(stepContext.commitState())\n+            .withState(fooContext.stateInternals().commit())\n             .build());\n \n-    DirectExecutionContext secondFooContext =\n-        context.getExecutionContext(createdProducer, StructuralKey.of(\"foo\", StringUtf8Coder.of()));\n+    StepStateAndTimers secondFooContext =\n+        context.getStateAndTimers(createdProducer, StructuralKey.of(\"foo\", StringUtf8Coder.of()));\n     assertThat(\n-        secondFooContext\n-            .getStepContext(\"s1\")\n-            .stateInternals()\n-            .state(StateNamespaces.global(), intBag)\n-            .read(),\n+        secondFooContext.stateInternals().state(StateNamespaces.global(), intBag).read(),\n         contains(1));\n   }\n \n   @Test\n   public void getExecutionContextDifferentKeysIndependentState() {\n-    DirectExecutionContext fooContext =\n-        context.getExecutionContext(createdProducer, StructuralKey.of(\"foo\", StringUtf8Coder.of()));\n+    StepStateAndTimers fooContext =\n+        context.getStateAndTimers(createdProducer, StructuralKey.of(\"foo\", StringUtf8Coder.of()));\n \n     StateTag<BagState<Integer>> intBag = StateTags.bag(\"myBag\", VarIntCoder.of());\n \n-    fooContext.getStepContext(\"s1\").stateInternals().state(StateNamespaces.global(), intBag).add(1);\n+    fooContext.stateInternals().state(StateNamespaces.global(), intBag).add(1);\n \n-    DirectExecutionContext barContext =\n-        context.getExecutionContext(createdProducer, StructuralKey.of(\"bar\", StringUtf8Coder.of()));\n+    StepStateAndTimers barContext =\n+        context.getStateAndTimers(createdProducer, StructuralKey.of(\"bar\", StringUtf8Coder.of()));\n     assertThat(barContext, not(equalTo(fooContext)));\n     assertThat(\n-        barContext\n-            .getStepContext(\"s1\")\n-            .stateInternals()\n-            .state(StateNamespaces.global(), intBag)\n-            .read(),\n+        barContext.stateInternals().state(StateNamespaces.global(), intBag).read(),\n         emptyIterable());\n   }\n \n   @Test\n   public void getExecutionContextDifferentStepsIndependentState() {\n     StructuralKey<?> myKey = StructuralKey.of(\"foo\", StringUtf8Coder.of());\n-    DirectExecutionContext fooContext = context.getExecutionContext(createdProducer, myKey);\n+    StepStateAndTimers fooContext = context.getStateAndTimers(createdProducer, myKey);\n \n     StateTag<BagState<Integer>> intBag = StateTags.bag(\"myBag\", VarIntCoder.of());\n \n-    fooContext.getStepContext(\"s1\").stateInternals().state(StateNamespaces.global(), intBag).add(1);\n+    fooContext.stateInternals().state(StateNamespaces.global(), intBag).add(1);\n \n-    DirectExecutionContext barContext = context.getExecutionContext(downstreamProducer, myKey);\n+    StepStateAndTimers barContext = context.getStateAndTimers(downstreamProducer, myKey);\n     assertThat(\n-        barContext\n-            .getStepContext(\"s1\")\n-            .stateInternals()\n-            .state(StateNamespaces.global(), intBag)\n-            .read(),\n+        barContext.stateInternals().state(StateNamespaces.global(), intBag).read(),\n         emptyIterable());\n   }\n \n   @Test\n   public void handleResultStoresState() {\n     StructuralKey<?> myKey = StructuralKey.of(\"foo\".getBytes(), ByteArrayCoder.of());\n-    DirectExecutionContext fooContext = context.getExecutionContext(downstreamProducer, myKey);\n+    StepStateAndTimers fooContext = context.getStateAndTimers(downstreamProducer, myKey);\n \n     StateTag<BagState<Integer>> intBag = StateTags.bag(\"myBag\", VarIntCoder.of());\n \n-    CopyOnAccessInMemoryStateInternals<?> state = fooContext.getStepContext(\"s1\").stateInternals();\n+    CopyOnAccessInMemoryStateInternals<?> state = fooContext.stateInternals();\n     BagState<Integer> bag = state.state(StateNamespaces.global(), intBag);\n     bag.add(1);\n     bag.add(2);\n@@ -182,11 +168,9 @@ public class EvaluationContextTest {\n         ImmutableList.of(),\n         stateResult);\n \n-    DirectExecutionContext afterResultContext =\n-        context.getExecutionContext(downstreamProducer, myKey);\n+    StepStateAndTimers afterResultContext = context.getStateAndTimers(downstreamProducer, myKey);\n \n-    CopyOnAccessInMemoryStateInternals<?> afterResultState =\n-        afterResultContext.getStepContext(\"s1\").stateInternals();\n+    CopyOnAccessInMemoryStateInternals<?> afterResultState = afterResultContext.stateInternals();\n     assertThat(afterResultState.state(StateNamespaces.global(), intBag).read(), contains(1, 2, 4));\n   }\n ",
    "Updated UpdateOperationSpecification to use helper and test async": "diff --git a/driver/src/test/functional/org/mongodb/operation/UpdateOperationSpecification.groovy b/driver/src/test/functional/org/mongodb/operation/UpdateOperationSpecification.groovy\nindex 6e728f231..c674e8083 100644\n--- a/driver/src/test/functional/org/mongodb/operation/UpdateOperationSpecification.groovy\n+++ b/driver/src/test/functional/org/mongodb/operation/UpdateOperationSpecification.groovy\n@@ -14,33 +14,47 @@\n  * limitations under the License.\n  */\n \n-\n-\n-\n-\n package org.mongodb.operation\n-\n import org.bson.types.ObjectId\n import org.mongodb.Document\n+import org.mongodb.Fixture\n import org.mongodb.FunctionalSpecification\n import org.mongodb.codecs.DocumentCodec\n \n import static java.util.Arrays.asList\n+import static org.junit.Assume.assumeTrue\n import static org.mongodb.Fixture.getSession\n import static org.mongodb.WriteConcern.ACKNOWLEDGED\n \n class UpdateOperationSpecification extends FunctionalSpecification {\n     def 'should return correct result for update'() {\n         given:\n-        new InsertOperation<Document>(getNamespace(), true, ACKNOWLEDGED, asList(new InsertRequest<Document>(new Document('_id', 1))),\n-                                      new DocumentCodec()).execute(session)\n-        def op = new UpdateOperation(getNamespace(), true, ACKNOWLEDGED, asList(new UpdateRequest(new Document('_id', 1),\n-                                                                                                  new Document('$set',\n-                                                                                                               new Document('x', 1)))),\n+        getCollectionHelper().insertDocuments(new Document('_id', 1))\n+        def op = new UpdateOperation(getNamespace(), true, ACKNOWLEDGED,\n+                                     asList(new UpdateRequest(new Document('_id', 1), new Document('$set', new Document('x', 1)))),\n+                                     new DocumentCodec())\n+\n+        when:\n+        def result = op.execute(getSession())\n+\n+        then:\n+        result.wasAcknowledged()\n+        result.count == 1\n+        result.upsertedId == null\n+        result.isUpdateOfExisting()\n+    }\n+\n+    def 'should return correct result for update asynchronously'() {\n+        assumeTrue(Fixture.mongoClientURI.options.isAsyncEnabled())\n+\n+        given:\n+        getCollectionHelper().insertDocuments(new Document('_id', 1))\n+        def op = new UpdateOperation(getNamespace(), true, ACKNOWLEDGED,\n+                                     asList(new UpdateRequest(new Document('_id', 1), new Document('$set', new Document('x', 1)))),\n                                      new DocumentCodec())\n \n         when:\n-        def result = op.execute(getSession());\n+        def result = op.executeAsync(getSession()).get()\n \n         then:\n         result.wasAcknowledged()\n@@ -50,15 +64,35 @@ class UpdateOperationSpecification extends FunctionalSpecification {\n     }\n \n     def 'should return correct result for upsert'() {\n+        given:\n         def id = new ObjectId()\n+        def op = new UpdateOperation(getNamespace(), true, ACKNOWLEDGED,\n+                                     asList(new UpdateRequest(new Document('_id', id),\n+                                                              new Document('$set', new Document('x', 1))).upsert(true)),\n+                                     new DocumentCodec())\n+\n+        when:\n+ ",
    "Updated changelog . . git - svn - id : https : / / svn . neo4j . org / components / udc / trunk @ 6690 0b971d98 - bb2f - 0410 - 8247 - b05b2b5feb2a": "diff --git a/advanced/CHANGES.txt b/advanced/CHANGES.txt\nindex ce19385fa16..8d4380a44e1 100644\n--- a/advanced/CHANGES.txt\n+++ b/advanced/CHANGES.txt\n@@ -1,3 +1,8 @@\n+1.2-1.2.M03 (2010-11-04)\n+------------------------\n+\n+No changes.\n+\n 0.1-1.2.M02 (2010-10-21)\n ------------------------\n ",
    "Add Google Certficate service": "diff --git a/play-services-core/src/main/java/com/google/android/gms/chimera/container/DynamiteLoaderImpl.java b/play-services-core/src/main/java/com/google/android/gms/chimera/container/DynamiteLoaderImpl.java\nindex 5a8a2c50..43bd5caf 100644\n--- a/play-services-core/src/main/java/com/google/android/gms/chimera/container/DynamiteLoaderImpl.java\n+++ b/play-services-core/src/main/java/com/google/android/gms/chimera/container/DynamiteLoaderImpl.java\n@@ -59,6 +59,9 @@ public class DynamiteLoaderImpl extends IDynamiteLoader.Stub {\n             Log.d(TAG, \"returning temp fix module version for \" + moduleId + \". Firebase Database will not be functional!\");\n             return com.google.android.gms.dynamite.descriptors.com.google.android.gms.firebase_database.ModuleDescriptor.MODULE_VERSION;\n         }\n+        if (moduleId.equals(\"com.google.android.gms.googlecertificates\")) {\n+            return com.google.android.gms.dynamite.descriptors.com.google.android.gms.googlecertificates.ModuleDescriptor.MODULE_VERSION;\n+        }\n         if (moduleId.equals(\"com.google.android.gms.cast.framework.dynamite\")) {\n             Log.d(TAG, \"returning temp fix module version for \" + moduleId + \". Cast API wil not be functional!\");\n             return 1;\ndiff --git a/play-services-core/src/main/java/com/google/android/gms/common/GoogleCertificatesImpl.java b/play-services-core/src/main/java/com/google/android/gms/common/GoogleCertificatesImpl.java\nnew file mode 100644\nindex 00000000..bb9c6df2\n--- /dev/null\n+++ b/play-services-core/src/main/java/com/google/android/gms/common/GoogleCertificatesImpl.java\n@@ -0,0 +1,60 @@\n+/*\n+ * Copyright (C) 2019 microG Project Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gms.common;\n+\n+import android.os.RemoteException;\n+import android.support.annotation.Keep;\n+import android.util.Log;\n+\n+import com.google.android.gms.common.internal.GoogleCertificatesQuery;\n+import com.google.android.gms.common.internal.IGoogleCertificatesApi;\n+import com.google.android.gms.dynamic.IObjectWrapper;\n+import com.google.android.gms.dynamic.ObjectWrapper;\n+\n+import org.microg.gms.common.PackageUtils;\n+\n+@Keep\n+public class GoogleCertificatesImpl extends IGoogleCertificatesApi.Stub  {\n+    private static final String TAG = \"GmsCertImpl\";\n+\n+    @Override\n+    public IObjectWrapper getGoogleCertficates() throws RemoteException {\n+        Log.d(TAG, \"unimplemented Method: getGoogleCertficates\");\n+        return null;\n+    }\n+\n+    @Override\n+    public IObjectWrapper getGoogleReleaseCertificates() throws RemoteException {\n+        Log.d(TAG, \"unimplemented Method: getGoogleReleaseCertificates\");\n+        return null;\n+    }\n+\n+    @Override\n+    public boolean isGoogleReleaseSigned(String packageName, IObjectWrapper certData) throws RemoteException {\n+        return PackageUtils.isGooglePackage(packageName, ObjectWrapper.unwrapTyped(certData, byte[].class));\n+    }\n+\n+    @Override\n+    public boolean isGoogleSigned(String packageName, IObjectWrapper certData) throws RemoteException {\n+        return PackageUtils.isGooglePackage(packageName, ObjectWrapper.unwrapTyped(certData, byte[].class));\n+    }\n+\n+    @Override\n+    public boolean isGoogleOrPlatformSigned(GoogleCertificatesQuery query, IObjectWrapper packageManager) throws RemoteException {\n+        return PackageUtils.isGooglePackage(query.getPackageName(), query.getCertData().getBytes());\n+    }\n+}\ndiff --git a/play-services-core/src/main/java/com/google/android/gms/dynamite/descriptors/com/google/android/gms/googlecertificates/ModuleDescriptor.java b/play-services-core/src/main/java/com/google/android/gms/dynamite/descriptors/com/google/android/gms/googlecertificates/ModuleDescriptor.java\nnew file mode 100644\nindex 00000000..36de33ae\n--- /dev/null\n+++ b/play-services-core/src/main/java/com/google/android/gms/dynamite/descriptors/com/google/android/gms/googlecertificates/ModuleDescriptor.java\n@@ -0,0 +1,22 @@\n+/*\n+ * Copyright (C) 2019 microG Project Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gms.dynamite.descriptors.com.google.android.gms.googlecertificates;\n+\n+public class ModuleDescriptor {\n+    public static final String MODULE_ID = \"com.google.android.gms.googlecertificates\";\n+    public static final int MODULE_VERSION = 1;\n+}\ndiff --git a/play-services-core/src/main/java/org/microg/gms/common/PackageUtils.java b/play-services-core/src/main/java/org/microg/gms/common/PackageUtils.java\nindex 2cab68bc..27ae292f 100644\n--- a/play-services-core/src/main/java/org/microg/gms/common/PackageUtils.java\n+++ b/play-services-core/src/main/java/org/microg/gms/common/PackageUtils.java\n@@ -64,6 +64,14 @@ public class PackageUtils {\n \n     public static boolean isGooglePackage(Context context, String packageName) {\n         String signatureDigest = firstSignatureDigest(context, packageName);\n+        return isGooglePackage(packageName, signatureDigest);\n+    }\n+\n+    public static boolean isGooglePackage(String packageName, byte[] bytes) {\n+        return isGooglePackage(packageName, sha1sum(bytes));\n+    }\n+\n+    public static boolean isGooglePackage(String packageName, String signatureDigest) {\n         if (signatureDigest == null) return false;\n         if (Arrays.asList(GOOGLE_PRIMARY_KEYS).contains(signatureDigest)) return true;\n         if (!KNOWN_GOOGLE_PACKAGES.containsKey(packageName)) return false;\n@@ -162,13 +170,13 @@ public class PackageUtils {\n                     packageName = packagesForUid[0];\n                 } else if (Arrays.asList(packagesForUid).contains(suggestedPackageName)) {\n                     packageName = suggestedPackageName;\n-                } else if (suggestedPackageName == null) {\n+                } else {\n                     packageName = packagesForUid[0];\n                 }\n             }\n         }\n         if (packageName != null && suggestedPackageName != null && !packageName.equals(suggestedPackageName)) {\n-            throw new SecurityException(\"UID [\" + callingUid + \"] is not related to packageName [\" + packageName + \"]\");\n+            throw new SecurityException(\"UID [\" + callingUid + \"] is not related to packageName [\" + suggestedPackageName + \"] (seems to be \" + packageName + \")\");\n         }\n         return packageName;\n     }\ndiff --git a/play-services-core/src/main/java/org/microg/gms/location/GoogleLocationManagerServiceImpl.java b/play-services-core/src/main/java/org/microg/gms/location/GoogleLocationManagerServiceImpl.java\nindex 0569e167..97b03570 100644\n--- a/play-services-core/src/main/java/org/microg/gms/location/GoogleLocationManagerServiceImpl.java\n+++ b/play-services-core/src/main/java/org/microg/gms/location/GoogleLocationManagerServiceImpl.java\n@@ -306,7 +306,7 @@ public class GoogleLocationManagerServiceImpl extends IGoogleLocationManagerServ\n     @Override\n     public void requestLocationSettingsDialog(LocationSettingsRequest settingsRequest, ISettingsCallbacks callback, String packageName) throws RemoteException {\n         Log.d(TAG, \"requestLocationSettingsDialog: \" + settingsRequest);\n-        PackageUtils.checkPackageUid(context, packageName, Binder.getCallingUid());\n+        PackageUtils.getAndCheckCallingPackage(context, packageName);\n         callback.onLocationSettingsResult(new LocationSettingsResult(new LocationSettingsStates(true, true, false, true, true, false), Status.CANCELED));\n     }\n ",
    "Removing some reflection - based magic out of InMemory session handlers , making parameter passing more explicit ( using JsonParametersAware interface )": "diff --git a/java/server/src/org/openqa/selenium/remote/server/handler/FindChildElement.java b/java/server/src/org/openqa/selenium/remote/server/handler/FindChildElement.java\nindex 32cf78b67b..914180322a 100644\n--- a/java/server/src/org/openqa/selenium/remote/server/handler/FindChildElement.java\n+++ b/java/server/src/org/openqa/selenium/remote/server/handler/FindChildElement.java\n@@ -26,14 +26,16 @@\n \n import java.util.Map;\n \n-public class FindChildElement extends WebElementHandler<Map<String, String>> implements JsonParametersAware {\n+public class FindChildElement extends WebElementHandler<Map<String, String>> {\n   private volatile By by;\n \n   public FindChildElement(Session session) {\n     super(session);\n   }\n \n+  @Override\n   public void setJsonParameters(Map<String, Object> allParameters) throws Exception {\n+    super.setJsonParameters(allParameters);\n     by = newBySelector().pickFromJsonParameters(allParameters);\n   }\n \ndiff --git a/java/server/src/org/openqa/selenium/remote/server/handler/FindChildElements.java b/java/server/src/org/openqa/selenium/remote/server/handler/FindChildElements.java\nindex fd95ba3cd4..14e0f1e08d 100644\n--- a/java/server/src/org/openqa/selenium/remote/server/handler/FindChildElements.java\n+++ b/java/server/src/org/openqa/selenium/remote/server/handler/FindChildElements.java\n@@ -30,15 +30,16 @@\n import java.util.Set;\n import java.util.stream.Collectors;\n \n-public class FindChildElements extends WebElementHandler<Set<Map<String, String>>>\n-    implements JsonParametersAware {\n+public class FindChildElements extends WebElementHandler<Set<Map<String, String>>> {\n   private volatile By by;\n \n   public FindChildElements(Session session) {\n     super(session);\n   }\n \n+  @Override\n   public void setJsonParameters(Map<String, Object> allParameters) throws Exception {\n+    super.setJsonParameters(allParameters);\n     by = newBySelector().pickFromJsonParameters(allParameters);\n   }\n \ndiff --git a/java/server/src/org/openqa/selenium/remote/server/handler/GetCssProperty.java b/java/server/src/org/openqa/selenium/remote/server/handler/GetCssProperty.java\nindex 3e7f70433a..b48d714ace 100644\n--- a/java/server/src/org/openqa/selenium/remote/server/handler/GetCssProperty.java\n+++ b/java/server/src/org/openqa/selenium/remote/server/handler/GetCssProperty.java\n@@ -20,6 +20,8 @@\n import org.openqa.selenium.WebElement;\n import org.openqa.selenium.remote.server.Session;\n \n+import java.util.Map;\n+\n public class GetCssProperty extends WebElementHandler<String> {\n   private volatile String propertyName;\n \n@@ -27,8 +29,10 @@ public GetCssProperty(Session session) {\n     super(session);\n   }\n \n-  public void setPropertyName(String propertyName) {\n-    this.propertyName = propertyName;\n+  @Override\n+  public void setJsonParameters(Map<String, Object> allParameters) throws Exception {\n+    super.setJsonParameters(allParameters);\n+    propertyName = (String) allParameters.get(\"propertyName\");\n   }\n \n   @Override\ndiff --git a/java/server/src/org/openqa/selenium/remote/server/handler/GetElementAttribute.java b/java/server/src/org/openqa/selenium/remote/server/handler/GetElementAttribute.java\nindex 0690e8dd89..52ed1da602 100644\n--- a/java/server/src/org/openqa/selenium/remote/server/handler/GetElementAttribute.java\n+++ b/java/server/src/org/openqa/selenium/remote/server/handler/GetElementAttribute.java\n@@ -19,6 +19,8 @@\n \n import org.openqa.selenium.remote.server.Session;\n \n+import java.util.Map;\n+\n public class GetElementAttribute extends WebElementHandler<String> {\n \n   private volatile String name;\n@@ -27,8 +29,10 @@ public GetElementAttribute(Session session) {\n     super(session);\n   }\n \n-  public void setName(String name) {\n-    this.name = name;\n+  @Override\n+  public void setJsonParameters(Map<String, Object> allParameters) throws Exception {\n+    super.setJsonParameters(allParameters);\n+    name = (String) allParameters.get(\"name\");\n   }\n \n   @Override\ndiff --git a/java/server/src/org/openqa/selenium/remote/server/handler/SendKeys.java b/java/server/src/org/openqa/selenium/remote/server/handler/SendKeys.java\nindex 0b9a20005a..a7f85594c9 100644\n--- a/java/server/src/org/openqa/selenium/remote/server/handler/SendKeys.java\n+++ b/java/server/src/org/openqa/selenium/remote/server/handler/SendKeys.java\n@@ -17,14 +17,13 @@\n \n package org.openqa.selenium.remote.server.handler;\n \n-import org.openqa.selenium.remote.server.JsonParametersAware;\n import org.openqa.selenium.remote.server.Session;\n \n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n \n-public class SendKeys extends WebElementHandler<Void> implements JsonParametersAware {\n+public class SendKeys extends WebElementHandler<Void> {\n \n   private final List<String> keys = new ArrayList<>();\n \n@@ -33,7 +32,9 @@ public SendKeys(Session session) {\n   }\n \n   @SuppressWarnings({\"unchecked\"})\n+  @Override\n   public void setJsonParameters(Map<String, Object> allParameters) throws Exception {\n+    super.setJsonParameters(allParameters);\n     List<String> rawKeys = (List<String>) allParameters.get(\"value\");\n     keys.addAll(rawKeys);\n   }\ndiff --git a/java/server/src/org/openqa/selenium/remote/server/handler/WebElementHandler.java b/java/server/src/org/openqa/selenium/remote/server/handler/WebElementHandler.java\nindex 01e21526b3..981c8e4cd2 100644\n--- a/java/server/src/org/openqa/selenium/remote/server/handler/WebElementHandler.java\n+++ b/java/server/src/org/openqa/selenium/remote/server/handler/WebElementHandler.java\n@@ -18,17 +18,21 @@\n package org.openqa.selenium.remote.server.handler;\n \n import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.remote.server.JsonParametersAware;\n import org.openqa.selenium.remote.server.Session;\n \n-public abstract class WebElementHandler<T> extends WebDriverHandler<T> {\n+import java.util.Map;\n+\n+public abstract class WebElementHandler<T> extends WebDriverHandler<T> implements JsonParametersAware {\n   private volatile String elementId;\n \n   protected WebElementHandler(Session session) {\n     super(session);\n   }\n \n-  public void setId(String elementId) {\n-    this.elementId = elementId;\n+  @Override\n+  public void setJsonParameters(Map<String, Object> allParameters) throws Exception {\n+    elementId = (String) allParameters.get(\"id\");\n   }\n \n   protected WebElement getElement() {\ndiff --git a/java/server/src/org/openqa/selenium/remote/server/rest/PropertyMunger.java b/java/server/src/org/openqa/selenium/remote/server/rest/PropertyMunger.java\ndeleted file mode 100644\nindex b954e1424d..0000000000\n--- a/java/server/src/org/openqa/selenium/remote/server/rest/PropertyMunger.java\n+++ /dev/null\n@@ -1,60 +0,0 @@\n-// Licensed to the Software Freedom Conservancy (SFC) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The SFC licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-\n-package org.openqa.selenium.remote.server.rest;\n-\n-import org.openqa.selenium.json.SimplePropertyDescriptor;\n-\n-import java.lang.reflect.Method;\n-\n-class PropertyMunger {\n-\n-  public static Object get(String name, Object on) {\n-    SimplePropertyDescriptor[] properties =\n-        SimplePropertyDescriptor.getPropertyDescriptors(on.getClass());\n-    for (SimplePropertyDescriptor property : properties) {\n-      if (property.getName().equals(name) && property.getReadMethod() != null) {\n-        Object result = property.getReadMethod().apply(on);\n-        return String.valueOf(result);\n-      }\n-    }\n-\n-    return null;\n-  }\n-\n-  public static void set(String name, Object on, Object value) throws Exception {\n-    SimplePropertyDescriptor[] properties =\n-        SimplePropertyDescriptor.getPropertyDescriptors(on.getClass());\n-    for (SimplePropertyDescriptor property : properties) {\n-      if (property.getName().equals(name)) {\n-        Method writeMethod = property.getWriteMethod();\n-        if (writeMethod == null) {\n-          return;\n-        }\n-\n-        Class<?>[] types = writeMethod.getParameterTypes();\n-        if (types.length != 1) {\n-          return;\n-        }\n-\n-        if (String.class.equals(types[0])) {\n-          writeMethod.invoke(on, value);\n-        }\n-      }\n-    }\n-  }\n-}\ndiff --git a/java/server/src/org/openqa/selenium/remote/server/rest/ResultConfig.java b/java/server/src/org/openqa/selenium/remote/server/rest/ResultConfig.java\nindex fd8dce873e..e3c47814e6 100644\n--- a/java/server/src/org/openqa/selenium/remote/server/rest/ResultConfig.java\n+++ b/java/server/src/org/openqa/selenium/remote/server/rest/ResultConfig.java\n@@ -20,7 +20,6 @@\n import com.google.common.collect.Lists;\n \n import org.openqa.selenium.NoSuchSessionException;\n-import org.openqa.selenium.WebDriverException;\n import org.openqa.selenium.remote.Command;\n import org.openqa.selenium.remote.DriverCommand;\n import org.openqa.selenium.remote.ErrorCodes;\n@@ -71,17 +70,6 @@ interface HandlerFactory {\n     RestishHandler<?> createHandler(SessionId sessionId) throws Exception;\n   }\n \n-  protected RestishHandler<?> populate(RestishHandler<?> handler, Command command) {\n-    for (Map.Entry<String, ?> entry : command.getParameters().entrySet()) {\n-      try {\n-        PropertyMunger.set(entry.getKey(), handler, entry.getValue());\n-      } catch (Exception e) {\n-        throw new WebDriverException(e);\n-      }\n-    }\n-    return handler;\n-  }\n-\n   public Response handle(Command command) throws Exception {\n     Response response = new Response();\n     SessionId sessionId = command.getSessionId();\n@@ -91,7 +79,6 @@ public Response handle(Command command) throws Exception {\n \n     throwUpIfSessionTerminated(sessionId);\n     final RestishHandler<?> handler = handlerFactory.createHandler(sessionId);\n-    populate(handler, command);\n \n     try {\n       if (handler instanceof JsonParametersAware) {\ndiff --git a/java/server/test/org/openqa/selenium/remote/server/rest/ResultConfigTest.java b/java/server/test/org/openqa/selenium/remote/server/rest/ResultConfigTest.java\nindex bdbaa1aa94..79112eb0ca 100644\n--- a/java/server/test/org/openqa/selenium/remote/server/rest/ResultConfigTest.java\n+++ b/java/server/test/org/openqa/selenium/remote/server/rest/ResultConfigTest.java\n@@ -17,17 +17,13 @@\n \n package org.openqa.selenium.remote.server.rest;\n \n-import static org.assertj.core.api.Assertions.assertThat;\n import static org.assertj.core.api.Assertions.assertThatExceptionOfType;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNull;\n \n-import com.google.common.collect.ImmutableMap;\n-\n import org.junit.Test;\n import org.openqa.selenium.NoSuchElementException;\n import org.openqa.selenium.WebDriverException;\n-import org.openqa.selenium.remote.Command;\n import org.openqa.selenium.remote.SessionId;\n import org.openqa.selenium.remote.server.StubHandler;\n \n@@ -52,17 +48,6 @@ public void testShouldNotAllowNullToBeUsedForTheHandler() {\n         .isThrownBy(() -> new ResultConfig(\"/cheese\", null, null, logger));\n   }\n \n-  @Test\n-  public void testShouldSetNamedParametersOnHandler() {\n-    ResultConfig config = new ResultConfig(\"/foo/:bar\", NamedParameterHandler.class, null, logger\n-    );\n-    Command command = new Command(dummySessionId, \"foo\", ImmutableMap.of(\"bar\", \"fishy\"));\n-    NamedParameterHandler handler = new NamedParameterHandler();\n-    config.populate(handler, command);\n-\n-    assertThat(handler.getBar()).isEqualTo(\"fishy\");\n-  }\n-\n   @SuppressWarnings({\"ThrowableResultOfMethodCallIgnored\"})\n   @Test\n   public void testShouldGracefullyHandleNullInputs() {\n@@ -102,23 +87,4 @@ public void testDoesNotPeelTooManyLayersFromNestedExceptions() {\n     assertEquals(noElement, toClient);\n   }\n \n-  public static class NamedParameterHandler implements RestishHandler<Void> {\n-\n-    private String bar;\n-\n-    public String getBar() {\n-      return bar;\n-    }\n-\n-    @SuppressWarnings({\"UnusedDeclaration\"})\n-    public void setBar(String bar) {\n-      this.bar = bar;\n-    }\n-\n-    @Override\n-    public Void handle() {\n-      return null;\n-    }\n-  }\n-\n }",
    "Add an uberjar and an uberjar with versioned packages ( majro / minor ) .": "diff --git a/pom.xml b/pom.xml\nindex a0f2db2ba..4f8a4dd7c 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -94,6 +94,7 @@\n \n     <scr.annotations.version>1.9.12</scr.annotations.version>\n     <sundrio.version>0.3.12</sundrio.version>\n+    <validation.api.version>1.1.0.Final</validation.api.version>\n \n     <maven.bundle.plugin.version>2.5.4</maven.bundle.plugin.version>\n     <maven.buildhelper.plugin.version>1.10</maven.buildhelper.plugin.version>\n@@ -128,6 +129,7 @@\n     <module>kubernetes-examples</module>\n     <module>platforms</module>\n     <module>kubernetes-tests</module>\n+    <module>uberjar</module>\n   </modules>\n \n   <build>\n@@ -245,6 +247,20 @@\n           </execution>\n         </executions>\n       </plugin>\n+      <plugin>\n+        <groupId>org.codehaus.mojo</groupId>\n+        <artifactId>build-helper-maven-plugin</artifactId>\n+        <version>${maven.buildhelper.plugin.version}</version>\n+        <inherited>true</inherited>\n+        <executions>\n+          <execution>\n+            <id>parse-version</id>\n+            <goals>\n+              <goal>parse-version</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n     </plugins>\n   </build>\n \ndiff --git a/uberjar/pom.xml b/uberjar/pom.xml\nnew file mode 100644\nindex 000000000..314c79d7d\n--- /dev/null\n+++ b/uberjar/pom.xml\n@@ -0,0 +1,203 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (C) 2015 Red Hat, Inc.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+            http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>kubernetes-client-project</artifactId>\n+    <groupId>io.fabric8</groupId>\n+    <version>2.2-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>io.fabric8</groupId>\n+  <artifactId>kubernetes-openshift-uberjar</artifactId>\n+  <name>Fabric8 :: Kubernetes and Openshift :: UberJar</name>\n+  <packaging>jar</packaging>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-shade-plugin</artifactId>\n+        <version>3.0.0</version>\n+        <executions>\n+          <execution>\n+            <id>uberjar</id>\n+            <phase>package</phase>\n+            <goals>\n+              <goal>shade</goal>\n+            </goals>\n+            <configuration>\n+              <artifactSet>\n+                <includes>\n+                  <include>io.fabric8:kubernetes-model</include>\n+                  <include>io.fabric8:kubernetes-client</include>\n+                  <include>io.fabric8:kubernetes-server-mock</include>\n+                  <include>io.fabric8:openshift-client</include>\n+                  <include>io.fabric8:openshift-server-mock</include>\n+                </includes>\n+              </artifactSet>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>relocation</id>\n+            <phase>package</phase>\n+            <goals>\n+              <goal>shade</goal>\n+            </goals>\n+            <configuration>\n+              <shadedArtifactAttached>true</shadedArtifactAttached>\n+              <shadedClassifierName>versioned</shadedClassifierName>\n+              <artifactSet>\n+                <includes>\n+                  <include>io.fabric8:kubernetes-model</include>\n+                  <include>io.fabric8:kubernetes-client</include>\n+                  <include>io.fabric8:kubernetes-server-mock</include>\n+                  <include>io.fabric8:openshift-client</include>\n+                  <include>io.fabric8:openshift-server-mock</include>\n+                </includes>\n+              </artifactSet>\n+              <relocations>\n+                <!--\n+                  Let's relocate all user facing packages under:\n+                    - io.fabric8.kubernetes.api.model.vMAJOR_MINOR\n+                    - io.fabric8.kubernetes.client/vMAJOR_MINOR\n+                -->\n+                <relocation>\n+                  <pattern>io.fabric8.kubernetes.api.model</pattern>\n+                  <shadedPattern>io.fabric8.kubernetes.api.model.v${parsedVersion.majorVersion}_${parsedVersion.minorVersion}</shadedPattern>\n+                </relocation>\n+                <relocation>\n+                  <pattern>io.fabric8.kubernetes.api.builder</pattern>\n+                  <shadedPattern>io.fabric8.kubernetes.api.builder.v${parsedVersion.majorVersion}_${parsedVersion.minorVersion}</shadedPattern>\n+                </relocation>\n+                <relocation>\n+                  <pattern>io.fabric8.openshift.api.model</pattern>\n+                  <shadedPattern>io.fabric8.openshift.api.model.v${parsedVersion.majorVersion}_${parsedVersion.minorVersion}</shadedPattern>\n+                </relocation>\n+                <relocation>\n+                  <pattern>io.fabric8.kubernetes.client</pattern>\n+                  <!-- workaround for the duplicate relocation -->\n+                  <shadedPattern>io.fabric8.kubernetes.clnt.v${parsedVersion.majorVersion}_${parsedVersion.minorVersion}</shadedPattern>\n+                </relocation>\n+                <relocation>\n+                  <pattern>io.fabric8.openshift.client</pattern>\n+                  <!-- workaround for the duplicate relocation -->\n+                  <shadedPattern>io.fabric8.openshift.clnt.v${parsedVersion.majorVersion}_${parsedVersion.minorVersion}</shadedPattern>\n+                </relocation>\n+                <relocation>\n+                  <pattern>io.fabric8.kubernetes.internal</pattern>\n+                  <shadedPattern>io.fabric8.kubernetes.clnt.v${parsedVersion.majorVersion}_${parsedVersion.minorVersion}.internal</shadedPattern>\n+                </relocation>\n+              </relocations>\n+              <transformers>\n+                <transformer implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\"/>\n+              </transformers>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <dependencies>\n+    <!-- For inclusion -->\n+    <dependency>\n+      <groupId>io.fabric8</groupId>\n+      <artifactId>kubernetes-model</artifactId>\n+      <version>${kubernetes.model.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.fabric8</groupId>\n+      <artifactId>kubernetes-client</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.fabric8</groupId>\n+      <artifactId>kubernetes-server-mock</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.fabric8</groupId>\n+      <artifactId>openshift-client</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.fabric8</groupId>\n+      <artifactId>openshift-server-mock</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <!-- Legal Transitives -->\n+    <dependency>\n+      <groupId>javax.validation</groupId>\n+      <artifactId>validation-api</artifactId>\n+      <version>${validation.api.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.squareup.okhttp3</groupId>\n+      <artifactId>okhttp</artifactId>\n+      <version>${okhttp.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.squareup.okhttp3</groupId>\n+      <artifactId>logging-interceptor</artifactId>\n+      <version>${okhttp.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+      <version>${slf4j.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.dataformat</groupId>\n+      <artifactId>jackson-dataformat-yaml</artifactId>\n+      <version>${jackson.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.core</groupId>\n+      <artifactId>jackson-databind</artifactId>\n+      <version>${jackson.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.core</groupId>\n+      <artifactId>jackson-core</artifactId>\n+      <version>${jackson.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.fabric8</groupId>\n+      <artifactId>zjsonpatch</artifactId>\n+      <version>${zjsonpatch.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.github.mifmif</groupId>\n+      <artifactId>generex</artifactId>\n+      <version>${generex.version}</version>\n+    </dependency>\n+\n+  </dependencies>\n+</project>\n+",
    "Remove some usages of ParseFieldMatcher in favour of using ParseField directly .": "diff --git a/core/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java b/core/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java\nindex 8bd3b634d69..d0163054e66 100644\n--- a/core/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java\n+++ b/core/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java\n@@ -417,7 +417,7 @@ public final class ObjectParser<Value, Context extends ParseFieldMatcherSupplier\n         }\n \n         public void assertSupports(String parserName, XContentParser.Token token, String currentFieldName, ParseFieldMatcher matcher) {\n-            if (matcher.match(currentFieldName, parseField) == false) {\n+            if (parseField.match(currentFieldName) == false) {\n                 throw new IllegalStateException(\"[\" + parserName  + \"] parsefield doesn't accept: \" + currentFieldName);\n             }\n             if (supportedTokens.contains(token) == false) {\ndiff --git a/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java b/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java\nindex c499c30c607..3855489efe3 100644\n--- a/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java\n+++ b/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java\n@@ -19,7 +19,6 @@\n package org.elasticsearch.index.mapper;\n \n import org.apache.lucene.codecs.PostingsFormat;\n-import org.apache.lucene.document.Field;\n import org.apache.lucene.index.IndexableField;\n import org.apache.lucene.index.Term;\n import org.apache.lucene.search.suggest.document.Completion50PostingsFormat;\n@@ -125,22 +124,22 @@ public class CompletionFieldMapper extends FieldMapper implements ArrayValueMapp\n                 if (fieldName.equals(\"type\")) {\n                     continue;\n                 }\n-                if (parserContext.parseFieldMatcher().match(fieldName, Fields.ANALYZER)) {\n+                if (Fields.ANALYZER.match(fieldName)) {\n                     indexAnalyzer = getNamedAnalyzer(parserContext, fieldNode.toString());\n                     iterator.remove();\n-                } else if (parserContext.parseFieldMatcher().match(fieldName, Fields.SEARCH_ANALYZER)) {\n+                } else if (Fields.SEARCH_ANALYZER.match(fieldName)) {\n                     searchAnalyzer = getNamedAnalyzer(parserContext, fieldNode.toString());\n                     iterator.remove();\n-                } else if (parserContext.parseFieldMatcher().match(fieldName, Fields.PRESERVE_SEPARATORS)) {\n+                } else if (Fields.PRESERVE_SEPARATORS.match(fieldName)) {\n                     builder.preserveSeparators(Boolean.parseBoolean(fieldNode.toString()));\n                     iterator.remove();\n-                } else if (parserContext.parseFieldMatcher().match(fieldName, Fields.PRESERVE_POSITION_INCREMENTS)) {\n+                } else if (Fields.PRESERVE_POSITION_INCREMENTS.match(fieldName)) {\n                     builder.preservePositionIncrements(Boolean.parseBoolean(fieldNode.toString()));\n                     iterator.remove();\n-                } else if (parserContext.parseFieldMatcher().match(fieldName, Fields.MAX_INPUT_LENGTH)) {\n+                } else if (Fields.MAX_INPUT_LENGTH.match(fieldName)) {\n                     builder.maxInputLength(Integer.parseInt(fieldNode.toString()));\n                     iterator.remove();\n-                } else if (parserContext.parseFieldMatcher().match(fieldName, Fields.CONTEXTS)) {\n+                } else if (Fields.CONTEXTS.match(fieldName)) {\n                     builder.contextMappings(ContextMappings.load(fieldNode, parserContext.indexVersionCreated()));\n                     iterator.remove();\n                 } else if (parseMultiField(builder, name, parserContext, fieldName, fieldNode)) {\ndiff --git a/core/src/main/java/org/elasticsearch/index/mapper/ParentFieldMapper.java b/core/src/main/java/org/elasticsearch/index/mapper/ParentFieldMapper.java\nindex d3f9eb22b72..6b4133fd33a 100644\n--- a/core/src/main/java/org/elasticsearch/index/mapper/ParentFieldMapper.java\n+++ b/core/src/main/java/org/elasticsearch/index/mapper/ParentFieldMapper.java\n@@ -114,7 +114,7 @@ public class ParentFieldMapper extends MetadataFieldMapper {\n                 if (fieldName.equals(\"type\")) {\n                     builder.type(fieldNode.toString());\n                     iterator.remove();\n-                } else if (parserContext.parseFieldMatcher().match(fieldName, FIELDDATA)) {\n+                } else if (FIELDDATA.match(fieldName)) {\n                     // for bw compat only\n                     Map<String, String> fieldDataSettings = SettingsLoader.Helper.loadNestedFromMap(nodeMapValue(fieldNode, \"fielddata\"));\n                     if (fieldDataSettings.containsKey(\"loading\")) {\ndiff --git a/core/src/main/java/org/elasticsearch/index/query/MultiMatchQueryBuilder.java b/core/src/main/java/org/elasticsearch/index/query/MultiMatchQueryBuilder.java\nindex b265124e78a..1b06c953a15 100644\n--- a/core/src/main/java/org/elasticsearch/index/query/MultiMatchQueryBuilder.java\n+++ b/core/src/main/java/org/elasticsearch/index/query/MultiMatchQueryBuilder.java\n@@ -43,7 +43,6 @@ import java.util.HashMap;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Objects;\n-import java.util.Optional;\n import java.util.TreeMap;\n \n /**\n@@ -152,7 +151,7 @@ public class MultiMatchQueryBuilder extends AbstractQueryBuilder<MultiMatchQuery\n             MultiMatchQueryBuilder.Type[] values = MultiMatchQueryBuilder.Type.values();\n             Type type = null;\n             for (MultiMatchQueryBuilder.Type t : values) {\n-                if (parseFieldMatcher.match(value, t.parseField())) {\n+                if (t.parseField().match(value)) {\n                     type = t;\n                     break;\n                 }\ndiff --git a/core/src/main/java/org/elasticsearch/index/query/support/QueryParsers.java b/core/src/main/java/org/elasticsearch/index/query/support/QueryParsers.java\nindex 56cea478a2c..e7b980cb16a 100644\n--- a/core/src/main/java/org/elasticsearch/index/query/support/QueryParsers.java\n+++ b/core/src/main/java/org/elasticsearch/index/query/support/QueryParsers.java\n@@ -59,13 +59,13 @@ public final class QueryParsers {\n         if (rewriteMethod == null) {\n             return defaultRewriteMethod;\n         }\n-        if (matcher.match(rewriteMethod, CONSTANT_SCORE)) {\n+        if (CONSTANT_SCORE.match(rewriteMethod)) {\n             return MultiTermQuery.CONSTANT_SCORE_REWRITE;\n         }\n-        if (matcher.match(rewriteMethod, SCORING_BOOLEAN)) {\n+        if (SCORING_BOOLEAN.match(rewriteMethod)) {\n             return MultiTermQuery.SCORING_BOOLEAN_REWRITE;\n         }\n-        if (matcher.match(rewriteMethod, CONSTANT_SCORE_BOOLEAN)) {\n+        if (CONSTANT_SCORE_BOOLEAN.match(rewriteMethod)) {\n             return MultiTermQuery.CONSTANT_SCORE_BOOLEAN_REWRITE;\n         }\n \n@@ -81,13 +81,13 @@ public final class QueryParsers {\n             final int size = Integer.parseInt(rewriteMethod.substring(firstDigit));\n             String rewriteMethodName = rewriteMethod.substring(0, firstDigit);\n \n-            if (matcher.match(rewriteMethodName, TOP_TERMS)) {\n+            if (TOP_TERMS.match(rewriteMethodName)) {\n                 return new MultiTermQuery.TopTermsScoringBooleanQueryRewrite(size);\n             }\n-            if (matcher.match(rewriteMethodName, TOP_TERMS_BOOST)) {\n+            if (TOP_TERMS_BOOST.match(rewriteMethodName)) {\n                 return new MultiTermQuery.TopTermsBoostOnlyBooleanQueryRewrite(size);\n             }\n-            if (matcher.match(rewriteMethodName, TOP_TERMS_BLENDED_FREQS)) {\n+            if (TOP_TERMS_BLENDED_FREQS.match(rewriteMethodName)) {\n                 return new MultiTermQuery.TopTermsBlendedFreqScoringRewrite(size);\n             }\n         }\ndiff --git a/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestClearIndicesCacheAction.java b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestClearIndicesCacheAction.java\nindex 942da1f092e..d40e7759c24 100644\n--- a/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestClearIndicesCacheAction.java\n+++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestClearIndicesCacheAction.java\n@@ -83,19 +83,19 @@ public class RestClearIndicesCacheAction extends BaseRestHandler {\n             ParseFieldMatcher parseFieldMatcher) {\n \n         for (Map.Entry<String, String> entry : request.params().entrySet()) {\n-            if (parseFieldMatcher.match(entry.getKey(), Fields.QUERY)) {\n+            if (Fields.QUERY.match(entry.getKey())) {\n                 clearIndicesCacheRequest.queryCache(request.paramAsBoolean(entry.getKey(), clearIndicesCacheRequest.queryCache()));\n             }\n-            if (parseFieldMatcher.match(entry.getKey(), Fields.REQUEST_CACHE)) {\n+            if (Fields.REQUEST_CACHE.match(entry.getKey())) {\n                 clearIndicesCacheRequest.requestCache(request.paramAsBoolean(entry.getKey(), clearIndicesCacheRequest.requestCache()));\n             }\n-            if (parseFieldMatcher.match(entry.getKey(), Fields.FIELD_DATA)) {\n+            if (Fields.FIELD_DATA.match(entry.getKey())) {\n                 clearIndicesCacheRequest.fieldDataCache(request.paramAsBoolean(entry.getKey(), clearIndicesCacheRequest.fieldDataCache()));\n             }\n-            if (parseFieldMatcher.match(entry.getKey(), Fields.RECYCLER)) {\n+            if (Fields.RECYCLER.match(entry.getKey())) {\n                 clearIndicesCacheRequest.recycler(request.paramAsBoolean(entry.getKey(), clearIndicesCacheRequest.recycler()));\n             }\n-            if (parseFieldMatcher.match(entry.getKey(), Fields.FIELDS)) {\n+            if (Fields.FIELDS.match(entry.getKey())) {\n                 clearIndicesCacheRequest.fields(request.paramAsStringArray(entry.getKey(), clearIndicesCacheRequest.fields()));\n             }\n         }\ndiff --git a/core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ip/IpRangeAggregationBuilder.java b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ip/IpRangeAggregationBuilder.java\nindex 507f1961d62..5612743db61 100644\n--- a/core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ip/IpRangeAggregationBuilder.java\n+++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ip/IpRangeAggregationBuilder.java\n@@ -94,13 +94,13 @@ public final class IpRangeAggregationBuilder\n             if (parser.currentToken() == Token.FIELD_NAME) {\n                 continue;\n             }\n-            if (parseFieldMatcher.match(parser.currentName(), RangeAggregator.Range.KEY_FIELD)) {\n+            if (RangeAggregator.Range.KEY_FIELD.match(parser.currentName())) {\n                 key = parser.text();\n-            } else if (parseFieldMatcher.match(parser.currentName(), RangeAggregator.Range.FROM_FIELD)) {\n+            } else if (RangeAggregator.Range.FROM_FIELD.match(parser.currentName())) {\n                 from = parser.textOrNull();\n-            } else if (parseFieldMatcher.match(parser.currentName(), RangeAggregator.Range.TO_FIELD)) {\n+            } else if (RangeAggregator.Range.TO_FIELD.match(parser.currentName())) {\n                 to = parser.textOrNull();\n-            } else if (parseFieldMatcher.match(parser.currentName(), MASK_FIELD)) {\n+            } else if (MASK_FIELD.match(parser.currentName())) {\n                 mask = parser.text();\n             } else {\n                 throw new ParsingException(parser.getTokenLocation(), \"Unexpected ip range parameter: [\" + parser.currentName() + \"]\");\ndiff --git a/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/GND.java b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/GND.java\nindex 6c392f0f283..5968f42211e 100644\n--- a/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/GND.java\n+++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/GND.java\n@@ -119,7 +119,7 @@ public class GND extends NXYSignificanceHeuristic {\n             boolean backgroundIsSuperset = true;\n             XContentParser.Token token = parser.nextToken();\n             while (!token.equals(XContentParser.Token.END_OBJECT)) {\n-                if (context.getParseFieldMatcher().match(parser.currentName(), BACKGROUND_IS_SUPERSET)) {\n+                if (BACKGROUND_IS_SUPERSET.match(parser.currentName())) {\n                     parser.nextToken();\n                     backgroundIsSuperset = parser.booleanValue();\n                 } else {\ndiff --git a/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/NXYSignificanceHeuristic.java b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/NXYSignificanceHeuristic.java\nindex 69a759a77fd..5f92b5b40e6 100644\n--- a/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/NXYSignificanceHeuristic.java\n+++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/NXYSignificanceHeuristic.java\n@@ -160,10 +160,10 @@ public abstract class NXYSignificanceHeuristic extends SignificanceHeuristic {\n             boolean backgroundIsSuperset = true;\n             XContentParser.Token token = parser.nextToken();\n             while (!token.equals(XContentParser.Token.END_OBJECT)) {\n-                if (context.getParseFieldMatcher().match(parser.currentName(), INCLUDE_NEGATIVES_FIELD)) {\n+                if (INCLUDE_NEGATIVES_FIELD.match(parser.currentName())) {\n                     parser.nextToken();\n                     includeNegatives = parser.booleanValue();\n-                } else if (context.getParseFieldMatcher().match(parser.currentName(), BACKGROUND_IS_SUPERSET)) {\n+                } else if (BACKGROUND_IS_SUPERSET.match(parser.currentName())) {\n                     parser.nextToken();\n                     backgroundIsSuperset = parser.booleanValue();\n                 } else {\ndiff --git a/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregationBuilder.java b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregationBuilder.java\nindex 33da060ba7d..7cfc0cf61c1 100644\n--- a/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregationBuilder.java\n+++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregationBuilder.java\n@@ -643,8 +643,7 @@ public class TopHitsAggregationBuilder extends AbstractAggregationBuilder<TopHit\n                                 } else if (token.isValue()) {\n                                     if (SearchSourceBuilder.SCRIPT_FIELD.match(currentFieldName)) {\n                                         script = Script.parse(parser, context.getParseFieldMatcher(), context.getDefaultScriptLanguage());\n-                                    } else if (context.getParseFieldMatcher().match(currentFieldName,\n-                                            SearchSourceBuilder.IGNORE_FAILURE_FIELD)) {\n+                                    } else if (SearchSourceBuilder.IGNORE_FAILURE_FIELD.match(currentFieldName)) {\n                                         ignoreFailure = parser.booleanValue();\n                                     } else {\n                                         throw new ParsingException(parser.getTokenLocation(),\ndiff --git a/core/src/main/java/org/elasticsearch/search/suggest/SuggestionBuilder.java b/core/src/main/java/org/elasticsearch/search/suggest/SuggestionBuilder.java\nindex 0028767c36f..5f99cb43646 100644\n--- a/core/src/main/java/org/elasticsearch/search/suggest/SuggestionBuilder.java\n+++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestionBuilder.java\n@@ -269,11 +269,11 @@ public abstract class SuggestionBuilder<T extends SuggestionBuilder<T>> implemen\n             if (token == XContentParser.Token.FIELD_NAME) {\n                 currentFieldName = parser.currentName();\n             } else if (token.isValue()) {\n-                if (parsefieldMatcher.match(currentFieldName, TEXT_FIELD)) {\n+                if (TEXT_FIELD.match(currentFieldName)) {\n                     suggestText = parser.text();\n-                } else if (parsefieldMatcher.match(currentFieldName, PREFIX_FIELD)) {\n+                } else if (PREFIX_FIELD.match(currentFieldName)) {\n                     prefix = parser.text();\n-                } else if (parsefieldMatcher.match(currentFieldName, REGEX_FIELD)) {\n+                } else if (PREFIX_FIELD.match(currentFieldName)) {\n                     regex = parser.text();\n                 } else {\n                     throw new ParsingException(parser.getTokenLocation(), \"suggestion does not support [\" + currentFieldName + \"]\");\ndiff --git a/core/src/main/java/org/elasticsearch/search/suggest/phrase/LinearInterpolation.java b/core/src/main/java/org/elasticsearch/search/suggest/phrase/LinearInterpolation.java\nindex 72802e66eaa..e76868b5b3f 100644\n--- a/core/src/main/java/org/elasticsearch/search/suggest/phrase/LinearInterpolation.java\n+++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/LinearInterpolation.java\n@@ -143,17 +143,17 @@ public final class LinearInterpolation extends SmoothingModel {\n             if (token == XContentParser.Token.FIELD_NAME) {\n                 fieldName = parser.currentName();\n             } else if (token.isValue()) {\n-                if (matcher.match(fieldName, TRIGRAM_FIELD)) {\n+                if (TRIGRAM_FIELD.match(fieldName)) {\n                     trigramLambda = parser.doubleValue();\n                     if (trigramLambda < 0) {\n                         throw new IllegalArgumentException(\"trigram_lambda must be positive\");\n                     }\n-                } else if (matcher.match(fieldName, BIGRAM_FIELD)) {\n+                } else if (BIGRAM_FIELD.match(fieldName)) {\n                     bigramLambda = parser.doubleValue();\n                     if (bigramLambda < 0) {\n                         throw new IllegalArgumentException(\"bigram_lambda must be positive\");\n                     }\n-                } else if (matcher.match(fieldName, UNIGRAM_FIELD)) {\n+                } else if (UNIGRAM_FIELD.match(fieldName)) {\n                     unigramLambda = parser.doubleValue();\n   ",
    "Continue documentation TLC": "diff --git a/documentation/documentation.gradle b/documentation/documentation.gradle\nindex a8f8b80616..261fcb2b4d 100644\n--- a/documentation/documentation.gradle\n+++ b/documentation/documentation.gradle\n@@ -165,18 +165,18 @@ jdocbook {\n     }\n \n     // book-specific config\n-    manual {\n-        masterSourceDocumentName = 'Hibernate_Manual.xml'\n+    userGuide {\n+        masterSourceDocumentName = 'Hibernate_User_Guide.xml'\n     }\n-    integration {\n-        masterSourceDocumentName = 'Hibernate_Integrations.xml'\n+    integrationsGuide {\n+        masterSourceDocumentName = 'Hibernate_Integrations_Guide.xml'\n     }\n-    mapping {\n-        masterSourceDocumentName = 'Hibernate_Mapping.xml'\n+    mappingGuide {\n+        masterSourceDocumentName = 'Hibernate_Mapping_Guide.xml'\n     }\n }\n \n-[ 'integration', 'manual', 'mapping'].each { bookName ->\n+[ 'integrationsGuide', 'userGuide', 'mappingGuide'].each { bookName ->\n     task \"stageLocalStyles_$bookName\"(type: Copy) {\n         into project.file( \"target/docbook/stage/$bookName\" )\n         from project.file( 'src/main/style' )\ndiff --git a/documentation/src/main/docbook/integration/en-US/Hibernate_Integrations.ent b/documentation/src/main/docbook/integrationsGuide/en-US/Hibernate_Integrations_Guide.ent\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/Hibernate_Integrations.ent\nrename to documentation/src/main/docbook/integrationsGuide/en-US/Hibernate_Integrations_Guide.ent\ndiff --git a/documentation/src/main/docbook/integration/en-US/Hibernate_Integrations.xml b/documentation/src/main/docbook/integrationsGuide/en-US/Hibernate_Integrations_Guide.xml\nsimilarity index 96%\nrename from documentation/src/main/docbook/integration/en-US/Hibernate_Integrations.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/Hibernate_Integrations_Guide.xml\nindex 80857da6cd..b7558e683c 100644\n--- a/documentation/src/main/docbook/integration/en-US/Hibernate_Integrations.xml\n+++ b/documentation/src/main/docbook/integrationsGuide/en-US/Hibernate_Integrations_Guide.xml\n@@ -6,7 +6,7 @@\n   ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.\n   -->\n <!DOCTYPE book SYSTEM \"http://docbook.org/xml/5.0/dtd/docbook.dtd\" [\n-<!ENTITY % BOOK_ENTITIES SYSTEM \"Hibernate_Integrations.ent\">\n+<!ENTITY % BOOK_ENTITIES SYSTEM \"Hibernate_Integrations_Guide.ent\">\n %BOOK_ENTITIES;\n ]>\n \ndiff --git a/documentation/src/main/docbook/integration/en-US/Preface.xml b/documentation/src/main/docbook/integrationsGuide/en-US/Preface.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/Preface.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/Preface.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/Services.xml b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/Services.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/Services.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/Services.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/BootstrapServiceRegistryBuilder-example.java b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/BootstrapServiceRegistryBuilder-example.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/BootstrapServiceRegistryBuilder-example.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/BootstrapServiceRegistryBuilder-example.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/extend/DisabledEventPublishingServiceImpl.java b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/extend/DisabledEventPublishingServiceImpl.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/extend/DisabledEventPublishingServiceImpl.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/extend/DisabledEventPublishingServiceImpl.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/extend/EventPublishingService.java b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/extend/EventPublishingService.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/extend/EventPublishingService.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/extend/EventPublishingService.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/extend/EventPublishingServiceContributor.java b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/extend/EventPublishingServiceContributor.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/extend/EventPublishingServiceContributor.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/extend/EventPublishingServiceContributor.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/extend/EventPublishingServiceImpl.java b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/extend/EventPublishingServiceImpl.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/extend/EventPublishingServiceImpl.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/extend/EventPublishingServiceImpl.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/extend/EventPublishingServiceInitiator.java b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/extend/EventPublishingServiceInitiator.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/extend/EventPublishingServiceInitiator.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/extend/EventPublishingServiceInitiator.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/LatestAndGreatestConnectionProviderImpl.java b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/LatestAndGreatestConnectionProviderImpl.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/LatestAndGreatestConnectionProviderImpl.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/LatestAndGreatestConnectionProviderImpl.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/ex1-direct.java b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/ex1-direct.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/ex1-direct.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/ex1-direct.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/ex2-contributor.java b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/ex2-contributor.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/ex2-contributor.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/ex2-contributor.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/ex2-meta-inf b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/ex2-meta-inf\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/ex2-meta-inf\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/ex2-meta-inf\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/ex3-app.java b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/ex3-app.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/ex3-app.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/ex3-app.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/ex3-contributor.java b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/ex3-contributor.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/ex3-contributor.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/ex3-contributor.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/ex3-meta-inf b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/ex3-meta-inf\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/override/ex3-meta-inf\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/override/ex3-meta-inf\ndiff --git a/documentation/src/main/docbook/integration/en-US/chapters/services/extras/register-event-listeners-example.java b/documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/register-event-listeners-example.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/chapters/services/extras/register-event-listeners-example.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/chapters/services/extras/register-event-listeners-example.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/batch_insert.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/batch_insert.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/batch_insert.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/batch_insert.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/bmt-idiom.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/bmt-idiom.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/bmt-idiom.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/bmt-idiom.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/browsing_cache.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/browsing_cache.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/browsing_cache.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/browsing_cache.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/cache_providers.xml b/documentation/src/main/docbook/integrationsGuide/en-US/extras/cache_providers.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/cache_providers.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/cache_providers.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/cache_providers_mapping.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/cache_providers_mapping.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/cache_providers_mapping.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/cache_providers_mapping.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/check.xml b/documentation/src/main/docbook/integrationsGuide/en-US/extras/check.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/check.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/check.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/child-column-elements.xml b/documentation/src/main/docbook/integrationsGuide/en-US/extras/child-column-elements.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/child-column-elements.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/child-column-elements.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/cmt-idiom.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/cmt-idiom.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/cmt-idiom.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/cmt-idiom.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/comments.xml b/documentation/src/main/docbook/integrationsGuide/en-US/extras/comments.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/comments.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/comments.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/default-attribute.xml b/documentation/src/main/docbook/integrationsGuide/en-US/extras/default-attribute.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/default-attribute.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/default-attribute.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/embedding_SchemaExport.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/embedding_SchemaExport.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/embedding_SchemaExport.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/embedding_SchemaExport.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/evicting_from_second_level_cache.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/evicting_from_second_level_cache.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/evicting_from_second_level_cache.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/evicting_from_second_level_cache.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/evicting_item.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/evicting_item.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/evicting_item.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/evicting_item.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/executeUpdate.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/executeUpdate.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/executeUpdate.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/executeUpdate.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/flush_and_clear_session.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/flush_and_clear_session.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/flush_and_clear_session.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/flush_and_clear_session.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/foreign-key.xml b/documentation/src/main/docbook/integrationsGuide/en-US/extras/foreign-key.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/foreign-key.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/foreign-key.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/hibernate.cfg.xml b/documentation/src/main/docbook/integrationsGuide/en-US/extras/hibernate.cfg.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/hibernate.cfg.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/hibernate.cfg.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/hibernate.properties b/documentation/src/main/docbook/integrationsGuide/en-US/extras/hibernate.properties\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/hibernate.properties\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/hibernate.properties\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/hql-insert.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/hql-insert.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/hql-insert.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/hql-insert.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/hql_delete.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/hql_delete.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/hql_delete.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/hql_delete.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/length-precision-scale.xml b/documentation/src/main/docbook/integrationsGuide/en-US/extras/length-precision-scale.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/length-precision-scale.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/length-precision-scale.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/letting_hibernate_find_mapping_files.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/letting_hibernate_find_mapping_files.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/letting_hibernate_find_mapping_files.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/letting_hibernate_find_mapping_files.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/notnull-unique.xml b/documentation/src/main/docbook/integrationsGuide/en-US/extras/notnull-unique.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/notnull-unique.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/notnull-unique.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/opening_a_session.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/opening_a_session.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/opening_a_session.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/opening_a_session.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/setCacheRegion.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/setCacheRegion.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/setCacheRegion.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/setCacheRegion.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/specify_mapping_files_directly.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/specify_mapping_files_directly.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/specify_mapping_files_directly.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/specify_mapping_files_directly.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/specifying_configuration_properties_programmatically.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/specifying_configuration_properties_programmatically.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/specifying_configuration_properties_programmatically.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/specifying_configuration_properties_programmatically.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/sql-type.xml b/documentation/src/main/docbook/integrationsGuide/en-US/extras/sql-type.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/sql-type.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/sql-type.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/timestamp_version.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/timestamp_version.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/timestamp_version.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/timestamp_version.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/timestamp_version.xml b/documentation/src/main/docbook/integrationsGuide/en-US/extras/timestamp_version.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/timestamp_version.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/timestamp_version.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/transaction-bound-Session.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/transaction-bound-Session.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/transaction-bound-Session.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/transaction-bound-Session.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/updating_version.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/updating_version.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/updating_version.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/updating_version.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/using_a_StatelessSession.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/using_a_StatelessSession.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/using_a_StatelessSession.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/using_a_StatelessSession.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/using_scroll.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/using_scroll.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/using_scroll.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/using_scroll.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/version_annotation.java b/documentation/src/main/docbook/integrationsGuide/en-US/extras/version_annotation.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/version_annotation.java\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/version_annotation.java\ndiff --git a/documentation/src/main/docbook/integration/en-US/extras/version_property.xml b/documentation/src/main/docbook/integrationsGuide/en-US/extras/version_property.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/extras/version_property.xml\nrename to documentation/src/main/docbook/integrationsGuide/en-US/extras/version_property.xml\ndiff --git a/documentation/src/main/docbook/integration/en-US/images/hibernate_logo_a.png b/documentation/src/main/docbook/integrationsGuide/en-US/images/hibernate_logo_a.png\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/images/hibernate_logo_a.png\nrename to documentation/src/main/docbook/integrationsGuide/en-US/images/hibernate_logo_a.png\ndiff --git a/documentation/src/main/docbook/integration/en-US/images/icon.svg b/documentation/src/main/docbook/integrationsGuide/en-US/images/icon.svg\nsimilarity index 100%\nrename from documentation/src/main/docbook/integration/en-US/images/icon.svg\nrename to documentation/src/main/docbook/integrationsGuide/en-US/images/icon.svg\ndiff --git a/documentation/src/main/docbook/manual/en-US/Hibernate_Manual.ent b/documentation/src/main/docbook/mappingGuide/en-US/Hibernate_Mapping_Guide.ent\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/Hibernate_Manual.ent\nrename to documentation/src/main/docbook/mappingGuide/en-US/Hibernate_Mapping_Guide.ent\ndiff --git a/documentation/src/main/docbook/mapping/en-US/Hibernate_Mapping.xml b/documentation/src/main/docbook/mappingGuide/en-US/Hibernate_Mapping_Guide.xml\nsimilarity index 97%\nrename from documentation/src/main/docbook/mapping/en-US/Hibernate_Mapping.xml\nrename to documentation/src/main/docbook/mappingGuide/en-US/Hibernate_Mapping_Guide.xml\nindex a793493954..d37f7d4a89 100644\n--- a/documentation/src/main/docbook/mapping/en-US/Hibernate_Mapping.xml\n+++ b/documentation/src/main/docbook/mappingGuide/en-US/Hibernate_Mapping_Guide.xml\n@@ -6,7 +6,7 @@\n   ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.\n   -->\n <!DOCTYPE book SYSTEM \"http://docbook.org/xml/5.0/dtd/docbook.dtd\" [\n-<!ENTITY % BOOK_ENTITIES SYSTEM \"Hibernate_Mapping.ent\">\n+<!ENTITY % BOOK_ENTITIES SYSTEM \"Hibernate_Mapping_Guide.ent\">\n %BOOK_ENTITIES;\n ]>\n \ndiff --git a/documentation/src/main/docbook/mapping/en-US/Preface.xml b/documentation/src/main/docbook/mappingGuide/en-US/Preface.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/Preface.xml\nrename to documentation/src/main/docbook/mappingGuide/en-US/Preface.xml\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/Basic_Types.xml b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/Basic_Types.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/Basic_Types.xml\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/Basic_Types.xml\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/Blob.sql b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/Blob.sql\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/Blob.sql\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/Blob.sql\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/BlobLocator.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/BlobLocator.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/BlobLocator.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/BlobLocator.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/BlobMaterialized.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/BlobMaterialized.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/BlobMaterialized.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/BlobMaterialized.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/Clob.sql b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/Clob.sql\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/Clob.sql\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/Clob.sql\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/ClobLocator.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/ClobLocator.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/ClobLocator.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/ClobLocator.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/ClobMaterialized.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/ClobMaterialized.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/ClobMaterialized.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/ClobMaterialized.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/ClobMaterializedCharArray.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/ClobMaterializedCharArray.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/ClobMaterializedCharArray.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/ClobMaterializedCharArray.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/EnumAttributeConverter.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/EnumAttributeConverter.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/EnumAttributeConverter.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/EnumAttributeConverter.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/EnumCustomType.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/EnumCustomType.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/EnumCustomType.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/EnumCustomType.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/EnumeratedOrdinal.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/EnumeratedOrdinal.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/EnumeratedOrdinal.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/EnumeratedOrdinal.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/EnumeratedString.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/EnumeratedString.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/EnumeratedString.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/EnumeratedString.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/ExplicitColumnNaming.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/ExplicitColumnNaming.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/ExplicitColumnNaming.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/ExplicitColumnNaming.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/FizzywigType1.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/FizzywigType1.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/FizzywigType1.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/FizzywigType1.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/FizzywigType1_reg.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/FizzywigType1_reg.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/FizzywigType1_reg.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/FizzywigType1_reg.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/FizzywigType2.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/FizzywigType2.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/FizzywigType2.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/FizzywigType2.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/FizzywigType2_reg.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/FizzywigType2_reg.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/FizzywigType2_reg.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/FizzywigType2_reg.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/NCLOB_locator.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/NCLOB_locator.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/NCLOB_locator.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/NCLOB_locator.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/NCLOB_materialized.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/NCLOB_materialized.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/NCLOB_materialized.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/NCLOB_materialized.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/NVARCHAR.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/NVARCHAR.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/NVARCHAR.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/NVARCHAR.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/ex1.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/ex1.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/ex1.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/ex1.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/ex2.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/ex2.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/ex2.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/ex2.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/explicitType.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/explicitType.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/basic/extras/explicitType.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/basic/extras/explicitType.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/categoizations/Data_Categorizations.xml b/documentation/src/main/docbook/mappingGuide/en-US/chapters/categoizations/Data_Categorizations.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/categoizations/Data_Categorizations.xml\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/categoizations/Data_Categorizations.xml\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/categoizations/extras/Contact.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/categoizations/extras/Contact.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/categoizations/extras/Contact.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/categoizations/extras/Contact.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/categoizations/extras/Contact.sql b/documentation/src/main/docbook/mappingGuide/en-US/chapters/categoizations/extras/Contact.sql\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/categoizations/extras/Contact.sql\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/categoizations/extras/Contact.sql\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/collection/Collection.xml b/documentation/src/main/docbook/mappingGuide/en-US/chapters/collection/Collection.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/collection/Collection.xml\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/collection/Collection.xml\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/collection/extras/DelimitedStringTagsExample.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/collection/extras/DelimitedStringTagsExample.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/collection/extras/DelimitedStringTagsExample.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/collection/extras/DelimitedStringTagsExample.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/composition/Composition.xml b/documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/Composition.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/composition/Composition.xml\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/Composition.xml\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Address.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Address.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Address.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Address.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Contact-AttributeOverride.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Contact-AttributeOverride.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Contact-AttributeOverride.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Contact-AttributeOverride.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Contact-ImplicitNamingStrategy.sql b/documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Contact-ImplicitNamingStrategy.sql\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Contact-ImplicitNamingStrategy.sql\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Contact-ImplicitNamingStrategy.sql\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Contact.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Contact.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Contact.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Contact.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Name.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Name.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Name.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Name.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Person.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Person.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Person.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Person.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Person1.sql b/documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Person1.sql\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Person1.sql\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Person1.sql\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Person_alt.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Person_alt.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/Person_alt.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/Person_alt.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/component-safe-implicit-naming.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/component-safe-implicit-naming.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/composition/extras/component-safe-implicit-naming.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/composition/extras/component-safe-implicit-naming.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/entity/Entity.xml b/documentation/src/main/docbook/mappingGuide/en-US/chapters/entity/Entity.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/entity/Entity.xml\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/entity/Entity.xml\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/id/Identifiers.xml b/documentation/src/main/docbook/mappingGuide/en-US/chapters/id/Identifiers.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/id/Identifiers.xml\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/id/Identifiers.xml\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/id/extras/ConfiguredSequence.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/ConfiguredSequence.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/id/extras/ConfiguredSequence.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/ConfiguredSequence.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/id/extras/NamedSequence.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/NamedSequence.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/id/extras/NamedSequence.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/NamedSequence.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/id/extras/SimpleAssigned.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/SimpleAssigned.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/id/extras/SimpleAssigned.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/SimpleAssigned.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/id/extras/SimpleGenerated.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/SimpleGenerated.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/id/extras/SimpleGenerated.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/SimpleGenerated.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/id/extras/TableGenerator.sql b/documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/TableGenerator.sql\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/id/extras/TableGenerator.sql\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/TableGenerator.sql\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/id/extras/UUIDCustomVersionOneStrategy.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/UUIDCustomVersionOneStrategy.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/id/extras/UUIDCustomVersionOneStrategy.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/UUIDCustomVersionOneStrategy.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/id/extras/UUIDRandom.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/UUIDRandom.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/id/extras/UUIDRandom.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/UUIDRandom.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/id/extras/UnnamedSequence.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/UnnamedSequence.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/id/extras/UnnamedSequence.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/UnnamedSequence.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/id/extras/UnnamedTable.java b/documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/UnnamedTable.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/id/extras/UnnamedTable.java\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/id/extras/UnnamedTable.java\ndiff --git a/documentation/src/main/docbook/mapping/en-US/chapters/natural_id/Natural_Id.xml b/documentation/src/main/docbook/mappingGuide/en-US/chapters/natural_id/Natural_Id.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/chapters/natural_id/Natural_Id.xml\nrename to documentation/src/main/docbook/mappingGuide/en-US/chapters/natural_id/Natural_Id.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/Bibliography.xml b/documentation/src/main/docbook/userGuide/en-US/Bibliography.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/Bibliography.xml\nrename to documentation/src/main/docbook/userGuide/en-US/Bibliography.xml\ndiff --git a/documentation/src/main/docbook/mapping/en-US/Hibernate_Mapping.ent b/documentation/src/main/docbook/userGuide/en-US/Hibernate_User_Guide.ent\nsimilarity index 100%\nrename from documentation/src/main/docbook/mapping/en-US/Hibernate_Mapping.ent\nrename to documentation/src/main/docbook/userGuide/en-US/Hibernate_User_Guide.ent\ndiff --git a/documentation/src/main/docbook/manual/en-US/Hibernate_Manual.xml b/documentation/src/main/docbook/userGuide/en-US/Hibernate_User_Guide.xml\nsimilarity index 97%\nrename from documentation/src/main/docbook/manual/en-US/Hibernate_Manual.xml\nrename to documentation/src/main/docbook/userGuide/en-US/Hibernate_User_Guide.xml\nindex fd7f6115d1..9fd4841518 100644\n--- a/documentation/src/main/docbook/manual/en-US/Hibernate_Manual.xml\n+++ b/documentation/src/main/docbook/userGuide/en-US/Hibernate_User_Guide.xml\n@@ -6,7 +6,7 @@\n   ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.\n   -->\n <!DOCTYPE book SYSTEM \"http://docbook.org/xml/5.0/dtd/docbook.dtd\" [\n-<!ENTITY % BOOK_ENTITIES SYSTEM \"Hibernate_Manual.ent\">\n+<!ENTITY % BOOK_ENTITIES SYSTEM \"Hibernate_User_Guide.ent\">\n %BOOK_ENTITIES;\n ]>\n \ndiff --git a/documentation/src/main/docbook/manual/en-US/Preface.xml b/documentation/src/main/docbook/userGuide/en-US/Preface.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/Preface.xml\nrename to documentation/src/main/docbook/userGuide/en-US/Preface.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/appendices/Appendix_LegacyBootstrap.xml b/documentation/src/main/docbook/userGuide/en-US/appendices/Appendix_LegacyBootstrap.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/appendices/Appendix_LegacyBootstrap.xml\nrename to documentation/src/main/docbook/userGuide/en-US/appendices/Appendix_LegacyBootstrap.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/architecture/Architecture.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/architecture/Architecture.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/architecture/Architecture.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/architecture/Architecture.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/batch/Batching.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/batch/Batching.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/batch/Batching.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/batch/Batching.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/bootstrap/Bootstrap.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/Bootstrap.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/bootstrap/Bootstrap.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/Bootstrap.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/jpa1.java b/documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/jpa1.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/jpa1.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/jpa1.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/jpa2.java b/documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/jpa2.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/jpa2.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/jpa2.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native1.java b/documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native1.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native1.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native1.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native2.java b/documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native2.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native2.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native2.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native3.java b/documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native3.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native3.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native3.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native4.java b/documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native4.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native4.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native4.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native5.java b/documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native5.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native5.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native5.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native6.java b/documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native6.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native6.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native6.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native7.java b/documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native7.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native7.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native7.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native8.java b/documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native8.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native8.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native8.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native9.java b/documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native9.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/bootstrap/extras/native9.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/bootstrap/extras/native9.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/caching/Caching.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/caching/Caching.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/caching/Caching.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/caching/Caching.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/domain/DomainModel.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/domain/DomainModel.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/domain/DomainModel.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/domain/DomainModel.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing1.java b/documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing1.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing1.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing1.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing10.java b/documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing10.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing10.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing10.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing2.java b/documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing2.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing2.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing2.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing3.java b/documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing3.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing3.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing3.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing4.java b/documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing4.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing4.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing4.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing5.java b/documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing5.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing5.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing5.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing6.java b/documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing6.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing6.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing6.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing7.java b/documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing7.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing7.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing7.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing8.java b/documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing8.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing8.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing8.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing9.java b/documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing9.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/domain/extras/listing9.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/domain/extras/listing9.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/envers/Envers.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/envers/Envers.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/envers/Envers.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/envers/Envers.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/events/Events.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/events/Events.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/events/Events.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/events/Events.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/events/extras/AuditInterceptor.java b/documentation/src/main/docbook/userGuide/en-US/chapters/events/extras/AuditInterceptor.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/events/extras/AuditInterceptor.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/events/extras/AuditInterceptor.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/events/extras/JpaCallbacksExample.java b/documentation/src/main/docbook/userGuide/en-US/chapters/events/extras/JpaCallbacksExample.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/events/extras/JpaCallbacksExample.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/events/extras/JpaCallbacksExample.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/events/extras/LoadListenerExample.java b/documentation/src/main/docbook/userGuide/en-US/chapters/events/extras/LoadListenerExample.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/events/extras/LoadListenerExample.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/events/extras/LoadListenerExample.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/events/extras/SessionFactoryScopedExample.java b/documentation/src/main/docbook/userGuide/en-US/chapters/events/extras/SessionFactoryScopedExample.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/events/extras/SessionFactoryScopedExample.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/events/extras/SessionFactoryScopedExample.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/events/extras/SessionScopedExample.java b/documentation/src/main/docbook/userGuide/en-US/chapters/events/extras/SessionScopedExample.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/events/extras/SessionScopedExample.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/events/extras/SessionScopedExample.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/events/extras/jacc-event-reg-example.java b/documentation/src/main/docbook/userGuide/en-US/chapters/events/extras/jacc-event-reg-example.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/events/extras/jacc-event-reg-example.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/events/extras/jacc-event-reg-example.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/fetching/Fetching.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/fetching/Fetching.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/fetching/Fetching.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/fetching/Fetching.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/Department.java b/documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/Department.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/Department.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/Department.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/Employee.java b/documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/Employee.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/Employee.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/Employee.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/FetchOverrides.java b/documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/FetchOverrides.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/FetchOverrides.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/FetchOverrides.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/Login.java b/documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/Login.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/Login.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/Login.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/LoginScalar.java b/documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/LoginScalar.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/LoginScalar.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/LoginScalar.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/Project.java b/documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/Project.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/Project.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/Project.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/ProjectsForAnEmployeeCriteria.java b/documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/ProjectsForAnEmployeeCriteria.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/ProjectsForAnEmployeeCriteria.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/ProjectsForAnEmployeeCriteria.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/ProjectsForAnEmployeeFetchProfile.java b/documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/ProjectsForAnEmployeeFetchProfile.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/ProjectsForAnEmployeeFetchProfile.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/ProjectsForAnEmployeeFetchProfile.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/ProjectsForAnEmployeeHql.java b/documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/ProjectsForAnEmployeeHql.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/fetching/extras/ProjectsForAnEmployeeHql.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/fetching/extras/ProjectsForAnEmployeeHql.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/jdbc/Database_Access.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/jdbc/Database_Access.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/jdbc/Database_Access.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/jdbc/Database_Access.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/jndi/JNDI.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/jndi/JNDI.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/jndi/JNDI.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/jndi/JNDI.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/locking/Locking.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/locking/Locking.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/locking/Locking.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/locking/Locking.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/locking/extras/timestamp_version.java b/documentation/src/main/docbook/userGuide/en-US/chapters/locking/extras/timestamp_version.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/locking/extras/timestamp_version.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/locking/extras/timestamp_version.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/locking/extras/timestamp_version.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/locking/extras/timestamp_version.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/locking/extras/timestamp_version.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/locking/extras/timestamp_version.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/locking/extras/updating_version.java b/documentation/src/main/docbook/userGuide/en-US/chapters/locking/extras/updating_version.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/locking/extras/updating_version.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/locking/extras/updating_version.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/locking/extras/version_annotation.java b/documentation/src/main/docbook/userGuide/en-US/chapters/locking/extras/version_annotation.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/locking/extras/version_annotation.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/locking/extras/version_annotation.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/locking/extras/version_property.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/locking/extras/version_property.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/locking/extras/version_property.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/locking/extras/version_property.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/multitenancy/Multi_Tenancy.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/Multi_Tenancy.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/multitenancy/Multi_Tenancy.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/Multi_Tenancy.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/multitenancy/extras/MultiTenantConnectionProviderImpl-multi-cp.java b/documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/extras/MultiTenantConnectionProviderImpl-multi-cp.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/multitenancy/extras/MultiTenantConnectionProviderImpl-multi-cp.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/extras/MultiTenantConnectionProviderImpl-multi-cp.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/multitenancy/extras/MultiTenantConnectionProviderImpl-single-cp.java b/documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/extras/MultiTenantConnectionProviderImpl-single-cp.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/multitenancy/extras/MultiTenantConnectionProviderImpl-single-cp.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/extras/MultiTenantConnectionProviderImpl-single-cp.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/multitenancy/extras/tenant-identifier-from-SessionFactory.java b/documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/extras/tenant-identifier-from-SessionFactory.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/multitenancy/extras/tenant-identifier-from-SessionFactory.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/extras/tenant-identifier-from-SessionFactory.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/multitenancy/images/multitenacy_database.png b/documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/images/multitenacy_database.png\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/multitenancy/images/multitenacy_database.png\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/images/multitenacy_database.png\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/multitenancy/images/multitenacy_database.svg b/documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/images/multitenacy_database.svg\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/multitenancy/images/multitenacy_database.svg\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/images/multitenacy_database.svg\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/multitenancy/images/multitenacy_discriminator.png b/documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/images/multitenacy_discriminator.png\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/multitenancy/images/multitenacy_discriminator.png\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/images/multitenacy_discriminator.png\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/multitenancy/images/multitenacy_discriminator.svg b/documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/images/multitenacy_discriminator.svg\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/multitenancy/images/multitenacy_discriminator.svg\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/images/multitenacy_discriminator.svg\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/multitenancy/images/multitenacy_schema.png b/documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/images/multitenacy_schema.png\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/multitenancy/images/multitenacy_schema.png\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/images/multitenacy_schema.png\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/multitenancy/images/multitenacy_schema.svg b/documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/images/multitenacy_schema.svg\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/multitenancy/images/multitenacy_schema.svg\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/multitenancy/images/multitenacy_schema.svg\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/osgi/OSGi.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/osgi/OSGi.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/osgi/OSGi.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/osgi/OSGi.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/osgi/extras/extension_point_blueprint.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/osgi/extras/extension_point_blueprint.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/osgi/extras/extension_point_blueprint.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/osgi/extras/extension_point_blueprint.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/PersistenceContext.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/PersistenceContext.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/PersistenceContext.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/PersistenceContext.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/CheckingLazinessWithHibernate.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/CheckingLazinessWithHibernate.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/CheckingLazinessWithHibernate.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/CheckingLazinessWithHibernate.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/CheckingLazinessWithJPA.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/CheckingLazinessWithJPA.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/CheckingLazinessWithJPA.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/CheckingLazinessWithJPA.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/CheckingLazinessWithJPA2.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/CheckingLazinessWithJPA2.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/CheckingLazinessWithJPA2.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/CheckingLazinessWithJPA2.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/ContainsWithEM.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/ContainsWithEM.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/ContainsWithEM.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/ContainsWithEM.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/ContainsWithSession.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/ContainsWithSession.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/ContainsWithSession.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/ContainsWithSession.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/DeletingWithEM.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/DeletingWithEM.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/DeletingWithEM.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/DeletingWithEM.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/DeletingWithSession.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/DeletingWithSession.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/DeletingWithSession.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/DeletingWithSession.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/GetReferenceWithEM.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/GetReferenceWithEM.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/GetReferenceWithEM.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/GetReferenceWithEM.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/GetReferenceWithSession.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/GetReferenceWithSession.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/GetReferenceWithSession.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/GetReferenceWithSession.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/LoadWithEM.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/LoadWithEM.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/LoadWithEM.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/LoadWithEM.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/LoadWithSession.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/LoadWithSession.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/LoadWithSession.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/LoadWithSession.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/MakingPersistentWithEM.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/MakingPersistentWithEM.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/MakingPersistentWithEM.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/MakingPersistentWithEM.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/MakingPersistentWithSession.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/MakingPersistentWithSession.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/MakingPersistentWithSession.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/MakingPersistentWithSession.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/ManagedUpdateWithEM.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/ManagedUpdateWithEM.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/ManagedUpdateWithEM.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/ManagedUpdateWithEM.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/ManagedUpdateWithSession.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/ManagedUpdateWithSession.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/ManagedUpdateWithSession.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/ManagedUpdateWithSession.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/MergeWithEM.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/MergeWithEM.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/MergeWithEM.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/MergeWithEM.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/MergeWithSession.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/MergeWithSession.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/MergeWithSession.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/MergeWithSession.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/NaturalIdLoading.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/NaturalIdLoading.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/NaturalIdLoading.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/NaturalIdLoading.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/ReattachingWithSession1.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/ReattachingWithSession1.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/ReattachingWithSession1.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/ReattachingWithSession1.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/ReattachingWithSession2.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/ReattachingWithSession2.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/ReattachingWithSession2.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/ReattachingWithSession2.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/RefreshWithEM.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/RefreshWithEM.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/RefreshWithEM.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/RefreshWithEM.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/RefreshWithSession.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/RefreshWithSession.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/RefreshWithSession.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/RefreshWithSession.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/SimpleNaturalIdLoading.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/SimpleNaturalIdLoading.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/SimpleNaturalIdLoading.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/SimpleNaturalIdLoading.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/UnwrapWithEM.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/UnwrapWithEM.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/UnwrapWithEM.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/UnwrapWithEM.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/pc/extras/VisualizingMerge.java b/documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/VisualizingMerge.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/pc/extras/VisualizingMerge.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/pc/extras/VisualizingMerge.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/portability/Portability.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/portability/Portability.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/portability/Portability.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/portability/Portability.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/transactions/Transactions.xml b/documentation/src/main/docbook/userGuide/en-US/chapters/transactions/Transactions.xml\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/transactions/Transactions.xml\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/transactions/Transactions.xml\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/transactions/extras/bmt.java b/documentation/src/main/docbook/userGuide/en-US/chapters/transactions/extras/bmt.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/transactions/extras/bmt.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/transactions/extras/bmt.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/transactions/extras/cmt.java b/documentation/src/main/docbook/userGuide/en-US/chapters/transactions/extras/cmt.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/transactions/extras/cmt.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/transactions/extras/cmt.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/chapters/transactions/extras/jdbc.java b/documentation/src/main/docbook/userGuide/en-US/chapters/transactions/extras/jdbc.java\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/chapters/transactions/extras/jdbc.java\nrename to documentation/src/main/docbook/userGuide/en-US/chapters/transactions/extras/jdbc.java\ndiff --git a/documentation/src/main/docbook/manual/en-US/images/AuthorWork.png b/documentation/src/main/docbook/userGuide/en-US/images/AuthorWork.png\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/images/AuthorWork.png\nrename to documentation/src/main/docbook/userGuide/en-US/images/AuthorWork.png\ndiff --git a/documentation/src/main/docbook/manual/en-US/images/AuthorWork.zargo b/documentation/src/main/docbook/userGuide/en-US/images/AuthorWork.zargo\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/images/AuthorWork.zargo\nrename to documentation/src/main/docbook/userGuide/en-US/images/AuthorWork.zargo\ndiff --git a/documentation/src/main/docbook/manual/en-US/images/CustomerOrderProduct.png b/documentation/src/main/docbook/userGuide/en-US/images/CustomerOrderProduct.png\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/images/CustomerOrderProduct.png\nrename to documentation/src/main/docbook/userGuide/en-US/images/CustomerOrderProduct.png\ndiff --git a/documentation/src/main/docbook/manual/en-US/images/CustomerOrderProduct.zargo b/documentation/src/main/docbook/userGuide/en-US/images/CustomerOrderProduct.zargo\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/images/CustomerOrderProduct.zargo\nrename to documentation/src/main/docbook/userGuide/en-US/images/CustomerOrderProduct.zargo\ndiff --git a/documentation/src/main/docbook/manual/en-US/images/EmployerEmployee.png b/documentation/src/main/docbook/userGuide/en-US/images/EmployerEmployee.png\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/images/EmployerEmployee.png\nrename to documentation/src/main/docbook/userGuide/en-US/images/EmployerEmployee.png\ndiff --git a/documentation/src/main/docbook/manual/en-US/images/EmployerEmployee.zargo b/documentation/src/main/docbook/userGuide/en-US/images/EmployerEmployee.zargo\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/images/EmployerEmployee.zargo\nrename to documentation/src/main/docbook/userGuide/en-US/images/EmployerEmployee.zargo\ndiff --git a/documentation/src/main/docbook/manual/en-US/images/hibernate_logo_a.png b/documentation/src/main/docbook/userGuide/en-US/images/hibernate_logo_a.png\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/images/hibernate_logo_a.png\nrename to documentation/src/main/docbook/userGuide/en-US/images/hibernate_logo_a.png\ndiff --git a/documentation/src/main/docbook/manual/en-US/images/overview.png b/documentation/src/main/docbook/userGuide/en-US/images/overview.png\nsimilarity index 100%\nrename from documentation/src/main/docbook/manual/en-US/images/overview.png\nrename to documentation/src/main/docbook/userGuide/en-US/images/overview.png\ndiff --git a/documentation/src/main/docbook/manual/en-US/images/overview.svg b/documentation/src/main/docbook/userGuide/en-US/images/overview.svg\nsimilarity index 96%\nrename from documentation/src/main/docbook/manual/en-US/images/overview.svg\nrename to documentation/src/main/docbook/userGuide/en-US/images/overview.svg\nindex 7ec1c26be7..1b58a483c4 100644\n--- a/documentation/src/main/docbook/manual/en-US/images/overview.svg\n+++ b/documentation/src/main/docbook/userGuide/en-US/images/overview.svg\n@@ -1,250 +1,250 @@\n-<?xml version=\"1.0\" standalone=\"no\"?>\r\n-<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\r\n-\"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\"\r\n-[\r\n- <!ATTLIST svg\r\n-  xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">\r\n-]>\r\n-<!-- Created with Sodipodi (\"http://www.sodipodi.com/\") -->\r\n-<svg\r\n-   xmlns=\"http://www.w3.org/2000/svg\"\r\n-   xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n-   width=\"248.031\"\r\n-   height=\"248.031\"\r\n-   id=\"svg1\">\r\n-  <defs\r\n-     id=\"defs3\">\r\n-    <linearGradient\r\n-       x1=\"0\"\r\n-       y1=\"0\"\r\n-       x2=\"1\"\r\n-       y2=\"0\"\r\n-       id=\"linearGradient127\"\r\n-       gradientUnits=\"objectBoundingBox\"\r\n-       spreadMethod=\"pad\">\r\n-      <stop\r\n-         style=\"stop-color:#000000;stop-opacity:1;\"\r\n-         offset=\"0\"\r\n-         id=\"stop128\" />\r\n-      <stop\r\n-         style=\"stop-color:#ffffff;stop-opacity:1;\"\r\n-         offset=\"1\"\r\n-         id=\"stop129\" />\r\n-    </linearGradient>\r\n-    <linearGradient\r\n-       x1=\"0\"\r\n-       y1=\"0\"\r\n-       x2=\"1\"\r\n-       y2=\"0\"\r\n-       id=\"linearGradient130\"\r\n-       xlink:href=\"#linearGradient127\"\r\n-       gradientUnits=\"objectBoundingBox\"\r\n-       spreadMethod=\"pad\" />\r\n-    <radialGradient\r\n-       cx=\"0.5\"\r\n-       cy=\"0.5\"\r\n-       fx=\"0.5\"\r\n-       fy=\"0.5\"\r\n-       r=\"0.5\"\r\n-       id=\"radialGradient131\"\r\n-       xlink:href=\"#linearGradient127\"\r\n-       gradientUnits=\"objectBoundingBox\"\r\n-       spreadMethod=\"pad\" />\r\n-  </defs>\r\n-  <g\r\n-     transform=\"matrix(0.771934,0,0,0.771934,4.36019,-3.02123)\"\r\n-     style=\"font-size:12;\"\r\n-     id=\"g158\">\r\n-    <rect\r\n-       width=\"285.502\"\r\n-       height=\"77.2688\"\r\n-       x=\"16.6979\"\r\n-       y=\"17.3527\"\r\n-       style=\"fill:#757575;fill-rule:evenodd;stroke-width:1pt;\"\r\n-       id=\"rect136\" />\r\n-    <rect\r\n-       width=\"285.502\"\r\n-       height=\"77.2688\"\r\n-       x=\"14.7335\"\r\n-       y=\"15.3883\"\r\n-       transform=\"translate(-1.30962,-1.30992)\"\r\n-       style=\"fill:#d2d2d2;fill-rule:evenodd;stroke-width:1pt;\"\r\n-       id=\"rect126\" />\r\n-  </g>\r\n-  <g\r\n-     transform=\"matrix(0.771934,0,0,0.771934,4.36019,3.04452)\"\r\n-     style=\"font-size:12;\"\r\n-     id=\"g161\">\r\n-    <rect\r\n-       width=\"285.502\"\r\n-       height=\"118.523\"\r\n-       x=\"16.6979\"\r\n-       y=\"99.2053\"\r\n-       style=\"fill:#757575;fill-rule:evenodd;stroke-width:1pt;\"\r\n-       id=\"rect137\" />\r\n-    <rect\r\n-       width=\"285.502\"\r\n-       height=\"118.523\"\r\n-       x=\"13.4238\"\r\n-       y=\"95.9309\"\r\n-       style=\"fill:#d2d2d2;fill-rule:evenodd;stroke-width:1pt;\"\r\n-       id=\"rect132\" />\r\n-  </g>\r\n-  <g\r\n-     transform=\"matrix(0.771934,0,0,0.771934,4.36019,8.0993)\"\r\n-     style=\"font-size:12;\"\r\n-     id=\"g164\">\r\n-    <rect\r\n-       width=\"285.502\"\r\n-       height=\"77.2688\"\r\n-       x=\"16.6979\"\r\n-       y=\"222.966\"\r\n-       style=\"fill:#757575;fill-rule:evenodd;stroke-width:1pt;\"\r\n-       id=\"rect138\" />\r\n-    <rect\r\n-       width=\"285.502\"\r\n-       height=\"77.2688\"\r\n-       x=\"14.7335\"\r\n-       y=\"221.002\"\r\n-       transform=\"translate(-1.30962,-1.30992)\"\r\n-       style=\"fill:#d2d2d2;fill-rule:evenodd;stroke-width:1pt;\"\r\n-       id=\"rect133\" />\r\n-  </g>\r\n-  <g\r\n-     transform=\"matrix(0.771934,0,0,0.543505,2.59104,21.1103)\"\r\n-     style=\"font-size:12;\"\r\n-     id=\"g167\">\r\n-    <rect\r\n-       width=\"199.065\"\r\n-       height=\"61.5532\"\r\n-       x=\"61.8805\"\r\n-       y=\"68.4288\"\r\n-       style=\"fill:#757575;fill-rule:evenodd;stroke-width:1pt;\"\r\n-       id=\"rect134\" />\r\n-    <rect\r\n-       width=\"199.065\"\r\n-       height=\"61.5532\"\r\n-       x=\"59.2613\"\r\n-       y=\"65.8095\"\r\n-       style=\"fill:#e0e0e0;fill-rule:evenodd;stroke-width:1pt;\"\r\n-       id=\"rect135\" />\r\n-  </g>\r\n-  <text\r\n-     x=\"105.392174\"\r\n-     y=\"56.568123\"\r\n-     transform=\"scale(0.771934,0.771934)\"\r\n-     style=\"font-size:24;font-weight:normal;stroke-width:1pt;font-family:Helvetica;\"\r\n-     id=\"text183\">\r\n-    <tspan\r\n-       x=\"105.392273\"\r\n-       y=\"56.568146\"\r\n-       id=\"tspan186\">\r\n-Application</tspan>\r\n-  </text>\r\n-  <text\r\n-     x=\"81.820183\"\r\n-     y=\"103.149330\"\r\n-     transform=\"scale(0.771934,0.771934)\"\r\n-     style=\"font-size:20;font-weight:normal;stroke-width:1pt;font-family:Helvetica;\"\r\n-     id=\"text188\">\r\n-    <tspan\r\n-       x=\"81.820213\"\r\n-       y=\"103.149727\"\r\n-       id=\"tspan206\">\r\n-Persistent Objects</tspan>\r\n-  </text>\r\n-  <text\r\n-     x=\"111.548180\"\r\n-     y=\"278.927887\"\r\n-     transform=\"scale(0.771934,0.771934)\"\r\n-     style=\"font-size:24;font-weight:normal;stroke-width:1pt;font-family:Helvetica;\"\r\n-     id=\"text197\">\r\n-    <tspan\r\n-       x=\"111.547874\"\r\n-       y=\"278.927551\"\r\n-       id=\"tspan200\">\r\n-Database</tspan>\r\n-  </text>\r\n-  <text\r\n-     x=\"94.436180\"\r\n-     y=\"153.805740\"\r\n-     transform=\"scale(0.771934,0.771934)\"\r\n-     style=\"font-size:24;font-weight:normal;stroke-width:1pt;font-family:Helvetica;\"\r\n-     id=\"text216\">\r\n-    <tspan\r\n-       x=\"94.436180\"\r\n-       y=\"153.805740\"\r\n-       id=\"tspan221\">\r\n-HIBERNATE</tspan>\r\n-  </text>\r\n-  <g\r\n-     transform=\"matrix(0.771934,0,0,0.771934,2.59083,1.02261)\"\r\n-     style=\"font-size:12;\"\r\n-     id=\"g254\">\r\n-    <g\r\n-       transform=\"translate(4.58374,2.61928)\"\r\n-       id=\"g176\">\r\n-      <g\r\n-         transform=\"matrix(0.571429,0,0,0.67347,-10.6174,117.093)\"\r\n-         id=\"g170\">\r\n-        <rect\r\n-           width=\"199.065\"\r\n-           height=\"61.5532\"\r\n-           x=\"61.8805\"\r\n-           y=\"68.4288\"\r\n-           style=\"fill:#757575;fill-rule:evenodd;stroke-width:1pt;\"\r\n-           id=\"rect171\" />\r\n-        <rect\r\n-           width=\"199.065\"\r\n-           height=\"61.5532\"\r\n-           x=\"59.2613\"\r\n-           y=\"65.8095\"\r\n-           style=\"fill:#e0e0e0;fill-rule:evenodd;stroke-width:1pt;\"\r\n-           id=\"rect172\" />\r\n-      </g>\r\n-      <g\r\n-         transform=\"matrix(0.571429,0,0,0.67347,138.682,117.093)\"\r\n-         id=\"g173\">\r\n-        <rect\r\n-           width=\"199.065\"\r\n-           height=\"61.5532\"\r\n-           x=\"61.8805\"\r\n-           y=\"68.4288\"\r\n-           style=\"fill:#757575;fill-rule:evenodd;stroke-width:1pt;\"\r\n-           id=\"rect174\" />\r\n-        <rect\r\n-           width=\"199.065\"\r\n-           height=\"61.5532\"\r\n-           x=\"59.2613\"\r\n-           y=\"65.8095\"\r\n-           style=\"fill:#e0e0e0;fill-rule:evenodd;stroke-width:1pt;\"\r\n-           id=\"rect175\" />\r\n-      </g>\r\n-    </g>\r\n-    <text\r\n-       x=\"47.259438\"\r\n-       y=\"182.367538\"\r\n-       style=\"font-weight:bold;stroke-width:1pt;font-family:Courier;\"\r\n-       id=\"text191\">\r\n-      <tspan\r\n-         x=\"47.259399\"\r\n-         y=\"182.367996\"\r\n-         id=\"tspan212\">\r\n-hibernate.</tspan>\r\n-      <tspan\r\n-         x=\"47.259399\"\r\n-         y=\"194.367996\"\r\n-         id=\"tspan214\">\r\n-properties</tspan>\r\n-    </text>\r\n-    <text\r\n-       x=\"198.523010\"\r\n-       y=\"188.260941\"\r\n-       style=\"font-weight:normal;stroke-width:1pt;font-family:helvetica;\"\r\n-       id=\"text194\">\r\n-      <tspan\r\n-         id=\"tspan195\">\r\n-XML Mapping</tspan>\r\n-    </text>\r\n-  </g>\r\n-</svg>\r\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\n+\"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\"\n+[\n+ <!ATTLIST svg\n+  xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">\n+]>\n+<!-- Created with Sodipodi (\"http://www.sodipodi.com/\") -->\n+<svg\n+   xmlns=\"http://www.w3.org/2000/svg\"\n+   xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n+   width=\"248.031\"\n+   height=\"248.031\"\n+   id=\"svg1\">\n+  <defs\n+     id=\"defs3\">\n+    <linearGradient\n+       x1=\"0\"\n+       y1=\"0\"\n+       x2=\"1\"\n+       y2=\"0\"\n+       id=\"linearGradient127\"\n+       gradientUnits=\"objectBoundingBox\"\n+       spreadMethod=\"pad\">\n+      <stop\n+         style=\"stop-color:#000000;stop-opacity:1;\"\n+         offset=\"0\"\n+         id=\"stop128\" />\n+      <stop\n+         style=\"stop-color:#ffffff;stop-opacity:1;\"\n+         offset=\"1\"\n+         id=\"stop129\" />\n+    </linearGradient>\n+    <linearGradient\n+       x1=\"0\"\n+       y1=\"0\"\n+       x2=\"1\"\n+       y2=\"0\"\n+       id=\"linearGradient130\"\n+       xlink:href=\"#linearGradient127\"\n+       gradientUnits=\"objectBoundingBox\"\n+       spreadMethod=\"pad\" />\n+    <radialGradient\n+       cx=\"0.5\"\n+       cy=\"0.5\"\n+       fx=\"0.5\"\n+       fy=\"0.5\"\n+       r=\"0.5\"\n+       id=\"radialGradient131\"\n+       xlink:href=\"#linearGradient127\"\n+       gradientUnits=\"objectBoundingBox\"\n+       spreadMethod=\"pad\" />\n+  </defs>\n+  <g\n+     transform=\"matrix(0.771934,0,0,0.771934,4.36019,-3.02123)\"\n+     style=\"font-size:12;\"\n+     id=\"g158\">\n+    <rect\n+       width=\"285.502\"\n+       height=\"77.2688\"\n+       x=\"16.6979\"\n+       y=\"17.3527\"\n+       style=\"fill:#757575;fill-rule:evenodd;stroke-width:1pt;\"\n+       id=\"rect136\" />\n+    <rect\n+       width=\"285.502\"\n+       height=\"77.2688\"\n+       x=\"14.7335\"\n+       y=\"15.3883\"\n+       transform=\"translate(-1.30962,-1.30992)\"\n+       style=\"fill:#d2d2d2;fill-rule:evenodd;stroke-width:1pt;\"\n+       id=\"rect126\" />\n+  </g>\n+  <g\n+     transform=\"matrix(0.771934,0,0,0.771934,4.36019,3.04452)\"\n+     style=\"font-size:12;\"\n+     id=\"g161\">\n+    <rect\n+       width=\"285.502\"\n+       height=\"118.523\"\n+       x=\"16.6979\"\n+       y=\"99.2053\"\n+       style=\"fill:#757575;fill-rule:evenodd;stroke-width:1pt;\"\n+       id=\"rect137\" />\n+    <rect\n+       width=\"285.502\"\n+       height=\"118.523\"\n+       x=\"13.4238\"\n+       y=\"95.9309\"\n+       style=\"fill:#d2d2d2;fill-rule:evenodd;stroke-width:1pt;\"\n+       id=\"rect132\" />\n+  </g>\n+  <g\n+     transform=\"matrix(0.771934,0,0,0.771934,4.36019,8.0993)\"\n+     style=\"font-size:12;\"\n+     id=\"g164\">\n+    <rect\n+       width=\"285.502\"\n+       height=\"77.2688\"\n+       x=\"16.6979\"\n+       y=\"222.966\"\n+       style=\"fill:#757575;fill-rule:evenodd;stroke-width:1pt;\"\n+       id=\"rect138\" />\n+    <rect\n+       width=\"285.502\"\n+       height=\"77.2688\"\n+       x=\"14.7335\"\n+       y=\"221.002\"\n+       transform=\"translate(-1.30962,-1.30992)\"\n+       style=\"fill:#d2d2d2;fill-rule:evenodd;stroke-width:1pt;\"\n+       id=\"rect133\" />\n+  </g>\n+  <g\n+     transform=\"matrix(0.771934,0,0,0.543505,2.59104,21.1103)\"\n+     style=\"font-size:12;\"\n+     id=\"g167\">\n+    <rect\n+       width=\"199.065\"\n+       height=\"61.5532\"\n+       x=\"61.8805\"\n+       y=\"68.4288\"\n+   ",
    "Updated Solo . java Javadoc": "diff --git a/robotium-solo/src/main/java/com/jayway/android/robotium/solo/Solo.java b/robotium-solo/src/main/java/com/jayway/android/robotium/solo/Solo.java\nindex e6454c7..7b03189 100755\n--- a/robotium-solo/src/main/java/com/jayway/android/robotium/solo/Solo.java\n+++ b/robotium-solo/src/main/java/com/jayway/android/robotium/solo/Solo.java\n@@ -152,7 +152,7 @@ public class Solo {\n \t}\n \t\n \t/**\n-\t * Returns the absolute top parent {@code View} in for a given {@code View}.\n+\t * Returns the absolute top parent {@code View} for a given {@code View}.\n \t *\n \t * @param view the {@code View} whose top parent is requested\n \t * @return the top parent {@code View}\n@@ -201,7 +201,7 @@ public class Solo {\n     /**\n \t * Waits for a text to be shown. Default timeout is 20 seconds. \n \t * \n-\t * @param text the text that is expected to be shown\n+\t * @param text the text to wait for\n \t * @return {@code true} if text is shown and {@code false} if it is not shown before the timeout\n \t * \n \t */\n@@ -215,7 +215,7 @@ public class Solo {\n \t /**\n \t * Waits for a text to be shown. \n \t * \n-\t * @param text the text that needs to be shown\n+\t * @param text the text to wait for\n \t * @param minimumNumberOfMatches the minimum number of matches that are expected to be shown. {@code 0} means any number of matches\n \t * @param timeout the the amount of time in milliseconds to wait \n \t * @return {@code true} if text is shown and {@code false} if it is not shown before the timeout\n@@ -229,7 +229,7 @@ public class Solo {\n \t /**\n \t * Waits for a text to be shown. \n \t * \n-\t * @param text the text that needs to be shown\n+\t * @param text the text to wait for\n \t * @param minimumNumberOfMatches the minimum number of matches that are expected to be shown. {@code 0} means any number of matches\n \t * @param timeout the the amount of time in milliseconds to wait\n \t * @param scroll {@code true} if scrolling should be performed\n@@ -589,7 +589,7 @@ public class Solo {\n \t\n \n \t/**\n-\t * Waits for a {@link android.app.Dialog} to close.\n+\t * Waits for an {@link android.app.Dialog} to close.\n \t * \n \t * @param timeout the amount of time in milliseconds to wait\n \t * @return {@code true} if the {@code Dialog} is closed before the timeout and {@code false} if it is not closed\n@@ -710,7 +710,7 @@ public class Solo {\n \t}\n \t\n \t/**\n-\t * Presses a {@link android.view.MenuItem} with a given index. Index {@code 0} is the first item in the\n+\t * Presses an {@link android.view.MenuItem} with a given index. Index {@code 0} is the first item in the\n \t * first row, Index {@code 3} is the first item in the second row and\n \t * index {@code 6} is the first item in the third row.\n \t * \n@@ -723,7 +723,7 @@ public class Solo {\n \t}\n \t\n \t/**\n-\t * Presses a {@link android.view.MenuItem} with a given index. Supports three rows with a given amount\n+\t * Presses an {@link android.view.MenuItem} with a given index. Supports three rows with a given amount\n \t * of items. If itemsPerRow equals 5 then index 0 is the first item in the first row, \n \t * index 5 is the first item in the second row and index 10 is the first item in the third row.\n \t * \n@@ -960,13 +960,13 @@ public class Solo {\n \t * returns an {@code ArrayList} of the {@link TextView}s that the list line is showing.\n \t * \n \t * @param line the line that should be clicked\n-\t * @param listIndex the index of the list. 1 if two lists are available\n+\t * @param index the index of the list. 1 if two lists are available\n \t * @return an {@code ArrayList} of the {@code TextView} objects located in the list line\n \t *\n \t */\n \t\n-\tpublic ArrayList<TextView> clickInList(int line, int listIndex) {\n-\t\treturn clicker.clickInList(line, listIndex);\n+\tpublic ArrayList<TextView> clickInList(int line, int index) {\n+\t\treturn clicker.clickInList(line, index);\n \t}\n \n \t /**\n@@ -1015,27 +1015,27 @@ public class Solo {\n \t}\n \t\n \t/**\n-\t * Scrolls down a list with a given {@code listIndex}.\n+\t * Scrolls down a list with a given {@code index}.\n \t * \n-\t * @param listIndex the {@link ListView} to be scrolled. {@code 0} if only one list is available\n+\t * @param index the {@link ListView} to be scrolled. {@code 0} if only one list is available\n \t * @return {@code true} if more scrolling can be done\n \t * \n \t */\n \t\n-\tpublic boolean scrollDownList(int listIndex) {\n-\t\treturn scroller.scrollList(listIndex, Scroller.DOWN, null);\n+\tpublic boolean scrollDownList(int index) {\n+\t\treturn scroller.scrollList(index, Scroller.DOWN, null);\n \t}\n \t\n \t/**\n-\t * Scrolls up a list with a given {@code listIndex}.\n+\t * Scrolls up a list with a given {@code index}.\n \t * \n-\t * @param listIndex the {@link ListView} to be scrolled. {@code 0} if only one list is available\n+\t * @param index the {@link ListView} to be scrolled. {@code 0} if only one list is available\n \t * @return {@code true} if more scrolling can be done\n \t * \n \t */\n \t\n-\tpublic boolean scrollUpList(int listIndex) {\n-\t\treturn scroller.scrollList(listIndex, Scroller.UP, null);\n+\tpublic boolean scrollUpList(int index) {\n+\t\treturn scroller.scrollList(index, Scroller.UP, null);\n \t}\n \t\n \t/**\n@@ -1658,7 +1658,7 @@ public class Solo {\n \t}\n \n \t/**\n-\t * Tells Robotium to send a key: Right, Left, Up, Down, Enter, Menu, Delete, Call or End Call.\n+\t * Sends a key: Right, Left, Up, Down, Enter, Menu, Delete, Call or End Call.\n \t * \n \t * @param key the key to be sent. Use {@code Solo.}{@link #RIGHT}, {@link #LEFT}, {@link #UP}, {@link #DOWN}, {@link #ENTER}, {@link #MENU}, {@link #DELETE}, {@link #CALL}, {@link #ENDCALL}\n \t * ",
    "added a try / finally block for added safety during rollback": "diff --git a/src/main/java/org/apache/ibatis/executor/BaseExecutor.java b/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\nindex c450bd70cb..d3bfa37932 100644\n--- a/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\n+++ b/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\n@@ -159,10 +159,13 @@ public abstract class BaseExecutor implements Executor {\n \r\n   public void rollback(boolean required) throws SQLException {\r\n     if (!closed) {\r\n-      clearLocalCache();\r\n-      flushStatements();\r\n-      if (required) {\r\n-        transaction.rollback();\r\n+      try {\r\n+        clearLocalCache();\r\n+        flushStatements();\r\n+      } finally {\r\n+        if (required) {\r\n+          transaction.rollback();\r\n+        }\r\n       }\r\n     }\r\n   }\r",
    "Rebuild patch hashes , fix build .": "diff --git a/Bukkit-Patches/0001-POM-Changes.patch b/Bukkit-Patches/0001-POM-Changes.patch\nindex 9508a12c1..d0770aea7 100644\n--- a/Bukkit-Patches/0001-POM-Changes.patch\n+++ b/Bukkit-Patches/0001-POM-Changes.patch\n@@ -1,4 +1,4 @@\n-From 92ffae9c8707c17a643cb877d92f3e0fa9d23bcc Mon Sep 17 00:00:00 2001\n+From 0ab1f6df9fbd63d6057dd0939c3e1b537297ee85 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 2 Jun 2013 10:36:24 +1000\n Subject: [PATCH] POM Changes\n@@ -65,5 +65,5 @@ index 50f9bae..fb303e2 100644\n          <plugins>\n              <plugin>\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/Bukkit-Patches/0002-Measure-Timings-Duration.patch b/Bukkit-Patches/0002-Measure-Timings-Duration.patch\nindex 5320dffb2..fbbfa1a84 100644\n--- a/Bukkit-Patches/0002-Measure-Timings-Duration.patch\n+++ b/Bukkit-Patches/0002-Measure-Timings-Duration.patch\n@@ -1,4 +1,4 @@\n-From 2674d1cc80c1aba22c182561dd5da0b048a33b7c Mon Sep 17 00:00:00 2001\n+From febc38ac8c7a2acfef1892d6aede6b8f3515bb11 Mon Sep 17 00:00:00 2001\n From: Aikar <aikar@aikar.co>\n Date: Sun, 2 Jun 2013 10:42:57 +1000\n Subject: [PATCH] Measure Timings Duration\n@@ -49,5 +49,5 @@ index 787dcfe..b870ecd 100644\n      }\n  \n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/Bukkit-Patches/0003-Timings-Paste-Command.patch b/Bukkit-Patches/0003-Timings-Paste-Command.patch\nindex 8d986631d..37c79677e 100644\n--- a/Bukkit-Patches/0003-Timings-Paste-Command.patch\n+++ b/Bukkit-Patches/0003-Timings-Paste-Command.patch\n@@ -1,4 +1,4 @@\n-From 72fa7c7524692663a48d20459360b4dd2d8f6127 Mon Sep 17 00:00:00 2001\n+From 7d888e10bd2282fadffab90e213be2b412655b04 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 2 Jun 2013 10:55:20 +1000\n Subject: [PATCH] Timings Paste Command\ndiff --git a/Bukkit-Patches/0004-Enchanced-Timings.patch b/Bukkit-Patches/0004-Enchanced-Timings.patch\nindex 4360b7991..c4254f553 100644\n--- a/Bukkit-Patches/0004-Enchanced-Timings.patch\n+++ b/Bukkit-Patches/0004-Enchanced-Timings.patch\n@@ -1,4 +1,4 @@\n-From 5788df3c533911bb1c4d9764c3d08e37f866f279 Mon Sep 17 00:00:00 2001\n+From 1a874bc9cc0a9f5802e8b410ee6cf188794e4967 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 2 Jun 2013 11:17:05 +1000\n Subject: [PATCH] Enchanced Timings\ndiff --git a/Bukkit-Patches/0005-Add-PlayerItemDamageEvent.patch b/Bukkit-Patches/0005-Add-PlayerItemDamageEvent.patch\nindex 725b450c3..2854833e0 100644\n--- a/Bukkit-Patches/0005-Add-PlayerItemDamageEvent.patch\n+++ b/Bukkit-Patches/0005-Add-PlayerItemDamageEvent.patch\n@@ -1,4 +1,4 @@\n-From 22694aef996c25381c7c276d4d46885c82dc7447 Mon Sep 17 00:00:00 2001\n+From eaceb28e82b974d618828104f86074e74529b2e9 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Mon, 4 Mar 2013 18:31:20 +1100\n Subject: [PATCH] Add PlayerItemDamageEvent\ndiff --git a/Bukkit-Patches/0006-BungeeCord-Support.patch b/Bukkit-Patches/0006-BungeeCord-Support.patch\nindex dafd2d4be..022dd01a5 100644\n--- a/Bukkit-Patches/0006-BungeeCord-Support.patch\n+++ b/Bukkit-Patches/0006-BungeeCord-Support.patch\n@@ -1,11 +1,11 @@\n-From 0338bcb97d3daff6160d8ee94e6b8a90e8ee42d0 Mon Sep 17 00:00:00 2001\n+From 13bf0b8e141d290ef4be6a0b75e8aa82e5d5fd1a Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 2 Jun 2013 15:20:49 +1000\n Subject: [PATCH] BungeeCord Support\n \n \n diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java\n-index 3c096f5..234a82d 100644\n+index 44c9b5a..21f348b 100644\n --- a/src/main/java/org/bukkit/entity/Player.java\n +++ b/src/main/java/org/bukkit/entity/Player.java\n @@ -1018,4 +1018,23 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline\ndiff --git a/Bukkit-Patches/0007-Add-Arrow-API.patch b/Bukkit-Patches/0007-Add-Arrow-API.patch\nindex b493a1986..1820476a1 100644\n--- a/Bukkit-Patches/0007-Add-Arrow-API.patch\n+++ b/Bukkit-Patches/0007-Add-Arrow-API.patch\n@@ -1,4 +1,4 @@\n-From 3368da5f94185d954c7937a2cf3df8f53adeb118 Mon Sep 17 00:00:00 2001\n+From cbf63431431dd4051330fae4332ab3c8344632be Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 2 Jun 2013 15:08:24 +1000\n Subject: [PATCH] Add Arrow API\n@@ -30,5 +30,5 @@ index e49eef0..e7a32f7 100644\n +    Spigot spigot();\n  }\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/Bukkit-Patches/0008-Add-Particle-API.patch b/Bukkit-Patches/0008-Add-Particle-API.patch\nindex 97557e03a..32aefe416 100644\n--- a/Bukkit-Patches/0008-Add-Particle-API.patch\n+++ b/Bukkit-Patches/0008-Add-Particle-API.patch\n@@ -1,4 +1,4 @@\n-From 52f16d9f47956b8295dfaccb85cd4738201156cc Mon Sep 17 00:00:00 2001\n+From 855a6da4ddb7bcb75cd4c45e2dcb2b9a42c4f6f4 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 2 Jun 2013 15:57:09 +1000\n Subject: [PATCH] Add Particle API\n@@ -327,7 +327,7 @@ index f02bfb7..a58eb05 100644\n       * Represents various map environment types that a world may be\n       */\n diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java\n-index 234a82d..bcfe0f9 100644\n+index 21f348b..a2ac7a6 100644\n --- a/src/main/java/org/bukkit/entity/Player.java\n +++ b/src/main/java/org/bukkit/entity/Player.java\n @@ -1033,6 +1033,11 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline\ndiff --git a/Bukkit-Patches/0009-Define-EntitySpawnEvent-and-SpawnerSpawnEvent.patch b/Bukkit-Patches/0009-Define-EntitySpawnEvent-and-SpawnerSpawnEvent.patch\nindex e8c8e8dd5..7cf2b7b80 100644\n--- a/Bukkit-Patches/0009-Define-EntitySpawnEvent-and-SpawnerSpawnEvent.patch\n+++ b/Bukkit-Patches/0009-Define-EntitySpawnEvent-and-SpawnerSpawnEvent.patch\n@@ -1,4 +1,4 @@\n-From 6380f957a4917616cfb36fcb299b8f8fe9a5ad7e Mon Sep 17 00:00:00 2001\n+From 8aa02378d120ed69b1ec15830c150205580ef74b Mon Sep 17 00:00:00 2001\n From: Andy Shulman <andy.shulman@hotmail.com>\n Date: Mon, 15 Apr 2013 20:06:01 -0500\n Subject: [PATCH] Define EntitySpawnEvent and SpawnerSpawnEvent\n@@ -6,7 +6,7 @@ Subject: [PATCH] Define EntitySpawnEvent and SpawnerSpawnEvent\n Defines EntitySpawnEvent and SpawnerSpawnEvent. Adds BUKKIT-267 and BUKKIT-1559\n \n diff --git a/src/main/java/org/bukkit/event/entity/CreatureSpawnEvent.java b/src/main/java/org/bukkit/event/entity/CreatureSpawnEvent.java\n-index 3055ea7..6bde0fe 100644\n+index 46b8262..182f634 100644\n --- a/src/main/java/org/bukkit/event/entity/CreatureSpawnEvent.java\n +++ b/src/main/java/org/bukkit/event/entity/CreatureSpawnEvent.java\n @@ -4,17 +4,13 @@ import org.bukkit.Location;\ndiff --git a/Bukkit-Patches/0010-Entity-Mount-and-Dismount-Events.patch b/Bukkit-Patches/0010-Entity-Mount-and-Dismount-Events.patch\nindex 07b71485a..46e5dbeee 100644\n--- a/Bukkit-Patches/0010-Entity-Mount-and-Dismount-Events.patch\n+++ b/Bukkit-Patches/0010-Entity-Mount-and-Dismount-Events.patch\n@@ -1,4 +1,4 @@\n-From 8afee7fae3fb6e5906f7116c705a7b2933cc61cc Mon Sep 17 00:00:00 2001\n+From 58be738382c873e893de43f6c04c4d32d896c4d1 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Tue, 2 Jul 2013 20:32:53 +1000\n Subject: [PATCH] Entity Mount and Dismount Events\ndiff --git a/Bukkit-Patches/0011-Update-Depends.patch b/Bukkit-Patches/0011-Update-Depends.patch\nindex a7478ee08..adca87646 100644\n--- a/Bukkit-Patches/0011-Update-Depends.patch\n+++ b/Bukkit-Patches/0011-Update-Depends.patch\n@@ -1,4 +1,4 @@\n-From 18fe53680a58716ef7a2f0b8ef7da0d6a903e584 Mon Sep 17 00:00:00 2001\n+From e8da0323d4163ef96b9be72eabe3d5b730834efd Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Thu, 4 Jul 2013 20:05:19 +1000\n Subject: [PATCH] Update Depends\n@@ -6,7 +6,7 @@ Subject: [PATCH] Update Depends\n - All of these changes have been reviewed to be binary compatible and in general contract compatible with previous versions of the libraries.\n \n diff --git a/pom.xml b/pom.xml\n-index efb3262..f6ee82d 100644\n+index fb303e2..5187a99 100644\n --- a/pom.xml\n +++ b/pom.xml\n @@ -77,21 +77,21 @@\ndiff --git a/Bukkit-Patches/0012-InventoryClickEvent-getClickedInventory.patch b/Bukkit-Patches/0012-InventoryClickEvent-getClickedInventory.patch\nindex 5fd3b3790..0d3eed7ed 100644\n--- a/Bukkit-Patches/0012-InventoryClickEvent-getClickedInventory.patch\n+++ b/Bukkit-Patches/0012-InventoryClickEvent-getClickedInventory.patch\n@@ -1,4 +1,4 @@\n-From 6175899bf3eb1db85f088bdd5765b39cafe7cfbe Mon Sep 17 00:00:00 2001\n+From e8c2741c4a8f6c5080bebca67e88220ede5419ef Mon Sep 17 00:00:00 2001\n From: Aikar <aikar@aikar.co>\n Date: Sun, 7 Jul 2013 10:32:05 -0400\n Subject: [PATCH] InventoryClickEvent getClickedInventory\ndiff --git a/Bukkit-Patches/0013-Added-getAllSessionData-to-the-Conversation-API.patch b/Bukkit-Patches/0013-Added-getAllSessionData-to-the-Conversation-API.patch\nindex 0fc796aa5..707506dbd 100644\n--- a/Bukkit-Patches/0013-Added-getAllSessionData-to-the-Conversation-API.patch\n+++ b/Bukkit-Patches/0013-Added-getAllSessionData-to-the-Conversation-API.patch\n@@ -1,4 +1,4 @@\n-From f555fa83917fc1b8b3f04d17474e9f3dd77e83aa Mon Sep 17 00:00:00 2001\n+From 70ce792e4a61366ea17987ebf1ad1d90cb4df908 Mon Sep 17 00:00:00 2001\n From: Alex Bennett <alex.eugene.bennett@gmail.com>\n Date: Thu, 11 Jul 2013 15:31:32 -0500\n Subject: [PATCH] Added getAllSessionData() to the Conversation API.\ndiff --git a/Bukkit-Patches/0014-Catch-Conversation-API-Errors.patch b/Bukkit-Patches/0014-Catch-Conversation-API-Errors.patch\nindex 0f73b0057..91a38eb8c 100644\n--- a/Bukkit-Patches/0014-Catch-Conversation-API-Errors.patch\n+++ b/Bukkit-Patches/0014-Catch-Conversation-API-Errors.patch\n@@ -1,4 +1,4 @@\n-From d802b950620698530d09f1bbf4cead0875514acc Mon Sep 17 00:00:00 2001\n+From a0feb888a9a0017132f70f0fdce1b99e587c1735 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Mon, 22 Jul 2013 19:09:43 +1000\n Subject: [PATCH] Catch Conversation API Errors\ndiff --git a/Bukkit-Patches/0015-Player-Collision-API.patch b/Bukkit-Patches/0015-Player-Collision-API.patch\nindex 6b70ad7bc..109472ca5 100644\n--- a/Bukkit-Patches/0015-Player-Collision-API.patch\n+++ b/Bukkit-Patches/0015-Player-Collision-API.patch\n@@ -1,11 +1,11 @@\n-From a786683923823eafeba4fac99c6da728b9795450 Mon Sep 17 00:00:00 2001\n+From 240fc02a1e8cc6aa73258b81e2721b03328ad450 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 3 Aug 2013 19:20:50 +1000\n Subject: [PATCH] Player Collision API\n \n \n diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java\n-index bcfe0f9..1c80bd2 100644\n+index a2ac7a6..55681ff 100644\n --- a/src/main/java/org/bukkit/entity/Player.java\n +++ b/src/main/java/org/bukkit/entity/Player.java\n @@ -1038,6 +1038,27 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline\ndiff --git a/Bukkit-Patches/0016-Expand-Boolean-Prompt-Values.patch b/Bukkit-Patches/0016-Expand-Boolean-Prompt-Values.patch\nindex 2319494fd..07b5b72ae 100644\n--- a/Bukkit-Patches/0016-Expand-Boolean-Prompt-Values.patch\n+++ b/Bukkit-Patches/0016-Expand-Boolean-Prompt-Values.patch\n@@ -1,4 +1,4 @@\n-From f0bae7b84e09f60501778e6c42ebaa948c384619 Mon Sep 17 00:00:00 2001\n+From bf0593497a0cf78104fdec4b477bf18528ab6d60 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 3 Aug 2013 19:42:16 +1000\n Subject: [PATCH] Expand Boolean Prompt Values\ndiff --git a/Bukkit-Patches/0017-Add-Getter-for-Entity-Invulnerability.patch b/Bukkit-Patches/0017-Add-Getter-for-Entity-Invulnerability.patch\nindex bd835bb2e..0f49fd981 100644\n--- a/Bukkit-Patches/0017-Add-Getter-for-Entity-Invulnerability.patch\n+++ b/Bukkit-Patches/0017-Add-Getter-for-Entity-Invulnerability.patch\n@@ -1,4 +1,4 @@\n-From 237b0b740120484e05de4a45066e83235f158db7 Mon Sep 17 00:00:00 2001\n+From 084c77ae158c6f4a05ed31f39d1fed72a113378a Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 3 Aug 2013 19:49:36 +1000\n Subject: [PATCH] Add Getter for Entity Invulnerability\ndiff --git a/Bukkit-Patches/0018-Add-respawn-API.patch b/Bukkit-Patches/0018-Add-respawn-API.patch\nindex 19219ce58..494285ffe 100644\n--- a/Bukkit-Patches/0018-Add-respawn-API.patch\n+++ b/Bukkit-Patches/0018-Add-respawn-API.patch\n@@ -1,11 +1,11 @@\n-From 0404f576113f57a2c7f605935b5c9296f9a5b0a9 Mon Sep 17 00:00:00 2001\n+From 69c9fcf3b9cf8b0130d1deda78b36aaded807720 Mon Sep 17 00:00:00 2001\n From: ninja- <xninja@openmailbox.org>\n Date: Tue, 8 Oct 2013 14:35:58 +0200\n Subject: [PATCH] Add respawn API.\n \n \n diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java\n-index 1c80bd2..adef230 100644\n+index 55681ff..5a8c13e 100644\n --- a/src/main/java/org/bukkit/entity/Player.java\n +++ b/src/main/java/org/bukkit/entity/Player.java\n @@ -1059,6 +1059,14 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline\ndiff --git a/Bukkit-Patches/0019-Fix-Plugin-Message-API-Disconnects.patch b/Bukkit-Patches/0019-Fix-Plugin-Message-API-Disconnects.patch\nindex 5362dd3f1..ba7da4481 100644\n--- a/Bukkit-Patches/0019-Fix-Plugin-Message-API-Disconnects.patch\n+++ b/Bukkit-Patches/0019-Fix-Plugin-Message-API-Disconnects.patch\n@@ -1,4 +1,4 @@\n-From 8e6a3caa62c4b17bdc9d2994201a51af8f3b7026 Mon Sep 17 00:00:00 2001\n+From eef94addd975a73d35545f162b33c192290c15b7 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 19 Oct 2013 12:59:42 +1100\n Subject: [PATCH] Fix Plugin Message API Disconnects\ndiff --git a/Bukkit-Patches/0020-Fix-Tab-Completion-for-Some-Commands.patch b/Bukkit-Patches/0020-Fix-Tab-Completion-for-Some-Commands.patch\nindex ddf980dbd..b73beac00 100644\n--- a/Bukkit-Patches/0020-Fix-Tab-Completion-for-Some-Commands.patch\n+++ b/Bukkit-Patches/0020-Fix-Tab-Completion-for-Some-Commands.patch\n@@ -1,4 +1,4 @@\n-From 600904b4ab7510e3a9915305e720122073b7064b Mon Sep 17 00:00:00 2001\n+From 7962f8977790ecd6de241dff015c3d105984ff14 Mon Sep 17 00:00:00 2001\n From: md_5 <git@md-5.net>\n Date: Tue, 24 Dec 2013 10:14:25 +1100\n Subject: [PATCH] Fix Tab Completion for Some Commands\n@@ -81,5 +81,5 @@ index c9ac1ce..a687fef 100644\n +    // Spigot End\n  }\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/Bukkit-Patches/0021-Add-Spigot-Links.patch b/Bukkit-Patches/0021-Add-Spigot-Links.patch\nindex d4526f02e..116074ace 100644\n--- a/Bukkit-Patches/0021-Add-Spigot-Links.patch\n+++ b/Bukkit-Patches/0021-Add-Spigot-Links.patch\n@@ -1,4 +1,4 @@\n-From 250fe28a27eff40f1725c1cf1384f06551e76dea Mon Sep 17 00:00:00 2001\n+From a4659b2634e53721ab1f46d0539415c1bbf290e4 Mon Sep 17 00:00:00 2001\n From: md_5 <git@md-5.net>\n Date: Thu, 23 Jan 2014 13:17:38 +1100\n Subject: [PATCH] Add Spigot Links\n@@ -25,5 +25,5 @@ index a51766e..1905b8d 100644\n  Compilation\n  -----------\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/Bukkit-Patches/0022-Implement-Locale-Getter-for-Players.patch b/Bukkit-Patches/0022-Implement-Locale-Getter-for-Players.patch\nindex 2f9d7c565..d48776123 100644\n--- a/Bukkit-Patches/0022-Implement-Locale-Getter-for-Players.patch\n+++ b/Bukkit-Patches/0022-Implement-Locale-Getter-for-Players.patch\n@@ -1,4 +1,4 @@\n-From 84f288a09f1bd1e57582a8cdab93a413a0cef7e0 Mon Sep 17 00:00:00 2001\n+From 2994d06fa87fd2535a7b464b7a041e2c5c8e9dab Mon Sep 17 00:00:00 2001\n From: Smove <jan@lavasurvival.net>\n Date: Sat, 1 Feb 2014 18:10:49 +1100\n Subject: [PATCH] Implement Locale Getter for Players\n@@ -26,5 +26,5 @@ index 5a8c13e..204c4b2 100644\n  \n      Spigot spigot();\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/Bukkit-Patches/0023-Add-support-for-fetching-hidden-players.patch b/Bukkit-Patches/0023-Add-support-for-fetching-hidden-players.patch\nindex 20ed7ad3e..33055aba2 100644\n--- a/Bukkit-Patches/0023-Add-support-for-fetching-hidden-players.patch\n+++ b/Bukkit-Patches/0023-Add-support-for-fetching-hidden-players.patch\n@@ -1,4 +1,4 @@\n-From 874417c9a73472f62a4ba3bfbeac8db77d0831eb Mon Sep 17 00:00:00 2001\n+From 4a752151018a3b7fe29c65482b3dff42776c0155 Mon Sep 17 00:00:00 2001\n From: Tux <write@imaginarycode.com>\n Date: Sun, 9 Feb 2014 14:02:11 -0500\n Subject: [PATCH] Add support for fetching hidden players\n@@ -26,5 +26,5 @@ index 204c4b2..6237663 100644\n  \n      Spigot spigot();\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/Bukkit-Patches/0024-Silenceable-Lightning-API.patch b/Bukkit-Patches/0024-Silenceable-Lightning-API.patch\nindex ede65e3ba..186f2c586 100644\n--- a/Bukkit-Patches/0024-Silenceable-Lightning-API.patch\n+++ b/Bukkit-Patches/0024-Silenceable-Lightning-API.patch\n@@ -1,4 +1,4 @@\n-From e296443703879cb13a4523119a24d123d6116f90 Mon Sep 17 00:00:00 2001\n+From ee7e81c4564a2917dbf3432275366f1e0a0d5eba Mon Sep 17 00:00:00 2001\n From: drXor <mcyoungsota@gmail.com>\n Date: Sun, 23 Feb 2014 16:16:29 -0400\n Subject: [PATCH] Silenceable Lightning API\n@@ -66,5 +66,5 @@ index c8b5154..1ed4ac9 100644\n +    Spigot spigot();\n  }\n -- \n-1.8.5.2.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0001-POM-Changes.patch b/CraftBukkit-Patches/0001-POM-Changes.patch\nindex ca4f51c30..92d7784db 100644\n--- a/CraftBukkit-Patches/0001-POM-Changes.patch\n+++ b/CraftBukkit-Patches/0001-POM-Changes.patch\n@@ -1,4 +1,4 @@\n-From 7b88347fa436856bff54d6f6a10bbad8e4941e5e Mon Sep 17 00:00:00 2001\n+From 068c237f30a7efb3a384d5f9d74de9f11066d9b7 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Tue, 2 Jul 2013 13:07:39 +1000\n Subject: [PATCH] POM Changes\n@@ -168,5 +168,5 @@ index f905d17..9304637 100644\n  \n          if (stream != null) {\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0002-mc-dev-imports.patch b/CraftBukkit-Patches/0002-mc-dev-imports.patch\nindex 2f1e17a39..0ec142da4 100644\n--- a/CraftBukkit-Patches/0002-mc-dev-imports.patch\n+++ b/CraftBukkit-Patches/0002-mc-dev-imports.patch\n@@ -1,4 +1,4 @@\n-From 944e2150034a80c046ca0651cdf53d7cdf7e0b7f Mon Sep 17 00:00:00 2001\n+From a7f103fcbb778d58ff85a1897bfa9ea3f1b01405 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 1 Dec 2013 15:10:48 +1100\n Subject: [PATCH] mc-dev imports\ndiff --git a/CraftBukkit-Patches/0003-Skeleton-API-Implementations.patch b/CraftBukkit-Patches/0003-Skeleton-API-Implementations.patch\nindex 743393137..6435dc202 100644\n--- a/CraftBukkit-Patches/0003-Skeleton-API-Implementations.patch\n+++ b/CraftBukkit-Patches/0003-Skeleton-API-Implementations.patch\n@@ -1,4 +1,4 @@\n-From ec47c27cbee89a54bc68d4fa7b25b86653034326 Mon Sep 17 00:00:00 2001\n+From f0d4c7aafa4fd50151977532530e35b70a88d2fe Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 2 Jun 2013 15:10:56 +1000\n Subject: [PATCH] Skeleton API Implementations\n@@ -84,5 +84,5 @@ index 60b0435..573f9a5 100644\n +    // Spigot end\n  }\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0004-Spigot-Configuration.patch b/CraftBukkit-Patches/0004-Spigot-Configuration.patch\nindex 9b453ee60..e56a1fd11 100644\n--- a/CraftBukkit-Patches/0004-Spigot-Configuration.patch\n+++ b/CraftBukkit-Patches/0004-Spigot-Configuration.patch\n@@ -1,4 +1,4 @@\n-From 1c7ef189534ecaf5de7bdcc9db234088c7dc172e Mon Sep 17 00:00:00 2001\n+From e93ba24d7e89f1a942518b90ae962db720e0a48b Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 7 Jul 2013 09:32:53 +1000\n Subject: [PATCH] Spigot Configuration\n@@ -297,5 +297,5 @@ index 0000000..961ddb4\n +    }\n +}\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0005-Better-Chunk-Tick-Selection.patch b/CraftBukkit-Patches/0005-Better-Chunk-Tick-Selection.patch\nindex c420ad067..7765f6013 100644\n--- a/CraftBukkit-Patches/0005-Better-Chunk-Tick-Selection.patch\n+++ b/CraftBukkit-Patches/0005-Better-Chunk-Tick-Selection.patch\n@@ -1,4 +1,4 @@\n-From fbc8819e3a23876e68abe0c2d8e225a8d1ea2657 Mon Sep 17 00:00:00 2001\n+From 7ef1e71a186d42b87ba3245cbf5199604594ebc7 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Tue, 11 Jun 2013 12:56:02 +1000\n Subject: [PATCH] Better Chunk Tick Selection\n@@ -165,7 +165,7 @@ index b9b967f..3a8856d 100644\n  \n      public boolean a(int i, int j, int k, Block block) {\n diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n-index 961ddb4..6ba7f5c 100644\n+index 961ddb4..90a227f 100644\n --- a/src/main/java/org/spigotmc/SpigotWorldConfig.java\n +++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n @@ -68,4 +68,15 @@ public class SpigotWorldConfig\n@@ -185,5 +185,5 @@ index 961ddb4..6ba7f5c 100644\n +    }\n  }\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0006-Crop-Growth-Rates.patch b/CraftBukkit-Patches/0006-Crop-Growth-Rates.patch\nindex 47dc9e9ab..99a2e510d 100644\n--- a/CraftBukkit-Patches/0006-Crop-Growth-Rates.patch\n+++ b/CraftBukkit-Patches/0006-Crop-Growth-Rates.patch\n@@ -1,4 +1,4 @@\n-From 9191ae50b72b0425168cc5e4a011533fa8e35a85 Mon Sep 17 00:00:00 2001\n+From dea7b29300a40eb45392df388b7e7c2c49e098ce Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Fri, 21 Jun 2013 17:17:20 +1000\n Subject: [PATCH] Crop Growth Rates\ndiff --git a/CraftBukkit-Patches/0007-More-Efficient-Chunk-Save-Queue.patch b/CraftBukkit-Patches/0007-More-Efficient-Chunk-Save-Queue.patch\nindex d045786b9..5f023a998 100644\n--- a/CraftBukkit-Patches/0007-More-Efficient-Chunk-Save-Queue.patch\n+++ b/CraftBukkit-Patches/0007-More-Efficient-Chunk-Save-Queue.patch\n@@ -1,4 +1,4 @@\n-From 3b7ea48f1ad5cdd184fd718356141793eb7409f4 Mon Sep 17 00:00:00 2001\n+From 7411c0dc59ef739de9b28c5d526962c65f39692c Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Tue, 11 Jun 2013 12:09:45 +1000\n Subject: [PATCH] More Efficient Chunk Save Queue\ndiff --git a/CraftBukkit-Patches/0008-Merge-tweaks-and-configuration.patch b/CraftBukkit-Patches/0008-Merge-tweaks-and-configuration.patch\nindex 6a8ea2ce4..a7265553b 100644\n--- a/CraftBukkit-Patches/0008-Merge-tweaks-and-configuration.patch\n+++ b/CraftBukkit-Patches/0008-Merge-tweaks-and-configuration.patch\n@@ -1,4 +1,4 @@\n-From 3499d77354a84df9ce6e49d5dba39a0a471b3ff8 Mon Sep 17 00:00:00 2001\n+From d5dbd54e27e10e47e7efa1537a9e90d322d79762 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 23 Mar 2013 09:46:33 +1100\n Subject: [PATCH] Merge tweaks and configuration\n@@ -41,7 +41,7 @@ index bbcf674..08b9ac8 100644\n              }\n          } else {\n diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java\n-index 53ab411..d90d5a4 100644\n+index 069db6a..164d268 100644\n --- a/src/main/java/net/minecraft/server/World.java\n +++ b/src/main/java/net/minecraft/server/World.java\n @@ -934,6 +934,23 @@ public abstract class World implements IBlockAccess {\n@@ -69,7 +69,7 @@ index 53ab411..d90d5a4 100644\n          if (event != null && (event.isCancelled() || entity.dead)) {\n              entity.dead = true;\n diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n-index ddca7c3..185442a 100644\n+index 7e79ba5..1545a61 100644\n --- a/src/main/java/org/spigotmc/SpigotWorldConfig.java\n +++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n @@ -110,4 +110,18 @@ public class SpigotWorldConfig\ndiff --git a/CraftBukkit-Patches/0009-LongHash-Tweaks.patch b/CraftBukkit-Patches/0009-LongHash-Tweaks.patch\nindex d56b16f3a..ca442af2b 100644\n--- a/CraftBukkit-Patches/0009-LongHash-Tweaks.patch\n+++ b/CraftBukkit-Patches/0009-LongHash-Tweaks.patch\n@@ -1,4 +1,4 @@\n-From 47bd527ed32a447831c4fe2feeaf11e28f00e960 Mon Sep 17 00:00:00 2001\n+From 3f339b0dcd3c969217de62f35d7f2c3cdf8dd7a2 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Fri, 21 Jun 2013 17:13:47 +1000\n Subject: [PATCH] LongHash Tweaks\ndiff --git a/CraftBukkit-Patches/0010-Async-Operation-Catching.patch b/CraftBukkit-Patches/0010-Async-Operation-Catching.patch\nindex d758f8c25..056fd2285 100644\n--- a/CraftBukkit-Patches/0010-Async-Operation-Catching.patch\n+++ b/CraftBukkit-Patches/0010-Async-Operation-Catching.patch\n@@ -1,4 +1,4 @@\n-From 6becf979e8c6efa451679528a63a9416a44ac337 Mon Sep 17 00:00:00 2001\n+From ac2e43846d8af2209154832a747057ea92c06360 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Thu, 7 Mar 2013 20:12:46 +1100\n Subject: [PATCH] Async Operation Catching\n@@ -146,5 +146,5 @@ index 84091a4..2f30d66 100644\n          scoreboards.add(scoreboard);\n          return scoreboard;\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0011-View-Distance.patch b/CraftBukkit-Patches/0011-View-Distance.patch\nindex 87cd55f27..e32952b4b 100644\n--- a/CraftBukkit-Patches/0011-View-Distance.patch\n+++ b/CraftBukkit-Patches/0011-View-Distance.patch\n@@ -1,4 +1,4 @@\n-From 6a5b7f6ba565726739616f685d89593fa5862aa6 Mon Sep 17 00:00:00 2001\n+From 6a58e4e8573a8e73b0e8e729aeefa77d45e40460 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 23 Mar 2013 09:52:41 +1100\n Subject: [PATCH] View Distance\n@@ -32,7 +32,7 @@ index 3a8856d..a0e4ade 100644\n              this.entitiesById = new IntHashMap();\n          }\n diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n-index 185442a..15b2ac8 100644\n+index 1545a61..6cc3a91 100644\n --- a/src/main/java/org/spigotmc/SpigotWorldConfig.java\n +++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n @@ -124,4 +124,11 @@ public class SpigotWorldConfig\ndiff --git a/CraftBukkit-Patches/0012-Compressed-Nibble-Arrays.patch b/CraftBukkit-Patches/0012-Compressed-Nibble-Arrays.patch\nindex ba822d04a..387d1b6bc 100644\n--- a/CraftBukkit-Patches/0012-Compressed-Nibble-Arrays.patch\n+++ b/CraftBukkit-Patches/0012-Compressed-Nibble-Arrays.patch\n@@ -1,4 +1,4 @@\n-From 4017c1c6dcc7eff0b93bec0de5f21279ebc29471 Mon Sep 17 00:00:00 2001\n+From 0a13c4fb7028e62e617345314f93e3c2f06e4971 Mon Sep 17 00:00:00 2001\n From: Mike Primm <mike@primmhome.com>\n Date: Sun, 13 Jan 2013 03:49:07 -0800\n Subject: [PATCH] Compressed Nibble Arrays\ndiff --git a/CraftBukkit-Patches/0013-Sync-Free-Chunk-Reference-Cache.patch b/CraftBukkit-Patches/0013-Sync-Free-Chunk-Reference-Cache.patch\nindex 9bbd69c10..524fc1015 100644\n--- a/CraftBukkit-Patches/0013-Sync-Free-Chunk-Reference-Cache.patch\n+++ b/CraftBukkit-Patches/0013-Sync-Free-Chunk-Reference-Cache.patch\n@@ -1,11 +1,11 @@\n-From 78a32c982fa003401ef5b2bd3c0746786d6dec3b Mon Sep 17 00:00:00 2001\n+From 169447a7a0e925513abad8881724e627b6e0f4a1 Mon Sep 17 00:00:00 2001\n From: Mike Primm <mike@primmhome.com>\n Date: Wed, 16 Jan 2013 15:27:22 -0600\n Subject: [PATCH] Sync Free Chunk Reference Cache\n \n \n diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java\n-index 1381660..00c2a18 100644\n+index e26ba96..3d7aa71 100644\n --- a/src/main/java/net/minecraft/server/World.java\n +++ b/src/main/java/net/minecraft/server/World.java\n @@ -292,20 +292,18 @@ public abstract class World implements IBlockAccess {\ndiff --git a/CraftBukkit-Patches/0014-Improved-Timings-System.patch b/CraftBukkit-Patches/0014-Improved-Timings-System.patch\nindex ead1c3ec3..c2ff2056d 100644\n--- a/CraftBukkit-Patches/0014-Improved-Timings-System.patch\n+++ b/CraftBukkit-Patches/0014-Improved-Timings-System.patch\n@@ -1,4 +1,4 @@\n-From 6e61672fd09bf2cd90e4d3a7cd3f185dddd64b09 Mon Sep 17 00:00:00 2001\n+From 83cc70ebbad10d6e03feab85177ce37e5dda3ff0 Mon Sep 17 00:00:00 2001\n From: Aikar <aikar@aikar.co>\n Date: Thu, 10 Jan 2013 00:18:11 -0500\n Subject: [PATCH] Improved Timings System\n@@ -547,5 +547,5 @@ index 55db3ff..7d294c0 100644\n      }\n  \n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0015-Fix-Mob-Spawning-Relative-to-View-Distance.patch b/CraftBukkit-Patches/0015-Fix-Mob-Spawning-Relative-to-View-Distance.patch\nindex 88ba54420..76faa9050 100644\n--- a/CraftBukkit-Patches/0015-Fix-Mob-Spawning-Relative-to-View-Distance.patch\n+++ b/CraftBukkit-Patches/0015-Fix-Mob-Spawning-Relative-to-View-Distance.patch\n@@ -1,4 +1,4 @@\n-From 443ccbbd5642797eb7374259c740e6ba2c417001 Mon Sep 17 00:00:00 2001\n+From 612cd6c0fdb1c4a0a7e1e3ad04b099554eecda7c Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Fri, 21 Jun 2013 17:29:54 +1000\n Subject: [PATCH] Fix Mob Spawning Relative to View Distance\n@@ -135,7 +135,7 @@ index f514b78..3f0dd70 100644\n                                                                      continue label110;\n                                                                  }\n diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n-index 15b2ac8..49a5b7a 100644\n+index 6cc3a91..46249d7 100644\n --- a/src/main/java/org/spigotmc/SpigotWorldConfig.java\n +++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n @@ -131,4 +131,11 @@ public class SpigotWorldConfig\ndiff --git a/CraftBukkit-Patches/0016-Handle-Null-Tile-Entities.patch b/CraftBukkit-Patches/0016-Handle-Null-Tile-Entities.patch\nindex ffa06adfc..ccfec56c2 100644\n--- a/CraftBukkit-Patches/0016-Handle-Null-Tile-Entities.patch\n+++ b/CraftBukkit-Patches/0016-Handle-Null-Tile-Entities.patch\n@@ -1,4 +1,4 @@\n-From f4eb04cc282a3a666f4e86bf088ba98aa0597eca Mon Sep 17 00:00:00 2001\n+From fe83054f2999951673b07d23e2b94f468999e801 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 3 Feb 2013 09:20:19 +1100\n Subject: [PATCH] Handle Null Tile Entities\n@@ -23,5 +23,5 @@ index e64658d..99345a1 100644\n              ChunkProviderServer chunkProviderServer = ((WorldServer) this).chunkProviderServer;\n              if (chunkProviderServer.unloadQueue.contains(tileentity.x >> 4, tileentity.z >> 4)) {\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0017-Entity-Activation-Range.patch b/CraftBukkit-Patches/0017-Entity-Activation-Range.patch\nindex 8184acd15..f91184392 100644\n--- a/CraftBukkit-Patches/0017-Entity-Activation-Range.patch\n+++ b/CraftBukkit-Patches/0017-Entity-Activation-Range.patch\n@@ -1,4 +1,4 @@\n-From 77e202f4ea13d8ed1ce371a310ed4c6ca8ad6bb0 Mon Sep 17 00:00:00 2001\n+From 58c5ce437abf82cbde87209dc095c6574c9e6d9c Mon Sep 17 00:00:00 2001\n From: Aikar <aikar@aikar.co>\n Date: Sun, 3 Feb 2013 05:10:21 -0500\n Subject: [PATCH] Entity Activation Range\n@@ -457,7 +457,7 @@ index 0000000..db4c927\n +    }\n +}\n diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n-index 49a5b7a..1d95207 100644\n+index 46249d7..ed2836a 100644\n --- a/src/main/java/org/spigotmc/SpigotWorldConfig.java\n +++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n @@ -138,4 +138,15 @@ public class SpigotWorldConfig\n@@ -477,5 +477,5 @@ index 49a5b7a..1d95207 100644\n +    }\n  }\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0018-Metrics.patch b/CraftBukkit-Patches/0018-Metrics.patch\nindex 5777b96bb..56b1067ba 100644\n--- a/CraftBukkit-Patches/0018-Metrics.patch\n+++ b/CraftBukkit-Patches/0018-Metrics.patch\n@@ -1,4 +1,4 @@\n-From def224a4cb38f7e7d7bdfd97a09b0c3c66aaafca Mon Sep 17 00:00:00 2001\n+From a0e2332af7b542884f88ddf99de0c70a192cf6f8 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 23 Feb 2013 08:58:35 +1100\n Subject: [PATCH] Metrics\ndiff --git a/CraftBukkit-Patches/0019-PlayerItemDamageEvent.patch b/CraftBukkit-Patches/0019-PlayerItemDamageEvent.patch\nindex e2233f12e..d66995e4d 100644\n--- a/CraftBukkit-Patches/0019-PlayerItemDamageEvent.patch\n+++ b/CraftBukkit-Patches/0019-PlayerItemDamageEvent.patch\n@@ -1,4 +1,4 @@\n-From a1d3c98851e0b823ed74e25dd5b587bdbd5f36eb Mon Sep 17 00:00:00 2001\n+From 5f0a6329491a0166813080c81bbb90ddfe99d6c7 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Mon, 4 Mar 2013 18:45:52 +1100\n Subject: [PATCH] PlayerItemDamageEvent\ndiff --git a/CraftBukkit-Patches/0020-Faster-UUID-for-entities.patch b/CraftBukkit-Patches/0020-Faster-UUID-for-entities.patch\nindex aaf56f57a..c132abcea 100644\n--- a/CraftBukkit-Patches/0020-Faster-UUID-for-entities.patch\n+++ b/CraftBukkit-Patches/0020-Faster-UUID-for-entities.patch\n@@ -1,4 +1,4 @@\n-From 1bb989ea03ed1de28c3350d7a19e5695f62b5915 Mon Sep 17 00:00:00 2001\n+From 2607242de7af3f5c8bcc3f643c7817c8b4c41683 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 17 Mar 2013 19:02:50 +1100\n Subject: [PATCH] Faster UUID for entities\n@@ -19,5 +19,5 @@ index adf20d9..43fee78 100644\n          this.world = world;\n          this.setPosition(0.0D, 0.0D, 0.0D);\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0021-Prevent-NPE-in-CraftSign.patch b/CraftBukkit-Patches/0021-Prevent-NPE-in-CraftSign.patch\nindex 0c45b368b..5a0c63f55 100644\n--- a/CraftBukkit-Patches/0021-Prevent-NPE-in-CraftSign.patch\n+++ b/CraftBukkit-Patches/0021-Prevent-NPE-in-CraftSign.patch\n@@ -1,4 +1,4 @@\n-From b39026df75e6dfd9e8f3110088c438babad87931 Mon Sep 17 00:00:00 2001\n+From 33587a89e702d0898fbdc810a883aefa6fb7d321 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Mon, 18 Mar 2013 20:01:44 +1100\n Subject: [PATCH] Prevent NPE in CraftSign\ndiff --git a/CraftBukkit-Patches/0022-Entity-Tracking-Ranges.patch b/CraftBukkit-Patches/0022-Entity-Tracking-Ranges.patch\nindex d16f6ce42..d958cc147 100644\n--- a/CraftBukkit-Patches/0022-Entity-Tracking-Ranges.patch\n+++ b/CraftBukkit-Patches/0022-Entity-Tracking-Ranges.patch\n@@ -1,4 +1,4 @@\n-From 6dffe591a8463b5525a743b97af91e479e4b2e47 Mon Sep 17 00:00:00 2001\n+From 8b7fcf347ebe03ae3ed45d5335bff52a713c0022 Mon Sep 17 00:00:00 2001\n From: Aikar <aikar@aikar.co>\n Date: Wed, 20 Feb 2013 11:58:47 -0500\n Subject: [PATCH] Entity Tracking Ranges\n@@ -24,7 +24,7 @@ index 97d0bbb..fc679ae 100644\n              i = this.e;\n          }\n diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n-index 1d95207..de221d9 100644\n+index ed2836a..6421bf2 100644\n --- a/src/main/java/org/spigotmc/SpigotWorldConfig.java\n +++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n @@ -149,4 +149,19 @@ public class SpigotWorldConfig\n@@ -105,5 +105,5 @@ index 0000000..4bf4d2a\n +    }\n +}\n -- \n-1.8.5.2.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0023-Limit-Custom-Map-Rendering.patch b/CraftBukkit-Patches/0023-Limit-Custom-Map-Rendering.patch\nindex f96d82812..6c4a7d491 100644\n--- a/CraftBukkit-Patches/0023-Limit-Custom-Map-Rendering.patch\n+++ b/CraftBukkit-Patches/0023-Limit-Custom-Map-Rendering.patch\n@@ -1,4 +1,4 @@\n-From 47d180eac9a5d06287a2cad611a6c586a2a707df Mon Sep 17 00:00:00 2001\n+From bceef7be7c61e117d00e935f7ef2c7b62a88cdfa Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 23 Mar 2013 19:08:41 +1100\n Subject: [PATCH] Limit Custom Map Rendering\ndiff --git a/CraftBukkit-Patches/0024-Enable-Improved-Ping-Sending.patch b/CraftBukkit-Patches/0024-Enable-Improved-Ping-Sending.patch\nindex 910085428..b2de73b9a 100644\n--- a/CraftBukkit-Patches/0024-Enable-Improved-Ping-Sending.patch\n+++ b/CraftBukkit-Patches/0024-Enable-Improved-Ping-Sending.patch\n@@ -1,4 +1,4 @@\n-From 9423d32845eb0479a9049335fb2157dcbf4a6210 Mon Sep 17 00:00:00 2001\n+From a73d0e968d95897084264e10a5b57e20226b88c0 Mon Sep 17 00:00:00 2001\n From: Aikar <aikar@aikar.co>\n Date: Sun, 24 Feb 2013 20:45:20 +1100\n Subject: [PATCH] Enable Improved Ping Sending\n@@ -47,5 +47,5 @@ index 4383275..fa3e65c 100644\n  \n      public void sendAll(Packet packet) {\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0025-Thread-Naming-and-Tweaks.patch b/CraftBukkit-Patches/0025-Thread-Naming-and-Tweaks.patch\nindex e20e7c74c..5892d480d 100644\n--- a/CraftBukkit-Patches/0025-Thread-Naming-and-Tweaks.patch\n+++ b/CraftBukkit-Patches/0025-Thread-Naming-and-Tweaks.patch\n@@ -1,4 +1,4 @@\n-From a62448bf0ffb755f40a58adc1f6263d9d105b524 Mon Sep 17 00:00:00 2001\n+From 989b6eb61364f84235201eeba8e6530b04cd957d Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Tue, 23 Apr 2013 11:50:27 +1000\n Subject: [PATCH] Thread Naming and Tweaks\ndiff --git a/CraftBukkit-Patches/0026-Close-Unloaded-Save-Files.patch b/CraftBukkit-Patches/0026-Close-Unloaded-Save-Files.patch\nindex 4b76730ee..2dd0632f5 100644\n--- a/CraftBukkit-Patches/0026-Close-Unloaded-Save-Files.patch\n+++ b/CraftBukkit-Patches/0026-Close-Unloaded-Save-Files.patch\n@@ -1,4 +1,4 @@\n-From 0682f59ec48b7d41a006eaa45c87a34fc93b12a4 Mon Sep 17 00:00:00 2001\n+From 44507e4be847adb34ed737e42b870c86dac70706 Mon Sep 17 00:00:00 2001\n From: Antony Riley <antony@cyberiantiger.org>\n Date: Wed, 27 Mar 2013 01:41:54 +0200\n Subject: [PATCH] Close Unloaded Save Files\n@@ -62,5 +62,5 @@ index 4d46178..2d46aca 100644\n      }\n  \n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0027-Remove-o-Option.patch b/CraftBukkit-Patches/0027-Remove-o-Option.patch\nindex eefd17255..6432b9474 100644\n--- a/CraftBukkit-Patches/0027-Remove-o-Option.patch\n+++ b/CraftBukkit-Patches/0027-Remove-o-Option.patch\n@@ -1,4 +1,4 @@\n-From f06705bc41d4f4406c29bbed39ce22439ded5b7c Mon Sep 17 00:00:00 2001\n+From 0d7baac82b5fcb65c088dcc8d094a65c709c1c2a Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 19 May 2013 18:29:48 +1000\n Subject: [PATCH] Remove -o Option\ndiff --git a/CraftBukkit-Patches/0028-Recipe-Deconstruction.patch b/CraftBukkit-Patches/0028-Recipe-Deconstruction.patch\nindex 0505ec842..782009e84 100644\n--- a/CraftBukkit-Patches/0028-Recipe-Deconstruction.patch\n+++ b/CraftBukkit-Patches/0028-Recipe-Deconstruction.patch\n@@ -1,4 +1,4 @@\n-From 1a282beb73506a12021b477ce5b9edf58f410474 Mon Sep 17 00:00:00 2001\n+From a7301b6b770eacc5acc9a0d84ca2ec414668fae2 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 1 Jun 2013 16:34:38 +1000\n Subject: [PATCH] Recipe Deconstruction\ndiff --git a/CraftBukkit-Patches/0029-Implement-Arrow-API.patch b/CraftBukkit-Patches/0029-Implement-Arrow-API.patch\nindex 6b60a88ca..aa67aed85 100644\n--- a/CraftBukkit-Patches/0029-Implement-Arrow-API.patch\n+++ b/CraftBukkit-Patches/0029-Implement-Arrow-API.patch\n@@ -1,4 +1,4 @@\n-From a20bd8901bb291e21f5dbb4f64b3f34267c00baa Mon Sep 17 00:00:00 2001\n+From 600bca74eebc7d90ec9c9e4e8424618ae498ae36 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 2 Jun 2013 15:16:05 +1000\n Subject: [PATCH] Implement Arrow API\n@@ -27,5 +27,5 @@ index 328c73f..839b88e 100644\n  \n      public Arrow.Spigot spigot()\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0030-Hopper-Cooldowns.patch b/CraftBukkit-Patches/0030-Hopper-Cooldowns.patch\nindex bbcf3194a..011ee700a 100644\n--- a/CraftBukkit-Patches/0030-Hopper-Cooldowns.patch\n+++ b/CraftBukkit-Patches/0030-Hopper-Cooldowns.patch\n@@ -1,4 +1,4 @@\n-From 3e8d2dd58e10a6f8c1b2f0651b5de5a8a12b023b Mon Sep 17 00:00:00 2001\n+From 6fb97ec7f1afb39d11913faae8462d268e2542ff Mon Sep 17 00:00:00 2001\n From: erocs <github@erocs.org>\n Date: Sun, 8 Sep 2013 12:06:15 -0700\n Subject: [PATCH] Hopper Cooldowns\n@@ -59,7 +59,7 @@ index 730eb78..a68b748 100644\n                  }\n  \n diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n-index de221d9..19f4afd 100644\n+index 6421bf2..827e6f9 100644\n --- a/src/main/java/org/spigotmc/SpigotWorldConfig.java\n +++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n @@ -164,4 +164,17 @@ public class SpigotWorldConfig\n@@ -81,5 +81,5 @@ index de221d9..19f4afd 100644\n +    }\n  }\n -- \n-1.8.5.2.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0031-Prevent-Shutdown-Hang.patch b/CraftBukkit-Patches/0031-Prevent-Shutdown-Hang.patch\nindex e3b4ff190..ec85846a3 100644\n--- a/CraftBukkit-Patches/0031-Prevent-Shutdown-Hang.patch\n+++ b/CraftBukkit-Patches/0031-Prevent-Shutdown-Hang.patch\n@@ -1,4 +1,4 @@\n-From 4bf71722086d0436e249d4bd1db5fb205860a99f Mon Sep 17 00:00:00 2001\n+From 73b525dd39781dca706193081dc4abd689c59ba9 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Tue, 11 Jun 2013 11:54:32 +1000\n Subject: [PATCH] Prevent Shutdown Hang\n@@ -28,5 +28,5 @@ index fa3e65c..b6a3d2b 100644\n      }\n  \n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0032-Implement-SpawnerSpawnEvent.patch b/CraftBukkit-Patches/0032-Implement-SpawnerSpawnEvent.patch\nindex eeb33874d..bdacd8391 100644\n--- a/CraftBukkit-Patches/0032-Implement-SpawnerSpawnEvent.patch\n+++ b/CraftBukkit-Patches/0032-Implement-SpawnerSpawnEvent.patch\n@@ -1,4 +1,4 @@\n-From 887954f469d99c0dd5f8b7c5bb71f0ba1216f820 Mon Sep 17 00:00:00 2001\n+From 7ccd533bb222ab768011597b908ee3184242a99d Mon Sep 17 00:00:00 2001\n From: Andy Shulman <andy.shulman@hotmail.com>\n Date: Mon, 15 Apr 2013 20:06:37 -0500\n Subject: [PATCH] Implement SpawnerSpawnEvent.\ndiff --git a/CraftBukkit-Patches/0033-Firework-Meta-Crash-Fix.patch b/CraftBukkit-Patches/0033-Firework-Meta-Crash-Fix.patch\nindex 78f44b8f8..e4b1a2f50 100644\n--- a/CraftBukkit-Patches/0033-Firework-Meta-Crash-Fix.patch\n+++ b/CraftBukkit-Patches/0033-Firework-Meta-Crash-Fix.patch\n@@ -1,4 +1,4 @@\n-From a323a8c99f24a6eb9e7be9fafed35d373384d557 Mon Sep 17 00:00:00 2001\n+From 6fd6fe221af342ea5ca043a5c2ff8f4122e5b5e4 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 15 Jun 2013 21:34:48 +1000\n Subject: [PATCH] Firework Meta Crash Fix\ndiff --git a/CraftBukkit-Patches/0034-Do-Not-Search-for-Offline-Players.patch b/CraftBukkit-Patches/0034-Do-Not-Search-for-Offline-Players.patch\nindex 7d636926d..a485e85e7 100644\n--- a/CraftBukkit-Patches/0034-Do-Not-Search-for-Offline-Players.patch\n+++ b/CraftBukkit-Patches/0034-Do-Not-Search-for-Offline-Players.patch\n@@ -1,4 +1,4 @@\n-From 3b83e492c658d49603312c630335769cfc5fd5f4 Mon Sep 17 00:00:00 2001\n+From 22adabeeb54ee7a3b3a635d14119c7f3fbd6c47a Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 16 Jun 2013 08:20:26 +1000\n Subject: [PATCH] Do Not Search for Offline Players\n@@ -19,5 +19,5 @@ index 2d46aca..c3e6f82 100644\n  \n      public OfflinePlayer getOfflinePlayer(String name, boolean search) {\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0035-Allow-Disabling-of-Command-Logging.patch b/CraftBukkit-Patches/0035-Allow-Disabling-of-Command-Logging.patch\nindex 6b4b6796a..742211a1e 100644\n--- a/CraftBukkit-Patches/0035-Allow-Disabling-of-Command-Logging.patch\n+++ b/CraftBukkit-Patches/0035-Allow-Disabling-of-Command-Logging.patch\n@@ -1,4 +1,4 @@\n-From f05c8b683f86064c210af98667e2450558c768cd Mon Sep 17 00:00:00 2001\n+From 65a0ce134a86a9d9212ebe55910cd1bc52e974bd Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Fri, 21 Jun 2013 18:01:29 +1000\n Subject: [PATCH] Allow Disabling of Command Logging\n@@ -38,5 +38,5 @@ index 9aaa09a..4d15f8b 100644\n +    }\n  }\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0036-Allow-Disabling-of-Command-TabComplete.patch b/CraftBukkit-Patches/0036-Allow-Disabling-of-Command-TabComplete.patch\nindex 12388a133..985753091 100644\n--- a/CraftBukkit-Patches/0036-Allow-Disabling-of-Command-TabComplete.patch\n+++ b/CraftBukkit-Patches/0036-Allow-Disabling-of-Command-TabComplete.patch\n@@ -1,4 +1,4 @@\n-From a5a90003a05ff5e0c9bd9dae34573a41eee96394 Mon Sep 17 00:00:00 2001\n+From 0f3df2d03d8f697bc2899cb2eb048622589b997f Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Fri, 21 Jun 2013 18:05:54 +1000\n Subject: [PATCH] Allow Disabling of Command TabComplete\n@@ -38,5 +38,5 @@ index 4d15f8b..8764045 100644\n +    }\n  }\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0037-Configurable-Messages.patch b/CraftBukkit-Patches/0037-Configurable-Messages.patch\nindex fc0a1d91e..e2ff074a6 100644\n--- a/CraftBukkit-Patches/0037-Configurable-Messages.patch\n+++ b/CraftBukkit-Patches/0037-Configurable-Messages.patch\n@@ -1,4 +1,4 @@\n-From c050f22c6fca20680f43cb66f90efffc00bebd3b Mon Sep 17 00:00:00 2001\n+From 1826349b5c9ab932a73f386e92645fab326e5f2b Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Fri, 21 Jun 2013 19:21:58 +1000\n Subject: [PATCH] Configurable Messages\n@@ -103,5 +103,5 @@ index 8764045..0ab2ec3 100644\n +    }\n  }\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0038-Allow-Disabling-of-Random-Lighting-Updates.patch b/CraftBukkit-Patches/0038-Allow-Disabling-of-Random-Lighting-Updates.patch\nindex ef6ef6cc0..758f464fc 100644\n--- a/CraftBukkit-Patches/0038-Allow-Disabling-of-Random-Lighting-Updates.patch\n+++ b/CraftBukkit-Patches/0038-Allow-Disabling-of-Random-Lighting-Updates.patch\n@@ -1,4 +1,4 @@\n-From 774ed3fecda98d3dedd42b5116461eb47ecae721 Mon Sep 17 00:00:00 2001\n+From cbea036f18bb91b2a39867c7cac7aa37115d69a2 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 22 Jun 2013 16:12:02 +1000\n Subject: [PATCH] Allow Disabling of Random Lighting Updates\n@@ -31,7 +31,7 @@ index 58eacd2..0eeed14 100644\n              entityhuman = (EntityHuman) this.players.get(i);\n              j = MathHelper.floor(entityhuman.locX) + this.random.nextInt(11) - 5;\n diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n-index 87eac1b..aa639fe 100644\n+index 827e6f9..adebd03 100644\n --- a/src/main/java/org/spigotmc/SpigotWorldConfig.java\n +++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java\n @@ -177,4 +177,11 @@ public class SpigotWorldConfig\n@@ -47,5 +47,5 @@ index 87eac1b..aa639fe 100644\n +    }\n  }\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0039-Make-AnvilInventory.getItem-use-both-containers.-Fix.patch b/CraftBukkit-Patches/0039-Make-AnvilInventory.getItem-use-both-containers.-Fix.patch\nindex fafb15e2a..e28b3fd4f 100644\n--- a/CraftBukkit-Patches/0039-Make-AnvilInventory.getItem-use-both-containers.-Fix.patch\n+++ b/CraftBukkit-Patches/0039-Make-AnvilInventory.getItem-use-both-containers.-Fix.patch\n@@ -1,4 +1,4 @@\n-From 3dae5e1925743d9ebbb0594f53997193fd433561 Mon Sep 17 00:00:00 2001\n+From 0eba7ee76ad5e85588a62176a3d8125e1a3c6b1f Mon Sep 17 00:00:00 2001\n From: Andre LeBlanc <andre@norcode.com>\n Date: Sat, 6 Apr 2013 12:00:31 -0400\n Subject: [PATCH] Make AnvilInventory.getItem() use both containers. Fixes\ndiff --git a/CraftBukkit-Patches/0040-Properly-Close-Inventories.patch b/CraftBukkit-Patches/0040-Properly-Close-Inventories.patch\nindex 5e5cbde2c..2582d7d8b 100644\n--- a/CraftBukkit-Patches/0040-Properly-Close-Inventories.patch\n+++ b/CraftBukkit-Patches/0040-Properly-Close-Inventories.patch\n@@ -1,4 +1,4 @@\n-From 531c8827e96bda948b68adfbd99bac2356acd6e1 Mon Sep 17 00:00:00 2001\n+From 7165eeb678b33e35a3e0fa682598a47ccbcfa4ca Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Thu, 27 Jun 2013 17:26:09 +1000\n Subject: [PATCH] Properly Close Inventories\ndiff --git a/CraftBukkit-Patches/0041-Disallow-Interaction-With-Self.patch b/CraftBukkit-Patches/0041-Disallow-Interaction-With-Self.patch\nindex 3c9f14d89..8776cc448 100644\n--- a/CraftBukkit-Patches/0041-Disallow-Interaction-With-Self.patch\n+++ b/CraftBukkit-Patches/0041-Disallow-Interaction-With-Self.patch\n@@ -1,4 +1,4 @@\n-From 26013a2fda72d27a2a23707b8146d0a0ccb87ab6 Mon Sep 17 00:00:00 2001\n+From 39e2b5b8545a4774bef3fcbc716a95b97dd6a6ae Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Fri, 28 Jun 2013 19:52:54 +1000\n Subject: [PATCH] Disallow Interaction With Self\n@@ -23,5 +23,5 @@ index b281201..e9652a5 100644\n          this.player.w();\n          if (entity != null) {\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0042-Lower-Chunk-Compression.patch b/CraftBukkit-Patches/0042-Lower-Chunk-Compression.patch\nindex 56fcde365..24718b79f 100644\n--- a/CraftBukkit-Patches/0042-Lower-Chunk-Compression.patch\n+++ b/CraftBukkit-Patches/0042-Lower-Chunk-Compression.patch\n@@ -1,4 +1,4 @@\n-From 907223885134524c827404ec8db98e5d0fde28d1 Mon Sep 17 00:00:00 2001\n+From 31d89c1e7d81fcd70a22b062b9f22a0e2ef15179 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Tue, 2 Jul 2013 09:07:54 +1000\n Subject: [PATCH] Lower Chunk Compression\ndiff --git a/CraftBukkit-Patches/0043-Entity-Mount-and-Dismount-Events.patch b/CraftBukkit-Patches/0043-Entity-Mount-and-Dismount-Events.patch\nindex 3391b5d17..f14b5ff52 100644\n--- a/CraftBukkit-Patches/0043-Entity-Mount-and-Dismount-Events.patch\n+++ b/CraftBukkit-Patches/0043-Entity-Mount-and-Dismount-Events.patch\n@@ -1,4 +1,4 @@\n-From ba520c2a1112cd05f754cb7d3d0cc7c4339db980 Mon Sep 17 00:00:00 2001\n+From feff41762ea09e7227d8bb4561621a88321424b0 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Tue, 2 Jul 2013 20:32:49 +1000\n Subject: [PATCH] Entity Mount and Dismount Events\n@@ -47,5 +47,5 @@ index c12a08f..7442943 100644\n              Entity originalVehicle = this.vehicle;\n              // First statement moved down, second statement handled in parent method.\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0044-Prevent-Ghost-Players-Caused-by-Plugins.patch b/CraftBukkit-Patches/0044-Prevent-Ghost-Players-Caused-by-Plugins.patch\nindex aa69e1b6b..99067efef 100644\n--- a/CraftBukkit-Patches/0044-Prevent-Ghost-Players-Caused-by-Plugins.patch\n+++ b/CraftBukkit-Patches/0044-Prevent-Ghost-Players-Caused-by-Plugins.patch\n@@ -1,4 +1,4 @@\n-From 9ce8641a0d9005a3c9df8267ca3bec62b804b01b Mon Sep 17 00:00:00 2001\n+From 0c86513c681cea01a8130302d9836f82eaeb7038 Mon Sep 17 00:00:00 2001\n From: Alex Ciuba <alexciuba@gmail.com>\n Date: Tue, 11 Jun 2013 15:23:03 -0400\n Subject: [PATCH] Prevent Ghost Players Caused by Plugins\n@@ -6,7 +6,7 @@ Subject: [PATCH] Prevent Ghost Players Caused by Plugins\n Check if the player is still connected after firing event. Fixes BUKKIT-4327\n \n diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java\n-index 5174602..9a6e997 100644\n+index 9d116e5..2ff1e19 100644\n --- a/src/main/java/net/minecraft/server/PlayerList.java\n +++ b/src/main/java/net/minecraft/server/PlayerList.java\n @@ -467,6 +467,11 @@ public abstract class PlayerList {\ndiff --git a/CraftBukkit-Patches/0045-Entity-ticking-chunk-caching.patch b/CraftBukkit-Patches/0045-Entity-ticking-chunk-caching.patch\nindex 3965c4ec6..202610b61 100644\n--- a/CraftBukkit-Patches/0045-Entity-ticking-chunk-caching.patch\n+++ b/CraftBukkit-Patches/0045-Entity-ticking-chunk-caching.patch\n@@ -1,4 +1,4 @@\n-From 705f008f7e07131dba5f94e2002fb49be167a485 Mon Sep 17 00:00:00 2001\n+From 74ec77bc8eb2e4ed29c5fddf1038eb1815b4e657 Mon Sep 17 00:00:00 2001\n From: Ammar Askar <ammar@ammaraskar.com>\n Date: Tue, 16 Jul 2013 03:32:32 +0500\n Subject: [PATCH] Entity ticking chunk caching\n@@ -62,5 +62,5 @@ index 0eeed14..5fb3fbf 100644\n              if (entity.vehicle != null) {\n                  if (!entity.vehicle.dead && entity.vehicle.passenger == entity) {\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0046-Plug-World-Unload-Memory-Leak.patch b/CraftBukkit-Patches/0046-Plug-World-Unload-Memory-Leak.patch\nindex 3a2ef838a..7c92f385d 100644\n--- a/CraftBukkit-Patches/0046-Plug-World-Unload-Memory-Leak.patch\n+++ b/CraftBukkit-Patches/0046-Plug-World-Unload-Memory-Leak.patch\n@@ -1,4 +1,4 @@\n-From 8be7e50e9473293a72fa651cd323d93342b49ac9 Mon Sep 17 00:00:00 2001\n+From 2798f4c21987ee36b27c8435bd29afa412146793 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 3 Aug 2013 19:02:59 +1000\n Subject: [PATCH] Plug World Unload Memory Leak\ndiff --git a/CraftBukkit-Patches/0047-Player-Collision-API.patch b/CraftBukkit-Patches/0047-Player-Collision-API.patch\nindex ddb7eeb94..cf292611a 100644\n--- a/CraftBukkit-Patches/0047-Player-Collision-API.patch\n+++ b/CraftBukkit-Patches/0047-Player-Collision-API.patch\n@@ -1,4 +1,4 @@\n-From dcba3bd4d498eca5b5833f67dc38eef0e87dbd12 Mon Sep 17 00:00:00 2001\n+From 066b4360e37e5c8378666d381bcec559c4a2cb34 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 3 Aug 2013 19:27:07 +1000\n Subject: [PATCH] Player Collision API\n@@ -81,5 +81,5 @@ index bf3c9db..afbc3d8 100644\n  \n      public Player.Spigot spigot()\n -- \n-1.8.4.msysgit.0\n+1.8.3.2\n \ndiff --git a/CraftBukkit-Patches/0048-Fully-Disable-Snooper-When-Not-Required.patch b/CraftBukkit-Patches/0048-Fully-Disable-Snooper-When-Not-Required.patch\nindex 3cf031c27..3279de05c 100644\n--- a/CraftBukkit-Patches/0048-Fully-Disable-Snooper-When-Not-Required.patch\n+++ b/CraftBukkit-Patches/0048-Fully-Disable-Snooper-When-Not-Required.patch\n@@ -1,4 +1,4 @@\n-From 6ab5656c1a121d61481d6fd9ed9b9fe4ed1e3397 Mon Sep 17 00:00:00 2001\n+From d04d999897b38e9b3304ba3b14fe82709c09225b Mon Sep 17 00:00:00 2001\n From: agentk20 <agentkid20@gmail.com>\n Date: Sat, 3 Aug 2013 19:28:48 +1000\n Subject: [PATCH] Fully Disable Snooper When Not Required\ndiff --git a/CraftBukkit-Patches/0049-Add-Getter-for-Entity-Invulnerability.patch b/CraftBukkit-Patches/0049-Add-Getter-for-Entity-Invulnerability.patch\nindex a605c5ddb..063d3c279 100644\n--- a/CraftBukkit-Patches/0049-Add-Getter-for-Entity-Invulnerability.patch\n+++ b/CraftBukkit-Patches/0049-Add-Getter-for-Entity-Invulnerability.patch\n@@ -1,4 +1,4 @@\n-From b366c0e45babd58ac6166a557a519bb367eb900e Mon Sep 17 00:00:00 2001\n+From e6e9d61786cc38e70aa1bb70d19cbe0d2676eaa6 Mon Sep 17 00:00:00 2001\n From: DerFlash <bte@freenet.de>\n Date: Sat, 3 Aug 2013 19:53:48 +1000\n Subject: [PATCH] Add Getter for Entity Invulnerability\ndiff --git a/CraftBukkit-Patches/0050-Cap-Minimum-Player-Speed.patch b/CraftBukkit-Patches/0050-Cap-Minimum-Player-Speed.patch\nindex 4f888a18b..a92b6bd64 100644\n--- a/CraftBukkit-Patches/0050-Cap-Minimum-Player-Speed.patch\n+++ b/CraftBukkit-Patches/0050-Cap-Minimum-Player-Speed.patch\n@@ -1,4 +1,4 @@\n-From ca506b151bc56955adad102c6d1bd0d7ab9adc3c Mon Sep 17 00:00:00 2001\n+From 28ef2cdb94058e48e2ed7fad2c34224e9fad1042 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Mon, 5 Aug 2013 20:17:20 +1000\n Subject: [PATCH] Cap Minimum Player Speed\ndiff --git a/CraftBukkit-Patches/0051-Update-Inventory-and-Health-for-PlayerConsumeItemEve.patch b/CraftBukkit-Patches/0051-Update-Inventory-and-Health-for-PlayerConsumeItemEve.patch\nindex cbd5b6e4f..b70e45047 100644\n--- a/CraftBukkit-Patches/0051-Update-Inventory-and-Health-for-PlayerConsumeItemEve.patch\n+++ b/CraftBukkit-Patches/0051-Update-Inventory-and-Health-for-PlayerConsumeItemEve.patch\n@@ -1,4 +1,4 @@\n-From 023511a96c130a73fa0bbf06394510977d626f31 Mon Sep 17 00:00:00 2001\n+From 53aeb97c002764d012a245aae52cd5771d706f7b Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 14 Sep 2013 10:16:38 +1000\n Subject: [PATCH] Update Inventory and Health for PlayerConsumeItemEvent\ndiff --git a/CraftBukkit-Patches/0052-Call-EntityChangeBlockEvent-for-Fire-Arrows-hitting-.patch b/CraftBukkit-Patches/0052-Call-EntityChangeBlockEvent-for-Fire-Arrows-hitting-.patch\nindex 410398eb7..b866c0a18 100644\n--- a/CraftBukkit-Patches/0052-Call-EntityChangeBlockEvent-for-Fire-Arrows-hitting-.patch\n+++ b/CraftBukkit-Patches/0052-Call-EntityChangeBlockEvent-for-Fire-Arrows-hitting-.patch\n@@ -1,4 +1,4 @@\n-From a1a4be40548d338d08bca93ac5baabdb1d02c657 Mon Sep 17 00:00:00 2001\n+From f98053858adbb802d61d1705dbf8fca9eccd2c13 Mon Sep 17 00:00:00 2001\n From: BlackHole <black-hole@live.com>\n Date: Tue, 16 Jul 2013 22:34:50 +0200\n Subject: [PATCH] Call EntityChangeBlockEvent for Fire Arrows hitting TNT\ndiff --git a/CraftBukkit-Patches/0053-Allow-Disabling-of-1.6.3-Structure-Saving.patch b/CraftBukkit-Patches/0053-Allow-Disabling-of-1.6.3-Structure-Saving.patch\nindex d68b479c3..f64e49864 100644\n--- a/CraftBukkit-Patches/0053-Allow-Disabling-of-1.6.3-Structure-Saving.patch\n+++ b/CraftBukkit-Patches/0053-Allow-Disabling-of-1.6.3-Structure-Saving.patch\n@@ -1,4 +1,4 @@\n-From 06d62caeded766646822c23ff318825cabf570d9 Mon Sep 17 00:00:00 2001\n+From 42e1cff41c516c789077c3a088326b9f6c0d5961 Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sat, 21 Sep 2013 12:33:09 +1000\n Subject: [PATCH] Allow Disabling of 1.6.3 Structure Saving\ndiff --git a/CraftBukkit-Patches/0054-Item-Despawn-Rate.patch b/CraftBukkit-Patches/0054-Item-Despawn-Rate.patch\nindex 1a4679e74..71fc59e4f 100644\n--- a/CraftBukkit-Patches/0054-Item-Despawn-Rate.patch\n+++ b/CraftBukkit-Patches/0054-Item-Despawn-Rate.patch\n@@ -1,4 +1,4 @@\n-From c15a3f4eace7c5a135261ae3a7376b3457c0b9c4 Mon Sep 17 00:00:00 2001\n+From e5bbed4570854ea51ac8d114fe16320e314ebeee Mon Sep 17 00:00:00 2001\n From: md_5 <md_5@live.com.au>\n Date: Sun, 22",
    "Assure that end line is not smaller than the start line . . PullRequest : graal / 3461": "diff --git a/tools/src/com.oracle.truffle.tools.chromeinspector.test/src/com/oracle/truffle/tools/chromeinspector/test/SLInspectDebugTest.java b/tools/src/com.oracle.truffle.tools.chromeinspector.test/src/com/oracle/truffle/tools/chromeinspector/test/SLInspectDebugTest.java\nindex 67da246090d..2f5e65a9330 100644\n--- a/tools/src/com.oracle.truffle.tools.chromeinspector.test/src/com/oracle/truffle/tools/chromeinspector/test/SLInspectDebugTest.java\n+++ b/tools/src/com.oracle.truffle.tools.chromeinspector.test/src/com/oracle/truffle/tools/chromeinspector/test/SLInspectDebugTest.java\n@@ -1509,6 +1509,10 @@ public class SLInspectDebugTest {\n         tester.sendMessage(\"{\\\"id\\\":6,\\\"method\\\":\\\"Debugger.getPossibleBreakpoints\\\",\\\"params\\\":{\\\"start\\\":{\\\"scriptId\\\":\\\"1\\\",\\\"lineNumber\\\":11,\\\"columnNumber\\\":0},\\\"restrictToFunction\\\":false}}\");\n         assertEquals(\"{\\\"result\\\":{\\\"locations\\\":[{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":2,\\\"lineNumber\\\":11},{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":13,\\\"lineNumber\\\":11},{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":24,\\\"lineNumber\\\":11}]},\\\"id\\\":6}\", tester.getMessages(true).trim());\n \n+        // Test location after file length:\n+        tester.sendMessage(\"{\\\"id\\\":7,\\\"method\\\":\\\"Debugger.getPossibleBreakpoints\\\",\\\"params\\\":{\\\"start\\\":{\\\"scriptId\\\":\\\"1\\\",\\\"lineNumber\\\":14,\\\"columnNumber\\\":0},\\\"end\\\":{\\\"scriptId\\\":\\\"1\\\",\\\"lineNumber\\\":14,\\\"columnNumber\\\":0},\\\"restrictToFunction\\\":false}}\");\n+        assertEquals(\"{\\\"result\\\":{\\\"locations\\\":[{\\\"scriptId\\\":\\\"1\\\",\\\"columnNumber\\\":24,\\\"lineNumber\\\":11}]},\\\"id\\\":7}\", tester.getMessages(true).trim());\n+\n         // Resume to finish:\n         tester.sendMessage(\"{\\\"id\\\":20,\\\"method\\\":\\\"Debugger.resume\\\"}\");\n         assertTrue(tester.compareReceivedMessages(\ndiff --git a/tools/src/com.oracle.truffle.tools.chromeinspector/src/com/oracle/truffle/tools/chromeinspector/InspectorDebugger.java b/tools/src/com.oracle.truffle.tools.chromeinspector/src/com/oracle/truffle/tools/chromeinspector/InspectorDebugger.java\nindex 4ba90e14c78..7ad7701e859 100644\n--- a/tools/src/com.oracle.truffle.tools.chromeinspector/src/com/oracle/truffle/tools/chromeinspector/InspectorDebugger.java\n+++ b/tools/src/com.oracle.truffle.tools.chromeinspector/src/com/oracle/truffle/tools/chromeinspector/InspectorDebugger.java\n@@ -241,6 +241,9 @@ public final class InspectorDebugger extends DebuggerDomain {\n                 if (c2 <= 0) {\n                     c2 = -1;\n                 }\n+                if (l1 > l2) {\n+                    l1 = l2;\n+                }\n             } else {\n                 l2 = l1;\n                 if (c1 == -1) {",
    "Add a whitelist for allowing or disallowing multiple versions of proto library .": "diff --git a/src/main/java/com/google/devtools/build/lib/analysis/Whitelist.java b/src/main/java/com/google/devtools/build/lib/analysis/Whitelist.java\nindex 5e70ec832c..2c35feefd7 100644\n--- a/src/main/java/com/google/devtools/build/lib/analysis/Whitelist.java\n+++ b/src/main/java/com/google/devtools/build/lib/analysis/Whitelist.java\n@@ -69,6 +69,18 @@ public final class Whitelist {\n         .anyMatch(p -> p.containsPackage(label.getPackageIdentifier()));\n   }\n \n+  /**\n+   * Returns whether the rule from the given rule context has a whitelist by the given name.\n+   *\n+   * @param ruleContext The rule context to check\n+   * @param whitelistName The name of the whitelist to check for.\n+   * @return True if the given rule context has the given whitelist.\n+   */\n+  public static boolean hasWhitelist(RuleContext ruleContext, String whitelistName) {\n+    String attributeName = getAttributeNameFromWhitelistName(whitelistName);\n+    return ruleContext.isAttrDefined(attributeName, LABEL);\n+  }\n+\n   private static String getAttributeNameFromWhitelistName(String whitelistName) {\n     return String.format(\"$whitelist_%s\", whitelistName);\n   }\ndiff --git a/src/main/java/com/google/devtools/build/lib/rules/android/AndroidLocalTestBase.java b/src/main/java/com/google/devtools/build/lib/rules/android/AndroidLocalTestBase.java\nindex 2640ed2aa7..e2478c1d78 100644\n--- a/src/main/java/com/google/devtools/build/lib/rules/android/AndroidLocalTestBase.java\n+++ b/src/main/java/com/google/devtools/build/lib/rules/android/AndroidLocalTestBase.java\n@@ -28,6 +28,7 @@ import com.google.devtools.build.lib.analysis.Runfiles;\n import com.google.devtools.build.lib.analysis.RunfilesProvider;\n import com.google.devtools.build.lib.analysis.RunfilesSupport;\n import com.google.devtools.build.lib.analysis.TransitiveInfoCollection;\n+import com.google.devtools.build.lib.analysis.Whitelist;\n import com.google.devtools.build.lib.analysis.actions.Substitution;\n import com.google.devtools.build.lib.analysis.actions.Template;\n import com.google.devtools.build.lib.analysis.actions.TemplateExpansionAction;\n@@ -157,9 +158,13 @@ public abstract class AndroidLocalTestBase implements RuleConfiguredTargetFactor\n     String testClass =\n         getAndCheckTestClass(ruleContext, ImmutableList.copyOf(attributesBuilder.getSourceFiles()));\n     getAndCheckTestSupport(ruleContext);\n-    javaSemantics.checkForProtoLibraryAndJavaProtoLibraryOnSameProto(ruleContext, javaCommon);\n-    if (ruleContext.hasErrors()) {\n-      return null;\n+\n+    if (Whitelist.hasWhitelist(ruleContext, \"multiple_proto_rule_types_in_deps_whitelist\")\n+        && !Whitelist.isAvailable(ruleContext, \"multiple_proto_rule_types_in_deps_whitelist\")) {\n+      javaSemantics.checkForProtoLibraryAndJavaProtoLibraryOnSameProto(ruleContext, javaCommon);\n+      if (ruleContext.hasErrors()) {\n+        return null;\n+      }\n     }\n \n     JavaCompilationHelper helper =",
    "Added method for automatically calculation of Y axis .": "diff --git a/hellocharts-library/src/lecho/lib/hellocharts/LineChart.java b/hellocharts-library/src/lecho/lib/hellocharts/LineChart.java\nindex 00ebacc..4451aa1 100644\n--- a/hellocharts-library/src/lecho/lib/hellocharts/LineChart.java\n+++ b/hellocharts-library/src/lecho/lib/hellocharts/LineChart.java\n@@ -1,5 +1,6 @@\n package lecho.lib.hellocharts;\n \n+import java.util.ArrayList;\n import java.util.List;\n import java.util.Locale;\n \n@@ -170,12 +171,33 @@ public class LineChart extends View {\n \t\t}\n \t}\n \n+\t// Automatically calculates Y axis values.\n+\tprivate Axis calculateYAxis(int numberOfSteps) {\n+\t\tif (numberOfSteps < 2) {\n+\t\t\tthrow new IllegalArgumentException(\"Number or steps have to be grater or equal 2\");\n+\t\t}\n+\t\tList<Float> values = new ArrayList<Float>();\n+\t\tfinal float range = mData.getMaxYValue() - mData.getMinYValue();\n+\t\tfinal float tickRange = range / (numberOfSteps - 1);\n+\t\tfinal float x = (float) Math.ceil(Math.log10(tickRange) - 1);\n+\t\tfinal float pow10x = (float) Math.pow(10, x);\n+\t\tfinal float roundedTickRange = (float) Math.ceil(tickRange / pow10x) * pow10x;\n+\t\tfloat value = mData.getMinYValue();\n+\t\twhile (value <= mData.getMaxYValue()) {\n+\t\t\tvalues.add(value);\n+\t\t\tvalue += roundedTickRange;\n+\t\t}\n+\t\tAxis yAxis = new Axis();\n+\t\tyAxis.setValues(values);\n+\t\treturn yAxis;\n+\t}\n+\n \t@Override\n \tprotected void onDraw(Canvas canvas) {\n \t\tlong time = System.nanoTime();\n \t\tif (mAxesOn) {\n-\t\t\tdrawYAxis(canvas);\n \t\t\tdrawXAxis(canvas);\n+\t\t\tdrawYAxis(canvas);\n \t\t}\n \t\tif (mLinesOn) {\n \t\t\tdrawLines(canvas);\n@@ -367,7 +389,7 @@ public class LineChart extends View {\n \t\t\tmLinePath.moveTo(currentPointX, currentPointY);\n \t\t\tmLinePath.cubicTo(firstControlPointX, firstControlPointY, secondControlPointX, secondControlPointY,\n \t\t\t\t\tnextPointX, nextPointY);\n-\t\t\t// Shift values to prevent recalculation of values that where already calculated.\n+\t\t\t// Shift values to prevent recalculation of values that have been already calculated.\n \t\t\tpreviousPointX = currentPointX;\n \t\t\tpreviousPointY = currentPointY;\n \t\t\tcurrentPointX = nextPointX;",
    "Invoking Scroll Listeners inside moveViewport": "diff --git a/FreeFlow/src/com/comcast/freeflow/core/FreeFlowContainer.java b/FreeFlow/src/com/comcast/freeflow/core/FreeFlowContainer.java\nindex b2f1843..a193642 100644\n--- a/FreeFlow/src/com/comcast/freeflow/core/FreeFlowContainer.java\n+++ b/FreeFlow/src/com/comcast/freeflow/core/FreeFlowContainer.java\n@@ -1025,7 +1025,6 @@ public class FreeFlowContainer extends AbsLayoutContainer {\n \n \t\tif (mTouchMode == TOUCH_MODE_SCROLL) {\n \t\t\tmoveViewportBy(event.getX() - deltaX, event.getY() - deltaY, false);\n-\t\t\tinvokeOnItemScrollListeners();\n \t\t\tdeltaX = event.getX();\n \t\t\tdeltaY = event.getY();\n \t\t}\n@@ -1300,7 +1299,7 @@ public class FreeFlowContainer extends AbsLayoutContainer {\n \t\t}\n \n \t\tinvalidate();\n-\n+\t\tinvokeOnItemScrollListeners();\n \t}\n \n \tprotected boolean mEdgeEffectsEnabled = true;\n@@ -1883,7 +1882,6 @@ public class FreeFlowContainer extends AbsLayoutContainer {\n \t\t\tpost(flingRunnable);\n \t\t} else {\n \t\t\tmoveViewportBy((viewPortX - newVPX), (viewPortY - newVPY), false);\n-\t\t\tinvokeOnItemScrollListeners();\n \t\t}\n \t}\n ",
    "update finagle and finatra versions ( <issue_id> ) .": "diff --git a/frameworks/Scala/finagle/build.sbt b/frameworks/Scala/finagle/build.sbt\nindex 6694b8dfd..7c475227c 100644\n--- a/frameworks/Scala/finagle/build.sbt\n+++ b/frameworks/Scala/finagle/build.sbt\n@@ -1,4 +1,4 @@\n-lazy val finagleVersion = \"19.10.0\"\n+lazy val finagleVersion = \"19.11.0\"\n \n name := \"finagle-benchmark\"\n scalaVersion := \"2.12.8\"\ndiff --git a/frameworks/Scala/finatra/build.sbt b/frameworks/Scala/finatra/build.sbt\nindex 679615c6a..95900986d 100644\n--- a/frameworks/Scala/finatra/build.sbt\n+++ b/frameworks/Scala/finatra/build.sbt\n@@ -1,4 +1,4 @@\n-lazy val finatraVersion = \"19.10.0\"\n+lazy val finatraVersion = \"19.11.0\"\n \n name := \"techempower-benchmarks-finatra\"\n organization := \"com.twitter\"\n@@ -18,7 +18,8 @@ assemblyMergeStrategy in assembly := {\n }\n \n libraryDependencies ++= Seq(\n-  \"com.twitter\" %% \"finatra-http\" % finatraVersion,\n+  (\"com.twitter\" %% \"finatra-http\" % finatraVersion).\n+    exclude(\"com.sun.activation\", \"javax.activation\"),\n   \"org.slf4j\" % \"slf4j-nop\" % \"1.7.25\",\n   \"com.fasterxml.jackson.module\" %% \"jackson-module-scala\" % \"2.9.9\",\n )",
    "modify init ( )": "diff --git a/sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java b/sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java\nindex f3a055fc65f..4f0254fada8 100644\n--- a/sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java\n+++ b/sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java\n@@ -24,6 +24,7 @@ import io.shardingsphere.core.rule.DataSourceParameter;\n import io.shardingsphere.core.yaml.YamlRuleConfiguration;\n import io.shardingsphere.core.yaml.other.YamlServerConfiguration;\n import io.shardingsphere.orchestration.config.OrchestrationConfiguration;\n+import io.shardingsphere.orchestration.config.OrchestrationType;\n import io.shardingsphere.orchestration.internal.config.ConfigurationService;\n import io.shardingsphere.orchestration.internal.listener.ListenerFactory;\n import io.shardingsphere.orchestration.internal.state.datasource.DataSourceService;\n@@ -141,8 +142,18 @@ public final class OrchestrationFacade implements AutoCloseable {\n      * Initialize for proxy orchestration.\n      *\n      */\n-    public void init() {\n-        listenerManager.initProxyListeners();\n+    public void init(final OrchestrationType orchestrationType) {\n+        switch (orchestrationType) {\n+            case MASTER_SLAVE:\n+                listenerManager.initMasterSlaveListeners();\n+                break;\n+            case SHARDING:\n+                listenerManager.initShardingListeners();\n+                break;\n+            default:\n+                listenerManager.initProxyListeners();\n+                break;\n+        }\n     }\n     \n     private void reviseShardingRuleConfigurationForMasterSlave(final Map<String, DataSource> dataSourceMap, final ShardingRuleConfiguration shardingRuleConfig) {",
    "remove unnecessary bwc tests": "diff --git a/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java\nindex 44b65c7f8c9..9b9a56dee32 100644\n--- a/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java\n+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java\n@@ -113,49 +113,10 @@ public class MetaDataIndexUpgradeService extends AbstractComponent {\n         IndexMetaData newMetaData = upgradeLegacyRoutingSettings(indexMetaData);\n         newMetaData = addDefaultUnitsIfNeeded(newMetaData);\n         checkMappingsCompatibility(newMetaData);\n-        newMetaData = upgradeSettings(newMetaData);\n         newMetaData = markAsUpgraded(newMetaData);\n         return newMetaData;\n     }\n \n-    IndexMetaData upgradeSettings(IndexMetaData indexMetaData) {\n-        final String storeType = indexMetaData.getSettings().get(IndexStoreModule.STORE_TYPE);\n-        if (storeType != null) {\n-            final String upgradeStoreType;\n-            switch (storeType.toLowerCase(Locale.ROOT)) {\n-                case \"nio_fs\":\n-                case \"niofs\":\n-                    upgradeStoreType = \"niofs\";\n-                    break;\n-                case \"mmap_fs\":\n-                case \"mmapfs\":\n-                    upgradeStoreType = \"mmapfs\";\n-                    break;\n-                case \"simple_fs\":\n-                case \"simplefs\":\n-                    upgradeStoreType = \"simplefs\";\n-                    break;\n-                case \"default\":\n-                    upgradeStoreType = \"default\";\n-                    break;\n-                case \"fs\":\n-                    upgradeStoreType = \"fs\";\n-                    break;\n-                default:\n-                    upgradeStoreType = storeType;\n-            }\n-            if (storeType.equals(upgradeStoreType) == false) {\n-                Settings indexSettings = Settings.builder().put(indexMetaData.settings())\n-                        .put(IndexStoreModule.STORE_TYPE, upgradeStoreType)\n-                        .build();\n-                return IndexMetaData.builder(indexMetaData)\n-                        .version(indexMetaData.version())\n-                        .settings(indexSettings)\n-                        .build();\n-            }\n-        }\n-        return indexMetaData;\n-    }\n \n     /**\n      * Checks if the index was already opened by this version of Elasticsearch and doesn't require any additional checks.\ndiff --git a/core/src/test/java/org/elasticsearch/index/store/IndexStoreBWCTests.java b/core/src/test/java/org/elasticsearch/index/store/IndexStoreBWCTests.java\ndeleted file mode 100644\nindex e53358c6631..00000000000\n--- a/core/src/test/java/org/elasticsearch/index/store/IndexStoreBWCTests.java\n+++ /dev/null\n@@ -1,83 +0,0 @@\n-/*\n- * Licensed to Elasticsearch under one or more contributor\n- * license agreements. See the NOTICE file distributed with\n- * this work for additional information regarding copyright\n- * ownership. Elasticsearch licenses this file to you under\n- * the Apache License, Version 2.0 (the \"License\"); you may\n- * not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.elasticsearch.index.store;\n-\n-import com.carrotsearch.randomizedtesting.generators.RandomPicks;\n-import org.apache.lucene.store.*;\n-import org.apache.lucene.util.Constants;\n-import org.elasticsearch.Version;\n-import org.elasticsearch.action.admin.indices.settings.get.GetSettingsResponse;\n-import org.elasticsearch.cluster.metadata.IndexMetaData;\n-import org.elasticsearch.common.settings.Settings;\n-import org.elasticsearch.index.shard.ShardId;\n-import org.elasticsearch.index.shard.ShardPath;\n-import org.elasticsearch.test.ESSingleNodeTestCase;\n-import org.elasticsearch.test.ESTestCase;\n-\n-import java.io.IOException;\n-import java.nio.file.Path;\n-import java.util.Arrays;\n-import java.util.Locale;\n-\n-/**\n- */\n-public class IndexStoreBWCTests extends ESSingleNodeTestCase {\n-\n-\n-    public void testOldCoreTypesFail() {\n-        try {\n-            createIndex(\"test\", Settings.builder().put(IndexStoreModule.STORE_TYPE, \"nio_fs\").build());\n-            fail();\n-        } catch (Exception ex) {\n-        }\n-        try {\n-            createIndex(\"test\", Settings.builder().put(IndexStoreModule.STORE_TYPE, \"mmap_fs\").build());\n-            fail();\n-        } catch (Exception ex) {\n-        }\n-        try {\n-            createIndex(\"test\", Settings.builder().put(IndexStoreModule.STORE_TYPE, \"simple_fs\").build());\n-            fail();\n-        } catch (Exception ex) {\n-        }\n-    }\n-\n-    public void testUpgradeCoreTypes() throws IOException {\n-        String type = RandomPicks.randomFrom(random(), Arrays.asList(\"nio\", \"mmap\", \"simple\"));\n-        createIndex(\"test\", Settings.builder()\n-                .put(IndexStoreModule.STORE_TYPE, type+\"fs\")\n-                .put(IndexMetaData.SETTING_VERSION_CREATED, Version.V_1_7_0)\n-                .build());\n-\n-        client().admin().indices().prepareClose(\"test\").get();\n-        client().admin().indices().prepareUpdateSettings(\"test\").setSettings(Settings.builder()\n-                .put(IndexStoreModule.STORE_TYPE, type + \"_fs\").build()).get();\n-        GetSettingsResponse getSettingsResponse = client().admin().indices().prepareGetSettings(\"test\").get();\n-        String actualType = getSettingsResponse.getSetting(\"test\", IndexStoreModule.STORE_TYPE);\n-        assertEquals(type + \"_fs\", actualType);\n-\n-        // now reopen and upgrade\n-        client().admin().indices().prepareOpen(\"test\").get();\n-\n-        getSettingsResponse = client().admin().indices().prepareGetSettings(\"test\").get();\n-        actualType = getSettingsResponse.getSetting(\"test\", IndexStoreModule.STORE_TYPE);\n-        assertEquals(type+\"fs\", actualType);\n-    }\n-\n-}",
    "Fixed the build error of JmsComponet .": "diff --git a/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsComponent.java b/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsComponent.java\nindex b5bc5347011..6095ae0c9a2 100644\n--- a/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsComponent.java\n+++ b/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsComponent.java\n@@ -27,6 +27,7 @@ import org.apache.camel.component.jms.requestor.Requestor;\n import org.apache.camel.impl.DefaultComponent;\n import org.apache.camel.spi.HeaderFilterStrategy;\n import org.apache.camel.spi.HeaderFilterStrategyAware;\n+import org.apache.camel.util.EndpointHelper;\n import org.apache.camel.util.ObjectHelper;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -426,7 +427,7 @@ public class JmsComponent extends DefaultComponent implements ApplicationContext\n         // jms header strategy\n         String strategy = getAndRemoveParameter(parameters, \"jmsKeyFormatStrategy\", String.class);\n         if (strategy != null) {\n-            if (isReferenceParameter(strategy)) {\n+            if (EndpointHelper.isReferenceParameter(strategy)) {\n                 String key = strategy.substring(1);\n                 endpoint.setJmsKeyFormatStrategy(lookup(key, JmsKeyFormatStrategy.class));\n             } else {\n@@ -445,7 +446,7 @@ public class JmsComponent extends DefaultComponent implements ApplicationContext\n         endpoint.setHeaderFilterStrategy(getHeaderFilterStrategy());\n \n         return endpoint;\n-    }\n+    }   \n \n     /**\n      * A strategy method allowing the URI destination to be translated into the",
    "Remove the status xml attribute from AntXmlResultWriter .": "diff --git a/src/java_tools/junitrunner/java/com/google/testing/junit/runner/model/AntXmlResultWriter.java b/src/java_tools/junitrunner/java/com/google/testing/junit/runner/model/AntXmlResultWriter.java\nindex 11870ae3f1..8ee4ba3a64 100644\n--- a/src/java_tools/junitrunner/java/com/google/testing/junit/runner/model/AntXmlResultWriter.java\n+++ b/src/java_tools/junitrunner/java/com/google/testing/junit/runner/model/AntXmlResultWriter.java\n@@ -49,7 +49,6 @@ public final class AntXmlResultWriter implements XmlResultWriter {\n   private static final String JUNIT_ATTR_PROPERTY_VALUE = \"value\";\n   private static final String JUNIT_ELEMENT_TESTCASE = \"testcase\";\n   private static final String JUNIT_ELEMENT_FAILURE = \"failure\";\n-  private static final String JUNIT_ELEMENT_STATUS = \"status\";\n   private static final String JUNIT_ATTR_FAILURE_MESSAGE = \"message\";\n   private static final String JUNIT_ATTR_FAILURE_TYPE = \"type\";\n   private static final String JUNIT_ATTR_TESTCASE_NAME = \"name\";\n@@ -163,7 +162,6 @@ public final class AntXmlResultWriter implements XmlResultWriter {\n     writer.writeAttribute(JUNIT_ATTR_TESTCASE_CLASSNAME, result.getClassName());\n     writer.writeAttribute(JUNIT_ATTR_TESTCASE_TIME, getFormattedRunTime(\n             result.getRunTimeInterval()));\n-    writer.writeAttribute(JUNIT_ELEMENT_STATUS, result.getStatus().toString());\n \n     for (Throwable failure : parentFailures) {\n       writeThrowableToXmlWriter(writer, failure);\ndiff --git a/src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/testbed/XmlOutputExercises.ant.xml b/src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/testbed/XmlOutputExercises.ant.xml\nindex a8e0cbcc18..beb241992b 100644\n--- a/src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/testbed/XmlOutputExercises.ant.xml\n+++ b/src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/testbed/XmlOutputExercises.ant.xml\n@@ -7,7 +7,7 @@\n     </testsuite>\n     <testsuite name='com.google.testing.junit.runner.testbed.XmlOutputExercises$FailureTest' timestamp='' hostname='localhost' tests='1' failures='1' errors='0' time='' package='' id='1'>\n       <properties />\n-      <testcase name='testFail' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$FailureTest' time='' status='COMPLETED'>\n+      <testcase name='testFail' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$FailureTest' time=''>\n         <failure message='This is an expected error. The test is supposed to fail.' type='java.lang.AssertionError'>java.lang.AssertionError: This is an expected error. The test is supposed to fail.\n \n         </failure>\n@@ -17,22 +17,22 @@\n     </testsuite>\n     <testsuite name='com.google.testing.junit.runner.testbed.XmlOutputExercises$OtherTests' timestamp='' hostname='localhost' tests='1' failures='0' errors='0' time='' package='' id='2'>\n         <properties />\n-        <testcase name='testToString' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$OtherTests' time='' status='COMPLETED' />\n+        <testcase name='testToString' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$OtherTests' time='' />\n         <system-out />\n         <system-err />\n     </testsuite>\n     <testsuite name='com.google.testing.junit.runner.testbed.XmlOutputExercises$EqualsHashCodeTest' timestamp='' hostname='localhost' tests='2' failures='0' errors='0' time='' package='' id='3'>\n         <properties />\n-        <testcase name='testHashCode' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$EqualsHashCodeTest' time='' status='COMPLETED' />\n-        <testcase name='testEquals' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$EqualsHashCodeTest' time='' status='COMPLETED' />\n+        <testcase name='testHashCode' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$EqualsHashCodeTest' time='' />\n+        <testcase name='testEquals' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$EqualsHashCodeTest' time='' />\n         <system-out />\n         <system-err />\n     </testsuite>\n     <testsuite name='com.google.testing.junit.runner.testbed.XmlOutputExercises$ComparabilityTest' timestamp='' hostname='localhost' tests='3' failures='0' errors='0' time='' package='' id='4'>\n         <properties />\n-        <testcase name='compareToEqualInstance' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$ComparabilityTest' time='' status='COMPLETED' />\n-        <testcase name='compareToGreaterInstance' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$ComparabilityTest' time='' status='COMPLETED' />\n-        <testcase name='compareToLessInstance' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$ComparabilityTest' time='' status='COMPLETED' />\n+        <testcase name='compareToEqualInstance' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$ComparabilityTest' time='' />\n+        <testcase name='compareToGreaterInstance' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$ComparabilityTest' time='' />\n+        <testcase name='compareToLessInstance' classname='com.google.testing.junit.runner.testbed.XmlOutputExercises$ComparabilityTest' time='' />\n         <system-out />\n         <system-err />\n     </testsuite>\ndiff --git a/src/test/shell/bazel/bazel_java_test.sh b/src/test/shell/bazel/bazel_java_test.sh\nindex c79d640303..3418fc14fd 100755\n--- a/src/test/shell/bazel/bazel_java_test.sh\n+++ b/src/test/shell/bazel/bazel_java_test.sh\n@@ -1424,8 +1424,6 @@ EOF\n   [[ -s $xml_log ]] || fail \"$xml_log was not present after test\"\n   cat \"$xml_log\" > \"$TEST_log\"\n   expect_log \"failures='2'\"\n-  expect_log \"status='INTERRUPTED\"\n-  expect_log \"status='CANCELLED'\"\n   expect_log \"<failure message='Test cancelled' type='java.lang.Exception'>java.lang.Exception: Test cancelled\"\n   expect_log \"<failure message='Test interrupted' type='java.lang.Exception'>java.lang.Exception: Test interrupted\"\n }",
    "Keeping original ExcuctionImpl . executionStarted calls": "diff --git a/truffle/com.oracle.truffle.api.vm/src/com/oracle/truffle/api/vm/PolyglotEngine.java b/truffle/com.oracle.truffle.api.vm/src/com/oracle/truffle/api/vm/PolyglotEngine.java\nindex 59f86ede66f..19cefb2c50d 100644\n--- a/truffle/com.oracle.truffle.api.vm/src/com/oracle/truffle/api/vm/PolyglotEngine.java\n+++ b/truffle/com.oracle.truffle.api.vm/src/com/oracle/truffle/api/vm/PolyglotEngine.java\n@@ -560,7 +560,7 @@ public class PolyglotEngine {\n         Object res;\n         CompilerAsserts.neverPartOfCompilation();\n         if (executor == null) {\n-            ContextStore prev = executionStarted();\n+            ContextStore prev = ExecutionImpl.executionStarted(context);\n             try {\n                 Access.DEBUG.executionStarted(PolyglotEngine.this);\n                 final Object[] args = ForeignAccess.getArguments(frame).toArray();\n@@ -589,7 +589,7 @@ public class PolyglotEngine {\n             @SuppressWarnings(\"try\")\n             @Override\n             protected Object compute() {\n-                ContextStore prev = executionStarted();\n+                ContextStore prev = ExecutionImpl.executionStarted(context);\n                 try {\n                     Access.DEBUG.executionStarted(PolyglotEngine.this);\n                     final Object[] args = ForeignAccess.getArguments(materialized).toArray();\n@@ -604,11 +604,6 @@ public class PolyglotEngine {\n         return compute.get();\n     }\n \n-    final ContextStore executionStarted() {\n-        ContextStore prev = ExecutionImpl.executionStarted(context);\n-        return prev;\n-    }\n-\n     /**\n      * Looks global symbol provided by one of initialized languages up. First of all execute your\n      * program via one of your {@link #eval(com.oracle.truffle.api.source.Source)} and then look\n@@ -1186,7 +1181,7 @@ public class PolyglotEngine {\n      ",
    "add buffer util for toString method": "diff --git a/util/src/main/java/org/camunda/tngp/util/buffer/BufferUtil.java b/util/src/main/java/org/camunda/tngp/util/buffer/BufferUtil.java\nnew file mode 100644\nindex 0000000000..5ad2fc3a54\n--- /dev/null\n+++ b/util/src/main/java/org/camunda/tngp/util/buffer/BufferUtil.java\n@@ -0,0 +1,36 @@\n+/* Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.tngp.util.buffer;\n+\n+import java.nio.charset.Charset;\n+\n+import org.agrona.DirectBuffer;\n+\n+public final class BufferUtil\n+{\n+    public static final Charset UTF_8_CHARSET = Charset.forName(\"utf-8\");\n+\n+    private BufferUtil()\n+    { // avoid instantiation of util class\n+    }\n+\n+    public static String bufferAsString(final DirectBuffer buffer)\n+    {\n+        final byte[] bytes = new byte[buffer.capacity()];\n+\n+        buffer.getBytes(0, bytes);\n+\n+        return new String(bytes, UTF_8_CHARSET);\n+    }\n+\n+}",
    "added Redis version property": "diff --git a/.travis.yml b/.travis.yml\nindex 581f88f6b..dfdb51b4f 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -218,4 +218,4 @@ before_script:\n     - export REDIS_VERSION=\"$(redis-cli INFO SERVER | sed -n 2p)\"\n     - echo $REDIS_VERSION\n     - redis-cli SHUTDOWN NOSAVE\n-script: mvn -Dtest=$REDISSON_TEST -Dsurefire.rerunFailingTestsCount=5 -DargLine=\"-DredisBinary=$REDIS_BIN/redis-server -DtravisEnv=true\" -Punit-test test\n+script: mvn -Dtest=$REDISSON_TEST -Dsurefire.rerunFailingTestsCount=5 -DargLine=\"-DredisBinary=$REDIS_BIN/redis-server -DtravisEnv=true -DredisVersion=$REDIS_VERSION\" -Punit-test test",
    "Do minor refactoring for tier - management .": "diff --git a/core/common/src/main/java/alluxio/conf/PropertyKey.java b/core/common/src/main/java/alluxio/conf/PropertyKey.java\nindex 31849f6140..20310d54c1 100644\n--- a/core/common/src/main/java/alluxio/conf/PropertyKey.java\n+++ b/core/common/src/main/java/alluxio/conf/PropertyKey.java\n@@ -2380,11 +2380,16 @@ public final class PropertyKey implements Comparable<PropertyKey> {\n   public static final PropertyKey WORKER_MANAGEMENT_BACKOFF_STRATEGY =\n       new Builder(Name.WORKER_MANAGEMENT_BACKOFF_STRATEGY)\n           .setDefaultValue(\"ANY\")\n-          .setDescription(\"Defines the backoff strategy used by background tasks. \"\n+          .setDescription(\"Defines the backoff scope respected by background tasks. \"\n               + \"Supported values are ANY / DIRECTORY. \"\n-              + \"ANY: Background tasks will backoff when there is any load on worker, \"\n-              + \"regardless of which tier/dir/medium the load is in. \"\n-              + \"DIRECTORY: Background tasks will backoff only on directories with load.\")\n+              + \"ANY: Management tasks will backoff from worker when there is any user I/O.\"\n+              + \"This mode will ensure low management task overhead in order to favor \"\n+              + \"immediate user I/O performance. However, making progress on management tasks \"\n+              + \"will require quite periods on the worker.\"\n+              + \"DIRECTORY: Management tasks will backoff from directories with ongoing user I/O.\"\n+              + \"This mode will give better chance of making progress on management tasks.\"\n+              + \"However, immediate user I/O throughput might be reduced due to \"\n+              + \"increased management task activity.\")\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n           .setScope(Scope.WORKER)\n           .build();\n@@ -2877,15 +2882,6 @@ public final class PropertyKey implements Comparable<PropertyKey> {\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n           .setScope(Scope.WORKER)\n           .build();\n-  public static final PropertyKey WORKER_TIERED_STORE_RESERVER_INTERVAL_MS =\n-      new Builder(Name.WORKER_TIERED_STORE_RESERVER_INTERVAL_MS)\n-          .setAlias(\"alluxio.worker.tieredstore.reserver.interval.ms\")\n-          .setDefaultValue(\"1sec\")\n-          .setDescription(\"The time period of space reserver service, which \"\n-              + \"keeps certain portion of available space on each layer.\")\n-          .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n-          .setScope(Scope.WORKER)\n-          .build();\n   public static final PropertyKey WORKER_WEB_BIND_HOST =\n       new Builder(Name.WORKER_WEB_BIND_HOST)\n           .setDefaultValue(\"0.0.0.0\")\n@@ -5097,8 +5093,6 @@ public final class PropertyKey implements Comparable<PropertyKey> {\n     public static final String WORKER_TIERED_STORE_FREE_AHEAD_BYTES =\n         \"alluxio.worker.tieredstore.free.ahead.bytes\";\n     public static final String WORKER_TIERED_STORE_LEVELS = \"alluxio.worker.tieredstore.levels\";\n-    public static final String WORKER_TIERED_STORE_RESERVER_INTERVAL_MS =\n-        \"alluxio.worker.tieredstore.reserver.interval\";\n     public static final String WORKER_WEB_BIND_HOST = \"alluxio.worker.web.bind.host\";\n     public static final String WORKER_WEB_HOSTNAME = \"alluxio.worker.web.hostname\";\n     public static final String WORKER_WEB_PORT = \"alluxio.worker.web.port\";\ndiff --git a/core/server/worker/src/main/java/alluxio/worker/block/management/BlockTransferExecutor.java b/core/server/worker/src/main/java/alluxio/worker/block/management/BlockTransferExecutor.java\nindex 3e4d59844e..af28e0e0d6 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/block/management/BlockTransferExecutor.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/block/management/BlockTransferExecutor.java\n@@ -225,7 +225,7 @@ public class BlockTransferExecutor {\n       try {\n         if (mLoadTracker.loadDetected(transferInfo.getSrcLocation(),\n             transferInfo.getDstLocation())) {\n-          LOG.warn(\"Skipping transfer-order: {} due to user activity.\", transferInfo);\n+          LOG.debug(\"Skipping transfer-order: {} due to user activity.\", transferInfo);\n           continue;\n         }\n \ndiff --git a/core/server/worker/src/main/java/alluxio/worker/block/management/ManagementTaskCoordinator.java b/core/server/worker/src/main/java/alluxio/worker/block/management/ManagementTaskCoordinator.java\nindex fc360605cb..1be1b9700c 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/block/management/ManagementTaskCoordinator.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/block/management/ManagementTaskCoordinator.java\n@@ -38,7 +38,7 @@ public class ManagementTaskCoordinator implements Closeable {\n   private static final Logger LOG = LoggerFactory.getLogger(ManagementTaskCoordinator.class);\n   /** Duration to sleep when a) load detected on worker. b) no work to do. */\n   private final long mLoadDetectionCoolDownMs;\n-  /** How to back-off when there is user activity. */\n+  /** The back-off strategy. */\n   private BackoffStrategy mBackoffStrategy;\n \n   /** Runner thread for launching management tasks. */\n@@ -160,11 +160,10 @@ public class ManagementTaskCoordinator implements Closeable {\n \n       BlockManagementTask currentTask;\n       try {\n-        // Back off if any load detected.\n+        // Back off from worker if configured so.\n         if (mBackoffStrategy == BackoffStrategy.ANY\n             && mLoadTracker.loadDetected(BlockStoreLocation.anyTier())) {\n-          LOG.debug(\"Load detected. Sleeping {}ms.\",\n-              mLoadDetectionCoolDownMs);\n+          LOG.debug(\"Load detected. Sleeping {}ms.\", mLoadDetectionCoolDownMs);\n           Thread.sleep(mLoadDetectionCoolDownMs);\n           continue;\n         }\n@@ -199,7 +198,7 @@ public class ManagementTaskCoordinator implements Closeable {\n   }\n \n   /**\n-   * Used to specify how to back-off.\n+   * Used to specify from where to back-off.\n    */\n   enum BackoffStrategy {\n     ANY, DIRECTORY\ndiff --git a/core/server/worker/src/main/java/alluxio/worker/block/management/tier/AlignTask.java b/core/server/worker/src/main/java/alluxio/worker/block/management/tier/AlignTask.java\nindex 6b4167393f..e3fabdb338 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/block/management/tier/AlignTask.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/block/management/tier/AlignTask.java\n@@ -60,8 +60,8 @@ public class AlignTask extends AbstractBlockManagementTask {\n    * @param executor the executor\n    */\n   public AlignTask(BlockStore blockStore, BlockMetadataManager metadataManager,\n-                   BlockMetadataEvictorView evictorView, StoreLoadTracker loadTracker,\n-                   ExecutorService executor) {\n+      BlockMetadataEvictorView evictorView, StoreLoadTracker loadTracker,\n+      ExecutorService executor) {\n     super(blockStore, metadataManager, evictorView, loadTracker, executor);\n   }\n \ndiff --git a/core/server/worker/src/main/java/alluxio/worker/block/management/tier/PromoteTask.java b/core/server/worker/src/main/java/alluxio/worker/block/management/tier/PromoteTask.java\nindex 211b098328..b216216af5 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/block/management/tier/PromoteTask.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/block/management/tier/PromoteTask.java\n@@ -124,8 +124,8 @@ public class PromoteTask extends AbstractBlockManagementTask {\n         continue;\n       }\n     }\n-    LOG.debug(\"Generated {} transfer to promote blocks from {} to {}\", transferInfos.size(),\n-        tierUpLocation, tierDownLocation);\n+    LOG.debug(\"Generated {} promotions from {} to {}\", transferInfos.size(),\n+        tierUpLocation.tierAlias(), tierDownLocation.tierAlias());\n     return transferInfos;\n   }\n }\ndiff --git a/core/server/worker/src/main/java/alluxio/worker/block/management/tier/TierManagementTaskProvider.java b/core/server/worker/src/main/java/alluxio/worker/block/management/tier/TierManagementTaskProvider.java\nindex f9833c38e6..233fac3486 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/block/management/tier/TierManagementTaskProvider.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/block/management/tier/TierManagementTaskProvider.java\n@@ -114,6 +114,7 @@ public class TierManagementTaskProvider implements ManagementTaskProvider {\n     // Return swap-restore task if marked.\n     if (swapRestoreEnabled && sSwapRestoreRequired) {\n       setSwapRestoreRequired(false);\n+      LOG.debug(\"Swap-restore needed.\");\n       return TierManagementTaskType.SWAP_RESTORE;\n     }\n \n@@ -127,8 +128,8 @@ public class TierManagementTaskProvider implements ManagementTaskProvider {\n       if (alignEnabled && !mMetadataManager.getBlockIterator().aligned(intersection.getFirst(),\n           intersection.getSecond(), BlockOrder.Natural,\n           (blockId) -> !evictorView.isBlockEvictable(blockId))) {\n-        LOG.debug(\"Need alignment between: {} - {}\",\n-            intersection.getFirst(), intersection.getSecond());\n+        LOG.debug(\"Alignment needed between: {} - {}\", intersection.getFirst().tierAlias(),\n+            intersection.getSecond().tierAlias());\n         return TierManagementTaskType.ALIGN;\n       }\n \n@@ -148,8 +149,8 @@ public class TierManagementTaskProvider implements ManagementTaskProvider {\n               .getIterator(intersection.getSecond(), BlockOrder.Reverse);\n           while (lowBlocks.hasNext()) {\n             if (evictorView.isBlockEvictable(lowBlocks.next())) {\n-              LOG.debug(\"Promotions allowed between {} - {}\", intersection.getSecond(),\n-                  intersection.getFirst());\n+              LOG.debug(\"Promotions needed from {} to {}\", intersection.getSecond().tierAlias(),\n+                  intersection.getFirst().tierAlias());\n               return TierManagementTaskType.PROMOTE;\n             }\n           }\ndiff --git a/tests/src/test/java/alluxio/server/ft/MultiWorkerIntegrationTest.java b/tests/src/test/java/alluxio/server/ft/MultiWorkerIntegrationTest.java\nindex c4e54aa9c8..182e415bc4 100644\n--- a/tests/src/test/java/alluxio/server/ft/MultiWorkerIntegrationTest.java\n+++ b/tests/src/test/java/alluxio/server/ft/MultiWorkerIntegrationTest.java\n@@ -88,8 +88,6 @@ public final class MultiWorkerIntegrationTest extends BaseIntegrationTest {\n   @LocalAlluxioClusterResource.Config(confParams = {\n       PropertyKey.Name.USER_BLOCK_WRITE_LOCATION_POLICY,\n       \"alluxio.client.block.policy.RoundRobinPolicy\",\n-      // don't let the reserver run, because the test writes 100% of the capacity.\n-      PropertyKey.Name.WORKER_TIERED_STORE_RESERVER_INTERVAL_MS, \"1h\"\n       })\n   public void writeLargeFile() throws Exception {\n     int fileSize = NUM_WORKERS * WORKER_MEMORY_SIZE_BYTES;",
    "Added crash collecting": "diff --git a/apps/actor-ios/ActorApp.xcodeproj/project.pbxproj b/apps/actor-ios/ActorApp.xcodeproj/project.pbxproj\nindex 96abf168f..ad1757c5e 100644\n--- a/apps/actor-ios/ActorApp.xcodeproj/project.pbxproj\n+++ b/apps/actor-ios/ActorApp.xcodeproj/project.pbxproj\n@@ -5460,6 +5460,7 @@\n \t\t\t\tINFOPLIST_FILE = ActorClient/Info.plist;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 7.0;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tMINT_API_KEY = 8721303f;\n \t\t\t\tPRODUCT_MODULE_NAME = ActorApp;\n \t\t\t\tPRODUCT_NAME = ActorApp;\n \t\t\t\tPROVISIONING_PROFILE = \"\";\n@@ -5556,6 +5557,7 @@\n \t\t\t\tINFOPLIST_FILE = ActorClient/Info.plist;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 7.0;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tMINT_API_KEY = 8721303f;\n \t\t\t\tPRODUCT_MODULE_NAME = ActorApp;\n \t\t\t\tPRODUCT_NAME = ActorApp;\n \t\t\t\tPROVISIONING_PROFILE = \"\";\n@@ -5652,6 +5654,7 @@\n \t\t\t\tINFOPLIST_FILE = ActorClient/Info.plist;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 7.0;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tMINT_API_KEY = 8721303f;\n \t\t\t\tPRODUCT_MODULE_NAME = ActorApp;\n \t\t\t\tPRODUCT_NAME = ActorApp;\n \t\t\t\tPROVISIONING_PROFILE = \"\";\n@@ -5748,6 +5751,7 @@\n \t\t\t\tINFOPLIST_FILE = ActorClient/Info.plist;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 7.0;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tMINT_API_KEY = 8721303f;\n \t\t\t\tPRODUCT_MODULE_NAME = ActorApp;\n \t\t\t\tPRODUCT_NAME = ActorApp;\n \t\t\t\tPROVISIONING_PROFILE = \"\";\n@@ -5844,6 +5848,7 @@\n \t\t\t\tINFOPLIST_FILE = ActorClient/Info.plist;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 7.0;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tMINT_API_KEY = 8721303f;\n \t\t\t\tPRODUCT_MODULE_NAME = ActorApp;\n \t\t\t\tPRODUCT_NAME = ActorApp;\n \t\t\t\tPROVISIONING_PROFILE = \"\";\n@@ -5985,6 +5990,7 @@\n \t\t\t\tINFOPLIST_FILE = ActorClient/Info.plist;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 7.0;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tMINT_API_KEY = \"\";\n \t\t\t\tONLY_ACTIVE_ARCH = YES;\n \t\t\t\tPRODUCT_MODULE_NAME = ActorApp;\n \t\t\t\tPRODUCT_NAME = ActorApp;\n@@ -6028,6 +6034,7 @@\n \t\t\t\tINFOPLIST_FILE = ActorClient/Info.plist;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 7.0;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tMINT_API_KEY = 8721303f;\n \t\t\t\tPRODUCT_MODULE_NAME = ActorApp;\n \t\t\t\tPRODUCT_NAME = ActorApp;\n \t\t\t\tPROVISIONING_PROFILE = \"\";\ndiff --git a/apps/actor-ios/ActorClient/AppDelegate.swift b/apps/actor-ios/ActorClient/AppDelegate.swift\nindex 1036af069..23e96c7c8 100644\n--- a/apps/actor-ios/ActorClient/AppDelegate.swift\n+++ b/apps/actor-ios/ActorClient/AppDelegate.swift\n@@ -22,10 +22,16 @@ import Foundation\n             }\n         }\n         \n-        // Apply styles\n-        MainAppTheme.navigation.applyAppearance(application)\n-        MainAppTheme.tab.applyAppearance(application)\n-        MainAppTheme.search.applyAppearance(application)\n+        // Register hockey app\n+        if let hockey = NSBundle.mainBundle().infoDictionary?[\"HOCKEY\"] as? String {\n+            if (hockey.trim().size() > 0) {\n+                BITHockeyManager.sharedHockeyManager().configureWithIdentifier(hockey)\n+                BITHockeyManager.sharedHockeyManager().disableCrashManager = true\n+                BITHockeyManager.sharedHockeyManager().updateManager.checkForUpdateOnLaunch = true\n+                BITHockeyManager.sharedHockeyManager().startManager()\n+                BITHockeyManager.sharedHockeyManager().authenticator.authenticateInstallation()\n+            }\n+        }\n         \n         // Register notifications\n         if application.respondsToSelector(\"registerUserNotificationSettings:\") {\n@@ -37,19 +43,12 @@ import Foundation\n             application.registerForRemoteNotificationTypes(.Alert | .Badge | .Sound)\n         }\n         \n-        // Register hockey app\n-        if let hockey = NSBundle.mainBundle().infoDictionary?[\"HOCKEY\"] as? String {\n-            if (hockey.trim().size() > 0) {\n-                BITHockeyManager.sharedHockeyManager().configureWithIdentifier(hockey)\n-                BITHockeyManager.sharedHockeyManager().disableCrashManager = true\n-                BITHockeyManager.sharedHockeyManager().updateManager.checkForUpdateOnLaunch = true\n-                BITHockeyManager.sharedHockeyManager().startManager()\n-                BITHockeyManager.sharedHockeyManager().authenticator.authenticateInstallation()\n-            }\n-        }\n+        // Apply styles\n+        MainAppTheme.navigation.applyAppearance(application)\n+        MainAppTheme.tab.applyAppearance(application)\n+        MainAppTheme.search.applyAppearance(application)\n         \n         // Creating main window\n-        \n         window = UIWindow(frame: UIScreen.mainScreen().bounds);\n         window?.backgroundColor = UIColor.whiteColor()\n         \ndiff --git a/apps/actor-ios/ActorClient/Screens/Settings/AASettingsController.swift b/apps/actor-ios/ActorClient/Screens/Settings/AASettingsController.swift\nindex 6b3696d59..8f88d527c 100644\n--- a/apps/actor-ios/ActorClient/Screens/Settings/AASettingsController.swift\n+++ b/apps/actor-ios/ActorClient/Screens/Settings/AASettingsController.swift\n@@ -328,9 +328,10 @@ class AASettingsController: AATableViewController {\n     }\n     \n     private func navigateToPrivacySettings() {\n-        let privacySettingsController = AASettingsPrivacyController(user: user)\n-        privacySettingsController.hidesBottomBarWhenPushed = true\n-        navigationController?.pushViewController(privacySettingsController, animated: true)\n+//        let privacySettingsController = AASettingsPrivacyController(user: user)\n+//        privacySettingsController.hidesBottomBarWhenPushed = true\n+//        navigationController?.pushViewController(privacySettingsController, animated: true)\n+        fatalError(\"Test Error\")\n     }\n     \n }\ndiff --git a/apps/actor-ios/Podfile b/apps/actor-ios/Podfile\nindex 89659adc9..9a48213f5 100644\n--- a/apps/actor-ios/Podfile\n+++ b/apps/actor-ios/Podfile\n@@ -28,4 +28,5 @@ target 'ActorApp' do\n     \n     # Tracking\n     pod 'SplunkMint-iOS'\n+    pod 'Mixpanel'\n end\n\\ No newline at end of file",
    "Allow signed identity document without wrapped document": "diff --git a/vespa-athenz/src/main/java/com/yahoo/vespa/athenz/identityprovider/api/bindings/SignedIdentityDocumentEntity.java b/vespa-athenz/src/main/java/com/yahoo/vespa/athenz/identityprovider/api/bindings/SignedIdentityDocumentEntity.java\nindex 3d4872549d6..6f773d51df3 100644\n--- a/vespa-athenz/src/main/java/com/yahoo/vespa/athenz/identityprovider/api/bindings/SignedIdentityDocumentEntity.java\n+++ b/vespa-athenz/src/main/java/com/yahoo/vespa/athenz/identityprovider/api/bindings/SignedIdentityDocumentEntity.java\n@@ -54,7 +54,7 @@ public class SignedIdentityDocumentEntity {\n                                         @JsonProperty(\"ip-addresses\") Set<String> ipAddresses,\n                                         @JsonProperty(\"identity-type\") String identityType) {\n         this.rawIdentityDocument = rawIdentityDocument;\n-        this.identityDocument = parseIdentityDocument(rawIdentityDocument);\n+        this.identityDocument = rawIdentityDocument != null ? parseIdentityDocument(rawIdentityDocument) : null;\n         this.signature = signature;\n   ",
    "add filter demo data .": "diff --git a/webapps/webapp/src/main/runtime/develop/java/org/camunda/bpm/pa/demo/InvoiceDemoDataGenerator.java b/webapps/webapp/src/main/runtime/develop/java/org/camunda/bpm/pa/demo/InvoiceDemoDataGenerator.java\nindex 8e302434bd..3f6e1166ab 100644\n--- a/webapps/webapp/src/main/runtime/develop/java/org/camunda/bpm/pa/demo/InvoiceDemoDataGenerator.java\n+++ b/webapps/webapp/src/main/runtime/develop/java/org/camunda/bpm/pa/demo/InvoiceDemoDataGenerator.java\n@@ -1,16 +1,24 @@\n package org.camunda.bpm.pa.demo;\n \n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.HashMap;\n import java.util.logging.Logger;\n \n import org.camunda.bpm.engine.AuthorizationService;\n+import org.camunda.bpm.engine.FilterService;\n import org.camunda.bpm.engine.ProcessEngine;\n import static org.camunda.bpm.engine.authorization.Authorization.*;\n import static org.camunda.bpm.engine.authorization.Permissions.*;\n import static org.camunda.bpm.engine.authorization.Resources.*;\n \n+import org.camunda.bpm.engine.TaskService;\n import org.camunda.bpm.engine.authorization.Authorization;\n import org.camunda.bpm.engine.identity.Group;\n import org.camunda.bpm.engine.identity.User;\n+import org.camunda.bpm.engine.task.TaskQuery;\n+\n+import org.camunda.bpm.engine.filter.Filter;\n \n /**\n  * @author drobisch\n@@ -148,5 +156,30 @@ public class InvoiceDemoDataGenerator {\n       accMaryAuth.setResourceId(\"mary\");\n       accMaryAuth.addPermission(READ);\n       authorizationService.saveAuthorization(accMaryAuth);\n+\n+      // Filter\n+      FilterService filterService = engine.getFilterService();\n+      Map<String, Object> properties = new HashMap<String, Object>();\n+      properties.put(\"description\", \"Unfiltered Tasks\");\n+      properties.put(\"priority\", 1);\n+      Filter filter = filterService.newTaskFilter().setName(\"All Tasks\").setProperties(properties);\n+      filterService.saveFilter(filter);\n+\n+      TaskService taskService = engine.getTaskService();\n+      TaskQuery query = taskService.createTaskQuery().taskAssignee(\"jonny1\");\n+      properties.clear();\n+      properties.put(\"description\", \"Tasks assigned to me\");\n+      properties.put(\"priority\", -10);\n+      filter = filterService.newTaskFilter().setName(\"My Tasks\").setProperties(properties).setQuery(query);\n+      filterService.saveFilter(filter);\n+\n+      query = taskService.createTaskQuery().taskCandidateGroup(\"accounting\");\n+      properties.clear();\n+      properties.put(\"description\", \"Tasks assigned to group accounting\");\n+      properties.put(\"priority\", 5);\n+      properties.put(\"color\", \"#3e4d2f\");\n+      filter = filterService.newTaskFilter().setName(\"Accounting Tasks\").setProperties(properties).setQuery(query);\n+      filterService.saveFilter(filter);\n+\n     }\n }",
    "suppress output during rmarkdown package update": "diff --git a/src/cpp/session/modules/rmarkdown/RMarkdownInstall.cpp b/src/cpp/session/modules/rmarkdown/RMarkdownInstall.cpp\nindex 30ae42b39b..e5320a58dc 100644\n--- a/src/cpp/session/modules/rmarkdown/RMarkdownInstall.cpp\n+++ b/src/cpp/session/modules/rmarkdown/RMarkdownInstall.cpp\n@@ -24,6 +24,7 @@\n #include <core/system/Process.hpp>\n \n #include <r/RExec.hpp>\n+#include <r/session/RSessionUtils.hpp>\n \n #include <session/SessionUserSettings.hpp>\n #include <session/SessionModuleContext.hpp>\n@@ -191,6 +192,9 @@ Error installWithProgress(\n // perform a silent upgrade\n Error silentUpdate()\n {\n+   // suppress output which occurs during silent update\n+   r::session::utils::SuppressOutputInScope suppressOutput;\n+\n    return r::exec::RFunction(\".rs.updateRMarkdownPackage\",\n                              rmarkdownPackageArchive()).call();\n }",
    "Rebuilding programmers menu after installing additional package with boards manager .": "diff --git a/app/src/processing/app/Base.java b/app/src/processing/app/Base.java\nindex 4ff1cee5a..ba95406e3 100644\n--- a/app/src/processing/app/Base.java\n+++ b/app/src/processing/app/Base.java\n@@ -118,6 +118,7 @@ public class Base {\n   // actually used are determined by the preferences, which are shared)\n   private List<JMenu> boardsCustomMenus;\n   private volatile Action openBoardsManager;\n+  private List<JMenuItem> programmerMenus;\n \n   private final PdeKeywords pdeKeywords;\n   private final List<JMenuItem> recentSketchesMenuItems;\n@@ -299,6 +300,7 @@ public class Base {\n     BaseNoGui.initPackages();\n     splashScreenHelper.splashText(_(\"Preparing boards...\"));\n     rebuildBoardsMenu();\n+    rebuildProgrammerMenu();\n \n     // Setup board-dependent variables.\n     onBoardOrPortChange();\n@@ -1275,6 +1277,7 @@ public class Base {\n       protected void onIndexesUpdated() throws Exception {\n         BaseNoGui.initPackages();\n         rebuildBoardsMenu();\n+        rebuildProgrammerMenu();\n         onBoardOrPortChange();\n         setIndexer(BaseNoGui.librariesIndexer);\n       }\n@@ -1298,6 +1301,7 @@ public class Base {\n       protected void onIndexesUpdated() throws Exception {\n         BaseNoGui.initPackages();\n         rebuildBoardsMenu();\n+        rebuildProgrammerMenu();\n         setIndexer(BaseNoGui.indexer);\n         if (StringUtils.isNotEmpty(filterText)) {\n           setFilterText(filterText);\n@@ -1313,6 +1317,7 @@ public class Base {\n     // Reload all boards (that may have been installed/updated/removed)\n     BaseNoGui.initPackages();\n     rebuildBoardsMenu();\n+    rebuildProgrammerMenu();\n     onBoardOrPortChange();\n   }\n \n@@ -1515,6 +1520,10 @@ public class Base {\n     throw new Exception(\"Custom menu not found!\");\n   }\n \n+  public List<JMenuItem> getProgrammerMenus() {\n+    return programmerMenus;\n+  }\n+\n   private static JMenuItem selectVisibleSelectedOrFirstMenuItem(JMenu menu) {\n     JMenuItem firstVisible = null;\n     for (int i = 0; i < menu.getItemCount(); i++) {\n@@ -1546,8 +1555,9 @@ public class Base {\n     throw new IllegalStateException(\"Menu has no enabled items\");\n   }\n \n-  public void rebuildProgrammerMenu(JMenu menu) {\n-    menu.removeAll();\n+  public void rebuildProgrammerMenu() {\n+    programmerMenus = new LinkedList<>();\n+\n     ButtonGroup group = new ButtonGroup();\n     for (TargetPackage targetPackage : BaseNoGui.packages.values()) {\n       for (TargetPlatform targetPlatform : targetPackage.platforms()) {\n@@ -1555,18 +1565,18 @@ public class Base {\n           String id = targetPackage.getId() + \":\" + programmer;\n \n           @SuppressWarnings(\"serial\")\n-          AbstractAction action = new AbstractAction(targetPlatform\n-                  .getProgrammer(programmer).get(\"name\")) {\n+          AbstractAction action = new AbstractAction(targetPlatform.getProgrammer(programmer).get(\"name\")) {\n             public void actionPerformed(ActionEvent actionevent) {\n               PreferencesData.set(\"programmer\", \"\" + getValue(\"id\"));\n             }\n           };\n           action.putValue(\"id\", id);\n           JMenuItem item = new JRadioButtonMenuItem(action);\n-          if (PreferencesData.get(\"programmer\").equals(id))\n+          if (PreferencesData.get(\"programmer\").equals(id)) {\n             item.setSelected(true);\n+          }\n           group.add(item);\n-          menu.add(item);\n+          programmerMenus.add(item);\n         }\n       }\n     }\ndiff --git a/app/src/processing/app/Editor.java b/app/src/processing/app/Editor.java\nindex 2ad4a37fa..1eb3b6a8f 100644\n--- a/app/src/processing/app/Editor.java\n+++ b/app/src/processing/app/Editor.java\n@@ -74,6 +74,7 @@ public class Editor extends JFrame implements RunnerListener {\n \n   private final Platform platform;\n   private JMenu recentSketchesMenu;\n+  private JMenu programmersMenu;\n \n   private static class ShouldSaveIfModified implements Predicate<Sketch> {\n \n@@ -563,6 +564,8 @@ public class Editor extends JFrame implements RunnerListener {\n         if (!components.contains(portMenu)) {\n           toolsMenu.insert(portMenu, numTools + offset);\n         }\n+        programmersMenu.removeAll();\n+        base.getProgrammerMenus().forEach(programmersMenu::add);\n         toolsMenu.revalidate();\n         validate();\n       }\n@@ -802,9 +805,10 @@ public class Editor extends JFrame implements RunnerListener {\n     toolsMenu.add(portMenu);\n     toolsMenu.addSeparator();\n \n-    JMenu programmerMenu = new JMenu(_(\"Programmer\"));\n-    base.rebuildProgrammerMenu(programmerMenu);\n-    toolsMenu.add(programmerMenu);\n+    base.rebuildProgrammerMenu();\n+    programmersMenu = new JMenu(_(\"Programmer\"));\n+    base.getProgrammerMenus().stream().forEach(programmersMenu::add);\n+    toolsMenu.add(programmersMenu);\n \n     item = new JMenuItem(_(\"Burn Bootloader\"));\n     item.addActionListener(e -> handleBurnBootloader());",
    "Removed the debugging code .": "diff --git a/app/src/main/java/com/example/bottombar/sample/ThreeTabsActivity.java b/app/src/main/java/com/example/bottombar/sample/ThreeTabsActivity.java\nindex fe8fbab..b83334c 100644\n--- a/app/src/main/java/com/example/bottombar/sample/ThreeTabsActivity.java\n+++ b/app/src/main/java/com/example/bottombar/sample/ThreeTabsActivity.java\n@@ -30,7 +30,7 @@ public class ThreeTabsActivity extends Activity {\n             public void onTabSelected(@IdRes int tabId) {\n                 messageView.setText(TabMessage.get(tabId, false));\n             }\n-        }, false);\n+        });\n \n         bottomBar.setOnTabReselectListener(new OnTabReselectListener() {\n           ",
    "added support for WifiManager": "diff --git a/src/com/xtremelabs/droidsugar/fakes/FakeApplication.java b/src/com/xtremelabs/droidsugar/fakes/FakeApplication.java\nindex b247293a5..e6a338956 100644\n--- a/src/com/xtremelabs/droidsugar/fakes/FakeApplication.java\n+++ b/src/com/xtremelabs/droidsugar/fakes/FakeApplication.java\n@@ -1,21 +1,54 @@\n package com.xtremelabs.droidsugar.fakes;\n \n+import android.app.AlarmManager;\n import android.app.Application;\n import android.content.ContentResolver;\n+import android.content.Context;\n import android.content.ContextWrapper;\n+import android.location.LocationManager;\n+import android.net.wifi.WifiManager;\n import android.test.mock.MockContentResolver;\n+import com.xtremelabs.droidsugar.util.FakeHelper;\n import com.xtremelabs.droidsugar.util.Implements;\n \n+import static org.mockito.Mockito.mock;\n+\n @SuppressWarnings({\"UnusedDeclaration\"})\n @Implements(Application.class)\n public class FakeApplication extends ContextWrapper {\n     private MockContentResolver contentResolver = new MockContentResolver();\n+    private LocationManager locationManager;\n+    private WifiManager wifiManager;\n \n     public FakeApplication(Application base) {\n         super(base);\n     }\n \n-    public ContentResolver getContentResolver() {\n+    @Override public ContentResolver getContentResolver() {\n         return contentResolver;\n     }\n+\n+    @Override public Object getSystemService(String name) {\n+        if (name.equals(Context.LAYOUT_INFLATER_SERVICE)) {\n+            return getFakeLayoutInflater();\n+        } else if (name.equals(Context.ALARM_SERVICE)) {\n+            return mock(AlarmManager.class);\n+        } else if (name.equals(Context.LOCATION_SERVICE)) {\n+            if (locationManager == null) {\n+                locationManager = mock(LocationManager.class);\n+            }\n+            return locationManager;\n+        } else if (name.equals(Context.WIFI_SERVICE)) {\n+            if (wifiManager == null) {\n+                wifiManager = FakeHelper.newInstanceOf(WifiManager.class);\n+            }\n+            return wifiManager;\n+        }\n+        return null;\n+    }\n+\n+    public FakeContextWrapper.FakeLayoutInflater getFakeLayoutInflater() {\n+        return new FakeContextWrapper.FakeLayoutInflater(FakeContextWrapper.resourceLoader.viewLoader);\n+    }\n+\n }\ndiff --git a/src/com/xtremelabs/droidsugar/fakes/FakeContextWrapper.java b/src/com/xtremelabs/droidsugar/fakes/FakeContextWrapper.java\nindex 27596e288..be24746c0 100644\n--- a/src/com/xtremelabs/droidsugar/fakes/FakeContextWrapper.java\n+++ b/src/com/xtremelabs/droidsugar/fakes/FakeContextWrapper.java\n@@ -1,11 +1,11 @@\n package com.xtremelabs.droidsugar.fakes;\n \n-import android.app.AlarmManager;\n import android.content.*;\n import android.content.pm.PackageInfo;\n import android.content.pm.PackageManager;\n import android.content.res.Resources;\n import android.location.LocationManager;\n+import android.net.wifi.WifiManager;\n import android.test.mock.MockPackageManager;\n import android.view.LayoutInflater;\n import android.view.View;\n@@ -18,8 +18,6 @@ import com.xtremelabs.droidsugar.view.TestSharedPreferences;\n \n import java.util.*;\n \n-import static org.mockito.Mockito.mock;\n-\n @SuppressWarnings({\"UnusedDeclaration\"})\n @Implements(ContextWrapper.class)\n public class FakeContextWrapper {\n@@ -36,6 +34,7 @@ public class FakeContextWrapper {\n     public Intent startedIntent;\n \n     public Map<String, BroadcastReceiver> registeredReceivers = new HashMap<String, BroadcastReceiver>();\n+    private WifiManager wifiManager;\n \n     public FakeContextWrapper(ContextWrapper realContextWrapper) {\n         this.realContextWrapper = realContextWrapper;\n@@ -53,6 +52,10 @@ public class FakeContextWrapper {\n         return getApplicationContext().getContentResolver();\n     }\n \n+    public Object getSystemService(String name) {\n+        return getApplicationContext().getSystemService(name);\n+    }\n+\n     public void sendBroadcast(Intent intent) {\n         BroadcastReceiver broadcastReceiver = registeredReceivers.get(intent.getAction());\n         if (broadcastReceiver != null) {\n@@ -97,24 +100,6 @@ public class FakeContextWrapper {\n         return packageManager;\n     }\n \n-    public Object getSystemService(String name) {\n-        if (name.equals(Context.LAYOUT_INFLATER_SERVICE)) {\n-            return getFakeLayoutInflater();\n-        } else if (name.equals(Context.ALARM_SERVICE)) {\n-            return mock(AlarmManager.class);\n-        } else if (name.equals(Context.LOCATION_SERVICE)) {\n-            if (locationManager == null) {\n-                locationManager = mock(LocationManager.class);\n-            }\n-            return locationManager;\n-        }\n-        return null;\n-    }\n-\n-    public FakeLayoutInflater getFakeLayoutInflater() {\n-        return new FakeLayoutInflater(resourceLoader.viewLoader);\n-    }\n-\n     public ComponentName startService(Intent service) {\n         startedServices.add(service);\n         return new ComponentName(\"some.service.package\", \"SomeServiceName\");\ndiff --git a/src/com/xtremelabs/droidsugar/fakes/FakeSettings.java b/src/com/xtremelabs/droidsugar/fakes/FakeSettings.java\nindex 3b4b17cb8..d9341db0a 100644\n--- a/src/com/xtremelabs/droidsugar/fakes/FakeSettings.java\n+++ b/src/com/xtremelabs/droidsugar/fakes/FakeSettings.java\n@@ -45,7 +45,6 @@ public class FakeSettings {\n \n     public static void setAirplaneMode(boolean isAirplaneMode) {\n         Settings.System.putInt(FakeHelper.application.getContentResolver(), Settings.System.AIRPLANE_MODE_ON, isAirplaneMode ? 1 : 0);\n-        setWifiOn(!isAirplaneMode);\n     }\n \n     public static void setWifiOn(boolean isOn) {\ndiff --git a/src/com/xtremelabs/droidsugar/fakes/FakeWifiManager.java b/src/com/xtremelabs/droidsugar/fakes/FakeWifiManager.java\nnew file mode 100644\nindex 000000000..3a17e13c8\n--- /dev/null\n+++ b/src/com/xtremelabs/droidsugar/fakes/FakeWifiManager.java\n@@ -0,0 +1,20 @@\n+package com.xtremelabs.droidsugar.fakes;\n+\n+import android.net.wifi.WifiManager;\n+import com.xtremelabs.droidsugar.util.Implements;\n+\n+@SuppressWarnings({\"UnusedDeclaration\"})\n+@Implements(WifiManager.class)\n+public class FakeWifiManager {\n+    private boolean wifiEnabled = true;\n+\n+    public boolean setWifiEnabled(boolean wifiEnabled) {\n+        this.wifiEnabled = wifiEnabled;\n+        return true;\n+    }\n+\n+    public boolean isWifiEnabled() {\n+        return wifiEnabled;\n+    }\n+\n+}\ndiff --git a/src/com/xtremelabs/droidsugar/util/FakeHelper.java b/src/com/xtremelabs/droidsugar/util/FakeHelper.java\nindex e3bae3d21..1ed8d645b 100644\n--- a/src/com/xtremelabs/droidsugar/util/FakeHelper.java\n+++ b/src/com/xtremelabs/droidsugar/util/FakeHelper.java\n@@ -66,6 +66,7 @@ public class FakeHelper {\n                 FakeToast.class,\n                 FakeView.class,\n                 FakeViewGroup.class,\n+                FakeWifiManager.class,\n                 FakeZoomButtonsController.class\n                 );\n     }\ndiff --git a/test/com/xtremelabs/droidsugar/fakes/ContextWrapperTest.java b/test/com/xtremelabs/droidsugar/fakes/ContextWrapperTest.java\nindex 9c2245df7..bb448b02a 100644\n--- a/test/com/xtremelabs/droidsugar/fakes/ContextWrapperTest.java\n+++ b/test/com/xtremelabs/droidsugar/fakes/ContextWrapperTest.java\n@@ -70,4 +70,20 @@ public class ContextWrapperTest {\n \n         assertThat(activity.getContentResolver(), sameInstance(new Activity().getContentResolver()));\n     }\n+\n+    @Test\n+    public void shouldReturnSameLocationManagerEveryTime() throws Exception {\n+        Activity activity = new Activity();\n+        assertThat(activity.getSystemService(Context.LOCATION_SERVICE), sameInstance(activity.getSystemService(Context.LOCATION_SERVICE)));\n+\n+        assertThat(activity.getSystemService(Context.LOCATION_SERVICE), sameInstance(new Activity().getSystemService(Context.LOCATION_SERVICE)));\n+    }\n+\n+    @Test\n+    public void shouldReturnSameWifiManagerEveryTime() throws Exception {\n+        Activity activity = new Activity();\n+        assertThat(activity.getSystemService(Context.WIFI_SERVICE), sameInstance(activity.getSystemService(Context.WIFI_SERVICE)));\n+\n+        assertThat(activity.getSystemService(Context.WIFI_SERVICE), sameInstance(new Activity().getSystemService(Context.WIFI_SERVICE)));\n+    }\n }",
    "Restrict stream constraint to pure type": "diff --git a/compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticCode.java b/compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticCode.java\nindex 51e3084f12d..8f225dfc4ab 100644\n--- a/compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticCode.java\n+++ b/compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticCode.java\n@@ -50,6 +50,7 @@ public enum DiagnosticCode {\n     UNDEFINED_STRUCTURE_FIELD_WITH_TYPE(\"undefined.field.in.structure.with.type\"), // TODO: remove Maryam\n     UNDEFINED_STRUCTURE_FIELD(\"undefined.field.in.structure\"),\n     TYPE_NOT_ALLOWED_WITH_NEW(\"type.not.allowed.with.new\"),\n+    STREAM_INVALID_CONSTRAINT(\"stream.invalid.constraint\"),\n     STREAM_INIT_NOT_ALLOWED_HERE(\"stream.initialization.not.allowed.here\"),\n     CANNOT_INFER_OBJECT_TYPE_FROM_LHS(\"cannot.infer.object.type.from.lhs\"),\n     OBJECT_UNINITIALIZED_FIELD(\"object.uninitialized.field\"),\ndiff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java\nindex 8b9ab6cf3ce..d3dce5ade6b 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java\n@@ -241,8 +241,6 @@ public class SymbolEnter extends BLangNodeVisitor {\n         pkgNode.typeDefinitions.forEach(typDef -> typDefs.add(typDef));\n         defineTypeNodes(typDefs, pkgEnv);\n \n-        pkgNode.globalVars.forEach(var -> defineNode(var, pkgEnv));\n-\n         // Enabled logging errors after type def visit.\n         // TODO: Do this in a cleaner way\n         pkgEnv.logErrors = true;\n@@ -268,6 +266,8 @@ public class SymbolEnter extends BLangNodeVisitor {\n         // Define annotation nodes.\n         pkgNode.annotations.forEach(annot -> defineNode(annot, pkgEnv));\n \n+        pkgNode.globalVars.forEach(var -> defineNode(var, pkgEnv));\n+\n         // Update globalVar for endpoints.\n         pkgNode.globalVars.stream().filter(var -> var.symbol.type.tsymbol != null && Symbols\n                 .isFlagOn(var.symbol.type.tsymbol.flags, Flags.CLIENT)).map(varNode -> varNode.symbol)\ndiff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java\nindex bcd632de433..00d67341604 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java\n@@ -1098,6 +1098,12 @@ public class SymbolResolver extends BLangNodeVisitor {\n             resultType = new BTableType(TypeTags.TABLE, constraintType, type.tsymbol);\n             return;\n         } else if (type.tag == TypeTags.STREAM) {\n+            if (!types.isPureType(constraintType)) {\n+                dlog.error(constrainedTypeNode.constraint.pos, DiagnosticCode.STREAM_INVALID_CONSTRAINT,\n+                           constraintType);\n+                resultType = symTable.semanticError;\n+                return;\n+            }\n             constrainedType = new BStreamType(TypeTags.STREAM, constraintType, null);\n         } else if (type.tag == TypeTags.FUTURE) {\n             constrainedType = new BFutureType(TypeTags.FUTURE, constraintType, null);\ndiff --git a/compiler/ballerina-lang/src/main/resources/compiler.properties b/compiler/ballerina-lang/src/main/resources/compiler.properties\nindex 6110354d6a8..1c438c6b53d 100644\n--- a/compiler/ballerina-lang/src/main/resources/compiler.properties\n+++ b/compiler/ballerina-lang/src/main/resources/compiler.properties\n@@ -56,6 +56,9 @@ error.undefined.field.in.structure=\\\n error.type.not.allowed.with.new=\\\n   type not allowed with new for type ''{0}''\n \n+error.stream.invalid.constraint=\\\n+  invalid constraint type ''{0}'', expected a subtype of ''anydata|error''\n+\n error.stream.initialization.not.allowed.here=\\\n   'stream' initialization not allowed here\n ",
    "Fixed the problems .": "diff --git a/pmd/regress/test/net/sourceforge/pmd/stat/StatisticalRuleTest.java b/pmd/regress/test/net/sourceforge/pmd/stat/StatisticalRuleTest.java\nindex 40e4cc4566..d65b114a9f 100644\n--- a/pmd/regress/test/net/sourceforge/pmd/stat/StatisticalRuleTest.java\n+++ b/pmd/regress/test/net/sourceforge/pmd/stat/StatisticalRuleTest.java\n@@ -62,7 +62,9 @@ public class StatisticalRuleTest\n \t\t\n \tpublic static final double MEAN = 499.5;\n \tpublic static final double SIGMA = 288.6750;\n-\tpublic static final int NUM_TESTS = 32;\n+\tpublic static final int NUM_TESTS = 512;\n+\t\n+\tpublic static final double DELTA = 0.005;\n \t\n     public StatisticalRuleTest(String name) \n     {\n@@ -155,12 +157,21 @@ public class StatisticalRuleTest\n \t\n \t/**\n \t * This returns the expected number of reports.\n+\t * \n+\t * If the Minimum comes in at 521.569 then we expect\n+\t * 522, 523, ... 999 will pass.\n \t */\n \tpublic int expectedMinimum(double minimum) {\n-\t\tint RC = 999 - ((int) Math.round(minimum - 0.5) + 1);\n-\t\tif (RC >= 0) return RC; else return 0;\n+\t\tDouble d = new Double( minimum );\n+\t\treturn 999 - d.intValue();\n \t}\n \t\n+\tpublic void testExpectedMinimum() {\n+\t\tfor (int i = 0; i < 999; i++) {\n+\t\t\tassertEquals(\"Integer Min\", 999 - i, expectedMinimum( i * 1.0 ));\n+\t\t\tassertEquals(\"Double Min\", 999 - i, expectedMinimum( (i * 1.0) + 0.5 ));\n+\t\t}\t\n+\t}\n \t/**\n \t * This returns a random value for Top Score.\n \t */\n@@ -173,6 +184,8 @@ public class StatisticalRuleTest\n \t * which will return more than the minimum provided.\n \t */\n \tpublic int randomTopScore(double target) {\n+\t\tif (target < 0) return 0;\n+\t\t\n \t\treturn random.nextInt( (new Double(target)).intValue() );\n \t}\n \t\ndiff --git a/pmd/src/net/sourceforge/pmd/stat/StatisticalRule.java b/pmd/src/net/sourceforge/pmd/stat/StatisticalRule.java\nindex caae18c91a..771d538ce5 100644\n--- a/pmd/src/net/sourceforge/pmd/stat/StatisticalRule.java\n+++ b/pmd/src/net/sourceforge/pmd/stat/StatisticalRule.java\n@@ -96,7 +96,7 @@ public abstract class StatisticalRule extends AbstractRule {\n \t\twhile (points.hasNext()) {\n             DataPoint point = (DataPoint) points.next();\n \n-            if (point.getScore() >= (minValue - DELTA)) {\n+            if (point.getScore() > (minValue - DELTA)) {\n                 RC.add(point);\n             }\n \t\t}",
    "Delete unused code . . RELNOTES : None .": "diff --git a/src/main/java/com/google/devtools/build/lib/profiler/TraceEvent.java b/src/main/java/com/google/devtools/build/lib/profiler/TraceEvent.java\nindex c2558c1aaa..00c66cdceb 100644\n--- a/src/main/java/com/google/devtools/build/lib/profiler/TraceEvent.java\n+++ b/src/main/java/com/google/devtools/build/lib/profiler/TraceEvent.java\n@@ -41,16 +41,6 @@ public abstract class TraceEvent {\n         category, name, timestamp, duration, threadId, primaryOutputPath);\n   }\n \n-  public static TraceEvent create(\n-      @Nullable String category,\n-      String name,\n-      @Nullable Duration timestamp,\n-      @Nullable Duration duration,\n-      long threadId) {\n-    return new AutoValue_TraceEvent(\n-        category, name, timestamp, duration, threadId, /* primaryOutputPath= */ null);\n-  }\n-\n   @Nullable\n   public abstract String category();\n ",
    "added some manual test classes": "diff --git a/test-manual/src/main/java/de/plushnikov/builder/issue127/Issue127.java b/test-manual/src/main/java/de/plushnikov/builder/issue127/Issue127.java\nnew file mode 100644\nindex 00000000..727ed431\n--- /dev/null\n+++ b/test-manual/src/main/java/de/plushnikov/builder/issue127/Issue127.java\n@@ -0,0 +1,8 @@\n+package de.plushnikov.builder.issue127;\n+\n+import lombok.Builder;\n+\n+@Builder\n+public class Issue127<T> {\n+  private T body;\n+}\ndiff --git a/test-manual/src/main/java/de/plushnikov/builder/issue249/Issue249.java b/test-manual/src/main/java/de/plushnikov/builder/issue249/Issue249.java\nnew file mode 100644\nindex 00000000..f35ecbe0\n--- /dev/null\n+++ b/test-manual/src/main/java/de/plushnikov/builder/issue249/Issue249.java\n@@ -0,0 +1,15 @@\n+package de.plushnikov.builder.issue249;\n+\n+import lombok.Builder;\n+import lombok.Value;\n+\n+@Builder\n+@Value\n+public class Issue249<T> {\n+    T value;\n+\n+    public static void main(String[] args) {\n+        final Issue249Builder<String> b = Issue249.<String>builder().value(\"a\");\n+        final Issue249<String> t = b.build();\n+    }\n+}",
    "Remove unneeded reference to FileAccessService": "diff --git a/src/net/java/sip/communicator/impl/certificate/CertificateVerificationActivator.java b/src/net/java/sip/communicator/impl/certificate/CertificateVerificationActivator.java\nindex 40067d692..2c5bffaa9 100644\n--- a/src/net/java/sip/communicator/impl/certificate/CertificateVerificationActivator.java\n+++ b/src/net/java/sip/communicator/impl/certificate/CertificateVerificationActivator.java\n@@ -9,7 +9,6 @@\n import net.java.sip.communicator.service.certificate.*;\n import net.java.sip.communicator.service.configuration.*;\n import net.java.sip.communicator.service.credentialsstorage.*;\n-import net.java.sip.communicator.service.fileaccess.*;\n import net.java.sip.communicator.service.resources.*;\n import net.java.sip.communicator.util.*;\n \n@@ -33,11 +32,6 @@ public class CertificateVerificationActivator\n      */\n     private static ConfigurationService configService;\n \n-    /**\n-     * The service giving access to files.\n-     */\n-    private static FileAccessService fileAccessService;\n-\n     /**\n      * The service giving access to all resources.\n      */\n@@ -77,7 +71,6 @@ public void start(BundleContext bc) throws Exception\n     public void stop(BundleContext bc) throws Exception\n     {\n         configService = null;\n-        fileAccessService = null;\n         resourcesService = null;\n         credService = null;\n     }\n@@ -100,23 +93,6 @@ public static ConfigurationService getConfigurationService()\n         return configService;\n     }\n \n-    /**\n-     * Returns the <tt>FileAccessService</tt> obtained from the bundle context.\n-     *\n-     * @return the <tt>FileAccessService</tt> obtained from the bundle context\n-     */\n-    public static FileAccessService getFileAccessService()\n-    {\n-        if (fileAccessService == null)\n-        {\n-            fileAccessService\n-                = ServiceUtils.getService(\n-                        bundleContext,\n-                        FileAccessService.class);\n-        }\n-        return fileAccessService;\n-    }\n-\n     /**\n      * Returns the <tt>ResourceManagementService</tt>, through which we will\n      * access all resources.\ndiff --git a/src/net/java/sip/communicator/impl/certificate/certificate.manifest.mf b/src/net/java/sip/communicator/impl/certificate/certificate.manifest.mf\nindex 84d9a25c2..7e3f074a6 100644\n--- a/src/net/java/sip/communicator/impl/certificate/certificate.manifest.mf\n+++ b/src/net/java/sip/communicator/impl/certificate/certificate.manifest.mf\n@@ -10,7 +10,6 @@ Import-Package: org.osgi.framework,\n  net.java.sip.communicator.util.swing,\n  net.java.sip.communicator.service.configuration,\n  net.java.sip.communicator.service.credentialsstorage,\n- net.java.sip.communicator.service.fileaccess,\n  net.java.sip.communicator.service.httputil,\n  net.java.sip.communicator.service.resources,\n  javax.net.ssl,",
    "include stacktrace for configuration errors in system log .": "diff --git a/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/src/java/org/apache/cassandra/config/DatabaseDescriptor.java\nindex 1ea154d436..494f7a8acb 100644\n--- a/src/java/org/apache/cassandra/config/DatabaseDescriptor.java\n+++ b/src/java/org/apache/cassandra/config/DatabaseDescriptor.java\n@@ -374,19 +374,19 @@ public class    DatabaseDescriptor\n         }\n         catch (UnknownHostException e)\n         {\n-            logger.error(\"Fatal error: \" + e.getMessage());\n+            logger.error(\"Fatal configuration error \", e);\n             System.err.println(\"Unable to start with unknown hosts configured.  Use IP addresses instead of hostnames.\");\n             System.exit(2);\n         }\n         catch (ConfigurationException e)\n         {\n-            logger.error(\"Fatal error: \" + e.getMessage());\n+            logger.error(\"Fatal configuration error\", e);\n             System.err.println(\"Bad configuration; unable to start server\");\n             System.exit(1);\n         }\n         catch (YAMLException e)\n         {\n-            logger.error(\"Fatal error: \" + e.getMessage());\n+         ",
    "Added test cases": "diff --git a/hibernate-core/src/test/java/org/hibernate/test/component/empty/EmptyCompositeManyToOneKeyCachedTest.java b/hibernate-core/src/test/java/org/hibernate/test/component/empty/EmptyCompositeManyToOneKeyCachedTest.java\nnew file mode 100644\nindex 0000000000..6bde31694a\n--- /dev/null\n+++ b/hibernate-core/src/test/java/org/hibernate/test/component/empty/EmptyCompositeManyToOneKeyCachedTest.java\n@@ -0,0 +1,435 @@\n+/*\n+ * Hibernate, Relational Persistence for Idiomatic Java\n+ *\n+ * License: GNU Lesser General Public License (LGPL), version 2.1 or later.\n+ * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.\n+ */\n+package org.hibernate.test.component.empty;\n+\n+import java.io.Serializable;\n+import javax.persistence.Cacheable;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.SharedCacheMode;\n+\n+import org.hibernate.cache.spi.access.AccessType;\n+import org.hibernate.cfg.Configuration;\n+import org.hibernate.cfg.Environment;\n+import org.hibernate.stat.QueryStatistics;\n+import org.hibernate.stat.SecondLevelCacheStatistics;\n+\n+import org.hibernate.testing.junit4.BaseCoreFunctionalTestCase;\n+import org.junit.Test;\n+\n+import static org.hibernate.testing.transaction.TransactionUtil.doInHibernate;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Gail Badner\n+ */\n+public class EmptyCompositeManyToOneKeyCachedTest extends BaseCoreFunctionalTestCase {\n+\n+\t@Override\n+\tprotected Class<?>[] getAnnotatedClasses() {\n+\t\treturn new Class[] {\n+\t\t\t\tAnEntity.class,\n+\t\t\t\tOtherEntity.class\n+\t\t};\n+\t}\n+\n+\t@Override\n+\tprotected void configure(Configuration configuration) {\n+\t\tsuper.configure( configuration );\n+\t\tconfiguration.getProperties().put( Environment.CREATE_EMPTY_COMPOSITES_ENABLED, \"true\" );\n+\t\tconfiguration.getProperties().put( Environment.USE_SECOND_LEVEL_CACHE, \"true\" );\n+\t\tconfiguration.getProperties().put( Environment.DEFAULT_CACHE_CONCURRENCY_STRATEGY, AccessType.READ_WRITE.getExternalName() );\n+\t\tconfiguration.getProperties().put( Environment.USE_QUERY_CACHE, \"true\" );\n+\t\tconfiguration.getProperties().put( Environment.GENERATE_STATISTICS, \"true\" );\n+\t\tconfiguration.getProperties().put( Environment.CACHE_REGION_PREFIX, \"\" );\n+\t\tconfiguration.getProperties().put( \"javax.persistence.sharedCache.mode\", SharedCacheMode.ALL );\n+\t}\n+\n+\t@Test\n+\tpublic void testGetEntityWithNullManyToOne() {\n+\n+\t\tsessionFactory().getCache().evictAllRegions();\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tint id = doInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = new AnEntity();\n+\t\t\t\t\tsession.persist( anEntity );\n+\t\t\t\t\treturn anEntity.id;\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 1, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = session.find( AnEntity.class, id );\n+\t\t\t\t\tassertNotNull( anEntity );\n+\t\t\t\t\tassertNull( anEntity.otherEntity );\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tassertEquals( 1, getEntity2LCStatistics( AnEntity.class ).getHitCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getHitCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getMissCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getMissCount() );\n+\t}\n+\n+\t@Test\n+\tpublic void testQueryEntityWithNullManyToOne() {\n+\n+\t\tsessionFactory().getCache().evictAllRegions();\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tint id = doInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = new AnEntity();\n+\t\t\t\t\tsession.persist( anEntity );\n+\t\t\t\t\treturn anEntity.id;\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 1, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tfinal String queryString = \"from AnEntity where id = \" + id;\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = session.createQuery(\n+\t\t\t\t\t\t\tqueryString,\n+\t\t\t\t\t\t\tAnEntity.class\n+\t\t\t\t\t).setCacheable( true ).uniqueResult();\n+\t\t\t\t\tassertNull( anEntity.otherEntity );\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 0, getQueryStatistics( queryString ).getCacheHitCount() );\n+\t\tassertEquals( 1, getQueryStatistics( queryString ).getCacheMissCount() );\n+\t\tassertEquals( 1, getQueryStatistics( queryString ).getCachePutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getHitCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getHitCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getMissCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getMissCount() );\n+\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = session.createQuery(\n+\t\t\t\t\t\t\tqueryString,\n+\t\t\t\t\t\t\tAnEntity.class\n+\t\t\t\t\t).setCacheable( true ).uniqueResult();\n+\t\t\t\t\tassertNull( anEntity.otherEntity );\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 1, getQueryStatistics( queryString ).getCacheHitCount() );\n+\t\tassertEquals( 0, getQueryStatistics( queryString ).getCacheMissCount() );\n+\t\tassertEquals( 0, getQueryStatistics( queryString ).getCachePutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tassertEquals( 1, getEntity2LCStatistics( AnEntity.class ).getHitCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getHitCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getMissCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getMissCount() );\n+\t}\n+\n+\t@Test\n+\tpublic void testQueryEntityJoinFetchNullManyToOne() {\n+\n+\t\tsessionFactory().getCache().evictAllRegions();\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tint id = doInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = new AnEntity();\n+\t\t\t\t\tsession.persist( anEntity );\n+\t\t\t\t\treturn anEntity.id;\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 1, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tfinal String queryString = \"from AnEntity e join fetch e.otherEntity where e.id = \" + id;\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = session.createQuery(\n+\t\t\t\t\t\t\tqueryString,\n+\t\t\t\t\t\t\tAnEntity.class\n+\t\t\t\t\t).setCacheable( true ).uniqueResult();\n+\t\t\t\t\tassertNull( anEntity );\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 0, getQueryStatistics( queryString ).getCacheHitCount() );\n+\t\tassertEquals( 1, getQueryStatistics( queryString ).getCacheMissCount() );\n+\t\tassertEquals( 1, getQueryStatistics( queryString ).getCachePutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getHitCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getHitCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getMissCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getMissCount() );\n+\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = session.createQuery(\n+\t\t\t\t\t\t\tqueryString,\n+\t\t\t\t\t\t\tAnEntity.class\n+\t\t\t\t\t).setCacheable( true ).uniqueResult();\n+\t\t\t\t\tassertNull( anEntity );\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 1, getQueryStatistics( queryString ).getCacheHitCount() );\n+\t\tassertEquals( 0, getQueryStatistics( queryString ).getCacheMissCount() );\n+\t\tassertEquals( 0, getQueryStatistics( queryString ).getCachePutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getHitCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getHitCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getMissCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getMissCount() );\n+\t}\n+\n+\t@Test\n+\tpublic void testQueryEntityLeftJoinFetchNullManyToOne() {\n+\n+\t\tsessionFactory().getCache().evictAllRegions();\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tint id = doInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = new AnEntity();\n+\t\t\t\t\tsession.persist( anEntity );\n+\t\t\t\t\treturn anEntity.id;\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 1, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tfinal String queryString = \"from AnEntity e left join fetch e.otherEntity where e.id = \" + id;\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = session.createQuery(\n+\t\t\t\t\t\t\tqueryString,\n+\t\t\t\t\t\t\tAnEntity.class\n+\t\t\t\t\t).setCacheable( true ).uniqueResult();\n+\t\t\t\t\tassertNull( anEntity.otherEntity );\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 0, getQueryStatistics( queryString ).getCacheHitCount() );\n+\t\tassertEquals( 1, getQueryStatistics( queryString ).getCacheMissCount() );\n+\t\tassertEquals( 1, getQueryStatistics( queryString ).getCachePutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getHitCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getHitCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getMissCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getMissCount() );\n+\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = session.createQuery(\n+\t\t\t\t\t\t\tqueryString,\n+\t\t\t\t\t\t\tAnEntity.class\n+\t\t\t\t\t).setCacheable( true ).uniqueResult();\n+\t\t\t\t\tassertNull( anEntity.otherEntity );\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 1, getQueryStatistics( queryString ).getCacheHitCount() );\n+\t\tassertEquals( 0, getQueryStatistics( queryString ).getCacheMissCount() );\n+\t\tassertEquals( 0, getQueryStatistics( queryString ).getCachePutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tassertEquals( 1, getEntity2LCStatistics( AnEntity.class ).getHitCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getHitCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getMissCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getMissCount() );\n+\t}\n+\n+\t@Test\n+\tpublic void testQueryEntityAndNullManyToOne() {\n+\n+\t\tsessionFactory().getCache().evictAllRegions();\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tint id = doInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = new AnEntity();\n+\t\t\t\t\tsession.persist( anEntity );\n+\t\t\t\t\treturn anEntity.id;\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 1, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tfinal String queryString = \"select e, e.otherEntity from AnEntity e left join e.otherEntity where e.id = \" + id;\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal Object[] result = session.createQuery(\n+\t\t\t\t\t\t\tqueryString,\n+\t\t\t\t\t\t\tObject[].class\n+\t\t\t\t\t).setCacheable( true ).uniqueResult();\n+\t\t\t\t\tassertEquals( 2, result.length );\n+\t\t\t\t\tassertTrue( AnEntity.class.isInstance( result[0] ) );\n+\t\t\t\t\tassertNull( result[1] );\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 0, getQueryStatistics( queryString ).getCacheHitCount() );\n+\t\tassertEquals( 1, getQueryStatistics( queryString ).getCacheMissCount() );\n+\t\tassertEquals( 1, getQueryStatistics( queryString ).getCachePutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getHitCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getHitCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getMissCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getMissCount() );\n+\n+\t\tsessionFactory().getStatistics().clear();\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal Object[] result = session.createQuery(\n+\t\t\t\t\t\t\tqueryString,\n+\t\t\t\t\t\t\tObject[].class\n+\t\t\t\t\t).setCacheable( true ).uniqueResult();\n+\t\t\t\t\tassertEquals( 2, result.length );\n+\t\t\t\t\tassertTrue( AnEntity.class.isInstance( result[0] ) );\n+\t\t\t\t\tassertNull( result[1] );\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tassertEquals( 1, getQueryStatistics( queryString ).getCacheHitCount() );\n+\t\tassertEquals( 0, getQueryStatistics( queryString ).getCacheMissCount() );\n+\t\tassertEquals( 0, getQueryStatistics( queryString ).getCachePutCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getPutCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getPutCount() );\n+\n+\t\tassertEquals( 1, getEntity2LCStatistics( AnEntity.class ).getHitCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getHitCount() );\n+\n+\t\tassertEquals( 0, getEntity2LCStatistics( AnEntity.class ).getMissCount() );\n+\t\tassertEquals( 0, getEntity2LCStatistics( OtherEntity.class ).getMissCount() );\n+\t}\n+\n+\n+\t@Override\n+\tprotected boolean isCleanupTestDataRequired() {\n+\t\treturn true;\n+\t}\n+\n+\tprivate SecondLevelCacheStatistics getEntity2LCStatistics(Class<?> className) {\n+\t\treturn sessionFactory().getStatistics()\n+\t\t\t\t.getSecondLevelCacheStatistics( className.getName() );\n+\t}\n+\n+\tprivate QueryStatistics getQueryStatistics(String queryString) {\n+\t\treturn sessionFactory().getStatistics().getQueryStatistics( queryString );\n+\t}\n+\t@Entity(name = \"AnEntity\")\n+\t@Cacheable\n+\tpublic static class AnEntity {\n+\t\t@Id\n+\t\tprivate int id;\n+\n+\t\t@ManyToOne\n+\t\tprivate OtherEntity otherEntity;\n+\t}\n+\n+\t@Entity(name = \"OtherEntity\")\n+\t@Cacheable\n+\tpublic static class OtherEntity implements Serializable {\n+\t\t@Id\n+\t\tprivate String firstName;\n+\n+\t\t@Id\n+\t\tprivate String lastName;\n+\n+\t\tprivate String description;\n+\n+\n+\t\t@Override\n+\t\tpublic String toString() {\n+\t\t\treturn \"OtherEntity{\" +\n+\t\t\t\t\t\"firstName='\" + firstName + '\\'' +\n+\t\t\t\t\t\", lastName='\" + lastName + '\\'' +\n+\t\t\t\t\t\", description='\" + description + '\\'' +\n+\t\t\t\t\t'}';\n+\t\t}\n+\t}\n+}\ndiff --git a/hibernate-core/src/test/java/org/hibernate/test/component/empty/EmptyCompositeManyToOneKeyTest.java b/hibernate-core/src/test/java/org/hibernate/test/component/empty/EmptyCompositeManyToOneKeyTest.java\nnew file mode 100644\nindex 0000000000..deba42c7aa\n--- /dev/null\n+++ b/hibernate-core/src/test/java/org/hibernate/test/component/empty/EmptyCompositeManyToOneKeyTest.java\n@@ -0,0 +1,202 @@\n+/*\n+ * Hibernate, Relational Persistence for Idiomatic Java\n+ *\n+ * License: GNU Lesser General Public License (LGPL), version 2.1 or later.\n+ * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.\n+ */\n+package org.hibernate.test.component.empty;\n+\n+import java.io.Serializable;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToOne;\n+\n+import org.hibernate.cfg.Configuration;\n+import org.hibernate.cfg.Environment;\n+\n+import org.hibernate.testing.TestForIssue;\n+import org.hibernate.testing.junit4.BaseCoreFunctionalTestCase;\n+import org.junit.Test;\n+\n+import static org.hibernate.testing.transaction.TransactionUtil.doInHibernate;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Gail Badner\n+ */\n+public class EmptyCompositeManyToOneKeyTest extends BaseCoreFunctionalTestCase {\n+\n+\t@Override\n+\tprotected Class<?>[] getAnnotatedClasses() {\n+\t\treturn new Class[] {\n+\t\t\t\tAnEntity.class,\n+\t\t\t\tOtherEntity.class\n+\t\t};\n+\t}\n+\n+\t@Override\n+\tprotected void configure(Configuration configuration) {\n+\t\tsuper.configure( configuration );\n+\t\tconfiguration.getProperties().put( Environment.CREATE_EMPTY_COMPOSITES_ENABLED, \"true\" );\n+\t\tconfiguration.getProperties().put( Environment.USE_SECOND_LEVEL_CACHE, \"false\" );\n+\t}\n+\n+\t@Test\n+\t@TestForIssue( jiraKey = \"HHH-11922\" )\n+\tpublic void testGetEntityWithNullManyToOne() {\n+\t\tint id = doInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = new AnEntity();\n+\t\t\t\t\tsession.persist( anEntity );\n+\t\t\t\t\treturn anEntity.id;\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = session.find( AnEntity.class, id );\n+\t\t\t\t\tassertNotNull( anEntity );\n+\t\t\t\t\tassertNull( anEntity.otherEntity );\n+\t\t\t\t}\n+\t\t);\n+\t}\n+\n+\t@Test\n+\t@TestForIssue( jiraKey = \"HHH-11922\" )\n+\tpublic void testQueryEntityWithNullManyToOne() {\n+\t\tint id = doInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = new AnEntity();\n+\t\t\t\t\tsession.persist( anEntity );\n+\t\t\t\t\treturn anEntity.id;\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = session.createQuery(\n+\t\t\t\t\t\t\t\"from AnEntity where id = \" + id,\n+\t\t\t\t\t\t\tAnEntity.class\n+\t\t\t\t\t).uniqueResult();\n+\t\t\t\t\tassertNull( anEntity.otherEntity );\n+\t\t\t\t}\n+\t\t);\n+\t}\n+\n+\t@Test\n+\t@TestForIssue( jiraKey = \"HHH-11922\" )\n+\tpublic void testQueryEntityJoinFetchNullManyToOne() {\n+\t\tint id = doInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = new AnEntity();\n+\t\t\t\t\tsession.persist( anEntity );\n+\t\t\t\t\treturn anEntity.id;\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = session.createQuery(\n+\t\t\t\t\t\t\t\"from AnEntity e join fetch e.otherEntity where e.id = \" + id,\n+\t\t\t\t\t\t\tAnEntity.class\n+\t\t\t\t\t).uniqueResult();\n+\t\t\t\t\tassertNull( anEntity );\n+\t\t\t\t}\n+\t\t);\n+\t}\n+\n+\t@Test\n+\t@TestForIssue( jiraKey = \"HHH-11922\" )\n+\tpublic void testQueryEntityLeftJoinFetchNullManyToOne() {\n+\t\tint id = doInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = new AnEntity();\n+\t\t\t\t\tsession.persist( anEntity );\n+\t\t\t\t\treturn anEntity.id;\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = session.createQuery(\n+\t\t\t\t\t\t\t\"from AnEntity e left join fetch e.otherEntity where e.id = \" + id,\n+\t\t\t\t\t\t\tAnEntity.class\n+\t\t\t\t\t).uniqueResult();\n+\t\t\t\t\tassertNull( anEntity.otherEntity );\n+\t\t\t\t}\n+\t\t);\n+\t}\n+\n+\t@Test\n+\t@TestForIssue( jiraKey = \"HHH-11922\" )\n+\tpublic void testQueryEntityAndNullManyToOne() {\n+\t\tint id = doInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal AnEntity anEntity = new AnEntity();\n+\t\t\t\t\tsession.persist( anEntity );\n+\t\t\t\t\treturn anEntity.id;\n+\t\t\t\t}\n+\t\t);\n+\n+\t\tdoInHibernate(\n+\t\t\t\tthis::sessionFactory,\n+\t\t\t\tsession -> {\n+\t\t\t\t\tfinal Object[] result = session.createQuery(\n+\t\t\t\t\t\t\t\"select e, e.otherEntity from AnEntity e left join e.otherEntity where e.id = \" + id,\n+\t\t\t\t\t\t\tObject[].class\n+\t\t\t\t\t).uniqueResult();\n+\t\t\t\t\tassertEquals( 2, result.length );\n+\t\t\t\t\tassertTrue( AnEntity.class.isInstance( result[0] ) );\n+\t\t\t\t\tassertNull( result[1] );\n+\t\t\t\t}\n+\t\t);\n+\t}\n+\n+\n+\t@Override\n+\tprotected boolean isCleanupTestDataRequired() {\n+\t\treturn true;\n+\t}\n+\n+\t@Entity(name  = \"AnEntity\")\n+\tpublic static class AnEntity {\n+\t\t@Id\n+\t\tprivate int id;\n+\n+\t\t@ManyToOne\n+\t\tprivate OtherEntity otherEntity;\n+\t}\n+\n+\t@Entity\n+\tpublic static class OtherEntity implements Serializable {\n+\t\t@Id\n+\t\tprivate String firstName;\n+\n+\t\t@Id\n+\t\tprivate String lastName;\n+\n+\t\tprivate String description;\n+\n+\n+\t\t@Override\n+\t\tpublic String toString() {\n+\t\t\treturn \"OtherEntity{\" +\n+\t\t\t\t\t\"firstName='\" + firstName + '\\'' +\n+\t\t\t\t\t\", lastName='\" + lastName + '\\'' +\n+\t\t\t\t\t\", description='\" + description + '\\'' +\n+\t\t\t\t\t'}';\n+\t\t}\n+\t}\n+}",
    "Add @ since tags and fix name of arguments to match JavaDoc": "diff --git a/truffle/src/com.oracle.truffle.api/src/com/oracle/truffle/api/TruffleStackTrace.java b/truffle/src/com.oracle.truffle.api/src/com/oracle/truffle/api/TruffleStackTrace.java\nindex 388f9b0aca1..9349db13140 100644\n--- a/truffle/src/com.oracle.truffle.api/src/com/oracle/truffle/api/TruffleStackTrace.java\n+++ b/truffle/src/com.oracle.truffle.api/src/com/oracle/truffle/api/TruffleStackTrace.java\n@@ -72,6 +72,7 @@ import com.oracle.truffle.api.nodes.Node;\n  * {@link CallTarget call target}, or that the stack trace will not be used.\n  *\n  * @see #getStackTrace() getStackTrace() to retrieve the stacktrace from a {@link Throwable}.\n+ * @since 1.0\n  */\n @SuppressWarnings(\"serial\")\n public final class TruffleStackTrace extends Exception {\n@@ -102,6 +103,9 @@ public final class TruffleStackTrace extends Exception {\n         }\n     }\n \n+    /**\n+     * @since 1.0\n+     */\n     @SuppressWarnings(\"sync-override\")\n     @Override\n     public Throwable fillInStackTrace() {\n@@ -123,6 +127,9 @@ public final class TruffleStackTrace extends Exception {\n         }\n     }\n \n+    /**\n+     * @since 1.0\n+     */\n     @Override\n     public String toString() {\n         return \"Attached Guest Language Frames (\" + frames.size() + \")\";\n@@ -137,11 +144,11 @@ public final class TruffleStackTrace extends Exception {\n      * {@link TruffleException#getStackTraceElementLimit()}.\n      *\n      * @param throwable the throwable instance to look for guest language frames\n-     * @since 0.27\n+     * @since 1.0\n      */\n     @TruffleBoundary\n-    public static List<TruffleStackTraceElement> getStacktrace(Throwable t) {\n-        TruffleStackTrace stack = fillIn(t);\n+    public static List<TruffleStackTraceElement> getStacktrace(Throwable throwable) {\n+        TruffleStackTrace stack = fillIn(throwable);\n         if (stack != null) {\n             return stack.frames;\n         }\n@@ -203,14 +210,14 @@ public final class TruffleStackTrace extends Exception {\n      * @since 1.0\n      */\n     @TruffleBoundary\n-    public static TruffleStackTrace fillIn(Throwable t) {\n-        if (t instanceof ControlFlowException) {\n+    public static TruffleStackTrace fillIn(Throwable throwable) {\n+        if (throwable instanceof ControlFlowException) {\n             return EMPTY;\n         }\n \n-        LazyStackTrace lazy = findImpl(t);\n+        LazyStackTrace lazy = findImpl(throwable);\n         if (lazy == null) {\n-            Throwable insertCause = findInsertCause(t);\n+            Throwable insertCause = findInsertCause(throwable);\n             if (insertCause == null) {\n                 return null;\n             }\n@@ -223,8 +230,8 @@ public final class TruffleStackTrace extends Exception {\n \n         int stackFrameLimit;\n         Node topCallSite;\n-        if (t instanceof TruffleException) {\n-     ",
    "Remove code duplicates": "diff --git a/src/main/java/me/coley/recaf/command/impl/Assemble.java b/src/main/java/me/coley/recaf/command/impl/Assemble.java\nindex f0ae658e..10258706 100644\n--- a/src/main/java/me/coley/recaf/command/impl/Assemble.java\n+++ b/src/main/java/me/coley/recaf/command/impl/Assemble.java\n@@ -80,14 +80,7 @@ public class Assemble extends WorkspaceCommand implements Callable<Assemble.Resu\n \t\tMethodNode generated = assembler.compile(result);\n \t\t// Replace method\n \t\tMethodNode old = node.methods.get(methodIndex);\n-\t\tgenerated.invisibleAnnotations = old.invisibleAnnotations;\n-\t\tgenerated.visibleAnnotations = old.visibleAnnotations;\n-\t\tgenerated.invisibleParameterAnnotations = old.invisibleParameterAnnotations;\n-\t\tgenerated.visibleParameterAnnotations = old.visibleParameterAnnotations;\n-\t\tgenerated.invisibleTypeAnnotations = old.invisibleTypeAnnotations;\n-\t\tgenerated.visibleTypeAnnotations = old.visibleTypeAnnotations;\n-\t\tgenerated.invisibleLocalVariableAnnotations = old.invisibleLocalVariableAnnotations;\n-\t\tgenerated.visibleLocalVariableAnnotations = old.visibleLocalVariableAnnotations;\n+\t\tClassUtil.copyMethodMetadata(old, generated);\n \t\tnode.methods.set(methodIndex, generated);\n \t\t// Return wrapper\n \t\treturn new Result(node, method);\ndiff --git a/src/main/java/me/coley/recaf/control/headless/JLineEditor.java b/src/main/java/me/coley/recaf/control/headless/JLineEditor.java\nindex 9ece305e..62364c0a 100644\n--- a/src/main/java/me/coley/recaf/control/headless/JLineEditor.java\n+++ b/src/main/java/me/coley/recaf/control/headless/JLineEditor.java\n@@ -4,6 +4,7 @@ import me.coley.recaf.Recaf;\n import me.coley.recaf.command.impl.Disassemble;\n import me.coley.recaf.parse.bytecode.*;\n import me.coley.recaf.parse.bytecode.ast.RootAST;\n+import me.coley.recaf.util.ClassUtil;\n import me.coley.recaf.workspace.Workspace;\n import me.coley.recaf.workspace.WorkspaceClassWriter;\n import org.apache.commons.io.FileUtils;\n@@ -84,14 +85,7 @@ public class JLineEditor {\n \t\t\tint index = cn.methods.indexOf(mn);\n \t\t\tif(index >= 0) {\n \t\t\t\tMethodNode old = cn.methods.get(index);\n-\t\t\t\tgenerated.invisibleAnnotations = old.invisibleAnnotations;\n-\t\t\t\tgenerated.visibleAnnotations = old.visibleAnnotations;\n-\t\t\t\tgenerated.invisibleParameterAnnotations = old.invisibleParameterAnnotations;\n-\t\t\t\tgenerated.visibleParameterAnnotations = old.visibleParameterAnnotations;\n-\t\t\t\tgenerated.invisibleTypeAnnotations = old.invisibleTypeAnnotations;\n-\t\t\t\tgenerated.visibleTypeAnnotations = old.visibleTypeAnnotations;\n-\t\t\t\tgenerated.invisibleLocalVariableAnnotations = old.invisibleLocalVariableAnnotations;\n-\t\t\t\tgenerated.visibleLocalVariableAnnotations = old.visibleLocalVariableAnnotations;\n+\t\t\t\tClassUtil.copyMethodMetadata(old, generated);\n \t\t\t\tcn.methods.set(index, generated);\n \t\t\t}\n \t\t\telse\ndiff --git a/src/main/java/me/coley/recaf/ui/controls/text/BytecodePane.java b/src/main/java/me/coley/recaf/ui/controls/text/BytecodePane.java\nindex 71060bdd..b2f8f318 100644\n--- a/src/main/java/me/coley/recaf/ui/controls/text/BytecodePane.java\n+++ b/src/main/java/me/coley/recaf/ui/controls/text/BytecodePane.java\n@@ -122,14 +122,7 @@ public class BytecodePane extends TextPane {\n \t\tfor(int i = 0; i < node.methods.size(); i++) {\n \t\t\tMethodNode mn = node.methods.get(i);\n \t\t\tif(mn.name.equals(methodName) && mn.desc.equals(methodDesc)) {\n-\t\t\t\tcurrent.invisibleAnnotations = mn.invisibleAnnotations;\n-\t\t\t\tcurrent.visibleAnnotations = mn.visibleAnnotations;\n-\t\t\t\tcurrent.invisibleParameterAnnotations = mn.invisibleParameterAnnotations;\n-\t\t\t\tcurrent.visibleParameterAnnotations = mn.visibleParameterAnnotations;\n-\t\t\t\tcurrent.invisibleTypeAnnotations = mn.invisibleTypeAnnotations;\n-\t\t\t\tcurrent.visibleTypeAnnotations = mn.visibleTypeAnnotations;\n-\t\t\t\tcurrent.invisibleLocalVariableAnnotations = mn.invisibleLocalVariableAnnotations;\n-\t\t\t\tcurrent.visibleLocalVariableAnnotations = mn.visibleLocalVariableAnnotations;\n+\t\t\t\tClassUtil.copyMethodMetadata(current, mn);\n \t\t\t\tnode.methods.set(i, current);\n \t\t\t\tfound = true;\n \t\t\t\tbreak;\ndiff --git a/src/main/java/me/coley/recaf/util/ClassUtil.java b/src/main/java/me/coley/recaf/util/ClassUtil.java\nindex c38e7d71..27726111 100644\n--- a/src/main/java/me/coley/recaf/util/ClassUtil.java\n+++ b/src/main/java/me/coley/recaf/util/ClassUtil.java\n@@ -206,4 +206,21 @@ public class ClassUtil {\n \t\t\treturn (((code[6] & 0xFF) << 8) | (code[7] & 0xFF));\n \t\t} catch(Exception ex) { /* Bad class file? */ return Opcodes.V1_8;}\n \t}\n+\n+\t/**\n+\t * Copies method metadata\n+\t *\n+\t * @param from method to copy from\n+\t * @param to method to copy to\n+\t */\n+\tpublic static void copyMethodMetadata(MethodNode from, MethodNode to) {\n+\t\tto.invisibleAnnotations = from.invisibleAnnotations;\n+\t\tto.visibleAnnotations = from.visibleAnnotations;\n+\t\tto.invisibleParameterAnnotations = from.invisibleParameterAnnotations;\n+\t\tto.visibleParameterAnnotations = from.visibleParameterAnnotations;\n+\t\tto.invisibleTypeAnnotations = from.invisibleTypeAnnotations;\n+\t\tto.visibleTypeAnnotations = from.visibleTypeAnnotations;\n+\t\tto.invisibleLocalVariableAnnotations = from.invisibleLocalVariableAnnotations;\n+\t\tto.visibleLocalVariableAnnotations = from.visibleLocalVariableAnnotations;\n+\t}\n }",
    "remove unnecessary use of actingVersion": "diff --git a/examples/java/uk/co/real_logic/sbe/examples/ExampleUsingGeneratedStub.java b/examples/java/uk/co/real_logic/sbe/examples/ExampleUsingGeneratedStub.java\nindex 1b8f7865..7461cc57 100644\n--- a/examples/java/uk/co/real_logic/sbe/examples/ExampleUsingGeneratedStub.java\n+++ b/examples/java/uk/co/real_logic/sbe/examples/ExampleUsingGeneratedStub.java\n@@ -60,13 +60,12 @@ public class ExampleUsingGeneratedStub\n \n         final ByteBuffer byteBuffer = ByteBuffer.allocateDirect(4096);\n         final UnsafeBuffer directBuffer = new UnsafeBuffer(byteBuffer);\n-        final short messageTemplateVersion = 0;\n         int bufferOffset = 0;\n         int encodingLength = 0;\n \n         // Setup for encoding a message\n \n-        MESSAGE_HEADER.wrap(directBuffer, bufferOffset, messageTemplateVersion)\n+        MESSAGE_HEADER.wrap(directBuffer, bufferOffset)\n                       .blockLength(CAR_ENCODER.sbeBlockLength())\n                       .templateId(CAR_ENCODER.sbeTemplateId())\n                       .schemaId(CAR_ENCODER.sbeSchemaId())\n@@ -91,7 +90,7 @@ public class ExampleUsingGeneratedStub\n         // Decode the encoded message\n \n         bufferOffset = 0;\n-        READ_ONLY_MESSAGE_HEADER.wrap(directBuffer, bufferOffset, messageTemplateVersion);\n+        READ_ONLY_MESSAGE_HEADER.wrap(directBuffer, bufferOffset);\n \n         // Lookup the applicable flyweight to decode this type of message based on templateId and version.\n         final int templateId = READ_ONLY_MESSAGE_HEADER.templateId();\ndiff --git a/examples/java/uk/co/real_logic/sbe/examples/ExampleUsingGeneratedStubExtension.java b/examples/java/uk/co/real_logic/sbe/examples/ExampleUsingGeneratedStubExtension.java\nindex 297c9fa0..73eb2c24 100644\n--- a/examples/java/uk/co/real_logic/sbe/examples/ExampleUsingGeneratedStubExtension.java\n+++ b/examples/java/uk/co/real_logic/sbe/examples/ExampleUsingGeneratedStubExtension.java\n@@ -65,13 +65,12 @@ public class ExampleUsingGeneratedStubExtension\n \n         final ByteBuffer byteBuffer = ByteBuffer.allocateDirect(4096);\n         final UnsafeBuffer directBuffer = new UnsafeBuffer(byteBuffer);\n-        final short messageTemplateVersion = 0;\n         int bufferOffset = 0;\n         int encodingLength = 0;\n \n         // Setup for encoding a message\n \n-        MESSAGE_HEADER.wrap(directBuffer, bufferOffset, messageTemplateVersion)\n+        MESSAGE_HEADER.wrap(directBuffer, bufferOffset)\n                       .blockLength(CAR_ENCODER_0.sbeBlockLength())\n                       .templateId(CAR_ENCODER_0.sbeTemplateId())\n                       .schemaId(CAR_ENCODER_0.sbeSchemaId())\n@@ -96,7 +95,7 @@ public class ExampleUsingGeneratedStubExtension\n         // Decode the encoded message\n \n         bufferOffset = 0;\n-        READ_ONLY_MESSAGE_HEADER.wrap(directBuffer, bufferOffset, messageTemplateVersion);\n+        READ_ONLY_MESSAGE_HEADER.wrap(directBuffer, bufferOffset);\n \n         // Lookup the applicable flyweight to decode this type of message based on templateId and version.\n         final int templateId = READ_ONLY_MESSAGE_HEADER.templateId();\ndiff --git a/examples/java/uk/co/real_logic/sbe/examples/OtfExample.java b/examples/java/uk/co/real_logic/sbe/examples/OtfExample.java\nindex a03791cc..c7cbc9af 100644\n--- a/examples/java/uk/co/real_logic/sbe/examples/OtfExample.java\n+++ b/examples/java/uk/co/real_logic/sbe/examples/OtfExample.java\n@@ -40,7 +40,6 @@ public class OtfExample\n {\n     private static final MessageHeaderEncoder MESSAGE_HEADER = new MessageHeaderEncoder();\n     private static final CarEncoder CAR_ENCODER = new CarEncoder();\n-    private static final int ACTING_VERSION = 0;\n     private static final int MSG_BUFFER_CAPACITY = 4 * 1024;\n     private static final int SCHEMA_BUFFER_CAPACITY = 16 * 1024;\n \n@@ -111,7 +110,7 @@ public class OtfExample\n         final UnsafeBuffer directBuffer = new UnsafeBuffer(buffer);\n \n         int bufferOffset = 0;\n-        MESSAGE_HEADER.wrap(directBuffer, bufferOffset, ACTING_VERSION)\n+        MESSAGE_HEADER.wrap(directBuffer, bufferOffset)\n                       .blockLength(CAR_ENCODER.sbeBlockLength())\n                       .templateId(CAR_ENCODER.sbeTemplateId())\n                       .schemaId(CAR_ENCODER.sbeSchemaId())\ndiff --git a/main/java/uk/co/real_logic/sbe/generation/java/JavaGenerator.java b/main/java/uk/co/real_logic/sbe/generation/java/JavaGenerator.java\nindex b05311e9..e2f8ee5b 100644\n--- a/main/java/uk/co/real_logic/sbe/generation/java/JavaGenerator.java\n+++ b/main/java/uk/co/real_logic/sbe/generation/java/JavaGenerator.java\n@@ -313,14 +313,13 @@ public class JavaGenerator implements CodeGenerator\n \n         sb.append(String.format(\n             indent + \"    public void wrap(\\n\" +\n-            indent + \"        final %s parentMessage, final %s buffer, final int actingVersion)\\n\" +\n+            indent + \"        final %s parentMessage, final %s buffer)\\n\" +\n             indent + \"    {\\n\" +\n             indent + \"        this.parentMessage = parentMessage;\\n\" +\n             indent + \"        this.buffer = buffer;\\n\" +\n-            indent + \"        dimensions.wrap(buffer, parentMessage.limit(), actingVersion);\\n\" +\n+            indent + \"        dimensions.wrap(buffer, parentMessage.limit());\\n\" +\n             indent + \"        blockLength = dimensions.blockLength();\\n\" +\n             indent + \"        count = dimensions.numInGroup();\\n\" +\n-            indent + \"        this.actingVersion = actingVersion;\\n\" +\n             indent + \"        index = -1;\\n\" +\n             indent + \"        parentMessage.limit(parentMessage.limit() + HEADER_SIZE);\\n\" +\n             indent + \"    }\\n\\n\",\n@@ -410,7 +409,7 @@ public class JavaGenerator implements CodeGenerator\n             indent + \"        this.parentMessage = parentMessage;\\n\" +\n             indent + \"        this.buffer = buffer;\\n\" +\n             indent + \"        actingVersion = SCHEMA_VERSION;\\n\" +\n-            indent + \"        dimensions.wrap(buffer, parentMessage.limit(), actingVersion);\\n\" +\n+            indent + \"        dimensions.wrap(buffer, parentMessage.limit());\\n\" +\n             indent + \"        dimensions.blockLength((%2$s)%3$d);\\n\" +\n             indent + \"        dimensions.numInGroup((%4$s)count);\\n\" +\n             indent + \"        index = -1;\\n\" +\n@@ -546,7 +545,7 @@ public class JavaGenerator implements CodeGenerator\n             \"\\n\" +\n             indent + \"    public %1$s %2$s()\\n\" +\n             indent + \"    {\\n\" +\n-            indent + \"        %2$s.wrap(parentMessage, buffer, actingVersion);\\n\" +\n+            indent + \"        %2$s.wrap(parentMessage, buffer);\\n\" +\n             indent + \"        return %2$s;\\n\" +\n             indent + \"    }\\n\",\n             className,\n@@ -1646,18 +1645,16 @@ public class JavaGenerator implements CodeGenerator\n         final boolean callsSuper,\n         final String bufferImplementation)\n     {\n-        final String body = callsSuper ? \"        super.wrap(buffer, offset, actingVersion);\\n\" : \"\";\n+        final String body = callsSuper ? \"        super.wrap(buffer, offset);\\n\" : \"\";\n \n         return String.format(\n             \"    private %3$s buffer;\\n\" +\n             \"    private int offset;\\n\" +\n-            \"    private int actingVersion;\\n\\n\" +\n-            \"    public %1$s wrap(final %3$s buffer, final int offset, final int actingVersion)\\n\" +\n+            \"    public %1$s wrap(final %3$s buffer, final int offset)\\n\" +\n             \"    {\\n\" +\n             \"        this.buffer = buffer;\\n\" +\n             \"%4$s\" +\n             \"        this.offset = offset;\\n\" +\n-            \"        this.actingVersion = actingVersion;\\n\" +\n             \"        return this;\\n\" +\n             \"    }\\n\\n\" +\n             \"    public int size()\\n\" +\n@@ -1974,7 +1971,7 @@ public class JavaGenerator implements CodeGenerator\n             indent + \"    public %s %s()\\n\" +\n             indent + \"    {\\n\" +\n             \"%s\" +\n-            indent + \"        %s.wrap(buffer, offset + %d, actingVersion);\\n\" +\n+            indent + \"        %s.wrap(buffer, offset + %d);\\n\" +\n             indent + \"        return %s;\\n\" +\n             indent + \"    }\\n\",\n             bitSetName,\n@@ -2011,7 +2008,7 @@ public class JavaGenerator implements CodeGenerator\n             indent + \"    public %s %s()\\n\" +\n             indent + \"    {\\n\" +\n             \"%s\" +\n-            indent + \"        %s.wrap(buffer, offset + %d, actingVersion);\\n\" +\n+            indent + \"        %s.wrap(buffer, offset + %d);\\n\" +\n             indent + \"        return %s;\\n\" +\n             indent + \"    }\\n\",\n             compositeName,\ndiff --git a/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java b/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java\nindex 486f7751..101ea470 100644\n--- a/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java\n+++ b/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java\n@@ -86,8 +86,8 @@ public class JavaGeneratorTest\n         assertNotNull(clazz);\n \n         final Object flyweight = clazz.newInstance();\n-        final Method method = flyweight.getClass().getDeclaredMethod(\"wrap\", BUFFER_CLASS, int.class, int.class);\n-        method.invoke(flyweight, mockBuffer, bufferOffset, actingVersion);\n+        final Method method = flyweight.getClass().getDeclaredMethod(\"wrap\", BUFFER_CLASS, int.class);\n+        method.invoke(flyweight, mockBuffer, bufferOffset);\n \n         clazz.getDeclaredMethod(\"blockLength\", int.class).invoke(flyweight, blockLength);\n \n@@ -111,8 +111,8 @@ public class JavaGeneratorTest\n         assertNotNull(clazz);\n \n         final Object flyweight = clazz.newInstance();\n-        final Method method = flyweight.getClass().getDeclaredMethod(\"wrap\", READ_ONLY_BUFFER_CLASS, int.class, int.class);\n-        method.invoke(flyweight, mockBuffer, bufferOffset, actingVersion);\n+        final Method method = flyweight.getClass().getDeclaredMethod(\"wrap\", READ_ONLY_BUFFER_CLASS, int.class);\n+        method.invoke(flyweight, mockBuffer, bufferOffset);\n \n         final Integer result = (Integer)clazz.getDeclaredMethod(\"templateId\").invoke(flyweight);\n         assertThat(result, is((int)templateId));\n@@ -164,8 +164,8 @@ public class JavaGeneratorTest\n         assertNotNull(clazz);\n \n         final Object flyweight = clazz.newInstance();\n-        final Method method = flyweight.getClass().getDeclaredMethod(\"wrap\", READ_ONLY_BUFFER_CLASS, int.class, int.class);\n-        method.invoke(flyweight, mockBuffer, bufferOffset, actingVersion);\n+        final Method method = flyweight.getClass().getDeclaredMethod(\"wrap\", READ_ONLY_BUFFER_CLASS, int.class);\n+        method.invoke(flyweight, mockBuffer, bufferOffset);\n \n         final Object result = get(flyweight, \"cruiseControl\");\n \n@@ -175,7 +175,6 @@ public class JavaGeneratorTest\n     @Test\n     public void shouldGenerateCompositeEncoder() throws Exception\n     {\n-        final int actingVersion = 0;\n         final int bufferOffset = 64;\n         final int capacityFieldOffset = bufferOffset;\n         final int numCylindersOffset =",
    "Add basic exact matching support for X509 URI SANs .": "diff --git a/vespalib/src/tests/net/tls/openssl_impl/openssl_impl_test.cpp b/vespalib/src/tests/net/tls/openssl_impl/openssl_impl_test.cpp\nindex 4586beef910..7dacbd89503 100644\n--- a/vespalib/src/tests/net/tls/openssl_impl/openssl_impl_test.cpp\n+++ b/vespalib/src/tests/net/tls/openssl_impl/openssl_impl_test.cpp\n@@ -583,10 +583,11 @@ TEST_F(\"Exception during verification callback processing breaks handshake\", Cer\n     EXPECT_FALSE(f.handshake());\n }\n \n-TEST_F(\"Certificate verification callback observes CN and DNS SANs\", CertFixture) {\n+TEST_F(\"Certificate verification callback observes CN, DNS SANs and URI SANs\", CertFixture) {\n     auto ck = f.create_ca_issued_peer_cert(\n             {{\"rockets.wile.example.com\"}},\n-            {{\"DNS:crash.wile.example.com\"}, {\"DNS:burn.wile.example.com\"}});\n+            {{\"DNS:crash.wile.example.com\"}, {\"DNS:burn.wile.example.com\"},\n+             {\"URI:foo://bar.baz/zoid\"}});\n \n     fprintf(stderr, \"certs:\\n%s%s\\n\", f.root_ca.cert->to_pem().c_str(), ck.cert->to_pem().c_str());\n \n@@ -600,6 +601,8 @@ TEST_F(\"Certificate verification callback observes CN and DNS SANs\", CertFixture\n     ASSERT_EQUAL(2u, creds.dns_sans.size());\n     EXPECT_EQUAL(\"crash.wile.example.com\", creds.dns_sans[0]);\n     EXPECT_EQUAL(\"burn.wile.example.com\", creds.dns_sans[1]);\n+    ASSERT_EQUAL(1u, server_cb->creds.uri_sans.size());\n+    EXPECT_EQUAL(\"foo://bar.baz/zoid\", server_cb->creds.uri_sans[0]);\n }\n \n TEST_F(\"Last occurring CN is given to verification callback if multiple CNs are present\", CertFixture) {\n@@ -616,7 +619,7 @@ TEST_F(\"Last occurring CN is given to verification callback if multiple CNs are\n }\n \n // TODO we are likely to want IPADDR SANs at some point\n-TEST_F(\"Only DNS SANs are enumerated\", CertFixture) {\n+TEST_F(\"Only DNS and URI SANs are enumerated\", CertFixture) {\n     auto ck = f.create_ca_issued_peer_cert({}, {\"IP:127.0.0.1\"});\n \n     f.reset_client_with_cert_opts(ck, std::make_shared<PrintingCertificateCallback>());\n@@ -624,6 +627,7 @@ TEST_F(\"Only DNS SANs are enumerated\", CertFixture) {\n     f.reset_server_with_cert_opts(ck, server_cb);\n     ASSERT_TRUE(f.handshake());\n     EXPECT_EQUAL(0u, server_cb->creds.dns_sans.size());\n+    EXPECT_EQUAL(0u, server_cb->creds.uri_sans.size());\n }\n \n // We don't test too many combinations of peer policies here, only that\ndiff --git a/vespalib/src/tests/net/tls/policy_checking_certificate_verifier/policy_checking_certificate_verifier_test.cpp b/vespalib/src/tests/net/tls/policy_checking_certificate_verifier/policy_checking_certificate_verifier_test.cpp\nindex a9e823bf3ab..9a7e1b1b585 100644\n--- a/vespalib/src/tests/net/tls/policy_checking_certificate_verifier/policy_checking_certificate_verifier_test.cpp\n+++ b/vespalib/src/tests/net/tls/policy_checking_certificate_verifier/policy_checking_certificate_verifier_test.cpp\n@@ -8,7 +8,7 @@ using namespace vespalib;\n using namespace vespalib::net::tls;\n \n bool glob_matches(vespalib::stringref pattern, vespalib::stringref string_to_check) {\n-    auto glob = HostGlobPattern::create_from_glob(pattern);\n+    auto glob = CredentialMatchPattern::create_from_glob(pattern);\n     return glob->matches(string_to_check);\n }\n \n@@ -61,12 +61,25 @@ TEST(\"special extended regex characters are ignored\") {\n }\n \n // TODO CN + SANs\n+PeerCredentials creds_with_sans(std::vector<vespalib::string> dns_sans, std::vector<vespalib::string> uri_sans) {\n+    PeerCredentials creds;\n+    creds.dns_sans = std::move(dns_sans);\n+    creds.uri_sans = std::move(uri_sans);\n+    return creds;\n+}\n+\n PeerCredentials creds_with_dns_sans(std::vector<vespalib::string> dns_sans) {\n     PeerCredentials creds;\n     creds.dns_sans = std::move(dns_sans);\n     return creds;\n }\n \n+PeerCredentials creds_with_uri_sans(std::vector<vespalib::string> uri_sans) {\n+    PeerCredentials creds;\n+    creds.uri_sans = std::move(uri_sans);\n+    return creds;\n+}\n+\n PeerCredentials creds_with_cn(vespalib::stringref cn) {\n     PeerCredentials creds;\n     creds.common_name = cn;\n@@ -93,7 +106,7 @@ TEST(\"Non-empty policies do not allow all authenticated peers\") {\n     EXPECT_FALSE(allow_not_all.allows_all_authenticated());\n }\n \n-TEST(\"SAN requirement without glob pattern is matched as exact string\") {\n+TEST(\"DNS SAN requirement without glob pattern is matched as exact string\") {\n     auto authorized = authorized_peers({policy_with({required_san_dns(\"hello.world\")})});\n     EXPECT_TRUE(verify(authorized,  creds_with_dns_sans({{\"hello.world\"}})));\n     EXPECT_FALSE(verify(authorized, creds_with_dns_sans({{\"foo.bar\"}})));\n@@ -103,7 +116,7 @@ TEST(\"SAN requirement without glob pattern is matched as exact string\") {\n     EXPECT_FALSE(verify(authorized, creds_with_dns_sans({{\"hello.world.bar\"}})));\n }\n \n-TEST(\"SAN requirement can include glob wildcards\") {\n+TEST(\"DNS SAN requirement can include glob wildcards\") {\n     auto authorized = authorized_peers({policy_with({required_san_dns(\"*.w?rld\")})});\n     EXPECT_TRUE(verify(authorized,  creds_with_dns_sans({{\"hello.world\"}})));\n     EXPECT_TRUE(verify(authorized,  creds_with_dns_sans({{\"greetings.w0rld\"}})));\n@@ -111,23 +124,40 @@ TEST(\"SAN requirement can include glob wildcards\") {\n     EXPECT_FALSE(verify(authorized, creds_with_dns_sans({{\"world\"}})));\n }\n \n+// FIXME make this RFC 2459-compliant with subdomain matching, case insensitity for host etc\n+TEST(\"URI SAN requirement is matched as exact string in cheeky, pragmatic violation of RFC 2459\") {\n+    auto authorized = authorized_peers({policy_with({required_san_uri(\"foo://bar.baz/zoid\")})});\n+    EXPECT_TRUE(verify(authorized,  creds_with_uri_sans({{\"foo://bar.baz/zoid\"}})));\n+    EXPECT_FALSE(verify(authorized, creds_with_uri_sans({{\"foo://bar.baz/zoi\"}})));\n+    EXPECT_FALSE(verify(authorized, creds_with_uri_sans({{\"oo://bar.baz/zoid\"}})));\n+    EXPECT_FALSE(verify(authorized, creds_with_uri_sans({{\"bar://bar.baz/zoid\"}})));\n+    EXPECT_FALSE(verify(authorized, creds_with_uri_sans({{\"foo://bar.baz\"}})));\n+    EXPECT_FALSE(verify(authorized, creds_with_uri_sans({{\"foo://.baz/zoid\"}})));\n+    EXPECT_FALSE(verify(authorized, creds_with_uri_sans({{\"foo://BAR.baz/zoid\"}})));\n+}\n+\n TEST(\"multi-SAN policy requires all SANs to be present in certificate\") {\n     auto authorized = authorized_peers({policy_with({required_san_dns(\"hello.world\"),\n-                                                     required_san_dns(\"foo.bar\")})});\n-    EXPECT_TRUE(verify(authorized,  creds_with_dns_sans({{\"hello.world\"}, {\"foo.bar\"}})));\n-    // Need both\n-    EXPECT_FALSE(verify(authorized, creds_with_dns_sans({{\"hello.world\"}})));\n-    EXPECT_FALSE(verify(authorized, creds_with_dns_sans({{\"foo.bar\"}})));\n+                                                     required_san_dns(\"foo.bar\"),\n+                                                     required_san_uri(\"foo://bar/baz\")})});\n+    EXPECT_TRUE(verify(authorized, creds_with_sans({{\"hello.world\"}, {\"foo.bar\"}}, {{\"foo://bar/baz\"}})));\n+    // Need all\n+    EXPECT_FALSE(verify(authorized, creds_with_sans({{\"hello.world\"}, {\"foo.bar\"}}, {})));\n+    EXPECT_FALSE(verify(authorized, creds_with_sans({{\"hello.world\"}}, {{\"foo://bar/baz\"}})));\n+    EXPECT_FALSE(verify(authorized, creds_with_sans({{\"hello.world\"}}, {})));\n+    EXPECT_FALSE(verify(authorized, creds_with_sans({{\"foo.bar\"}}, {})));\n+    EXPECT_FALSE(verify(authorized, creds_with_sans({}, {{\"foo://bar/baz\"}})));\n     // OK with more SANs that strictly required\n-    EXPECT_TRUE(verify(authorized,  creds_with_dns_sans({{\"hello.world\"}, {\"foo.bar\"}, {\"baz.blorg\"}})));\n+    EXPECT_TRUE(verify(authorized,  creds_with_sans({{\"hello.world\"}, {\"foo.bar\"}, {\"baz.blorg\"}},\n+                                                    {{\"foo://bar/baz\"}, {\"hello://world/\"}})));\n }\n \n-TEST(\"wildcard SAN in certificate is not treated as a wildcard match by policy\") {\n+TEST(\"wildcard DNS SAN in certificate is not treated as a wildcard match by policy\") {\n     auto authorized = authorized_peers({policy_with({required_san_dns(\"hello.world\")})});\n     EXPECT_FALSE(verify(authorized, creds_with_dns_sans({{\"*.world\"}})));\n }\n \n-TEST(\"wildcard SAN in certificate is still matched by wildcard policy SAN\") {\n+TEST(\"wildcard DNS SAN in certificate is still matched by wildcard policy SAN\") {\n     auto authorized = authorized_peers({policy_with({required_san_dns(\"*.world\")})});\n     EXPECT_TRUE(verify(authorized, creds_with_dns_sans({{\"*.world\"}})));\n }\n@@ -141,7 +171,8 @@ struct MultiPolicyMatchFixture {\n MultiPolicyMatchFixture::MultiPolicyMatchFixture()\n     : authorized(authorized_peers({policy_with({required_san_dns(\"hello.world\")}),\n                                    policy_with({required_san_dns(\"foo.bar\")}),\n-                                   policy_with({required_san_dns(\"zoid.berg\")})}))\n+                                   policy_with({required_san_dns(\"zoid.berg\")}),\n+                                   policy_with({required_san_uri(\"zoid://be.rg/\")})}))\n {}\n \n MultiPolicyMatchFixture::~MultiPolicyMatchFixture() = default;\n@@ -150,6 +181,7 @@ TEST_F(\"peer verifies if it matches at least 1 policy of multiple\", MultiPolicyM\n     EXPECT_TRUE(verify(f.authorized, creds_with_dns_sans({{\"hello.world\"}})));\n     EXPECT_TRUE(verify(f.authorized, creds_with_dns_sans({{\"foo.bar\"}})));\n     EXPECT_TRUE(verify(f.authorized, creds_with_dns_sans({{\"zoid.berg\"}})));\n+    EXPECT_TRUE(verify(f.authorized, creds_with_uri_sans({{\"zoid://be.rg/\"}})));\n }\n \n TEST_F(\"peer verifies if it matches multiple policies\", MultiPolicyMatchFixture) {\ndiff --git a/vespalib/src/tests/net/tls/transport_options/transport_options_reading_test.cpp b/vespalib/src/tests/net/tls/transport_options/transport_options_reading_test.cpp\nindex 00459a4e69c..a2bced3f7b4 100644\n--- a/vespalib/src/tests/net/tls/transport_options/transport_options_reading_test.cpp\n+++ b/vespalib/src/tests/net/tls/transport_options/transport_options_reading_test.cpp\n@@ -111,10 +111,12 @@ TEST(\"can parse single peer policy with multiple requirements\") {\n     const char* json = R\"({\n       \"required-credentials\":[\n          {\"field\": \"SAN_DNS\", \"must-match\": \"hello.world\"},\n+         {\"field\": \"SAN_URI\", \"must-match\": \"foo://bar/baz\"},\n          {\"field\": \"CN\", \"must-match\": \"goodbye.moon\"}\n       ]\n     })\";\n     EXPECT_EQUAL(authorized_peers({policy_with({required_san_dns(\"hello.world\"),\n+                                                required_san_uri(\"foo://bar/baz\"),\n                                                 required_cn(\"goodbye.moon\")})}),\n                  parse_policies(json).authorized_peers());\n }\ndiff --git a/vespalib/src/vespa/vespalib/net/tls/impl/openssl_tls_context_impl.cpp b/vespalib/src/vespa/vespalib/net/tls/impl/openssl_tls_context_impl.cpp\nindex e66baf87999..d4d2f394782 100644\n--- a/vespalib/src/vespa/vespalib/net/tls/impl/openssl_tls_context_impl.cpp\n+++ b/vespalib/src/vespa/vespalib/net/tls/impl/openssl_tls_context_impl.cpp\n@@ -374,6 +374,24 @@ struct GeneralNamesDeleter {\n     }\n };\n \n+// Returns empty string if unsupported type or bad content.\n+vespalib::string get_ia5_string(const ASN1_IA5STRING* ia5_str) {\n+    if ((ia5_str->type == V_ASN1_IA5STRING) && (ia5_str->data != nullptr) && (ia5_str->length > 0)) {\n+#if (OPENSSL_VERSION_NUMBER >= 0x10100000L)\n+        const char* data  = reinterpret_cast<const char*>(::ASN1_STRING_get0_data(ia5_str));\n+#else\n+        const char* data  = reinterpret_cast<const char*>(::ASN1_STRING_data(ia5_str));\n+#endif\n+        const auto length = static_cast<size_t>(::ASN1_STRING_length(ia5_str));\n+        if (has_embedded_nulls(data, length)) {\n+            LOG(warning, \"Got X509 peer certificate with embedded nulls in SAN field\");\n+            return {};\n+        }\n+        return {data, length};\n+    }\n+    return {};\n+}\n+\n using GeneralNamesPtr = std::unique_ptr<::GENERAL_NAMES, GeneralNamesDeleter>;\n \n bool fill_certificate_subject_alternate_names(::X509* cert, PeerCredentials& creds) {\n@@ -383,21 +401,19 @@ bool fill_certificate_subject_alternate_names(::X509* cert, PeerCredentials& cre\n         for (int i = 0; i < sk_GENERAL_NAME_num(san_names.get()); ++i) {\n             auto* value = sk_GENERAL_NAME_value(san_names.get(), i);\n             if (value->type == GEN_DNS) {\n-                auto* dns_name = value->d.dNSName; // const or non-const depending on version...\n-                if ((dns_name->type == V_ASN1_IA5STRING) && (dns_name->data != nullptr) && (dns_name->length > 0)) {\n-#if (OPENSSL_VERSION_NUMBER >= 0x10100000L)\n-                    const char* data  = reinterpret_cast<const char*>(::ASN1_STRING_get0_data(dns_name));\n-#else\n-                    const char* data  = reinterpret_cast<const char*>(::ASN1_STRING_data(dns_name));\n-#endif\n-                    const auto length = static_cast<size_t>(::ASN1_STRING_length(dns_name));\n-                    if (has_embedded_nulls(data, length)) {\n-                        LOG(warning, \"Got X509 peer certificate with embedded nulls in SAN field\");\n-                        return false;\n-                    }\n-                    creds.dns_sans.emplace_back(data, length);\n+                auto content = get_ia5_string(value->d.dNSName); // arg is const or non-const depending on version...\n+                if (content.empty()) {\n+                    return false; // We assume there's something fishy with certs containing empty SANs\n+                }\n+                creds.dns_sans.emplace_back(std::move(content));\n+            } else if (value->type == GEN_URI) {\n+                auto content = get_ia5_string(value->d.uniformResourceIdentifier);\n+                if (content.empty()) {\n+                    return false;\n                 }\n-            } // TODO support GEN_IPADD SAN?\n+                creds.uri_sans.emplace_back(std::move(content));\n+            }\n+            // TODO support GEN_IPADD SAN?\n         }\n     }\n     return true;\ndiff --git a/vespalib/src/vespa/vespalib/net/tls/peer_credentials.h b/vespalib/src/vespa/vespalib/net/tls/peer_credentials.h\nindex 93e5554a86e..fb43796052e 100644\n--- a/vespalib/src/vespa/vespalib/net/tls/peer_credentials.h\n+++ b/vespalib/src/vespa/vespalib/net/tls/peer_credentials.h\n@@ -14,6 +14,8 @@ struct PeerCredentials {\n     vespalib::string common_name;\n     // 0-n DNS SAN entries. Note: \"DNS:\" prefix is not present in strings.\n     std::vector<vespalib::string> dns_sans;\n+    // 0-n DNS URI entries. Note: \"URI:\" prefix is not present in strings.\n+    std::vector<vespalib::string> uri_sans;\n \n     PeerCredentials();\n     ~PeerCredentials();\ndiff --git a/vespalib/src/vespa/vespalib/net/tls/peer_policies.cpp b/vespalib/src/vespa/vespalib/net/tls/peer_policies.cpp\nindex 27a11b3f0f1..3a136b8147d 100644\n--- a/vespalib/src/vespa/vespalib/net/tls/peer_policies.cpp\n+++ b/vespalib/src/vespa/vespalib/net/tls/peer_policies.cpp\n@@ -50,7 +50,7 @@ std::string dot_separated_glob_to_regex(vespalib::stringref glob) {\n     return ret;\n }\n \n-class RegexHostMatchPattern : public HostGlobPattern {\n+class RegexHostMatchPattern : public CredentialMatchPattern {\n     Regex _pattern_as_regex;\n public:\n     explicit RegexHostMatchPattern(vespalib::stringref glob_pattern)\n@@ -64,16 +64,36 @@ public:\n     }\n };\n \n+class ExactMatchPattern : public CredentialMatchPattern {\n+    vespalib::string _must_match_exactly;\n+public:\n+    explicit ExactMatchPattern(vespalib::stringref str_to_match) noexcept // vespalib::string ctors marked noexcept\n+        : _must_match_exactly(str_to_match)\n+    {\n+    }\n+    ~ExactMatchPattern() override = default;\n+\n+    [[nodiscard]] bool matches(vespalib::stringref str) const override {\n+        return (str == _must_match_exactly);\n+    }\n+};\n+\n } // anon ns\n \n-std::shared_ptr<const HostGlobPattern> HostGlobPattern::create_from_glob(vespalib::stringref glob_pattern) {\n+std::shared_ptr<const CredentialMatchPattern> CredentialMatchPattern::create_from_glob(vespalib::stringref glob_pattern) {\n     return std::make_shared<const RegexHostMatchPattern>(glob_pattern);\n }\n \n+std::shared_ptr<const CredentialMatchPattern> CredentialMatchPattern::create_exact_match(vespalib::stringref str) {\n+    return std::make_shared<const ExactMatchPattern>(str);\n+}\n+\n RequiredPeerCredential::RequiredPeerCredential(Field field, vespalib::string must_match_pattern)\n     : _field(field),\n       _original_pattern(std::move(must_match_pattern)),\n-      _match_pattern(HostGlobPattern::create_from_glob(_original_pattern))\n+      // FIXME it's not RFC 2459-compliant to use exact-matching for URIs, but that's all we currently need.\n+      _match_pattern(field == Field::SAN_URI ? CredentialMatchPattern::create_exact_match(_original_pattern)\n+                                             : CredentialMatchPattern::create_from_glob(_original_pattern))\n {\n }\n \ndiff --git a/vespalib/src/vespa/vespalib/net/tls/peer_policies.h b/vespalib/src/vespa/vespalib/net/tls/peer_policies.h\nindex 9d34b62415f..aeb8dd17f64 100644\n--- a/vespalib/src/vespa/vespalib/net/tls/peer_policies.h\n+++ b/vespalib/src/vespa/vespalib/net/tls/peer_policies.h\n@@ -8,22 +8,23 @@\n \n namespace vespalib::net::tls {\n \n-struct HostGlobPattern {\n-    virtual ~HostGlobPattern() = default;\n+struct CredentialMatchPattern {\n+    virtual ~CredentialMatchPattern() = default;\n     [[nodiscard]] virtual bool matches(vespalib::stringref str) const = 0;\n \n-    static std::shared_ptr<const HostGlobPattern> create_from_glob(vespalib::stringref pattern);\n+    static std::shared_ptr<const CredentialMatchPattern> create_from_glob(vespalib::stringref pattern);\n+    static std::shared_ptr<const CredentialMatchPattern> create_exact_match(vespalib::stringref pattern);\n };\n \n class RequiredPeerCredential {\n public:\n     enum class Field {\n-        CN, SAN_DNS\n+        CN, SAN_DNS, SAN_URI\n     };\n private:\n     Field _field = Field::SAN_DNS;\n     vespalib::string _original_pattern;\n-    std::shared_ptr<const HostGlobPattern> _match_pattern;\n+    std::shared_ptr<const CredentialMatchPattern> _match_pattern;\n public:\n     RequiredPeerCredential() = default;\n     RequiredPeerCredential(Field field, vespalib::string must_match_pattern);\ndiff --git a/vespalib/src/vespa/vespalib/net/tls/policy_checking_certificate_verifier.cpp b/vespalib/src/vespa/vespalib/net/tls/policy_checking_certificate_verifier.cpp\nindex b8398746d38..0a06a36c074 100644\n--- a/vespalib/src/vespa/vespalib/net/tls/policy_checking_certificate_verifier.cpp\n+++ b/vespalib/src/vespa/vespalib/net/tls/policy_checking_certificate_verifier.cpp\n@@ -6,7 +6,7 @@ namespace vespalib::net::tls {\n \n namespace {\n \n-bool matches_single_san_requirement(const PeerCredentials& peer_creds, const RequiredPeerCredential& requirement) {\n+bool matches_single_san_dns_requirement(const PeerCredentials& peer_creds, const RequiredPeerCredential& requirement) {\n     for (const auto& provided_cred : peer_creds.dns_sans) {\n         if (requirement.matches(provided_cred)) {\n             return true;\n@@ -15,6 +15,15 @@ bool matches_single_san_requirement(const PeerCredentials& peer_creds, const Req\n     return false;\n }\n \n+bool matches_single_san_uri_requirement(const PeerCredentials& peer_creds, const RequiredPeerCredential& requirement) {\n+    for (const auto& provided_cred : peer_creds.uri_sans) {\n+        if (requirement.matches(provided_cred)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n bool matches_cn_requirement(const PeerCredentials& peer_creds, const RequiredPeerCredential& requirement) {\n     return requirement.matches(peer_creds.common_name);\n }\n@@ -23,7 +32,12 @@ bool matches_all_policy_requirements(const PeerCredentials& peer_creds, const Pe\n     for (const auto& required_cred : policy.required_peer_credentials()) {\n         switch (required_cred.field()) {\n         case RequiredPeerCredential::Field::SAN_DNS:\n-            if (!matches_single_san_requirement(peer_creds, required_cred)) {\n+            if (!matches_single_san_dns_requirement(peer_creds, required_cred)) {\n+                return false;\n+            }\n+            continue;\n+        case RequiredPeerCredential::Field::SAN_URI:\n+            if (!matches_single_san_uri_requirement(peer_creds, required_cred)) {\n                 return false;\n             }\n             continue;\ndiff --git a/vespalib/src/vespa/vespalib/net/tls/transport_security_options_reading.cpp b/vespalib/src/vespa/vespalib/net/tls/transport_security_options_reading.cpp\nindex 80caa15e8b2..2c10b3838af 100644\n--- a/vespalib/src/vespa/vespalib/net/tls/transport_security_options_reading.cpp\n+++ b/vespalib/src/vespa/vespalib/net/tls/transport_security_options_reading.cpp\n@@ -57,6 +57,8 @@ RequiredPeerCredential parse_peer_credential(const Inspector& req_entry) {\n         field = RequiredPeerCredential::Field::CN;\n     } else if (field_string == \"SAN_DNS\") {\n         field = RequiredPeerCredential::Field::SAN_DNS;\n+    } else if (field_string == \"SAN_URI\") {\n+        field = RequiredPeerCredential::Field::SAN_URI;\n     } else {\n         throw IllegalArgumentException(make_string(\n                 \"Unsupported credential field type: '%s'. Supported are: CN, SAN_DNS\",\ndiff --git a/vespalib/src/vespa/vespalib/test/peer_policy_utils.cpp b/vespalib/src/vespa/vespalib/test/peer_policy_utils.cpp\nindex 981ebd0c18d..0520db6a93c 100644\n--- a/vespalib/src/vespa/vespalib/test/peer_policy_utils.cpp\n+++ b/vespalib/src/vespa/vespalib/test/peer_policy_utils.cpp\n@@ -12,6 +12,10 @@ RequiredPeerCredential required_san_dns(vespalib::stringref pattern) {\n     return {RequiredPeerCredential::Field::SAN_DNS, pattern};\n }\n \n+RequiredPeerCredential required_san_uri(vespalib::stringref pattern) {\n+    return {RequiredPeerCredential::Field::SAN_URI, pattern};\n+}\n+\n PeerPolicy policy_with(std::vector<RequiredPeerCredential> creds) {\n     return PeerPolicy(std::move(creds));\n }\ndiff --git a/vespalib/src/vespa/vespalib/test/peer_policy_utils.h b/vespalib/src/vespa/vespalib/test/peer_policy_utils.h\nindex 1a720330e7d..4ff0f828b0d 100644\n--- a/vespalib/src/vespa/vespalib/test/peer_policy_utils.h\n+++ b/vespalib/src/vespa/vespalib/test/peer_policy_utils.h\n@@ -7,6 +7,7 @@ namespace vespalib::net::tls {\n \n RequiredPeerCredential required_cn(vespalib::stringref pattern);\n RequiredPeerCredential required_san_dns(vespalib::stringref pattern);\n+RequiredPeerCredential required_san_uri(vespalib::stringref pattern);\n PeerPolicy policy_with(std::vector<RequiredPeerCredential> creds);\n AuthorizedPeers authorized_peers(std::vector<PeerPolicy> peer_policies);\n ",
    "worked out getNeighbours": "diff --git a/core/src/main/java/de/jetsli/graph/geohash/SpatialKeyHashtable.java b/core/src/main/java/de/jetsli/graph/geohash/SpatialKeyHashtable.java\nindex da91c4d2d..c7a94f3d5 100644\n--- a/core/src/main/java/de/jetsli/graph/geohash/SpatialKeyHashtable.java\n+++ b/core/src/main/java/de/jetsli/graph/geohash/SpatialKeyHashtable.java\n@@ -173,7 +173,7 @@ public class SpatialKeyHashtable implements QuadTree<Long> {\n \n     // REQUIREMENTS:\n     // * memory efficient spatial storage, even for smaller collections of data\n-    // * relative simple implementation (\"safe bytes not bits\"), use lots of methods even if its slower\n+    // * relative simple implementation (\"safe bytes not bits\"), use maintainable amount of methods even if its slower\n     // * moving bucket-index-window to configure between hashtable and quadtree \n     //   -> avoid configuration, auto-determine all stuff like necessary window, maxBuckets, ...\n     // * implement neighbor search\n@@ -593,109 +593,99 @@ public class SpatialKeyHashtable implements QuadTree<Long> {\n         if (storedKey == key || key == Long.MIN_VALUE) {\n             CoordTrig<Long> coord = new CoordTrigLongEntry();\n             algo.decode(storedKey, coord);\n-\n             if (pointer + bytesPerKeyRest + 4 > getMemoryUsageInBytes(0))\n-                throw new IllegalStateException(\"pointer \" + pointer + \" \" + getMemoryUsageInBytes(0) + \" \" + bytesPerKeyRest);\n+                throw new IllegalStateException(\"pointer \" + pointer + \" \"\n+                        + getMemoryUsageInBytes(0) + \" \" + bytesPerKeyRest);\n \n             coord.setValue(getValue(pointer + bytesPerKeyRest));\n             res.add(coord);\n             return true;\n         }\n         return false;\n-\n     }\n \n-    private void getNeighbours(BBox nodeBB, Shape searchRect, long bucketIndexBit, LeafWorker worker) {\n-        if (bucketIndexBit < spatialKeyBits) {\n-            // TODO where to get current key\n-            worker.doWork(123, 321);\n+    private void getNeighbours(BBox nodeBB, Shape searchRect, int depth, long key, LeafWorker worker) {\n+        if (depth >= bucketIndexBits * 2) {\n+            // getNodes(key, searchRect, worker);\n             return;\n         }\n \n         double lat12 = (nodeBB.maxLat + nodeBB.minLat) / 2;\n         double lon12 = (nodeBB.minLon + nodeBB.maxLon) / 2;\n-\n-        // top-left - see SpatialKeyAlgo that latitude goes from bottom to top and is 1 if on top\n+        depth += 2;\n+        key <<= 2;\n+        // see SpatialKeyAlgo that latitude goes from bottom to top and is 1 if on top\n         // 10 11\n-        // 00 01\n-        // TODO node10?\n-        long node10 = bucketIndexBit >>> 1;\n+        // 00 01    \n+        // top-left    \n         BBox nodeRect10 = new BBox(nodeBB.minLon, lon12, lat12, nodeBB.maxLat);\n         if (searchRect.intersect(nodeRect10))\n-            getNeighbours(nodeRect10, searchRect, node10, worker);\n+            getNeighbours(nodeRect10, searchRect, depth, key | 0x2L, worker);\n \n-        // top-right\n-        // TODO \n-        long node11 = bucketIndexBit >>> 1;\n+        // top-right        \n         BBox nodeRect11 = new BBox(lon12, nodeBB.maxLon, lat12, nodeBB.maxLat);\n         if (searchRect.intersect(nodeRect11))\n-            getNeighbours(nodeRect11, searchRect, node11, worker);\n+            getNeighbours(nodeRect11, searchRect, depth, key | 0x3L, worker);\n \n         // bottom-left\n-        // TODO \n-        long node00 = bucketIndexBit >>> 1;\n         BBox nodeRect00 = new BBox(nodeBB.minLon, lon12, nodeBB.minLat, lat12);\n         if (searchRect.intersect(nodeRect00))\n-            getNeighbours(nodeRect00, searchRect, node00, worker);\n+            getNeighbours(nodeRect00, searchRect, depth, key, worker);\n \n         // bottom-right\n-        // TODO \n-        long node01 = bucketIndexBit >>> 1;\n         BBox nodeRect01 = new BBox(lon12, nodeBB.maxLon, nodeBB.minLat, lat12);\n         if (searchRect.intersect(nodeRect01))\n-            getNeighbours(nodeRect01, searchRect, node01, worker);\n+            getNeighbours(nodeRect01, searchRect, depth, key | 0x1L, worker);\n+    }\n+\n+    interface LeafWorker {\n+\n+        void doWork(long key, long value);\n     }\n \n     @Override\n-    public Collection<CoordTrig<Long>> getNodes(final double lat, final double lon,\n-            final double distanceInKm) {\n+    public Collection<CoordTrig<Long>> getNodes(final Shape boundingBox) {\n         final List<CoordTrig<Long>> result = new ArrayList<CoordTrig<Long>>();\n-        final Circle c = new Circle(lat, lon, distanceInKm);\n-        LeafWorker distanceAcceptor = new LeafWorker() {\n+        LeafWorker worker = new LeafWorker() {\n \n             @Override public void doWork(long key, long value) {\n                 CoordTrigLongEntry coord = new CoordTrigLongEntry();\n                 algo.decode(key, coord);\n-                if (c.contains(coord.lat, coord.lon))\n+                if (boundingBox.contains(coord.lat, coord.lon)) {\n                     result.add(coord);\n-                coord.setValue(value);\n+                    coord.setValue(value);\n+                    result.add(coord);\n+                }\n             }\n         };\n-\n-        // TODO maxBIT\n-        getNeighbours(BBox.createEarthMax(), c, 123, distanceAcceptor);\n+        getNeighbours(BBox.createEarthMax(), boundingBox, 0, 0L, worker);\n         return result;\n     }\n \n     @Override\n-    public Collection<CoordTrig<Long>> getNodes(Shape boundingBox) {\n-        // TODO\n-        return Collections.EMPTY_LIST;\n-    }\n-\n-    interface LeafWorker {\n-\n-        void doWork(long key, long value);\n+    public Collection<CoordTrig<Long>> getNodes(final double lat, final double lon,\n+            final double distanceInKm) {\n+        return getNodes(new Circle(lat, lon, distanceInKm));\n     }\n \n     @Override\n     public Collection<CoordTrig<Long>> getNodesFromValue(final double lat, final double lon,\n-            final Long value) {\n-        // TODO no spatialKey necessary?\n-        // final long spatialKey = algo.encode(lat, lon);\n+            final Long v) {\n         final List<CoordTrig<Long>> nodes = new ArrayList<CoordTrig<Long>>(1);\n         LeafWorker worker = new LeafWorker() {\n \n             @Override public void doWork(long key, long value) {\n-                // TODO !\n-                getNodes(nodes, 0, key);\n+                if (v == value) {\n+                    CoordTrigLongEntry e = new CoordTrigLongEntry();\n+                    algo.decode(key, e);\n+                    e.setValue(value);\n+                    nodes.add(e);\n+                }\n             }\n         };\n-        // TODO maxBIT\n-        long maxBit = 1 << spatialKeyBits;\n        ",
    "Modify project without face detection for new RNCamera project": "diff --git a/postinstall_project/projectWithoutFaceDetection.pbxproj b/postinstall_project/projectWithoutFaceDetection.pbxproj\nindex 8aba166..01373fa 100644\n--- a/postinstall_project/projectWithoutFaceDetection.pbxproj\n+++ b/postinstall_project/projectWithoutFaceDetection.pbxproj\n@@ -35,7 +35,7 @@\n /* Begin PBXFileReference section */\n \t\t0314E39B1B661A0C0092D183 /* CameraFocusSquare.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = CameraFocusSquare.h; sourceTree = \"<group>\"; };\n \t\t0314E39C1B661A460092D183 /* CameraFocusSquare.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = CameraFocusSquare.m; sourceTree = \"<group>\"; };\n-\t\t4107012F1ACB723B00C6AA39 /* libRCTCamera.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libRCTCamera.a; sourceTree = BUILT_PRODUCTS_DIR; };\n+\t\t4107012F1ACB723B00C6AA39 /* libRNCamera.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libRNCamera.a; sourceTree = BUILT_PRODUCTS_DIR; };\n \t\t410701471ACB732B00C6AA39 /* RCTCamera.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = RCTCamera.h; sourceTree = \"<group>\"; };\n \t\t410701481ACB732B00C6AA39 /* RCTCamera.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = RCTCamera.m; sourceTree = \"<group>\"; };\n \t\t410701491ACB732B00C6AA39 /* RCTCameraManager.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = RCTCameraManager.h; sourceTree = \"<group>\"; };\n@@ -80,7 +80,7 @@\n \t\t410701301ACB723B00C6AA39 /* Products */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n-\t\t\t\t4107012F1ACB723B00C6AA39 /* libRCTCamera.a */,\n+\t\t\t\t4107012F1ACB723B00C6AA39 /* libRNCamera.a */,\n \t\t\t);\n \t\t\tname = Products;\n \t\t\tsourceTree = \"<group>\";\n@@ -123,9 +123,9 @@\n /* End PBXGroup section */\n \n /* Begin PBXNativeTarget section */\n-\t\t4107012E1ACB723B00C6AA39 /* RCTCamera */ = {\n+\t\t4107012E1ACB723B00C6AA39 /* RNCamera */ = {\n \t\t\tisa = PBXNativeTarget;\n-\t\t\tbuildConfigurationList = 410701411ACB723B00C6AA39 /* Build configuration list for PBXNativeTarget \"RCTCamera\" */;\n+\t\t\tbuildConfigurationList = 410701411ACB723B00C6AA39 /* Build configuration list for PBXNativeTarget \"RNCamera\" */;\n \t\t\tbuildPhases = (\n \t\t\t\t4107012B1ACB723B00C6AA39 /* Sources */,\n \t\t\t\t4107012C1ACB723B00C6AA39 /* Frameworks */,\n@@ -135,9 +135,9 @@\n \t\t\t);\n \t\t\tdependencies = (\n \t\t\t);\n-\t\t\tname = RCTCamera;\n+\t\t\tname = RNCamera;\n \t\t\tproductName = RCTCamera;\n-\t\t\tproductReference = 4107012F1ACB723B00C6AA39 /* libRCTCamera.a */;\n+\t\t\tproductReference = 4107012F1ACB723B00C6AA39 /* libRNCamera.a */;\n \t\t\tproductType = \"com.apple.product-type.library.static\";\n \t\t};\n /* End PBXNativeTarget section */\n@@ -153,7 +153,7 @@\n \t\t\t\t\t};\n \t\t\t\t};\n \t\t\t};\n-\t\t\tbuildConfigurationList = 410701281ACB719800C6AA39 /* Build configuration list for PBXProject \"RCTCamera\" */;\n+\t\t\tbuildConfigurationList = 410701281ACB719800C6AA39 /* Build configuration list for PBXProject \"RNCamera\" */;\n \t\t\tcompatibilityVersion = \"Xcode 3.2\";\n \t\t\tdevelopmentRegion = English;\n \t\t\thasScannedForEncodings = 0;\n@@ -165,7 +165,7 @@\n \t\t\tprojectDirPath = \"\";\n \t\t\tprojectRoot = \"\";\n \t\t\ttargets = (\n-\t\t\t\t4107012E1ACB723B00C6AA39 /* RCTCamera */,\n+\t\t\t\t4107012E1ACB723B00C6AA39 /* RNCamera */,\n \t\t\t);\n \t\t};\n /* End PBXProject section */\n@@ -299,7 +299,7 @@\n /* End XCBuildConfiguration section */\n \n /* Begin XCConfigurationList section */\n-\t\t410701281ACB719800C6AA39 /* Build configuration list for PBXProject \"RCTCamera\" */ = {\n+\t\t410701281ACB719800C6AA39 /* Build configuration list for PBXProject \"RNCamera\" */ = {\n \t\t\tisa = XCConfigurationList;\n \t\t\tbuildConfigurations = (\n \t\t\t\t410701291ACB719800C6AA39 /* Debug */,\n@@ -308,7 +308,7 @@\n \t\t\tdefaultConfigurationIsVisible = 0;\n \t\t\tdefaultConfigurationName = Release;\n \t\t};\n-\t\t410701411ACB723B00C6AA39 /* Build configuration list for PBXNativeTarget \"RCTCamera\" */ = {\n+\t\t410701411ACB723B00C6AA39 /* Build configuration list for PBXNativeTarget \"RNCamera\" */ = {\n \t\t\tisa = XCConfigurationList;\n \t\t\tbuildConfigurations = (\n \t\t\t\t410701421ACB723B00C6AA39 /* Debug */,",
    "Add docker - sync config to step up docker - usage on macOS .": "diff --git a/docker/docker-sync-compose.centos-6.18.yaml b/docker/docker-sync-compose.centos-6.18.yaml\nnew file mode 100644\nindex 0000000000..7f3f2aa977\n--- /dev/null\n+++ b/docker/docker-sync-compose.centos-6.18.yaml\n@@ -0,0 +1,34 @@\n+version: \"3\"\n+\n+services:\n+\n+  runtime-setup:\n+    image: netty:centos-6-1.8\n+    build:\n+      args:\n+        centos_version : \"6\"\n+        java_version : \"1.8.202\"\n+\n+  test:\n+    image: netty:centos-6-1.8\n+    volumes:\n+      - code-sync:/code:nocopy\n+\n+  test-leak:\n+    image: netty:centos-6-1.8\n+    volumes:\n+      - code-sync:/code:nocopy\n+\n+  test-boringssl-static:\n+    image: netty:centos-6-1.8\n+    volumes:\n+      - code-sync:/code:nocopy\n+\n+  shell:\n+    image: netty:centos-6-1.8\n+    volumes:\n+      - code-sync:/code:nocopy\n+\n+volumes:\n+  code-sync:\n+    external: true\ndiff --git a/docker/docker-sync.centos-6.18.yaml b/docker/docker-sync.centos-6.18.yaml\nnew file mode 100644\nindex 0000000000..98a3c121ef\n--- /dev/null\n+++ b/docker/docker-sync.centos-6.18.yaml\n@@ -0,0 +1,8 @@\n+version: \"2\"\n+\n+compose-dev-file-path: 'docker-sync-compose.centos-6.18.yaml'\n+\n+syncs:\n+  #IMPORTANT: ensure this name is unique and does not match your other application container name\n+  code-sync: #tip: add -sync and you keep consistent names as a convention\n+    src: '../'",
    "add proxy for SSLSocketFactory to improve compatibility .": "diff --git a/osmdroid-android/src/main/java/org/osmdroid/tileprovider/modules/TileDownloader.java b/osmdroid-android/src/main/java/org/osmdroid/tileprovider/modules/TileDownloader.java\nindex 8b74d3394..d79e1d492 100644\n--- a/osmdroid-android/src/main/java/org/osmdroid/tileprovider/modules/TileDownloader.java\n+++ b/osmdroid-android/src/main/java/org/osmdroid/tileprovider/modules/TileDownloader.java\n@@ -1,6 +1,7 @@\n package org.osmdroid.tileprovider.modules;\n \n import android.graphics.drawable.Drawable;\n+import android.os.Build;\n import android.text.TextUtils;\n import android.util.Log;\n \n@@ -21,11 +22,18 @@ import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.net.HttpURLConnection;\n+import java.net.InetAddress;\n+import java.net.Socket;\n import java.net.URL;\n import java.net.UnknownHostException;\n+import java.util.Arrays;\n import java.util.Date;\n import java.util.Map;\n \n+import javax.net.ssl.HttpsURLConnection;\n+import javax.net.ssl.SSLSocket;\n+import javax.net.ssl.SSLSocketFactory;\n+\n /**\n  * @since 6.0.2\n  * @author Fabrice Fontaine\n@@ -44,7 +52,7 @@ public class TileDownloader {\n     public Drawable downloadTile(final long pMapTileIndex, final int redirectCount, final String targetUrl,\n                                  final IFilesystemCache pFilesystemCache, final OnlineTileSourceBase pTileSource) throws CantContinueException {\n \n-        //prevent infinite looping of redirects, rare but very possible for misconfigured servers\n+        // prevent infinite looping of redirects, rare but very possible for misconfigured servers\n         if (redirectCount>3) {\n             return null;\n         }\n@@ -76,7 +84,16 @@ public class TileDownloader {\n                 return null;\n             }\n \n-            //TODO in the future, it may be necessary to allow app's using this library to override the SSL socket factory. It would here somewhere\n+            // Try to enable TLSv1.2 and/or disable SSLv3 on older devices\n+            // see:\n+            // https://stackoverflow.com/questions/33567596/android-https-web-service-communication-ssl-tls-1-2/33567745#33567745\n+            // https://stackoverflow.com/questions/26649389/how-to-disable-sslv3-in-android-for-httpsurlconnection#29946540\n+            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT_WATCH) {\n+                SSLSocketFactory socketFactory = new CompatibilitySocketFactory(\n+                        HttpsURLConnection.getDefaultSSLSocketFactory());\n+                HttpsURLConnection.setDefaultSSLSocketFactory(socketFactory);\n+            }\n+\n             if (Configuration.getInstance().getHttpProxy() != null) {\n                 c = (HttpURLConnection) new URL(tileURLString).openConnection(Configuration.getInstance().getHttpProxy());\n             } else {\n@@ -89,12 +106,8 @@ public class TileDownloader {\n             }\n             c.connect();\n \n-\n             // Check to see if we got success\n-\n             if (c.getResponseCode() != 200) {\n-\n-\n                 switch (c.getResponseCode()) {\n                     case 301:\n                     case 302:\n@@ -133,10 +146,8 @@ public class TileDownloader {\n                         return null;\n                     }\n                 }\n-\n-\n-\n             }\n+\n             String mime = c.getHeaderField(\"Content-Type\");\n             if (Configuration.getInstance().isDebugMapTileDownloader()) {\n                 Log.d(IMapView.LOGTAG, tileURLString + \" success, mime is \" + mime );\n@@ -159,8 +170,7 @@ public class TileDownloader {\n             byteStream = new ByteArrayInputStream(data);\n \n             // Save the data to the cache\n-            //this is the only point in which we insert tiles to the db or local file system.\n-\n+            // this is the only point in which we insert tiles to the db or local file system.\n             if (pFilesystemCache != null) {\n                 pFilesystemCache.saveFile(pTileSource, pMapTileIndex, byteStream, expirationTime);\n                 byteStream.reset();\n@@ -261,4 +271,101 @@ public class TileDownloader {\n \n         return pNow + OpenStreetMapTileProviderConstants.DEFAULT_MAXIMUM_CACHED_FILE_AGE + extension;\n     }\n+\n+    /**\n+     * Proxy for {@link SSLSocketFactory} that tries to enable TLSv1.2 and/or disable SSLv3 on\n+     * older devices to improve security and compatibility with modern https server configurations\n+     *\n+     * @since 6.1.7\n+     */\n+    private static class CompatibilitySocketFactory extends SSLSocketFactory {\n+        SSLSocketFactory sslSocketFactory;\n+\n+        CompatibilitySocketFactory(SSLSocketFactory sslSocketFactory) {\n+            super();\n+            this.sslSocketFactory = sslSocketFactory;\n+        }\n+\n+        @Override\n+        public String[] getDefaultCipherSuites() {\n+            return sslSocketFactory.getDefaultCipherSuites();\n+        }\n+\n+        @Override\n+        public String[] getSupportedCipherSuites() {\n+            return sslSocketFactory.getSupportedCipherSuites();\n+        }\n+\n+        @Override\n+        public Socket createSocket() throws IOException {\n+            SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket();\n+            return upgradeTlsAndRemoveSsl(socket);\n+        }\n+\n+        @Override\n+        public Socket createSocket(Socket s, String host, int port, boolean autoClose) throws IOException {\n+            SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(s, host, port, autoClose);\n+            return upgradeTlsAndRemoveSsl(socket);\n+        }\n+\n+        @Override\n+        public Socket createSocket(String host, int port) throws IOException, UnknownHostException {\n+            SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(host, port);\n+            return upgradeTlsAndRemoveSsl(socket);\n+        }\n+\n+        @Override\n+        public Socket createSocket(String host, int port, InetAddress localHost, int localPort) throws IOException,\n+                UnknownHostException {\n+            SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(host, port, localHost, localPort);\n+            return upgradeTlsAndRemoveSsl(socket);\n+        }\n+\n+        @Override\n+        public Socket createSocket(InetAddress host, int port) throws IOException {\n+            SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(host, port);\n+            return upgradeTlsAndRemoveSsl(socket);\n+        }\n+\n+        @Override\n+        public Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort)\n+                throws IOException {\n+            SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(address, port, localAddress, localPort);\n+            return upgradeTlsAndRemoveSsl(socket);\n+        }\n+\n+        private SSLSocket upgradeTlsAndRemoveSsl(SSLSocket socket) {\n+            String[] supportedProtocols = socket.getSupportedProtocols();\n+            String[] enabledProtocols = socket.getEnabledProtocols();\n+            String[] newEnabledProtocols;\n+\n+          ",
    "Implement properly h2c upgrade - fixes <issue_id>": "diff --git a/src/main/java/io/vertx/core/http/impl/ConnectionManager.java b/src/main/java/io/vertx/core/http/impl/ConnectionManager.java\nindex 1d21163aa..3c0cb0546 100644\n--- a/src/main/java/io/vertx/core/http/impl/ConnectionManager.java\n+++ b/src/main/java/io/vertx/core/http/impl/ConnectionManager.java\n@@ -21,9 +21,6 @@ import io.vertx.core.spi.metrics.HttpClientMetrics;\n \n import java.util.*;\n import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.atomic.AtomicLong;\n-import java.util.function.Consumer;\n-import java.util.function.Function;\n \n /**\n  * The connection manager associates remote hosts with pools, it also tracks all connections so they can be closed\n@@ -137,18 +134,9 @@ class ConnectionManager {\n       } else {\n         metric = null;\n       }\n+\n       if (endpoint.pool.getConnection(client.getVertx().getOrCreateContext(), ar -> {\n         if (ar.succeeded()) {\n-          /*\n-        @Override\n-        public void initConnection(ContextInternal ctx, HttpClientConnection conn) {\n-          if (connectionHandler != null) {\n-            ctx.executeFromIO(v -> {\n-              connectionHandler.handle(conn);\n-            });\n-          }\n-        }\n-           */\n \n           HttpClientConnection conn = ar.result();\n \ndiff --git a/src/main/java/io/vertx/core/http/impl/Http1xClientConnection.java b/src/main/java/io/vertx/core/http/impl/Http1xClientConnection.java\nindex e13456415..1e686b43b 100644\n--- a/src/main/java/io/vertx/core/http/impl/Http1xClientConnection.java\n+++ b/src/main/java/io/vertx/core/http/impl/Http1xClientConnection.java\n@@ -108,11 +108,19 @@ class Http1xClientConnection extends Http1xConnectionBase implements HttpClientC\n     this.keepAliveTimeout = options.getKeepAliveTimeout();\n   }\n \n+  Object endpointMetric() {\n+    return endpointMetric;\n+  }\n+\n+  ConnectionListener<HttpClientConnection> listener() {\n+    return listener;\n+  }\n+\n   private static class StreamImpl implements HttpClientStream {\n \n-    private final Http1xClientConnection conn;\n-    private final Handler<AsyncResult<HttpClientStream>> handler;\n-    private HttpClientRequestImpl request;\n+    protected final Http1xClientConnection conn;\n+    protected final Handler<AsyncResult<HttpClientStream>> handler;\n+    protected HttpClientRequestImpl request;\n     private HttpClientResponseImpl response;\n     private boolean requestEnded;\n     private boolean responseEnded;\n@@ -125,6 +133,16 @@ class Http1xClientConnection extends Http1xConnectionBase implements HttpClientC\n       this.handler = handler;\n     }\n \n+    @Override\n+    public void reportBytesWritten(long numberOfBytes) {\n+      conn.reportBytesWritten(numberOfBytes);\n+    }\n+\n+    @Override\n+    public void reportBytesRead(long numberOfBytes) {\n+      conn.reportBytesRead(numberOfBytes);\n+    }\n+\n     @Override\n     public int id() {\n       return -1;\n@@ -176,24 +194,34 @@ class Http1xClientConnection extends Http1xConnectionBase implements HttpClientC\n       }\n     }\n \n-    public void writeHead(HttpMethod method, String rawMethod, String uri, MultiMap headers, String hostHeader, boolean chunked) {\n-      HttpRequest request = createRequest(conn.version, method, rawMethod, uri, headers);\n-      prepareHeaders(request, hostHeader, chunked);\n-      conn.writeToChannel(request);\n+    public void writeHead(HttpMethod method, String rawMethod, String uri, MultiMap headers, String hostHeader, boolean chunked, ByteBuf buf, boolean end) {\n+      writeHead(conn.version, method, rawMethod, uri, headers, hostHeader, chunked, buf, end);\n     }\n \n-    public void writeHeadWithContent(HttpMethod method, String rawMethod, String uri, MultiMap headers, String hostHeader, boolean chunked, ByteBuf buf, boolean end) {\n-      HttpRequest request = createRequest(conn.version, method, rawMethod, uri, headers);\n+    protected void writeHead(\n+      HttpVersion version,\n+      HttpMethod method,\n+      String rawMethod,\n+      String uri,\n+      MultiMap headers,\n+      String hostHeader,\n+      boolean chunked,\n+      ByteBuf buf,\n+      boolean end) {\n+      HttpRequest request = createRequest(version, method, rawMethod, uri, headers);\n       prepareHeaders(request, hostHeader, chunked);\n       if (end) {\n         if (buf != null) {\n-          conn.writeToChannel(new AssembledFullHttpRequest(request, buf));\n+          request = new AssembledFullHttpRequest(request, buf);\n         } else {\n-          conn.writeToChannel(new AssembledFullHttpRequest(request));\n+          request = new AssembledFullHttpRequest(request);\n         }\n       } else {\n-        conn.writeToChannel(new AssembledHttpRequest(request, buf));\n+        if (buf != null) {\n+          request = new AssembledHttpRequest(request, buf);\n+        }\n       }\n+      conn.writeToChannel(request);\n     }\n \n     @Override\ndiff --git a/src/main/java/io/vertx/core/http/impl/Http1xServerConnection.java b/src/main/java/io/vertx/core/http/impl/Http1xServerConnection.java\nindex ba75d7edf..f15bd0c18 100644\n--- a/src/main/java/io/vertx/core/http/impl/Http1xServerConnection.java\n+++ b/src/main/java/io/vertx/core/http/impl/Http1xServerConnection.java\n@@ -77,8 +77,6 @@ public class Http1xServerConnection extends Http1xConnectionBase implements Http\n \n   private static final Logger log = LoggerFactory.getLogger(Http1xServerConnection.class);\n \n-  private static final Handler<HttpServerRequest> NULL_REQUEST_HANDLER = req -> {};\n-\n   private static final int CHANNEL_PAUSE_QUEUE_SIZE = 5;\n \n   private final String serverOrigin;\n@@ -88,7 +86,7 @@ public class Http1xServerConnection extends Http1xConnectionBase implements Http\n   private final HttpServerMetrics metrics;\n   private boolean requestFailed;\n   private Object requestMetric;\n-  private Handler<HttpServerRequest> requestHandler = NULL_REQUEST_HANDLER;\n+  private Handler<HttpServerRequest> requestHandler;\n   private Handler<ServerWebSocket> wsHandler;\n   private HttpServerRequestImpl currentRequest;\n   private HttpServerResponseImpl pendingResponse;\n@@ -185,13 +183,23 @@ public class Http1xServerConnection extends Http1xConnectionBase implements Http\n     checkNextTick();\n   }\n \n-  synchronized void requestHandler(Handler<HttpServerRequest> handler) {\n-    this.requestHandler = handler;\n+  synchronized void requestHandlers(HttpHandlers handlers) {\n+    Handler<HttpServerRequest> handler = handlers.requestHandler;\n+    if (handlers.connectionHandler != null) {\n+      handler = req -> {\n+        requestHandler = handlers.requestHandler;\n+        handlers.connectionHandler.handle(this);\n+        handlers.requestHandler.handle(req);\n+      };\n+    }\n+    requestHandler = handler;\n+    exceptionHandler(handlers.exceptionHandler);\n   }\n \n-  synchronized void wsHandler(WebSocketServerHandshaker handshaker, Handler<ServerWebSocket> handler) {\n+  synchronized void wsHandler(WebSocketServerHandshaker handshaker, HttpHandlers handlers) {\n     this.handshaker = handshaker;\n-    this.wsHandler = handler;\n+    this.wsHandler = handlers.wsHandler;\n+    exceptionHandler(handlers.exceptionHandler);\n   }\n \n   String getServerOrigin() {\n@@ -439,7 +447,9 @@ public class Http1xServerConnection extends Http1xConnectionBase implements Http\n       if (METRICS_ENABLED && metrics != null) {\n         requestMetric = metrics.requestBegin(metric(), req);\n       }\n-      requestHandler.handle(req);\n+      if (requestHandler != null) {\n+        requestHandler.handle(req);\n+      }\n     } else if (msg == LastHttpContent.EMPTY_LAST_CONTENT) {\n       handleLastHttpContent();\n     } else if (msg instanceof HttpContent) {\ndiff --git a/src/main/java/io/vertx/core/http/impl/Http1xServerHandler.java b/src/main/java/io/vertx/core/http/impl/Http1xServerHandler.java\nindex bca9c8290..f55284fb6 100644\n--- a/src/main/java/io/vertx/core/http/impl/Http1xServerHandler.java\n+++ b/src/main/java/io/vertx/core/http/impl/Http1xServerHandler.java\n@@ -17,9 +17,7 @@ import io.netty.handler.codec.http.HttpMethod;\n import io.netty.handler.codec.http.HttpRequest;\n import io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker;\n import io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory;\n-import io.vertx.core.Handler;\n import io.vertx.core.VertxException;\n-import io.vertx.core.http.HttpConnection;\n import io.vertx.core.http.HttpServerOptions;\n import io.vertx.core.logging.Logger;\n import io.vertx.core.logging.LoggerFactory;\n@@ -62,16 +60,12 @@ public class Http1xServerHandler extends VertxHttpHandler<Http1xServerConnection\n       serverOrigin,\n       metrics);\n     setConnection(conn);\n-    conn.requestHandler(holder.handler.requesthHandler);\n-    holder.context.executeFromIO(v -> {\n-      if (metrics != null) {\n+    conn.requestHandlers(holder.handler);\n+    if (metrics != null) {\n+      holder.context.executeFromIO(v -> {\n         conn.metric(metrics.connected(conn.remoteAddress(), conn.remoteName()));\n-      }\n-      Handler<HttpConnection> connHandler = holder.handler.connectionHandler;\n-      if (connHandler != null) {\n-        connHandler.handle(conn);\n-      }\n-    });\n+      });\n+    }\n   }\n \n   @Override\ndiff --git a/src/main/java/io/vertx/core/http/impl/Http2ClientConnection.java b/src/main/java/io/vertx/core/http/impl/Http2ClientConnection.java\nindex c1ecde910..3be8e2caa 100644\n--- a/src/main/java/io/vertx/core/http/impl/Http2ClientConnection.java\n+++ b/src/main/java/io/vertx/core/http/impl/Http2ClientConnection.java\n@@ -32,6 +32,7 @@ import io.vertx.core.net.NetSocket;\n import io.vertx.core.spi.metrics.HttpClientMetrics;\n \n import java.util.Map;\n+import java.util.function.BiConsumer;\n \n import static io.vertx.core.http.HttpHeaders.DEFLATE_GZIP;\n \n@@ -97,27 +98,44 @@ class Http2ClientConnection extends Http2ConnectionBase implements HttpClientCon\n     super.onStreamClosed(nettyStream);\n   }\n \n+  void upgradeStream(HttpClientRequestImpl req, Handler<AsyncResult<HttpClientStream>> completionHandler) {\n+    Future<HttpClientStream> fut;\n+    synchronized (this) {\n+      try {\n+        Http2ClientStream stream = createStream(true, 1);\n+        stream.beginRequest(req);\n+        fut = Future.succeededFuture(stream);\n+      } catch (Exception e) {\n+        fut = Future.failedFuture(e);\n+      }\n+    }\n+    completionHandler.handle(fut);\n+  }\n+\n   @Override\n   public void createStream(Handler<AsyncResult<HttpClientStream>> completionHandler) {\n     Future<HttpClientStream> fut;\n     synchronized (this) {\n+      Http2Connection conn = handler.connection();\n       try {\n-        Http2Connection conn = handler.connection();\n-\n-\n-\n-        Http2Stream stream = conn.local().createStream(conn.local().incrementAndGetNextStreamId(), false);\n-        boolean writable = handler.encoder().flowController().isWritable(stream);\n-        Http2ClientStream clientStream = new Http2ClientStream(this, stream, writable);\n-        streams.put(clientStream.stream.id(), clientStream);\n-        fut = Future.succeededFuture(clientStream);\n-      } catch (Http2Exception e) {\n+        Http2ClientStream stream = createStream(false, conn.local().incrementAndGetNextStreamId());\n+        fut = Future.succeededFuture(stream);\n+      } catch (Exception e) {\n         fut = Future.failedFuture(e);\n       }\n     }\n     completionHandler.handle(fut);\n   }\n \n+  private Http2ClientStream createStream(boolean upgrade, int streamId) throws Exception {\n+    Http2Connection conn = handler.connection();\n+    Http2Stream stream = upgrade ? conn.stream(1) : conn.local().createStream(streamId, false);\n+    boolean writable = handler.encoder().flowController().isWritable(stream);\n+    Http2ClientStream clientStream = new Http2ClientStream(this, stream, writable);\n+    streams.put(clientStream.stream.id(), clientStream);\n+    return clientStream;\n+  }\n+\n   @Override\n   public void recycle() {\n     int timeout = client.getOptions().getHttp2KeepAliveTimeout();\n@@ -304,12 +322,7 @@ class Http2ClientConnection extends Http2ConnectionBase implements HttpClientCon\n     }\n \n     @Override\n-    public void writeHead(HttpMethod method, String rawMethod, String uri, MultiMap headers, String hostHeader, boolean chunked) {\n-      writeHeadWithContent(method, rawMethod, uri, headers, hostHeader, chunked, null, false);\n-    }\n-\n-    @Override\n-    public void writeHeadWithContent(HttpMethod method, String rawMethod, String uri, MultiMap headers, String hostHeader, boolean chunked, ByteBuf content, boolean end) {\n+    public void writeHead(HttpMethod method, String rawMethod, String uri, MultiMap headers, String hostHeader, boolean chunked, ByteBuf content, boolean end) {\n       Http2Headers h = new DefaultHttp2Headers();\n       h.method(method != HttpMethod.OTHER ? method.name() : rawMethod);\n       if (method == HttpMethod.CONNECT) {\n@@ -361,6 +374,16 @@ class Http2ClientConnection extends Http2ConnectionBase implements HttpClientCon\n       super.writeFrame(type, flags, payload);\n     }\n \n+    @Override\n+    public void reportBytesWritten(long numberOfBytes) {\n+      conn.reportBytesWritten(numberOfBytes);\n+    }\n+\n+    @Override\n+    public void reportBytesRead(long numberOfBytes) {\n+      conn.reportBytesRead(numberOfBytes);\n+    }\n+\n     @Override\n     public Context getContext() {\n       return context;\n@@ -410,4 +433,43 @@ class Http2ClientConnection extends Http2ConnectionBase implements HttpClientCon\n       return conn.toNetSocket(this);\n     }\n   }\n+\n+  public static VertxHttp2ConnectionHandler<Http2ClientConnection> createHttp2ConnectionHandler(\n+    HttpClientImpl client,\n+    Object queueMetric,\n+    ConnectionListener<HttpClientConnection> listener,\n+    ContextInternal context,\n+    BiConsumer<Http2ClientConnection, Long> c) {\n+    long http2MaxConcurrency = client.getOptions().getHttp2MultiplexingLimit() <= 0 ? Long.MAX_VALUE : client.getOptions().getHttp2MultiplexingLimit();\n+    HttpClientOptions options = client.getOptions();\n+    HttpClientMetrics metrics = client.metrics();\n+    VertxHttp2ConnectionHandler<Http2ClientConnection> handler = new VertxHttp2ConnectionHandlerBuilder<Http2ClientConnection>()\n+      .server(false)\n+      .useCompression(client.getOptions().isTryUseCompression())\n+      .initialSettings(client.getOptions().getInitialSettings())\n+      .connectionFactory(connHandler -> new Http2ClientConnection(listener, queueMetric, client, context, connHandler, metrics))\n+      .logEnabled(options.getLogActivity())\n+      .build();\n+    handler.addHandler(conn -> {\n+      if (options.getHttp2ConnectionWindowSize() > 0) {\n+        conn.setWindowSize(options.getHttp2ConnectionWindowSize());\n+      }\n+      if (metrics != null) {\n+        Object metric = metrics.connected(conn.remoteAddress(), conn.remoteName());\n+        conn.metric(metric);\n+      }\n+      long concurrency = conn.remoteSettings().getMaxConcurrentStreams();\n+      if (http2MaxConcurrency > 0) {\n+        concurrency = Math.min(concurrency, http2MaxConcurrency);\n+      }\n+      c.accept(conn, concurrency);\n+    });\n+    handler.removeHandler(conn -> {\n+      if (metrics != null) {\n+        metrics.endpointDisconnected(queueMetric, conn.metric());\n+      }\n+      listener.onDiscard();\n+    });\n+    return handler;\n+  }\n }\ndiff --git a/src/main/java/io/vertx/core/http/impl/Http2ConnectionBase.java b/src/main/java/io/vertx/core/http/impl/Http2ConnectionBase.java\nindex b691fe9ac..36c848476 100644\n--- a/src/main/java/io/vertx/core/http/impl/Http2ConnectionBase.java\n+++ b/src/main/java/io/vertx/core/http/impl/Http2ConnectionBase.java\n@@ -196,9 +196,6 @@ abstract class Http2ConnectionBase extends ConnectionBase implements Http2FrameL\n     }\n   }\n \n-  protected void onConnect() {\n-  }\n-\n   protected void concurrencyChanged(long concurrency) {\n   }\n \ndiff --git a/src/main/java/io/vertx/core/http/impl/Http2ServerConnection.java b/src/main/java/io/vertx/core/http/impl/Http2ServerConnection.java\nindex 6b9b1d679..cb9355a3b 100644\n--- a/src/main/java/io/vertx/core/http/impl/Http2ServerConnection.java\n+++ b/src/main/java/io/vertx/core/http/impl/Http2ServerConnection.java\n@@ -14,6 +14,7 @@ package io.vertx.core.http.impl;\n import io.netty.channel.ChannelHandlerContext;\n import io.netty.handler.codec.http.HttpHeaderNames;\n import io.netty.handler.codec.http.HttpHeaderValues;\n+import io.netty.handler.codec.http.HttpRequest;\n import io.netty.handler.codec.http2.DefaultHttp2Headers;\n import io.netty.handler.codec.http2.Http2CodecUtil;\n import io.netty.handler.codec.http2.Http2Error;\n@@ -94,6 +95,14 @@ public class Http2ServerConnection extends Http2ConnectionBase {\n     return false;\n   }\n \n+  private Http2ServerRequestImpl createRequest(int streamId, Http2Headers headers) {\n+    Http2Stream stream = handler.connection().stream(streamId);\n+    String contentEncoding = options.isCompressionSupported() ? HttpUtils.determineContentEncoding(headers) : null;\n+    boolean writable = handler.encoder().flowController().isWritable(stream);\n+    Http2ServerRequestImpl request = new Http2ServerRequestImpl(this, stream, metrics, serverOrigin, headers, contentEncoding, writable);\n+    return request;\n+  }\n+\n   @Override\n   public synchronized void onHeadersRead(ChannelHandlerContext ctx, int streamId,\n                             Http2Headers headers, int padding, boolean endOfStream) {\n@@ -103,10 +112,7 @@ public class Http2ServerConnection extends Http2ConnectionBase {\n         handler.writeReset(streamId, Http2Error.PROTOCOL_ERROR.code());\n         return;\n       }\n-      String contentEncoding = options.isCompressionSupported() ? HttpUtils.determineContentEncoding(headers) : null;\n-      Http2Stream s = handler.connection().stream(streamId);\n-      boolean writable = handler.encoder().flowController().isWritable(s);\n-      Http2ServerRequestImpl req = new Http2ServerRequestImpl(this, s, metrics, serverOrigin, headers, contentEncoding, writable);\n+      Http2ServerRequestImpl req = createRequest(streamId, headers);\n       stream = req;\n       CharSequence value = headers.get(HttpHeaderNames.EXPECT);\n       if (options.isHandle100ContinueAutomatically() &&\n@@ -189,6 +195,18 @@ public class Http2ServerConnection extends Http2ConnectionBase {\n     super.updateSettings(settingsUpdate, completionHandler);\n   }\n \n+  Http2ServerRequestImpl createUpgradeRequest(HttpRequest request) {\n+    DefaultHttp2Headers headers = new DefaultHttp2Headers();\n+    headers.method(request.method().name());\n+    headers.path(request.uri());\n+    headers.authority(request.headers().get(\"host\"));\n+    headers.scheme(\"http\");\n+    request.headers().remove(\"http2-settings\");\n+    request.headers().remove(\"host\");\n+    request.headers().forEach(header -> headers.set(header.getKey().toLowerCase(), header.getValue()));\n+    return createRequest(1, headers);\n+  }\n+\n   private class Push extends VertxHttp2Stream<Http2ServerConnection> {\n \n     private final HttpMethod method;\ndiff --git a/src/main/java/io/vertx/core/http/impl/Http2UpgradedClientConnection.java b/src/main/java/io/vertx/core/http/impl/Http2UpgradedClientConnection.java\nnew file mode 100644\nindex 000000000..9b3eff91b\n--- /dev/null\n+++ b/src/main/java/io/vertx/core/http/impl/Http2UpgradedClientConnection.java\n@@ -0,0 +1,389 @@\n+/*\n+ * Copyright (c) 2011-2018 Contributors to the Eclipse Foundation\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0\n+ * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n+ */\n+package io.vertx.core.http.impl;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.channel.Channel;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.ChannelInboundHandlerAdapter;\n+import io.netty.channel.ChannelPipeline;\n+import io.netty.handler.codec.http.*;\n+import io.vertx.codegen.annotations.Nullable;\n+import io.vertx.core.*;\n+import io.vertx.core.buffer.Buffer;\n+import io.vertx.core.http.*;\n+import io.vertx.core.http.HttpMethod;\n+import io.vertx.core.http.HttpVersion;\n+import io.vertx.core.http.impl.pool.ConnectionListener;\n+import io.vertx.core.impl.ContextInternal;\n+import io.vertx.core.net.NetSocket;\n+import io.vertx.core.net.SocketAddress;\n+\n+import javax.net.ssl.SSLPeerUnverifiedException;\n+import javax.net.ssl.SSLSession;\n+import javax.security.cert.X509Certificate;\n+\n+/**\n+ * An HTTP/2 connection in clear text that upgraded from an HTTP/1 upgrade.\n+ */\n+public class Http2UpgradedClientConnection implements HttpClientConnection {\n+\n+  private HttpClientImpl client;\n+  private HttpClientConnection current;\n+\n+  private Handler<Void> closeHandler;\n+  private Handler<Void> shutdownHandler;\n+  private Handler<GoAway> goAwayHandler;\n+  private Handler<Throwable> exceptionHandler;\n+  private Handler<Buffer> pingHandler;\n+  private Handler<Http2Settings> remoteSettingsHandler;\n+\n+  Http2UpgradedClientConnection(HttpClientImpl client, Http1xClientConnection connection) {\n+    this.client = client;\n+    this.current = connection;\n+  }\n+\n+  @Override\n+  public Channel channel() {\n+    return current.channel();\n+  }\n+\n+  @Override\n+  public void close() {\n+    current.close();\n+  }\n+\n+  /**\n+   * The first stream that will send the request using HTTP/1, upgrades the connection when the protocol\n+   * switches and receives the response with HTTP/2 frames.\n+   */\n+  private class UpgradingStream implements HttpClientStream {\n+\n+    private HttpClientRequestImpl request;\n+    private Http1xClientConnection conn;\n+    private HttpClientStream stream;\n+\n+    UpgradingStream(HttpClientStream stream, Http1xClientConnection conn) {\n+      this.conn = conn;\n+      this.stream = stream;\n+    }\n+\n+    @Override\n+    public HttpClientConnection connection() {\n+      return current == null ? conn : current;\n+    }\n+\n+    /**\n+     * HTTP/2 clear text upgrade here.\n+     */\n+    @Override\n+    public void writeHead(HttpMethod method,\n+                          String rawMethod,\n+                          String uri,\n+                          MultiMap headers,\n+                          String hostHeader,\n+                          boolean chunked,\n+                          ByteBuf buf,\n+                          boolean end) {\n+      ChannelPipeline pipeline = conn.channel().pipeline();\n+      HttpClientCodec httpCodec = pipeline.get(HttpClientCodec.class);\n+      class UpgradeRequestHandler extends ChannelInboundHandlerAdapter {\n+        @Override\n+        public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception {\n+          super.userEventTriggered(ctx, evt);\n+          ChannelPipeline pipeline = ctx.pipeline();\n+          if (evt == HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_SUCCESSFUL) {\n+            // Upgrade handler will remove itself and remove the HttpClientCodec\n+            pipeline.remove(conn.handler());\n+          }\n+        }\n+\n+        @Override\n+        public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n+          if (msg instanceof HttpResponse) {\n+            pipeline.remove(this);\n+            HttpResponse resp = (HttpResponse) msg;\n+            if (resp.status() != HttpResponseStatus.SWITCHING_PROTOCOLS) {\n+              // Insert the cloe headers to let the HTTP/1 stream close the connection\n+              resp.headers().set(HttpHeaderNames.CONNECTION, HttpHeaderValues.CLOSE);\n+            }\n+          }\n+          super.channelRead(ctx, msg);\n+        }\n+      }\n+      VertxHttp2ClientUpgradeCodec upgradeCodec = new VertxHttp2ClientUpgradeCodec(client.getOptions().getInitialSettings()) {\n+        @Override\n+        public void upgradeTo(ChannelHandlerContext ctx, FullHttpResponse upgradeResponse) throws Exception {\n+\n+          // Now we need to upgrade this to an HTTP2\n+          ConnectionListener<HttpClientConnection> listener = conn.listener();\n+          VertxHttp2ConnectionHandler<Http2ClientConnection> handler = Http2ClientConnection.createHttp2ConnectionHandler(client, conn.endpointMetric(), listener, conn.getContext(), (conn, concurrency) -> {\n+            conn.upgradeStream(request, ar -> {\n+              UpgradingStream.this.conn.closeHandler(null);\n+              UpgradingStream.this.conn.exceptionHandler(null);\n+              if (ar.succeeded()) {\n+                current = conn;\n+                conn.closeHandler(closeHandler);\n+                conn.exceptionHandler(exceptionHandler);\n+                conn.pingHandler(pingHandler);\n+                conn.goAwayHandler(goAwayHandler);\n+                conn.shutdownHandler(shutdownHandler);\n+                conn.remoteSettingsHandler(remoteSettingsHandler);\n+                listener.onConcurrencyChange(concurrency);\n+              } else {\n+                // Handle me\n+                ar.cause().printStackTrace();\n+              }\n+            });\n+          });\n+          conn.channel().pipeline().addLast(handler);\n+          handler.clientUpgrade(ctx);\n+        }\n+      };\n+      HttpClientUpgradeHandler upgradeHandler = new HttpClientUpgradeHandler(httpCodec, upgradeCodec, 65536);\n+      pipeline.addAfter(\"codec\", null, new UpgradeRequestHandler());\n+      pipeline.addAfter(\"codec\", null, upgradeHandler);\n+      stream.writeHead(method, rawMethod, uri, headers, hostHeader, chunked, buf, end);\n+    }\n+\n+    @Override\n+    public int id() {\n+      return 1;\n+    }\n+\n+    @Override\n+    public HttpVersion version() {\n+      return HttpVersion.HTTP_2;\n+    }\n+\n+    @Override\n+    public Context getContext() {\n+      return stream.getContext();\n+    }\n+\n+    @Override\n+    public void writeBuffer(ByteBuf buf, boolean end) {\n+      stream.writeBuffer(buf, end);\n+    }\n+\n+    @Override\n+    public void writeFrame(int type, int flags, ByteBuf payload) {\n+      stream.writeFrame(type, flags, payload);\n+    }\n+\n+    @Override\n+    public void reportBytesWritten(long numberOfBytes) {\n+      stream.reportBytesWritten(numberOfBytes);\n+    }\n+\n+    @Override\n+    public void reportBytesRead(long numberOfBytes) {\n+      stream.reportBytesRead(numberOfBytes);\n+    }\n+\n+    @Override\n+    public void doSetWriteQueueMaxSize(int size) {\n+      stream.doSetWriteQueueMaxSize(size);\n+    }\n+\n+    @Override\n+    public boolean isNotWritable() {\n+      return stream.isNotWritable();\n+    }\n+\n+    @Override\n+    public void doPause() {\n+      stream.doPause();\n+    }\n+\n+    @Override\n+    public void doResume() {\n+      stream.doResume();\n+    }\n+\n+    @Override\n+    public void reset(long code) {\n+      stream.reset(code);\n+    }\n+\n+    @Override\n+    public void beginRequest(HttpClientRequestImpl req) {\n+      request = req;\n+      stream.beginRequest(req);\n+    }\n+\n+    @Override\n+    public void endRequest() {\n+      stream.endRequest();\n+    }\n+\n+    @Override\n+    public NetSocket createNetSocket() {\n+      return stream.createNetSocket();\n+    }\n+  }\n+\n+  @Override\n+  public void createStream(Handler<AsyncResult<HttpClientStream>> handler) {\n+    if (current instanceof Http1xClientConnection) {\n+      current.createStream(ar -> {\n+        if (ar.succeeded()) {\n+          HttpClientStream stream = ar.result();\n+          UpgradingStream upgradingStream = new UpgradingStream(stream, (Http1xClientConnection) current);\n+          handler.handle(Future.succeededFuture(upgradingStream));\n+        } else {\n+          handler.handle(ar);\n+        }\n+      });\n+    } else {\n+      current.createStream(handler);\n+    }\n+  }\n+\n+  @Override\n+  public ContextInternal getContext() {\n+    return current.getContext();\n+  }\n+\n+  @Override\n+  public boolean checkInitialized() {\n+    return current.checkInitialized();\n+  }\n+\n+  @Override\n+  public void recycle() {\n+    current.recycle();\n+  }\n+\n+  @Override\n+  public HttpConnection closeHandler(Handler<Void> handler) {\n+    closeHandler = handler;\n+    current.closeHandler(handler);\n+    return this;\n+  }\n+\n+  @Override\n+  public HttpConnection",
    "add toString to StreamedRow ( <issue_id> )": "diff --git a/ksql-rest-model/src/main/java/io/confluent/ksql/rest/entity/StreamedRow.java b/ksql-rest-model/src/main/java/io/confluent/ksql/rest/entity/StreamedRow.java\nindex f20a001be05..e1bdff6fe06 100644\n--- a/ksql-rest-model/src/main/java/io/confluent/ksql/rest/entity/StreamedRow.java\n+++ b/ksql-rest-model/src/main/java/io/confluent/ksql/rest/entity/StreamedRow.java\n@@ -24,8 +24,10 @@ import com.fasterxml.jackson.annotation.JsonInclude;\n import com.fasterxml.jackson.annotation.JsonInclude.Include;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonSubTypes;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.errorprone.annotations.Immutable;\n import io.confluent.ksql.GenericRow;\n+import io.confluent.ksql.json.JsonMapper;\n import io.confluent.ksql.query.QueryId;\n import io.confluent.ksql.schema.ksql.LogicalSchema;\n import java.util.Arrays;\n@@ -134,6 +136,15 @@ public final class StreamedRow {\n     return Objects.hash(header, row, errorMessage, finalMessage);\n   }\n \n+  @Override\n+  public String toString() {\n+    try {\n+      return JsonMapper.INSTANCE.mapper.writeValueAsString(this);\n+    } catch (JsonProcessingException e) {\n+      return super.toString();\n+    }\n+  }\n+\n   private static void checkUnion(final Optional<?>... fs) {\n     final long count = Arrays.stream(fs)\n         .filter(Optional::isPresent)",
    "update version to 1 . 2 . 54": "diff --git a/README.md b/README.md\nindex 576bc3c27..26e89cfc7 100755\n--- a/README.md\n+++ b/README.md\n@@ -41,7 +41,7 @@ https://github.com/eishay/jvm-serializers/wiki\n <dependency>\n     <groupId>com.alibaba</groupId>\n     <artifactId>fastjson</artifactId>\n-    <version>1.2.51</version>\n+    <version>1.2.54</version>\n </dependency>\n ```\n \n@@ -56,7 +56,7 @@ https://github.com/eishay/jvm-serializers/wiki\n ## Gradle via JCenter\n \n ``` groovy\n-compile 'com.alibaba:fastjson:1.2.51'\n+compile 'com.alibaba:fastjson:1.2.54'\n ```\n \n ``` groovy",
    "remove unused resources / add to lint ignore .": "diff --git a/lint.xml b/lint.xml\nindex d6347e2d30..73f1711a20 100644\n--- a/lint.xml\n+++ b/lint.xml\n@@ -14,6 +14,7 @@\n         <ignore regexp=\"store_short_desc|store_full_desc|store_short_dev_desc|store_full_dev_desc\" />\n         <ignore\n             regexp=\"screenshot_01_gridView|screenshot_02_listView|screenshot_03_drawer|screenshot_04_accounts|screenshot_05_autoUpload|screenshot_06_davdroid\"/>\n+        <ignore path=\"**/raw/encryption_key_words.txt\" />\n     </issue>\n \n     <issue id=\"MissingQuantity\">\ndiff --git a/src/gplay/res/values/setup.xml b/src/gplay/res/values/setup.xml\nindex 02f48f3d8a..18437132bb 100644\n--- a/src/gplay/res/values/setup.xml\n+++ b/src/gplay/res/values/setup.xml\n@@ -10,7 +10,6 @@\n     <string name=\"google_app_id\" translatable=\"false\">1:829118773643:android:512449826e931d0e</string>\n     <string name=\"google_crash_reporting_api_key\" translatable=\"false\">AIzaSyAWIyOcLafaFp8PFL61h64cy1NNZW2cU_s</string>\n     <string name=\"google_storage_bucket\" translatable=\"false\">nextcloud-a7dea.appspot.com</string>\n-    <string name=\"project_id\" translatable=\"false\">nextcloud-a7dea</string>\n </resources>\n \n \ndiff --git a/src/main/res/font/nunito.xml b/src/main/res/font/nunito.xml\nindex ab04af5416..214e8d2c82 100644\n--- a/src/main/res/font/nunito.xml\n+++ b/src/main/res/font/nunito.xml\n@@ -1,5 +1,7 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<font-family xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n+<font-family xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    tools:ignore=\"UnusedResources\">\n     <font\n         app:font=\"@font/nunito_regular\"\n         app:fontStyle=\"normal\"\ndiff --git a/src/main/res/values/strings.xml b/src/main/res/values/strings.xml\nindex 8e2fcb35bc..3082debce3 100644\n--- a/src/main/res/values/strings.xml\n+++ b/src/main/res/values/strings.xml\n@@ -507,7 +507,6 @@\n     <string name=\"share_room_clarification\">%1$s (conversation)</string>\n     <string name=\"share_known_remote_clarification\">%1$s ( at %2$s )</string>\n \n-    <string name=\"share_sharee_unavailable\">Upgrade the server version to allow sharing between users from within their clients.\\nPlease contact your admin</string>\n     <string name=\"share_privilege_unshare\">Unshare</string>\n     <string name=\"share_privilege_can_share\">can share</string>\n     <string name=\"share_privilege_can_edit\">can edit</string>\n@@ -665,7 +664,6 @@\n \n     <string name=\"resized_image_not_possible\">No resized image available.</string>\n     <string name=\"resized_image_not_possible_download\">No resized image available. Download full image?</string>\n-    <string name=\"resized_images_download_full_image\">Download full image?</string>\n \n     <string name=\"store_short_desc\">The Nextcloud Android app gives mobile access to all files on your Nextcloud.</string>\n     <string name=\"store_full_desc\">The copylefted libre Nextcloud Android app, giving you mobile freedom.\\n\\nFeatures:\\n* Easy, modern interface, suited to the theme of your server\\n* Upload files to your Nextcloud server\\n* Share them with others\\n* Keep your favorite files and folders synced\\n* Search across all folders on your server\\n* Auto Upload for photos and videos taken by your device\\n* Keep up to date with notifications\\n* Multi-account support\\n* Secure access to your data with fingerprint or PIN\\n* Integration with DAVdroid for easy setup of calendar &amp; Contacts synchronization\\n\\nPlease report all issues at https://github.com/nextcloud/android/issues and discuss this app at https://help.nextcloud.com/c/clients/android\\n\\nNew to Nextcloud? Nextcloud is a private file sync &amp; share and communication server. It is libre software, and you can host it yourself or pay a company to do it for you. That way, you are in control of your photos, your calendar and contact data, your documents and everything else.\\n\\nCheck out Nextcloud at https://nextcloud.com</string>",
    "Updated chapter listing .": "diff --git a/jetty-documentation/src/main/asciidoc/administration/part.adoc b/jetty-documentation/src/main/asciidoc/administration/part.adoc\nindex 2b457b3d90..e471f7fbda 100644\n--- a/jetty-documentation/src/main/asciidoc/administration/part.adoc\n+++ b/jetty-documentation/src/main/asciidoc/administration/part.adoc\n@@ -18,6 +18,7 @@\n \n include::startup/chapter.adoc[]\n include::sessions/chapter.adoc[]\n+include::logging/chapter.adoc[]\n include::jndi/chapter.adoc[]\n include::annotations/chapter.adoc[]\n include::jmx/chapter.adoc[]\n@@ -27,4 +28,3 @@ include::fastcgi/chapter.adoc[]\n include::extras/chapter.adoc[]\n include::runner/chapter.adoc[]\n include::tuning/chapter.adoc[]\n-include::logging/chapter.adoc[]\ndiff --git a/jetty-documentation/src/main/asciidoc/configuring/contexts/temporary-directories.adoc b/jetty-documentation/src/main/asciidoc/configuring/contexts/temporary-directories.adoc\nindex 2e1b2f8a1c..bb1be51549 100644\n--- a/jetty-documentation/src/main/asciidoc/configuring/contexts/temporary-directories.adoc\n+++ b/jetty-documentation/src/main/asciidoc/configuring/contexts/temporary-directories.adoc\n@@ -17,7 +17,7 @@\n [[ref-temporary-directories]]\n === Temporary Directories\n \n-Jetty itself has no temporary directories, but you can assign a directory for each web application, into which the WAR is unpacked, JSPs compiled on-the-fly, etc. \n+Jetty itself has no temporary directories, but you can assign a directory for each web application, into which the WAR is unpacked, JSPs compiled on-the-fly, etc.\n If you do not assign a specific temporary directory, Jetty will create one as needed when your web application starts.\n Whether you set the location of the temporary directory - or you let Jetty create one for you - you also have a choice to either keep or delete the temporary directory when the web application stops.\n \n@@ -41,11 +41,11 @@ Once the temp directory is created, it is retrievable as the value (as a File) o\n \n ===== The location of the temp directory\n \n-By default, Jetty will create this directory inside the directory named by the `java.io.tmpdir` System property. \n-You can instruct Jetty to use a different parent directory by setting the context attribute `org.eclipse.jetty.webapp.basetempdir` to the name of the desired parent directory. \n+By default, Jetty will create this directory inside the directory named by the `java.io.tmpdir` System property.\n+You can instruct Jetty to use a different parent directory by setting the context attribute `org.eclipse.jetty.webapp.basetempdir` to the name of the desired parent directory.\n The directory named by this attribute _must_ exist and be __writeable__.\n \n-As usual with Jetty, you can either set this attribute in a context xml file, or you can do it in code. \n+As usual with Jetty, you can either set this attribute in a context xml file, or you can do it in code.\n \n Here's an example of setting it in an xml file:\n \n@@ -77,9 +77,9 @@ context.setAttribute(\"org.eclipse.jetty.webapp.basetempdir\", \"/tmp/foo\");\n \n There are several ways to use a particular directory as the temporary directory:\n \n-call WebAppContext.setTempDirectory(String dir)::\n-  Like before this can be accomplished with an xml file or directly in code. Here's an example of setting the temp directory in xml:\n-  +\n+*Call WebAppContext.setTempDirectory(String dir)*\n+Like before this can be accomplished with an xml file or directly in code. Here's an example of setting the temp directory in xml:\n+\n [source, xml, subs=\"{sub-order}\"]\n ----\n <Configure class=\"org.eclipse.jetty.webapp.WebAppContext\">\n@@ -101,8 +101,8 @@ context.setWar(\"foo.war\");\n context.setTempDirectory(new File(\"/some/dir/foo\"));\n ----\n \n-set the `javax.servlet.context.tempdir` context attribute::\n-  You should set this context attribute with the name of directory you want to use as the temp directory. Again, you can do this in xml:\n+*Set the `javax.servlet.context.tempdir` context attribute*\n+You should set this context attribute with the name of directory you want to use as the temp directory. Again, you can do this in xml:\n \n [source, xml, subs=\"{sub-order}\"]\n ----\n@@ -139,17 +139,17 @@ ____\n \n ==== The \"work\" directory\n \n-Mostly for backward compatibility, from jetty-9.1.1 onwards, it is be possible to create a directory named \"work\" in the `$\\{jetty.base}` directory. \n-If such a directory is found, it is assumed you want to use it as the parent directory for all of the temporary directories of the webapps in that `$\\{jetty.base}`. \n+Mostly for backward compatibility, from jetty-9.1.1 onwards, it is be possible to create a directory named \"work\" in the `$\\{jetty.base}` directory.\n+If such a directory is found, it is assumed you want to use it as the parent directory for all of the temporary directories of the webapps in that `$\\{jetty.base}`.\n Moreover, as has historically been the case, these temp directories inside the work directory are not cleaned up when jetty exists (or more correctly speaking, the `temp` directory corresponding to a context is not cleaned up when that context stops).\n \n-When a work directory is used, the algorithm for generating the name of the context-specific temp directories omits the random digit string. \n+When a work directory is used, the algorithm for generating the name of the context-specific temp directories omits the random digit string.\n This ensures the name of the directory remains consistent across context restarts.\n \n ==== Persisting the temp directory\n \n-Sometimes you may find it useful to keep the contents of the temporary directory between restarts of the web application. \n-By default, Jetty will _not_ persist the temp directory. \n+Sometimes you may find it useful to keep the contents of the temporary directory between restarts of the web application.\n+By default, Jetty will _not_ persist the temp directory.\n To configure Jetty to keep it, use link:{JDURL}/org/eclipse/jetty/webapp/WebAppContext.html[WebAppContext.setPersistTempDirectory(true)].\n \n ____\ndiff --git a/jetty-documentation/src/main/asciidoc/development/part.adoc b/jetty-documentation/src/main/asciidoc/development/part.adoc\nindex f1f6414599..cfadcad14c 100644\n--- a/jetty-documentation/src/main/asciidoc/development/part.adoc\n+++ b/jetty-documentation/src/main/asciidoc/development/part.adoc\n@@ -16,14 +16,14 @@\n \n = Jetty Development Guide\n \n+include::embedding/chapter.adoc[]\n+include::clients/http/chapter.adoc[]\n include::maven/chapter.adoc[]\n-include::ant/chapter.adoc[]\n include::handlers/chapter.adoc[]\n-include::embedding/chapter.adoc[]\n include::debugging/chapter.adoc[]\n-include::frameworks/chapter.adoc[]\n-include::clients/http/chapter.adoc[]\n include::websockets/intro/chapter.adoc[]\n include::websockets/jetty/chapter.adoc[]\n //include::websockets/java/chapter.adoc[]\n include::continuations/chapter.adoc[]\n+include::frameworks/chapter.adoc[]\n+include::ant/chapter.adoc[]\ndiff --git a/jetty-documentation/src/main/asciidoc/quick-start/getting-started/chapter.adoc b/jetty-documentation/src/main/asciidoc/quick-start/getting-started/chapter.adoc\nindex fc196e2c43..f84630f55d 100644\n--- a/jetty-documentation/src/main/asciidoc/quick-start/getting-started/chapter.adoc\n+++ b/jetty-documentation/src/main/asciidoc/quick-start/getting-started/chapter.adoc\n@@ -17,10 +17,9 @@\n [[quick-start-getting-started]]\n == Using Jetty Introduction\n \n-You can use Jetty in many different ways, ranging from embedding Jetty in applications, launching it from different build systems, from different JVM-based languages, or as a standalone distribution. \n+You can use Jetty in many different ways, ranging from embedding Jetty in applications, launching it from different build systems, from different JVM-based languages, or as a standalone distribution.\n This guide covers the latter, a standalone distribution suitable for deploying web applications.\n \n include::jetty-installing.adoc[]\n include::jetty-running.adoc[]\n include::jetty-deploying.adoc[]\n-include::jetty-coordinates.adoc[]\ndiff --git a/jetty-documentation/src/main/asciidoc/quick-start/introduction/chapter.adoc b/jetty-documentation/src/main/asciidoc/quick-start/introduction/chapter.adoc\nindex bf29a783f6..804dcb066e 100644\n--- a/jetty-documentation/src/main/asciidoc/quick-start/introduction/chapter.adoc\n+++ b/jetty-documentation/src/main/asciidoc/quick-start/introduction/chapter.adoc\n@@ -20,3 +20,4 @@\n include::what-is-jetty.adoc[]\n include::what-version.adoc[]\n include::jetty-javaee.adoc[]\n+include::jetty-coordinates.adoc[]\ndiff --git a/jetty-documentation/src/main/asciidoc/quick-start/getting-started/jetty-coordinates.adoc b/jetty-documentation/src/main/asciidoc/quick-start/introduction/jetty-coordinates.adoc\nsimilarity index 91%\nrename from jetty-documentation/src/main/asciidoc/quick-start/getting-started/jetty-coordinates.adoc\nrename to jetty-documentation/src/main/asciidoc/quick-start/introduction/jetty-coordinates.adoc\nindex 5b439d9e5b..947b7ed123 100644\n--- a/jetty-documentation/src/main/asciidoc/quick-start/getting-started/jetty-coordinates.adoc\n+++ b/jetty-documentation/src/main/asciidoc/quick-start/introduction/jetty-coordinates.adoc\n@@ -19,8 +19,8 @@\n \n ==== Maven Coordinates\n \n-Jetty has existed in Maven Central almost since its inception, however under a couple of different coordinates over the years. \n-When Jetty was based at SourceForge and then The Codehaus it was located under the `groupId` of `org.mortbay.jetty`. \n+Jetty has existed in Maven Central almost since its inception, though the coordinates have changed over the years.\n+When Jetty was based at SourceForge and then The Codehaus it was located under the `groupId` of `org.mortbay.jetty`.\n With Jetty 7 the project moved to the Eclipse foundation and to a new `groupId` at that time to reflect its new home.\n \n The top level Project Object Model (POM) for the Jetty project is located under the following coordinates.\n@@ -39,7 +39,7 @@ The top level Project Object Model (POM) for the Jetty project is located under\n The changes between versions of Jetty are tracked in a file called VERSIONS.txt, which is under source control and is generated on release.\n Those generated files are also uploaded into Maven Central during the release of the top level POM. You can find them as a classifier marked artifact.\n \n-http://central.maven.org/maven2/org/eclipse/jetty/jetty-project/ \n+http://central.maven.org/maven2/org/eclipse/jetty/jetty-project/\n \n [source, xml, subs=\"{sub-order}\"]\n ----\ndiff --git a/jetty-documentation/src/main/asciidoc/quick-start/introduction/what-is-jetty.adoc b/jetty-documentation/src/main/asciidoc/quick-start/introduction/what-is-jetty.adoc\nindex 05e09315c7..d88ab7affe 100644\n--- a/jetty-documentation/src/main/asciidoc/quick-start/introduction/what-is-jetty.adoc\n+++ b/jetty-documentation/src/main/asciidoc/quick-start/introduction/what-is-jetty.adoc\n@@ -25,4 +25,4 @@ This guide is in two parts.\n * The second part describes advanced uses of Jetty, providing in depth coverage of specific features like our highly scalable async client, proxy servlet configuration, the Jetty Maven plugin, and using Jetty as an embedded server. The advanced section includes tutorials, howtos, videos, and reference materials.\n \n Feedback is always welcome!\n-Additionally, if you are interested in how to contribute to the open source project there is a section on that as well!\n+Additionally, if you are interested in how to contribute to the open source project there is a link:#community[section on that as well!]",
    "fix bug": "diff --git a/src/org/qii/weiciyuan/ui/send/AutoCompleteAdapter.java b/src/org/qii/weiciyuan/ui/send/AutoCompleteAdapter.java\nindex 12225187..c8e9727c 100644\n--- a/src/org/qii/weiciyuan/ui/send/AutoCompleteAdapter.java\n+++ b/src/org/qii/weiciyuan/ui/send/AutoCompleteAdapter.java\n@@ -89,7 +89,14 @@ public class AutoCompleteAdapter extends ArrayAdapter<AtUserBean> implements Fil\n     private Filter filter = new Filter() {\r\n         @Override\r\n         protected FilterResults performFiltering(CharSequence constraint) {\r\n-            pb.setVisibility(View.GONE);\r\n+\r\n+            activity.runOnUiThread(new Runnable() {\r\n+\r\n+                @Override\r\n+                public void run() {\r\n+                    pb.setVisibility(View.GONE);\r\n+               ",
    "remove StructureType getElementTypes ( )": "diff --git a/sulong/projects/com.oracle.truffle.llvm.parser/src/com/oracle/truffle/llvm/parser/listeners/Function.java b/sulong/projects/com.oracle.truffle.llvm.parser/src/com/oracle/truffle/llvm/parser/listeners/Function.java\nindex 8b92961c1fc..31737554518 100644\n--- a/sulong/projects/com.oracle.truffle.llvm.parser/src/com/oracle/truffle/llvm/parser/listeners/Function.java\n+++ b/sulong/projects/com.oracle.truffle.llvm.parser/src/com/oracle/truffle/llvm/parser/listeners/Function.java\n@@ -659,9 +659,9 @@ public final class Function implements ParserListener {\n         // type table\n         for (Type t : types) {\n             if (t instanceof StructureType) {\n-                final Type[] elts = ((StructureType) t).getElementTypes();\n-                if (elts.length == CMPXCHG_TYPE_LENGTH && elementType == elts[CMPXCHG_TYPE_ELEMENTTYPE] && PrimitiveType.I1 == elts[CMPXCHG_TYPE_BOOLTYPE]) {\n-                    return (AggregateType) t;\n+                StructureType st = (StructureType) t;\n+                if (st.getNumberOfElementsInt() == CMPXCHG_TYPE_LENGTH && elementType == st.getElementType(CMPXCHG_TYPE_ELEMENTTYPE) && PrimitiveType.I1 == st.getElementType(CMPXCHG_TYPE_BOOLTYPE)) {\n+                    return st;\n                 }\n             }\n         }\ndiff --git a/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/intrinsics/rust/LLVMStart.java b/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/intrinsics/rust/LLVMStart.java\nindex 19ae364c53a..43dfac8bc6c 100644\n--- a/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/intrinsics/rust/LLVMStart.java\n+++ b/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/intrinsics/rust/LLVMStart.java\n@@ -162,7 +162,7 @@ public abstract class LLVMStart extends LLVMIntrinsic {\n             }\n \n             static LangStartVtableType create(DataLayout datalayout, Type vtableType) throws TypeOverflowException {\n-                FunctionType fnType = (FunctionType) ((PointerType) ((StructureType) vtableType).getElementTypes()[5]).getPointeeType();\n+                FunctionType fnType = (FunctionType) ((PointerType) ((StructureType) vtableType).getElementType(5)).getPointeeType();\n                 return new LangStartVtableType(datalayout, (StructureType) vtableType, fnType);\n             }\n \ndiff --git a/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/types/StructureType.java b/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/types/StructureType.java\nindex a1e45fb3237..7d0b2b84f83 100644\n--- a/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/types/StructureType.java\n+++ b/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/types/StructureType.java\n@@ -95,10 +95,6 @@ public final class StructureType extends AggregateType {\n         types[idx] = type;\n     }\n \n-    public Type[] getElementTypes() {\n-        return types;\n-    }\n-\n     public boolean isPacked() {\n         return isPacked;\n     }",
    "enable Java HashMap for zmq messaging": "diff --git a/storm-core/src/clj/backtype/storm/messaging/zmq.clj b/storm-core/src/clj/backtype/storm/messaging/zmq.clj\nindex 387e61af..23e263eb 100644\n--- a/storm-core/src/clj/backtype/storm/messaging/zmq.clj\n+++ b/storm-core/src/clj/backtype/storm/messaging/zmq.clj\n@@ -59,11 +59,11 @@\n                      ^{:unsynchronized-mutable true} local?]\n   IContext\n   (^void prepare [this ^Map storm-conf]\n-    (let [num-threads (storm-conf ZMQ-THREADS)]\n+    (let [num-threads (.get storm-conf ZMQ-THREADS)]\n       (set! context (mq/context num-threads)) \n-      (set! linger-ms (storm-conf ZMQ-LINGER-MILLIS))\n-      (set! hwm (storm-conf ZMQ-HWM))\n-      (set! local? (= (storm-conf STORM-CLUSTER-MODE) \"local\"))))\n+      (set! linger-ms (.get storm-conf ZMQ-LINGER-MILLIS))\n+      (set! hwm (.get storm-conf ZMQ-HWM))\n+      (set! local? (= (.get storm-conf STORM-CLUSTER-MODE) \"local\"))))\n   (^IConnection bind [this ^String storm-id ^int port]\n     (require 'backtype.storm.messaging.zmq)\n     (-> context",
    "removed skipLists": "diff --git a/querydsl-apt/src/main/java/com/mysema/query/apt/Processor.java b/querydsl-apt/src/main/java/com/mysema/query/apt/Processor.java\nindex ddcc42c2f..7cc069f82 100644\n--- a/querydsl-apt/src/main/java/com/mysema/query/apt/Processor.java\n+++ b/querydsl-apt/src/main/java/com/mysema/query/apt/Processor.java\n@@ -49,7 +49,7 @@ public class Processor {\n     \r\n     private boolean useFields = true;\r\n     \r\n-    private boolean listsAsCollections = false;\r\n+//    private boolean listsAsCollections = false;\r\n     \r\n     private ElementVisitor<ClassModel, Void> dtoElementVisitor = new SimpleElementVisitor6<ClassModel, Void>() {\r\n         \r\n@@ -58,7 +58,7 @@ public class Processor {\n             Elements elementUtils = env.getElementUtils();\r\n             TypeModel c = APTTypeModel.get(e.asType(), elementUtils);\r\n             ClassModel classModel = new ClassModel(null, c.getPackageName(), c.getName(), c.getSimpleName());\r\n-            classModel.setListsAsCollections(listsAsCollections);\r\n+//            classModel.setListsAsCollections(listsAsCollections);\r\n             List<? extends Element> elements = e.getEnclosedElements();\r\n             // CONSTRUCTOR\r\n             for (ExecutableElement constructor : ElementFilter.constructorsIn(elements)){\r\n@@ -85,7 +85,7 @@ public class Processor {\n             TypeModel sc = APTTypeModel.get(e.getSuperclass(), elementUtils);\r\n             TypeModel c = APTTypeModel.get(e.asType(), elementUtils);\r\n             ClassModel classModel = new ClassModel(sc.getName(), c.getPackageName(), c.getName(), c.getSimpleName());\r\n-            classModel.setListsAsCollections(listsAsCollections);\r\n+//            classModel.setListsAsCollections(listsAsCollections);\r\n             List<? extends Element> elements = e.getEnclosedElements();\r\n             // GETTERS\r\n             for (ExecutableElement method : ElementFilter.methodsIn(elements)){\r\n@@ -285,15 +285,15 @@ public class Processor {\n         return this;\r\n     }\r\n \r\n-    /**\r\n-     * Process lists as Collections\r\n-     * \r\n-     * @return\r\n-     */\r\n-    public Processor listsAsCollections() {\r\n-        listsAsCollections = true;\r\n-        return this;\r\n-        \r\n-    }\r\n+//    /**\r\n+//     * Process lists as Collections\r\n+//     * \r\n+//     * @return\r\n+//     */\r\n+//    public Processor listsAsCollections() {\r\n+//        listsAsCollections = true;\r\n+//        return this;\r\n+//        \r\n+//    }\r\n \r\n }\r\ndiff --git a/querydsl-core/src/main/java/com/mysema/query/codegen/ClassModel.java b/querydsl-core/src/main/java/com/mysema/query/codegen/ClassModel.java\nindex 246d52680..4176c7d5b 100644\n--- a/querydsl-core/src/main/java/com/mysema/query/codegen/ClassModel.java\n+++ b/querydsl-core/src/main/java/com/mysema/query/codegen/ClassModel.java\n@@ -73,7 +73,7 @@ public class ClassModel implements Comparable<ClassModel> {\n     \r\n     private String superType;\r\n \r\n-    private boolean listsAsCollections;    \r\n+//    private boolean listsAsCollections;    \r\n \r\n     public ClassModel(String superType, String packageName, String name, String simpleName) {\r\n         this.superType = superType;\r\n@@ -121,18 +121,10 @@ public class ClassModel implements Comparable<ClassModel> {\n             simpleCollections.add(field);\r\n             break;\r\n         case ENTITYLIST:\r\n-            if (listsAsCollections){\r\n-                entityCollections.add(field);\r\n-            }else{\r\n-                entityLists.add(field);    \r\n-            }            \r\n+            entityLists.add(field);\r\n             break;\r\n         case SIMPLELIST:\r\n-            if (listsAsCollections){\r\n-                simpleCollections.add(field);\r\n-            }else{\r\n-                simpleLists.add(field);    \r\n-            }            \r\n+            simpleLists.add(field);\r\n             break;\r\n         case ENTITYMAP:\r\n             entityMaps.add(field);\r\n@@ -306,8 +298,8 @@ public class ClassModel implements Comparable<ClassModel> {\n         return field;\r\n     }\r\n \r\n-    public void setListsAsCollections(boolean b) {\r\n-        listsAsCollections = b;        \r\n-",
    "update act to 1 . 8 . 17 ( <issue_id> ) .": "diff --git a/frameworks/Java/act/README.md b/frameworks/Java/act/README.md\nindex 8c8473f24..50a34bb31 100644\n--- a/frameworks/Java/act/README.md\n+++ b/frameworks/Java/act/README.md\n@@ -36,4 +36,3 @@ public class AppEntry {\n \n ### Fortunes Test\n * [Fortunes test source](src/main/java/com/techempower/act/controller/FortuneController.java)\n-\ndiff --git a/frameworks/Java/act/pom.xml b/frameworks/Java/act/pom.xml\nindex e567a6e73..c7fd54d45 100644\n--- a/frameworks/Java/act/pom.xml\n+++ b/frameworks/Java/act/pom.xml\n@@ -22,7 +22,7 @@\n   <groupId>com.techempower</groupId>\n   <artifactId>actframework</artifactId>\n   <packaging>jar</packaging>\n-  <version>1.8.13</version>\n+  <version>1.8.17</version>\n \n   <name>TEB ActFramework Project</name>\n   <description>TEB benchmark project with ActFramework</description>\n@@ -36,7 +36,7 @@\n   <parent>\n     <groupId>org.actframework</groupId>\n     <artifactId>act-starter-parent</artifactId>\n-    <version>1.8.13.0</version>\n+    <version>1.8.17.0</version>\n   </parent>\n \n   <repositories>",
    "Enabled java assertions in tests : - ea": "diff --git a/h2/src/tools/org/h2/build/Build.java b/h2/src/tools/org/h2/build/Build.java\nindex 945be9f52..43f23b971 100644\n--- a/h2/src/tools/org/h2/build/Build.java\n+++ b/h2/src/tools/org/h2/build/Build.java\n@@ -926,11 +926,13 @@ private void test(boolean fast) {\n         int ret;\n         if (fast) {\n             ret = execJava(args(\n+                    \"-ea\",\n                     \"-Xmx128m\",\n                     \"-cp\", cp,\n                     \"org.h2.test.TestAll\", \"fast\"));\n         }",
    "update \\' gradle - wrapper \\' from 6 . 4 . 1 to 6 . 5 . 1": "diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties\nindex 21e622da..ac33e994 100644\n--- a/gradle/wrapper/gradle-wrapper.properties\n+++ b/gradle/wrapper/gradle-wrapper.properties\n@@ -1,5 +1,5 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-6.4.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.5.1-all.zip\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists",
    "Bumped the Application Version since an HA request type has been added": "diff --git a/enterprise/ha/src/main/java/org/neo4j/kernel/ha/MasterServer.java b/enterprise/ha/src/main/java/org/neo4j/kernel/ha/MasterServer.java\nindex 5be5ad8557e..72b571d19e0 100644\n--- a/enterprise/ha/src/main/java/org/neo4j/kernel/ha/MasterServer.java\n+++ b/enterprise/ha/src/main/java/org/neo4j/kernel/ha/MasterServer.java\n@@ -40,29 +40,29 @@ import org.neo4j.kernel.impl.util.StringLogger;\n  */\n public class MasterServer extends Server<Master, Void>\n {\n-    static final byte PROTOCOL_VERSION = 1;\n-    \n+    static final byte PROTOCOL_VERSION = 2;\n+\n     static final int FRAME_LENGTH = Protocol.DEFAULT_FRAME_LENGTH;\n-    \n+\n     public MasterServer( Master realMaster, final int port, StringLogger logger, int maxConcurrentTransactions,\n             int oldChannelThreshold )\n     {\n         super( realMaster, port, logger, FRAME_LENGTH, PROTOCOL_VERSION, maxConcurrentTransactions,\n                 oldChannelThreshold );\n     }\n-    \n+\n     @Override\n     protected RequestType<Master> getRequestContext( byte id )\n     {\n         return HaRequestType.values()[id];\n     }\n-    \n+\n     @Override\n     protected void finishOffChannel( Channel channel, SlaveContext context )\n     {\n         getMaster().finishTransaction( context, false );\n     }\n-    \n+\n     @Override\n     public void shutdown()\n     {",
    "add constructor to configuration": "diff --git a/modules/swagger-codegen/src/main/resources/csharp/Configuration.mustache b/modules/swagger-codegen/src/main/resources/csharp/Configuration.mustache\nindex 440288a4832..b5ebd08ba87 100644\n--- a/modules/swagger-codegen/src/main/resources/csharp/Configuration.mustache\n+++ b/modules/swagger-codegen/src/main/resources/csharp/Configuration.mustache\n@@ -12,6 +12,45 @@ namespace {{packageName}}.Client\n     /// </summary>\n     public class Configuration\n     {\n+        /// <summary>\n+        /// Initializes a new instance of the Configuration class with different settings\n+        /// </summary>\n+        /// <param name=\"apiClient\">Api client</param>\n+        /// <param name=\"defaultHeader\">Dictionary of default HTTP header</param>\n+        /// <param name=\"username\">Username</param>\n+        /// <param name=\"password\">Password</param>\n+        /// <param name=\"accessToken\">accessToken</param>\n+        /// <param name=\"apiKey\">Dictionary of API key</param>\n+        /// <param name=\"apiKeyPrefix\">Dictionary of API key prefix</param>\n+        /// <param name=\"tempFolderPath\">Temp folder path</param>\n+        /// <param name=\"dateTimeFormat\">DateTime format string</param>\n+        public Configuration(ApiClient apiClient,\n+                             Dictionary<String, String> defaultHeader,\n+                             string username,\n+                             string password,\n+                             string accessToken,\n+                             Dictionary<String, String> apiKey,\n+                             Dictionary<String, String> apiKeyPrefix,\n+                             string tempFolderPath,\n+                             string dateTimeFormat\n+                            )\n+        {\n+            if (apiClient == null)\n+                ApiClient = ApiClient.Default;\n+            else \n+                ApiClient = apiClient;\n+\n+            Username = username;\n+            Password = password;\n+            AccessToken = accessToken;\n+            ApiKey = apiKey;\n+            ApiKeyPrefix = apiKeyPrefix;\n+\n+            TempFolderPath = tempFolderPath;\n+            DateTimeFormat = dateTimeFormat;\n+\n+        }\n+\n         /// <summary>\n         /// Initializes a new instance of the Configuration class.\n         /// </summary>\ndiff --git a/samples/client/petstore/csharp/SwaggerClientTest/Lib/SwaggerClient/src/main/csharp/IO/Swagger/Client/Configuration.cs b/samples/client/petstore/csharp/SwaggerClientTest/Lib/SwaggerClient/src/main/csharp/IO/Swagger/Client/Configuration.cs\nindex 588b106dec9..bfbb9d7479d 100644\n--- a/samples/client/petstore/csharp/SwaggerClientTest/Lib/SwaggerClient/src/main/csharp/IO/Swagger/Client/Configuration.cs\n+++ b/samples/client/petstore/csharp/SwaggerClientTest/Lib/SwaggerClient/src/main/csharp/IO/Swagger/Client/Configuration.cs\n@@ -12,11 +12,53 @@ namespace IO.Swagger.Client\n     /// </summary>\n     public class Configuration\n     {\n+        /// <summary>\n+        /// Initializes a new instance of the Configuration class with different settings\n+        /// </summary>\n+        /// <param name=\"apiClient\">Api client</param>\n+        /// <param name=\"defaultHeader\">Dictionary of default HTTP header</param>\n+        /// <param name=\"username\">Username</param>\n+        /// <param name=\"password\">Password</param>\n+        /// <param name=\"accessToken\">accessToken</param>\n+        /// <param name=\"apiKey\">Dictionary of API key</param>\n+        /// <param name=\"apiKeyPrefix\">Dictionary of API key prefix</param>\n+        /// <param name=\"tempFolderPath\">Temp folder path</param>\n+        /// <param name=\"dateTimeFormat\">DateTime format string</param>\n+        public Configuration(ApiClient apiClient = null,\n+                             Dictionary<String, String> defaultHeader = null,\n+                             string username = null,\n+                             string password = null,\n+                             string accessToken = null,\n+                             Dictionary<String, String> apiKey = null,\n+                             Dictionary<String, String> apiKeyPrefix = null,\n+                             string tempFolderPath = null,\n+                             string dateTimeFormat = null\n+                            )\n+        {\n+            if (apiClient == null)\n+                ApiClient = ApiClient.Default;\n+            else \n+                ApiClient = apiClient;\n+\n+            Username = username;\n+            Password = password;\n+            AccessToken = accessToken;\n+\n+\t\t\tif (apiKey != null)\n+                ApiKey = apiKey;\n+\t\t\tif (apiKeyPrefix != null)\n+\t\t\t    ApiKeyPrefix = apiKeyPrefix;\n+\n+            TempFolderPath = tempFolderPath;\n+            DateTimeFormat = dateTimeFormat;\n+\n+        }\n+\n         /// <summary>\n         /// Initializes a new instance of",
    "removing missing module form main pom . xml": "diff --git a/pom.xml b/pom.xml\nindex 4808e614f6..5820989816 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -77,7 +77,6 @@\n         <module>spring-zuul</module>\n         <module>jsf</module>\n         <module>xml</module>\n-        <module>spring-4.3</module>\n         <module>lombok</module>\n         <module>redis</module>\n \t\t",
    "Add more support for @ JsonIgnoreType .": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/jersey/JacksonMessageBodyProvider.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/jersey/JacksonMessageBodyProvider.java\nindex c9195094b..d7af42d9f 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/jersey/JacksonMessageBodyProvider.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/jersey/JacksonMessageBodyProvider.java\n@@ -48,7 +48,7 @@ public class JacksonMessageBodyProvider implements MessageBodyReader<Object>,\n                               Type genericType,\n                               Annotation[] annotations,\n                               MediaType mediaType) {\n-        return json.canDeserialize(type);\n+        return !isIgnored(type) && json.canDeserialize(type);\n     }\n \n     @Override\n@@ -83,8 +83,12 @@ public class JacksonMessageBodyProvider implements MessageBodyReader<Object>,\n                                Type genericType,\n                                Annotation[] annotations,\n                                MediaType mediaType) {\n+        return !isIgnored(type) && json.canSerialize(type);\n+    }\n+\n+    private boolean isIgnored(Class<?> type) {\n         final JsonIgnoreType ignore = type.getAnnotation(JsonIgnoreType.class);\n-        return !((ignore != null) && ignore.value()) && json.canSerialize(type);\n+        return (ignore != null) && ignore.value();\n     }\n \n     @Override\ndiff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/jersey/JacksonMessageBodyProviderTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/jersey/JacksonMessageBodyProviderTest.java\nindex 108360c9e..eed39be9d 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/jersey/JacksonMessageBodyProviderTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/jersey/JacksonMessageBodyProviderTest.java\n@@ -75,6 +75,18 @@ public class JacksonMessageBodyProviderTest {\n                    is(true));\n     }\n \n+    @Test\n+    public void doesNotReadIgnoredTypes() throws Exception {\n+        assertThat(provider.isReadable(Ignorable.class, null, null, null),\n+                   is(false));\n+    }\n+\n+    @Test\n+ ",
    "Added tearDown ( ) method to clear ContextHolder .": "diff --git a/core/src/test/java/org/acegisecurity/taglibs/authz/AuthorizeTagAttributeTests.java b/core/src/test/java/org/acegisecurity/taglibs/authz/AuthorizeTagAttributeTests.java\nindex 6e36ec72e3..8ef1dab27a 100644\n--- a/core/src/test/java/org/acegisecurity/taglibs/authz/AuthorizeTagAttributeTests.java\n+++ b/core/src/test/java/org/acegisecurity/taglibs/authz/AuthorizeTagAttributeTests.java\n@@ -68,4 +68,8 @@ public class AuthorizeTagAttributeTests extends TestCase {\n \n         ContextHolder.setContext(context);\n     }\n+    \n+    protected void tearDown() throws Exception {\n+\t\tContextHolder.setContext(null);\n+\t}\n }\ndiff --git a/core/src/test/java/org/acegisecurity/taglibs/authz/AuthorizeTagTests.java b/core/src/test/java/org/acegisecurity/taglibs/authz/AuthorizeTagTests.java\nindex 257889ee2e..2e53784dd6 100644\n--- a/core/src/test/java/org/acegisecurity/taglibs/authz/AuthorizeTagTests.java\n+++ b/core/src/test/java/org/acegisecurity/taglibs/authz/AuthorizeTagTests.java\n@@ -109,4 +109,8 @@ public class AuthorizeTagTests extends TestCase {\n \n         ContextHolder.setContext(context);\n     }\n+\n+    protected void tearDown() throws Exception {\n+\t\tContextHolder.setContext(null);\n+\t}\n }",
    "Add document _count API ( <issue_id> ) .": "diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java\nindex 39bc03f4117..38dbbb8f151 100644\n--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java\n@@ -49,6 +49,7 @@ import org.elasticsearch.action.support.ActiveShardCount;\n import org.elasticsearch.action.support.IndicesOptions;\n import org.elasticsearch.action.support.WriteRequest;\n import org.elasticsearch.action.update.UpdateRequest;\n+import org.elasticsearch.client.core.CountRequest;\n import org.elasticsearch.client.security.RefreshPolicy;\n import org.elasticsearch.cluster.health.ClusterHealthStatus;\n import org.elasticsearch.common.Nullable;\n@@ -442,6 +443,16 @@ final class RequestConverters {\n         return request;\n     }\n \n+    static Request count(CountRequest countRequest) throws IOException {\n+        Request request = new Request(HttpPost.METHOD_NAME, endpoint(countRequest.indices(), countRequest.types(), \"_count\"));\n+        Params params = new Params(request);\n+        params.withRouting(countRequest.routing());\n+        params.withPreference(countRequest.preference());\n+        params.withIndicesOptions(countRequest.indicesOptions());\n+        request.setEntity(createEntity(countRequest.source(), REQUEST_BODY_CONTENT_TYPE));\n+        return request;\n+    }\n+\n     static Request explain(ExplainRequest explainRequest) throws IOException {\n         Request request = new Request(HttpGet.METHOD_NAME,\n             endpoint(explainRequest.index(), explainRequest.type(), explainRequest.id(), \"_explain\"));\ndiff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java\nindex d8dce990a4d..11fff4c0a6b 100644\n--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java\n@@ -56,6 +56,8 @@ import org.elasticsearch.action.search.SearchScrollRequest;\n import org.elasticsearch.action.support.master.AcknowledgedResponse;\n import org.elasticsearch.action.update.UpdateRequest;\n import org.elasticsearch.action.update.UpdateResponse;\n+import org.elasticsearch.client.core.CountRequest;\n+import org.elasticsearch.client.core.CountResponse;\n import org.elasticsearch.client.core.TermVectorsResponse;\n import org.elasticsearch.client.core.TermVectorsRequest;\n import org.elasticsearch.common.CheckedConsumer;\n@@ -791,6 +793,31 @@ public class RestHighLevelClient implements Closeable {\n                 emptySet());\n     }\n \n+    /**\n+     * Executes a count request using the Count API.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-count.html\">Count API on elastic.co</a>\n+     * @param countRequest the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @return the response\n+     * @throws IOException in case there is a problem sending the request or parsing back the response\n+     */\n+    public final CountResponse count(CountRequest countRequest, RequestOptions options) throws IOException {\n+        return performRequestAndParseEntity(countRequest, RequestConverters::count, options, CountResponse::fromXContent,\n+        emptySet());\n+    }\n+\n+    /**\n+     * Asynchronously executes a count request using the Count API.\n+     * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-count.html\">Count API on elastic.co</a>\n+     * @param countRequest the request\n+     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized\n+     * @param listener the listener to be notified upon request completion\n+     */\n+    public final void countAsync(CountRequest countRequest, RequestOptions options, ActionListener<CountResponse> listener) {\n+        performRequestAsyncAndParseEntity(countRequest, RequestConverters::count,  options,CountResponse::fromXContent,\n+            listener, emptySet());\n+    }\n+\n     /**\n      * Updates a document using the Update API.\n      * See <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update.html\">Update API on elastic.co</a>\ndiff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/core/CountRequest.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/core/CountRequest.java\nnew file mode 100644\nindex 00000000000..6d4589c7861\n--- /dev/null\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/core/CountRequest.java\n@@ -0,0 +1,206 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.core;\n+\n+import org.elasticsearch.action.ActionRequest;\n+import org.elasticsearch.action.ActionRequestValidationException;\n+import org.elasticsearch.action.IndicesRequest;\n+import org.elasticsearch.action.support.IndicesOptions;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.search.builder.SearchSourceBuilder;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+\n+import static org.elasticsearch.action.search.SearchRequest.DEFAULT_INDICES_OPTIONS;\n+\n+/**\n+ * Encapsulates a request to _count API against one, several or all indices.\n+ */\n+public final class CountRequest extends ActionRequest implements IndicesRequest.Replaceable {\n+\n+    private String[] indices = Strings.EMPTY_ARRAY;\n+    private String[] types = Strings.EMPTY_ARRAY;\n+    private String routing;\n+    private String preference;\n+    private SearchSourceBuilder searchSourceBuilder;\n+    private IndicesOptions indicesOptions = DEFAULT_INDICES_OPTIONS;\n+\n+    public CountRequest() {\n+        this.searchSourceBuilder = new SearchSourceBuilder();\n+    }\n+\n+    /**\n+     * Constructs a new count request against the indices. No indices provided here means that count will execute on all indices.\n+     */\n+    public CountRequest(String... indices) {\n+        this(indices, new SearchSourceBuilder());\n+    }\n+\n+    /**\n+     * Constructs a new search request against the provided indices with the given search source.\n+     */\n+    public CountRequest(String[] indices, SearchSourceBuilder searchSourceBuilder) {\n+        indices(indices);\n+        this.searchSourceBuilder = searchSourceBuilder;\n+    }\n+\n+    @Override\n+    public ActionRequestValidationException validate() {\n+        return null;\n+    }\n+\n+    /**\n+     * Sets the indices the count will be executed on.\n+     */\n+    public CountRequest indices(String... indices) {\n+        Objects.requireNonNull(indices, \"indices must not be null\");\n+        for (String index : indices) {\n+            Objects.requireNonNull(index, \"index must not be null\");\n+        }\n+        this.indices = indices;\n+        return this;\n+    }\n+\n+    /**\n+     * The source of the count request.\n+     */\n+    public CountRequest source(SearchSourceBuilder searchSourceBuilder) {\n+        this.searchSourceBuilder = Objects.requireNonNull(searchSourceBuilder, \"source must not be null\");\n+        return this;\n+    }\n+\n+    /**\n+     * The document types to execute the count against. Defaults to be executed against all types.\n+     *\n+     * @deprecated Types are going away, prefer filtering on a type.\n+     */\n+    @Deprecated\n+    public CountRequest types(String... types) {\n+        Objects.requireNonNull(types, \"types must not be null\");\n+        for (String type : types) {\n+            Objects.requireNonNull(type, \"type must not be null\");\n+        }\n+        this.types = types;\n+        return this;\n+    }\n+\n+    /**\n+     * The routing values to control the shards that the search will be executed on.\n+     */\n+    public CountRequest routing(String routing) {\n+        this.routing = routing;\n+        return this;\n+    }\n+\n+    /**\n+     * A comma separated list of routing values to control the shards the count will be executed on.\n+     */\n+    public CountRequest routing(String... routings) {\n+        this.routing = Strings.arrayToCommaDelimitedString(routings);\n+        return this;\n+    }\n+\n+    /**\n+     * Returns the indices options used to resolve indices. They tell for instance whether a single index is accepted, whether an empty\n+     * array will be converted to _all, and how wildcards will be expanded if needed.\n+     *\n+     * @see org.elasticsearch.action.support.IndicesOptions\n+     */\n+    public CountRequest indicesOptions(IndicesOptions indicesOptions) {\n+        this.indicesOptions = Objects.requireNonNull(indicesOptions, \"indicesOptions must not be null\");\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the preference to execute the count. Defaults to randomize across shards. Can be set to {@code _local} to prefer local shards\n+     * or a custom value, which guarantees that the same order will be used across different requests.\n+     */\n+    public CountRequest preference(String preference) {\n+        this.preference = preference;\n+        return this;\n+    }\n+\n+    public IndicesOptions indicesOptions() {\n+        return this.indicesOptions;\n+    }\n+\n+    public String routing() {\n+        return this.routing;\n+    }\n+\n+    public String preference() {\n+        return this.preference;\n+    }\n+\n+    public String[] indices() {\n+        return Arrays.copyOf(this.indices, this.indices.length);\n+    }\n+\n+    public Float minScore() {\n+        return this.searchSourceBuilder.minScore();\n+    }\n+\n+    public CountRequest minScore(Float minScore) {\n+        this.searchSourceBuilder.minScore(minScore);\n+        return this;\n+    }\n+\n+    public int terminateAfter() {\n+        return this.searchSourceBuilder.terminateAfter();\n+    }\n+\n+    public CountRequest terminateAfter(int terminateAfter) {\n+        this.searchSourceBuilder.terminateAfter(terminateAfter);\n+        return this;\n+    }\n+\n+    public String[] types() {\n+        return Arrays.copyOf(this.types, this.types.length);\n+    }\n+\n+    public SearchSourceBuilder source() {\n+        return this.searchSourceBuilder;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+        CountRequest that = (CountRequest) o;\n+        return Objects.equals(indicesOptions, that.indicesOptions) &&\n+            Arrays.equals(indices, that.indices) &&\n+            Arrays.equals(types, that.types) &&\n+            Objects.equals(routing, that.routing) &&\n+            Objects.equals(preference, that.preference);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = Objects.hash(indicesOptions, routing, preference);\n+        result = 31 * result + Arrays.hashCode(indices);\n+        result = 31 * result + Arrays.hashCode(types);\n+        return result;\n+    }\n+}\ndiff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/core/CountResponse.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/core/CountResponse.java\nnew file mode 100644\nindex 00000000000..f97f79127e6\n--- /dev/null\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/core/CountResponse.java\n@@ -0,0 +1,236 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.core;\n+\n+import org.elasticsearch.action.ActionResponse;\n+import org.elasticsearch.action.search.ShardSearchFailure;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.rest.RestStatus;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;\n+\n+/**\n+ * A response to _count API request.\n+ */\n+public final class CountResponse extends ActionResponse {\n+\n+    static final ParseField COUNT = new ParseField(\"count\");\n+    static final ParseField TERMINATED_EARLY = new ParseField(\"terminated_early\");\n+    static final ParseField SHARDS = new ParseField(\"_shards\");\n+\n+    private final long count;\n+    private final Boolean terminatedEarly;\n+    private final ShardStats shardStats;\n+\n+    public CountResponse(long count, Boolean terminatedEarly, ShardStats shardStats) {\n+        this.count = count;\n+        this.terminatedEarly = terminatedEarly;\n+        this.shardStats = shardStats;\n+    }\n+\n+    public ShardStats getShardStats() {\n+        return shardStats;\n+    }\n+\n+    /**\n+     * Number of documents matching request.\n+     */\n+    public long getCount() {\n+        return count;\n+    }\n+\n+    /**\n+     * The total number of shards the search was executed on.\n+     */\n+    public int getTotalShards() {\n+        return shardStats.totalShards;\n+    }\n+\n+    /**\n+     * The successful number of shards the search was executed on.\n+     */\n+    public int getSuccessfulShards() {\n+        return shardStats.successfulShards;\n+    }\n+\n+    /**\n+     * The number of shards skipped due to pre-filtering\n+     */\n+    public int getSkippedShards() {\n+        return shardStats.skippedShards;\n+    }\n+\n+    /**\n+     * The failed number of shards the search was executed on.\n+     */\n+    public int getFailedShards() {\n+        return shardStats.shardFailures.length;\n+    }\n+\n+    /**\n+     * The failures that occurred during the search.\n+     */\n+    public ShardSearchFailure[] getShardFailures() {\n+        return shardStats.shardFailures;\n+    }\n+\n+    public RestStatus status() {\n+        return RestStatus.status(shardStats.successfulShards, shardStats.totalShards, shardStats.shardFailures);\n+    }\n+\n+    public static CountResponse fromXContent(XContentParser parser) throws IOException {\n+        ensureExpectedToken(XContentParser.Token.START_OBJECT, parser.nextToken(), parser::getTokenLocation);\n+        parser.nextToken();\n+        ensureExpectedToken(XContentParser.Token.FIELD_NAME, parser.currentToken(), parser::getTokenLocation);\n+        String currentName = parser.currentName();\n+        Boolean terminatedEarly = null;\n+        long count = 0;\n+        ShardStats shardStats = new ShardStats(-1, -1,0, ShardSearchFailure.EMPTY_ARRAY);\n+\n+        for (XContentParser.Token token = parser.nextToken(); token != XContentParser.Token.END_OBJECT; token = parser.nextToken()) {\n+            if (token == XContentParser.Token.FIELD_NAME) {\n+                currentName = parser.currentName();\n+            } else if (token.isValue()) {\n+                if (COUNT.match(currentName, parser.getDeprecationHandler())) {\n+                    count = parser.longValue();\n+                } else if (TERMINATED_EARLY.match(currentName, parser.getDeprecationHandler())) {\n+                    terminatedEarly = parser.booleanValue();\n+                } else {\n+                    parser.skipChildren();\n+                }\n+            } else if (token == XContentParser.Token.START_OBJECT) {\n+                if (SHARDS.match(currentName, parser.getDeprecationHandler())) {\n+                    shardStats = ShardStats.fromXContent(parser);\n+                } else {\n+                    parser.skipChildren();\n+                }\n+            }\n+        }\n+        return new CountResponse(count, terminatedEarly, shardStats);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        String s = \"{\" +\n+            \"count=\" + count +\n+            (isTerminatedEarly() != null ? \", terminatedEarly=\" + terminatedEarly : \"\") +\n+            \", \" + shardStats +\n+            '}';\n+        return s;\n+    }\n+\n+    public Boolean isTerminatedEarly() {\n+        return terminatedEarly;\n+    }\n+\n+    /**\n+     * Encapsulates _shards section of count api response.\n+     */\n+    public static final class ShardStats {\n+\n+        static final ParseField FAILED = new ParseField(\"failed\");\n+        static final ParseField SKIPPED = new ParseField(\"skipped\");\n+        static final ParseField TOTAL = new ParseField(\"total\");\n+        static final ParseField SUCCESSFUL = new ParseField(\"successful\");\n+        static final ParseField FAILURES = new ParseField(\"failures\");\n+\n+        private final int successfulShards;\n+        private final int totalShards;\n+        private final int skippedShards;\n+        private final ShardSearchFailure[] shardFailures;\n+\n+        public ShardStats(int successfulShards, int totalShards, int skippedShards, ShardSearchFailure[] shardFailures) {\n+            this.successfulShards = successfulShards;\n+            this.totalShards = totalShards;\n+            this.skippedShards = skippedShards;\n+            this.shardFailures = Arrays.copyOf(shardFailures, shardFailures.length);\n+        }\n+\n+        public int getSuccessfulShards() {\n+            return successfulShards;\n+        }\n+\n+        public int getTotalShards() {\n+            return totalShards;\n+        }\n+\n+        public int getSkippedShards() {\n+            return skippedShards;\n+        }\n+\n+        public ShardSearchFailure[] getShardFailures() {\n+            return Arrays.copyOf(shardFailures, shardFailures.length, ShardSearchFailure[].class);\n+        }\n+\n+        static ShardStats fromXContent(XContentParser parser) throws IOException {\n+            int successfulShards = -1;\n+            int totalShards = -1;\n+            int skippedShards = 0; //BWC @see org.elasticsearch.action.search.SearchResponse\n+            List<ShardSearchFailure> failures = new ArrayList<>();\n+            XContentParser.Token token;\n+            String currentName = parser.currentName();\n+            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n+                if (token == XContentParser.Token.FIELD_NAME) {\n+                    currentName = parser.currentName();\n+                } else if (token.isValue()) {\n+                    if (FAILED.match(currentName, parser.getDeprecationHandler())) {\n+                        parser.intValue();\n+                    } else if (SKIPPED.match(currentName, parser.getDeprecationHandler())) {\n+                        skippedShards = parser.intValue();\n+                    } else if (TOTAL.match(currentName, parser.getDeprecationHandler())) {\n+                        totalShards = parser.intValue();\n+                    } else if (SUCCESSFUL.match(currentName, parser.getDeprecationHandler())) {\n+                        successfulShards = parser.intValue();\n+                    } else {\n+                        parser.skipChildren();\n+                    }\n+                } else if (token == XContentParser.Token.START_ARRAY) {\n+                    if (FAILURES.match(currentName, parser.getDeprecationHandler())) {\n+                        while ((parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n+                            failures.add(ShardSearchFailure.fromXContent(parser));\n+                        }\n+                    } else {\n+                        parser.skipChildren();\n+                    }\n+                } else {\n+                    parser.skipChildren();\n+                }\n+            }\n+            return new ShardStats(successfulShards, totalShards, skippedShards, failures.toArray(new ShardSearchFailure[failures.size()]));\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return \"_shards : {\" +\n+                \"total=\" + totalShards +\n+                \", successful=\" + successfulShards +\n+                \", skipped=\" + skippedShards +\n+                \", failed=\" + (shardFailures != null && shardFailures.length > 0 ? shardFailures.length : 0 ) +\n+                (shardFailures != null && shardFailures.length > 0 ? \", failures: \" + Arrays.asList(shardFailures): \"\") +\n+                '}';\n+        }\n+    }\n+}\ndiff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java\nindex 76b64241ef6..1e0f0f70b2f 100644\n--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java\n@@ -56,6 +56,7 @@ import org.elasticsearch.action.support.replication.ReplicationRequest;\n import org.elasticsearch.client.core.TermVectorsRequest;\n import org.elasticsearch.action.update.UpdateRequest;\n import org.elasticsearch.client.RequestConverters.EndpointBuilder;\n+import org.elasticsearch.client.core.CountRequest;\n import org.elasticsearch.common.CheckedBiConsumer;\n import org.elasticsearch.common.Strings;\n import org.elasticsearch.common.bytes.BytesArray;\n@@ -968,6 +969,72 @@ public class RequestConvertersTests extends ESTestCase {\n         expectThrows(NullPointerException.class, () -> new SearchRequest().types((String[]) null));\n     }\n \n+     public void testCountNotNullSource() throws IOException {\n+        //as we create SearchSourceBuilder in CountRequest constructor\n+        CountRequest countRequest = new CountRequest();\n+        Request request = RequestConverters.count(countRequest);\n+        assertEquals(HttpPost.METHOD_NAME, request.getMethod());\n+        assertEquals(\"/_count\", request.getEndpoint());\n+        assertNotNull(request.getEntity());\n+    }\n+\n+    public void testCount() throws Exception {\n+        String[] indices = randomIndicesNames(0, 5);\n+        CountRequest countRequest = new CountRequest(indices);\n+\n+  ",
    "Automated merge with http : / / hg . netbeans . org / core - main /": "diff --git a/lib.profiler.common/src/org/netbeans/lib/profiler/common/integration/IntegrationUtils.java b/lib.profiler.common/src/org/netbeans/lib/profiler/common/integration/IntegrationUtils.java\nindex c07f2a3c8..cdba256c4 100644\n--- a/lib.profiler.common/src/org/netbeans/lib/profiler/common/integration/IntegrationUtils.java\n+++ b/lib.profiler.common/src/org/netbeans/lib/profiler/common/integration/IntegrationUtils.java\n@@ -474,6 +474,23 @@ public class IntegrationUtils {\n                append(getLibsDir(targetPlatform, isRemote)).append(\",\").append(portNumber); //NOI18N\n         return args.toString();\n     }\n+    \n+    public static String getProfilerAgentCommandLineArgsWithoutQuotes(String targetPlatform, String targetJVM, boolean isRemote,\n+                                                                      int portNumber, String pathSpaceChar) {\n+        StringBuilder args = new StringBuilder();\n+        \n+        if ((targetJVM.equals(PLATFORM_JAVA_60) || targetJVM.equals(PLATFORM_JAVA_70) || targetJVM.equals(PLATFORM_JAVA_80)) && \n+            (targetPlatform.equals(PLATFORM_LINUX_OS) || targetPlatform.equals(PLATFORM_LINUX_AMD64_OS))) {\n+            args.append(\" -XX:+UseLinuxPosixThreadCPUClocks \"); // NOI18N\n+        }\n+        String natLibs = getNativeLibrariesPath(targetPlatform, targetJVM, isRemote).replace(\" \", pathSpaceChar != null ? pathSpaceChar : \" \");\n+        String libsDir = getLibsDir(targetPlatform, isRemote).replace(\" \", pathSpaceChar != null ? pathSpaceChar : \" \");\n+        String agentFile = getProfilerAgentLibraryFile(targetPlatform).replace(\" \", pathSpaceChar != null ? pathSpaceChar : \" \");\n+        args.append(\"-agentpath:\").append(natLibs). // NOI18N\n+               append(getDirectorySeparator(targetPlatform)).append(agentFile).append(\"=\"). //NOI18N\n+               append(libsDir).append(\",\").append(portNumber); //NOI18N\n+        return args.toString();\n+    }\n \n     // Returns filename of profiler agent library\n     public static String getProfilerAgentLibraryFile(String targetPlatform) {\ndiff --git a/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor.java b/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor.java\nindex 464a551ac..6e11a1668 100644\n--- a/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor.java\n+++ b/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor.java\n@@ -355,7 +355,7 @@ public abstract class RecursiveMethodInstrumentor extends ClassManager {\n \n     /** Create a multi-class packet of instrumented methods or classes */\n     protected Object[] createInstrumentedMethodPack() {\n-        if (nInstrMethods == 0) {\n+        if (nInstrClasses == 0) {\n             return null;\n         }\n \n@@ -372,12 +372,7 @@ public abstract class RecursiveMethodInstrumentor extends ClassManager {\n \n     protected void markClassAndMethodForInstrumentation(DynamicClassInfo clazz, int methodIdx) {\n         if ((status.getStartingMethodId() + nInstrMethods) < 65535) {\n-            String classNameAndLoader = clazz.getNameAndLoader();\n-\n-            if (!instrClasses.containsKey(classNameAndLoader)) {\n-                instrClasses.put(classNameAndLoader, clazz);\n-                nInstrClasses++;\n-            }\n+            addInsrClass(clazz);\n \n             nInstrMethods++;\n         } else { // Can't instrument more than 64K methods - mark this method as already instrumented\n@@ -385,6 +380,29 @@ public abstract class RecursiveMethodInstrumentor extends ClassManager {\n         }\n     }\n \n+    protected void markProfilingPointForInstrumentation(String classNameDot, String className, int classLoaderId) {\n+        RuntimeProfilingPoint[] pp = engineSettings.getRuntimeProfilingPoints();\n+        for (RuntimeProfilingPoint point : pp) {\n+            if (classNameDot.equals(point.getClassName())) {\n+                DynamicClassInfo clazz = javaClassForName(className, classLoaderId);\n+                \n+                if (clazz != null) {\n+                    markProfilingPonitForInstrumentation(clazz);\n+                }\n+                return;\n+            }\n+        }\n+    }\n+\n+    protected void markProfilingPonitForInstrumentation(DynamicClassInfo clazz) {\n+        RuntimeProfilingPoint[] pp = engineSettings.getRuntimeProfilingPoints();\n+        RuntimeProfilingPoint[] ppclass = getRuntimeProfilingPoints(pp,clazz);\n+        \n+        if (ppclass.length > 0) {\n+            addInsrClass(clazz);\n+        }\n+    }\n+\n     protected boolean markMethod(DynamicClassInfo clazz, int rootMethod) {\n         String rootMethodName = rootMethods.methodNames[rootMethod];\n         String rootMethodSignature = rootMethods.methodSignatures[rootMethod];\n@@ -427,7 +445,7 @@ public abstract class RecursiveMethodInstrumentor extends ClassManager {\n \n         return true;\n     }\n-\n+    \n     //---------------------------- Private implementation of instrumentation data packing ---------------------------\n \n     /** Create a multi-class packet of instrumented 1.5-style data */\n@@ -519,6 +537,7 @@ public abstract class RecursiveMethodInstrumentor extends ClassManager {\n                                                                                                              normalInjectionType,\n                                                                                                              points);\n                         clazz.saveMethodInfo(i, replacementMethodInfos[i]);\n+                        imInClass++;\n                     }\n                 } else {\n                     replacementMethodInfos[i] = clazz.getMethodInfo(i); // Will return the previously instrumented methodInfo\n@@ -608,4 +627,13 @@ public abstract class RecursiveMethodInstrumentor extends ClassManager {\n             }\n         }\n     }\n+\n+    private void addInsrClass(final DynamicClassInfo clazz) {\n+        String classNameAndLoader = clazz.getNameAndLoader();\n+\n+        if (!instrClasses.containsKey(classNameAndLoader)) {\n+            instrClasses.put(classNameAndLoader, clazz);\n+            nInstrClasses++;\n+        }\n+    }\n }\ndiff --git a/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor1.java b/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor1.java\nindex b799b7cb9..c4f75a24a 100644\n--- a/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor1.java\n+++ b/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor1.java\n@@ -105,6 +105,7 @@ public class RecursiveMethodInstrumentor1 extends RecursiveMethodInstrumentor {\n \n             String className = loadedClassInfos[j].getName();\n \n+            markProfilingPonitForInstrumentation(loadedClassInfos[j]);\n             tryInstrumentSpawnedThreads(loadedClassInfos[j]);\n \n             for (int rIdx = 0; rIdx < rootMethods.classNames.length; rIdx++) {\n@@ -154,10 +155,12 @@ public class RecursiveMethodInstrumentor1 extends RecursiveMethodInstrumentor {\n         return createInstrumentedMethodPack();\n     }\n \n-    public Object[] getMethodsToInstrumentUponClassLoad(String className, int classLoaderId, boolean threadInCallGraph) {\n+    public Object[] getMethodsToInstrumentUponClassLoad(String classNameDot, int classLoaderId, boolean threadInCallGraph) {\n         //System.out.println(\"*** MS1: instr. upon CL: \" + className);\n-        className = className.replace('.', '/').intern(); // NOI18N\n+        String className = classNameDot.replace('.', '/').intern(); // NOI18N\n \n+        initInstrMethodData();\n+        markProfilingPointForInstrumentation(classNameDot,className,classLoaderId);\n         // If a class doesn't pass the current instrumentation filter, we can't immediately reject it, since there is a chance\n         // it contains some root methods. So we have to check that first.\n         boolean isRootClass = false;\n@@ -185,7 +188,7 @@ public class RecursiveMethodInstrumentor1 extends RecursiveMethodInstrumentor {\n \n         if (!isRootClass) {\n             if (normallyFilteredOut) {\n-                return null;\n+                return createInstrumentedMethodPack(); // profile points !\n             }\n         }\n \n@@ -196,7 +199,6 @@ public class RecursiveMethodInstrumentor1 extends RecursiveMethodInstrumentor {\n             return null; // Warning already issued\n         }\n \n-        initInstrMethodData();\n         boolean instrumentClinit = threadInCallGraph;\n \n         if (!clazz.isLoaded()) {\ndiff --git a/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor2.java b/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor2.java\nindex 05d717152..80bf1ae4c 100644\n--- a/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor2.java\n+++ b/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor2.java\n@@ -105,6 +105,7 @@ public class RecursiveMethodInstrumentor2 extends RecursiveMethodInstrumentor {\n                 continue; // Can this happen?\n             }\n \n+            markProfilingPonitForInstrumentation(loadedClassInfos[j]);\n             tryInstrumentSpawnedThreads(loadedClassInfos[j]); // This only checks for Runnable.run()\n \n             for (int rIdx = 0; rIdx < rootMethods.classNames.length; rIdx++) {\n@@ -154,10 +155,12 @@ public class RecursiveMethodInstrumentor2 extends RecursiveMethodInstrumentor {\n         return createInstrumentedMethodPack();\n     }\n \n-    public Object[] getMethodsToInstrumentUponClassLoad(String className, int classLoaderId, boolean threadInCallGraph) {\n+    public Object[] getMethodsToInstrumentUponClassLoad(String classNameDot, int classLoaderId, boolean threadInCallGraph) {\n         //System.out.println(\"*** MS2: instr. upon CL: \" + className);\n-        className = className.replace('.', '/').intern(); // NOI18N\n+        String className = classNameDot.replace('.', '/').intern(); // NOI18N\n \n+        initInstrMethodData();\n+        markProfilingPointForInstrumentation(classNameDot,className,classLoaderId);\n         // If a class doesn't pass the current instrumentation filter, we can't immediately reject it, since there is a chance\n         // it contains some root methods. So we have to check that first.\n         boolean isRootClass = false;\n@@ -185,7 +188,7 @@ public class RecursiveMethodInstrumentor2 extends RecursiveMethodInstrumentor {\n \n         if (!isRootClass) {\n             if (normallyFilteredOut) {\n-                return null;\n+                return createInstrumentedMethodPack();  // profile points!\n             }\n         }\n \n@@ -195,7 +198,6 @@ public class RecursiveMethodInstrumentor2 extends RecursiveMethodInstrumentor {\n             return null; // Warning already issued\n         }\n \n-        initInstrMethodData();\n         boolean instrumentClinit = threadInCallGraph;\n \n         if (!clazz.isLoaded()) {\ndiff --git a/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor3.java b/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor3.java\nindex b8eddf499..740aa5315 100644\n--- a/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor3.java\n+++ b/lib.profiler/src/org/netbeans/lib/profiler/instrumentation/RecursiveMethodInstrumentor3.java\n@@ -108,6 +108,7 @@ public class RecursiveMethodInstrumentor3 extends RecursiveMethodInstrumentor {\n         boolean isRootClass = false;\n         int rootIdxForAll = -1;\n \n+        markProfilingPonitForInstrumentation(clazz);\n         isRootClass = tryInstrumentSpawnedThreads(clazz); // This only checks for Runnable.run()\n \n         if (noExplicitRootsSpecified && !mainMethodInstrumented) { // Check if this class has main method. The first loaded class with main method should be main class.\n@@ -251,6 +252,7 @@ public class RecursiveMethodInstrumentor3 extends RecursiveMethodInstrumentor {\n                 continue; // Can this happen?\n             }\n \n+            markProfilingPonitForInstrumentation(loadedClassInfos[j]);\n             tryInstrumentSpawnedThreads(loadedClassInfos[j]); // This only checks for Runnable.run()\n \n             for (int rIdx = 0; rIdx < rootMethods.classNames.length; rIdx++) {\ndiff --git a/profiler.heapwalker/src/org/netbeans/modules/profiler/heapwalk/ui/ClassesListControllerUI.java b/profiler.heapwalker/src/org/netbeans/modules/profiler/heapwalk/ui/ClassesListControllerUI.java\nindex d6940008d..a669ddda1 100644\n--- a/profiler.heapwalker/src/org/netbeans/modules/profiler/heapwalk/ui/ClassesListControllerUI.java\n+++ b/profiler.heapwalker/src/org/netbeans/modules/profiler/heapwalk/ui/ClassesListControllerUI.java\n@@ -423,15 +423,14 @@ public class ClassesListControllerUI extends JTitledPanel {\n     //~ Static fields/initializers -----------------------------------------------------------------------------------------------\n                                                                                                                                        // -----\n     private static Icon ICON_CLASSES = Icons.getIcon(HeapWalkerIcons.CLASSES);\n-    private static String filterValue = \"\"; // NOI18N\n-    private static int filterType = CommonConstants.FILTER_CONTAINS;\n-\n     // --- UI definition ---------------------------------------------------------\n     private static final String DATA = \"Data\"; // NOI18N\n     private static final String NO_DATA = \"No data\"; // NOI18N\n \n     //~ Instance fields ----------------------------------------------------------------------------------------------------------\n \n+    private String filterValue = \"\"; // NOI18N\n+    private int filterType = CommonConstants.FILTER_CONTAINS;\n     private CardLayout contents;\n     private ClassesListController classesListController;\n     private ClassesListTableModel realClassesListTableModel = new ClassesListTableModel();\n@@ -949,6 +948,9 @@ public class ClassesListControllerUI extends JTitledPanel {\n \n         classesListTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n             public void valueChanged(ListSelectionEvent e) {\n+                if (e.getFirstIndex() != e.getLastIndex()) {\n+                    realClassesListTableModel.setSelectedRow(e.getLastIndex());\n+                }\n                 restoreSelection();\n             }\n         });\ndiff --git a/profiler.heapwalker/src/org/netbeans/modules/profiler/heapwalk/ui/ReferencesBrowserControllerUI.java b/profiler.heapwalker/src/org/netbeans/modules/profiler/heapwalk/ui/ReferencesBrowserControllerUI.java\nindex ae6396d53..e4d08fa1f 100644\n--- a/profiler.heapwalker/src/org/netbeans/modules/profiler/heapwalk/ui/ReferencesBrowserControllerUI.java\n+++ b/profiler.heapwalker/src/org/netbeans/modules/profiler/heapwalk/ui/ReferencesBrowserControllerUI.java\n@@ -365,16 +365,22 @@ public class ReferencesBrowserControllerUI extends JTitledPanel {\n \n     private void selectPath(final CCTNode[] path, final int length) {\n         if (length >= path.length) {\n-            fieldsListTable.getTree().setSelectionPath(new TreePath(path));\n+            final CCTNode node = (CCTNode)new TreePath(path).getLastPathComponent();\n+            \n+            // --- #208900 make sure the row is visible even if displaying a scrollbar\n+            fieldsListTable.selectNode(node, true);\n+            SwingUtilities.invokeLater(new Runnable() {\n+                public void run() {\n+                    fieldsListTable.selectNode(node, true);\n+                }\n+            });\n+            // --- \n         } else {\n             Object[] shortPath = new Object[length];\n             System.arraycopy(path, 0, shortPath, 0, length);\n             final TreePath p = new TreePath(shortPath);\n             SwingUtilities.invokeLater(new Runnable() {\n                 public void run() {\n-//                    System.err.println(\">>> Selecting length \" + length);\n-                    fieldsListTable.getTree().setSelectionPath(p);\n-                    fieldsListTable.scrollRectToVisible(fieldsListTable.getCellRect(fieldsListTable.getSelectedRow(), 0, true));\n                     selectPath(path, length + MAX_STEP);\n                 }\n             });\ndiff --git a/profiler/nbproject/project.xml b/profiler/nbproject/project.xml\nindex 4f52e2d00..5959d0327 100644\n--- a/profiler/nbproject/project.xml\n+++ b/profiler/nbproject/project.xml\n@@ -292,6 +292,7 @@ made subject to such option by the copyright holder.\n                 <friend>org.netbeans.modules.profiler.nbimpl</friend>\n                 <friend>org.netbeans.modules.profiler.ppoints</friend>\n                 <friend>org.netbeans.modules.profiler.snaptracer</friend>\n+                <friend>org.netbeans.modules.profiler.stp</friend>\n                 <package>org.netbeans.modules.profiler</package>\n                 <package>org.netbeans.modules.profiler.actions</package>\n                 <package>org.netbeans.modules.profiler.ui</package>\ndiff --git a/profiler/src/org/netbeans/modules/profiler/ui/panels/ProjectSelectRootMethodsPanel.java b/profiler/src/org/netbeans/modules/profiler/ui/panels/ProjectSelectRootMethodsPanel.java\nindex cc1b786bb..b45e945ee 100644\n--- a/profiler/src/org/netbeans/modules/profiler/ui/panels/ProjectSelectRootMethodsPanel.java\n+++ b/profiler/src/org/netbeans/modules/profiler/ui/panels/ProjectSelectRootMethodsPanel.java\n@@ -96,7 +96,7 @@ import org.openide.util.lookup.Lookups;\n     \"SelectRootMethodsPanel_SelectViewLabel=Select &View: \",\n     \"SelectRootMethodsPanel_AdvancedButtonText=&Advanced...\"\n })\n-final public class ProjectSelectRootMethodsPanel extends JPanel {\n+final public class ProjectSelectRootMethodsPanel extends JPanel implements HelpCtx.Provider {\n     final private static Logger LOG = Logger.getLogger(ProjectSelectRootMethodsPanel.class.getName());\n     \n     private static ProjectSelectRootMethodsPanel instance = null;\ndiff --git a/profiler/src/org/netbeans/modules/profiler/ui/panels/ProjectSelectorPanel.java b/profiler/src/org/netbeans/modules/profiler/ui/panels/ProjectSelectorPanel.java\nindex 8e93d8452..ec49ab7f2 100644\n--- a/profiler/src/org/netbeans/modules/profiler/ui/panels/ProjectSelectorPanel.java\n+++ b/profiler/src/org/netbeans/modules/profiler/ui/panels/ProjectSelectorPanel.java\n@@ -52,13 +52,17 @@ import javax.swing.event.ListDataEvent;\n import javax.swing.event.ListDataListener;\n import org.netbeans.modules.profiler.api.ProjectUtilities;\n import org.openide.awt.Mnemonics;\n+import org.openide.util.HelpCtx;\n import org.openide.util.Lookup;\n \n /**\n  *\n  * @author Jaroslav Bachorik\n  */\n-public class ProjectSelectorPanel extends javax.swing.JPanel {\n+public class ProjectSelectorPanel extends javax.swing.JPanel implements HelpCtx.Provider {\n+    private static final String HELP_CTX_KEY =",
    "Apply Alexander Dvoretskiy \\' s patch implementing support for window . prompt ( ) . .": "diff --git a/code/javascript/selenium-api.js b/code/javascript/selenium-api.js\nindex 070804bf69..0bdfcab129 100644\n--- a/code/javascript/selenium-api.js\n+++ b/code/javascript/selenium-api.js\n@@ -98,6 +98,13 @@ Selenium.prototype.doChooseCancelOnNextConfirmation = function() {\n     this.browserbot.cancelNextConfirmation();\n };\n \n+/*\n+ * Instruct Selenium what to answear on the next prompt dialog it encounters\n+ */\n+Selenium.prototype.doAnswerOnNextPrompt = function(answer) {\n+    this.browserbot.setNextPromptResult(answer);\n+};\n+\n /*\n  * Simulate the browser back button\n  */\n@@ -148,6 +155,20 @@ Selenium.prototype.assertConfirmation = function(confirmationPattern) {\n     }\n };\n  \n+/*\n+ * Asserts that the supplied message was received as a prompt\n+ */\n+Selenium.prototype.assertPrompt = function(promptPattern) {\n+    if (this.browserbot.hasPrompts()) {\n+        receivedPrompt = this.browserbot.getNextPrompt();\n+        if (! PatternMatcher.matches(promptPattern, receivedPrompt)) {\n+            Assert.fail(\"The prompt message was [\" + receivedPrompt + \"]\");\n+         }\n+    } else {\n+        Assert.fail(\"There were no prompts\");\n+    }\n+};\n+\n /*\n  * Verify the location of the current page.\n  */\ndiff --git a/code/javascript/selenium-browserbot.js b/code/javascript/selenium-browserbot.js\nindex aace46921a..7611e9b5fb 100644\n--- a/code/javascript/selenium-browserbot.js\n+++ b/code/javascript/selenium-browserbot.js\n@@ -50,8 +50,10 @@ BrowserBot = function(frame) {\n     this.modalDialogTest = null;\n     this.recordedAlerts = new Array();\n     this.recordedConfirmations = new Array();\n+    this.recordedPrompts = new Array();\n     this.openedWindows = {};\n     this.nextConfirmResult = true;\n+    this.nextPromptResult = '';\n     this.newPageLoaded = false;\n \n     var self = this;\n@@ -95,6 +97,10 @@ BrowserBot.prototype.cancelNextConfirmation = function() {\n     this.nextConfirmResult = false;\n };\n \n+BrowserBot.prototype.setNextPromptResult = function(result) {\n+    this.nextPromptResult = result;\n+};\n+\n BrowserBot.prototype.hasAlerts = function() {\n     return (this.recordedAlerts.length > 0) ;\n };\n@@ -111,6 +117,13 @@ BrowserBot.prototype.getNextConfirmation = function() {\n     return this.recordedConfirmations.shift();\n };\n \n+BrowserBot.prototype.hasPrompts = function() {\n+    return (this.recordedPrompts.length > 0) ;\n+};\n+\n+BrowserBot.prototype.getNextPrompt = function() {\n+    return this.recordedPrompts.shift();\n+};\n \n BrowserBot.prototype.getFrame = function() {\n     return this.frame;\n@@ -164,6 +177,14 @@ BrowserBot.prototype.modifyWindowToRecordPopUpDialogs = function(windowToModify,\n         return result;\n     };\n \n+    windowToModify.prompt = function(message) {\n+        browserBot.recordedPrompts.push(message);\n+        var result = !browserBot.nextConfirmResult ? null : browserBot.nextPromptResult;\n+        browserBot.nextConfirmResult = true;\n+        browserBot.nextPromptResult = '';\n+        return result;\n+    };\n+\n     // Keep a reference to all popup windows by name\n     // note that in IE the \"windowName\" argument must be a valid javascript identifier, it seems.\n     var originalOpen = windowToModify.open;\ndiff --git a/code/javascript/tests/TestPrompting.html b/code/javascript/tests/TestPrompting.html\nnew file mode 100644\nindex 0000000000..5367e9a94d\n--- /dev/null\n+++ b/code/javascript/tests/TestPrompting.html\n@@ -0,0 +1,82 @@\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n+<!--\n+Copyright 2004 ThoughtWorks, Inc\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+     http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+-->\n+<html>\n+<head>\n+  <meta content=\"text/html; charset=ISO-8859-1\"\n+ http-equiv=\"content-type\">\n+  <title>Test Prompting Verifification</title>\n+</head>\n+<body>\n+<table cellpadding=\"1\" cellspacing=\"1\" border=\"1\">\n+  <tbody>\n+    <tr>\n+      <td rowspan=\"1\" colspan=\"3\">Test verify Prompting<br>\n+      </td>\n+    </tr>\n+\n+    <tr>\n+      <td>open</td>\n+      <td>./tests/html/test_prompt.html</td>\n+      <td>&nbsp;</td>\n+    </tr>\n+    <tr>\n+      <td>answerOnNextPrompt</td>\n+      <td>no</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>click</td>\n+      <td>promptAndLeave</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>verifyPrompt</td>\n+      <td>Type 'yes' and click OK</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>verifyTitle</td>\n+      <td>Test Prompt</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>answerOnNextPrompt</td>\n+      <td>yes</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>clickAndWait</td>\n+      <td>promptAndLeave</td>\n+      <td></td>\n+    </tr>\n+    <tr>\n+      <td>verifyPrompt</td>\n+      <td>*'yes'*</td>\n+      <td></td>\n+    </tr>\n+\n+    <tr>\n+      <td>verifyTitle</td>\n+      <td>Dummy Page</td>\n+      <td></td>\n+    </tr>\n+\n+\n+  </tbody>\n+</table>\n+</body>\n+</html>\ndiff --git a/code/javascript/tests/TestSuite-InternetExplorer.html b/code/javascript/tests/TestSuite-InternetExplorer.html\nindex 9878e6457b..9ca7e3d004 100644\n--- a/code/javascript/tests/TestSuite-InternetExplorer.html\n+++ b/code/javascript/tests/TestSuite-InternetExplorer.html\n@@ -57,6 +57,7 @@\n             <tr><td><a href=\"./TestFocusOnBlur.html\">TestFocusOnBlur</a></td></tr>\n             <tr><td><a href=\"./TestVerifyAlerts.html\">TestVerifyAlerts</a></td></tr>\n             <tr><td><a href=\"./TestConfirmations.html\">TestVerifyConfirmations</a></td></tr>\n+            <tr><td><a href=\"./TestPrompting.html\">TestVerifyPrompt</a></td></tr>\n             <tr><td><a href=\"./TestVisibility.html\">TestVisibility</a></td></tr>\n             <tr><td><a href=\"./TestVerifyEditable.html\">TestVerifyEditable</a></td></tr>\n \ndiff --git a/code/javascript/tests/TestSuite-Konqueror.html b/code/javascript/tests/TestSuite-Konqueror.html\nindex d3155bf993..f7dc5abbc3 100644\n--- a/code/javascript/tests/TestSuite-Konqueror.html\n+++ b/code/javascript/tests/TestSuite-Konqueror.html\n@@ -57,6 +57,7 @@\n             <tr><td><a href=\"./TestFocusOnBlur.html\">TestFocusOnBlur</a></td></tr>\n             <tr><td><a href=\"./TestVerifyAlerts.html\">TestVerifyAlerts</a></td></tr>\n             <tr><td><a href=\"./TestConfirmations.html\">TestVerifyConfirmations</a></td></tr>\n+            <tr><td><a href=\"./TestPrompting.html\">TestVerifyPrompt</a></td></tr>\n <!--            <tr><td><a href=\"./TestVisibility.html\">TestVisibility</a></td></tr>-->\n             <tr><td><a href=\"./TestVerifyEditable.html\">TestVerifyEditable</a></td></tr>\n \ndiff --git a/code/javascript/tests/TestSuite-Safari.html b/code/javascript/tests/TestSuite-Safari.html\nindex d3155bf993..f7dc5abbc3 100644\n--- a/code/javascript/tests/TestSuite-Safari.html\n+++ b/code/javascript/tests/TestSuite-Safari.html\n@@ -57,6 +57,7 @@\n             <tr><td><a href=\"./TestFocusOnBlur.html\">TestFocusOnBlur</a></td></tr>\n             <tr><td><a href=\"./TestVerifyAlerts.html\">TestVerifyAlerts</a></td></tr>\n             <tr><td><a href=\"./TestConfirmations.html\">TestVerifyConfirmations</a></td></tr>\n+            <tr><td><a href=\"./TestPrompting.html\">TestVerifyPrompt</a></td></tr>\n <!--            <tr><td><a href=\"./TestVisibility.html\">TestVisibility</a></td></tr>-->\n             <tr><td><a href=\"./TestVerifyEditable.html\">TestVerifyEditable</a></td></tr>\n \ndiff --git a/code/javascript/tests/TestSuite.html b/code/javascript/tests/TestSuite.html\nindex 67f21321a0..7e3c1ec783 100644\n--- a/code/javascript/tests/TestSuite.html\n+++ b/code/javascript/tests/TestSuite.html\n@@ -57,6 +57,7 @@\n             <tr><td><a href=\"./TestFocusOnBlur.html\">TestFocusOnBlur</a></td></tr>\n             <tr><td><a href=\"./TestVerifyAlerts.html\">TestVerifyAlerts</a></td></tr>\n             <tr><td><a href=\"./TestConfirmations.html\">TestVerifyConfirmations</a></td></tr>\n+            <tr><td><a href=\"./TestPrompting.html\">TestVerifyPrompt</a></td></tr>\n             <tr><td><a href=\"./TestVisibility.html\">TestVisibility</a></td></tr>\n             <tr><td><a href=\"./TestVerifyEditable.html\">TestVerifyEditable</a></td></tr>\n \ndiff --git a/code/javascript/tests/html/test_prompt.html b/code/javascript/tests/html/test_prompt.html\nnew file mode 100644\nindex 0000000000..88102c0a1a\n--- /dev/null\n+++ b/code/javascript/tests/html/test_prompt.html\n@@ -0,0 +1,34 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n+<html>\n+<head>\n+<!--\n+Copyright 2004 ThoughtWorks, Inc\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+     http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+-->\n+  <script type=\"text/javascript\">\n+\n+  function confirmLeaving() {\n+    if (prompt(\"Type 'yes' and click OK\") == 'yes') {\n+        document.location = \"test_dummy_page.html\";\n+    }\n+ }\n+\n+  </script>\n+  <title>Test Prompt</title>\n+</head>\n+<body>\n+<img style=\"width: 644px; height: 41px;\" alt=\"banner\" src=\"banner.gif\"><br>\n+<a id=\"promptAndLeave\" href=\"javascript:confirmLeaving();\">click to navigate to a new page</a>\n+</body>\n+</html>",
    "Clarify semantics of objects returned by state access": "diff --git a/runners/core-java/src/main/java/org/apache/beam/runners/core/InMemoryStateInternals.java b/runners/core-java/src/main/java/org/apache/beam/runners/core/InMemoryStateInternals.java\nindex 59814bc754..075e2646c8 100644\n--- a/runners/core-java/src/main/java/org/apache/beam/runners/core/InMemoryStateInternals.java\n+++ b/runners/core-java/src/main/java/org/apache/beam/runners/core/InMemoryStateInternals.java\n@@ -17,8 +17,12 @@\n  */\n package org.apache.beam.runners.core;\n \n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.Iterables;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collection;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n@@ -326,7 +330,8 @@ public class InMemoryStateInternals<K> implements StateInternals {\n \n     @Override\n     public OutputT read() {\n-      return combineFn.extractOutput(accum);\n+      return combineFn.extractOutput(\n+          combineFn.mergeAccumulators(Arrays.asList(combineFn.createAccumulator(), accum)));\n     }\n \n     @Override\n@@ -407,7 +412,7 @@ public class InMemoryStateInternals<K> implements StateInternals {\n \n     @Override\n     public Iterable<T> read() {\n-      return contents;\n+      return Iterables.limit(contents, contents.size());\n     }\n \n     @Override\n@@ -478,7 +483,7 @@ public class InMemoryStateInternals<K> implements StateInternals {\n \n     @Override\n     public Iterable<T> read() {\n-      return contents;\n+      return ImmutableSet.copyOf(contents);\n     }\n \n     @Override\n@@ -551,19 +556,41 @@ public class InMemoryStateInternals<K> implements StateInternals {\n       contents.remove(key);\n     }\n \n+    private static class CollectionViewState<T> implements ReadableState<Iterable<T>> {\n+      private final Collection<T> collection;\n+\n+      private CollectionViewState(Collection<T> collection) {\n+        this.collection = collection;\n+      }\n+\n+      public static <T> CollectionViewState<T> of(Collection<T> collection) {\n+        return new CollectionViewState<>(collection);\n+      }\n+\n+      @Override\n+      public Iterable<T> read() {\n+        return ImmutableList.copyOf(collection);\n+      }\n+\n+      @Override\n+      public ReadableState<Iterable<T>> readLater() {\n+        return this;\n+      }\n+    }\n+\n     @Override\n     public ReadableState<Iterable<K>> keys() {\n-      return ReadableStates.immediate((Iterable<K>) contents.keySet());\n+      return CollectionViewState.of(contents.keySet());\n     }\n \n     @Override\n     public ReadableState<Iterable<V>> values() {\n-      return ReadableStates.immediate((Iterable<V>) contents.values());\n+      return CollectionViewState.of(contents.values());\n     }\n \n     @Override\n     public ReadableState<Iterable<Map.Entry<K, V>>> entries() {\n-      return ReadableStates.immediate((Iterable<Map.Entry<K, V>>) contents.entrySet());\n+      return CollectionViewState.of(contents.entrySet());\n     }\n \n     @Override\ndiff --git a/runners/direct-java/src/test/java/org/apache/beam/runners/direct/CopyOnAccessInMemoryStateInternalsTest.java b/runners/direct-java/src/test/java/org/apache/beam/runners/direct/CopyOnAccessInMemoryStateInternalsTest.java\nindex 1e60ca33ef..657bb7fd48 100644\n--- a/runners/direct-java/src/test/java/org/apache/beam/runners/direct/CopyOnAccessInMemoryStateInternalsTest.java\n+++ b/runners/direct-java/src/test/java/org/apache/beam/runners/direct/CopyOnAccessInMemoryStateInternalsTest.java\n@@ -29,6 +29,7 @@ import static org.mockito.Mockito.never;\n import static org.mockito.Mockito.spy;\n import static org.mockito.Mockito.verify;\n \n+import com.google.common.collect.Lists;\n import org.apache.beam.runners.core.StateNamespace;\n import org.apache.beam.runners.core.StateNamespaceForTest;\n import org.apache.beam.runners.core.StateNamespaces;\n@@ -63,8 +64,10 @@ import org.junit.runners.JUnit4;\n @RunWith(JUnit4.class)\n public class CopyOnAccessInMemoryStateInternalsTest {\n \n-  @Rule public final TestPipeline pipeline = TestPipeline.create();\n-  @Rule public ExpectedException thrown = ExpectedException.none();\n+  @Rule\n+  public final TestPipeline pipeline = TestPipeline.create();\n+  @Rule\n+  public ExpectedException thrown = ExpectedException.none();\n   private String key = \"foo\";\n \n   @Test\n@@ -114,7 +117,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n    */\n   @Test\n   public void testGetWithPresentInUnderlying() {\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n \n     StateNamespace namespace = new StateNamespaceForTest(\"foo\");\n@@ -125,7 +128,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n     underlyingValue.write(\"bar\");\n     assertThat(underlyingValue.read(), equalTo(\"bar\"));\n \n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, underlying);\n     ValueState<String> copyOnAccessState = internals.state(namespace, valueTag);\n     assertThat(copyOnAccessState.read(), equalTo(\"bar\"));\n@@ -140,7 +143,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testBagStateWithUnderlying() {\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n \n     StateNamespace namespace = new StateNamespaceForTest(\"foo\");\n@@ -151,7 +154,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n     underlyingValue.add(1);\n     assertThat(underlyingValue.read(), containsInAnyOrder(1));\n \n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, underlying);\n     BagState<Integer> copyOnAccessState = internals.state(namespace, valueTag);\n     assertThat(copyOnAccessState.read(), containsInAnyOrder(1));\n@@ -161,12 +164,13 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n     assertThat(underlyingValue.read(), containsInAnyOrder(1));\n \n     BagState<Integer> reReadUnderlyingValue = underlying.state(namespace, valueTag);\n-    assertThat(underlyingValue.read(), equalTo(reReadUnderlyingValue.read()));\n+    assertThat(Lists.newArrayList(underlyingValue.read()),\n+        equalTo(Lists.newArrayList(reReadUnderlyingValue.read())));\n   }\n \n   @Test\n   public void testSetStateWithUnderlying() {\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n \n     StateNamespace namespace = new StateNamespaceForTest(\"foo\");\n@@ -177,7 +181,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n     underlyingValue.add(1);\n     assertThat(underlyingValue.read(), containsInAnyOrder(1));\n \n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, underlying);\n     SetState<Integer> copyOnAccessState = internals.state(namespace, valueTag);\n     assertThat(copyOnAccessState.read(), containsInAnyOrder(1));\n@@ -192,7 +196,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testMapStateWithUnderlying() {\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n \n     StateNamespace namespace = new StateNamespaceForTest(\"foo\");\n@@ -204,7 +208,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n     underlyingValue.put(\"hello\", 1);\n     assertThat(underlyingValue.get(\"hello\").read(), equalTo(1));\n \n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, underlying);\n     MapState<String, Integer> copyOnAccessState = internals.state(namespace, valueTag);\n     assertThat(copyOnAccessState.get(\"hello\").read(), equalTo(1));\n@@ -221,7 +225,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testAccumulatorCombiningStateWithUnderlying() throws CannotProvideCoderException {\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n     CombineFn<Long, long[], Long> sumLongFn = Sum.ofLongs();\n \n@@ -236,7 +240,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n     underlyingValue.add(1L);\n     assertThat(underlyingValue.read(), equalTo(1L));\n \n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, underlying);\n     GroupingState<Long, Long> copyOnAccessState = internals.state(namespace, stateTag);\n     assertThat(copyOnAccessState.read(), equalTo(1L));\n@@ -251,7 +255,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testWatermarkHoldStateWithUnderlying() {\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n \n     TimestampCombiner timestampCombiner = TimestampCombiner.EARLIEST;\n@@ -265,7 +269,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n     underlyingValue.add(new Instant(250L));\n     assertThat(underlyingValue.read(), equalTo(new Instant(250L)));\n \n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, underlying);\n     WatermarkHoldState copyOnAccessState = internals.state(namespace, stateTag);\n     assertThat(copyOnAccessState.read(), equalTo(new Instant(250L)));\n@@ -284,7 +288,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testCommitWithoutUnderlying() {\n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n     StateNamespace namespace = new StateNamespaceForTest(\"foo\");\n     StateTag<BagState<String>> bagTag = StateTags.bag(\"foo\", StringUtf8Coder.of());\n@@ -304,9 +308,9 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testCommitWithUnderlying() {\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, underlying);\n \n     StateNamespace namespace = new StateNamespaceForTest(\"foo\");\n@@ -331,11 +335,11 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testCommitWithClearedInUnderlying() {\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n-    CopyOnAccessInMemoryStateInternals<String>secondUnderlying =\n+    CopyOnAccessInMemoryStateInternals<String> secondUnderlying =\n         spy(CopyOnAccessInMemoryStateInternals.withUnderlying(key, underlying));\n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, secondUnderlying);\n \n     StateNamespace namespace = new StateNamespaceForTest(\"foo\");\n@@ -361,9 +365,9 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testCommitWithOverwrittenUnderlying() {\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, underlying);\n \n     StateNamespace namespace = new StateNamespaceForTest(\"foo\");\n@@ -392,9 +396,9 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testCommitWithAddedUnderlying() {\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, underlying);\n \n     internals.commit();\n@@ -416,7 +420,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testCommitWithEmptyTableIsEmpty() {\n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n \n     internals.commit();\n@@ -426,7 +430,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testCommitWithOnlyClearedValuesIsEmpty() {\n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n \n     StateNamespace namespace = new StateNamespaceForTest(\"foo\");\n@@ -444,9 +448,9 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testCommitWithEmptyNewAndFullUnderlyingIsNotEmpty() {\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, underlying);\n \n     StateNamespace namespace = new StateNamespaceForTest(\"foo\");\n@@ -475,7 +479,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n         return new Instant(689743L);\n       }\n     };\n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(\"foo\", null);\n \n     StateTag<WatermarkHoldState> firstHoldAddress =\n@@ -508,7 +512,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n         return new Instant(689743L);\n       }\n     };\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(\"foo\", null);\n     StateTag<WatermarkHoldState> firstHoldAddress =\n         StateTags.watermarkStateInternal(\"foo\", TimestampCombiner.EARLIEST);\n@@ -516,7 +520,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n         underlying.state(StateNamespaces.window(null, first), firstHoldAddress);\n     firstHold.add(new Instant(22L));\n \n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(\"foo\", underlying.commit());\n \n     StateTag<WatermarkHoldState> secondHoldAddress =\n@@ -545,7 +549,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n             return new Instant(689743L);\n           }\n         };\n-    CopyOnAccessInMemoryStateInternals<String>underlying =\n+    CopyOnAccessInMemoryStateInternals<String> underlying =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(\"foo\", null);\n     StateTag<WatermarkHoldState> firstHoldAddress =\n         StateTags.watermarkStateInternal(\"foo\", TimestampCombiner.EARLIEST);\n@@ -553,7 +557,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n         underlying.state(StateNamespaces.window(null, first), firstHoldAddress);\n     firstHold.add(new Instant(224L));\n \n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(\"foo\", underlying.commit());\n \n     StateTag<WatermarkHoldState> secondHoldAddress =\n@@ -568,7 +572,7 @@ public class CopyOnAccessInMemoryStateInternalsTest {\n \n   @Test\n   public void testGetEarliestHoldBeforeCommit() {\n-    CopyOnAccessInMemoryStateInternals<String>internals =\n+    CopyOnAccessInMemoryStateInternals<String> internals =\n         CopyOnAccessInMemoryStateInternals.withUnderlying(key, null);\n \n     internals\ndiff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/state/GroupingState.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/state/GroupingState.java\nindex 9c4c23e4cb..8f244d44d5 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/state/GroupingState.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/state/GroupingState.java\n@@ -33,10 +33,18 @@ import org.apache.beam.sdk.transforms.GroupByKey;\n  */\n @Experimental(Kind.STATE)\n public interface GroupingState<InputT, OutputT> extends ReadableState<OutputT>, State {\n-  /** Add a value to the buffer. */\n+  /**\n+   * Add a value to the buffer.\n+   *\n+   * <p>Elements added will not be reflected in {@code OutputT} objects returned by\n+   * previous calls to {@link #read}.\n+   */\n   void add(InputT value);\n \n-  /** Return true if this state is empty. */\n+  /**\n+   * Returns a {@link ReadableState} whose {@link #read} method will return true if this state is\n+   * empty at the point when that {@link #read} call returns.\n+   */\n   ReadableState<Boolean> isEmpty();\n \n   @Override\ndiff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/state/MapState.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/state/MapState.java\nindex 17ea33278c..8b89d7bda6 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/state/MapState.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/state/MapState.java\n@@ -33,7 +33,13 @@ import org.apache.beam.sdk.annotations.Experimental.Kind;\n @Experimental(Kind.STATE)\n public interface MapState<K, V> extends State {\n \n-  /** Associates the specified value with the specified key in this state. */\n+  /**\n+   * Associates the specified value with the specified key in this state.\n+   *\n+   * <p>Changes will not be reflected in the results returned by\n+   * previous calls to {@link ReadableState#read} on the results any of the reading methods\n+   * ({@link #get}, {@link #keys}, {@link #values}, and {@link #entries}).\n+   */\n   void put(K key, V value);\n \n   /**\n@@ -44,10 +50,20 @@ public interface MapState<K, V> extends State {\n    *\n    * <p>If the specified key is not already associated with a value (or is mapped to {@code null})\n    * associates it with the given value and returns {@code null}, else returns the current value.\n+   *\n+   * <p>Changes will not be reflected in the results returned by\n+   * previous calls to {@link ReadableState#read} on the results any of the reading methods\n+   * ({@link #get}, {@link #keys}, {@link #values}, and {@link #entries}).\n    */\n   ReadableState<V> putIfAbsent(K key, V value);\n \n-  /** Remove the mapping for a key from this map if it is present. */\n+  /**\n+   * Remove the mapping for a key from this map if it is present.\n+   *\n+   * <p>Changes will not be reflected in the results returned by\n+   * previous calls to {@link ReadableState#read} on the results any of the reading methods\n+   * ({@link #get}, {@link #keys}, {@link #values}, and {@link #entries}).\n+   */\n   void remove(K key);\n \n   /**\ndiff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/state/ReadableState.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/state/ReadableState.java\nindex 70703ce7ef..f2774bab6e 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/state/ReadableState.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/state/ReadableState.java\n@@ -36,6 +36,10 @@ public interface ReadableState<T> {\n    * <p>If there will be many calls to {@link #read} for different state in short succession, you\n    * should first call {@link #readLater} for all of them so the reads can potentially be batched\n    * (depending on the underlying implementation}.\n+   *\n+   * <p>The returned object should be independent of the underlying state.  Any direct modification\n+   * of the returned object should not modify state without going through the appropriate state\n+   * interface, and modification to the state should not be mirrored in the returned object.\n    */\n   T read();\n \ndiff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/state/SetState.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/state/SetState.java\nindex fd339b2778..d94c5c1752 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/state/SetState.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/state/SetState.java\n@@ -36,10 +36,18 @@ public interface SetState<T> extends GroupingState<T, Iterable<T>> {\n   /**\n    * Ensures a value is a member of the set, returning {@code true} if it was added and {@code\n    * false} otherwise.\n+   *\n+   * <p>Elements added will not be reflected in {@code OutputT} objects returned by\n+   * previous calls to {@link #read}.\n    */\n   ReadableState<Boolean> addIfAbsent(T t);\n \n-  /** Removes the specified element from this set if it is present. */\n+  /**\n+   * Removes the specified element from this set if it is present.\n+   *\n+   * <p>Changes will not be reflected in {@code OutputT} objects returned by\n+   * previous calls to {@link #read}.\n+   */\n   void remove(T t);\n \n   @Override\ndiff --git a/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java b/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java\nindex 142dff849f..03e310463f 100644\n--- a/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java\n+++ b/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java\n@@ -34,6 +34,7 @@ import static org.hamcrest.Matchers.not;\n import static org.hamcrest.collection.IsIterableContainingInAnyOrder.containsInAnyOrder;\n import static org.junit.Assert.assertArrayEquals;\n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertThat;\n \n import com.fasterxml.jackson.annotation.JsonCreator;\n@@ -52,6 +53,7 @@ import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n import java.util.Set;\n import org.apache.beam.sdk.coders.AtomicCoder;\n import org.apache.beam.sdk.coders.Coder;\n@@ -67,6 +69,7 @@ import org.apache.beam.sdk.options.PipelineOptions;\n import org.apache.beam.sdk.state.BagState;\n import org.apache.beam.sdk.state.CombiningState;\n import org.apache.beam.sdk.state.MapState;\n+import org.apache.beam.sdk.state.ReadableState;\n import org.apache.beam.sdk.state.SetState;\n import org.apache.beam.sdk.state.StateSpec;\n import org.apache.beam.sdk.state.StateSpecs;\n@@ -1983,9 +1986,16 @@ public class ParDoTest implements Serializable {\n           @ProcessElement\n           public void processElement(\n               ProcessContext c, @StateId(stateId) BagState<Integer> state) {\n-            Iterable<Integer> currentValue = state.read();\n+            ReadableState<Boolean> isEmpty = state.isEmpty();\n             state.add(c.element().getValue());\n-            if (Iterables.size(state.read()) >= 4) {\n+            assertFalse(isEmpty.read());\n+            Iterable<Integer> currentValue = state.read();\n+            if (Iterables.size(currentValue) >= 4) {\n+              // Make sure that the cached Iterable doesn't change when new elements are added.\n+              state.add(-1);\n+              assertEquals(4, Iterables.size(currentValue));\n+              assertEquals(5, Iterables.size(state.read()));\n+\n               List<Integer> sorted = Lists.newArrayList(currentValue);\n               Collections.sort(sorted);\n               c.output(sorted);\n@@ -2020,9 +2030,9 @@ public class ParDoTest implements Serializable {\n           @ProcessElement\n           public void processElement(\n               ProcessContext c, @StateId(stateId) BagState<MyInteger> state) {\n-            Iterable<MyInteger> currentValue = state.read();\n             state.add(new MyInteger(c.element().getValue()));\n-            if (Iterables.size(state.read()) >= 4) {\n+            Iterable<MyInteger> currentValue = state.read();\n+            if (Iterables.size(currentValue) >= 4) {\n               List<MyInteger> sorted = Lists.newArrayList(currentValue);\n               Collections.sort(sorted);\n               c.output(sorted);\n@@ -2058,9 +2068,9 @@ public class ParDoTest implements Serializable {\n           @ProcessElement\n           public void processElement(\n               ProcessContext c, @StateId(stateId) BagState<MyInteger> state) {\n-            Iterable<MyInteger> currentValue = state.read();\n             state.add(new MyInteger(c.element().getValue()));\n-            if (Iterables.size(state.read()) >= 4) {\n+            Iterable<MyInteger> currentValue = state.read();\n+            if (Iterables.size(currentValue) >= 4) {\n               List<MyInteger> sorted = Lists.newArrayList(currentValue);\n               Collections.sort(sorted);\n               c.output(sorted);\n@@ -2102,10 +2112,18 @@ public class ParDoTest implements Serializable {\n               @StateId(stateId) SetState<Integer> state,\n               @StateId(countStateId) CombiningState<Integer, int[], Integer>\n                   count) {\n+            ReadableState<Boolean> isEmpty = state.isEmpty();\n             state.add(c.element().getValue());\n+            assertFalse(isEmpty.read());\n             count.add(1);\n             if (count.read() >= 4) {\n-              Set<Integer> set = Sets.newHashSet(state.read());\n+              // Make sure that the cached Iterable doesn't change when new elements are added.\n+              Iterable<Integer> ints = state.read();\n+              state.add(-1);\n+              assertEquals(3, Iterables.size(ints));\n+              assertEquals(4, Iterables.size(state.read()));\n+\n+              Set<Integer> set = Sets.newHashSet(ints);\n               c.output(set);\n             }\n           }\n@@ -2231,10 +2249,18 @@ public class ParDoTest implements Serializable {\n               @StateId(countStateId) CombiningState<Integer, int[], Integer>\n                   count) {\n             KV<String, Integer> value = c.element().getValue();\n+            ReadableState<Iterable<Entry<String, Integer>>> entriesView = state.entries();\n             state.put(value.getKey(), value.getValue());\n             count.add(1);\n             if (count.read() >= 4) {\n               Iterable<Map.Entry<String, Integer>> iterate = state.entries().read();\n+              // Make sure that the cached Iterable doesn't change when new elements are added, but\n+              // that cached ReadableState views of the state do change.\n+              state.put(\"BadKey\", -1);\n+              assertEquals(3, Iterables.size(iterate));\n+              assertEquals(4, Iterables.size(entriesView.read()));\n+              assertEquals(4, Iterables.size(state.entries().read()));\n+\n               for (Map.Entry<String, Integer> entry : iterate) {\n                 c.output(KV.of(entry.getKey(), entry.getValue()));\n               }\n@@ -2525,9 +2551,9 @@ public class ParDoTest implements Serializable {\n           @ProcessElement\n           public void processElement(\n               ProcessContext c, @StateId(stateId) BagState<Integer> state) {\n-            Iterable<Integer> currentValue = state.read();\n             state.add(c.element().getValue());\n-            if (Iterables.size(state.read()) >= 4) {\n+            Iterable<Integer> currentValue = state.read();\n+            if (Iterables.size(currentValue) >= 4) {\n               List<Integer> sorted = Lists.newArrayList(currentValue);\n               Collections.sort(sorted);\n               c.output(sorted);",
    "Added sample for behavior on igoring Content - Type when HttpEntity is set": "diff --git a/sample/src/main/AndroidManifest.xml b/sample/src/main/AndroidManifest.xml\nindex f3380ba..7e6db4c 100755\n--- a/sample/src/main/AndroidManifest.xml\n+++ b/sample/src/main/AndroidManifest.xml\n@@ -40,6 +40,7 @@\n         <activity android:name=\".RangeResponseSample\"/>\n         <activity android:name=\".Http401AuthSample\"/>\n         <activity android:name=\".AsyncBackgroundThreadSample\"/>\n+        <activity android:name=\".ContentTypeForHttpEntitySample\"/>\n \n         <service android:name=\".services.ExampleIntentService\"/>\n     </application>\ndiff --git a/sample/src/main/java/com/loopj/android/http/sample/ContentTypeForHttpEntitySample.java b/sample/src/main/java/com/loopj/android/http/sample/ContentTypeForHttpEntitySample.java\nnew file mode 100644\nindex 0000000..193dd70\n--- /dev/null\n+++ b/sample/src/main/java/com/loopj/android/http/sample/ContentTypeForHttpEntitySample.java\n@@ -0,0 +1,72 @@\n+package com.loopj.android.http.sample;\n+\n+import android.util.Log;\n+\n+import com.loopj.android.http.AsyncHttpClient;\n+import com.loopj.android.http.RequestHandle;\n+import com.loopj.android.http.RequestParams;\n+import com.loopj.android.http.ResponseHandlerInterface;\n+import com.loopj.android.http.TextHttpResponseHandler;\n+\n+import org.apache.http.Header;\n+import org.apache.http.HttpEntity;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+public class ContentTypeForHttpEntitySample extends SampleParentActivity {\n+    private static final String LOG_TAG = \"ContentTypeForHttpEntitySample\";\n+\n+    @Override\n+    public ResponseHandlerInterface getResponseHandler() {\n+        return new TextHttpResponseHandler() {\n+            @Override\n+            public void onFailure(int statusCode, Header[] headers, String responseString, Throwable throwable) {\n+                debugHeaders(LOG_TAG, headers);\n+                debugStatusCode(LOG_TAG, statusCode);\n+                debugResponse(LOG_TAG, responseString);\n+                debugThrowable(LOG_TAG, throwable);\n+            }\n+\n+            @Override\n+            public void onSuccess(int statusCode, Header[] headers, String responseString) {\n+                debugHeaders(LOG_TAG, headers);\n+                debugStatusCode(LOG_TAG, statusCode);\n+                debugResponse(LOG_TAG, responseString);\n+            }\n+        };\n+    }\n+\n+    @Override\n+    public String getDefaultURL() {\n+        return \"http://httpbin.org/post\";\n+    }\n+\n+    @Override\n+    public boolean isRequestHeadersAllowed() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean isRequestBodyAllowed() {\n+        return false;\n+    }\n+\n+    @Override\n+    public int getSampleTitle() {\n+        return R.string.title_content_type_http_entity;\n+    }\n+\n+    @Override\n+    public RequestHandle executeSample(AsyncHttpClient client, String URL, Header[] headers, HttpEntity entity, ResponseHandlerInterface responseHandler) {\n+        RequestParams rParams = new RequestParams();\n+        rParams.put(\"sample_key\", \"Sample String\");\n+        try {\n+            File sample_file = File.createTempFile(\"temp_\", \"_handled\", getCacheDir());\n+            rParams.put(\"sample_file\", sample_file);\n+        } catch (IOException e) {\n+            Log.e(LOG_TAG, \"Cannot add sample file\", e);\n+        }\n+        return client.post(this, URL, headers, rParams, \"multipart/form-data\", responseHandler);\n+    }\n+}\ndiff --git a/sample/src/main/java/com/loopj/android/http/sample/WaypointsActivity.java b/sample/src/main/java/com/loopj/android/http/sample/WaypointsActivity.java\nindex 24b11a2..70b4982 100755\n--- a/sample/src/main/java/com/loopj/android/http/sample/WaypointsActivity.java\n+++ b/sample/src/main/java/com/loopj/android/http/sample/WaypointsActivity.java\n@@ -30,30 +30,31 @@ import java.util.List;\n \n public class WaypointsActivity extends ListActivity {\n \n-    private static final SampleConfig[] samplesConfig = new SampleConfig[] {\n-        new SampleConfig(R.string.title_get_sample, GetSample.class),\n-        new SampleConfig(R.string.title_post_sample, PostSample.class),\n-        new SampleConfig(R.string.title_delete_sample, DeleteSample.class),\n-        new SampleConfig(R.string.title_put_sample, PutSample.class),\n-        new SampleConfig(R.string.title_json_sample, JsonSample.class),\n-        new SampleConfig(R.string.title_json_streamer_sample, JsonStreamerSample.class),\n-        new SampleConfig(R.string.title_sax_example, SaxSample.class),\n-        new SampleConfig(R.string.title_file_sample, FileSample.class),\n-        new SampleConfig(R.string.title_binary_sample, BinarySample.class),\n-        new SampleConfig(R.string.title_gzip_sample, GzipSample.class),\n-        new SampleConfig(R.string.title_redirect_302, Redirect302Sample.class),\n-        new SampleConfig(R.string.title_threading_timeout, ThreadingTimeoutSample.class),\n-        new SampleConfig(R.string.title_cancel_all, CancelAllRequestsSample.class),\n-        new SampleConfig(R.string.title_cancel_handle, CancelRequestHandleSample.class),\n-        new SampleConfig(R.string.title_synchronous, SynchronousClientSample.class),\n-        new SampleConfig(R.string.title_intent_service_sample, IntentServiceSample.class),\n-        new SampleConfig(R.string.title_post_files, FilesSample.class),\n-        new SampleConfig(R.string.title_persistent_cookies, PersistentCookiesSample.class),\n-        new SampleConfig(R.string.title_custom_ca, CustomCASample.class),\n-        new SampleConfig(R.string.title_retry_handler, RetryRequestSample.class),\n-        new SampleConfig(R.string.title_range_sample, RangeResponseSample.class),\n-        new SampleConfig(R.string.title_401_unauth, Http401AuthSample.class),\n-        new SampleConfig(R.string.title_pre_post_processing, PrePostProcessingSample.class)\n+    private static final SampleConfig[] samplesConfig = new SampleConfig[]{\n+            new SampleConfig(R.string.title_get_sample, GetSample.class),\n+            new SampleConfig(R.string.title_post_sample, PostSample.class),\n+            new SampleConfig(R.string.title_delete_sample, DeleteSample.class),\n+            new SampleConfig(R.string.title_put_sample, PutSample.class),\n+            new SampleConfig(R.string.title_json_sample, JsonSample.class),\n+            new SampleConfig(R.string.title_json_streamer_sample, JsonStreamerSample.class),\n+            new SampleConfig(R.string.title_sax_example, SaxSample.class),\n+            new SampleConfig(R.string.title_file_sample, FileSample.class),\n+            new SampleConfig(R.string.title_binary_sample, BinarySample.class),\n+            new SampleConfig(R.string.title_gzip_sample, GzipSample.class),\n+            new SampleConfig(R.string.title_redirect_302, Redirect302Sample.class),\n+            new SampleConfig(R.string.title_threading_timeout, ThreadingTimeoutSample.class),\n+            new SampleConfig(R.string.title_cancel_all, CancelAllRequestsSample.class),\n+            new SampleConfig(R.string.title_cancel_handle, CancelRequestHandleSample.class),\n+            new SampleConfig(R.string.title_synchronous, SynchronousClientSample.class),\n+            new SampleConfig(R.string.title_intent_service_sample, IntentServiceSample.class),\n+            new SampleConfig(R.string.title_post_files, FilesSample.class),\n+            new SampleConfig(R.string.title_persistent_cookies, PersistentCookiesSample.class),\n+            new SampleConfig(R.string.title_custom_ca, CustomCASample.class),\n+            new SampleConfig(R.string.title_retry_handler, RetryRequestSample.class),\n+            new SampleConfig(R.string.title_range_sample, RangeResponseSample.class),\n+            new SampleConfig(R.string.title_401_unauth, Http401AuthSample.class),\n+            new SampleConfig(R.string.title_pre_post_processing, PrePostProcessingSample.class),\n+            new SampleConfig(R.string.title_content_type_http_entity, ContentTypeForHttpEntitySample.class)\n     };\n \n     @Override\n@@ -82,8 +83,8 @@ public class WaypointsActivity extends ListActivity {\n         final Class targetClass;\n \n         SampleConfig(int titleId, Class targetClass) {\n-          this.titleId = titleId;\n-          this.targetClass = targetClass;\n+            this.titleId = titleId;\n+            this.targetClass = targetClass;\n         }\n \n     }\ndiff --git a/sample/src/main/res/values/strings.xml b/sample/src/main/res/values/strings.xml\nindex 61c0f0b..3994a05 100755\n--- a/sample/src/main/res/values/strings.xml\n+++ b/sample/src/main/res/values/strings.xml\n@@ -37,4 +37,5 @@\n     <string name=\"title_401_unauth\">401 basic authentication</string>\n     <string name=\"title_pre_post_processing\">Pre-/Post-processing</string>\n     <string name=\"title_async_background_thread\">Async on background thread</string>\n+    <string name=\"title_content_type_http_entity\">Content-Type with HttpEntity</string>\n </resources>",
    "Added documentation for @ Delegate .": "diff --git a/buildScripts/website.ant.xml b/buildScripts/website.ant.xml\nindex d1eb92ec..aabc337c 100644\n--- a/buildScripts/website.ant.xml\n+++ b/buildScripts/website.ant.xml\n@@ -141,6 +141,9 @@ such as converting the changelog into HTML, and creating javadoc.\n \t\t<antcall target=\"-integrateSnippet\">\n \t\t\t<param name=\"transformationName\" value=\"val\" />\n \t\t</antcall>\n+\t\t<antcall target=\"-integrateSnippet\">\n+\t\t\t<param name=\"transformationName\" value=\"Delegate\" />\n+\t\t</antcall>\n \t</target>\n \t\n \t<target name=\"-website-dist\">\ndiff --git a/usage_examples/DelegateExample_post.jpage b/usage_examples/DelegateExample_post.jpage\nnew file mode 100644\nindex 00000000..28c1bbb7\n--- /dev/null\n+++ b/usage_examples/DelegateExample_post.jpage\n@@ -0,0 +1,98 @@\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import lombok.Delegate;\n+\n+public class DelegateExample {\n+\t\n+\tlong counter = 0L;\n+\t@Delegate\n+\tprivate final Collection<String> collection = new ArrayList<String>();\n+\t\n+\tpublic boolean add(String name) {\n+\t\tcounter++;\n+\t\treturn collection.add(name);\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic int size() {\n+\t\treturn this.collection.size();\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic boolean isEmpty() {\n+\t\treturn this.collection.isEmpty();\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic boolean contains(final java.lang.Object arg0) {\n+\t\treturn this.collection.contains(arg0);\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic java.util.Iterator<java.lang.String> iterator() {\n+\t\treturn this.collection.iterator();\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic java.lang.Object[] toArray() {\n+\t\treturn this.collection.toArray();\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic <T extends .java.lang.Object>T[] toArray(final T[] arg0) {\n+\t\treturn this.collection.<T>toArray(arg0);\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic boolean remove(final java.lang.Object arg0) {\n+\t\treturn this.collection.remove(arg0);\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic boolean containsAll(final java.util.Collection<?> arg0) {\n+\t\treturn this.collection.containsAll(arg0);\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic boolean addAll(final java.util.Collection<? extends java.lang.String> arg0) {\n+\t\treturn this.collection.addAll(arg0);\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic boolean removeAll(final java.util.Collection<?> arg0) {\n+\t\treturn this.collection.removeAll(arg0);\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic boolean retainAll(final java.util.Collection<?> arg0) {\n+\t\treturn this.collection.retainAll(arg0);\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic void clear() {\n+\t\tthis.collection.clear();\n+\t}\n+}\n+\n+class PartialDelegationExample {\n+\t\n+\t@Delegate({SimpleCollection.class})\n+\tprivate final Collection<String> collection = new ArrayList<String>();\n+\t\n+\tprivate interface SimpleCollection {\n+\t\t\n+\t\tboolean add(String item);\n+\t\t\n+\t\tboolean remove(Object item);\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic boolean add(final java.lang.String item) {\n+\t\treturn this.collection.add(item);\n+\t}\n+\t\n+\t@java.lang.SuppressWarnings(\"all\")\n+\tpublic boolean remove(final java.lang.Object item) {\n+\t\treturn this.collection.remove(item);\n+\t}\n+}\n\\ No newline at end of file\ndiff --git a/usage_examples/DelegateExample_pre.jpage b/usage_examples/DelegateExample_pre.jpage\nnew file mode 100644\nindex 00000000..b208c4ca\n--- /dev/null\n+++ b/usage_examples/DelegateExample_pre.jpage\n@@ -0,0 +1,27 @@\n+import java.util.ArrayList;\n+import java.util.Collection;\n+\n+import lombok.Delegate;\n+\n+\n+public class DelegateExample {\n+\tlong counter = 0L;\n+\t\n+\t@Delegate\n+\tprivate final Collection<String> collection = new ArrayList<String>();\n+\t\n+\tpublic boolean add(String name) {\n+\t\tcounter++;\n+\t\treturn collection.add(name);\n+\t}\n+}\n+\n+class PartialDelegationExample {\n+\t@Delegate({SimpleCollection.class})\n+\tprivate final Collection<String> collection = new ArrayList<String>();\n+\t\n+\tprivate interface SimpleCollection {\n+\t\tboolean add(String item);\n+\t\tboolean remove(Object item);\n+\t}\n+}\ndiff --git a/website/features/Delegate.html b/website/features/Delegate.html\nnew file mode 100644\nindex 00000000..bdb22c26\n--- /dev/null\n+++ b/website/features/Delegate.html\n@@ -0,0 +1,70 @@\n+<!DOCTYPE html>\n+<html><head>\n+\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n+\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../logi/reset.css\" />\n+\t<link rel=\"stylesheet\" type=\"text/css\" href=\"features.css\" />\n+\t<link rel=\"shortcut icon\" href=\"../favicon.ico\" type=\"image/x-icon\" />\n+\t<meta name=\"description\" content=\"Spice up your java\" />\n+\t<title>@Delegate</title>\n+</head><body><div id=\"pepper\">\n+\t<div class=\"minimumHeight\"></div>\n+\t<div class=\"meat\">\n+\t\t<div class=\"header\"><a href=\"../index.html\">Project Lombok</a></div>\n+\t\t<h1>@Delegate</h1>\n+\t\t<div class=\"byline\">Don't lose your composition</div>\n+\t\t<div class=\"overview\">\n+\t\t\t<h3>Overview</h3>\n+\t\t\t<p>\n+\t\t\t<em> NEW IN Lombok 0.10: </em> Any field can be annotated with <code>@Delegate</code> to let lombok generate delegate methods that forward the call \n+\t\t\tto this field. \n+\t\t\t</p>\n+\t\t\t<p>\n+\t\t\tLombok delegates all <code>public</code> methods of the field's type, as well as those of its supertype except for all methods declared \n+\t\t\tin <code>java.lang.Object</code>. You can provide a specific implementation for a method by providing you own implementation, lombok will not\n+\t\t\tgenerate delegate methods for those already declared in the class.\n+\t\t\t</p>\n+\t\t\t<p>\n+\t\t\tYou can pass any number of classes into the <code>@Delegate</code> annotation. If you do that, then lombok will delegate all <code>public</code>\n+\t\t\tmethods in those types (and their supertypes, except <code>java.lang.Object</code>) instead of looking at the field's type.\n+\t\t\t</p>\n+\t\t</div>\n+\t\t<div class=\"snippets\">\n+\t\t\t<div class=\"pre\">\n+\t\t\t\t<h3>With Lombok</h3>\n+\t\t\t\t<div class=\"snippet\">@HTML_PRE@</div>\n+\t\t\t</div>\n+\t\t\t<div class=\"sep\"></div>\n+\t\t\t<div class=\"post\">\n+\t\t\t\t<h3>Vanilla Java</h3>\n+\t\t\t\t<div class=\"snippet\">@HTML_POST@</div>\n+\t\t\t</div>\n+\t\t</div>\n+\t\t<div style=\"clear: left;\"></div>\n+\t\t<div class=\"overview\">\n+\t\t\t<h3>Small print</h3><div class=\"smallprint\">\n+\t\t\t<p>\n+\t\t\tWhen passing classes to the annotation, these cannot contain generics. This is a limitation of java that lombok cannot work around.\n+\t\t\t</p>\n+\t\t\t<p>\n+\t\t\tWhen passing classes to the annotation, these classes do not need to be supertypes of the field. See the example.\n+\t\t\t</p>\n+\t\t\t<div>\t\n+\t\t</div>\n+\t\t<div class=\"footer\">\n+\t\t\t<a href=\"index.html\">Back to features</a> | <a href=\"val.html\">Previous feature (val)</a> | <span class=\"disabled\">Next feature</span><br />\n+\t\t\t<a href=\"../credits.html\" class=\"creditsLink\">credits</a> | <span class=\"copyright\">Copyright &copy; 2010-2011 Reinier Zwitserloot, Roel Spilker and Robbert Jan Grootjans, licensed under the <a href=\"http://www.opensource.org/licenses/mit-license.php\">MIT license</a>.</span>\n+\t\t</div>\n+\t\t<div style=\"clear: both;\"></div>\n+\t</div>\n+</div>\n+<script type=\"text/javascript\">\n+\tvar gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://www.\");\n+\tdocument.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n+</script>\n+<script type=\"text/javascript\">\n+\ttry {\n+\t\tvar pageTracker = _gat._getTracker(\"UA-9884254-1\");\n+\t\tpageTracker._trackPageview();\n+\t} catch(err) {}\n+</script>\n+</body></html>\ndiff --git a/website/features/index.html b/website/features/index.html\nindex edc173fb..06b6763e 100644\n--- a/website/features/index.html\n+++ b/website/features/index.html\n@@ -36,6 +36,8 @@\n \t\t\t\t<dd>Captain's Log, stardate 24435.7: &quot;What was that line again?&quot;</dd>\n \t\t\t\t<dt><a href=\"val.html\"><code>val</code></a></dt>\n \t\t\t\t<dd>Finally! hassle-free final local variables.</dd>\n+\t\t\t\t<dt><a href=\"Delegate.html\"><code>@Delegate</code></a></dt>\n+\t\t\t\t<dd>Don't lose your composition</dd>\n \t\t\t</dl>\n \t\t</div>\n \t\t<div class=\"pointer\">\ndiff --git a/website/features/val.html b/website/features/val.html\nindex 4e05f8ca..f3e86447 100644\n--- a/website/features/val.html\n+++ b/website/features/val.html\n@@ -50,8 +50,8 @@\n \t\t\t</div>\n \t\t</div>\n \t\t<div class=\"footer\">\n-\t\t\t<a href=\"index.html\">Back to features</a> | <a href=\"Log.html\">Previous feature (@Log)</a> | <span class=\"disabled\">Next feature</span><br />\n-\t\t\t<a href=\"../credits.html\" class=\"creditsLink\">credits</a> | <span class=\"copyright\">Copyright &copy; 2010 Reinier Zwitserloot and Roel Spilker, licensed under the <a href=\"http://www.opensource.org/licenses/mit-license.php\">MIT license</a>.</span>\n+\t\t\t<a href=\"index.html\">Back to features</a> | <a href=\"Log.html\">Previous feature (@Log)</a> | <a href=\"Delegate.html\">Next feature (@Delegate)</a><br />\n+\t\t\t<a href=\"../credits.html\" class=\"creditsLink\">credits</a> | <span class=\"copyright\">Copyright &copy; 2010-2011 Reinier Zwitserloot and Roel Spilker, licensed under the <a href=\"http://www.opensource.org/licenses/mit-license.php\">MIT license</a>.</span>\n \t\t</div>\n \t\t<div style=\"clear: both;\"></div>\n \t</div>",
    "Instantiate a ModifiedFocusNode2 corresponding to a Modifier . focus ( ) modifier .": "diff --git a/ui/ui-core/src/commonMain/kotlin/androidx/ui/core/LayoutNode.kt b/ui/ui-core/src/commonMain/kotlin/androidx/ui/core/LayoutNode.kt\nindex 62e6b9cc1c0..634c3733e56 100644\n--- a/ui/ui-core/src/commonMain/kotlin/androidx/ui/core/LayoutNode.kt\n+++ b/ui/ui-core/src/commonMain/kotlin/androidx/ui/core/LayoutNode.kt\n@@ -22,8 +22,10 @@ import androidx.ui.core.LayoutNode.LayoutState.NeedsRelayout\n import androidx.ui.core.LayoutNode.LayoutState.NeedsRemeasure\n import androidx.ui.core.LayoutNode.LayoutState.Ready\n import androidx.ui.core.focus.FocusModifier\n+import androidx.ui.core.focus.FocusModifier2\n import androidx.ui.core.focus.FocusModifierImpl\n import androidx.ui.core.focus.ModifiedFocusNode\n+import androidx.ui.core.focus.ModifiedFocusNode2\n import androidx.ui.core.keyinput.KeyInputModifier\n import androidx.ui.core.keyinput.ModifiedKeyInputNode\n import androidx.ui.core.pointerinput.PointerInputFilter\n@@ -554,6 +556,9 @@ class LayoutNode : Measurable {\n                         wrapper = ModifiedFocusNode(wrapper, mod).also { mod.focusNode = it }\n                             .assignChained(toWrap)\n                     }\n+                    if (mod is FocusModifier2) {\n+                        wrapper = ModifiedFocusNode2(wrapper, mod).assignChained(toWrap)\n+                    }\n                     if (mod is KeyInputModifier) {\n                         wrapper = ModifiedKeyInputNode(wrapper, mod).also { mod.keyInputNode = it }\n                             .assignChained(toWrap)\n@@ -1041,7 +1046,7 @@ class LayoutNode : Measurable {\n                     constraints: Constraints,\n ",
    "Simplify pre - 8 java profile .": "diff --git a/pom.xml b/pom.xml\nindex dd7b7bb799..deb258bdd4 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -1373,9 +1373,9 @@\n       </build>\n     </profile>\n     <profile>\n-      <id>jdk-pre-8</id>\n+      <id>jdk7</id>\n       <activation>\n-        <jdk>[1.6,1.8)</jdk>\n+        <jdk>1.7</jdk>\n       </activation>\n       <build>\n         <plugins>",
    "implemented ArtifactLinksGet , classes already existed but only returned dummy content before": "diff --git a/activiti-cycle/src/main/java/org/activiti/cycle/CycleService.java b/activiti-cycle/src/main/java/org/activiti/cycle/CycleService.java\nindex f0f102a3c3..bba75a904b 100644\n--- a/activiti-cycle/src/main/java/org/activiti/cycle/CycleService.java\n+++ b/activiti-cycle/src/main/java/org/activiti/cycle/CycleService.java\n@@ -106,9 +106,8 @@ public interface CycleService {\n \r\n   public void addArtifactLink(RepositoryArtifactLink link);\r\n \r\n-  public List<RepositoryArtifactLink> getArtifactLinks(String sourceArtifactId);\r\n   public List<RepositoryArtifactLink> getArtifactLinks(String sourceArtifactId, Long sourceRevision);\r\n-  public List<RepositoryArtifactLink> getArtifactLinks(String sourceArtifactId, String type);\r\n+  public List<RepositoryArtifactLink> getArtifactLinks(String sourceConnectorId, String sourceArtifactId);\r\n   public List<RepositoryArtifactLink> getArtifactLinks(String sourceArtifactId, Long sourceRevision, String type);\r\n \r\n   public void deleteLink(long linkId);\r\ndiff --git a/activiti-cycle/src/main/java/org/activiti/cycle/impl/CycleServiceImpl.java b/activiti-cycle/src/main/java/org/activiti/cycle/impl/CycleServiceImpl.java\nindex 6764491e05..38947fa349 100644\n--- a/activiti-cycle/src/main/java/org/activiti/cycle/impl/CycleServiceImpl.java\n+++ b/activiti-cycle/src/main/java/org/activiti/cycle/impl/CycleServiceImpl.java\n@@ -290,10 +290,6 @@ public class CycleServiceImpl implements CycleService {\n     // TODO: implement\r\n     throw new RuntimeException(\"Not implemented yet\");\r\n   }\r\n-  public List<RepositoryArtifactLink> getArtifactLinks(String sourceArtifactId) {\r\n-    // TODO: implement\r\n-    throw new RuntimeException(\"Not implemented yet\");\r\n-  }\r\n \r\n   public List<RepositoryArtifactLink> getArtifactLinks(String sourceArtifactId, Long sourceRevision) {\r\n     // TODO: implement\r\ndiff --git a/activiti-webapp-rest/src/main/java/org/activiti/rest/api/cycle/ArtifactLinksGet.java b/activiti-webapp-rest/src/main/java/org/activiti/rest/api/cycle/ArtifactLinksGet.java\nindex 0a840c7ab0..81a2a241aa 100644\n--- a/activiti-webapp-rest/src/main/java/org/activiti/rest/api/cycle/ArtifactLinksGet.java\n+++ b/activiti-webapp-rest/src/main/java/org/activiti/rest/api/cycle/ArtifactLinksGet.java\n@@ -1,10 +1,12 @@\n package org.activiti.rest.api.cycle;\n \n+import java.util.List;\n import java.util.Map;\n \n import javax.servlet.http.HttpSession;\n \n import org.activiti.cycle.CycleService;\n+import org.activiti.cycle.RepositoryArtifactLink;\n import org.activiti.cycle.impl.CycleServiceImpl;\n import org.activiti.rest.util.ActivitiRequest;\n import org.activiti.rest.util.ActivitiWebScript;\n@@ -26,12 +28,12 @@ public class ArtifactLinksGet extends ActivitiWebScript {\n   protected void executeWebScript(ActivitiRequest req, Status status, Cache cache, Map<String, Object> model) {\n     init(req);\n \n+    String connectorId = req.getMandatoryString(\"connectorId\");\n     String artifactId = req.getString(\"artifactId\");\n-    String restProxyUri = req.getString(\"restProxyUri\");\n \n-    \n-//    List<Artifact> link = this.cycleService.getArtifactLinks(artifactId);\n-    \n+    List<RepositoryArtifactLink> links = this.cycleService.getArtifactLinks(connectorId, artifactId);\n+\n+    model.put(\"links\", links);\n   }\n \n }\ndiff --git a/activiti-webapp-rest/src/main/resources/webscripts/org/activiti/rest/api/cycle/artifact-links.get.desc.xml b/activiti-webapp-rest/src/main/resources/webscripts/org/activiti/rest/api/cycle/artifact-links.get.desc.xml\nindex 5aee685f18..a8989d2901 100644\n--- a/activiti-webapp-rest/src/main/resources/webscripts/org/activiti/rest/api/cycle/artifact-links.get.desc.xml\n+++ b/activiti-webapp-rest/src/main/resources/webscripts/org/activiti/rest/api/cycle/artifact-links.get.desc.xml\n@@ -1,7 +1,7 @@\n <webscript>\n   <shortname>Artifact Links</shortname>\n   <description>Returns a json string that represents the linked artifacts for a given artifact</description>\n-  <url>/artifact-links</url>\n+  <url>/artifact-links?connectorId={connectorId}&amp;artifactId={artifactId}</url>\n   <authentication>user</authentication>\n   <format default=\"json\">argument</format>\n </webscript>\n\\ No newline at end of file\ndiff --git a/activiti-webapp-rest/src/main/resources/webscripts/org/activiti/rest/api/cycle/artifact-links.get.json.ftl b/activiti-webapp-rest/src/main/resources/webscripts/org/activiti/rest/api/cycle/artifact-links.get.json.ftl\nindex 55122c849b..99421df11e 100644\n--- a/activiti-webapp-rest/src/main/resources/webscripts/org/activiti/rest/api/cycle/artifact-links.get.json.ftl\n+++ b/activiti-webapp-rest/src/main/resources/webscripts/org/activiti/rest/api/cycle/artifact-links.get.json.ftl\n@@ -1,28 +1,19 @@\n+<#escape x as jsonUtils.encodeJSONString(x)>\n+[<#list links as link><@printLink link/><#if link_has_next>,</#if></#list>]\n+</#escape>\n+\n+<#macro printLink link>\n {\n-    \"list\": {\n-        \"org.activiti.rest.api.cycle.dto.ArtifactLinkDto\": [\n-            {\n-                \"targetId\": \"targetId\",\n-                \"targetRevision\": \"targetRevision\",\n-                \"targetElementId\": \"targetElementId\",\n-                \"linkType\": \"linkType\",\n-                \"targetUrl\": \"http:\\/\\/www.showhttprequest.com\\/?targetUrl=true&artifact=0\",\n-                \"description\": \"This is a description for Artifact Link No 0\",\n-                \"contentType\": \"application/msword\",\n-                \"previewUrl\": \"http:\\/\\/www.showhttprequest.com\\/?previewUrl=ture&artifact=0\",\n-                \"label\": \"Artifact Link No 0\"\n-            },\n-            {\n-                \"targetId\": \"targetId\",\n-                \"targetRevision\": \"targetRevision\",\n-                \"targetElementId\": \"targetElementId\",\n-                \"linkType\": \"linkType\",\n-                \"targetUrl\": \"http:\\/\\/www.showhttprequest.com\\/?targetUrl=true&artifact=1\",\n-                \"description\": \"This is a description for Artifact Link No 1\",\n-                \"contentType\": \"application/msword\",\n-                \"previewUrl\": \"http:\\/\\/www.showhttprequest.com\\/?previewUrl=ture&artifact=1\",\n-                \"label\": \"Artifact Link No 1\"\n-            }\n-        ]\n-    }\n-} \n\\ No newline at end of file\n+  <@printArtifact link.targetArtifact/>,\n+  \"targetElementId\": \"${link.targetElementId}\",\n+  \"targetElementName\": \"${link.targetElementName}\"\n+}\n+</#macro>\n+\n+<#macro printArtifact artifact>\n+\t\"targetConnectorId\": \"${artifact.connectorId}\",\n+  \t\"targetArtifactId\": \"${artifact.originalNodeId}\",\n+\t\"targetArtifactRevision\": \"${artifact.artifactType.revision}\",\n+\t\"targetContentType\": \"${artifact.artifactType.mimeType.contentType}\",\n+\t\"label\": \"${artifact.metadata.name}\"\n+</#macro>\ndiff --git a/activiti-webapp-rest/src/main/webapp/WEB-INF/web-application-context.xml b/activiti-webapp-rest/src/main/webapp/WEB-INF/web-application-context.xml\nindex e23298e48e..fa44494f42 100644\n--- a/activiti-webapp-rest/src/main/webapp/WEB-INF/web-application-context.xml\n+++ b/activiti-webapp-rest/src/main/webapp/WEB-INF/web-application-context.xml\n@@ -210,5 +210,10 @@\n         class=\"org.activiti.rest.api.cycle.ContentRepresentationGet\"\n         parent=\"activitiWebScript\">\n   </bean>\n+  \n+  <bean id=\"webscript.org.activiti.rest.api.cycle.artifact-links.get\"\n+        class=\"org.activiti.rest.api.cycle.ArtifactLinksGet\"\n+        parent=\"activitiWebScript\">\n+  </bean>\n \n </beans>\n\\ No newline at end of file",
    "Introduce LifecycleRegistryProvider .": "diff --git a/lifecycle/runtime/src/main/java/com/android/support/lifecycle/FragmentLifecycleDispatcher.java b/lifecycle/runtime/src/main/java/com/android/support/lifecycle/FragmentLifecycleDispatcher.java\nindex bdb41977fe6..edb8b2b7707 100644\n--- a/lifecycle/runtime/src/main/java/com/android/support/lifecycle/FragmentLifecycleDispatcher.java\n+++ b/lifecycle/runtime/src/main/java/com/android/support/lifecycle/FragmentLifecycleDispatcher.java\n@@ -119,8 +119,8 @@ class FragmentLifecycleDispatcher {\n \n         private void dispatchIfLifecycleFragment(Fragment fragment,\n                 @Lifecycle.Event int event) {\n-            if (fragment instanceof LifecycleFragment) {\n-                ((LifecycleFragment) fragment).mLifecycleRegistry.handleLifecycleEvent(event);\n+            if (fragment instanceof LifecycleRegistryProvider) {\n+                ((LifecycleRegistryProvider) fragment).getLifecycle().handleLifecycleEvent(event);\n             }\n         }\n     }\ndiff --git a/lifecycle/runtime/src/main/java/com/android/support/lifecycle/LifecycleFragment.java b/lifecycle/runtime/src/main/java/com/android/support/lifecycle/LifecycleFragment.java\nindex 90ca0c91c80..cc97034b716 100644\n--- a/lifecycle/runtime/src/main/java/com/android/support/lifecycle/LifecycleFragment.java\n+++ b/lifecycle/runtime/src/main/java/com/android/support/lifecycle/LifecycleFragment.java\n@@ -22,11 +22,11 @@ import android.support.v4.app.Fragment;\n  * A fragment that is also a {@link LifecycleProvider}.\n  */\n // This class will be removed once we integrate with Fragment library.\n-public class LifecycleFragment extends Fragment implements LifecycleProvider {\n+public class LifecycleFragment extends Fragment implements LifecycleRegistryProvider {\n     LifecycleRegistry mLifecycleRegistry = new LifecycleRegistry(this);\n \n     @Override\n-    public Lifecycle getLifecycle() {\n+    public LifecycleRegistry getLifecycle() {\n         return mLifecycleRegistry;\n     }\n }\ndiff --git a/lifecycle/runtime/src/main/java/com/android/support/lifecycle/LifecycleRegistryProvider.java b/lifecycle/runtime/src/main/java/com/android/support/lifecycle/LifecycleRegistryProvider.java\nnew file mode 100644\nindex 00000000000..2006462e7b1\n--- /dev/null\n+++ b/lifecycle/runtime/src/main/java/com/android/support/lifecycle/LifecycleRegistryProvider.java\n@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (C) 2016 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.android.support.lifecycle;\n+\n+/**\n+ * Specialization of {@link LifecycleProvider} that explicitly returns {@link LifecycleRegistry}\n+ * This method may be used if an object which updates state of {@link Lifecycle} doesn't own it.\n+ */\n+@SuppressWarnings({\"WeakerAccess\", \"unused\"})\n+public interface LifecycleRegistryProvider extends LifecycleProvider {\n+    @Override\n+    LifecycleRegistry getLifecycle();\n+}",
    "Add MemoryLocation concept which holds var addrs .": "diff --git a/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/ConnectorVarLocation.java b/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/ConnectorVarLocation.java\nnew file mode 100644\nindex 00000000000..bbb309f7d85\n--- /dev/null\n+++ b/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/ConnectorVarLocation.java\n@@ -0,0 +1,41 @@\n+/*\n+*  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+*  Unless required by applicable law or agreed to in writing,\n+*  software distributed under the License is distributed on an\n+*  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+*  KIND, either express or implied.  See the License for the\n+*  specific language governing permissions and limitations\n+*  under the License.\n+*/\n+package org.wso2.ballerina.core.interpreter;\n+\n+import org.wso2.ballerina.core.model.Node;\n+import org.wso2.ballerina.core.model.NodeExecutor;\n+import org.wso2.ballerina.core.model.NodeVisitor;\n+import org.wso2.ballerina.core.model.values.BValue;\n+\n+/**\n+ * {@code ConnectorVarLocation} represents a location where a variable declared in a\n+ * {@link org.wso2.ballerina.core.model.Connector }  is stored at runtime\n+ *\n+ * @since 1.0.0\n+ */\n+public class ConnectorVarLocation extends MemoryLocation implements Node {\n+    @Override\n+    public void accept(NodeVisitor visitor) {\n+        visitor.visit(this);\n+    }\n+\n+    @Override\n+    public BValue execute(NodeExecutor executor) {\n+        return executor.visit(this);\n+    }\n+}\ndiff --git a/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/ConstantLocation.java b/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/ConstantLocation.java\nnew file mode 100644\nindex 00000000000..4e7f7066b55\n--- /dev/null\n+++ b/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/ConstantLocation.java\n@@ -0,0 +1,50 @@\n+/*\n+*  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+*  Unless required by applicable law or agreed to in writing,\n+*  software distributed under the License is distributed on an\n+*  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+*  KIND, either express or implied.  See the License for the\n+*  specific language governing permissions and limitations\n+*  under the License.\n+*/\n+package org.wso2.ballerina.core.interpreter;\n+\n+import org.wso2.ballerina.core.model.Node;\n+import org.wso2.ballerina.core.model.NodeExecutor;\n+import org.wso2.ballerina.core.model.NodeVisitor;\n+import org.wso2.ballerina.core.model.values.BValue;\n+\n+/**\n+ * {@code ConstantLocation} represents a location where a constant is stored at runtime\n+ *\n+ * @since 1.0.0\n+ */\n+public class ConstantLocation extends MemoryLocation implements Node {\n+    private int staticMemAddrOffset;\n+\n+    public ConstantLocation(int staticMemAddrOffset) {\n+        this.staticMemAddrOffset = staticMemAddrOffset;\n+    }\n+\n+    public int getStaticMemAddrOffset() {\n+        return staticMemAddrOffset;\n+    }\n+\n+    @Override\n+    public void accept(NodeVisitor visitor) {\n+        visitor.visit(this);\n+    }\n+\n+    @Override\n+    public BValue execute(NodeExecutor executor) {\n+        return executor.visit(this);\n+    }\n+}\ndiff --git a/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/LocalVarLocation.java b/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/LocalVarLocation.java\nnew file mode 100644\nindex 00000000000..eb273eaa394\n--- /dev/null\n+++ b/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/LocalVarLocation.java\n@@ -0,0 +1,50 @@\n+/*\n+*  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+*  Unless required by applicable law or agreed to in writing,\n+*  software distributed under the License is distributed on an\n+*  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+*  KIND, either express or implied.  See the License for the\n+*  specific language governing permissions and limitations\n+*  under the License.\n+*/\n+package org.wso2.ballerina.core.interpreter;\n+\n+import org.wso2.ballerina.core.model.Node;\n+import org.wso2.ballerina.core.model.NodeExecutor;\n+import org.wso2.ballerina.core.model.NodeVisitor;\n+import org.wso2.ballerina.core.model.values.BValue;\n+\n+/**\n+ * {@code LocalVarLocation} represents a location of a local variable stored in the stack frame\n+ *\n+ * @since 1.0.0\n+ */\n+public class LocalVarLocation extends MemoryLocation implements Node {\n+    private int stackFrameOffset;\n+\n+    public LocalVarLocation(int stackFrameOffset) {\n+        this.stackFrameOffset = stackFrameOffset;\n+    }\n+\n+    public int getStackFrameOffset() {\n+        return stackFrameOffset;\n+    }\n+\n+    @Override\n+    public void accept(NodeVisitor visitor) {\n+        visitor.visit(this);\n+    }\n+\n+    @Override\n+    public BValue execute(NodeExecutor executor) {\n+        return executor.visit(this);\n+    }\n+}\ndiff --git a/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/MemoryLocation.java b/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/MemoryLocation.java\nnew file mode 100644\nindex 00000000000..630bd54b3c9\n--- /dev/null\n+++ b/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/MemoryLocation.java\n@@ -0,0 +1,43 @@\n+/*\n+*  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+*  Unless required by applicable law or agreed to in writing,\n+*  software distributed under the License is distributed on an\n+*  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+*  KIND, either express or implied.  See the License for the\n+*  specific language governing permissions and limitations\n+*  under the License.\n+*/\n+package org.wso2.ballerina.core.interpreter;\n+\n+import org.wso2.ballerina.core.model.ExecutableExpr;\n+import org.wso2.ballerina.core.model.Node;\n+import org.wso2.ballerina.core.model.NodeExecutor;\n+import org.wso2.ballerina.core.model.NodeVisitor;\n+import org.wso2.ballerina.core.model.values.BValue;\n+\n+/**\n+ * {@code MemoryLocation} represents a location where a variable or constant is stored at runtime\n+ *\n+ * @since 1.0.0\n+ */\n+public class MemoryLocation implements Node, ExecutableExpr {\n+\n+    @Override\n+    public void accept(NodeVisitor visitor) {\n+\n+    }\n+\n+    @Override\n+    public BValue execute(NodeExecutor executor) {\n+        return null;\n+    }\n+\n+}\ndiff --git a/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/ServiceVarLocation.java b/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/ServiceVarLocation.java\nnew file mode 100644\nindex 00000000000..ca768045b10\n--- /dev/null\n+++ b/modules/ballerina-core/src/main/java/org/wso2/ballerina/core/interpreter/ServiceVarLocation.java\n@@ -0,0 +1,41 @@\n+/*\n+*  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+*  Unless required by applicable law or agreed to in writing,\n+*  software distributed under the License is distributed on an\n+*  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+*  KIND, either express or implied.  See the License for the\n+*  specific language governing permissions and limitations\n+*  under the License.\n+*/\n+package org.wso2.ballerina.core.interpreter;\n+\n+import org.wso2.ballerina.core.model.Node;\n+import org.wso2.ballerina.core.model.NodeExecutor;\n+import org.wso2.ballerina.core.model.NodeVisitor;\n+import org.wso2.ballerina.core.model.values.BValue;\n+\n+/**\n+ * {@code ServiceVarLocation} represents a location where a variable declared in a\n+ * {@link org.wso2.ballerina.core.model.Service }  is stored at runtime\n+ *\n+ * @since 1.0.0\n+ */\n+public class ServiceVarLocation extends MemoryLocation implements Node {\n+    @Override\n+    public void accept(NodeVisitor visitor) {\n+        visitor.visit(this);\n+    }\n+\n+    @Override\n+    public BValue execute(NodeExecutor executor) {\n+        return executor.visit(this);\n+    }\n+}",
    "Updated docs": "diff --git a/cas-server-documentation/installation/Configuring-Authentication-Components.md b/cas-server-documentation/installation/Configuring-Authentication-Components.md\nindex 2f60426536..5a45c87181 100644\n--- a/cas-server-documentation/installation/Configuring-Authentication-Components.md\n+++ b/cas-server-documentation/installation/Configuring-Authentication-Components.md\n@@ -7,7 +7,6 @@ title: CAS - Configuring Authentication Components\n \n The CAS authentication process is primarily controlled by an authentication manager, which orchestrates a collection of authentication handlers.\n \n-\n ## Authentication Manager\n CAS ships with a single yet flexible authentication manager which performs authentication according to the following contract.\n \n@@ -33,9 +32,10 @@ To see the relevant list of CAS properties, please [review this guide](Configura\n \n There are a variety of authentication handlers and schemes supported by CAS. Use the menu to navigate around the site and choose. \n \n-<div class=\"alert alert-info\"><strong>Default Credentials</strong><p>To test the default authentication scheme in CAS,\n-use <strong>casuser</strong> and <strong>Mellon</strong> as the username and password respectively.</p></div>\n-\n+<div class=\"alert alert-warning\"><strong>Default Credentials</strong><p>To test the default authentication scheme in CAS,\n+use <strong>casuser</strong> and <strong>Mellon</strong> as the username and password respectively. These are automatically\n+configured via the static authencation handler, and <strong>MUST</strong> be removed from the configuration \n+prior to production rollouts.</p></div>\n \n ## Principal Resolution\n Please [see this guide](Configuring-Principal-Resolution.html) more full details on principal resolution.",
    "move new failing test under ` failing ` until problem fixed": "diff --git a/src/test/java/com/fasterxml/jackson/databind/jsontype/ext/ExternalTypeIdWithEnum1328Test.java b/src/test/java/com/fasterxml/jackson/failing/ExternalTypeIdWithEnum1328Test.java\nsimilarity index 98%\nrename from src/test/java/com/fasterxml/jackson/databind/jsontype/ext/ExternalTypeIdWithEnum1328Test.java\nrename to src/test/java/com/fasterxml/jackson/failing/ExternalTypeIdWithEnum1328Test.java\nindex 0ce3a6595..1a1ec47f5 100644\n--- a/src/test/java/com/fasterxml/jackson/databind/jsontype/ext/ExternalTypeIdWithEnum1328Test.java\n+++ b/src/test/java/com/fasterxml/jackson/failing/ExternalTypeIdWithEnum1328Test.java\n@@ -1,4 +1,4 @@\n-package com.fasterxml.jackson.databind.jsontype.ext;\n+package com.fasterxml.jackson.failing;\n \n import java.io.IOException;\n import java.util.Arrays;",
    "updated ents to 1 . 1 . 2 , closes <issue_id> , <issue_id>": "diff --git a/pom.xml b/pom.xml\nindex 49bb7234a..f75d87e52 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -67,7 +67,7 @@\n         <jfxtras.version>8.0-r4</jfxtras.version>\n         <controlsfx.version>8.40.12</controlsfx.version>\n         <fxeventbus.version>1.0</fxeventbus.version>\n-        <ents.version>1.1.1</ents.version>\n+        <ents.version>1.1.2</ents.version>\n         <game.utils.version>0.0.3</game.utils.version>\n         <jbox.version>2.3.2-fxgl</jbox.version>\n         <astar.version>1.0</astar.version>",
    "Add settings for Android Studio": "diff --git a/GoogleWrapperSample/GoogleWrapperSample.iml b/GoogleWrapperSample/GoogleWrapperSample.iml\nnew file mode 100644\nindex 000000000..7c31f30b8\n--- /dev/null\n+++ b/GoogleWrapperSample/GoogleWrapperSample.iml\n@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n+  <component name=\"FacetManager\">\r\n+    <facet type=\"android\" name=\"Android\">\r\n+      <configuration>\r\n+        <notImportedProperties>\r\n+          <property>MANIFEST_FILE_PATH</property>\r\n+          <property>RESOURCES_DIR_PATH</property>\r\n+          <property>ASSETS_DIR_PATH</property>\r\n+          <property>NATIVE_LIBS_DIR_PATH</property>\r\n+        </notImportedProperties>\r\n+      </configuration>\r\n+    </facet>\r\n+  </component>\r\n+  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_6\" inherit-compiler-output=\"false\">\r\n+    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n+    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n+    <content url=\"file://$MODULE_DIR$\">\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/gen\" isTestSource=\"false\" />\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/target/generated-sources/r\" isTestSource=\"false\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target/classes\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target/generated-sources/combined-assets\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target/generated-sources/combined-resources\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target/generated-sources/extracted-dependencies\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target/maven-archiver\" />\r\n+    </content>\r\n+    <orderEntry type=\"jdk\" jdkName=\"Maven Android 4.1.2 Platform\" jdkType=\"Android SDK\" />\r\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n+    <orderEntry type=\"library\" name=\"osmdroid-android-3.0.11-SNAPSHOT\" level=\"project\" />\r\n+    <orderEntry type=\"module\" module-name=\"osmdroid-android-test\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.android:android:4.1.1.4\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: commons-logging:commons-logging:1.1.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpclient:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpcore:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: commons-codec:commons-codec:1.3\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.khronos:opengl-api:gl1.1-android-2.1_r1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: xerces:xmlParserAPIs:2.6.2\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: xpp3:xpp3:1.1.4c\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.json:json:20070829\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.android.maps:maps:16_r3\" level=\"project\" />\r\n+    <orderEntry type=\"library\" name=\"Maven: org.slf4j:slf4j-android:1.6.1-RC1\" level=\"project\" />\r\n+  </component>\r\n+</module>\r\n+\r\ndiff --git a/OSMMapTilePackager/OSMMapTilePackager.iml b/OSMMapTilePackager/OSMMapTilePackager.iml\nnew file mode 100644\nindex 000000000..bbfb04cb0\n--- /dev/null\n+++ b/OSMMapTilePackager/OSMMapTilePackager.iml\n@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n+  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_6\" inherit-compiler-output=\"false\">\r\n+    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n+    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n+    <content url=\"file://$MODULE_DIR$\">\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n+    </content>\r\n+    <orderEntry type=\"inheritedJdk\" />\r\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n+    <orderEntry type=\"library\" name=\"osmdroid-android-3.0.11-SNAPSHOT\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.android:android:4.1.1.4\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: commons-logging:commons-logging:1.1.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpclient:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpcore:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: commons-codec:commons-codec:1.3\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.khronos:opengl-api:gl1.1-android-2.1_r1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: xerces:xmlParserAPIs:2.6.2\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: xpp3:xpp3:1.1.4c\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.json:json:20070829\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpmime:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.james:apache-mime4j:0.6\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.slf4j:slf4j-api:1.6.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.slf4j:slf4j-log4j12:1.6.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: log4j:log4j:1.2.16\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: junit:junit:4.8.2\" level=\"project\" />\r\n+  </component>\r\n+</module>\r\n+\r\ndiff --git a/OSMMapTilePackager/build.gradle b/OSMMapTilePackager/build.gradle\nnew file mode 100644\nindex 000000000..a0d08ebe2\n--- /dev/null\n+++ b/OSMMapTilePackager/build.gradle\n@@ -0,0 +1,4 @@\n+apply plugin: 'java'\n+sourceSets {\n+    main.java.srcDirs = ['src']\n+}\ndiff --git a/OpenStreetMapViewer/.classpath b/OpenStreetMapViewer/.classpath\nindex cd8460591..03eb04c52 100644\n--- a/OpenStreetMapViewer/.classpath\n+++ b/OpenStreetMapViewer/.classpath\n@@ -17,5 +17,6 @@\n \t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\r\n \t\t</attributes>\r\n \t</classpathentry>\r\n+\t<classpathentry kind=\"con\" path=\"com.android.ide.eclipse.adt.DEPENDENCIES\"/>\r\n \t<classpathentry kind=\"output\" path=\"bin/classes\"/>\r\n </classpath>\r\ndiff --git a/OpenStreetMapViewer/OpenStreetMapViewer.iml b/OpenStreetMapViewer/OpenStreetMapViewer.iml\nnew file mode 100644\nindex 000000000..c9c7df0a6\n--- /dev/null\n+++ b/OpenStreetMapViewer/OpenStreetMapViewer.iml\n@@ -0,0 +1,43 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n+  <component name=\"FacetManager\">\r\n+    <facet type=\"android\" name=\"Android\">\r\n+      <configuration>\r\n+        <notImportedProperties>\r\n+          <property>MANIFEST_FILE_PATH</property>\r\n+          <property>RESOURCES_DIR_PATH</property>\r\n+          <property>ASSETS_DIR_PATH</property>\r\n+          <property>NATIVE_LIBS_DIR_PATH</property>\r\n+        </notImportedProperties>\r\n+      </configuration>\r\n+    </facet>\r\n+  </component>\r\n+  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_6\" inherit-compiler-output=\"false\">\r\n+    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n+    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n+    <content url=\"file://$MODULE_DIR$\">\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/gen\" isTestSource=\"false\" />\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target/classes\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target/generated-sources/combined-assets\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target/generated-sources/combined-resources\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target/generated-sources/extracted-dependencies\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target/maven-archiver\" />\r\n+    </content>\r\n+    <orderEntry type=\"jdk\" jdkName=\"Maven Android 4.1.2 Platform\" jdkType=\"Android SDK\" />\r\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.android:android:4.1.1.4\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: commons-logging:commons-logging:1.1.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpclient:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpcore:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: commons-codec:commons-codec:1.3\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.khronos:opengl-api:gl1.1-android-2.1_r1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: xerces:xmlParserAPIs:2.6.2\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: xpp3:xpp3:1.1.4c\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.json:json:20070829\" level=\"project\" />\r\n+    <orderEntry type=\"library\" name=\"Maven: com.google.android:support-v4:r7\" level=\"project\" />\r\n+    <orderEntry type=\"library\" name=\"Maven: org.slf4j:slf4j-android:1.6.1-RC1\" level=\"project\" />\r\n+    <orderEntry type=\"module\" module-name=\"osmdroid-android\" />\r\n+  </component>\r\n+</module>\r\n+\r\ndiff --git a/OpenStreetMapViewer/build.gradle b/OpenStreetMapViewer/build.gradle\nnew file mode 100644\nindex 000000000..b7b21af06\n--- /dev/null\n+++ b/OpenStreetMapViewer/build.gradle\n@@ -0,0 +1,35 @@\n+buildscript {\n+    repositories {\n+        mavenCentral()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:0.4'\n+    }\n+}\n+apply plugin: 'android'\n+\n+dependencies {\n+}\n+\n+android {\n+    compileSdkVersion 16\n+    buildToolsVersion \"16\"\n+\n+    defaultConfig {\n+        minSdkVersion 4\n+        targetSdkVersion 16\n+    }\n+    sourceSets {\n+        main {\n+            manifest.srcFile 'AndroidManifest.xml'\n+            java.srcDirs = ['src']\n+            resources.srcDirs = ['src']\n+            aidl.srcDirs = ['src']\n+            renderscript.srcDirs = ['src']\n+            res.srcDirs = ['res']\n+            assets.srcDirs = ['assets']\n+        }\n+\n+        instrumentTest.setRoot('tests')\n+    }\n+}\ndiff --git a/osmdroid-android/build.gradle b/osmdroid-android/build.gradle\nnew file mode 100644\nindex 000000000..26be5a1a8\n--- /dev/null\n+++ b/osmdroid-android/build.gradle\n@@ -0,0 +1,4 @@\n+apply plugin: 'java'\n+sourceSets {\n+    main.java.srcDirs = ['src\\main\\java','src\\main\\resources','src\\test\\java','src\\test\\resources']\n+}\ndiff --git a/osmdroid-android/osmdroid-android.iml b/osmdroid-android/osmdroid-android.iml\nnew file mode 100644\nindex 000000000..4c81d8577\n--- /dev/null\n+++ b/osmdroid-android/osmdroid-android.iml\n@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n+  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_6\" inherit-compiler-output=\"false\">\r\n+    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n+    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n+    <content url=\"file://$MODULE_DIR$\">\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" isTestSource=\"false\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n+    </content>\r\n+    <orderEntry type=\"inheritedJdk\" />\r\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.android:android:4.1.1.4\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: commons-logging:commons-logging:1.1.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpclient:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpcore:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: commons-codec:commons-codec:1.3\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.khronos:opengl-api:gl1.1-android-2.1_r1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: xerces:xmlParserAPIs:2.6.2\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: xpp3:xpp3:1.1.4c\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.json:json:20070829\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpmime:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.james:apache-mime4j:0.6\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.slf4j:slf4j-api:1.6.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.slf4j:slf4j-log4j12:1.6.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: log4j:log4j:1.2.16\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: junit:junit:4.8.2\" level=\"project\" />\r\n+  </component>\r\n+</module>\r\n+\r\ndiff --git a/osmdroid-android/src/main/osmdroid-android.iml b/osmdroid-android/src/main/osmdroid-android.iml\nnew file mode 100644\nindex 000000000..e67abe102\n--- /dev/null\n+++ b/osmdroid-android/src/main/osmdroid-android.iml\n@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<module type=\"JAVA_MODULE\" version=\"4\">\r\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n+    <exclude-output />\r\n+    <content url=\"file://$MODULE_DIR$\">\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/java\" isTestSource=\"false\" />\r\n+    </content>\r\n+    <orderEntry type=\"inheritedJdk\" />\r\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n+  </component>\r\n+</module>\r\n+\r\ndiff --git a/osmdroid-android/src/test/osmdroid-android-test.iml b/osmdroid-android/src/test/osmdroid-android-test.iml\nnew file mode 100644\nindex 000000000..2242d8d96\n--- /dev/null\n+++ b/osmdroid-android/src/test/osmdroid-android-test.iml\n@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<module type=\"JAVA_MODULE\" version=\"4\">\r\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n+    <exclude-output />\r\n+    <content url=\"file://$MODULE_DIR$\">\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/java\" isTestSource=\"true\" />\r\n+    </content>\r\n+    <orderEntry type=\"inheritedJdk\" />\r\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n+  </component>\r\n+</module>\r\n+\r\ndiff --git a/osmdroid-parent.iml b/osmdroid-parent.iml\nnew file mode 100644\nindex 000000000..971bef599\n--- /dev/null\n+++ b/osmdroid-parent.iml\n@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n+  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_6\" inherit-compiler-output=\"false\">\r\n+    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n+    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n+    <exclude-output />\r\n+    <content url=\"file://$MODULE_DIR$\">\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n+    </content>\r\n+    <orderEntry type=\"inheritedJdk\" />\r\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n+  </component>\r\n+</module>\r\n+\r\ndiff --git a/osmdroid-third-party/build.gradle b/osmdroid-third-party/build.gradle\nnew file mode 100644\nindex 000000000..26be5a1a8\n--- /dev/null\n+++ b/osmdroid-third-party/build.gradle\n@@ -0,0 +1,4 @@\n+apply plugin: 'java'\n+sourceSets {\n+    main.java.srcDirs = ['src\\main\\java','src\\main\\resources','src\\test\\java','src\\test\\resources']\n+}\ndiff --git a/osmdroid-third-party/osmdroid-third-party.iml b/osmdroid-third-party/osmdroid-third-party.iml\nnew file mode 100644\nindex 000000000..527a9ee25\n--- /dev/null\n+++ b/osmdroid-third-party/osmdroid-third-party.iml\n@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n+  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_6\" inherit-compiler-output=\"false\">\r\n+    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n+    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n+    <content url=\"file://$MODULE_DIR$\">\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" isTestSource=\"false\" />\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/src/test/resources\" isTestSource=\"true\" />\r\n+      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n+    </content>\r\n+    <orderEntry type=\"inheritedJdk\" />\r\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.android:android:4.1.1.4\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: commons-logging:commons-logging:1.1.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpclient:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpcore:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: commons-codec:commons-codec:1.3\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.khronos:opengl-api:gl1.1-android-2.1_r1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: xerces:xmlParserAPIs:2.6.2\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: xpp3:xpp3:1.1.4c\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.json:json:20070829\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: com.google.android.maps:maps:16_r3\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.httpcomponents:httpmime:4.0.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.apache.james:apache-mime4j:0.6\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.slf4j:slf4j-api:1.6.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.slf4j:slf4j-log4j12:1.6.1\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: log4j:log4j:1.2.16\" level=\"project\" />\r\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: junit:junit:4.8.2\" level=\"project\" />\r\n+  </component>\r\n+</module>\r\n+\r\ndiff --git a/osmdroid-third-party/src/main/osmdroid-third-party.iml b/osmdroid-third-party/src/main/osmdroid-third-party.iml\nnew file mode 100644\nindex 000000000..62fa71c23\n--- /dev/null\n+++ b/osmdroid-third-party/src/main/osmdroid-third-party.iml\n@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<module type=\"JAVA_MODULE\" version=\"4\">\r\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n+    <exclude-output />\r\n+    <content url=\"file://$MODULE_DIR$\">\r\n+      <sourceFolder url=\"file://$MODULE_DIR$/java\" isTestSource=\"false\" />\r\n+    </content>\r\n+    <orderEntry type=\"inheritedJdk\" />\r\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n+    <orderEntry type=\"library\" name=\"osmdroid-android-3.0.11-SNAPSHOT\" level=\"project\" />\r\n+    <orderEntry type=\"library\" name=\"OpenStreetMapViewer-3.0.11-SNAPSHOT\" level=\"project\" />\r\n+    <orderEntry type=\"module\" module-name=\"osmdroid-android-test\" />\r\n+    <orderEntry type=\"module\" module-name=\"OpenStreetMapViewer\" />\r\n+    <orderEntry type=\"module\" module-name=\"osmdroid-android\" />\r\n+    <orderEntry type=\"module\" module-name=\"generated-sources1\" />\r\n+  </component>\r\n+</module>\r\n+\r",
    "Fix Null pointer exception in MultiMap . set <issue_id> .": "diff --git a/src/main/java/io/vertx/core/http/impl/headers/HeadersMultiMap.java b/src/main/java/io/vertx/core/http/impl/headers/HeadersMultiMap.java\nindex 68fbbf99e..d54b8a640 100644\n--- a/src/main/java/io/vertx/core/http/impl/headers/HeadersMultiMap.java\n+++ b/src/main/java/io/vertx/core/http/impl/headers/HeadersMultiMap.java\n@@ -526,19 +526,21 @@ public final class HeadersMultiMap extends HttpHeaders implements MultiMap {\n \n   private void remove0(int h, int i, CharSequence name) {\n     HeadersMultiMap.MapEntry e = entries[i];\n-    MapEntry first = e;\n+    MapEntry prev = null;\n     while (e != null) {\n       MapEntry next = e.next;\n       CharSequence key = e.key;\n       if (e.hash == h && (name == key || AsciiString.contentEqualsIgnoreCase(name, key))) {\n-        if (e == first) {\n-          first = e.next;\n+        if (prev == null) {\n+          entries[i] = next;\n+        } else {\n+          prev.next = next;\n         }\n         e.remove();\n       }\n+      prev = e;\n       e = next;\n     }\n-    entries[i] = first;\n   }\n \n   private void add0(int h, int i, final CharSequence name, final CharSequence value) {\ndiff --git a/src/test/java/io/vertx/core/http/headers/VertxHttpHeadersTest.java b/src/test/java/io/vertx/core/http/headers/VertxHttpHeadersTest.java\nindex 9df5d0bcd..91df9c299 100644\n--- a/src/test/java/io/vertx/core/http/headers/VertxHttpHeadersTest.java\n+++ b/src/test/java/io/vertx/core/http/headers/VertxHttpHeadersTest.java\n@@ -208,4 +208,16 @@ public class VertxHttpHeadersTest extends HeadersTestBase {\n     mm.remove(name2);\n     assertTrue(\"not empty\", mm.isEmpty());\n   }\n+\n+  @Test\n+  public void testRemovalNext() {\n+    MultiMap mmap = newMultiMap();\n+    String name1 = this.sameHash1;\n+    String name2 = this.sameHash2;\n+    mmap.set(name1, \"v\");\n+    mmap.add(name2, \"q\");\n+    mmap.remove(name1);\n+    mmap.set(name1, \"w\");\n+    assertEquals(\"w\", mmap.get(name1));\n+  }\n }",
    "Clean up SketchController . nameCode a bit .": "diff --git a/app/src/processing/app/SketchController.java b/app/src/processing/app/SketchController.java\nindex 662ca114d..902c9e333 100644\n--- a/app/src/processing/app/SketchController.java\n+++ b/app/src/processing/app/SketchController.java\n@@ -140,7 +140,7 @@ public class SketchController {\n \n     // Add the extension here, this simplifies some of the logic below.\n     if (newName.indexOf('.') == -1) {\n-      newName += \".\" + sketch.getDefaultExtension();\n+      newName += \".\" + Sketch.DEFAULT_SKETCH_EXTENSION;\n     }\n \n     // if renaming to the same thing as before, just ignore.\n@@ -167,17 +167,17 @@ public class SketchController {\n       return;\n     }\n \n-    String newExtension = newName.substring(dot+1).toLowerCase();\n-    if (!validExtension(newExtension)) {\n+    FileUtils.SplitFile split = FileUtils.splitFilename(newName);\n+    if (!Sketch.EXTENSIONS.contains(split.extension)) {\n       Base.showWarning(tr(\"Problem with rename\"),\n-                       I18n.format(\n-\t\t\t tr(\"\\\".{0}\\\" is not a valid extension.\"), newExtension\n-\t\t       ), null);\n+                       I18n.format(tr(\"\\\".{0}\\\" is not a valid extension.\"),\n+                                   split.extension),\n+                       null);\n       return;\n     }\n \n     // Don't let the user create the main tab as a .java file instead of .pde\n-    if (!isDefaultExtension(newExtension)) {\n+    if (!split.extension.equals(Sketch.DEFAULT_SKETCH_EXTENSION)) {\n       if (renamingCode) {  // If creating a new tab, don't show this error\n         if (current.isPrimary()) { // If this is the main tab, disallow\n           Base.showWarning(tr(\"Problem with rename\"),\n@@ -189,14 +189,9 @@ public class SketchController {\n       }\n     }\n \n-    // dots are allowed for the .pde and .java, but not in the name\n-    // make sure the user didn't name things poo.time.pde\n-    // or something like that (nothing against poo time)\n-    String shortName = newName.substring(0, dot);\n-    String sanitaryName = BaseNoGui.sanitizeName(shortName);\n-    if (!shortName.equals(sanitaryName)) {\n-      newName = sanitaryName + \".\" + newExtension;\n-    }\n+    // Sanitize name\n+    String sanitaryName = BaseNoGui.sanitizeName(split.basename);\n+    newName = sanitaryName + \".\" + split.extension;\n \n     // In Arduino, we want to allow files with the same name but different\n     // extensions, so compare the full names (including extensions).  This\n@@ -1058,23 +1053,6 @@ public class SketchController {\n     return code.isExtension(sketch.getDefaultExtension());\n   }\n \n-\n-  /**\n-   * True if the specified extension is the default file extension.\n-   */\n-  private boolean isDefaultExtension(String what) {\n-    return what.equals(sketch.getDefaultExtension());\n-  }\n-\n-\n-  /**\n-   * Check this extension (no dots, please) against the list of valid\n-   * extensions.\n-   */\n-  private boolean validExtension(String what) {\n-    return Sketch.EXTENSIONS.contains(what);\n-  }\n-\n   /**\n    * Create the data folder if it does not exist already. As a convenience,\n    * it also returns the data folder, since it's likely about to be used.\ndiff --git a/arduino-core/src/processing/app/Sketch.java b/arduino-core/src/processing/app/Sketch.java\nindex 90e3964a3..a598841ab 100644\n--- a/arduino-core/src/processing/app/Sketch.java\n+++ b/arduino-core/src/processing/app/Sketch.java\n@@ -15,7 +15,8 @@ import static processing.app.I18n.tr;\n  */\n public class Sketch {\n \n-  public static final List<String> SKETCH_EXTENSIONS = Arrays.asList(\"ino\", \"pde\");\n+  public static final String DEFAULT_SKETCH_EXTENSION = \"ino\";\n+  public static final List<String> SKETCH_EXTENSIONS = Arrays.asList(DEFAULT_SKETCH_EXTENSION, \"pde\");\n   public static final List<String> OTHER_ALLOWED_EXTENSIONS = Arrays.asList(\"c\", \"cpp\", \"h\", \"hh\", \"hpp\", \"s\");\n   public static final List<String> EXTENSIONS = Stream.concat(SKETCH_EXTENSIONS.stream(), OTHER_ALLOWED_EXTENSIONS.stream()).collect(Collectors.toList());\n ",
    "added support for overriding the user and roles property files for both the standalone and domain server mode . .": "diff --git a/build/src/main/resources/bin/add-user.bat b/build/src/main/resources/bin/add-user.bat\nindex 3e629bc3cf..a72c7f6ab9 100644\n--- a/build/src/main/resources/bin/add-user.bat\n+++ b/build/src/main/resources/bin/add-user.bat\n@@ -69,7 +69,10 @@ if \"x%JBOSS_MODULEPATH%\" == \"x\" (\n   set  \"JBOSS_MODULEPATH=%JBOSS_HOME%\\modules\"\n )\n \n-\"%JAVA%\" ^\n+# Uncomment to override standalone and domain user location  \n+# set \"JAVA_OPTS=%JAVA_OPTS% -Djboss.server.config.user.dir=../standalone/configuration -Djboss.domain.config.user.dir=../domain/configuration\"\n+\n+\"%JAVA%\" %JAVA_OPTS% ^\n     -jar \"%JBOSS_HOME%\\jboss-modules.jar\" ^\n     -mp \"%JBOSS_MODULEPATH%\" ^\n      org.jboss.as.domain-add-user ^\ndiff --git a/build/src/main/resources/bin/add-user.sh b/build/src/main/resources/bin/add-user.sh\nindex dfb0c8b978..a4ead414b7 100755\n--- a/build/src/main/resources/bin/add-user.sh\n+++ b/build/src/main/resources/bin/add-user.sh\n@@ -62,6 +62,8 @@ fi\n \n # Sample JPDA settings for remote socket debugging\n #JAVA_OPTS=\"$JAVA_OPTS -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=y\"\n+# Uncomment to override standalone and domain user location  \n+#JAVA_OPTS=\"$JAVA_OPTS -Djboss.server.config.user.dir=../standalone/configuration -Djboss.domain.config.user.dir=../domain/configuration\"\n \n eval \\\"$JAVA\\\" $JAVA_OPTS \\\n          -jar \\\"$JBOSS_HOME/jboss-modules.jar\\\" \\\ndiff --git a/domain-management/src/main/java/org/jboss/as/domain/management/security/AddPropertiesUser.java b/domain-management/src/main/java/org/jboss/as/domain/management/security/AddPropertiesUser.java\nindex b27c7dd3b7..96d7499f3f 100644\n--- a/domain-management/src/main/java/org/jboss/as/domain/management/security/AddPropertiesUser.java\n+++ b/domain-management/src/main/java/org/jboss/as/domain/management/security/AddPropertiesUser.java\n@@ -47,8 +47,10 @@ public class AddPropertiesUser {\n \n     public static final String SERVER_BASE_DIR = \"jboss.server.base.dir\";\n     public static final String SERVER_CONFIG_DIR = \"jboss.server.config.dir\";\n+    public static final String SERVER_CONFIG_USER_DIR = \"jboss.server.config.user.dir\";\n     public static final String DOMAIN_BASE_DIR = \"jboss.domain.base.dir\";\n     public static final String DOMAIN_CONFIG_DIR = \"jboss.domain.config.dir\";\n+    public static final String DOMAIN_CONFIG_USER_DIR = \"jboss.domain.config.user.dir\";\n \n     public static final String DEFAULT_MANAGEMENT_REALM = \"ManagementRealm\";\n     public static final String DEFAULT_APPLICATION_REALM = \"ApplicationRealm\";\n@@ -56,7 +58,8 @@ public class AddPropertiesUser {\n     public static final String APPLICATION_USERS_PROPERTIES = \"application-users.properties\";\n     public static final String APPLICATION_ROLES_PROPERTIES = \"application-roles.properties\";\n     public static final String APPLICATION_USERS_SWITCH = \"-a\";\n-\n+    public static final String DOMAIN_CONFIG_DIR_USERS_SWITCH = \"-dc\";\n+    public static final String SERVER_CONFIG_DIR_USERS_SWITCH = \"-sc\";\n \n     private static final char CARRIAGE_RETURN_CHAR = '\\r';\n \n@@ -72,21 +75,26 @@ public class AddPropertiesUser {\n \n     protected AddPropertiesUser() {\n         theConsole = new JavaConsole();\n+        StateValues stateValues = new StateValues();\n+        stateValues.setJbossHome(System.getenv(\"JBOSS_HOME\"));\n+\n         if (theConsole.getConsole() == null) {\n             throw MESSAGES.noConsoleAvailable();\n         }\n-        nextState = new PropertyFilePrompt(theConsole);\n+        nextState = new PropertyFilePrompt(theConsole, stateValues);\n     }\n \n     protected AddPropertiesUser(ConsoleWrapper console) {\n         this.theConsole = console;\n-        nextState = new PropertyFilePrompt(theConsole);\n+        StateValues stateValues = new StateValues();\n+        stateValues.setJbossHome(System.getenv(\"JBOSS_HOME\"));\n+        nextState = new PropertyFilePrompt(theConsole,stateValues);\n     }\n \n     private AddPropertiesUser(final boolean management, final String user, final char[] password, final String realm) {\n         boolean silent = false;\n         StateValues stateValues = new StateValues();\n-\n+        stateValues.setJbossHome(System.getenv(\"JBOSS_HOME\"));\n         String valueSilent = argsCliProps.getProperty(\"silent\");\n \n         if (valueSilent != null) {\n@@ -144,6 +152,10 @@ public class AddPropertiesUser {\n                     }\n                 } else if (temp.equals(APPLICATION_USERS_SWITCH)) {\n                     management = false;\n+                } else if (temp.indexOf(DOMAIN_CONFIG_DIR_USERS_SWITCH)>=0) {\n+                    System.setProperty(DOMAIN_CONFIG_DIR,temp.substring(3));\n+                } else if (temp.indexOf(SERVER_CONFIG_DIR)>=0) {\n+                    System.setProperty(SERVER_CONFIG_DIR,temp.substring(3));\n                 } else {\n                     argsList.add(temp);\n                 }\ndiff --git a/domain-management/src/main/java/org/jboss/as/domain/management/security/state/PropertyFileFinder.java b/domain-management/src/main/java/org/jboss/as/domain/management/security/state/PropertyFileFinder.java\nindex 22f57f3d38..82878ee547 100644\n--- a/domain-management/src/main/java/org/jboss/as/domain/management/security/state/PropertyFileFinder.java\n+++ b/domain-management/src/main/java/org/jboss/as/domain/management/security/state/PropertyFileFinder.java\n@@ -45,15 +45,9 @@ import java.util.List;\n import java.util.Map;\n import java.util.Properties;\n import java.util.Set;\n-import static org.jboss.as.domain.management.security.AddPropertiesUser.MGMT_USERS_PROPERTIES;\n-import static org.jboss.as.domain.management.security.AddPropertiesUser.APPLICATION_USERS_PROPERTIES;\n-import static org.jboss.as.domain.management.security.AddPropertiesUser.APPLICATION_ROLES_PROPERTIES;\n-import static org.jboss.as.domain.management.security.AddPropertiesUser.SERVER_CONFIG_DIR;\n-import static org.jboss.as.domain.management.security.AddPropertiesUser.SERVER_BASE_DIR;\n-import static org.jboss.as.domain.management.security.AddPropertiesUser.DOMAIN_BASE_DIR;\n-import static org.jboss.as.domain.management.security.AddPropertiesUser.DOMAIN_CONFIG_DIR;\n \n import static org.jboss.as.domain.management.DomainManagementMessages.MESSAGES;\n+import static org.jboss.as.domain.management.security.AddPropertiesUser.*;\n \n /**\n  * The first state executed, responsible for searching for the relevant properties files.\n@@ -74,7 +68,7 @@ public class PropertyFileFinder implements State {\n     @Override\n     public State execute() {\n         stateValues.setKnownRoles(new HashMap<String, String>());\n-        String jbossHome = System.getenv(\"JBOSS_HOME\");\n+        String jbossHome = stateValues.getJBossHome();\n         if (jbossHome == null) {\n             return new ErrorState(theConsole, MESSAGES.jbossHomeNotSet(), null, stateValues);\n         }\n@@ -134,12 +128,11 @@ public class PropertyFileFinder implements State {\n     }\n \n     private boolean findFiles(final String jbossHome, final List<File> foundFiles, final String fileName) {\n-\n-        File standaloneProps = buildFilePath(jbossHome, SERVER_CONFIG_DIR, SERVER_BASE_DIR, \"standalone\", fileName);\n+        File standaloneProps = buildFilePath(jbossHome, SERVER_CONFIG_USER_DIR, SERVER_CONFIG_DIR, SERVER_BASE_DIR, \"standalone\", fileName);\n         if (standaloneProps.exists()) {\n             foundFiles.add(standaloneProps);\n         }\n-        File domainProps = buildFilePath(jbossHome, DOMAIN_CONFIG_DIR, DOMAIN_BASE_DIR, \"domain\", fileName);\n+        File domainProps = buildFilePath(jbossHome, DOMAIN_CONFIG_USER_DIR,DOMAIN_CONFIG_DIR, DOMAIN_BASE_DIR, \"domain\", fileName);\n         if (domainProps.exists()) {\n             foundFiles.add(domainProps);\n         }\n@@ -150,10 +143,12 @@ public class PropertyFileFinder implements State {\n         return true;\n     }\n \n-    private File buildFilePath(final String jbossHome, final String serverConfigDirPropertyName,\n+    private File buildFilePath(final String jbossHome, final String serverCofigUserDirPropertyName, final String serverConfigDirPropertyName,\n                                final String serverBaseDirPropertyName, final String defaultBaseDir, final String fileName) {\n \n-        String configDirConfiguredPath = System.getProperty(serverConfigDirPropertyName);\n+        String configUserDirConfiguredPath = System.getProperty(serverCofigUserDirPropertyName);\n+        String configDirConfiguredPath = configUserDirConfiguredPath != null ? configUserDirConfiguredPath : System.getProperty(serverConfigDirPropertyName);\n+\n         File configDir =  configDirConfiguredPath != null ? new File(configDirConfiguredPath) : null;\n         if(configDir == null) {\n             String baseDirConfiguredPath = System.getProperty(serverBaseDirPropertyName);\ndiff --git a/domain-management/src/main/java/org/jboss/as/domain/management/security/state/PropertyFilePrompt.java b/domain-management/src/main/java/org/jboss/as/domain/management/security/state/PropertyFilePrompt.java\nindex b0fa4b7aab..204be768e9 100644\n--- a/domain-management/src/main/java/org/jboss/as/domain/management/security/state/PropertyFilePrompt.java\n+++ b/domain-management/src/main/java/org/jboss/as/domain/management/security/state/PropertyFilePrompt.java\n@@ -42,9 +42,11 @@ public class PropertyFilePrompt implements State {\n     private static final int INVALID = 2;\n \n     private ConsoleWrapper theConsole;\n+    private StateValues stateValues;\n \n-    public PropertyFilePrompt(ConsoleWrapper theConsole) {\n+    public PropertyFilePrompt(ConsoleWrapper theConsole, StateValues stateValues) {\n         this.theConsole = theConsole;\n+        this.stateValues = stateValues;\n         if (theConsole.getConsole() == null) {\n             throw MESSAGES.noConsoleAvailable();\n         }\n@@ -52,7 +54,6 @@ public class PropertyFilePrompt implements State {\n \n     @Override\n     public State execute() {\n-        StateValues stateValues = new StateValues();\n \n         theConsole.printf(AddPropertiesUser.NEW_LINE);\n         theConsole.printf(MESSAGES.filePrompt());\ndiff --git a/domain-management/src/main/java/org/jboss/as/domain/management/security/state/StateValues.java b/domain-management/src/main/java/org/jboss/as/domain/management/security/state/StateValues.java\nindex 27cfdffb52..a771c576a3 100644\n--- a/domain-management/src/main/java/org/jboss/as/domain/management/security/state/StateValues.java\n+++ b/domain-management/src/main/java/org/jboss/as/domain/management/security/state/StateValues.java\n@@ -46,6 +46,7 @@ public class StateValues {\n     private List<File> roleFiles;\n     private Set<String> knownUsers;\n     private Map<String,String> knownRoles;\n+    private String jbossHome;\n \n     public boolean isSilentOrNonInteractive() {\n         return (howInteractive == AddPropertiesUser.Interactiveness.NON_INTERACTIVE) || isSilent();\n@@ -139,4 +140,12 @@ public class StateValues {\n     public void setKnownRoles(Map<String, String> knownRoles) {\n         this.knownRoles = knownRoles;\n     }\n+\n+    public String getJBossHome() {\n+        return this.jbossHome;\n+    }\n+\n+    public void setJbossHome(String path) {\n+        this.jbossHome = path;\n+    }\n }\ndiff --git a/domain-management/src/test/java/org/jboss/as/domain/management/security/state/AddUserTestCase.java b/domain-management/src/test/java/org/jboss/as/domain/management/security/state/AddUserTestCase.java\nindex 1b5f606b76..1602a8b445 100644\n--- a/domain-management/src/test/java/org/jboss/as/domain/management/security/state/AddUserTestCase.java\n+++ b/domain-management/src/test/java/org/jboss/as/domain/management/security/state/AddUserTestCase.java\n@@ -28,11 +28,8 @@ import org.jboss.msc.service.StartException;\n import org.junit.Test;\n \n import java.io.IOException;\n-import java.util.Properties;\n \n import static org.jboss.as.domain.management.DomainManagementMessages.MESSAGES;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n \n /**\n  * Test the AddUser state\n@@ -54,21 +51,11 @@ public class AddUserTestCase extends PropertyTestHelper {\n         consoleMock.setResponses(consoleBuilder);\n         addUserState.update(values);\n \n-        assertRolePropertyFile();\n-        assertUserPropertyFile();\n+        assertRolePropertyFile(USER_NAME);\n+        assertUserPropertyFile(USER_NAME);\n \n         consoleBuilder.validate();\n     }\n \n-    private void assertUserPropertyFile() throws StartException, IOException {\n-        Properties properties = loadProperties(values.getPropertiesFiles().get(0).getAbsolutePath());\n-        String password = (String) properties.get(USER_NAME);\n-        assertNotNull(password);\n-    }\n \n-    private void assertRolePropertyFile() throws StartException, IOException {\n-        Properties properties = loadProperties(values.getRoleFiles().get(0).getAbsolutePath());\n-        String roles = (String) properties.get(USER_NAME);\n-        assertEquals(ROLES,roles);\n-    }\n }\ndiff --git a/domain-management/src/test/java/org/jboss/as/domain/management/security/state/PropertyFileFinderTestCase.java b/domain-management/src/test/java/org/jboss/as/domain/management/security/state/PropertyFileFinderTestCase.java\nnew file mode 100644\nindex 0000000000..81689d1385\n--- /dev/null\n+++ b/domain-management/src/test/java/org/jboss/as/domain/management/security/state/PropertyFileFinderTestCase.java\n@@ -0,0 +1,123 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2012, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+\n+package org.jboss.as.domain.management.security.state;\n+\n+import org.jboss.as.domain.management.security.AddPropertiesUser;\n+import org.jboss.as.domain.management.security.AssertConsoleBuilder;\n+import org.jboss.msc.service.StartException;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.BufferedWriter;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStreamWriter;\n+import java.util.Properties;\n+\n+import static java.lang.System.getProperty;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Test the property file finder.\n+ *\n+ * @author <a href=\"mailto:flemming.harms@gmail.com\">Flemming Harms</a>\n+ */\n+public class PropertyFileFinderTestCase extends PropertyTestHelper {\n+\n+\n+    @Before\n+    public void setup() throws IOException {\n+        values.setManagement(true);\n+        values.setJbossHome(getProperty(\"java.io.tmpdir\"));\n+    }\n+\n+    private File createPropertyFile(String filename, String mode) throws IOException {\n+\n+        File domainDir = new File(getProperty(\"java.io.tmpdir\")+File.separator+mode);\n+        domainDir.mkdir();\n+        domainDir.deleteOnExit();\n+        File propertyUserFile = new File(domainDir, filename);\n+        propertyUserFile.createNewFile();\n+        propertyUserFile.deleteOnExit();\n+        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(propertyUserFile),\"UTF8\"));\n+        try {\n+          Properties domainPropeties = new Properties();\n+          domainPropeties.setProperty(USER_NAME,\"mypassword\");\n+          domainPropeties.store(bw,\"\");\n+        } finally {\n+           bw.close();\n+        }\n+        return propertyUserFile;\n+    }\n+\n+    @Test\n+    public void overridePropertyfileLocationRead() throws IOException {\n+        File domainMgmtUserFile = createPropertyFile(\"mgmt-users.properties\", \"domain\");\n+        File standaloneMgmtUserFile = createPropertyFile(\"mgmt-users.properties\", \"standalone\");\n+\n+        System.setProperty(\"jboss.server.config.user.dir\", standaloneMgmtUserFile.getParent());\n+        System.setProperty(\"jboss.domain.config.user.dir\", domainMgmtUserFile.getParent());\n+        State propertyFileFinder = new PropertyFileFinder(consoleMock, values);\n+        State nextState = propertyFileFinder.execute();\n+        assertTrue(nextState instanceof PromptNewUserState);\n+        assertTrue(\"Expected to find the \"+USER_NAME+\" in the list of known users\",values.getKnownUsers().contains(USER_NAME));\n+        assertTrue(\"Expected the values.getPropertiesFiles() contained the \"+standaloneMgmtUserFile.getCanonicalPath(),values.getPropertiesFiles().contains(standaloneMgmtUserFile.getCanonicalFile()));\n+        assertTrue(\"Expected the values.getPropertiesFiles() contained the \"+domainMgmtUserFile.getCanonicalPath(),values.getPropertiesFiles().contains(domainMgmtUserFile.getCanonicalFile()));\n+    }\n+\n+    @Test\n+    public void overridePropertyfileLocationWrite() throws IOException, StartException {\n+        File domainUserFile = createPropertyFile(\"application-users.properties\", \"domain\");\n+        File standaloneUserFile = createPropertyFile(\"application-users.properties\", \"standalone\");\n+        File domainRolesFile = createPropertyFile(\"application-roles.properties\", \"domain\");\n+        File standaloneRolesFile = createPropertyFile(\"application-roles.properties\", \"standalone\");\n+\n+        String newUserName = \"Hugh.Jackman\";\n+        values.setRoles(null);\n+        values.setUserName(newUserName);\n+        values.setManagement(false);\n+        System.setProperty(\"jboss.server.config.user.dir\", domainUserFile.getParent());\n+        System.setProperty(\"jboss.domain.config.user.dir\", standaloneUserFile.getParent());\n+        State propertyFileFinder = new PropertyFileFinder(consoleMock, values);\n+        State nextState = propertyFileFinder.execute();\n+        assertTrue(nextState instanceof PromptNewUserState);\n+\n+        File locatedDomainPropertyFile = values.getPropertiesFiles().get(values.getPropertiesFiles().indexOf(domainUserFile));\n+        File locatedStandalonePropertyFile = values.getPropertiesFiles().get(values.getPropertiesFiles().indexOf(standaloneUserFile));\n+        UpdateUser updateUserState = new UpdateUser(consoleMock, values);\n+\n+        AssertConsoleBuilder consoleBuilder = new AssertConsoleBuilder().\n+                expectedDisplayText(updateUserState.consoleUserMessage(locatedDomainPropertyFile.getCanonicalPath())).\n+                expectedDisplayText(AddPropertiesUser.NEW_LINE).\n+                expectedDisplayText(updateUserState.consoleUserMessage(locatedStandalonePropertyFile.getCanonicalPath())).\n+                expectedDisplayText(AddPropertiesUser.NEW_LINE);\n+        consoleMock.setResponses(consoleBuilder);\n+        updateUserState.update(values);\n+\n+        assertUserPropertyFile(newUserName);\n+        consoleBuilder.validate();\n+    }\n+\n+\n+}\ndiff --git a/domain-management/src/test/java/org/jboss/as/domain/management/security/state/PropertyTestHelper.java b/domain-management/src/test/java/org/jboss/as/domain/management/security/state/PropertyTestHelper.java\nindex 3d65745c21..122b7a3955 100644\n--- a/domain-management/src/test/java/org/jboss/as/domain/management/security/state/PropertyTestHelper.java\n+++ b/domain-management/src/test/java/org/jboss/as/domain/management/security/state/PropertyTestHelper.java\n@@ -31,6 +31,9 @@ import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Properties;\n \n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n /**\n  * Helper for setting up a test case with ConsoleMock, StateValues and\n  * property files for user and roles\n@@ -74,4 +77,16 @@ public class PropertyTestHelper {\n         propertiesLoad.stop(null);\n         return properties;\n     }\n+\n+    protected void assertUserPropertyFile(String userName) throws StartException, IOException {\n+        Properties properties = loadProperties(values.getPropertiesFiles().get(0).getAbsolutePath());\n+        String password = (String) properties.get(userName);\n+        assertNotNull(password);\n+    }\n+\n+    protected void assertRolePropertyFile(String userName) throws StartException, IOException {\n+        Properties properties = loadProperties(values.getRoleFiles().get(0).getAbsolutePath());\n+        String roles = (String) properties.get(userName);\n+        assertEquals(ROLES,roles);\n+    }\n }\ndiff --git a/domain-management/src/test/java/org/jboss/as/domain/management/security/state/UpdateUserTestCase.java b/domain-management/src/test/java/org/jboss/as/domain/management/security/state/UpdateUserTestCase.java\nindex e0f8854c90..224c60a052 100644\n--- a/domain-management/src/test/java/org/jboss/as/domain/management/security/state/UpdateUserTestCase.java\n+++ b/domain-management/src/test/java/org/jboss/as/domain/management/security/state/UpdateUserTestCase.java\n@@ -28,10 +28,6 @@ import org.jboss.msc.service.StartException;\n import org.junit.Test;\n \n import java.io.IOException;\n-import java.util.Properties;\n-\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n \n /**\n  * Test update user\n@@ -51,7 +47,7 @@ public class UpdateUserTestCase extends PropertyTestHelper {\n         consoleMock.setResponses(consoleBuilder);\n         updateUserState.update(values);\n \n-        assertUserPropertyFile();\n+        assertUserPropertyFile(USER_NAME);\n \n         consoleBuilder.validate();\n     }\n@@ -68,23 +64,11 @@ public class UpdateUserTestCase extends PropertyTestHelper {\n         consoleMock.setResponses(consoleBuilder);\n         updateUserState.update(values);\n \n-        assertUserPropertyFile();\n-        assertRolePropertyFile();\n+        assertUserPropertyFile(USER_NAME);\n+        assertRolePropertyFile(USER_NAME);\n \n         consoleBuilder.validate();\n     }\n \n-    private void assertUserPropertyFile() throws StartException, IOException {\n-        Properties properties = loadProperties(values.getPropertiesFiles().get(0).getAbsolutePath());\n-        String password = (String) properties.get(USER_NAME);\n-        assertNotNull(password);\n-    }\n-\n-    private void assertRolePropertyFile() throws StartException, IOException {\n-        Properties properties = loadProperties(values.getRoleFiles().get(0).getAbsolutePath());\n-        String roles = (String) properties.get(USER_NAME);\n-        assertEquals(ROLES,roles);\n-    }\n-\n \n }",
    "Improve Dataflow javadocs .": "diff --git a/sdk/src/main/java/com/google/cloud/dataflow/sdk/options/GcpOptions.java b/sdk/src/main/java/com/google/cloud/dataflow/sdk/options/GcpOptions.java\nindex bd2928a74e..ef36cda04a 100644\n--- a/sdk/src/main/java/com/google/cloud/dataflow/sdk/options/GcpOptions.java\n+++ b/sdk/src/main/java/com/google/cloud/dataflow/sdk/options/GcpOptions.java\n@@ -40,7 +40,7 @@ import java.util.regex.Pattern;\n /**\n  * Options used to configure Google Cloud Platform project and credentials.\n  *\n- * <p>These options configure which of the following 4 different mechanisms for obtaining a\n+ * <p>These options configure which of the following three different mechanisms for obtaining a\n  * credential are used:\n  * <ol>\n  *   <li>\n@@ -49,11 +49,6 @@ import java.util.regex.Pattern;\n  *     application default credentials</a>.\n  *   </li>\n  *   <li>\n- *     It can run the gcloud tool in a subprocess to obtain a credential.\n- *     This is the preferred mechanism.  The property \"GCloudPath\" can be\n- *     used to specify where we search for gcloud data.\n- *   </li>\n- *   <li>\n  *     The user can specify a client secrets file and go through the OAuth2\n  *     webflow. The credential will then be cached in the user's home\n  *     directory for reuse.\n@@ -63,9 +58,10 @@ import java.util.regex.Pattern;\n  *     with the service account name.\n  *   </li>\n  * </ol>\n- * The default mechanism is to use the\n+ *\n+ * <p>The default mechanism is to use the\n  * <a href=\"https://developers.google.com/accounts/docs/application-default-credentials\">\n- * application default credentials</a> falling back to gcloud. The other options can be\n+ * application default credentials</a>. The other options can be\n  * used by setting the corresponding properties.\n  */\n @Description(\"Options used to configure Google Cloud Platform project and credentials.\")\n@@ -159,7 +155,7 @@ public interface GcpOptions extends GoogleApiDebugOptions, PipelineOptions {\n    */\n   @Description(\"The class of the credential factory that should be created and used to create \"\n       + \"credentials. If gcpCredential has not been set explicitly, an instance of this class will \"\n-      + \"be constructed and used as a credential factory. The default credential factory will\")\n+      + \"be constructed and used as a credential factory.\")\n   @Default.Class(GcpCredentialFactory.class)\n   Class<? extends CredentialFactory> getCredentialFactoryClass();\n   void setCredentialFactoryClass(\n@@ -180,8 +176,8 @@ public interface GcpOptions extends GoogleApiDebugOptions, PipelineOptions {\n   void setGcpCredential(Credential value);\n \n   /**\n-   * Attempts to get infer the default project based upon the environment this application\n-   * is executing within. Currently this only supports getting the default project from gCloud.\n+   * Attempts to infer the default project based upon the environment this application\n+   * is executing within. Currently this only supports getting the default project from gcloud.\n    */\n   public static class DefaultProjectFactory implements DefaultValueFactory<String> {\n     private static final Logger LOG = LoggerFactory.getLogger(DefaultProjectFactory.class);\n@@ -213,7 +209,7 @@ public interface GcpOptions extends GoogleApiDebugOptions, PipelineOptions {\n             matcher = projectPattern.matcher(line);\n             if (matcher.matches()) {\n               String project = matcher.group(1).trim();\n-              LOG.info(\"Inferred default GCP project '{}' from gCloud. If this is the incorrect \"\n+              LOG.info(\"Inferred default GCP project '{}' from gcloud. If this is the incorrect \"\n                   + \"project, please cancel this Pipeline and specify the command-line \"\n                   + \"argument --project.\", project);\n               return project;\ndiff --git a/sdk/src/main/java/com/google/cloud/dataflow/sdk/options/GcsOptions.java b/sdk/src/main/java/com/google/cloud/dataflow/sdk/options/GcsOptions.java\nindex fefce2b058..d2218075bd 100644\n--- a/sdk/src/main/java/com/google/cloud/dataflow/sdk/options/GcsOptions.java\n+++ b/sdk/src/main/java/com/google/cloud/dataflow/sdk/options/GcsOptions.java\n@@ -18,6 +18,7 @@ package com.google.cloud.dataflow.sdk.options;\n \n import com.google.cloud.dataflow.sdk.util.AppEngineEnvironment;\n import com.google.cloud.dataflow.sdk.util.GcsUtil;\n+import com.google.cloud.hadoop.util.AbstractGoogleAsyncWriteChannel;\n import com.google.common.util.concurrent.MoreExecutors;\n import com.google.common.util.concurrent.ThreadFactoryBuilder;\n \n@@ -68,6 +69,11 @@ public interface GcsOptions extends\n   String getGcsEndpoint();\n   void setGcsEndpoint(String value);\n \n+  /**\n+   * The buffer size (in bytes) to use when uploading files to GCS. Please see the documentation for\n+   * {@link AbstractGoogleAsyncWriteChannel#setUploadBufferSize} for more information on the\n+   * restrictions and performance implications of this value.\n+   */\n   @Description(\"The buffer size (in bytes) to use when uploading files to GCS. Please see the \"\n       + \"documentation for AbstractGoogleAsyncWriteChannel.setUploadBufferSize for more \"\n       + \"information on the restrictions and performance implications of this value.\\n\\n\"",
    "Remove databaseConnections API from the inspector builder .": "diff --git a/stetho/src/main/java/com/facebook/stetho/Stetho.java b/stetho/src/main/java/com/facebook/stetho/Stetho.java\nindex 25d2bed..f68a29f 100644\n--- a/stetho/src/main/java/com/facebook/stetho/Stetho.java\n+++ b/stetho/src/main/java/com/facebook/stetho/Stetho.java\n@@ -239,7 +239,6 @@ public class Stetho {\n     @Nullable private DocumentProviderFactory mDocumentProvider;\n     @Nullable private RuntimeReplFactory mRuntimeRepl;\n     @Nullable private DatabaseFilesProvider mDatabaseFilesProvider;\n-    @Nullable private DatabaseConnectionProvider mDatabaseConnectionProvider;\n     @Nullable private List<Database.DatabaseDriver> mDatabaseDrivers;\n \n     public DefaultInspectorModulesBuilder(Context context) {\n@@ -273,22 +272,25 @@ public class Stetho {\n     /**\n      * Customize the location of database files that Stetho will propogate in the UI.  Android's\n      * {@link Context#getDatabasePath} method will be used by default if not overridden here.\n+     *\n+     * <p>This method is deprecated and instead it is recommended that you explicitly\n+     * configure the {@link SqliteDatabaseDriver} as with:</p>\n+     * <pre>\n+     *   provideDatabaseDriver(\n+     *     new SqliteDatabaseDriver(\n+     *       context,\n+     *       new MyDatabaseFilesProvider(...),\n+     *       new DefaultDatabaseConnectionProvider(...)))\n+     * </pre>\n+     *\n+     * @deprecated See example alternative above.\n      */\n+    @Deprecated\n     public DefaultInspectorModulesBuilder databaseFiles(DatabaseFilesProvider provider) {\n       mDatabaseFilesProvider = provider;\n       return this;\n     }\n \n-    /**\n-     * Customize the database connection that Stetho will use in the UI. Android's\n-     * {@link SQLiteDatabase#openDatabase(String, SQLiteDatabase.CursorFactory, int)} method will\n-     * be used by default.\n-     */\n-    public DefaultInspectorModulesBuilder databaseConnections(DatabaseConnectionProvider provider) {\n-      mDatabaseConnectionProvider = provider;\n-      return this;\n-    }\n-\n     /**\n      * Extend and provide additional database drivers. Currently two database drivers are supported\n      * in this lib: <br>\n@@ -376,9 +378,7 @@ public class Stetho {\n                   mDatabaseFilesProvider != null ?\n                       mDatabaseFilesProvider :\n             ",
    "Eliminate dependency on Spring Framework .": "diff --git a/build.gradle b/build.gradle\nindex 725b69d9b7..c712c78f54 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -68,7 +68,6 @@ configure(subprojects) {\n         slf4jVersion = '1.7.22'\n         sparkVersion = '2.5.2'\n         springBootVersion = '1.5.10.RELEASE'\n-        springVersion = '4.3.6.RELEASE'\n \n         os = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os\n     }\n@@ -180,7 +179,6 @@ configure(project(':common')) {\n         compile \"org.openjfx:javafx-graphics:$javafxVersion:$os\"\n         compile \"com.google.protobuf:protobuf-java:$protobufVersion\"\n         compile 'com.google.code.gson:gson:2.8.5'\n-        compile \"org.springframework:spring-core:$springVersion\"\n         compile \"net.sf.jopt-simple:jopt-simple:$joptVersion\"\n         compile \"org.slf4j:slf4j-api:$slf4jVersion\"\n         compile \"ch.qos.logback:logback-core:$logbackVersion\"\n@@ -216,9 +214,7 @@ configure(project(':p2p')) {\n         compile(\"com.github.JesusMcCloud.netlayer:tor.external:$netlayerVersion\") {\n             exclude(module: 'slf4j-api')\n         }\n-        compile(\"org.apache.httpcomponents:httpclient:$httpclientVersion\") {\n-            exclude(module: 'commons-logging')\n-        }\n+        compile \"org.apache.httpcomponents:httpclient:$httpclientVersion\"\n         compile \"org.fxmisc.easybind:easybind:$easybindVersion\"\n         compileOnly \"org.projectlombok:lombok:$lombokVersion\"\n         annotationProcessor \"org.projectlombok:lombok:$lombokVersion\"\n@@ -275,7 +271,6 @@ configure(project(':core')) {\n \n         testCompile \"org.hamcrest:hamcrest-all:$hamcrestVersion\"\n         testCompile \"org.mockito:mockito-core:$mockitoVersion\"\n-        testCompile \"org.springframework:spring-test:$springVersion\"\n         testCompile \"com.natpryce:make-it-easy:$easyVersion\"\n         testCompileOnly \"org.projectlombok:lombok:$lombokVersion\"\n         testAnnotationProcessor \"org.projectlombok:lombok:$lombokVersion\"\n@@ -356,7 +351,6 @@ configure(project(':desktop')) {\n         annotationProcessor \"org.projectlombok:lombok:$lombokVersion\"\n \n         testCompile \"org.mockito:mockito-core:$mockitoVersion\"\n-        testCompile \"org.springframework:spring-test:$springVersion\"\n         testCompile \"com.natpryce:make-it-easy:$easyVersion\"\n         testCompileOnly \"org.projectlombok:lombok:$lombokVersion\"\n         testAnnotationProcessor \"org.projectlombok:lombok:$lombokVersion\"\n@@ -443,7 +437,6 @@ configure(project(':seednode')) {\n         compile project(':core')\n         compileOnly \"org.projectlombok:lombok:$lombokVersion\"\n         annotationProcessor \"org.projectlombok:lombok:$lombokVersion\"\n-        testCompile \"org.springframework:spring-test:$springVersion\"\n         testCompile \"org.mockito:mockito-core:$mockitoVersion\"\n     }\n }\ndiff --git a/gradle/witness/gradle-witness.gradle b/gradle/witness/gradle-witness.gradle\nindex 9be698d7e9..341402db4e 100644\n--- a/gradle/witness/gradle-witness.gradle\n+++ b/gradle/witness/gradle-witness.gradle\n@@ -85,7 +85,6 @@ dependencyVerification {\n         'org.jetbrains.kotlin:kotlin-stdlib:6ea3d0921b26919b286f05cbdb906266666a36f9a7c096197114f7495708ffbc',\n         'org.jetbrains:annotations:ace2a10dc8e2d5fd34925ecac03e4988b2c0f851650c94b8cef49ba1bd111478',\n         'org.slf4j:slf4j-api:3a4cd4969015f3beb4b5b4d81dbafc01765fb60b8a439955ca64d8476fef553e',\n-        'org.springframework:spring-core:c451e8417adb2ffb2445636da5e44a2f59307c4100037a1fe387c3fba4f29b52',\n         'org.tukaani:xz:a594643d73cc01928cf6ca5ce100e094ea9d73af760a5d4fb6b75fa673ecec96',\n     ]\n }",
    "use the right SaveType .": "diff --git a/findbugs/src/java5/edu/umd/cs/findbugs/gui2/RecentMenu.java b/findbugs/src/java5/edu/umd/cs/findbugs/gui2/RecentMenu.java\nindex 2f95f876d..d260c6d50 100644\n--- a/findbugs/src/java5/edu/umd/cs/findbugs/gui2/RecentMenu.java\n+++ b/findbugs/src/java5/edu/umd/cs/findbugs/gui2/RecentMenu.java\n@@ -92,7 +92,7 @@ public class RecentMenu{\n \t\t\t\tcontinue;\n \t\t\t}\n \n-\t\t\trecentMenu.add(MainFrame.getInstance().createRecentItem(f, SaveType.PROJECT));\n+\t\t\trecentMenu.add(MainFrame.getInstance().createRecentItem(f, SaveType.forFile(f)));\n \t\t}\n \t\t\n \t}",
    "Linger the untethered for the same as window limit timeout .": "diff --git a/aeron-driver/src/main/java/io/aeron/driver/DriverConductor.java b/aeron-driver/src/main/java/io/aeron/driver/DriverConductor.java\nindex d4deb2a93..072972a97 100644\n--- a/aeron-driver/src/main/java/io/aeron/driver/DriverConductor.java\n+++ b/aeron-driver/src/main/java/io/aeron/driver/DriverConductor.java\n@@ -1082,7 +1082,6 @@ public class DriverConductor implements Agent\n             ctx.publicationUnblockTimeoutNs(),\n             ctx.publicationConnectionTimeoutNs(),\n             params.lingerTimeoutNs,\n-            ctx.imageLivenessTimeoutNs(),\n             ctx.untetheredWindowLimitTimeoutNs(),\n             ctx.untetheredRestingTimeoutNs(),\n             isExclusive,\ndiff --git a/aeron-driver/src/main/java/io/aeron/driver/IpcPublication.java b/aeron-driver/src/main/java/io/aeron/driver/IpcPublication.java\nindex 6201bceb5..12a35aa68 100644\n--- a/aeron-driver/src/main/java/io/aeron/driver/IpcPublication.java\n+++ b/aeron-driver/src/main/java/io/aeron/driver/IpcPublication.java\n@@ -385,11 +385,12 @@ public final class IpcPublication implements DriverManagedResource, Subscribable\n                     {\n                         conductor.notifyUnavailableImageLink(registrationId, untethered.subscriptionLink);\n                         untethered.state = UntetheredSubscription.LINGER;\n+                        untethered.timeOfLastUpdateNs = nowNs;\n                     }\n                     break;\n \n                 case UntetheredSubscription.LINGER:\n-                    if ((untethered.timeOfLastUpdateNs + imageLivenessTimeoutNs) - nowNs <= 0)\n+                    if ((untethered.timeOfLastUpdateNs + untetheredWindowLimitTimeoutNs) - nowNs <= 0)\n                     {\n                         subscriberPositions = ArrayUtil.remove(subscriberPositions, untethered.position);\n                         untethered.state = UntetheredSubscription.RESTING;\ndiff --git a/aeron-driver/src/main/java/io/aeron/driver/NetworkPublication.java b/aeron-driver/src/main/java/io/aeron/driver/NetworkPublication.java\nindex e767a9cf6..2a3567ccc 100644\n--- a/aeron-driver/src/main/java/io/aeron/driver/NetworkPublication.java\n+++ b/aeron-driver/src/main/java/io/aeron/driver/NetworkPublication.java\n@@ -100,7 +100,6 @@ public class NetworkPublication\n     private final long unblockTimeoutNs;\n     private final long connectionTimeoutNs;\n     private final long lingerTimeoutNs;\n-    private final long imageLivenessTimeoutNs;\n     private final long untetheredWindowLimitTimeoutNs;\n     private final long untetheredRestingTimeoutNs;\n     private final long tag;\n@@ -170,7 +169,6 @@ public class NetworkPublication\n         final long unblockTimeoutNs,\n         final long connectionTimeoutNs,\n         final long lingerTimeoutNs,\n-        final long imageLivenessTimeoutNs,\n         final long untetheredWindowLimitTimeoutNs,\n         final long untetheredRestingTimeoutNs,\n         final boolean isExclusive,\n@@ -181,7 +179,6 @@ public class NetworkPublication\n         this.unblockTimeoutNs = unblockTimeoutNs;\n         this.connectionTimeoutNs = connectionTimeoutNs;\n         this.lingerTimeoutNs = lingerTimeoutNs;\n-        this.imageLivenessTimeoutNs = imageLivenessTimeoutNs;\n         this.untetheredWindowLimitTimeoutNs = untetheredWindowLimitTimeoutNs;\n         this.untetheredRestingTimeoutNs = untetheredRestingTimeoutNs;\n         this.tag = tag;\n@@ -761,11 +758,12 @@ public class NetworkPublication\n                     {\n                         conductor.notifyUnavailableImageLink(registrationId, untethered.subscriptionLink);\n                         untethered.state = UntetheredSubscription.LINGER;\n+                        untethered.timeOfLastUpdateNs = nowNs;\n                     }\n                     break;\n \n                 case UntetheredSubscription.LINGER:\n-                    if ((untethered.timeOfLastUpdateNs + imageLivenessTimeoutNs) - nowNs <= 0)\n+                    if ((untethered.timeOfLastUpdateNs + untetheredWindowLimitTimeoutNs) - nowNs <= 0)\n                     {\n                         spyPositions = ArrayUtil.remove(spyPositions, untethered.position);\n    ",
    "Add sample with form login": "diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/SecurityAutoConfiguration.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/SecurityAutoConfiguration.java\nindex c50c8f4479..595d391abd 100644\n--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/SecurityAutoConfiguration.java\n+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/SecurityAutoConfiguration.java\n@@ -98,6 +98,9 @@ import org.springframework.security.web.util.matcher.AnyRequestMatcher;\n @EnableConfigurationProperties\n public class SecurityAutoConfiguration {\n \n+\tprivate static List<String> DEFAULT_IGNORED = Arrays.asList(\"/css/**\", \"/js/**\",\n+\t\t\t\"/images/**\", \"/**/favicon.ico\");\n+\n \tprivate static final String[] NO_PATHS = new String[0];\n \n \t@Bean(name = \"org.springframework.actuate.properties.SecurityProperties\")\n@@ -131,9 +134,6 @@ public class SecurityAutoConfiguration {\n \tprivate static class ApplicationWebSecurityConfigurerAdapter extends\n \t\t\tWebSecurityConfigurerAdapter {\n \n-\t\tprivate static List<String> DEFAULT_IGNORED = Arrays.asList(\"/css/**\", \"/js/**\",\n-\t\t\t\t\"/images/**\", \"/**/favicon.ico\");\n-\n \t\t@Autowired\n \t\tprivate SecurityProperties security;\n \n@@ -271,7 +271,19 @@ public class SecurityAutoConfiguration {\n \t\t@Override\n \t\tpublic void configure(WebSecurity builder) throws Exception {\n \t\t\tIgnoredRequestConfigurer ignoring = builder.ignoring();\n-\t\t\tignoring.antMatchers(getEndpointPaths(this.endpointHandlerMapping, false));\n+\t\t\tList<String> ignored = new ArrayList<String>();\n+\t\t\tif (!this.security.getBasic().isEnabled()) {\n+\t\t\t\tignored.addAll(this.security.getIgnored());\n+\t\t\t\tif (ignored.isEmpty()) {\n+\t\t\t\t\tignored.addAll(DEFAULT_IGNORED);\n+\t\t\t\t}\n+\t\t\t\telse if (ignored.contains(\"none\")) {\n+\t\t\t\t\tignored.remove(\"none\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tignored.addAll(Arrays.asList(getEndpointPaths(this.endpointHandlerMapping,\n+\t\t\t\t\tfalse)));\n+\t\t\tignoring.antMatchers(ignored.toArray(new String[0]));\n \t\t}\n \n \t\tprivate AuthenticationEntryPoint entryPoint() {\ndiff --git a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SecurityAutoConfigurationTests.java b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SecurityAutoConfigurationTests.java\nindex 38e8d32bbe..b43b24d397 100644\n--- a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SecurityAutoConfigurationTests.java\n+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SecurityAutoConfigurationTests.java\n@@ -66,7 +66,7 @@ public class SecurityAutoConfigurationTests {\n \t\t\t\tPropertyPlaceholderAutoConfiguration.class);\n \t\tTestUtils.addEnviroment(this.context, \"security.ignored:none\");\n \t\tthis.context.refresh();\n-\t\t// Just the application and\\ management endpoints now\n+\t\t// Just the application and management endpoints now\n \t\tassertEquals(2, this.context.getBean(FilterChainProxy.class).getFilterChains()\n \t\t\t\t.size());\n \t}\n@@ -81,8 +81,8 @@ public class SecurityAutoConfigurationTests {\n \t\t\t\tPropertyPlaceholderAutoConfiguration.class);\n \t\tTestUtils.addEnviroment(this.context, \"security.basic.enabled:false\");\n \t\tthis.context.refresh();\n-\t\t// Just the management endpoints now\n-\t\tassertEquals(1, this.context.getBean(FilterChainProxy.class).getFilterChains()\n+\t\t// Just the management endpoints and default ignores now\n+\t\tassertEquals(5, this.context.getBean(FilterChainProxy.class).getFilterChains()\n \t\t\t\t.size());\n \t}\n \ndiff --git a/spring-boot-samples/spring-boot-sample-actuator-ui/src/main/java/org/springframework/boot/sample/ops/ui/SampleActuatorUiApplication.java b/spring-boot-samples/spring-boot-sample-actuator-ui/src/main/java/org/springframework/boot/sample/ops/ui/SampleActuatorUiApplication.java\nindex 1206e05a49..48ef553d0d 100644\n--- a/spring-boot-samples/spring-boot-sample-actuator-ui/src/main/java/org/springframework/boot/sample/ops/ui/SampleActuatorUiApplication.java\n+++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/main/java/org/springframework/boot/sample/ops/ui/SampleActuatorUiApplication.java\n@@ -52,7 +52,7 @@ public class SampleActuatorUiApplication {\n \t@Bean\n \tpublic SecurityProperties securityProperties() {\n \t\tSecurityProperties security = new SecurityProperties();\n-\t\tsecurity.getBasic().setPath(\"\"); // empty\n+\t\tsecurity.getBasic().setPath(\"\"); // empty so home page is unsecured\n \t\treturn security;\n \t}\n \ndiff --git a/spring-boot-samples/spring-boot-sample-secure/pom.xml b/spring-boot-samples/spring-boot-sample-secure/pom.xml\nnew file mode 100644\nindex 0000000000..208697a117\n--- /dev/null\n+++ b/spring-boot-samples/spring-boot-sample-secure/pom.xml\n@@ -0,0 +1,48 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<parent>\n+\t\t<!-- Your own application should inherit from spring-boot-starter-parent -->\n+\t\t<groupId>org.springframework.boot</groupId>\n+\t\t<artifactId>spring-boot-samples</artifactId>\n+\t\t<version>0.5.0.BUILD-SNAPSHOT</version>\n+\t</parent>\n+\t<artifactId>spring-boot-sample-secure</artifactId>\n+\t<packaging>jar</packaging>\n+\t<properties>\n+\t\t<main.basedir>${basedir}/../..</main.basedir>\n+\t</properties>\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>${project.groupId}</groupId>\n+\t\t\t<artifactId>spring-boot-starter-actuator</artifactId>\n+\t\t\t<version>${project.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>${project.groupId}</groupId>\n+\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n+\t\t\t<version>${project.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.security</groupId>\n+\t\t\t<artifactId>spring-security-config</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.security</groupId>\n+\t\t\t<artifactId>spring-security-web</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.thymeleaf</groupId>\n+\t\t\t<artifactId>thymeleaf-spring3</artifactId>\n+\t\t</dependency>\n+\t</dependencies>\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+</project>\ndiff --git a/spring-boot-samples/spring-boot-sample-secure/src/main/java/org/springframework/boot/sample/ops/ui/SampleSecureApplication.java b/spring-boot-samples/spring-boot-sample-secure/src/main/java/org/springframework/boot/sample/ops/ui/SampleSecureApplication.java\nnew file mode 100644\nindex 0000000000..672bc5baf1\n--- /dev/null\n+++ b/spring-boot-samples/spring-boot-sample-secure/src/main/java/org/springframework/boot/sample/ops/ui/SampleSecureApplication.java\n@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2012-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.sample.ops.ui;\n+\n+import java.util.Date;\n+import java.util.Map;\n+\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.builder.SpringApplicationBuilder;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.core.Ordered;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;\n+import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\n+\n+@EnableAutoConfiguration\n+@ComponentScan\n+@Controller\n+public class SampleSecureApplication extends WebMvcConfigurerAdapter {\n+\n+\t@RequestMapping(\"/\")\n+\tpublic String home(Map<String, Object> model) {\n+\t\tmodel.put(\"message\", \"Hello World\");\n+\t\tmodel.put(\"title\", \"Hello Home\");\n+\t\tmodel.put(\"date\", new Date());\n+\t\treturn \"home\";\n+\t}\n+\n+\t@RequestMapping(\"/foo\")\n+\tpublic String foo() {\n+\t\tthrow new RuntimeException(\"Expected exception in controller\");\n+\t}\n+\n+\tpublic static void main(String[] args) throws Exception {\n+\t\t// Set user password to \"password\" for demo purposes only\n+\t\tnew SpringApplicationBuilder(SampleSecureApplication.class).properties(\n+\t\t\t\t\"security.basic.enabled=false\", \"security.user.password=password\").run(args);\n+\t}\n+\n+\t@Override\n+\tpublic void addViewControllers(ViewControllerRegistry registry) {\n+\t\tregistry.addViewController(\"/login\").setViewName(\"login\");\n+\t}\n+\n+\t@Bean\n+\tpublic ApplicationSecurity applicationSecurity() {\n+\t\treturn new ApplicationSecurity();\n+\t}\n+\n+\t@Order(Ordered.LOWEST_PRECEDENCE - 8)\n+\tprotected static class ApplicationSecurity extends WebSecurityConfigurerAdapter {\n+\t\t@Override\n+\t\tprotected void configure(HttpSecurity http) throws Exception {\n+\t\t\thttp.authorizeRequests().anyRequest().fullyAuthenticated().and().formLogin()\n+\t\t\t\t\t.loginPage(\"/login\").failureUrl(\"/login?error\").permitAll();\n+\t\t}\n+\t}\n+\n+}\ndiff --git a/spring-boot-samples/spring-boot-sample-secure/src/main/resources/application.properties b/spring-boot-samples/spring-boot-sample-secure/src/main/resources/application.properties\nnew file mode 100644\nindex 0000000000..760bdc35a2\n--- /dev/null\n+++ b/spring-boot-samples/spring-boot-sample-secure/src/main/resources/application.properties\n@@ -0,0 +1 @@\n+spring.thymeleaf.cache: false\n\\ No newline at end of file\ndiff --git a/spring-boot-samples/spring-boot-sample-secure/src/main/resources/logback.xml b/spring-boot-samples/spring-boot-sample-secure/src/main/resources/logback.xml\nnew file mode 100644\nindex 0000000000..6173a50684\n--- /dev/null\n+++ b/spring-boot-samples/spring-boot-sample-secure/src/main/resources/logback.xml\n@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<configuration>\n+\t<include resource=\"org/springframework/boot/logging/logback/base.xml\"/>\t\n+\t<!-- logger name=\"org.springframework.boot\" level=\"DEBUG\"/-->\n+\t<logger name=\"org.springframework.security\" level=\"DEBUG\"/>\n+</configuration>\ndiff --git a/spring-boot-samples/spring-boot-sample-secure/src/main/resources/static/css/bootstrap.min.css b/spring-boot-samples/spring-boot-sample-secure/src/main/resources/static/css/bootstrap.min.css\nnew file mode 100644\nindex 0000000000..5589964e71\n--- /dev/null\n+++ b/spring-boot-samples/spring-boot-sample-secure/src/main/resources/static/css/bootstrap.min.css\n@@ -0,0 +1,11 @@\n+/*!\n+ * Bootstrap v2.0.4\n+ *\n+ * Copyright 2012 Twitter, Inc\n+ * Licensed under the Apache License v2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Designed and built with all the love in the world @twitter by @mdo and @fat.\n+ */article,aside,details,figcaption,figure,footer,header,hgroup,nav,section{display:block}audio,canvas,video{display:inline-block;*display:inline;*zoom:1}audio:not([controls]){display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted #333;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}a:hover,a:active{outline:0}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{max-width:100%;vertical-align:middle;border:0;-ms-interpolation-mode:bicubic}#map_canvas img{max-width:none}button,input,select,textarea{margin:0;font-size:100%;vertical-align:middle}button,input{*overflow:visible;line-height:normal}button::-moz-focus-inner,input::-moz-focus-inner{padding:0;border:0}button,input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"]{cursor:pointer;-webkit-appearance:button}input[type=\"search\"]{-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;-webkit-appearance:textfield}input[type=\"search\"]::-webkit-search-decoration,input[type=\"search\"]::-webkit-search-cancel-button{-webkit-appearance:none}textarea{overflow:auto;vertical-align:top}.clearfix{*zoom:1}.clearfix:before,.clearfix:after{display:table;content:\"\"}.clearfix:after{clear:both}.hide-text{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.input-block-level{display:block;width:100%;min-height:28px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box}body{margin:0;font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;font-size:13px;line-height:18px;color:#333;background-color:#fff}a{color:#08c;text-decoration:none}a:hover{color:#005580;text-decoration:underline}.row{margin-left:-20px;*zoom:1}.row:before,.row:after{display:table;content:\"\"}.row:after{clear:both}[class*=\"span\"]{float:left;margin-left:20px}.container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:940px}.span12{width:940px}.span11{width:860px}.span10{width:780px}.span9{width:700px}.span8{width:620px}.span7{width:540px}.span6{width:460px}.span5{width:380px}.span4{width:300px}.span3{width:220px}.span2{width:140px}.span1{width:60px}.offset12{margin-left:980px}.offset11{margin-left:900px}.offset10{margin-left:820px}.offset9{margin-left:740px}.offset8{margin-left:660px}.offset7{margin-left:580px}.offset6{margin-left:500px}.offset5{margin-left:420px}.offset4{margin-left:340px}.offset3{margin-left:260px}.offset2{margin-left:180px}.offset1{margin-left:100px}.row-fluid{width:100%;*zoom:1}.row-fluid:before,.row-fluid:after{display:table;content:\"\"}.row-fluid:after{clear:both}.row-fluid [class*=\"span\"]{display:block;float:left;width:100%;min-height:28px;margin-left:2.127659574%;*margin-left:2.0744680846382977%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box}.row-fluid [class*=\"span\"]:first-child{margin-left:0}.row-fluid .span12{width:99.99999998999999%;*width:99.94680850063828%}.row-fluid .span11{width:91.489361693%;*width:91.4361702036383%}.row-fluid .span10{width:82.97872339599999%;*width:82.92553190663828%}.row-fluid .span9{width:74.468085099%;*width:74.4148936096383%}.row-fluid .span8{width:65.95744680199999%;*width:65.90425531263828%}.row-fluid .span7{width:57.446808505%;*width:57.3936170156383%}.row-fluid .span6{width:48.93617020799999%;*width:48.88297871863829%}.row-fluid .span5{width:40.425531911%;*width:40.3723404216383%}.row-fluid .span4{width:31.914893614%;*width:31.8617021246383%}.row-fluid .span3{width:23.404255317%;*width:23.3510638276383%}.row-fluid .span2{width:14.89361702%;*width:14.8404255306383%}.row-fluid .span1{width:6.382978723%;*width:6.329787233638298%}.container{margin-right:auto;margin-left:auto;*zoom:1}.container:before,.container:after{display:table;content:\"\"}.container:after{clear:both}.container-fluid{padding-right:20px;padding-left:20px;*zoom:1}.container-fluid:before,.container-fluid:after{display:table;content:\"\"}.container-fluid:after{clear:both}p{margin:0 0 9px}p small{font-size:11px;color:#999}.lead{margin-bottom:18px;font-size:20px;font-weight:200;line-height:27px}h1,h2,h3,h4,h5,h6{margin:0;font-family:inherit;font-weight:bold;color:inherit;text-rendering:optimizelegibility}h1 small,h2 small,h3 small,h4 small,h5 small,h6 small{font-weight:normal;color:#999}h1{font-size:30px;line-height:36px}h1 small{font-size:18px}h2{font-size:24px;line-height:36px}h2 small{font-size:18px}h3{font-size:18px;line-height:27px}h3 small{font-size:14px}h4,h5,h6{line-height:18px}h4{font-size:14px}h4 small{font-size:12px}h5{font-size:12px}h6{font-size:11px;color:#999;text-transform:uppercase}.page-header{padding-bottom:17px;margin:18px 0;border-bottom:1px solid #eee}.page-header h1{line-height:1}ul,ol{padding:0;margin:0 0 9px 25px}ul ul,ul ol,ol ol,ol ul{margin-bottom:0}ul{list-style:disc}ol{list-style:decimal}li{line-height:18px}ul.unstyled,ol.unstyled{margin-left:0;list-style:none}dl{margin-bottom:18px}dt,dd{line-height:18px}dt{font-weight:bold;line-height:17px}dd{margin-left:9px}.dl-horizontal dt{float:left;width:120px;overflow:hidden;clear:left;text-align:right;text-overflow:ellipsis;white-space:nowrap}.dl-horizontal dd{margin-left:130px}hr{margin:18px 0;border:0;border-top:1px solid #eee;border-bottom:1px solid #fff}strong{font-weight:bold}em{font-style:italic}.muted{color:#999}abbr[title]{cursor:help;border-bottom:1px dotted #999}abbr.initialism{font-size:90%;text-transform:uppercase}blockquote{padding:0 0 0 15px;margin:0 0 18px;border-left:5px solid #eee}blockquote p{margin-bottom:0;font-size:16px;font-weight:300;line-height:22.5px}blockquote small{display:block;line-height:18px;color:#999}blockquote small:before{content:'\\2014 \\00A0'}blockquote.pull-right{float:right;padding-right:15px;padding-left:0;border-right:5px solid #eee;border-left:0}blockquote.pull-right p,blockquote.pull-right small{text-align:right}q:before,q:after,blockquote:before,blockquote:after{content:\"\"}address{display:block;margin-bottom:18px;font-style:normal;line-height:18px}small{font-size:100%}cite{font-style:normal}code,pre{padding:0 3px 2px;font-family:Menlo,Monaco,Consolas,\"Courier New\",monospace;font-size:12px;color:#333;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}code{padding:2px 4px;color:#d14;background-color:#f7f7f9;border:1px solid #e1e1e8}pre{display:block;padding:8.5px;margin:0 0 9px;font-size:12.025px;line-height:18px;word-break:break-all;word-wrap:break-word;white-space:pre;white-space:pre-wrap;background-color:#f5f5f5;border:1px solid #ccc;border:1px solid rgba(0,0,0,0.15);-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}pre.prettyprint{margin-bottom:18px}pre code{padding:0;color:inherit;background-color:transparent;border:0}.pre-scrollable{max-height:340px;overflow-y:scroll}form{margin:0 0 18px}fieldset{padding:0;margin:0;border:0}legend{display:block;width:100%;padding:0;margin-bottom:27px;font-size:19.5px;line-height:36px;color:#333;border:0;border-bottom:1px solid #e5e5e5}legend small{font-size:13.5px;color:#999}label,input,button,select,textarea{font-size:13px;font-weight:normal;line-height:18px}input,button,select,textarea{font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif}label{display:block;margin-bottom:5px}select,textarea,input[type=\"text\"],input[type=\"password\"],input[type=\"datetime\"],input[type=\"datetime-local\"],input[type=\"date\"],input[type=\"month\"],input[type=\"time\"],input[type=\"week\"],input[type=\"number\"],input[type=\"email\"],input[type=\"url\"],input[type=\"search\"],input[type=\"tel\"],input[type=\"color\"],.uneditable-input{display:inline-block;height:18px;padding:4px;margin-bottom:9px;font-size:13px;line-height:18px;color:#555}input,textarea{width:210px}textarea{height:auto}textarea,input[type=\"text\"],input[type=\"password\"],input[type=\"datetime\"],input[type=\"datetime-local\"],input[type=\"date\"],input[type=\"month\"],input[type=\"time\"],input[type=\"week\"],input[type=\"number\"],input[type=\"email\"],input[type=\"url\"],input[type=\"search\"],input[type=\"tel\"],input[type=\"color\"],.uneditable-input{background-color:#fff;border:1px solid #ccc;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);-webkit-transition:border linear .2s,box-shadow linear .2s;-moz-transition:border linear .2s,box-shadow linear .2s;-ms-transition:border linear .2s,box-shadow linear .2s;-o-transition:border linear .2s,box-shadow linear .2s;transition:border linear .2s,box-shadow linear .2s}textarea:focus,input[type=\"text\"]:focus,input[type=\"password\"]:focus,input[type=\"datetime\"]:focus,input[type=\"datetime-local\"]:focus,input[type=\"date\"]:focus,input[type=\"month\"]:focus,input[type=\"time\"]:focus,input[type=\"week\"]:focus,input[type=\"number\"]:focus,input[type=\"email\"]:focus,input[type=\"url\"]:focus,input[type=\"search\"]:focus,input[type=\"tel\"]:focus,input[type=\"color\"]:focus,.uneditable-input:focus{border-color:rgba(82,168,236,0.8);outline:0;outline:thin dotted \\9;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(82,168,236,0.6);-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(82,168,236,0.6);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(82,168,236,0.6)}input[type=\"radio\"],input[type=\"checkbox\"]{margin:3px 0;*margin-top:0;line-height:normal;cursor:pointer}input[type=\"submit\"],input[type=\"reset\"],input[type=\"button\"],input[type=\"radio\"],input[type=\"checkbox\"]{width:auto}.uneditable-textarea{width:auto;height:auto}select,input[type=\"file\"]{height:28px;*margin-top:4px;line-height:28px}select{width:220px;border:1px solid #bbb}select[multiple],select[size]{height:auto}select:focus,input[type=\"file\"]:focus,input[type=\"radio\"]:focus,input[type=\"checkbox\"]:focus{outline:thin dotted #333;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.radio,.checkbox{min-height:18px;padding-left:18px}.radio input[type=\"radio\"],.checkbox input[type=\"checkbox\"]{float:left;margin-left:-18px}.controls>.radio:first-child,.controls>.checkbox:first-child{padding-top:5px}.radio.inline,.checkbox.inline{display:inline-block;padding-top:5px;margin-bottom:0;vertical-align:middle}.radio.inline+.radio.inline,.checkbox.inline+.checkbox.inline{margin-left:10px}.input-mini{width:60px}.input-small{width:90px}.input-medium{width:150px}.input-large{width:210px}.input-xlarge{width:270px}.input-xxlarge{width:530px}input[class*=\"span\"],select[class*=\"span\"],textarea[class*=\"span\"],.uneditable-input[class*=\"span\"],.row-fluid input[class*=\"span\"],.row-fluid select[class*=\"span\"],.row-fluid textarea[class*=\"span\"],.row-fluid .uneditable-input[class*=\"span\"]{float:none;margin-left:0}.input-append input[class*=\"span\"],.input-append .uneditable-input[class*=\"span\"],.input-prepend input[class*=\"span\"],.input-prepend .uneditable-input[class*=\"span\"],.row-fluid .input-prepend [class*=\"span\"],.row-fluid .input-append [class*=\"span\"]{display:inline-block}input,textarea,.uneditable-input{margin-left:0}input.span12,textarea.span12,.uneditable-input.span12{width:930px}input.span11,textarea.span11,.uneditable-input.span11{width:850px}input.span10,textarea.span10,.uneditable-input.span10{width:770px}input.span9,textarea.span9,.uneditable-input.span9{width:690px}input.span8,textarea.span8,.uneditable-input.span8{width:610px}input.span7,textarea.span7,.uneditable-input.span7{width:530px}input.span6,textarea.span6,.uneditable-input.span6{width:450px}input.span5,textarea.span5,.uneditable-input.span5{width:370px}input.span4,textarea.span4,.uneditable-input.span4{width:290px}input.span3,textarea.span3,.uneditable-input.span3{width:210px}input.span2,textarea.span2,.uneditable-input.span2{width:130px}input.span1,textarea.span1,.uneditable-input.span1{width:50px}input[disabled],select[disabled],textarea[disabled],input[readonly],select[readonly],textarea[readonly]{cursor:not-allowed;background-color:#eee;border-color:#ddd}input[type=\"radio\"][disabled],input[type=\"checkbox\"][disabled],input[type=\"radio\"][readonly],input[type=\"checkbox\"][readonly]{background-color:transparent}.control-group.warning>label,.control-group.warning .help-block,.control-group.warning .help-inline{color:#c09853}.control-group.warning .checkbox,.control-group.warning .radio,.control-group.warning input,.control-group.warning select,.control-group.warning textarea{color:#c09853;border-color:#c09853}.control-group.warning .checkbox:focus,.control-group.warning .radio:focus,.control-group.warning input:focus,.control-group.warning select:focus,.control-group.warning textarea:focus{border-color:#a47e3c;-webkit-box-shadow:0 0 6px #dbc59e;-moz-box-shadow:0 0 6px #dbc59e;box-shadow:0 0 6px #dbc59e}.control-group.warning .input-prepend .add-on,.control-group.warning .input-append .add-on{color:#c09853;background-color:#fcf8e3;border-color:#c09853}.control-group.error>label,.control-group.error .help-block,.control-group.error .help-inline{color:#b94a48}.control-group.error .checkbox,.control-group.error .radio,.control-group.error input,.control-group.error select,.control-group.error textarea{color:#b94a48;border-color:#b94a48}.control-group.error .checkbox:focus,.control-group.error .radio:focus,.control-group.error input:focus,.control-group.error select:focus,.control-group.error textarea:focus{border-color:#953b39;-webkit-box-shadow:0 0 6px #d59392;-moz-box-shadow:0 0 6px #d59392;box-shadow:0 0 6px #d59392}.control-group.error .input-prepend .add-on,.control-group.error .input-append .add-on{color:#b94a48;background-color:#f2dede;border-color:#b94a48}.control-group.success>label,.control-group.success .help-block,.control-group.success .help-inline{color:#468847}.control-group.success .checkbox,.control-group.success .radio,.control-group.success input,.control-group.success select,.control-group.success textarea{color:#468847;border-color:#468847}.control-group.success .checkbox:focus,.control-group.success .radio:focus,.control-group.success input:focus,.control-group.success select:focus,.control-group.success textarea:focus{border-color:#356635;-webkit-box-shadow:0 0 6px #7aba7b;-moz-box-shadow:0 0 6px #7aba7b;box-shadow:0 0 6px #7aba7b}.control-group.success .input-prepend .add-on,.control-group.success .input-append .add-on{color:#468847;background-color:#dff0d8;border-color:#468847}input:focus:required:invalid,textarea:focus:required:invalid,select:focus:required:invalid{color:#b94a48;border-color:#ee5f5b}input:focus:required:invalid:focus,textarea:focus:required:invalid:focus,select:focus:required:invalid:focus{border-color:#e9322d;-webkit-box-shadow:0 0 6px #f8b9b7;-moz-box-shadow:0 0 6px #f8b9b7;box-shadow:0 0 6px #f8b9b7}.form-actions{padding:17px 20px 18px;margin-top:18px;margin-bottom:18px;background-color:#f5f5f5;border-top:1px solid #e5e5e5;*zoom:1}.form-actions:before,.form-actions:after{display:table;content:\"\"}.form-actions:after{clear:both}.uneditable-input{overflow:hidden;white-space:nowrap;cursor:not-allowed;background-color:#fff;border-color:#eee;-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,0.025);-moz-box-shadow:inset 0 1px 2px rgba(0,0,0,0.025);box-shadow:inset 0 1px 2px rgba(0,0,0,0.025)}:-moz-placeholder{color:#999}:-ms-input-placeholder{color:#999}::-webkit-input-placeholder{color:#999}.help-block,.help-inline{color:#555}.help-block{display:block;margin-bottom:9px}.help-inline{display:inline-block;*display:inline;padding-left:5px;vertical-align:middle;*zoom:1}.input-prepend,.input-append{margin-bottom:5px}.input-prepend input,.input-append input,.input-prepend select,.input-append select,.input-prepend .uneditable-input,.input-append .uneditable-input{position:relative;margin-bottom:0;*margin-left:0;vertical-align:middle;-webkit-border-radius:0 3px 3px 0;-moz-border-radius:0 3px 3px 0;border-radius:0 3px 3px 0}.input-prepend input:focus,.input-append input:focus,.input-prepend select:focus,.input-append select:focus,.input-prepend .uneditable-input:focus,.input-append .uneditable-input:focus{z-index:2}.input-prepend .uneditable-input,.input-append .uneditable-input{border-left-color:#ccc}.input-prepend .add-on,.input-append .add-on{display:inline-block;width:auto;height:18px;min-width:16px;padding:4px 5px;font-weight:normal;line-height:18px;text-align:center;text-shadow:0 1px 0 #fff;vertical-align:middle;background-color:#eee;border:1px solid #ccc}.input-prepend .add-on,.input-append .add-on,.input-prepend .btn,.input-append .btn{margin-left:-1px;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.input-prepend .active,.input-append .active{background-color:#a9dba9;border-color:#46a546}.input-prepend .add-on,.input-prepend .btn{margin-right:-1px}.input-prepend .add-on:first-child,.input-prepend .btn:first-child{-webkit-border-radius:3px 0 0 3px;-moz-border-radius:3px 0 0 3px;border-radius:3px 0 0 3px}.input-append input,.input-append select,.input-append .uneditable-input{-webkit-border-radius:3px 0 0 3px;-moz-border-radius:3px 0 0 3px;border-radius:3px 0 0 3px}.input-append .uneditable-input{border-right-color:#ccc;border-left-color:#eee}.input-append .add-on:last-child,.input-append .btn:last-child{-webkit-border-radius:0 3px 3px 0;-moz-border-radius:0 3px 3px 0;border-radius:0 3px 3px 0}.input-prepend.input-append input,.input-prepend.input-append select,.input-prepend.input-append .uneditable-input{-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.input-prepend.input-append .add-on:first-child,.input-prepend.input-append .btn:first-child{margin-right:-1px;-webkit-border-radius:3px 0 0 3px;-moz-border-radius:3px 0 0 3px;border-radius:3px 0 0 3px}.input-prepend.input-append .add-on:last-child,.input-prepend.input-append .btn:last-child{margin-left:-1px;-webkit-border-radius:0 3px 3px 0;-moz-border-radius:0 3px 3px 0;border-radius:0 3px 3px 0}.search-query{padding-right:14px;padding-right:4px \\9;padding-left:14px;padding-left:4px \\9;margin-bottom:0;-webkit-border-radius:14px;-moz-border-radius:14px;border-radius:14px}.form-search input,.form-inline input,.form-horizontal input,.form-search textarea,.form-inline textarea,.form-horizontal textarea,.form-search select,.form-inline select,.form-horizontal select,.form-search .help-inline,.form-inline .help-inline,.form-horizontal .help-inline,.form-search .uneditable-input,.form-inline .uneditable-input,.form-horizontal .uneditable-input,.form-search .input-prepend,.form-inline .input-prepend,.form-horizontal .input-prepend,.form-search .input-append,.form-inline .input-append,.form-horizontal .input-append{display:inline-block;*display:inline;margin-bottom:0;*zoom:1}.form-search .hide,.form-inline .hide,.form-horizontal .hide{display:none}.form-search label,.form-inline label{display:inline-block}.form-search .input-append,.form-inline .input-append,.form-search .input-prepend,.form-inline .input-prepend{margin-bottom:0}.form-search .radio,.form-search .checkbox,.form-inline .radio,.form-inline .checkbox{padding-left:0;margin-bottom:0;vertical-align:middle}.form-search .radio input[type=\"radio\"],.form-search .checkbox input[type=\"checkbox\"],.form-inline .radio input[type=\"radio\"],.form-inline .checkbox input[type=\"checkbox\"]{float:left;margin-right:3px;margin-left:0}.control-group{margin-bottom:9px}legend+.control-group{margin-top:18px;-webkit-margin-top-collapse:separate}.form-horizontal .control-group{margin-bottom:18px;*zoom:1}.form-horizontal .control-group:before,.form-horizontal .control-group:after{display:table;content:\"\"}.form-horizontal .control-group:after{clear:both}.form-horizontal .control-label{float:left;width:140px;padding-top:5px;text-align:right}.form-horizontal .controls{*display:inline-block;*padding-left:20px;margin-left:160px;*margin-left:0}.form-horizontal .controls:first-child{*padding-left:160px}.form-horizontal .help-block{margin-top:9px;margin-bottom:0}.form-horizontal .form-actions{padding-left:160px}table{max-width:100%;background-color:transparent;border-collapse:collapse;border-spacing:0}.table{width:100%;margin-bottom:18px}.table th,.table td{padding:8px;line-height:18px;text-align:left;vertical-align:top;border-top:1px solid #ddd}.table th{font-weight:bold}.table thead th{vertical-align:bottom}.table caption+thead tr:first-child th,.table caption+thead tr:first-child td,.table colgroup+thead tr:first-child th,.table colgroup+thead tr:first-child td,.table thead:first-child tr:first-child th,.table thead:first-child tr:first-child td{border-top:0}.table tbody+tbody{border-top:2px solid #ddd}.table-condensed th,.table-condensed td{padding:4px 5px}.table-bordered{border:1px solid #ddd;border-collapse:separate;*border-collapse:collapsed;border-left:0;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.table-bordered th,.table-bordered td{border-left:1px solid #ddd}.table-bordered caption+thead tr:first-child th,.table-bordered caption+tbody tr:first-child th,.table-bordered caption+tbody tr:first-child td,.table-bordered colgroup+thead tr:first-child th,.table-bordered colgroup+tbody tr:first-child th,.table-bordered colgroup+tbody tr:first-child td,.table-bordered thead:first-child tr:first-child th,.table-bordered tbody:first-child tr:first-child th,.table-bordered tbody:first-child tr:first-child td{border-top:0}.table-bordered thead:first-child tr:first-child th:first-child,.table-bordered tbody:first-child tr:first-child td:first-child{-webkit-border-top-left-radius:4px;border-top-left-radius:4px;-moz-border-radius-topleft:4px}.table-bordered thead:first-child tr:first-child th:last-child,.table-bordered tbody:first-child tr:first-child td:last-child{-webkit-border-top-right-radius:4px;border-top-right-radius:4px;-moz-border-radius-topright:4px}.table-bordered thead:last-child tr:last-child th:first-child,.table-bordered tbody:last-child tr:last-child td:first-child{-webkit-border-radius:0 0 0 4px;-moz-border-radius:0 0 0 4px;border-radius:0 0 0 4px;-webkit-border-bottom-left-radius:4px;border-bottom-left-radius:4px;-moz-border-radius-bottomleft:4px}.table-bordered thead:last-child tr:last-child th:last-child,.table-bordered tbody:last-child tr:last-child td:last-child{-webkit-border-bottom-right-radius:4px;border-bottom-right-radius:4px;-moz-border-radius-bottomright:4px}.table-striped tbody tr:nth-child(odd) td,.table-striped tbody tr:nth-child(odd) th{background-color:#f9f9f9}.table tbody tr:hover td,.table tbody tr:hover th{background-color:#f5f5f5}table .span1{float:none;width:44px;margin-left:0}table .span2{float:none;width:124px;margin-left:0}table .span3{float:none;width:204px;margin-left:0}table .span4{float:none;width:284px;margin-left:0}table .span5{float:none;width:364px;margin-left:0}table .span6{float:none;width:444px;margin-left:0}table .span7{float:none;width:524px;margin-left:0}table .span8{float:none;width:604px;margin-left:0}table .span9{float:none;width:684px;margin-left:0}table .span10{float:none;width:764px;margin-left:0}table .span11{float:none;width:844px;margin-left:0}table .span12{float:none;width:924px;margin-left:0}table .span13{float:none;width:1004px;margin-left:0}table .span14{float:none;width:1084px;margin-left:0}table .span15{float:none;width:1164px;margin-left:0}table .span16{float:none;width:1244px;margin-left:0}table .span17{float:none;width:1324px;margin-left:0}table .span18{float:none;width:1404px;margin-left:0}table .span19{float:none;width:1484px;margin-left:0}table .span20{float:none;width:1564px;margin-left:0}table .span21{float:none;width:1644px;margin-left:0}table .span22{float:none;width:1724px;margin-left:0}table .span23{float:none;width:1804px;margin-left:0}table .span24{float:none;width:1884px;margin-left:0}[class^=\"icon-\"],[class*=\" icon-\"]{display:inline-block;width:14px;height:14px;*margin-right:.3em;line-height:14px;vertical-align:text-top;background-image:url(\"../img/glyphicons-halflings.png\");background-position:14px 14px;background-repeat:no-repeat}[class^=\"icon-\"]:last-child,[class*=\" icon-\"]:last-child{*margin-left:0}.icon-white{background-image:url(\"../img/glyphicons-halflings-white.png\")}.icon-glass{background-position:0 0}.icon-music{background-position:-24px 0}.icon-search{background-position:-48px 0}.icon-envelope{background-position:-72px 0}.icon-heart{background-position:-96px 0}.icon-star{background-position:-120px 0}.icon-star-empty{background-position:-144px 0}.icon-user{background-position:-168px 0}.icon-film{background-position:-192px 0}.icon-th-large{background-position:-216px 0}.icon-th{background-position:-240px 0}.icon-th-list{background-position:-264px 0}.icon-ok{background-position:-288px 0}.icon-remove{background-position:-312px 0}.icon-zoom-in{background-position:-336px 0}.icon-zoom-out{background-position:-360px 0}.icon-off{background-position:-384px 0}.icon-signal{background-position:-408px 0}.icon-cog{background-position:-432px 0}.icon-trash{background-position:-456px 0}.icon-home{background-position:0 -24px}.icon-file{background-position:-24px -24px}.icon-time{background-position:-48px -24px}.icon-road{background-position:-72px -24px}.icon-download-alt{background-position:-96px -24px}.icon-download{background-position:-120px -24px}.icon-upload{background-position:-144px -24px}.icon-inbox{background-position:-168px -24px}.icon-play-circle{background-position:-192px -24px}.icon-repeat{background-position:-216px -24px}.icon-refresh{background-position:-240px -24px}.icon-list-alt{background-position:-264px -24px}.icon-lock{background-position:-287px -24px}.icon-flag{background-position:-312px -24px}.icon-headphones{background-position:-336px -24px}.icon-volume-off{background-position:-360px -24px}.icon-volume-down{background-position:-384px -24px}.icon-volume-up{background-position:-408px -24px}.icon-qrcode{background-position:-432px -24px}.icon-barcode{background-position:-456px -24px}.icon-tag{background-position:0 -48px}.icon-tags{background-position:-25px -48px}.icon-book{background-position:-48px -48px}.icon-bookmark{background-position:-72px -48px}.icon-print{background-position:-96px -48px}.icon-camera{background-position:-120px -48px}.icon-font{background-position:-144px -48px}.icon-bold{background-position:-167px -48px}.icon-italic{background-position:-192px -48px}.icon-text-height{background-position:-216px -48px}.icon-text-width{background-position:-240px -48px}.icon-align-left{background-position:-264px -48px}.icon-align-center{background-position:-288px -48px}.icon-align-right{background-position:-312px -48px}.icon-align-justify{background-position:-336px -48px}.icon-list{background-position:-360px -48px}.icon-indent-left{background-position:-384px -48px}.icon-indent-right{background-position:-408px -48px}.icon-facetime-video{background-position:-432px -48px}.icon-picture{background-position:-456px -48px}.icon-pencil{background-position:0 -72px}.icon-map-marker{background-position:-24px -72px}.icon-adjust{background-position:-48px -72px}.icon-tint{background-position:-72px -72px}.icon-edit{background-position:-96px -72px}.icon-share{background-position:-120px -72px}.icon-check{background-position:-144px -72px}.icon-move{background-position:-168px -72px}.icon-step-backward{background-position:-192px -72px}.icon-fast-backward{background-position:-216px -72px}.icon-backward{background-position:-240px -72px}.icon-play{background-position:-264px -72px}.icon-pause{background-position:-288px -72px}.icon-stop{background-position:-312px -72px}.icon-forward{background-position:-336px -72px}.icon-fast-forward{background-position:-360px -72px}.icon-step-forward{background-position:-384px -72px}.icon-eject{background-position:-408px -72px}.icon-chevron-left{background-position:-432px -72px}.icon-chevron-right{background-position:-456px -72px}.icon-plus-sign{background-position:0 -96px}.icon-minus-sign{background-position:-24px -96px}.icon-remove-sign{background-position:-48px -96px}.icon-ok-sign{background-position:-72px -96px}.icon-question-sign{background-position:-96px -96px}.icon-info-sign{background-position:-120px -96px}.icon-screenshot{background-position:-144px -96px}.icon-remove-circle{background-position:-168px -96px}.icon-ok-circle{background-position:-192px -96px}.icon-ban-circle{background-position:-216px -96px}.icon-arrow-left{background-position:-240px -96px}.icon-arrow-right{background-position:-264px -96px}.icon-arrow-up{background-position:-289px -96px}.icon-arrow-down{background-position:-312px -96px}.icon-share-alt{background-position:-336px -96px}.icon-resize-full{background-position:-360px -96px}.icon-resize-small{background-position:-384px -96px}.icon-plus{background-position:-408px -96px}.icon-minus{background-position:-433px -96px}.icon-asterisk{background-position:-456px -96px}.icon-exclamation-sign{background-position:0 -120px}.icon-gift{background-position:-24px -120px}.icon-leaf{background-position:-48px -120px}.icon-fire{background-position:-72px -120px}.icon-eye-open{background-position:-96px -120px}.icon-eye-close{background-position:-120px -120px}.icon-warning-sign{background-position:-144px -120px}.icon-plane{background-position:-168px -120px}.icon-calendar{background-position:-192px -120px}.icon-random{background-position:-216px -120px}.icon-comment{background-position:-240px -120px}.icon-magnet{background-position:-264px -120px}.icon-chevron-up{background-position:-288px -120px}.icon-chevron-down{background-position:-313px -119px}.icon-retweet{background-position:-336px -120px}.icon-shopping-cart{background-position:-360px -120px}.icon-folder-close{background-position:-384px -120px}.icon-folder-open{background-position:-408px -120px}.icon-resize-vertical{background-position:-432px -119px}.icon-resize-horizontal{background-position:-456px -118px}.icon-hdd{background-position:0 -144px}.icon-bullhorn{background-position:-24px -144px}.icon-bell{background-position:-48px -144px}.icon-certificate{background-position:-72px -144px}.icon-thumbs-up{background-position:-96px -144px}.icon-thumbs-down{background-position:-120px -144px}.icon-hand-right{background-position:-144px -144px}.icon-hand-left{background-position:-168px -144px}.icon-hand-up{background-position:-192px -144px}.icon-hand-down{background-position:-216px -144px}.icon-circle-arrow-right{background-position:-240px -144px}.icon-circle-arrow-left{background-position:-264px -144px}.icon-circle-arrow-up{background-position:-288px -144px}.icon-circle-arrow-down{background-position:-312px -144px}.icon-globe{background-position:-336px -144px}.icon-wrench{background-position:-360px -144px}.icon-tasks{background-position:-384px -144px}.icon-filter{background-position:-408px -144px}.icon-briefcase{background-position:-432px -144px}.icon-fullscreen{background-position:-456px -144px}.dropup,.dropdown{position:relative}.dropdown-toggle{*margin-bottom:-3px}.dropdown-toggle:active,.open .dropdown-toggle{outline:0}.caret{display:inline-block;width:0;height:0;vertical-align:top;border-top:4px solid #000;border-right:4px solid transparent;border-left:4px solid transparent;content:\"\";opacity:.3;filter:alpha(opacity=30)}.dropdown .caret{margin-top:8px;margin-left:2px}.dropdown:hover .caret,.open .caret{opacity:1;filter:alpha(opacity=100)}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:160px;padding:4px 0;margin:1px 0 0;list-style:none;background-color:#fff;border:1px solid #ccc;border:1px solid rgba(0,0,0,0.2);*border-right-width:2px;*border-bottom-width:2px;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px;-webkit-box-shadow:0 5px 10px rgba(0,0,0,0.2);-moz-box-shadow:0 5px 10px rgba(0,0,0,0.2);box-shadow:0 5px 10px rgba(0,0,0,0.2);-webkit-background-clip:padding-box;-moz-background-clip:padding;background-clip:padding-box}.dropdown-menu.pull-right{right:0;left:auto}.dropdown-menu .divider{*width:100%;height:1px;margin:8px 1px;*margin:-5px 0 5px;overflow:hidden;background-color:#e5e5e5;border-bottom:1px solid #fff}.dropdown-menu a{display:block;padding:3px 15px;clear:both;font-weight:normal;line-height:18px;color:#333;white-space:nowrap}.dropdown-menu li>a:hover,.dropdown-menu .active>a,.dropdown-menu .active>a:hover{color:#fff;text-decoration:none;background-color:#08c}.open{*z-index:1000}.open>.dropdown-menu{display:block}.pull-right>.dropdown-menu{right:0;left:auto}.dropup .caret,.navbar-fixed-bottom .dropdown .caret{border-top:0;border-bottom:4px solid #000;content:\"\\2191\"}.dropup .dropdown-menu,.navbar-fixed-bottom .dropdown .dropdown-menu{top:auto;bottom:100%;margin-bottom:1px}.typeahead{margin-top:2px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.well{min-height:20px;padding:19px;margin-bottom:20px;background-color:#f5f5f5;border:1px solid #eee;border:1px solid rgba(0,0,0,0.05);-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.05);-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.05);box-shadow:inset 0 1px 1px rgba(0,0,0,0.05)}.well blockquote{border-color:#ddd;border-color:rgba(0,0,0,0.15)}.well-large{padding:24px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px}.well-small{padding:9px;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.fade{opacity:0;-webkit-transition:opacity .15s linear;-moz-transition:opacity .15s linear;-ms-transition:opacity .15s linear;-o-transition:opacity .15s linear;transition:opacity .15s linear}.fade.in{opacity:1}.collapse{position:relative;height:0;overflow:hidden;-webkit-transition:height .35s ease;-moz-transition:height .35s ease;-ms-transition:height .35s ease;-o-transition:height .35s ease;transition:height .35s ease}.collapse.in{height:auto}.close{float:right;font-size:20px;font-weight:bold;line-height:18px;color:#000;text-shadow:0 1px 0 #fff;opacity:.2;filter:alpha(opacity=20)}.close:hover{color:#000;text-decoration:none;cursor:pointer;opacity:.4;filter:alpha(opacity=40)}button.close{padding:0;cursor:pointer;background:transparent;border:0;-webkit-appearance:none}.btn{display:inline-block;*display:inline;padding:4px 10px 4px;margin-bottom:0;*margin-left:.3em;font-size:13px;line-height:18px;*line-height:20px;color:#333;text-align:center;text-shadow:0 1px 1px rgba(255,255,255,0.75);vertical-align:middle;cursor:pointer;background-color:#f5f5f5;*background-color:#e6e6e6;background-image:-ms-linear-gradient(top,#fff,#e6e6e6);background-image:-webkit-gradient(linear,0 0,0 100%,from(#fff),to(#e6e6e6));background-image:-webkit-linear-gradient(top,#fff,#e6e6e6);background-image:-o-linear-gradient(top,#fff,#e6e6e6);background-image:linear-gradient(top,#fff,#e6e6e6);background-image:-moz-linear-gradient(top,#fff,#e6e6e6);background-repeat:repeat-x;border:1px solid #ccc;*border:0;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);border-color:#e6e6e6 #e6e6e6 #bfbfbf;border-bottom-color:#b3b3b3;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ffffff',endColorstr='#e6e6e6',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false);*zoom:1;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);-moz-box-shadow:inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);box-shadow:inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05)}.btn:hover,.btn:active,.btn.active,.btn.disabled,.btn[disabled]{background-color:#e6e6e6;*background-color:#d9d9d9}.btn:active,.btn.active{background-color:#ccc \\9}.btn:first-child{*margin-left:0}.btn:hover{color:#333;text-decoration:none;background-color:#e6e6e6;*background-color:#d9d9d9;background-position:0 -15px;-webkit-transition:background-position .1s linear;-moz-transition:background-position .1s linear;-ms-transition:background-position .1s linear;-o-transition:background-position .1s linear;transition:background-position .1s linear}.btn:focus{outline:thin dotted #333;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.btn.active,.btn:active{background-color:#e6e6e6;background-color:#d9d9d9 \\9;background-image:none;outline:0;-webkit-box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05);-moz-box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05);box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05)}.btn.disabled,.btn[disabled]{cursor:default;background-color:#e6e6e6;background-image:none;opacity:.65;filter:alpha(opacity=65);-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}.btn-large{padding:9px 14px;font-size:15px;line-height:normal;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}.btn-large [class^=\"icon-\"]{margin-top:1px}.btn-small{padding:5px 9px;font-size:11px;line-height:16px}.btn-small [class^=\"icon-\"]{margin-top:-1px}.btn-mini{padding:2px 6px;font-size:11px;line-height:14px}.btn-primary,.btn-primary:hover,.btn-warning,.btn-warning:hover,.btn-danger,.btn-danger:hover,.btn-success,.btn-success:hover,.btn-info,.btn-info:hover,.btn-inverse,.btn-inverse:hover{color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25)}.btn-primary.active,.btn-warning.active,.btn-danger.active,.btn-success.active,.btn-info.active,.btn-inverse.active{color:rgba(255,255,255,0.75)}.btn{border-color:#ccc;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25)}.btn-primary{background-color:#0074cc;*background-color:#05c;background-image:-ms-linear-gradient(top,#08c,#05c);background-image:-webkit-gradient(linear,0 0,0 100%,from(#08c),to(#05c));background-image:-webkit-linear-gradient(top,#08c,#05c);background-image:-o-linear-gradient(top,#08c,#05c);background-image:-moz-linear-gradient(top,#08c,#05c);background-image:linear-gradient(top,#08c,#05c);background-repeat:repeat-x;border-color:#05c #05c #003580;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#0088cc',endColorstr='#0055cc',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.btn-primary:hover,.btn-primary:active,.btn-primary.active,.btn-primary.disabled,.btn-primary[disabled]{background-color:#05c;*background-color:#004ab3}.btn-primary:active,.btn-primary.active{background-color:#004099 \\9}.btn-warning{background-color:#faa732;*background-color:#f89406;background-image:-ms-linear-gradient(top,#fbb450,#f89406);background-image:-webkit-gradient(linear,0 0,0 100%,from(#fbb450),to(#f89406));background-image:-webkit-linear-gradient(top,#fbb450,#f89406);background-image:-o-linear-gradient(top,#fbb450,#f89406);background-image:-moz-linear-gradient(top,#fbb450,#f89406);background-image:linear-gradient(top,#fbb450,#f89406);background-repeat:repeat-x;border-color:#f89406 #f89406 #ad6704;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#fbb450',endColorstr='#f89406',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.btn-warning:hover,.btn-warning:active,.btn-warning.active,.btn-warning.disabled,.btn-warning[disabled]{background-color:#f89406;*background-color:#df8505}.btn-warning:active,.btn-warning.active{background-color:#c67605 \\9}.btn-danger{background-color:#da4f49;*background-color:#bd362f;background-image:-ms-linear-gradient(top,#ee5f5b,#bd362f);background-image:-webkit-gradient(linear,0 0,0 100%,from(#ee5f5b),to(#bd362f));background-image:-webkit-linear-gradient(top,#ee5f5b,#bd362f);background-image:-o-linear-gradient(top,#ee5f5b,#bd362f);background-image:-moz-linear-gradient(top,#ee5f5b,#bd362f);background-image:linear-gradient(top,#ee5f5b,#bd362f);background-repeat:repeat-x;border-color:#bd362f #bd362f #802420;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ee5f5b',endColorstr='#bd362f',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.btn-danger:hover,.btn-danger:active,.btn-danger.active,.btn-danger.disabled,.btn-danger[disabled]{background-color:#bd362f;*background-color:#a9302a}.btn-danger:active,.btn-danger.active{background-color:#942a25 \\9}.btn-success{background-color:#5bb75b;*background-color:#51a351;background-image:-ms-linear-gradient(top,#62c462,#51a351);background-image:-webkit-gradient(linear,0 0,0 100%,from(#62c462),to(#51a351));background-image:-webkit-linear-gradient(top,#62c462,#51a351);background-image:-o-linear-gradient(top,#62c462,#51a351);background-image:-moz-linear-gradient(top,#62c462,#51a351);background-image:linear-gradient(top,#62c462,#51a351);background-repeat:repeat-x;border-color:#51a351 #51a351 #387038;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#62c462',endColorstr='#51a351',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.btn-success:hover,.btn-success:active,.btn-success.active,.btn-success.disabled,.btn-success[disabled]{background-color:#51a351;*background-color:#499249}.btn-success:active,.btn-success.active{background-color:#408140 \\9}.btn-info{background-color:#49afcd;*background-color:#2f96b4;background-image:-ms-linear-gradient(top,#5bc0de,#2f96b4);background-image:-webkit-gradient(linear,0 0,0 100%,from(#5bc0de),to(#2f96b4));background-image:-webkit-linear-gradient(top,#5bc0de,#2f96b4);background-image:-o-linear-gradient(top,#5bc0de,#2f96b4);background-image:-moz-linear-gradient(top,#5bc0de,#2f96b4);background-image:linear-gradient(top,#5bc0de,#2f96b4);background-repeat:repeat-x;border-color:#2f96b4 #2f96b4 #1f6377;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#5bc0de',endColorstr='#2f96b4',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.btn-info:hover,.btn-info:active,.btn-info.active,.btn-info.disabled,.btn-info[disabled]{background-color:#2f96b4;*background-color:#2a85a0}.btn-info:active,.btn-info.active{background-color:#24748c \\9}.btn-inverse{background-color:#414141;*background-color:#222;background-image:-ms-linear-gradient(top,#555,#222);background-image:-webkit-gradient(linear,0 0,0 100%,from(#555),to(#222));background-image:-webkit-linear-gradient(top,#555,#222);background-image:-o-linear-gradient(top,#555,#222);background-image:-moz-linear-gradient(top,#555,#222);background-image:linear-gradient(top,#555,#222);background-repeat:repeat-x;border-color:#222 #222 #000;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#555555',endColorstr='#222222',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.btn-inverse:hover,.btn-inverse:active,.btn-inverse.active,.btn-inverse.disabled,.btn-inverse[disabled]{background-color:#222;*background-color:#151515}.btn-inverse:active,.btn-inverse.active{background-color:#080808 \\9}button.btn,input[type=\"submit\"].btn{*padding-top:2px;*padding-bottom:2px}button.btn::-moz-focus-inner,input[type=\"submit\"].btn::-moz-focus-inner{padding:0;border:0}button.btn.btn-large,input[type=\"submit\"].btn.btn-large{*padding-top:7px;*padding-bottom:7px}button.btn.btn-small,input[type=\"submit\"].btn.btn-small{*padding-top:3px;*padding-bottom:3px}button.btn.btn-mini,input[type=\"submit\"].btn.btn-mini{*padding-top:1px;*padding-bottom:1px}.btn-group{position:relative;*margin-left:.3em;*zoom:1}.btn-group:before,.btn-group:after{display:table;content:\"\"}.btn-group:after{clear:both}.btn-group:first-child{*margin-left:0}.btn-group+.btn-group{margin-left:5px}.btn-toolbar{margin-top:9px;margin-bottom:9px}.btn-toolbar .btn-group{display:inline-block;*display:inline;*zoom:1}.btn-group>.btn{position:relative;float:left;margin-left:-1px;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.btn-group>.btn:first-child{margin-left:0;-webkit-border-bottom-left-radius:4px;border-bottom-left-radius:4px;-webkit-border-top-left-radius:4px;border-top-left-radius:4px;-moz-border-radius-bottomleft:4px;-moz-border-radius-topleft:4px}.btn-group>.btn:last-child,.btn-group>.dropdown-toggle{-webkit-border-top-right-radius:4px;border-top-right-radius:4px;-webkit-border-bottom-right-radius:4px;border-bottom-right-radius:4px;-moz-border-radius-topright:4px;-moz-border-radius-bottomright:4px}.btn-group>.btn.large:first-child{margin-left:0;-webkit-border-bottom-left-radius:6px;border-bottom-left-radius:6px;-webkit-border-top-left-radius:6px;border-top-left-radius:6px;-moz-border-radius-bottomleft:6px;-moz-border-radius-topleft:6px}.btn-group>.btn.large:last-child,.btn-group>.large.dropdown-toggle{-webkit-border-top-right-radius:6px;border-top-right-radius:6px;-webkit-border-bottom-right-radius:6px;border-bottom-right-radius:6px;-moz-border-radius-topright:6px;-moz-border-radius-bottomright:6px}.btn-group>.btn:hover,.btn-group>.btn:focus,.btn-group>.btn:active,.btn-group>.btn.active{z-index:2}.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0}.btn-group>.dropdown-toggle{*padding-top:4px;padding-right:8px;*padding-bottom:4px;padding-left:8px;-webkit-box-shadow:inset 1px 0 0 rgba(255,255,255,0.125),inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);-moz-box-shadow:inset 1px 0 0 rgba(255,255,255,0.125),inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);box-shadow:inset 1px 0 0 rgba(255,255,255,0.125),inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05)}.btn-group>.btn-mini.dropdown-toggle{padding-right:5px;padding-left:5px}.btn-group>.btn-small.dropdown-toggle{*padding-top:4px;*padding-bottom:4px}.btn-group>.btn-large.dropdown-toggle{padding-right:12px;padding-left:12px}.btn-group.open .dropdown-toggle{background-image:none;-webkit-box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05);-moz-box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05);box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05)}.btn-group.open .btn.dropdown-toggle{background-color:#e6e6e6}.btn-group.open .btn-primary.dropdown-toggle{background-color:#05c}.btn-group.open .btn-warning.dropdown-toggle{background-color:#f89406}.btn-group.open .btn-danger.dropdown-toggle{background-color:#bd362f}.btn-group.open .btn-success.dropdown-toggle{background-color:#51a351}.btn-group.open .btn-info.dropdown-toggle{background-color:#2f96b4}.btn-group.open .btn-inverse.dropdown-toggle{background-color:#222}.btn .caret{margin-top:7px;margin-left:0}.btn:hover .caret,.open.btn-group .caret{opacity:1;filter:alpha(opacity=100)}.btn-mini .caret{margin-top:5px}.btn-small .caret{margin-top:6px}.btn-large .caret{margin-top:6px;border-top-width:5px;border-right-width:5px;border-left-width:5px}.dropup .btn-large .caret{border-top:0;border-bottom:5px solid #000}.btn-primary .caret,.btn-warning .caret,.btn-danger .caret,.btn-info .caret,.btn-success .caret,.btn-inverse .caret{border-top-color:#fff;border-bottom-color:#fff;opacity:.75;filter:alpha(opacity=75)}.alert{padding:8px 35px 8px 14px;margin-bottom:18px;color:#c09853;text-shadow:0 1px 0 rgba(255,255,255,0.5);background-color:#fcf8e3;border:1px solid #fbeed5;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.alert-heading{color:inherit}.alert .close{position:relative;top:-2px;right:-21px;line-height:18px}.alert-success{color:#468847;background-color:#dff0d8;border-color:#d6e9c6}.alert-danger,.alert-error{color:#b94a48;background-color:#f2dede;border-color:#eed3d7}.alert-info{color:#3a87ad;background-color:#d9edf7;border-color:#bce8f1}.alert-block{padding-top:14px;padding-bottom:14px}.alert-block>p,.alert-block>ul{margin-bottom:0}.alert-block p+p{margin-top:5px}.nav{margin-bottom:18px;margin-left:0;list-style:none}.nav>li>a{display:block}.nav>li>a:hover{text-decoration:none;background-color:#eee}.nav>.pull-right{float:right}.nav .nav-header{display:block;padding:3px 15px;font-size:11px;font-weight:bold;line-height:18px;color:#999;text-shadow:0 1px 0 rgba(255,255,255,0.5);text-transform:uppercase}.nav li+.nav-header{margin-top:9px}.nav-list{padding-right:15px;padding-left:15px;margin-bottom:0}.nav-list>li>a,.nav-list .nav-header{margin-right:-15px;margin-left:-15px;text-shadow:0 1px 0 rgba(255,255,255,0.5)}.nav-list>li>a{padding:3px 15px}.nav-list>.active>a,.nav-list>.active>a:hover{color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.2);background-color:#08c}.nav-list [class^=\"icon-\"]{margin-right:2px}.nav-list .divider{*width:100%;height:1px;margin:8px 1px;*margin:-5px 0 5px;overflow:hidden;background-color:#e5e5e5;border-bottom:1px solid #fff}.nav-tabs,.nav-pills{*zoom:1}.nav-tabs:before,.nav-pills:before,.nav-tabs:after,.nav-pills:after{display:table;content:\"\"}.nav-tabs:after,.nav-pills:after{clear:both}.nav-tabs>li,.nav-pills>li{float:left}.nav-tabs>li>a,.nav-pills>li>a{padding-right:12px;padding-left:12px;margin-right:2px;line-height:14px}.nav-tabs{border-bottom:1px solid #ddd}.nav-tabs>li{margin-bottom:-1px}.nav-tabs>li>a{padding-top:8px;padding-bottom:8px;line-height:18px;border:1px solid transparent;-webkit-border-radius:4px 4px 0 0;-moz-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0}.nav-tabs>li>a:hover{border-color:#eee #eee #ddd}.nav-tabs>.active>a,.nav-tabs>.active>a:hover{color:#555;cursor:default;background-color:#fff;border:1px solid #ddd;border-bottom-color:transparent}.nav-pills>li>a{padding-top:8px;padding-bottom:8px;margin-top:2px;margin-bottom:2px;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}.nav-pills>.active>a,.nav-pills>.active>a:hover{color:#fff;background-color:#08c}.nav-stacked>li{float:none}.nav-stacked>li>a{margin-right:0}.nav-tabs.nav-stacked{border-bottom:0}.nav-tabs.nav-stacked>li>a{border:1px solid #ddd;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.nav-tabs.nav-stacked>li:first-child>a{-webkit-border-radius:4px 4px 0 0;-moz-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0}.nav-tabs.nav-stacked>li:last-child>a{-webkit-border-radius:0 0 4px 4px;-moz-border-radius:0 0 4px 4px;border-radius:0 0 4px 4px}.nav-tabs.nav-stacked>li>a:hover{z-index:2;border-color:#ddd}.nav-pills.nav-stacked>li>a{margin-bottom:3px}.nav-pills.nav-stacked>li:last-child>a{margin-bottom:1px}.nav-tabs .dropdown-menu{-webkit-border-radius:0 0 5px 5px;-moz-border-radius:0 0 5px 5px;border-radius:0 0 5px 5px}.nav-pills .dropdown-menu{-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.nav-tabs .dropdown-toggle .caret,.nav-pills .dropdown-toggle .caret{margin-top:6px;border-top-color:#08c;border-bottom-color:#08c}.nav-tabs .dropdown-toggle:hover .caret,.nav-pills .dropdown-toggle:hover .caret{border-top-color:#005580;border-bottom-color:#005580}.nav-tabs .active .dropdown-toggle .caret,.nav-pills .active .dropdown-toggle .caret{border-top-color:#333;border-bottom-color:#333}.nav>.dropdown.active>a:hover{color:#000;cursor:pointer}.nav-tabs .open .dropdown-toggle,.nav-pills .open .dropdown-toggle,.nav>li.dropdown.open.active>a:hover{color:#fff;background-color:#999;border-color:#999}.nav li.dropdown.open .caret,.nav li.dropdown.open.active .caret,.nav li.dropdown.open a:hover .caret{border-top-color:#fff;border-bottom-color:#fff;opacity:1;filter:alpha(opacity=100)}.tabs-stacked .open>a:hover{border-color:#999}.tabbable{*zoom:1}.tabbable:before,.tabbable:after{display:table;content:\"\"}.tabbable:after{clear:both}.tab-content{overflow:auto}.tabs-below>.nav-tabs,.tabs-right>.nav-tabs,.tabs-left>.nav-tabs{border-bottom:0}.tab-content>.tab-pane,.pill-content>.pill-pane{display:none}.tab-content>.active,.pill-content>.active{display:block}.tabs-below>.nav-tabs{border-top:1px solid #ddd}.tabs-below>.nav-tabs>li{margin-top:-1px;margin-bottom:0}.tabs-below>.nav-tabs>li>a{-webkit-border-radius:0 0 4px 4px;-moz-border-radius:0 0 4px 4px;border-radius:0 0 4px 4px}.tabs-below>.nav-tabs>li>a:hover{border-top-color:#ddd;border-bottom-color:transparent}.tabs-below>.nav-tabs>.active>a,.tabs-below>.nav-tabs>.active>a:hover{border-color:transparent #ddd #ddd #ddd}.tabs-left>.nav-tabs>li,.tabs-right>.nav-tabs>li{float:none}.tabs-left>.nav-tabs>li>a,.tabs-right>.nav-tabs>li>a{min-width:74px;margin-right:0;margin-bottom:3px}.tabs-left>.nav-tabs{float:left;margin-right:19px;border-right:1px solid #ddd}.tabs-left>.nav-tabs>li>a{margin-right:-1px;-webkit-border-radius:4px 0 0 4px;-moz-border-radius:4px 0 0 4px;border-radius:4px 0 0 4px}.tabs-left>.nav-tabs>li>a:hover{border-color:#eee #ddd #eee #eee}.tabs-left>.nav-tabs .active>a,.tabs-left>.nav-tabs .active>a:hover{border-color:#ddd transparent #ddd #ddd;*border-right-color:#fff}.tabs-right>.nav-tabs{float:right;margin-left:19px;border-left:1px solid #ddd}.tabs-right>.nav-tabs>li>a{margin-left:-1px;-webkit-border-radius:0 4px 4px 0;-moz-border-radius:0 4px 4px 0;border-radius:0 4px 4px 0}.tabs-right>.nav-tabs>li>a:hover{border-color:#eee #eee #eee #ddd}.tabs-right>.nav-tabs .active>a,.tabs-right>.nav-tabs .active>a:hover{border-color:#ddd #ddd #ddd transparent;*border-left-color:#fff}.navbar{*position:relative;*z-index:2;margin-bottom:18px;overflow:visible}.navbar-inner{min-height:40px;padding-right:20px;padding-left:20px;background-color:#2c2c2c;background-image:-moz-linear-gradient(top,#333,#222);background-image:-ms-linear-gradient(top,#333,#222);background-image:-webkit-gradient(linear,0 0,0 100%,from(#333),to(#222));background-image:-webkit-linear-gradient(top,#333,#222);background-image:-o-linear-gradient(top,#333,#222);background-image:linear-gradient(top,#333,#222);background-repeat:repeat-x;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#333333',endColorstr='#222222',GradientType=0);-webkit-box-shadow:0 1px 3px rgba(0,0,0,0.25),inset 0 -1px 0 rgba(0,0,0,0.1);-moz-box-shadow:0 1px 3px rgba(0,0,0,0.25),inset 0 -1px 0 rgba(0,0,0,0.1);box-shadow:0 1px 3px rgba(0,0,0,0.25),inset 0 -1px 0 rgba(0,0,0,0.1)}.navbar .container{width:auto}.nav-collapse.collapse{height:auto}.navbar{color:#999}.navbar .brand:hover{text-decoration:none}.navbar .brand{display:block;float:left;padding:8px 20px 12px;margin-left:-20px;font-size:20px;font-weight:200;line-height:1;color:#999}.navbar .navbar-text{margin-bottom:0;line-height:40px}.navbar .navbar-link{color:#999}.navbar .navbar-link:hover{color:#fff}.navbar .btn,.navbar .btn-group{margin-top:5px}.navbar .btn-group .btn{margin:0}.navbar-form{margin-bottom:0;*zoom:1}.navbar-form:before,.navbar-form:after{display:table;content:\"\"}.navbar-form:after{clear:both}.navbar-form input,.navbar-form select,.navbar-form .radio,.navbar-form .checkbox{margin-top:5px}.navbar-form input,.navbar-form select{display:inline-block;margin-bottom:0}.navbar-form input[type=\"image\"],.navbar-form input[type=\"checkbox\"],.navbar-form input[type=\"radio\"]{margin-top:3px}.navbar-form .input-append,.navbar-form .input-prepend{margin-top:6px;white-space:nowrap}.navbar-form .input-append input,.navbar-form .input-prepend input{margin-top:0}.navbar-search{position:relative;float:left;margin-top:6px;margin-bottom:0}.navbar-search .search-query{padding:4px 9px;font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;font-size:13px;font-weight:normal;line-height:1;color:#fff;background-color:#626262;border:1px solid #151515;-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,0.1),0 1px 0 rgba(255,255,255,0.15);-moz-box-shadow:inset 0 1px 2px rgba(0,0,0,0.1),0 1px 0 rgba(255,255,255,0.15);box-shadow:inset 0 1px 2px rgba(0,0,0,0.1),0 1px 0 rgba(255,255,255,0.15);-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none}.navbar-search .search-query:-moz-placeholder{color:#ccc}.navbar-search .search-query:-ms-input-placeholder{color:#ccc}.navbar-search .search-query::-webkit-input-placeholder{color:#ccc}.navbar-search .search-query:focus,.navbar-search .search-query.focused{padding:5px 10px;color:#333;text-shadow:0 1px 0 #fff;background-color:#fff;border:0;outline:0;-webkit-box-shadow:0 0 3px rgba(0,0,0,0.15);-moz-box-shadow:0 0 3px rgba(0,0,0,0.15);box-shadow:0 0 3px rgba(0,0,0,0.15)}.navbar-fixed-top,.navbar-fixed-bottom{position:fixed;right:0;left:0;z-index:1030;margin-bottom:0}.navbar-fixed-top .navbar-inner,.navbar-fixed-bottom .navbar-inner{padding-right:0;padding-left:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:940px}.navbar-fixed-top{top:0}.navbar-fixed-bottom{bottom:0}.navbar .nav{position:relative;left:0;display:block;float:left;margin:0 10px 0 0}.navbar .nav.pull-right{float:right}.navbar .nav>li{display:block;float:left}.navbar .nav>li>a{float:none;padding:9px 10px 11px;line-height:19px;color:#999;text-decoration:none;text-shadow:0 -1px 0 rgba(0,0,0,0.25)}.navbar .btn{display:inline-block;padding:4px 10px 4px;margin:5px 5px 6px;line-height:18px}.navbar .btn-group{padding:5px 5px 6px;margin:0}.navbar .nav>li>a:hover{color:#fff;text-decoration:none;background-color:transparent}.navbar .nav .active>a,.navbar .nav .active>a:hover{color:#fff;text-decoration:none;background-color:#222}.navbar .divider-vertical{width:1px;height:40px;margin:0 9px;overflow:hidden;background-color:#222;border-right:1px solid #333}.navbar .nav.pull-right{margin-right:0;margin-left:10px}.navbar .btn-navbar{display:none;float:right;padding:7px 10px;margin-right:5px;margin-left:5px;background-color:#2c2c2c;*background-color:#222;background-image:-ms-linear-gradient(top,#333,#222);background-image:-webkit-gradient(linear,0 0,0 100%,from(#333),to(#222));background-image:-webkit-linear-gradient(top,#333,#222);background-image:-o-linear-gradient(top,#333,#222);background-image:linear-gradient(top,#333,#222);background-image:-moz-linear-gradient(top,#333,#222);background-repeat:repeat-x;border-color:#222 #222 #000;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#333333',endColorstr='#222222',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false);-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 0 rgba(255,255,255,0.075);-moz-box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 0 rgba(255,255,255,0.075);box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 0 rgba(255,255,255,0.075)}.navbar .btn-navbar:hover,.navbar .btn-navbar:active,.navbar .btn-navbar.active,.navbar .btn-navbar.disabled,.navbar .btn-navbar[disabled]{background-color:#222;*background-color:#151515}.navbar .btn-navbar:active,.navbar .btn-navbar.active{background-color:#080808 \\9}.navbar .btn-navbar .icon-bar{display:block;width:18px;height:2px;background-color:#f5f5f5;-webkit-border-radius:1px;-moz-border-radius:1px;border-radius:1px;-webkit-box-shadow:0 1px 0 rgba(0,0,0,0.25);-moz-box-shadow:0 1px 0 rgba(0,0,0,0.25);box-shadow:0 1px 0 rgba(0,0,0,0.25)}.btn-navbar .icon-bar+.icon-bar{margin-top:3px}.navbar .dropdown-menu:before{position:absolute;top:-7px;left:9px;display:inline-block;border-right:7px solid transparent;border-bottom:7px solid #ccc;border-left:7px solid transparent;border-bottom-color:rgba(0,0,0,0.2);content:''}.navbar .dropdown-menu:after{position:absolute;top:-6px;left:10px;display:inline-block;border-right:6px solid transparent;border-bottom:6px solid #fff;border-left:6px solid transparent;content:''}.navbar-fixed-bottom .dropdown-menu:before{top:auto;bottom:-7px;border-top:7px solid #ccc;border-bottom:0;border-top-color:rgba(0,0,0,0.2)}.navbar-fixed-bottom .dropdown-menu:after{top:auto;bottom:-6px;border-top:6px solid #fff;border-bottom:0}.navbar .nav li.dropdown .dropdown-toggle .caret,.navbar .nav li.dropdown.open .caret{border-top-color:#fff;border-bottom-color:#fff}.navbar .nav li.dropdown.active .caret{opacity:1;filter:alpha(opacity=100)}.navbar .nav li.dropdown.open>.dropdown-toggle,.navbar .nav li.dropdown.active>.dropdown-toggle,.navbar .nav li.dropdown.open.active>.dropdown-toggle{background-color:transparent}.navbar .nav li.dropdown.active>.dropdown-toggle:hover{color:#fff}.navbar .pull-right .dropdown-menu,.navbar .dropdown-menu.pull-right{right:0;left:auto}.navbar .pull-right .dropdown-menu:before,.navbar .dropdown-menu.pull-right:before{right:12px;left:auto}.navbar .pull-right .dropdown-menu:after,.navbar .dropdown-menu.pull-right:after{right:13px;left:auto}.breadcrumb{padding:7px 14px;margin:0 0 18px;list-style:none;background-color:#fbfbfb;background-image:-moz-linear-gradient(top,#fff,#f5f5f5);background-image:-ms-linear-gradient(top,#fff,#f5f5f5);background-image:-webkit-gradient(linear,0 0,0 100%,from(#fff),to(#f5f5f5));background-image:-webkit-linear-gradient(top,#fff,#f5f5f5);background-image:-o-linear-gradient(top,#fff,#f5f5f5);background-image:linear-gradient(top,#fff,#f5f5f5);background-repeat:repeat-x;border:1px solid #ddd;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ffffff',endColorstr='#f5f5f5',GradientType=0);-webkit-box-shadow:inset 0 1px 0 #fff;-moz-box-shadow:inset 0 1px 0 #fff;box-shadow:inset 0 1px 0 #fff}.breadcrumb li{display:inline-block;*display:inline;text-shadow:0 1px 0 #fff;*zoom:1}.breadcrumb .divider{padding:0 5px;color:#999}.breadcrumb .active a{color:#333}.pagination{height:36px;margin:18px 0}.pagination ul{display:inline-block;*display:inline;margin-bottom:0;margin-left:0;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;*zoom:1;-webkit-box-shadow:0 1px 2px rgba(0,0,0,0.05);-moz-box-shadow:0 1px 2px rgba(0,0,0,0.05);box-shadow:0 1px 2px rgba(0,0,0,0.05)}.pagination li{display:inline}.pagination a{float:left;padding:0 14px;line-height:34px;text-decoration:none;border:1px solid #ddd;border-left-width:0}.pagination a:hover,.pagination .active a{background-color:#f5f5f5}.pagination .active a{color:#999;cursor:default}.pagination .disabled span,.pagination .disabled a,.pagination .disabled a:hover{color:#999;cursor:default;background-color:transparent}.pagination li:first-child a{border-left-width:1px;-webkit-border-radius:3px 0 0 3px;-moz-border-radius:3px 0 0 3px;border-radius:3px 0 0 3px}.pagination li:last-child a{-webkit-border-radius:0 3px 3px 0;-moz-border-radius:0 3px 3px 0;border-radius:0 3px 3px 0}.pagination-centered{text-align:center}.pagination-right{text-align:right}.pager{margin-bottom:18px;margin-left:0;text-align:center;list-style:none;*zoom:1}.pager:before,.pager:after{display:table;content:\"\"}.pager:after{clear:both}.pager li{display:inline}.pager a{display:inline-block;padding:5px 14px;background-color:#fff;border:1px solid #ddd;-webkit-border-radius:15px;-moz-border-radius:15px;border-radius:15px}.pager a:hover{text-decoration:none;background-color:#f5f5f5}.pager .next a{float:right}.pager .previous a{float:left}.pager .disabled a,.pager .disabled a:hover{color:#999;cursor:default;background-color:#fff}.modal-open .dropdown-menu{z-index:2050}.modal-open .dropdown.open{*z-index:2050}.modal-open .popover{z-index:2060}.modal-open .tooltip{z-index:2070}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop,.modal-backdrop.fade.in{opacity:.8;filter:alpha(opacity=80)}.modal{position:fixed;top:50%;left:50%;z-index:1050;width:560px;margin:-250px 0 0 -280px;overflow:auto;background-color:#fff;border:1px solid #999;border:1px solid rgba(0,0,0,0.3);*border:1px solid #999;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;-webkit-box-shadow:0 3px 7px rgba(0,0,0,0.3);-moz-box-shadow:0 3px 7px rgba(0,0,0,0.3);box-shadow:0 3px 7px rgba(0,0,0,0.3);-webkit-background-clip:padding-box;-moz-background-clip:padding-box;background-clip:padding-box}.modal.fade{top:-25%;-webkit-transition:opacity .3s linear,top .3s ease-out;-moz-transition:opacity .3s linear,top .3s ease-out;-ms-transition:opacity .3s linear,top .3s ease-out;-o-transition:opacity .3s linear,top .3s ease-out;transition:opacity .3s linear,top .3s ease-out}.modal.fade.in{top:50%}.modal-header{padding:9px 15px;border-bottom:1px solid #eee}.modal-header .close{margin-top:2px}.modal-body{max-height:400px;padding:15px;overflow-y:auto}.modal-form{margin-bottom:0}.modal-footer{padding:14px 15px 15px;margin-bottom:0;text-align:right;background-color:#f5f5f5;border-top:1px solid #ddd;-webkit-border-radius:0 0 6px 6px;-moz-border-radius:0 0 6px 6px;border-radius:0 0 6px 6px;*zoom:1;-webkit-box-shadow:inset 0 1px 0 #fff;-moz-box-shadow:inset 0 1px 0 #fff;box-shadow:inset 0 1px 0 #fff}.modal-footer:before,.modal-footer:after{display:table;content:\"\"}.modal-footer:after{clear:both}.modal-footer .btn+.btn{margin-bottom:0;margin-left:5px}.modal-footer .btn-group .btn+.btn{margin-left:-1px}.tooltip{position:absolute;z-index:1020;display:block;padding:5px;font-size:11px;opacity:0;filter:alpha(opacity=0);visibility:visible}.tooltip.in{opacity:.8;filter:alpha(opacity=80)}.tooltip.top{margin-top:-2px}.tooltip.right{margin-left:2px}.tooltip.bottom{margin-top:2px}.tooltip.left{margin-left:-2px}.tooltip.top .tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-top:5px solid #000;border-right:5px solid transparent;border-left:5px solid transparent}.tooltip.left .tooltip-arrow{top:50%;right:0;margin-top:-5px;border-top:5px solid transparent;border-bottom:5px solid transparent;border-left:5px solid #000}.tooltip.bottom .tooltip-arrow{top:0;left:50%;margin-left:-5px;border-right:5px solid transparent;border-bottom:5px solid #000;border-left:5px solid transparent}.tooltip.right .tooltip-arrow{top:50%;left:0;margin-top:-5px;border-top:5px solid transparent;border-right:5px solid #000;border-bottom:5px solid transparent}.tooltip-inner{max-width:200px;padding:3px 8px;color:#fff;text-align:center;text-decoration:none;background-color:#000;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.tooltip-arrow{position:absolute;width:0;height:0}.popover{position:absolute;top:0;left:0;z-index:1010;display:none;padding:5px}.popover.top{margin-top:-5px}.popover.right{margin-left:5px}.popover.bottom{margin-top:5px}.popover.left{margin-left:-5px}.popover.top .arrow{bottom:0;left:50%;margin-left:-5px;border-top:5px solid #000;border-right:5px solid transparent;border-left:5px solid transparent}.popover.right .arrow{top:50%;left:0;margin-top:-5px;border-top:5px solid transparent;border-right:5px solid #000;border-bottom:5px solid transparent}.popover.bottom .arrow{top:0;left:50%;margin-left:-5px;border-right:5px solid transparent;border-bottom:5px solid #000;border-left:5px solid transparent}.popover.left .arrow{top:50%;right:0;margin-top:-5px;border-top:5px solid transparent;border-bottom:5px solid transparent;border-left:5px solid #000}.popover .arrow{position:absolute;width:0;height:0}.popover-inner{width:280px;padding:3px;overflow:hidden;background:#000;background:rgba(0,0,0,0.8);-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;-webkit-box-shadow:0 3px 7px rgba(0,0,0,0.3);-moz-box-shadow:0 3px 7px rgba(0,0,0,0.3);box-shadow:0 3px 7px rgba(0,0,0,0.3)}.popover-title{padding:9px 15px;line-height:1;background-color:#f5f5f5;border-bottom:1px solid #eee;-webkit-border-radius:3px 3px 0 0;-moz-border-radius:3px 3px 0 0;border-radius:3px 3px 0 0}.popover-content{padding:14px;background-color:#fff;-webkit-border-radius:0 0 3px 3px;-moz-border-radius:0 0 3px 3px;border-radius:0 0 3px 3px;-webkit-background-clip:padding-box;-moz-background-clip:padding-box;background-clip:padding-box}.popover-content p,.popover-content ul,.popover-content ol{margin-bottom:0}.thumbnails{margin-left:-20px;list-style:none;*zoom:1}.thumbnails:before,.thumbnails:after{display:table;content:\"\"}.thumbnails:after{clear:both}.row-fluid .thumbnails{margin-left:0}.thumbnails>li{float:left;margin-bottom:18px;margin-left:20px}.thumbnail{display:block;padding:4px;line-height:1;border:1px solid #ddd;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:0 1px 1px rgba(0,0,0,0.075);-moz-box-shadow:0 1px 1px rgba(0,0,0,0.075);box-shadow:0 1px 1px rgba(0,0,0,0.075)}a.thumbnail:hover{border-color:#08c;-webkit-box-shadow:0 1px 4px rgba(0,105,214,0.25);-moz-box-shadow:0 1px 4px rgba(0,105,214,0.25);box-shadow:0 1px 4px rgba(0,105,214,0.25)}.thumbnail>img{display:block;max-width:100%;margin-right:auto;margin-left:auto}.thumbnail .caption{padding:9px}.label,.badge{font-size:10.998px;font-weight:bold;line-height:14px;color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25);white-space:nowrap;vertical-align:baseline;background-color:#999}.label{padding:1px 4px 2px;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.badge{padding:1px 9px 2px;-webkit-border-radius:9px;-moz-border-radius:9px;border-radius:9px}a.label:hover,a.badge:hover{color:#fff;text-decoration:none;cursor:pointer}.label-important,.badge-important{background-color:#b94a48}.label-important[href],.badge-important[href]{background-color:#953b39}.label-warning,.badge-warning{background-color:#f89406}.label-warning[href],.badge-warning[href]{background-color:#c67605}.label-success,.badge-success{background-color:#468847}.label-success[href],.badge-success[href]{background-color:#356635}.label-info,.badge-info{background-color:#3a87ad}.label-info[href],.badge-info[href]{background-color:#2d6987}.label-inverse,.badge-inverse{background-color:#333}.label-inverse[href],.badge-inverse[href]{background-color:#1a1a1a}@-webkit-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@-moz-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@-ms-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@-o-keyframes progress-bar-stripes{from{background-position:0 0}to{background-position:40px 0}}@keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}.progress{height:18px;margin-bottom:18px;overflow:hidden;background-color:#f7f7f7;background-image:-moz-linear-gradient(top,#f5f5f5,#f9f9f9);background-image:-ms-linear-gradient(top,#f5f5f5,#f9f9f9);background-image:-webkit-gradient(linear,0 0,0 100%,from(#f5f5f5),to(#f9f9f9));background-image:-webkit-linear-gradient(top,#f5f5f5,#f9f9f9);background-image:-o-linear-gradient(top,#f5f5f5,#f9f9f9);background-image:linear-gradient(top,#f5f5f5,#f9f9f9);background-repeat:repeat-x;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#f5f5f5',endColorstr='#f9f9f9',GradientType=0);-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,0.1);-moz-box-shadow:inset 0 1px 2px rgba(0,0,0,0.1);box-shadow:inset 0 1px 2px rgba(0,0,0,0.1)}.progress .bar{width:0;height:18px;font-size:12px;color:#fff;text-align:center;text-shadow:0 -1px 0 rgba(0,0,0,0.25);background-color:#0e90d2;background-image:-moz-linear-gradient(top,#149bdf,#0480be);background-image:-webkit-gradient(linear,0 0,0 100%,from(#149bdf),to(#0480be));background-image:-webkit-linear-gradient(top,#149bdf,#0480be);background-image:-o-linear-gradient(top,#149bdf,#0480be);background-image:linear-gradient(top,#149bdf,#0480be);background-image:-ms-linear-gradient(top,#149bdf,#0480be);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#149bdf',endColorstr='#0480be',GradientType=0);-webkit-box-shadow:inset 0 -1px 0 rgba(0,0,0,0.15);-moz-box-shadow:inset 0 -1px 0 rgba(0,0,0,0.15);box-shadow:inset 0 -1px 0 rgba(0,0,0,0.15);-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;-webkit-transition:width .6s ease;-moz-transition:width .6s ease;-ms-transition:width .6s ease;-o-transition:width .6s ease;transition:width .6s ease}.progress-striped .bar{background-color:#149bdf;background-image:-o-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-webkit-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-moz-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-ms-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-webkit-gradient(linear,0 100%,100% 0,color-stop(0.25,rgba(255,255,255,0.15)),color-stop(0.25,transparent),color-stop(0.5,transparent),color-stop(0.5,rgba(255,255,255,0.15)),color-stop(0.75,rgba(255,255,255,0.15)),color-stop(0.75,transparent),to(transparent));background-image:linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);-webkit-background-size:40px 40px;-moz-background-size:40px 40px;-o-background-size:40px 40px;background-size:40px 40px}.progress.active .bar{-webkit-animation:progress-bar-stripes 2s linear infinite;-moz-animation:progress-bar-stripes 2s linear infinite;-ms-animation:progress-bar-stripes 2s linear infinite;-o-animation:progress-bar-stripes 2s linear infinite;animation:progress-bar-stripes 2s linear infinite}.progress-danger .bar{background-color:#dd514c;background-image:-moz-linear-gradient(top,#ee5f5b,#c43c35);background-image:-ms-linear-gradient(top,#ee5f5b,#c43c35);background-image:-webkit-gradient(linear,0 0,0 100%,from(#ee5f5b),to(#c43c35));background-image:-webkit-linear-gradient(top,#ee5f5b,#c43c35);background-image:-o-linear-gradient(top,#ee5f5b,#c43c35);background-image:linear-gradient(top,#ee5f5b,#c43c35);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ee5f5b',endColorstr='#c43c35',GradientType=0)}.progress-danger.progress-striped .bar{background-color:#ee5f5b;background-image:-webkit-gradient(linear,0 100%,100% 0,color-stop(0.25,rgba(255,255,255,0.15)),color-stop(0.25,transparent),color-stop(0.5,transparent),color-stop(0.5,rgba(255,255,255,0.15)),color-stop(0.75,rgba(255,255,255,0.15)),color-stop(0.75,transparent),to(transparent));background-image:-webkit-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-moz-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-ms-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent)}.progress-success .bar{background-color:#5eb95e;background-image:-moz-linear-gradient(top,#62c462,#57a957);background-image:-ms-linear-gradient(top,#62c462,#57a957);background-image:-webkit-gradient(linear,0 0,0 100%,from(#62c462),to(#57a957));background-image:-webkit-linear-gradient(top,#62c462,#57a957);background-image:-o-linear-gradient(top,#62c462,#57a957);background-image:linear-gradient(top,#62c462,#57a957);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#62c462',endColorstr='#57a957',GradientType=0)}.progress-success.progress-striped .bar{background-color:#62c462;background-image:-webkit-gradient(linear,0 100%,100% 0,color-stop(0.25,rgba(255,255,255,0.15)),color-stop(0.25,transparent),color-stop(0.5,transparent),color-stop(0.5,rgba(255,255,255,0.15)),color-stop(0.75,rgba(255,255,255,0.15)),color-stop(0.75,transparent),to(transparent));background-image:-webkit-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-moz-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-ms-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent)}.progress-info .bar{background-color:#4bb1cf;background-image:-moz-linear-gradient(top,#5bc0de,#339bb9);background-image:-ms-linear-gradient(top,#5bc0de,#339bb9);background-image:-webkit-gradient(linear,0 0,0 100%,from(#5bc0de),to(#339bb9));background-image:-webkit-linear-gradient(top,#5bc0de,#339bb9);background-image:-o-linear-gradient(top,#5bc0de,#339bb9);background-image:linear-gradient(top,#5bc0de,#339bb9);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#5bc0de',endColorstr='#339bb9',GradientType=0)}.progress-info.progress-striped .bar{background-color:#5bc0de;background-image:-webkit-gradient(linear,0 100%,100% 0,color-stop(0.25,rgba(255,255,255,0.15)),color-stop(0.25,transparent),color-stop(0.5,transparent),color-stop(0.5,rgba(255,255,255,0.15)),color-stop(0.75,rgba(255,255,255,0.15)),color-stop(0.75,transparent),to(transparent));background-image:-webkit-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-moz-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-ms-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent)}.progress-warning .bar{background-color:#faa732;background-image:-moz-linear-gradient(top,#fbb450,#f89406);background-image:-ms-linear-gradient(top,#fbb450,#f89406);background-image:-webkit-gradient(linear,0 0,0 100%,from(#fbb450),to(#f89406));background-image:-webkit-linear-gradient(top,#fbb450,#f89406);background-image:-o-linear-gradient(top,#fbb450,#f89406);background-image:linear-gradient(top,#fbb450,#f89406);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#fbb450',endColorstr='#f89406',GradientType=0)}.progress-warning.progress-striped .bar{background-color:#fbb450;background-image:-webkit-gradient(linear,0 100%,100% 0,color-stop(0.25,rgba(255,255,255,0.15)),color-stop(0.25,transparent),color-stop(0.5,transparent),color-stop(0.5,rgba(255,255,255,0.15)),color-stop(0.75,rgba(255,255,255,0.15)),color-stop(0.75,transparent),to(transparent));background-image:-webkit-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-moz-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-ms-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:linear-gradient(-45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent)}.accordion{margin-bottom:18px}.accordion-group{margin-bottom:2px;border:1px solid #e5e5e5;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.accordion-heading{border-bottom:0}.accordion-heading .accordion-toggle{display:block;padding:8px 15px}.accordion-toggle{cursor:pointer}.accordion-inner{padding:9px 15px;border-top:1px solid #e5e5e5}.carousel{position:relative;margin-bottom:18px;line-height:1}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel .item{position:relative;display:none;-webkit-transition:.6s ease-in-out left;-moz-transition:.6s ease-in-out left;-ms-transition:.6s ease-in-out left;-o-transition:.6s ease-in-out left;transition:.6s ease-in-out left}.carousel .item>img{display:block;line-height:1}.carousel .active,.carousel .next,.carousel .prev{display:block}.carousel .active{left:0}.carousel .next,.carousel .prev{position:absolute;top:0;width:100%}.carousel .next{left:100%}.carousel .prev{left:-100%}.carousel .next.left,.carousel .prev.right{left:0}.carousel .active.left{left:-100%}.carousel .active.right{left:100%}.carousel-control{position:absolute;top:40%;left:15px;width:40px;height:40px;margin-top:-20px;font-size:60px;font-weight:100;line-height:30px;color:#fff;text-align:center;background:#222;border:3px solid #fff;-webkit-border-radius:23px;-moz-border-radius:23px;border-radius:23px;opacity:.5;filter:alpha(opacity=50)}.carousel-control.right{right:15px;left:auto}.carousel-control:hover{color:#fff;text-decoration:none;opacity:.9;filter:alpha(opacity=90)}.carousel-caption{position:absolute;right:0;bottom:0;left:0;padding:10px 15px 5px;background:#333;background:rgba(0,0,0,0.75)}.carousel-caption h4,.carousel-caption p{color:#fff}.hero-unit{padding:60px;margin-bottom:30px;background-color:#eee;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px}.hero-unit h1{margin-bottom:0;font-size:60px;line-height:1;letter-spacing:-1px;color:inherit}.hero-unit p{font-size:18px;font-weight:200;line-height:27px;color:inherit}.pull-right{float:right}.pull-left{float:left}.hide{display:none}.show{display:block}.invisible{visibility:hidden}\n+\n+ input.field-error, textarea.field-error { border: 1px solid #B94A48; }\n\\ No newline at end of file\ndiff --git a/spring-boot-samples/spring-boot-sample-secure/src/main/resources/templates/error.html b/spring-boot-samples/spring-boot-sample-secure/src/main/resources/templates/error.html\nnew file mode 100644\nindex 0000000000..6047bb96f4\n--- /dev/null\n+++ b/spring-boot-samples/spring-boot-sample-secure/src/main/resources/templates/error.html\n@@ -0,0 +1,32 @@\n+<!DOCTYPE html>\n+<html xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+<title>Error</title>\n+<link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"\n+\thref=\"../../css/bootstrap.min.css\" />\n+</head>\n+<body>\n+\t<div class=\"container\">\n+\t\t<div class=\"navbar\">\n+\t\t\t<div class=\"navbar-inner\">\n+\t\t\t\t<a class=\"brand\" href=\"http://www.thymeleaf.org\"> Thymeleaf -\n+\t\t\t\t\tPlain </a>\n+\t\t\t\t<ul class=\"nav\">\n+\t\t\t\t\t<li><a th:href=\"@{/}\" href=\"home.html\"> Home </a></li>\n+\t\t\t\t\t<li><a th:href=\"@{/logout}\" href=\"logout\"> Logout </a></li>\n+\t\t\t\t</ul>\n+\t\t\t</div>\n+\t\t</div>\n+\t\t<h1 th:text=\"${title}\">Title</h1>\n+\t\t<div id=\"created\" th:text=\"${#dates.format(timestamp)}\">July 11,\n+\t\t\t2012 2:17:16 PM CDT</div>\n+\t\t<div>\n+\t\t\tThere was an unexpected error (type=<span th:text=\"${error}\">Bad</span>, status=<span th:text=\"${status}\">500</span>).\n+\t\t</div>\n+\t\t<div th:text=\"${message}\">Fake content</div>\n+\t\t<div>\n+\t\t\tPlease contact the operator with the above information.\n+\t\t</div>\n+\t</div>\n+</body>\n+</html>\ndiff --git a/spring-boot-samples/spring-boot-sample-secure/src/main/resources/templates/home.html b/spring-boot-samples/spring-boot-sample-secure/src/main/resources/templates/home.html\nnew file mode 100644\nindex 0000000000..6fa69dc027\n--- /dev/null\n+++ b/spring-boot-samples/spring-boot-sample-secure/src/main/resources/templates/home.html\n@@ -0,0 +1,26 @@\n+<!DOCTYPE html>\n+<html xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+<title th:text=\"${title}\">Title</title>\n+<link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"\n+\thref=\"../../css/bootstrap.min.css\" />\n+</head>\n+<body>\n+\t<div class=\"container\">\n+\t\t<div class=\"navbar\">\n+\t\t\t<div class=\"navbar-inner\">\n+\t\t\t\t<a class=\"brand\" href=\"http://www.thymeleaf.org\"> Thymeleaf -\n+\t\t\t\t\tPlain </a>\n+\t\t\t\t<ul class=\"nav\">\n+\t\t\t\t\t<li><a th:href=\"@{/}\" href=\"home.html\"> Home </a></li>\n+\t\t\t\t\t<li><a th:href=\"@{/logout}\" href=\"logout\"> Logout </a></li>\n+\t\t\t\t</ul>\n+\t\t\t</div>\n+\t\t</div>\n+\t\t<h1 th:text=\"${title}\">Title</h1>\n+\t\t<div th:text=\"${message}\">Fake content</div>\n+\t\t<div id=\"created\" th:text=\"${#dates.format(date)}\">July 11,\n+\t\t\t2012 2:17:16 PM CDT</div>\n+\t</div>\n+</body>\n+</html>\ndiff --git a/spring-boot-samples/spring-boot-sample-secure/src/main/resources/templates/login.html b/spring-boot-samples/spring-boot-sample-secure/src/main/resources/templates/login.html\nnew file mode 100644\nindex 0000000000..6ca32096c0\n--- /dev/null\n+++ b/spring-boot-samples/spring-boot-sample-secure/src/main/resources/templates/login.html\n@@ -0,0 +1,35 @@\n+<!DOCTYPE html>\n+<html xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+<title>Login</title>\n+<link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"\n+\thref=\"../../css/bootstrap.min.css\" />\n+</head>\n+<body onload=\"document.f.username.focus();\">\n+\t<div class=\"container\">\n+\t\t<div class=\"navbar\">\n+\t\t\t<div class=\"navbar-inner\">\n+\t\t\t\t<a class=\"brand\" href=\"http://www.thymeleaf.org\"> Thymeleaf -\n+\t\t\t\t\tPlain </a>\n+\t\t\t\t<ul class=\"nav\">\n+\t\t\t\t\t<li><a th:href=\"@{/}\" href=\"home.html\"> Home </a></li>\n+\t\t\t\t</ul>\n+\t\t\t</div>\n+\t\t</div>\n+\t\t<div class=\"content\">\n+\t\t\t<p th:if=\"${param.logout}\" class=\"alert\">You have been logged out</p>\n+\t\t\t<p th:if=\"${param.error}\" class=\"alert alert-error\">There was an error, please try again</p>\n+\t\t\t<h2>Login with Username and Password</h2>\n+\t\t\t<form name=\"form\" action=\"/login\" method=\"POST\">\n+\t\t\t\t<fieldset>\n+\t\t\t\t\t<input type=\"text\" name=\"username\" value=\"\" placeholder=\"Username\" />\n+\t\t\t\t\t<input type=\"password\" name=\"password\" placeholder=\"Password\" />\n+\t\t\t\t</fieldset>\n+\t\t\t\t<input type=\"submit\" id=\"login\" value=\"Login\"\n+\t\t\t\t\tclass=\"btn btn-primary\" /> <input type=\"hidden\"\n+\t\t\t\t\tth:name=\"${_csrf.parameterName}\" th:value=\"${_csrf.token}\" />\n+\t\t\t</form>\n+\t\t</div>\n+\t</div>\n+</body>\n+</html>\n\\ No newline at end of file\ndiff --git a/spring-boot-samples/spring-boot-sample-secure/src/test/java/org/springframework/boot/sample/ops/ui/SampleSecureApplicationTests.java b/spring-boot-samples/spring-boot-sample-secure/src/test/java/org/springframework/boot/sample/ops/ui/SampleSecureApplicationTests.java\nnew file mode 100644\nindex 0000000000..7c0f2d2e67\n--- /dev/null\n+++ b/spring-boot-samples/spring-boot-sample-secure/src/test/java/org/springframework/boot/sample/ops/ui/SampleSecureApplicationTests.java\n@@ -0,0 +1,130 @@\n+/*\n+ * Copyright 2012-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.sample.ops.ui;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.context.ConfigurableApplicationContext;\n+import org.springframework.http.HttpEntity;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.http.client.ClientHttpResponse;\n+import org.springframework.web.client.DefaultResponseErrorHandler;\n+import org.springframework.web.client.RestTemplate;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Basic integration tests for demo application.\n+ * \n+ * @author Dave Syer\n+ */\n+public class SampleSecureApplicationTests {\n+\n+\tprivate static ConfigurableApplicationContext context;\n+\n+\t@BeforeClass\n+\tpublic static void start() throws Exception {\n+\t\tFuture<ConfigurableApplicationContext> future = Executors\n+\t\t\t\t.newSingleThreadExecutor().submit(\n+\t\t\t\t\t\tnew Callable<ConfigurableApplicationContext>() {\n+\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\tpublic ConfigurableApplicationContext call() throws Exception {\n+\t\t\t\t\t\t\t\treturn (ConfigurableApplicationContext) SpringApplication\n+\t\t\t\t\t\t\t\t\t\t.run(SampleSecureApplication.class);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t});\n+\t\tcontext = future.get(60, TimeUnit.SECONDS);\n+\t}\n+\n+\t@AfterClass\n+\tpublic static void stop() {\n+\t\tif (context != null) {\n+\t\t\tcontext.close();\n+\t\t}\n+\t}\n+\n+\t@Test\n+\tpublic void testHome() throws Exception {\n+\t\tHttpHeaders headers = new HttpHeaders();\n+\t\theaders.setAccept(Arrays.asList(MediaType.TEXT_HTML));\n+\t\tResponseEntity<String> entity = getRestTemplate().exchange(\n+\t\t\t\t\"http://localhost:8080\", HttpMethod.GET, new HttpEntity<Void>(headers),\n+\t\t\t\tString.class);\n+\t\tassertEquals(HttpStatus.OK, entity.getStatusCode());\n+\t\tassertTrue(\"Wrong body (title doesn't match):\\n\" + entity.getBody(), entity\n+\t\t\t\t.getBody().contains(\"<title>Login\"));\n+\t}\n+\n+\t@Test\n+\tpublic void testCss() throws Exception {\n+\t\tResponseEntity<String> entity = getRestTemplate().getForEntity(\n+\t\t\t\t\"http://localhost:8080/css/bootstrap.min.css\", String.class);\n+\t\tassertEquals(HttpStatus.OK, entity.getStatusCode());\n+\t\tassertTrue(\"Wrong body:\\n\" + entity.getBody(), entity.getBody().contains(\"body\"));\n+\t}\n+\n+\t@Test\n+\tpublic void testMetrics() throws Exception {\n+\t\t@SuppressWarnings(\"rawtypes\")\n+\t\tResponseEntity<Map> entity = getRestTemplate().getForEntity(\n+\t\t\t\t\"http://localhost:8080/metrics\", Map.class);\n+\t\tassertEquals(HttpStatus.UNAUTHORIZED, entity.getStatusCode());\n+\t}\n+\n+\t@Test\n+\tpublic void testError() throws Exception {\n+\t\tHttpHeaders headers = new HttpHeaders();\n+\t\theaders.setAccept(Arrays.asList(MediaType.TEXT_HTML));\n+\t\tResponseEntity<String> entity = getRestTemplate().exchange(\n+\t\t\t\t\"http://localhost:8080/error\", HttpMethod.GET,\n+\t\t\t\tnew HttpEntity<Void>(headers), String.class);\n+\t\tassertEquals(HttpStatus.OK, entity.getStatusCode());\n+\t\tassertTrue(\"Wrong body:\\n\" + entity.getBody(), entity.getBody()\n+\t\t\t\t.contains(\"<html>\"));\n+\t\tassertTrue(\"Wrong body:\\n\" + entity.getBody(), entity.getBody()\n+\t\t\t\t.contains(\"<body>\"));\n+\t\tassertTrue(\"Wrong body:\\n\" + entity.getBody(), entity.getBody()\n+\t\t\t\t.contains(\"Please contact the operator with the above information\"));\n+\t}\n+\n+\tprivate RestTemplate getRestTemplate() {\n+\t\tRestTemplate restTemplate = new RestTemplate();\n+\t\trestTemplate.setErrorHandler(new DefaultResponseErrorHandler() {\n+\t\t\t@Override\n+\t\t\tpublic void handleError(ClientHttpResponse response) throws IOException {\n+\t\t\t}\n+\t\t});\n+\t\treturn restTemplate;\n+\n+\t}\n+\n+}",
    "Automated merge with http : / / hg . netbeans . org / core - main": "diff --git a/lib.profiler.charts/src/org/netbeans/lib/profiler/charts/AxisComponent.java b/lib.profiler.charts/src/org/netbeans/lib/profiler/charts/AxisComponent.java\nindex 6bcb6a8e9..86bd8b573 100644\n--- a/lib.profiler.charts/src/org/netbeans/lib/profiler/charts/AxisComponent.java\n+++ b/lib.profiler.charts/src/org/netbeans/lib/profiler/charts/AxisComponent.java\n@@ -1,23 +1,23 @@\n /*\n  * Copyright 2007-2008 Sun Microsystems, Inc.  All Rights Reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n+ * \n  * This code is free software; you can redistribute it and/or modify it\n  * under the terms of the GNU General Public License version 2 only, as\n  * published by the Free Software Foundation.  Sun designates this\n  * particular file as subject to the \"Classpath\" exception as provided\n  * by Sun in the LICENSE file that accompanied this code.\n- *\n+ * \n  * This code is distributed in the hope that it will be useful, but WITHOUT\n  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n  * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n  * version 2 for more details (a copy is included in the LICENSE file that\n  * accompanied this code).\n- *\n+ * \n  * You should have received a copy of the GNU General Public License version\n  * 2 along with this work; if not, write to the Free Software Foundation,\n  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n+ * \n  * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,\n  * CA 95054 USA or visit www.sun.com if you need additional information or\n  * have any questions.\n@@ -42,6 +42,8 @@ import javax.swing.JComponent;\n import javax.swing.JLabel;\n import javax.swing.SwingConstants;\n import javax.swing.SwingUtilities;\n+import org.netbeans.lib.profiler.charts.AxisMarksComputer.BytesMark;\n+import org.netbeans.lib.profiler.charts.xy.XYItemPainter;\n \n /**\n  *\n@@ -49,6 +51,10 @@ import javax.swing.SwingUtilities;\n  */\n public class AxisComponent extends JComponent implements ChartDecorator {\n \n+    public static final int NO_MESH         = 0;\n+    public static final int MESH_BACKGROUND = 1;\n+    public static final int MESH_FOREGROUND = 2;\n+\n     private final int location;\n     private boolean horizontal;\n \n@@ -58,12 +64,12 @@ public class AxisComponent extends JComponent implements ChartDecorator {\n \n     private int maxExtent;\n \n-    private final Paint meshPaint = Color.LIGHT_GRAY;\n+    private final Paint meshPaint = Utils.checkedColor(new Color(80, 80, 80, 50));\n     private final Stroke meshStroke = new BasicStroke(1);\n \n \n     public AxisComponent(ChartComponent chart, AxisMarksComputer marksComputer,\n-                         MarkValuePainter marksPainter, int location) {\n+                         MarkValuePainter marksPainter, int location, int mesh) {\n \n         this.location = location;\n         horizontal = location == SwingConstants.NORTH ||\n@@ -81,13 +87,14 @@ public class AxisComponent extends JComponent implements ChartDecorator {\n             setPreferredSize(new Dimension(10, 1));\n         }\n \n-//        chart.addConfigurationListener(new ChartListener());\n-//        chart.addPostDecorator(this);\n-    }\n+        chart.addConfigurationListener(new ChartListener());\n \n+        if (mesh == MESH_BACKGROUND) chart.addPreDecorator(this);\n+        else if (mesh == MESH_FOREGROUND) chart.addPostDecorator(this);\n+    }\n+    \n \n     public void paint(Graphics g) {\n-\n         Rectangle clip = g.getClipBounds();\n         if (clip == null) clip = new Rectangle(0, 0, getWidth(), getHeight());\n \n@@ -97,32 +104,31 @@ public class AxisComponent extends JComponent implements ChartDecorator {\n             chartBounds.y = clip.y;\n             chartBounds.height = clip.height;\n             paintHorizontalAxis(g, clip, chartBounds);\n-//            if (getPreferredSize().height < maxExtent + 25) {\n-//                SwingUtilities.invokeLater(new Runnable() {\n-//                    public void run() {\n-//                        setPreferredSize(new Dimension(getPreferredSize().width, maxExtent + 25));\n-//                        invalidate();\n-//                        ((JComponent)getParent()).revalidate();\n-//                        getParent().repaint();\n-//                    }\n-//                });\n-//            }\n+            if (getPreferredSize().height < maxExtent + 20) {\n+                SwingUtilities.invokeLater(new Runnable() {\n+                    public void run() {\n+                        setPreferredSize(new Dimension(getPreferredSize().width, maxExtent + 20));\n+                        invalidate();\n+                        ((JComponent)getParent()).revalidate();\n+                        getParent().repaint();\n+                    }\n+                });\n+            }\n         } else {\n             chartBounds.x = clip.x;\n             chartBounds.width = clip.width;\n             paintVerticalAxis(g, clip, chartBounds);\n-//            if (getPreferredSize().width < maxExtent + 25) {\n-//                SwingUtilities.invokeLater(new Runnable() {\n-//                    public void run() {\n-//                        setPreferredSize(new Dimension(maxExtent + 25, getPreferredSize().height));\n-//                        invalidate();\n-//                        ((JComponent)getParent()).revalidate();\n-//                        getParent().repaint();\n-//                    }\n-//                });\n-//            }\n+            if (getPreferredSize().width < maxExtent + 20) {\n+                SwingUtilities.invokeLater(new Runnable() {\n+                    public void run() {\n+                        setPreferredSize(new Dimension(maxExtent + 20, getPreferredSize().height));\n+                        invalidate();\n+                        ((JComponent)getParent()).revalidate();\n+                        getParent().repaint();\n+                    }\n+                });\n+            }\n         }\n-        super.paint(g);\n     }\n \n     public void paint(Graphics2D g, Rectangle dirtyArea, ChartContext context) {\n@@ -135,153 +141,140 @@ public class AxisComponent extends JComponent implements ChartDecorator {\n \n \n     private void paintHorizontalAxis(Graphics g, Rectangle clip, Rectangle chartMask) {\n+\n+        g.setColor(getForeground());\n+\n         if (location == SwingConstants.NORTH) {\n             g.drawLine(chartMask.x - 1, getHeight() - 1, chartMask.x + chartMask.width, getHeight() - 1);\n         } else {\n             g.drawLine(chartMask.x, 0, chartMask.x + chartMask.width, 0);\n         }\n \n-//        int viewStart = SwingUtilities.convertPoint(this, chartMask.x, 0, chart).x;\n-//        int viewEnd = viewStart + chartMask.width;\n-////        long dataStart = chart.getChartContext().getDataX(viewStart);\n-////        long dataEnd = chart.getChartContext().getDataX(viewStart + chartMask.width);\n-//\n-//        Iterator<AxisMarksComputer.Mark> marks = marksComputer.marksIterator(\n-//                                                 viewStart, viewEnd);\n-//\n-//        g.setColor(getForeground());\n-//        g.setFont(getFont());\n-//\n-//        while (marks.hasNext()) {\n-//            AxisMarksComputer.Mark mark = marks.next();\n-//            int x = ChartContext.getCheckedIntValue(chart.getChartContext().getViewX(mark.getValue()));\n-//            x = SwingUtilities.convertPoint(chart, x, 0, this).x;\n-//\n-//            if (x < chartMask.x || x >= chartMask.x + chartMask.width) continue;\n-//\n-//            int height = 10;\n-//            Component painter = marksPainter.getPainter(mark);\n-//            painter.setSize(painter.getPreferredSize());\n-//            int markHeight = painter.getHeight();\n-//            int markOffsetX = painter.getWidth() / 2;\n-//            maxExtent = Math.max(maxExtent, markHeight);\n-//\n-//            if (location == SwingConstants.NORTH) {\n-//                g.drawLine(x, getHeight() - 2, x, getHeight() - 2 - height);\n-//\n-//                g.translate(x - markOffsetX, getHeight() - 7 - height - markHeight);\n-//                painter.paint(g);\n-//                g.translate(-x + markOffsetX, -getHeight() + 7 + height + markHeight);\n-//            } else {\n-//                g.drawLine(x, 1, x, 1 + height);\n-//\n-//                g.translate(x - markOffsetX, 1 + height);\n-//                painter.paint(g);\n-//                g.translate(-x + markOffsetX, -1 - height);\n-//            }\n-//        }\n-    }\n-\n-    private void paintHorizontalAxisMesh(Graphics2D g, Rectangle clip, Rectangle chartMask) {\n-//        long dataStart = chart.getChartContext().getDataX(chartMask.x);\n-//        long dataEnd = chart.getChartContext().getDataX(chartMask.x + chartMask.width);\n+        int viewStart = SwingUtilities.convertPoint(this, chartMask.x, 0, chart).x - 1; // -1: extra 1px for axis\n+        int viewEnd = viewStart + chartMask.width + 2; // +2 extra 1px + 1px for axis\n \n         Iterator<AxisMarksComputer.Mark> marks = marksComputer.marksIterator(\n-                                                 chartMask.x, chartMask.x + chartMask.width);\n+                                                 viewStart, viewEnd);\n \n-        g.setColor(getForeground());\n-        g.setFont(getFont());\n+        int lZeroOffset = chart.isRightBased() ? 0 : 1;\n+        int rZeroOffset = chart.isRightBased() ? 1 : 0;\n \n         while (marks.hasNext()) {\n             AxisMarksComputer.Mark mark = marks.next();\n-            int x = ChartContext.getCheckedIntValue(chart.getChartContext().getViewX(mark.getValue()));\n+//            int x = ChartContext.getCheckedIntValue(chart.getChartContext().getViewX(mark.getValue()));\n+            int x = SwingUtilities.convertPoint(chart, mark.getPosition(), 0, this).x;\n+\n+            if (x < chartMask.x - lZeroOffset ||\n+                x >= chartMask.x + chartMask.width + rZeroOffset) continue;\n+\n+            int height = 10;\n+            Component painter = marksPainter.getPainter(mark);\n+            painter.setSize(painter.getPreferredSize());\n+            int markHeight = painter.getHeight();\n+            int markOffsetX = painter.getWidth() / 2;\n+            maxExtent = Math.max(maxExtent, markHeight);\n \n-//            if (x < chartMask.x || x >= chartMask.x + chartMask.width) continue;\n+            g.setColor(getForeground());\n \n             if (location == SwingConstants.NORTH) {\n-                g.setPaint(meshPaint);\n-                g.setStroke(meshStroke);\n-                g.drawLine(x, chartMask.y, x, chartMask.y + chartMask.height);\n+                g.drawLine(x, getHeight() - 2, x, getHeight() - 2 - height);\n+\n+                g.translate(x - markOffsetX, getHeight() - 7 - height - markHeight);\n+                painter.paint(g);\n+                g.translate(-x + markOffsetX, -getHeight() + 7 + height + markHeight);\n             } else {\n+                g.drawLine(x, 1, x, 1 + height - 4);\n \n+                g.translate(x - markOffsetX, 1 + height);\n+                painter.paint(g);\n+                g.translate(-x + markOffsetX, -1 - height);\n             }\n         }\n     }\n \n+    private void paintHorizontalAxisMesh(Graphics2D g, Rectangle clip, Rectangle chartMask) {\n+        Iterator<AxisMarksComputer.Mark> marks = marksComputer.marksIterator(\n+                                                 chartMask.x, chartMask.x + chartMask.width);\n+\n+        while (marks.hasNext()) {\n+            AxisMarksComputer.Mark mark = marks.next();\n+            int x = ChartContext.getCheckedIntValue(chart.getChartContext().getViewX(mark.getValue()));\n+\n+            g.setPaint(meshPaint);\n+            g.setStroke(meshStroke);\n+            g.drawLine(x, chartMask.y, x, chartMask.y + chartMask.height);\n+        }\n+    }\n+\n     private void paintVerticalAxis(Graphics g, Rectangle clip, Rectangle chartMask) {\n+\n+        g.setColor(getForeground());\n+        \n         if (location == SwingConstants.WEST) {\n             g.drawLine(getWidth() - 1, chartMask.y - 1, getWidth() - 1, chartMask.y + chartMask.height);\n         } else {\n             g.drawLine(0, chartMask.y, 0, chartMask.y + chartMask.height);\n         }\n \n-//        int viewStart = SwingUtilities.convertPoint(this, 0, chartMask.y, chart).y;\n-//        int viewEnd = viewStart + chartMask.height;\n-////        long dataStart = chart.getChartContext().getDataY(viewStart);\n-////        long dataEnd = chart.getChartContext().getDataY(viewStart + chartMask.height);\n-//\n-//        Iterator<AxisMarksComputer.Mark> marks = marksComputer.marksIterator(\n-//                                                 viewStart, viewEnd);\n-//\n-//        g.setColor(getForeground());\n-//        g.setFont(getFont());\n-//\n-//        while (marks.hasNext()) {\n-//            AxisMarksComputer.Mark mark = marks.next();\n-//            int y = ChartContext.getCheckedIntValue(chart.getChartContext().getViewY(mark.getValue()));\n-//            y = SwingUtilities.convertPoint(chart, 0, y, this).y;\n-//\n-//            if (y < chartMask.y || y >= chartMask.y + chartMask.height) continue;\n-//\n-//            int width = 10;\n-//            Component painter = marksPainter.getPainter(mark);\n-//            painter.setSize(painter.getPreferredSize());\n-//            int markWidth = painter.getWidth();\n-//            int markOffsetY = painter.getHeight() / 2;\n-//            maxExtent = Math.max(maxExtent, markWidth);\n-//\n-//            if (location == SwingConstants.WEST) {\n-//                g.drawLine(getWidth() - 2, y, getWidth() - 2 - width, y);\n-//\n-//                g.translate(getWidth() - markWidth - 15, y - markOffsetY);\n-//                painter.paint(g);\n-//                g.translate(-getWidth() + markWidth + 15, -y + markOffsetY);\n-//            } else {\n-//                g.drawLine(1, y, 1 + width, y);\n-//\n-//                g.translate(width + 5, y - markOffsetY);\n-//                painter.paint(g);\n-//                g.translate(-width - 5, -y + markOffsetY);\n-//            }\n-//        }\n-    }\n-\n-    private void paintVerticalAxisMesh(Graphics2D g, Rectangle clip, Rectangle chartMask) {\n-//        long dataStart = chart.getChartContext().getDataY(chartMask.y);\n-//        long dataEnd = chart.getChartContext().getDataY(chartMask.y + chartMask.height);\n+        int viewStart = SwingUtilities.convertPoint(this, 0, chartMask.y, chart).y;\n+        int viewEnd = viewStart + chartMask.height;\n \n         Iterator<AxisMarksComputer.Mark> marks = marksComputer.marksIterator(\n-                                                 chartMask.y, chartMask.y + chartMask.height);\n+                                                 viewStart, viewEnd);\n \n-        g.setColor(getForeground());\n-        g.setFont(getFont());\n+        int tZeroOffset = chart.isBottomBased() ? 0 : 1;\n+        int bZeroOffset = chart.isBottomBased() ? 1 : 0;\n \n         while (marks.hasNext()) {\n             AxisMarksComputer.Mark mark = marks.next();\n-            int y = ChartContext.getCheckedIntValue(chart.getChartContext().getViewY(mark.getValue()));\n+//            System.err.println(\">>> Mark value: \" + mark.getValue() + \", mark position: \" + mark.getPosition());\n+//            int y = ChartContext.getCheckedIntValue(chart.getChartContext().getViewY(mark.getValue()));\n+//            int y = ChartContext.getCheckedIntValue(chart.getChartContext().getViewY(mark.getValue()));\n+            int y = SwingUtilities.convertPoint(chart, 0, mark.getPosition(), this).y;\n \n-//            if (y < chartMask.y || y >= chartMask.y + chartMask.height) continue;\n+            if (y < chartMask.y - tZeroOffset ||\n+                y >= chartMask.y + chartMask.height + bZeroOffset) continue;\n+\n+            int width = 6;\n+            Component painter = marksPainter.getPainter(mark);\n+            painter.setSize(painter.getPreferredSize());\n+            int markWidth = painter.getWidth();\n+            int markOffsetY = painter.getHeight() / 2;\n+            maxExtent = Math.max(maxExtent, markWidth);\n+\n+            g.setColor(getForeground());\n \n             if (location == SwingConstants.WEST) {\n-                g.setPaint(meshPaint);\n-                g.setStroke(meshStroke);\n-                g.drawLine(chartMask.x, y, chartMask.x + chartMask.width, y);\n+                g.drawLine(getWidth() - 2, y, getWidth() - 2 - width, y);\n+\n+                g.translate(getWidth() - markWidth - 15, y - markOffsetY);\n+                painter.paint(g);\n+                g.translate(-getWidth() + markWidth + 15, -y + markOffsetY);\n             } else {\n+                g.drawLine(1, y, 1 + width, y);\n \n+      ",
    "Updated changelog to reflect latest changes": "diff --git a/changelog.txt b/changelog.txt\nindex 2f095532..b6d3d9d8 100644\n--- a/changelog.txt\n+++ b/changelog.txt\n@@ -2,6 +2,7 @@ Change log next version\n -----------------------\n * Ensure RequestSpecBuilder picks up static config (issue 1012). (thanks to Peter Major for pull request)\n * Support multiple 'Set-Cookie' headers in a response (issue 1016). (thanks to runtarinn for pull request)\n+* Fixed OAuth 1 for GET requests (thanks to Corneliu Duplachi for pull request)\n \n Change log 3.1.0 (2018-04-20)\n -----------------------------",
    "Add dependency management for micrometer - registry - stackdriver .": "diff --git a/spring-boot-project/spring-boot-dependencies/pom.xml b/spring-boot-project/spring-boot-dependencies/pom.xml\nindex ed0d84fdc5..dfccf18f8e 100644\n--- a/spring-boot-project/spring-boot-dependencies/pom.xml\n+++ b/spring-boot-project/spring-boot-dependencies/pom.xml\n@@ -964,6 +964,11 @@\n \t\t\t\t<artifactId>micrometer-registry-signalfx</artifactId>\n \t\t\t\t<version>${micrometer.version}</version>\n \t\t\t</dependency>\n+\t\t\t<dependency>\n+\t\t\t\t<groupId>io.micrometer</groupId>\n+\t\t\t\t<artifactId>micrometer-registry-stackdriver</artifactId>\n+\t\t\t\t<version>${micrometer.version}</version>\n+\t\t\t</dependency>\n \t\t\t<dependency>\n \t\t\t\t<groupId>io.micrometer</groupId>\n \t\t\t\t<artifactId>micrometer-registry-statsd</artifactId>",
    "Remove uses of PartialGraph in AuditClasspathCommand . . Summary : .": "diff --git a/src/com/facebook/buck/cli/AuditClasspathCommand.java b/src/com/facebook/buck/cli/AuditClasspathCommand.java\nindex a7b9ff2905..e74b933436 100644\n--- a/src/com/facebook/buck/cli/AuditClasspathCommand.java\n+++ b/src/com/facebook/buck/cli/AuditClasspathCommand.java\n@@ -21,7 +21,8 @@ import com.facebook.buck.java.HasClasspathEntries;\n import com.facebook.buck.json.BuildFileParseException;\n import com.facebook.buck.model.BuildTarget;\n import com.facebook.buck.model.BuildTargetException;\n-import com.facebook.buck.parser.PartialGraph;\n+import com.facebook.buck.parser.ParseContext;\n+import com.facebook.buck.parser.TargetGraph;\n import com.facebook.buck.rules.ActionGraph;\n import com.facebook.buck.rules.BuildRule;\n import com.facebook.buck.rules.TargetNode;\n@@ -30,7 +31,7 @@ import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.Function;\n import com.google.common.base.Functions;\n import com.google.common.base.Preconditions;\n-import com.google.common.base.Predicate;\n+import com.google.common.collect.FluentIterable;\n import com.google.common.collect.ImmutableSet;\n import com.google.common.collect.Iterables;\n import com.google.common.collect.LinkedHashMultimap;\n@@ -57,29 +58,30 @@ public class AuditClasspathCommand extends AbstractCommandRunner<AuditCommandOpt\n   @Override\n   int runCommandWithOptionsInternal(AuditCommandOptions options)\n       throws IOException, InterruptedException {\n-    // Create a PartialGraph that is composed of the transitive closure of all of the dependent\n+    // Create a TargetGraph that is composed of the transitive closure of all of the dependent\n     // BuildRules for the specified BuildTargets.\n-    final ImmutableSet<String> fullyQualifiedBuildTargets = ImmutableSet.copyOf(\n-        options.getArgumentsFormattedAsBuildTargets());\n-\n-    if (fullyQualifiedBuildTargets.isEmpty()) {\n+    final ImmutableSet<BuildTarget> targets = FluentIterable\n+        .from(options.getArgumentsFormattedAsBuildTargets())\n+        .transform(new Function<String, BuildTarget>() {\n+                     @Override\n+                     public BuildTarget apply(String input) {\n+                       return getParser().getBuildTargetParser().parse(\n+                           input,\n+                           ParseContext.fullyQualified());\n+                     }\n+                   })\n+        .toSet();\n+\n+    if (targets.isEmpty()) {\n       console.printBuildFailure(\"Please specify at least one build target.\");\n       return 1;\n     }\n \n-    PartialGraph partialGraph;\n+    TargetGraph targetGraph;\n     try {\n-      partialGraph = PartialGraph.createPartialGraph(\n-          new Predicate<TargetNode<?>>() {\n-            @Override\n-            public boolean apply(TargetNode<?> input) {\n-              return fullyQualifiedBuildTargets.contains(\n-                  input.getBuildTarget().getFullyQualifiedName());\n-            }\n-          },\n-          getProjectFilesystem(),\n+      targetGraph = getParser().buildTargetGraphForBuildTargets(\n+          targets,\n           options.getDefaultIncludes(),\n-          getParser(),\n           getBuckEventBus(),\n           console,\n           environment,\n@@ -90,23 +92,23 @@ public class AuditClasspathCommand extends AbstractCommandRunner<AuditCommandOpt\n     }\n \n     if (options.shouldGenerateDotOutput()) {\n-      return printDotOutput(partialGraph.getTargetGraph().getActionGraph(getBuckEventBus()));\n+      return printDotOutput(targetGraph);\n     } else if (options.shouldGenerateJsonOutput()) {\n-      return printJsonClasspath(partialGraph);\n+      return printJsonClasspath(targetGraph, targets);\n     } else {\n-      return printClasspath(partialGraph);\n+      return printClasspath(targetGraph, targets);\n     }\n   }\n \n   @VisibleForTesting\n-  int printDotOutput(ActionGraph actionGraph) {\n-    Dot<BuildRule> dot = new Dot<BuildRule>(\n+  int printDotOutput(TargetGraph actionGraph) {\n+    Dot<TargetNode<?>> dot = new Dot<>(\n         actionGraph,\n         \"action_graph\",\n-        new Function<BuildRule, String>() {\n+        new Function<TargetNode<?>, String>() {\n           @Override\n-          public String apply(BuildRule buildRule) {\n-            return \"\\\"\" + buildRule.getFullyQualifiedName() + \"\\\"\";\n+          public String apply(TargetNode<?> targetNode) {\n+            return \"\\\"\" + targetNode.getBuildTarget().getFullyQualifiedName() + \"\\\"\";\n           }\n         },\n         getStdOut());\n@@ -119,9 +121,8 @@ public class AuditClasspathCommand extends AbstractCommandRunner<AuditCommandOpt\n   }\n \n   @VisibleForTesting\n-  int printClasspath(PartialGraph partialGraph) {\n-    ImmutableSet<BuildTarget> targets = partialGraph.getTargets();\n-    ActionGraph graph = partialGraph.getTargetGraph().getActionGraph(getBuckEventBus());\n+  int printClasspath(TargetGraph targetGraph, ImmutableSet<BuildTarget> targets) {\n+    ActionGraph graph = targetGraph.getActionGraph(getBuckEventBus());\n     SortedSet<Path> classpathEntries = Sets.newTreeSet();\n \n     for (BuildTarget target : targets) {\n@@ -143,9 +144,9 @@ public class AuditClasspathCommand extends AbstractCommandRunner<AuditCommandOpt\n   }\n \n   @VisibleForTesting\n-  int printJsonClasspath(PartialGraph partialGraph) throws IOException {\n-    ActionGraph graph = partialGraph.getTargetGraph().getActionGraph(getBuckEventBus());\n-    ImmutableSet<BuildTarget> targets = partialGraph.getTargets();\n+  int printJsonClasspath(TargetGraph targetGraph, ImmutableSet<BuildTarget> targets)\n+      throws IOException {\n+    ActionGraph graph = targetGraph.getActionGraph(getBuckEventBus());\n     Multimap<String, String> targetClasspaths = LinkedHashMultimap.create();\n \n     for (BuildTarget target : targets) {\n@@ -162,9 +163,7 @@ public class AuditClasspathCommand extends AbstractCommandRunner<AuditCommandOpt\n     }\n \n     // Note: using `asMap` here ensures that the keys are sorted\n-    getObjectMapper().writeValue(\n-        console.getStdOut(),\n-        targetClasspaths.asMap());\n+    getObjectMapper().writeValue(console.getStdOut(), targetClasspaths.asMap());\n \n     return 0;\n   }\ndiff --git a/test/com/facebook/buck/cli/AuditClasspathCommandTest.java b/test/com/facebook/buck/cli/AuditClasspathCommandTest.java\nindex fc5cf83387..644a1a3dbe 100644\n--- a/test/com/facebook/buck/cli/AuditClasspathCommandTest.java\n+++ b/test/com/facebook/buck/cli/AuditClasspathCommandTest.java\n@@ -29,8 +29,6 @@ import com.facebook.buck.java.JavaTestBuilder;\n import com.facebook.buck.java.KeystoreBuilder;\n import com.facebook.buck.model.BuildTarget;\n import com.facebook.buck.model.BuildTargetFactory;\n-import com.facebook.buck.parser.PartialGraph;\n-import com.facebook.buck.parser.PartialGraphFactory;\n import com.facebook.buck.rules.ArtifactCache;\n import com.facebook.buck.rules.FakeRepositoryFactory;\n import com.facebook.buck.rules.NoopArtifactCache;\n@@ -93,11 +91,9 @@ public class AuditClasspathCommandTest {\n   public void testClassPathOutput()\n       throws IOException, InterruptedException {\n     // Test that no output is created.\n-    PartialGraph partialGraph1 = PartialGraphFactory.newInstance(\n-        TargetGraphFactory.newInstance(\n-            ImmutableSet.<TargetNode<?>>of()),\n+    auditClasspathCommand.printClasspath(\n+        TargetGraphFactory.newInstance(ImmutableSet.<TargetNode<?>>of()),\n         ImmutableSet.<BuildTarget>of());\n-    auditClasspathCommand.printClasspath(partialGraph1);\n     assertEquals(\"\", console.getTextWrittenToStdOut());\n     assertEquals(\"\", console.getTextWrittenToStdErr());\n \n@@ -139,7 +135,7 @@ public class AuditClasspathCommandTest {\n         .addSrc(Paths.get(\"src/com/facebook/test/ProjectTests.java\"))\n         .build();\n \n-    PartialGraph partialGraph2 = PartialGraphFactory.newInstance(\n+    auditClasspathCommand.printClasspath(\n         TargetGraphFactory.newInstance(\n             ImmutableSet.of(\n                 javaLibraryNode,\n@@ -148,7 +144,6 @@ public class AuditClasspathCommandTest {\n                 testAndroidNode,\n                 testJavaNode)),\n         ImmutableSet.<BuildTarget>of());\n-    auditClasspathCommand.printClasspath(partialGraph2);\n \n     // Still empty.\n     assertEquals(\"\", console.getTextWrittenToStdOut());\n@@ -158,7 +153,7 @@ public class AuditClasspathCommandTest {\n     // - paths don't appear multiple times when dependencies are referenced multiple times.\n     // - dependencies are walked\n     // - independent targets in the same BUCK file are not included in the output\n-    PartialGraph partialGraph3 =  PartialGraphFactory.newInstance(\n+    auditClasspathCommand.printClasspath(\n         TargetGraphFactory.newInstance(\n             ImmutableSet.of(\n                 javaLibraryNode,\n@@ -168,7 +163,6 @@ public class AuditClasspathCommandTest {\n                 testJavaNode)),\n         ImmutableSet.of(\n             testAndroidTarget));\n-    auditClasspathCommand.printClasspath(partialGraph3);\n \n     SortedSet<String> expectedPaths = Sets.newTreeSet(\n         Arrays.asList(\n@@ -184,7 +178,7 @@ public class AuditClasspathCommandTest {\n     // - all rules have implemented HasClasspathEntries.\n     // Note that the output streams are reset.\n     setUp();\n-    PartialGraph partialGraph4 =  PartialGraphFactory.newInstance(\n+    auditClasspathCommand.printClasspath(\n         TargetGraphFactory.newInstance(\n             ImmutableSet.of(\n                 javaLibraryNode,\n@@ -197,7 +191,6 @@ public class AuditClasspathCommandTest {\n             javaLibraryTarget,\n             androidLibraryTarget,\n             testJavaTarget));\n-    auditClasspathCommand.printClasspath(partialGraph4);\n \n     expectedPaths.add(GEN_DIR + \"/lib__project-tests__output/project-tests.jar\");\n     expectedClasspath = Joiner.on(\"\\n\").join(expectedPaths) + \"\\n\";\n@@ -235,7 +228,7 @@ public class AuditClasspathCommandTest {\n         .addDep(javaTarget)\n         .build();\n \n-    PartialGraph partialGraph =  PartialGraphFactory.newInstance(\n+    auditClasspathCommand.printJsonClasspath(\n         TargetGraphFactory.newInstance(\n             ImmutableSet.of(\n                 androidNode,\n@@ -243,7 +236,6 @@ public class AuditClasspathCommandTest {\n         ImmutableSet.of(\n             androidTarget,\n             javaTarget));\n-    auditClasspathCommand.printJsonClasspath(partialGraph);\n \n     assertEquals(EXPECTED_JSON, console.getTextWrittenToStdOut());\n     assertEquals(\"\", console.getTextWrittenToStdErr());",
    "added a validator that checks for mismatches in the argument list of method invocations": "diff --git a/src/soot/jimple/JimpleBody.java b/src/soot/jimple/JimpleBody.java\nindex 83ff996783..8b6fb9ba20 100644\n--- a/src/soot/jimple/JimpleBody.java\n+++ b/src/soot/jimple/JimpleBody.java\n@@ -36,6 +36,7 @@ import soot.SootMethod;\n import soot.Type;\n import soot.Unit;\n import soot.jimple.validation.IdentityStatementsValidator;\n+import soot.jimple.validation.InvokeArgumentValidator;\n import soot.jimple.validation.ReturnStatementsValidator;\n import soot.jimple.validation.TypesValidator;\n import soot.options.Options;\n@@ -58,6 +59,7 @@ public class JimpleBody extends StmtBody\n \t\t\t\tIdentityStatementsValidator.v(),\n \t\t\t\tTypesValidator.v(),\n \t\t\t\tReturnStatementsValidator.v(),\n+\t\t\t\tInvokeArgumentValidator.v(),\n \t\t\t\t//InvokeValidator.v()\n \t\t\t};\n \t\t}\ndiff --git a/src/soot/jimple/validation/InvokeArgumentValidator.java b/src/soot/jimple/validation/InvokeArgumentValidator.java\nnew file mode 100644\nindex 0000000000..1726544747\n--- /dev/null\n+++ b/src/soot/jimple/validation/InvokeArgumentValidator.java\n@@ -0,0 +1,45 @@\n+package soot.jimple.validation;\n+\n+import java.util.List;\n+\n+import soot.Body;\n+import soot.Unit;\n+import soot.jimple.InvokeExpr;\n+import soot.jimple.Stmt;\n+import soot.validation.BodyValidator;\n+import soot.validation.ValidationException;\n+\n+/**\n+ * A basic validator that checks whether the length of the invoke statement's\n+ * argument list matches the length of the target methods's parameter type list.\n+ * \n+ * @author Steven Arzt\n+ */\n+public class InvokeArgumentValidator implements BodyValidator {\n+\n+\tprivate static InvokeArgumentValidator INSTANCE;\n+\t\n+\tpublic static InvokeArgumentValidator v() {\n+\t\tif (INSTANCE == null)\n+\t\t\tINSTANCE = new InvokeArgumentValidator();\n+\t\treturn INSTANCE;\n+\t}\n+\t\n+\t@Override\n+\tpublic void validate(Body body, List<ValidationException> exceptions) {\n+\t\tfor (Unit u : body.getUnits()) {\n+\t\t\tStmt s = (Stmt) u;\n+\t\t\tif (s.containsInvokeExpr()) {\n+\t\t\t\tInvokeExpr iinvExpr = s.getInvokeExpr();\n+\t\t\t\tif (iinvExpr.getArgCount() != iinvExpr.getMethod().getParameterCount())\n+\t\t\t\t\texceptions.add(new ValidationException(s, \"Invalid number of arguments\"));\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic boolean isBasicValidator() {\n+\t\treturn true;\n+\t}\n+\n+}\ndiff --git a/src/soot/jimple/validation/TypesValidator.java b/src/soot/jimple/validation/TypesValidator.java\nindex 7725e9b0b7..ce7eac852e 100644\n--- a/src/soot/jimple/validation/TypesValidator.java\n+++ b/src/soot/jimple/validation/TypesValidator.java\n@@ -9,6 +9,11 @@ import soot.Type;\n import soot.validation.BodyValidator;\n import soot.validation.ValidationException;\n \n+/**\n+ * Checks whether the types used for locals, method parameters, and method\n+ * return values are allowed in final Jimple code. This reports an error\n+ * if a method uses e.g., null_type.\n+ */\n public class TypesValidator implements BodyValidator {\n \tpublic static TypesValidator INSTANCE;\n \t",
    "Fail subquery if returning a variable that was already bound outside": "diff --git a/community/cypher/front-end/ast/src/main/scala/org/neo4j/cypher/internal/v4_0/ast/Clause.scala b/community/cypher/front-end/ast/src/main/scala/org/neo4j/cypher/internal/v4_0/ast/Clause.scala\nindex 12b22f70626..3333fd1c3d2 100644\n--- a/community/cypher/front-end/ast/src/main/scala/org/neo4j/cypher/internal/v4_0/ast/Clause.scala\n+++ b/community/cypher/front-end/ast/src/main/scala/org/neo4j/cypher/internal/v4_0/ast/Clause.scala\n@@ -827,13 +827,14 @@ case class SubQuery(sq: SingleQuery)(val position: InputPosition) extends SubQue\n     // - Returned variables are added to outer scope\n     val input: Scope = s.currentScope.scope\n     val branch: SemanticState = s.newSiblingScope\n-    val result: SemanticCheckResult = sq.semanticCheck(branch)\n-    val output: Scope = sq.finalScope(result.state.currentScope.scope)\n-    val merged: SemanticState =\n-      result.state.newSiblingScope\n-        .importValuesFromScope(input)\n-        .importValuesFromScope(output)\n-    result.copy(state = merged)\n+    val inner: SemanticCheckResult = sq.semanticCheck(branch)\n+    val output: Scope = sq.finalScope(inner.state.currentScope.scope)\n+    val imported: SemanticState = inner.state.newSiblingScope.importValuesFromScope(input)\n+    val merged: SemanticCheckResult =\n+      output.valueSymbolTable.values\n+        .foldSemanticCheck(symbol => declareVariable(symbol.definition.asVariable, symbol.types))(imported)\n+\n+    SemanticCheckResult(merged.state, inner.errors ++ merged.errors)\n   }\n \n   override def semanticCheckContinuation(previousScope: Scope): SemanticCheck = { s =>\ndiff --git a/community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/v4_0/ast/SubQueryTest.scala b/community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/v4_0/ast/SubQueryTest.scala\nindex c85cfe1dabc..d7d963c7e6c 100644\n--- a/community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/v4_0/ast/SubQueryTest.scala\n+++ b/community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/v4_0/ast/SubQueryTest.scala\n@@ -48,10 +48,8 @@ class SubQueryTest extends CypherFunSuite with AstConstructionHelp {\n       return_(v(\"y\") -> v(\"y\"), v(\"x\") -> v(\"x\"))\n     )\n \n-\n     val result = sq.semanticCheck(clean)\n \n-    println(result.errors)\n     result.errors.size shouldEqual 0\n   }\n \n@@ -69,4 +67,19 @@ class SubQueryTest extends CypherFunSuite with AstConstructionHelp {\n     result.errors.size shouldEqual 1\n     result.errors.head.msg should include (\"Variable `x` not defined\")\n   }\n+\n+  test(\"should fail on variable name collision\") {\n+    val sq = singleQuery(\n+      with_(i(\"1\") -> v(\"x\")),\n+      subQuery(\n+        return_(i(\"2\") -> v(\"x\"))\n+      ),\n+      return_(i(\"1\") -> v(\"y\"))\n+    )\n+\n+    val result = sq.semanticCheck(clean)\n+\n+    result.errors.size shouldEqual 1\n+    result.errors.head.msg should include (\"Variable `x` already declared\")\n+  }\n }",
    "remove PacketHeader": "diff --git a/sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/client/response/mysql/MySQLResponseHandler.java b/sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/client/response/mysql/MySQLResponseHandler.java\nindex 554d2391285..c15de6d9c9e 100644\n--- a/sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/client/response/mysql/MySQLResponseHandler.java\n+++ b/sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/client/response/mysql/MySQLResponseHandler.java\n@@ -27,7 +27,6 @@ import io.shardingsphere.proxy.backend.netty.future.FutureRegistry;\n import io.shardingsphere.proxy.config.RuleRegistry;\n import io.shardingsphere.proxy.runtime.ChannelRegistry;\n import io.shardingsphere.proxy.transport.mysql.constant.CapabilityFlag;\n-import io.shardingsphere.proxy.transport.mysql.constant.PacketHeader;\n import io.shardingsphere.proxy.transport.mysql.constant.ServerInfo;\n import io.shardingsphere.proxy.transport.mysql.packet.MySQLPacketPayload;\n import io.shardingsphere.proxy.transport.mysql.packet.command.query.ColumnDefinition41Packet;\n@@ -66,15 +65,12 @@ public final class MySQLResponseHandler extends ResponseHandler {\n     @Override\n     public void channelRead(final ChannelHandlerContext context, final Object message) {\n         MySQLPacketPayload payload = new MySQLPacketPayload((ByteBuf) message);\n-        payload.getByteBuf().markReaderIndex();\n-        payload.readInt1();\n-        int header = payload.readInt1();\n-        payload.getByteBuf().resetReaderIndex();\n+        int header = getHeader(payload);\n         if (AuthType.UN_AUTH == authType) {\n             auth(context, payload);\n             authType = AuthType.AUTHING;\n         } else if (AuthType.AUTHING == authType) {\n-            if (PacketHeader.OK.getValue() == header) {\n+            if (OKPacket.HEADER == header) {\n                 okPacket(context, payload);\n                 authType = AuthType.AUTH_SUCCESS;\n             } else {\n@@ -84,11 +80,11 @@ public final class MySQLResponseHandler extends ResponseHandler {\n         } else if (AuthType.AUTH_FAILED == authType) {\n             log.error(\"mysql auth failed, cannot handle channel read message\");\n         } else {\n-            if (PacketHeader.EOF.getValue() == header) {\n+            if (EofPacket.HEADER == header) {\n                 eofPacket(context, payload);\n-            } else if (PacketHeader.OK.getValue() == header) {\n+            } else if (OKPacket.HEADER == header) {\n                 okPacket(context, payload);\n-            } else if (PacketHeader.ERR.getValue() == header) {\n+            } else if (ErrPacket.HEADER == header) {\n                 errPacket(context, payload);\n             } else {\n                 commonPacket(context, payload);\n@@ -96,6 +92,14 @@ public final class MySQLResponseHandler extends ResponseHandler {\n         }\n     }\n     \n+    private int getHeader(final MySQLPacketPayload payload) {\n+        payload.getByteBuf().markReaderIndex();\n+        payload.readInt1();\n+        int result = payload.readInt1();\n+        payload.getByteBuf().resetReaderIndex();\n+        return result;\n+    }\n+    \n     @Override\n     protected void auth(final ChannelHandlerContext context, final MySQLPacketPayload payload) {\n         try {\n@@ -169,12 +173,6 @@ public final class MySQLResponseHandler extends ResponseHandler {\n         }\n     }\n     \n-    @Override\n-    public void channelInactive(final ChannelHandlerContext ctx) throws Exception {\n-        //TODO delete connection map.\n-        super.channelInactive(ctx);\n-    }\n-    \n     private byte[] securePasswordAuthentication(final byte[] password, final byte[] authPluginData) {\n         try {\n             MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n@@ -200,4 +198,10 @@ public final class MySQLResponseHandler extends ResponseHandler {\n             FutureRegistry.getInstance().get(connectionId).setResponse(resultMap.get(connectionId));\n         }\n     }\n+    \n+    @Override\n+    public void channelInactive(final ChannelHandlerContext ctx) throws Exception {\n+        //TODO delete connection map.\n+        super.channelInactive(ctx);\n+    }\n }\ndiff --git a/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/constant/PacketHeader.java b/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/constant/PacketHeader.java\ndeleted file mode 100644\nindex e59b7f11e12..00000000000\n--- a/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/constant/PacketHeader.java\n+++ /dev/null\n@@ -1,39 +0,0 @@\n-/*\n- * Copyright 2016-2018 shardingsphere.io.\n- * <p>\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- * </p>\n- */\n-\n-package io.shardingsphere.proxy.transport.mysql.constant;\n-\n-import lombok.Getter;\n-import lombok.RequiredArgsConstructor;\n-\n-/**\n- * Generic Packet Header.\n- *\n- * @author linjiaqi\n- */\n-@RequiredArgsConstructor\n-@Getter\n-public enum PacketHeader {\n-    \n-    OK(0x00),\n-    \n-    EOF(0xfe),\n-    \n-    ERR(0xff);\n-    \n-    private final int value;\n-}\ndiff --git a/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/EofPacket.java b/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/EofPacket.java\nindex 64607842147..e69f201fd8f 100644\n--- a/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/EofPacket.java\n+++ b/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/EofPacket.java\n@@ -36,7 +36,10 @@ import lombok.RequiredArgsConstructor;\n @Getter\n public final class EofPacket implements MySQLPacket {\n     \n-    private static final int HEADER = 0xfe;\n+    /**\n+     * Header of EOF packet.\n+     */\n+    public static final int HEADER = 0xfe;\n     \n     private final int sequenceId;\n     \ndiff --git a/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/ErrPacket.java b/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/ErrPacket.java\nindex dfb181c03d0..87c0f7031b2 100644\n--- a/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/ErrPacket.java\n+++ b/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/ErrPacket.java\n@@ -38,7 +38,10 @@ import java.sql.SQLException;\n @Getter\n public final class ErrPacket implements MySQLPacket {\n     \n-    private static final int HEADER = 0xff;\n+    /**\n+     * Header of ERR packet.\n+     */\n+    public static final int HEADER = 0xff;\n     \n     private static final String SQL_STATE_MARKER = \"#\";\n     \ndiff --git a/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/OKPacket.java b/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/OKPacket.java\nindex 0d595d3c081..70d0c8c5873 100644\n--- a/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/OKPacket.java\n+++ b/sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/OKPacket.java\n@@ -36,7 +36,10 @@ import lombok.RequiredArgsConstructor;\n @Getter\n public final class OKPacket implements MySQLPacket {\n     \n-    private static final int HEADER = 0x00;\n+    /**\n+     * Header of OK packet.\n+     */\n+    public static final int HEADER = 0x00;\n     \n     private static final int STATUS_FLAG = StatusFlag.SERVER_STATUS_AUTOCOMMIT.getValue();\n     ",
    "Remove dialect distinction from the parser . . RELNOTES : None . . PiperOrigin - RevId : 166058718": "diff --git a/src/main/java/com/google/devtools/build/lib/syntax/Parser.java b/src/main/java/com/google/devtools/build/lib/syntax/Parser.java\nindex 03c50d3a3b..56e6233905 100644\n--- a/src/main/java/com/google/devtools/build/lib/syntax/Parser.java\n+++ b/src/main/java/com/google/devtools/build/lib/syntax/Parser.java\n@@ -14,8 +14,6 @@\n \n package com.google.devtools.build.lib.syntax;\n \n-import static com.google.devtools.build.lib.syntax.Parser.Dialect.SKYLARK;\n-\n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.Supplier;\n import com.google.common.collect.ImmutableList;\n@@ -108,15 +106,6 @@ public class Parser {\n           TokenKind.RPAREN,\n           TokenKind.SEMI);\n \n-  private static final EnumSet<TokenKind> BLOCK_STARTING_SET =\n-      EnumSet.of(\n-          TokenKind.CLASS,\n-          TokenKind.DEF,\n-          TokenKind.ELSE,\n-          TokenKind.FOR,\n-          TokenKind.IF,\n-          TokenKind.TRY);\n-\n   private static final EnumSet<TokenKind> EXPR_TERMINATOR_SET =\n       EnumSet.of(\n           TokenKind.COLON,\n@@ -130,14 +119,6 @@ public class Parser {\n           TokenKind.RPAREN,\n           TokenKind.SLASH);\n \n-  /**\n-   * Keywords that are forbidden in both Skylark and BUILD parsing modes.\n-   *\n-   * <p>(Mapping: token -> human-readable string description)\n-   */\n-  private static final ImmutableMap<TokenKind, String> ILLEGAL_BLOCK_KEYWORDS =\n-      ImmutableMap.of(TokenKind.CLASS, \"Class definition\", TokenKind.TRY, \"Try statement\");\n-\n   private Token token; // current lookahead token\n   private Token pushedToken = null; // used to implement LL(2)\n   private int loopCount; // break/continue keywords can be used only inside a loop\n@@ -147,7 +128,6 @@ public class Parser {\n   private final Lexer lexer;\n   private final EventHandler eventHandler;\n   private final List<Comment> comments;\n-  private final Dialect dialect;\n \n   private static final Map<TokenKind, Operator> binaryOperators =\n       new ImmutableMap.Builder<TokenKind, Operator>()\n@@ -198,10 +178,9 @@ public class Parser {\n   private int errorsCount;\n   private boolean recoveryMode;  // stop reporting errors until next statement\n \n-  private Parser(Lexer lexer, EventHandler eventHandler, Dialect dialect) {\n+  private Parser(Lexer lexer, EventHandler eventHandler) {\n     this.lexer = lexer;\n     this.eventHandler = eventHandler;\n-    this.dialect = dialect;\n     this.tokens = lexer.getTokens().iterator();\n     this.comments = new ArrayList<>();\n     nextToken();\n@@ -229,13 +208,15 @@ public class Parser {\n   public static ParseResult parseFile(\n       ParserInputSource input, EventHandler eventHandler, Dialect dialect) {\n     Lexer lexer = new Lexer(input, eventHandler);\n-    Parser parser = new Parser(lexer, eventHandler, dialect);\n+    Parser parser = new Parser(lexer, eventHandler);\n     List<Statement> statements = parser.parseFileInput();\n+    boolean errors = parser.errorsCount > 0 || lexer.containsErrors();\n+    // TODO(laurentlb): Remove dialect argument.\n+    if (dialect == Dialect.BUILD) {\n+      errors |= !ValidationEnvironment.checkBuildSyntax(statements, eventHandler);\n+    }\n     return new ParseResult(\n-        statements,\n-        parser.comments,\n-        locationFromStatements(lexer, statements),\n-        parser.errorsCount > 0 || lexer.containsErrors());\n+        statements, parser.comments, locationFromStatements(lexer, statements), errors);\n   }\n \n   /**\n@@ -245,10 +226,9 @@ public class Parser {\n    * function definitions, for statements, etc., are allowed.\n    */\n   public static List<Statement> parseStatements(\n-      ParserInputSource input, EventHandler eventHandler,\n-      ParsingLevel parsingLevel, Dialect dialect) {\n+      ParserInputSource input, EventHandler eventHandler, ParsingLevel parsingLevel) {\n     Lexer lexer = new Lexer(input, eventHandler);\n-    Parser parser = new Parser(lexer, eventHandler, dialect);\n+    Parser parser = new Parser(lexer, eventHandler);\n     List<Statement> result = new ArrayList<>();\n     parser.parseStatement(result, parsingLevel);\n     while (parser.token.kind == TokenKind.NEWLINE) {\n@@ -264,18 +244,15 @@ public class Parser {\n    * @throws IllegalArgumentException if the number of parsed statements was not exactly one\n    */\n   public static Statement parseStatement(\n-      ParserInputSource input, EventHandler eventHandler,\n-      ParsingLevel parsingLevel, Dialect dialect) {\n-    List<Statement> stmts = parseStatements(\n-        input, eventHandler, parsingLevel, dialect);\n+      ParserInputSource input, EventHandler eventHandler, ParsingLevel parsingLevel) {\n+    List<Statement> stmts = parseStatements(input, eventHandler, parsingLevel);\n     return Iterables.getOnlyElement(stmts);\n   }\n \n   /** Parses an expression, possibly followed by newline tokens. */\n-  public static Expression parseExpression(\n-      ParserInputSource input, EventHandler eventHandler, Dialect dialect) {\n+  public static Expression parseExpression(ParserInputSource input, EventHandler eventHandler) {\n     Lexer lexer = new Lexer(input, eventHandler);\n-    Parser parser = new Parser(lexer, eventHandler, dialect);\n+    Parser parser = new Parser(lexer, eventHandler);\n     Expression result = parser.parseExpression();\n     while (parser.token.kind == TokenKind.NEWLINE) {\n       parser.nextToken();\n@@ -364,10 +341,24 @@ public class Parser {\n \n   // Keywords that exist in Python and that we don't parse.\n   private static final EnumSet<TokenKind> FORBIDDEN_KEYWORDS =\n-      EnumSet.of(TokenKind.AS, TokenKind.ASSERT,\n-          TokenKind.DEL, TokenKind.EXCEPT, TokenKind.FINALLY, TokenKind.FROM, TokenKind.GLOBAL,\n-          TokenKind.IMPORT, TokenKind.IS, TokenKind.LAMBDA, TokenKind.NONLOCAL, TokenKind.RAISE,\n-          TokenKind.TRY, TokenKind.WITH, TokenKind.WHILE, TokenKind.YIELD);\n+      EnumSet.of(\n+          TokenKind.AS,\n+          TokenKind.ASSERT,\n+          TokenKind.CLASS,\n+          TokenKind.DEL,\n+          TokenKind.EXCEPT,\n+          TokenKind.FINALLY,\n+          TokenKind.FROM,\n+          TokenKind.GLOBAL,\n+          TokenKind.IMPORT,\n+          TokenKind.IS,\n+          TokenKind.LAMBDA,\n+          TokenKind.NONLOCAL,\n+          TokenKind.RAISE,\n+          TokenKind.TRY,\n+          TokenKind.WITH,\n+          TokenKind.WHILE,\n+          TokenKind.YIELD);\n \n   private void checkForbiddenKeywords(Token token) {\n     if (!FORBIDDEN_KEYWORDS.contains(token.kind)) {\n@@ -450,22 +441,12 @@ public class Parser {\n     final int start = token.left;\n     // parse **expr\n     if (token.kind == TokenKind.STAR_STAR) {\n-      if (dialect != SKYLARK) {\n-        reportError(\n-            lexer.createLocation(token.left, token.right),\n-            \"**kwargs arguments are not allowed in BUILD files\");\n-      }\n       nextToken();\n       Expression expr = parseNonTupleExpression();\n       return setLocation(new Argument.StarStar(expr), start, expr);\n     }\n     // parse *expr\n     if (token.kind == TokenKind.STAR) {\n-      if (dialect != SKYLARK) {\n-        reportError(\n-            lexer.createLocation(token.left, token.right),\n-            \"*args arguments are not allowed in BUILD files\");\n-      }\n       nextToken();\n       Expression expr = parseNonTupleExpression();\n       return setLocation(new Argument.Star(expr), start, expr);\n@@ -1364,61 +1345,24 @@ public class Parser {\n     return list;\n   }\n \n-  // skipSuite does not check that the code is syntactically correct, it\n-  // just skips based on indentation levels.\n-  private void skipSuite() {\n-    if (token.kind == TokenKind.NEWLINE) {\n-      expect(TokenKind.NEWLINE);\n-      if (token.kind != TokenKind.INDENT) {\n-        reportError(lexer.createLocation(token.left, token.right),\n-                    \"expected an indented block\");\n-        return;\n-      }\n-      expect(TokenKind.INDENT);\n-\n-      // Don't try to parse all the Python syntax, just skip the block\n-      // until the corresponding outdent token.\n-      int depth = 1;\n-      while (depth > 0) {\n-        // Because of the way the lexer works, this should never happen\n-        Preconditions.checkState(token.kind != TokenKind.EOF);\n-\n-        if (token.kind == TokenKind.INDENT) {\n-          depth++;\n-        }\n-        if (token.kind == TokenKind.OUTDENT) {\n-          depth--;\n-        }\n-        nextToken();\n-      }\n-\n-    } else {\n-      // the block ends at the newline token\n-      // e.g.  if x == 3: print \"three\"\n-      syncTo(STATEMENT_TERMINATOR_SET);\n-    }\n-  }\n-\n   // stmt ::= simple_stmt\n   //        | compound_stmt\n   private void parseStatement(List<Statement> list, ParsingLevel parsingLevel) {\n-    if (token.kind == TokenKind.DEF && dialect == SKYLARK) {\n+    if (token.kind == TokenKind.DEF) {\n       if (parsingLevel == ParsingLevel.LOCAL_LEVEL) {\n         reportError(lexer.createLocation(token.left, token.right),\n             \"nested functions are not allowed. Move the function to top-level\");\n       }\n       parseFunctionDefStatement(list);\n-    } else if (token.kind == TokenKind.IF && dialect == SKYLARK) {\n+    } else if (token.kind == TokenKind.IF) {\n       list.add(parseIfStatement());\n-    } else if (token.kind == TokenKind.FOR && dialect == SKYLARK) {\n+    } else if (token.kind == TokenKind.FOR) {\n       if (parsingLevel == ParsingLevel.TOP_LEVEL) {\n         reportError(\n             lexer.createLocation(token.left, token.right),\n             \"for loops are not allowed on top-level. Put it into a function\");\n       }\n       parseForStatement(list);\n-    } else if (BLOCK_STARTING_SET.contains(token.kind)) {\n-      skipBlock();\n     } else {\n       parseSimpleStatement(list);\n     }\n@@ -1456,28 +1400,6 @@ public class Parser {\n     return setLocation(new ReturnStatement(expression), start, expression);\n   }\n \n-  // block ::= ('if' | 'for' | 'class' | 'try' | 'def') expr ':' suite\n-  private void skipBlock() {\n-    int start = token.left;\n-    Token blockToken = token;\n-    syncTo(EnumSet.of(TokenKind.COLON, TokenKind.EOF)); // skip over expression or name\n-    if (blockToken.kind == TokenKind.ELSE) {\n-      reportError(\n-          lexer.createLocation(blockToken.left, blockToken.right),\n-          \"syntax error at 'else': not allowed here.\");\n-    } else {\n-      String msg =\n-          ILLEGAL_BLOCK_KEYWORDS.containsKey(blockToken.kind)\n-              ? String.format(\"%ss are not supported.\", ILLEGAL_BLOCK_KEYWORDS.get(blockToken.kind))\n-              : \"This is not supported in BUILD files. Move the block to a .bzl file and load it\";\n-      reportError(\n-          lexer.createLocation(start, token.right),\n-          String.format(\"syntax error at '%s': %s\", blockToken, msg));\n-    }\n-    expect(TokenKind.COLON);\n-    skipSuite();\n-  }\n-\n   // create a comment node\n   private void makeComment(Token token) {\n     comments.add(setLocation(new Comment((String) token.value), token.left, token.right));\ndiff --git a/src/main/java/com/google/devtools/build/lib/syntax/ValidationEnvironment.java b/src/main/java/com/google/devtools/build/lib/syntax/ValidationEnvironment.java\nindex 6f5eb9c401..da63ca2e19 100644\n--- a/src/main/java/com/google/devtools/build/lib/syntax/ValidationEnvironment.java\n+++ b/src/main/java/com/google/devtools/build/lib/syntax/ValidationEnvironment.java\n@@ -289,4 +289,48 @@ public final class ValidationEnvironment extends SyntaxTreeVisitor {\n   private void closeBlock() {\n     block = Preconditions.checkNotNull(block.parent);\n   }\n+\n+  /**\n+   * Checks that the AST is using the restricted syntax.\n+   *\n+   * <p>Restricted syntax is used by Bazel BUILD files. It forbids function definitions, *args, and\n+   * **kwargs. This creates a better separation between code and data.\n+   */\n+  public static boolean checkBuildSyntax(\n+      List<Statement> statements, final EventHandler eventHandler) {\n+    // Wrap the boolean inside an array so that the inner class can modify it.\n+    final boolean[] success = new boolean[] {true};\n+    // TODO(laurentlb): Merge with the visitor above when possible (i.e. when BUILD files use it).\n+    SyntaxTreeVisitor checker =\n+        new SyntaxTreeVisitor() {\n+          @Override\n+          public void visit(FuncallExpression node) {\n+            for (Argument.Passed arg : node.getArguments()) {\n+              if (arg.isStarStar()) {\n+                eventHandler.handle(\n+                    Event.error(\n+                        node.getLocation(), \"**kwargs arguments are not allowed in BUILD files\"));\n+                success[0] = false;\n+              } else if (arg.isStar()) {\n+                eventHandler.handle(\n+                    Event.error(\n+                        node.getLocation(), \"*args arguments are not allowed in BUILD files\"));\n+                success[0] = false;\n+              }\n+            }\n+          }\n+\n+          @Override\n+          public void visit(FunctionDefStatement node) {\n+            eventHandler.handle(\n+                Event.error(\n+                    node.getLocation(),\n+                    \"syntax error at 'def': This is not supported in BUILD files. \"\n+                        + \"Move the block to a .bzl file and load it\"));\n+            success[0] = false;\n+          }\n+        };\n+    checker.visitAll(statements);\n+    return success[0];\n+  }\n }\ndiff --git a/src/test/java/com/google/devtools/build/lib/skylark/SkylarkIntegrationTest.java b/src/test/java/com/google/devtools/build/lib/skylark/SkylarkIntegrationTest.java\nindex 35b1e3797b..516a20eb8e 100644\n--- a/src/test/java/com/google/devtools/build/lib/skylark/SkylarkIntegrationTest.java\n+++ b/src/test/java/com/google/devtools/build/lib/skylark/SkylarkIntegrationTest.java\n@@ -1314,16 +1314,17 @@ public class SkylarkIntegrationTest extends BuildViewTestCase {\n         \"test/skylark/macro.bzl\",\n         \"x = 5\");\n \n-    scratch.file(\"test/skylark/BUILD\",\n+    scratch.file(\n+        \"test/skylark/BUILD\",\n         \"load('//test/skylark:macro.bzl', 'x')\",\n-        \"if 0: pass\", // syntax error\n+        \"pass\", // syntax error\n         \"print(1 / (5 - x)\"); // division by 0\n \n     // Make sure that evaluation continues and load() succeeds, despite a syntax\n     // error in the file.\n     // We can get the division by 0 only if x was correctly loaded.\n     getConfiguredTarget(\"//test/skylark:a\");\n-    assertContainsEvent(\"syntax error at 'if'\");\n+    assertContainsEvent(\"syntax error\");\n     assertContainsEvent(\"integer division by zero\");\n   }\n \ndiff --git a/src/test/java/com/google/devtools/build/lib/syntax/ParserTest.java b/src/test/java/com/google/devtools/build/lib/syntax/ParserTest.java\nindex 784b0a7926..94cdb30105 100644\n--- a/src/test/java/com/google/devtools/build/lib/syntax/ParserTest.java\n+++ b/src/test/java/com/google/devtools/build/lib/syntax/ParserTest.java\n@@ -913,22 +913,6 @@ public class ParserTest extends EvaluationTestCase {\n     assertContainsError(\"syntax error at ';'\");\n   }\n \n-  @Test\n-  public void testFunctionDefinitionErrorRecovery() throws Exception {\n-    // Parser skips over entire function definitions, and reports a meaningful\n-    // error.\n-    setFailFast(false);\n-    List<Statement> stmts = parseFile(\n-        \"x = 1;\\n\"\n-        + \"def foo(x, y, **z):\\n\"\n-        + \"  # a comment\\n\"\n-        + \"  x = 2\\n\"\n-        + \"  foo(bar)\\n\"\n-        + \"  return z\\n\"\n-        + \"x = 3\");\n-    assertThat(stmts).hasSize(2);\n-  }\n-\n   @Test\n   public void testDefSingleLine() throws Exception {\n     List<Statement> statements = parseFileForSkylark(\n@@ -954,19 +938,6 @@ public class ParserTest extends EvaluationTestCase {\n     assertThat(stmt.getStatements()).isEmpty();\n   }\n \n-  @Test\n-  public void testSkipIfBlockFail() throws Exception {\n-    // Do not parse 'if' blocks, when parsePython is not set\n-    setFailFast(false);\n-    List<Statement> stmts = parseFile(\n-        \"x = 1;\",\n-        \"if x == 1:\",\n-        \"  x = 2\",\n-        \"x = 3;\\n\");\n-    assertThat(stmts).hasSize(2);\n-    assertContainsError(\"This is not supported in BUILD files\");\n-  }\n-\n   @Test\n   public void testForLoopMultipleVariables() throws Exception {\n     List<Statement> stmts1 = parseFile(\"[ i for i, j, k in [(1, 2, 3)] ]\\n\");\n@@ -1402,7 +1373,7 @@ public class ParserTest extends EvaluationTestCase {\n         \"def func(a):\",\n         // no if\n         \"  else: return a\");\n-    assertContainsError(\"syntax error at 'else': not allowed here.\");\n+    assertContainsError(\"syntax error at 'else': expected expression\");\n   }\n \n   @Test\n@@ -1413,42 +1384,36 @@ public class ParserTest extends EvaluationTestCase {\n         \"  for i in range(a):\",\n         \"    print(i)\",\n         \"  else: return a\");\n-    assertContainsError(\"syntax error at 'else': not allowed here.\");\n+    assertContainsError(\"syntax error at 'else': expected expression\");\n   }\n \n   @Test\n   public void testTryStatementInBuild() throws Exception {\n     setFailFast(false);\n     parseFile(\"try: pass\");\n-    assertContainsError(\"syntax error at 'try': Try statements are not supported.\");\n-  }\n-\n-  @Test\n-  public void testTryStatementInSkylark() throws Exception {\n-    setFailFast(false);\n-    parseFileForSkylark(\"try: pass\");\n-    assertContainsError(\"syntax error at 'try': Try statements are not supported.\");\n+    assertContainsError(\"'try' not supported, all exceptions are fatal\");\n   }\n \n   @Test\n   public void testClassDefinitionInBuild() throws Exception {\n     setFailFast(false);\n-    parseFile(\"class test(object): pass\");\n-    assertContainsError(\"syntax error at 'class': Class definitions are not supported.\");\n+    parseFileWithComments(\"class test(object): pass\");\n+    assertContainsError(\"keyword 'class' not supported\");\n   }\n \n   @Test\n   public void testClassDefinitionInSkylark() throws Exception {\n     setFailFast(false);\n     parseFileForSkylark(\"class test(object): pass\");\n-    assertContainsError(\"syntax error at 'class': Class definitions are not supported.\");\n+    assertContainsError(\"keyword 'class' not supported\");\n   }\n \n   @Test\n   public void testDefInBuild() throws Exception {\n     setFailFast(false);\n-    parseFile(\"def func(): pass\");\n+    BuildFileAST result = parseFileWithComments(\"def func(): pass\");\n     assertContainsError(\"syntax error at 'def': This is not supported in BUILD files. \"\n         + \"Move the block to a .bzl file and load it\");\n+    assertThat(result.containsErrors()).isTrue();\n   }\n }\ndiff --git a/src/test/java/com/google/devtools/build/lib/syntax/util/EvaluationTestCase.java b/src/test/java/com/google/devtools/build/lib/syntax/util/EvaluationTestCase.java\nindex ceeffe74eb..4d52f6f51c 100644\n--- a/src/test/java/com/google/devtools/build/lib/syntax/util/EvaluationTestCase.java\n+++ b/src/test/java/com/google/devtools/build/lib/syntax/util/EvaluationTestCase.java\n@@ -159,30 +159,24 @@ public class EvaluationTestCase {\n \n   /** Parses a statement, possibly followed by newlines. */\n   protected Statement parseStatement(Parser.ParsingLevel parsingLevel, String... input) {\n-    return Parser.parseStatement(\n-        makeParserInputSource(input), getEventHandler(),\n-        parsingLevel, Parser.Dialect.SKYLARK);\n+    return Parser.parseStatement(makeParserInputSource(input), getEventHandler(), parsingLevel);\n   }\n \n   /** Parses a top-level statement, possibly followed by newlines. */\n   protected Statement parseTopLevelStatement(String... input) {\n     return Parser.parseStatement(\n-        makeParserInputSource(input), getEventHandler(),\n-        Parser.ParsingLevel.TOP_LEVEL, Parser.Dialect.SKYLARK);\n+        makeParserInputSource(input), getEventHandler(), Parser.ParsingLevel.TOP_LEVEL);\n   }\n \n   /** Parses a local statement, possibly followed by newlines. */\n   protected Statement parseLocalLevelStatement(String... input) {\n     return Parser.parseStatement(\n-        makeParserInputSource(input), getEventHandler(),\n-        Parser.ParsingLevel.LOCAL_LEVEL, Parser.Dialect.SKYLARK);\n+        makeParserInputSource(input), getEventHandler(), Parser.ParsingLevel.LOCAL_LEVEL);\n   }\n \n   /** Parses an expression, possibly followed by newlines. */\n   protected Expression parseExpression(String... input) {\n-    return Parser.parseExpression(\n-        makeParserInputSource(input), getEventHandler(),\n-        Parser.Dialect.SKYLARK);\n+    return Parser.parseExpression(makeParserInputSource(input), getEventHandler());\n   }\n \n   public EvaluationTestCase update(String varname, Object value) throws Exception {",
    "Optimize Min and Max BKD optimizations ( <issue_id> ) .": "diff --git a/server/src/main/java/org/elasticsearch/search/aggregations/metrics/MaxAggregator.java b/server/src/main/java/org/elasticsearch/search/aggregations/metrics/MaxAggregator.java\nindex 02083177099..27b21a1ebd8 100644\n--- a/server/src/main/java/org/elasticsearch/search/aggregations/metrics/MaxAggregator.java\n+++ b/server/src/main/java/org/elasticsearch/search/aggregations/metrics/MaxAggregator.java\n@@ -22,9 +22,9 @@ import org.apache.lucene.index.LeafReader;\n import org.apache.lucene.index.LeafReaderContext;\n import org.apache.lucene.index.PointValues;\n import org.apache.lucene.search.CollectionTerminatedException;\n+import org.apache.lucene.search.ScoreMode;\n import org.apache.lucene.util.Bits;\n import org.apache.lucene.util.FutureArrays;\n-import org.apache.lucene.search.ScoreMode;\n import org.elasticsearch.common.lease.Releasables;\n import org.elasticsearch.common.util.BigArrays;\n import org.elasticsearch.common.util.DoubleArray;\n@@ -174,7 +174,7 @@ class MaxAggregator extends NumericMetricsAggregator.SingleValue {\n         }\n         int numBytes = pointValues.getBytesPerDimension();\n         final byte[] maxValue = pointValues.getMaxPackedValue();\n-        final Number[] result = new Number[1];\n+        final byte[][] result = new byte[1][];\n         pointValues.intersect(new PointValues.IntersectVisitor() {\n             @Override\n             public void visit(int docID) {\n@@ -186,7 +186,10 @@ class MaxAggregator extends NumericMetricsAggregator.SingleValue {\n                 if (liveDocs.get(docID)) {\n                     // we need to collect all values in this leaf (the sort is ascending) where\n                     // the last live doc is guaranteed to contain the max value for the segment.\n-                    result[0] = converter.apply(packedValue);\n+                    if (result[0] == null) {\n+                        result[0] = new byte[packedValue.length];\n+                    }\n+                    System.arraycopy(packedValue, 0, result[0], 0, packedValue.length);\n                 }\n             }\n \n@@ -200,6 +203,6 @@ class MaxAggregator extends NumericMetricsAggregator.SingleValue {\n                 }\n             }\n         });\n-        return result[0];\n+        return result[0] != null ? converter.apply(result[0]) : null;\n     }\n }\ndiff --git a/server/src/main/java/org/elasticsearch/search/aggregations/metrics/MinAggregator.java b/server/src/main/java/org/elasticsearch/search/aggregations/metrics/MinAggregator.java\nindex df24ee7387f..0a40347a3cf 100644\n--- a/server/src/main/java/org/elasticsearch/search/aggregations/metrics/MinAggregator.java\n+++ b/server/src/main/java/org/elasticsearch/search/aggregations/metrics/MinAggregator.java\n@@ -52,6 +52,7 @@ import java.util.Map;\n import java.util.function.Function;\n \n class MinAggregator extends NumericMetricsAggregator.SingleValue {\n+    private static final int MAX_BKD_LOOKUPS = 1024;\n \n     final ValuesSource.Numeric valuesSource;\n     final DocValueFormat format;\n@@ -212,6 +213,8 @@ class MinAggregator extends NumericMetricsAggregator.SingleValue {\n         final Number[] result = new Number[1];\n         try {\n             pointValues.intersect(new PointValues.IntersectVisitor() {\n+                private short lookupCounter = 0;\n+\n                 @Override\n                 public void visit(int docID) {\n                     throw new UnsupportedOperationException();\n@@ -224,6 +227,9 @@ class MinAggregator extends NumericMetricsAggregator.SingleValue {\n                         // this is the first leaf with a live doc so the value is the minimum",
    "Eliminate the warning about serialization in non - public API of Swing .": "diff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifBorders.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifBorders.java\nindex 2b1b9b89f7a..c61b1258894 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifBorders.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifBorders.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,11 +25,6 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import sun.swing.SwingUtilities2;\n-import javax.swing.*;\n-import javax.swing.border.*;\n-import javax.swing.plaf.*;\n-\n import java.awt.Color;\n import java.awt.Component;\n import java.awt.Dimension;\n@@ -40,15 +35,21 @@\n import java.awt.Point;\n import java.awt.Rectangle;\n \n+import javax.swing.AbstractButton;\n+import javax.swing.ButtonModel;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JMenuBar;\n+import javax.swing.JPopupMenu;\n+import javax.swing.UIManager;\n+import javax.swing.border.AbstractBorder;\n+import javax.swing.plaf.UIResource;\n+\n+import sun.swing.SwingUtilities2;\n+\n /**\n  * Factory object that can vend Icons appropriate for the basic {@literal L & F}.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Amy Fowler\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifButtonUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifButtonUI.java\nindex eb2520cd2b1..08017a0b2c8 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifButtonUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifButtonUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2003, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,24 +25,27 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import sun.awt.AppContext;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.Rectangle;\n+import java.awt.Shape;\n+\n+import javax.swing.AbstractButton;\n+import javax.swing.JComponent;\n+import javax.swing.LookAndFeel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.border.AbstractBorder;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.basic.BasicButtonListener;\n+import javax.swing.plaf.basic.BasicButtonUI;\n \n-import javax.swing.*;\n-import javax.swing.border.*;\n-import javax.swing.plaf.basic.*;\n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.swing.plaf.*;\n+import sun.awt.AppContext;\n \n /**\n  * MotifButton implementation\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Rich Schiavi\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifCheckBoxUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifCheckBoxUI.java\nindex 11dc92d3a8d..fa06aa6bd02 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifCheckBoxUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifCheckBoxUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,23 +25,15 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import sun.awt.AppContext;\n-\n-import javax.swing.*;\n+import javax.swing.AbstractButton;\n+import javax.swing.JComponent;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.ComponentUI;\n \n-import javax.swing.plaf.*;\n-\n-import java.awt.*;\n+import sun.awt.AppContext;\n \n /**\n  * MotifCheckBox implementation\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Rich Schiavi\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifComboBoxUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifComboBoxUI.java\nindex fcd12ac20d4..254b63181b3 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifComboBoxUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifComboBoxUI.java\n@@ -52,14 +52,7 @@\n import javax.swing.plaf.basic.ComboPopup;\n \n /**\n- * ComboBox motif look and feel\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n+ * ComboBox motif look and feel.\n  *\n  * @author Arnaud Weber\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifDesktopPaneUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifDesktopPaneUI.java\nindex c3e1f85993b..60552b8c780 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifDesktopPaneUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifDesktopPaneUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,25 +25,26 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import javax.swing.*;\n-import java.awt.Rectangle;\n-import java.awt.Dimension;\n-import java.awt.Insets;\n import java.awt.Color;\n-import java.awt.Graphics;\n import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n import java.awt.Point;\n-import javax.swing.plaf.*;\n+import java.awt.Rectangle;\n import java.io.Serializable;\n \n+import javax.swing.DefaultDesktopManager;\n+import javax.swing.JComponent;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JLayeredPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.UIResource;\n+\n /**\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n+ * Motif desktop pane.\n  *\n  * @author David Kloba\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifEditorPaneUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifEditorPaneUI.java\nindex c7943dff79f..3367b36f0fd 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifEditorPaneUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifEditorPaneUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -22,22 +22,16 @@\n  * or visit www.oracle.com if you need additional information or have any\n  * questions.\n  */\n+\n package com.sun.java.swing.plaf.motif;\n \n-import javax.swing.*;\n-import javax.swing.text.*;\n-import javax.swing.plaf.*;\n+import javax.swing.JComponent;\n+import javax.swing.plaf.ComponentUI;\n import javax.swing.plaf.basic.BasicEditorPaneUI;\n+import javax.swing.text.Caret;\n \n /**\n  * Provides the look and feel for an pluggable content-type text editor.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author  Timothy Prinzing\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifIconFactory.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifIconFactory.java\nindex c7cf812dbf5..dac6514f0c4 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifIconFactory.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifIconFactory.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2017, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,29 +25,21 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import javax.swing.*;\n-\n-import javax.swing.plaf.UIResource;\n-\n import java.awt.Color;\n import java.awt.Component;\n-import java.awt.Dimension;\n import java.awt.Graphics;\n-import java.awt.Polygon;\n-\n import java.io.Serializable;\n \n+import javax.swing.AbstractButton;\n+import javax.swing.ButtonModel;\n+import javax.swing.Icon;\n+import javax.swing.JCheckBox;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.UIResource;\n+\n /**\n  * Icon factory for the CDE/Motif Look and Feel\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n- * 1.20 04/27/99\n  * @author Georges Saab\n  */\n @SuppressWarnings(\"serial\") // Same-version serialization only\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifInternalFrameUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifInternalFrameUI.java\nindex 8d9e5122ef6..cba71847fa4 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifInternalFrameUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifInternalFrameUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,27 +25,29 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.swing.*;\n-import javax.swing.event.*;\n-\n-import java.util.EventListener;\n-\n-import javax.swing.plaf.basic.*;\n-import javax.swing.border.*;\n-import javax.swing.plaf.*;\n-\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Toolkit;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.KeyEvent;\n+\n+import javax.swing.AbstractAction;\n+import javax.swing.ActionMap;\n+import javax.swing.InputMap;\n+import javax.swing.JComponent;\n+import javax.swing.JInternalFrame;\n+import javax.swing.KeyStroke;\n+import javax.swing.LookAndFeel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.border.Border;\n+import javax.swing.plaf.ActionMapUIResource;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.UIResource;\n+import javax.swing.plaf.basic.BasicInternalFrameUI;\n \n /**\n  * A Motif {@literal L&F} implementation of InternalFrame.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Tom Ball\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifLabelUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifLabelUI.java\nindex 1da0036e3fa..f19a3c23cb5 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifLabelUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifLabelUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,22 +25,15 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import sun.awt.AppContext;\n-\n-import javax.swing.*;\n-import javax.swing.plaf.basic.BasicLabelUI;\n+import javax.swing.JComponent;\n import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.basic.BasicLabelUI;\n+\n+import sun.awt.AppContext;\n \n /**\n  * A Motif {@literal L&F} implementation of LabelUI.\n  * This merely sets up new default values in MotifLookAndFeel.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Amy Fowler\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifLookAndFeel.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifLookAndFeel.java\nindex 455c521493d..d4993c11eb9 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifLookAndFeel.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifLookAndFeel.java\n@@ -27,37 +27,26 @@\n \n import java.awt.Color;\n import java.awt.Font;\n-import java.awt.Insets;\n import java.awt.event.KeyEvent;\n-import java.awt.event.InputEvent;\n-import java.util.*;\n \n-import javax.swing.*;\n-import javax.swing.plaf.*;\n-import javax.swing.border.*;\n-import javax.swing.text.JTextComponent;\n-import javax.swing.text.DefaultEditorKit;\n-\n-import javax.swing.plaf.basic.BasicLookAndFeel;\n+import javax.swing.JTextField;\n+import javax.swing.UIDefaults;\n+import javax.swing.border.Border;\n+import javax.swing.plaf.BorderUIResource;\n+import javax.swing.plaf.ColorUIResource;\n+import javax.swing.plaf.FontUIResource;\n+import javax.swing.plaf.InsetsUIResource;\n import javax.swing.plaf.basic.BasicBorders;\n-import javax.swing.plaf.basic.BasicComboBoxRenderer;\n-import javax.swing.plaf.basic.BasicComboBoxEditor;\n+import javax.swing.plaf.basic.BasicLookAndFeel;\n+import javax.swing.text.DefaultEditorKit;\n \n import sun.swing.SwingAccessor;\n import sun.swing.SwingUtilities2;\n-import sun.awt.OSInfo;\n \n /**\n  * Implements the Motif Look and Feel.\n  * UI classes not implemented specifically for Motif will\n  * default to those implemented in Basic.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @deprecated The Motif Look and Feel is deprecated with the intent to remove\n  *             it in some future release. It is recommended to use\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifMenuBarUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifMenuBarUI.java\nindex cdc05400fe2..4e9beaa8ab4 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifMenuBarUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifMenuBarUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,35 +25,13 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import java.awt.Component;\n-import java.awt.Container;\n-import java.awt.Dimension;\n-import java.awt.Graphics;\n-import java.awt.Color;\n-import java.awt.Insets;\n-import java.awt.Point;\n-import java.awt.Rectangle;\n-import java.awt.event.*;\n-import java.io.Serializable;\n-\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.border.*;\n-import javax.swing.plaf.*;\n+import javax.swing.JComponent;\n+import javax.swing.plaf.ComponentUI;\n import javax.swing.plaf.basic.BasicMenuBarUI;\n-//REMIND\n-import javax.swing.plaf.basic.*;\n \n /**\n  * A Windows {@literal L&F} implementation of MenuBarUI.  This implementation\n  * is a \"combined\" view/controller.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Georges Saab\n  * @author Rich Schiavi\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifOptionPaneUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifOptionPaneUI.java\nindex ddba46c9cc9..7da390bad23 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifOptionPaneUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifOptionPaneUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,26 +25,21 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import javax.swing.*;\n-import javax.swing.plaf.basic.BasicOptionPaneUI;\n-import javax.swing.plaf.ComponentUI;\n import java.awt.Color;\n-import java.awt.Component;\n import java.awt.Container;\n import java.awt.Dimension;\n import java.awt.Graphics;\n-import java.awt.Insets;\n-import java.awt.Rectangle;\n+\n+import javax.swing.Icon;\n+import javax.swing.JComponent;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.SwingConstants;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.basic.BasicOptionPaneUI;\n \n /**\n  * Provides the CDE/Motif look and feel for a JOptionPane.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Scott Violet\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifPasswordFieldUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifPasswordFieldUI.java\nindex 3b0159c8d7b..8e1369d7e96 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifPasswordFieldUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifPasswordFieldUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -22,22 +22,16 @@\n  * or visit www.oracle.com if you need additional information or have any\n  * questions.\n  */\n+\n package com.sun.java.swing.plaf.motif;\n \n-import javax.swing.*;\n-import javax.swing.text.*;\n-import javax.swing.plaf.*;\n+import javax.swing.JComponent;\n+import javax.swing.plaf.ComponentUI;\n import javax.swing.plaf.basic.BasicPasswordFieldUI;\n+import javax.swing.text.Caret;\n \n /**\n  * Provides the Motif look and feel for a password field.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author  Timothy Prinzing\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifPopupMenuUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifPopupMenuUI.java\nindex a0b182b8019..0986f81f0ff 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifPopupMenuUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifPopupMenuUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2005, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,36 +25,27 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import sun.swing.SwingUtilities2;\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.border.*;\n-import java.awt.Color;\n-import java.awt.Component;\n-import java.awt.Container;\n import java.awt.Dimension;\n import java.awt.Font;\n import java.awt.FontMetrics;\n-import java.awt.Frame;\n-import java.awt.Graphics;\n import java.awt.Insets;\n import java.awt.LayoutManager;\n-import java.awt.Point;\n-import java.awt.Rectangle;\n-import java.awt.event.*;\n-import javax.swing.plaf.*;\n+import java.awt.event.MouseEvent;\n+\n+import javax.swing.JComponent;\n+import javax.swing.JPopupMenu;\n+import javax.swing.UIDefaults;\n+import javax.swing.UIManager;\n+import javax.swing.border.Border;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.plaf.ComponentUI;\n import javax.swing.plaf.basic.BasicPopupMenuUI;\n \n+import sun.swing.SwingUtilities2;\n \n /**\n  * A Motif {@literal L&F} implementation of PopupMenuUI.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Georges Saab\n  * @author Rich Schiavi\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifProgressBarUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifProgressBarUI.java\nindex 66d99e007d4..2c53d741397 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifProgressBarUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifProgressBarUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,24 +25,12 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import java.awt.*;\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.plaf.*;\n-import java.io.Serializable;\n-\n+import javax.swing.JComponent;\n+import javax.swing.plaf.ComponentUI;\n import javax.swing.plaf.basic.BasicProgressBarUI;\n \n-\n /**\n  * A Motif ProgressBarUI.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Michael C. Albers\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifRadioButtonMenuItemUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifRadioButtonMenuItemUI.java\nindex 3cc793fccae..1a9d7fa1e91 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifRadioButtonMenuItemUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifRadioButtonMenuItemUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,26 +25,24 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.plaf.*;\n+import java.awt.Point;\n+import java.awt.event.MouseEvent;\n+import java.io.Serializable;\n+\n+import javax.swing.JComponent;\n+import javax.swing.JMenuItem;\n+import javax.swing.LookAndFeel;\n+import javax.swing.MenuSelectionManager;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.event.MouseInputListener;\n+import javax.swing.plaf.ComponentUI;\n import javax.swing.plaf.basic.BasicRadioButtonMenuItemUI;\n \n-import java.awt.*;\n-import java.awt.event.*;\n-import java.io.Serializable;\n import sun.swing.SwingUtilities2;\n \n-\n /**\n  * MotifRadioButtonMenuItem implementation\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Georges Saab\n  * @author Rich Schiavi\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifRadioButtonUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifRadioButtonUI.java\nindex 328ca4844ed..58619280493 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifRadioButtonUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifRadioButtonUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2003, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,25 +25,21 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import sun.awt.AppContext;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Rectangle;\n \n-import javax.swing.*;\n-import javax.swing.border.*;\n+import javax.swing.AbstractButton;\n+import javax.swing.JComponent;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.ComponentUI;\n import javax.swing.plaf.basic.BasicRadioButtonUI;\n \n-import javax.swing.plaf.*;\n-\n-import java.awt.*;\n+import sun.awt.AppContext;\n \n /**\n  * RadioButtonUI implementation for MotifRadioButtonUI\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Rich Schiavi\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifScrollBarButton.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifScrollBarButton.java\nindex cb586512c82..5b812ca4c8c 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifScrollBarButton.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifScrollBarButton.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,23 +25,15 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.BasicArrowButton;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n \n-import java.awt.*;\n-import java.awt.event.*;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.basic.BasicArrowButton;\n \n /**\n  * Motif scroll bar button.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  */\n @SuppressWarnings(\"serial\") // Superclass is not serializable across versions\n public class MotifScrollBarButton extends BasicArrowButton\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifScrollBarUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifScrollBarUI.java\nindex 294a1c374ab..08a283f5e52 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifScrollBarUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifScrollBarUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -22,6 +22,7 @@\n  * or visit www.oracle.com if you need additional information or have any\n  * questions.\n  */\n+\n package com.sun.java.swing.plaf.motif;\n \n import java.awt.Dimension;\n@@ -38,16 +39,8 @@\n import static sun.swing.SwingUtilities2.drawHLine;\n import static sun.swing.SwingUtilities2.drawVLine;\n \n-\n /**\n  * Implementation of ScrollBarUI for the Motif Look and Feel\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Rich Schiavi\n  * @author Hans Muller\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifScrollPaneUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifScrollPaneUI.java\nindex af659095672..833cf732b0a 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifScrollPaneUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifScrollPaneUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2017, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,23 +25,20 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import javax.swing.*;\n-import javax.swing.border.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.BasicScrollPaneUI;\n-\n import java.beans.PropertyChangeEvent;\n import java.beans.PropertyChangeListener;\n \n+import javax.swing.JComponent;\n+import javax.swing.JScrollBar;\n+import javax.swing.JScrollPane;\n+import javax.swing.border.Border;\n+import javax.swing.border.CompoundBorder;\n+import javax.swing.border.EmptyBorder;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.basic.BasicScrollPaneUI;\n+\n /**\n  * A CDE/Motif {@code L&F} implementation of ScrollPaneUI.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Hans Muller\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSeparatorUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSeparatorUI.java\nindex bc457b01b13..dac713eda7b 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSeparatorUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSeparatorUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,25 +25,13 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import javax.swing.*;\n-import java.awt.Color;\n-import java.awt.Dimension;\n-import java.awt.Graphics;\n-import java.awt.Insets;\n-import java.awt.Rectangle;\n-import javax.swing.plaf.*;\n+import javax.swing.JComponent;\n+import javax.swing.plaf.ComponentUI;\n import javax.swing.plaf.basic.BasicSeparatorUI;\n \n /**\n  * A Motif {@literal L&F} implementation of SeparatorUI.\n  * This implementation is a \"combined\" view/controller.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Georges Saab\n  * @author Jeff Shapiro\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSliderUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSliderUI.java\nindex e22db5e05cd..c8820de17c4 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSliderUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSliderUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -38,14 +38,7 @@\n import static sun.swing.SwingUtilities2.drawVLine;\n \n /**\n- * Motif Slider\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n+ * Motif Slider.\n  *\n  * @author Jeff Dinkins\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSplitPaneDivider.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSplitPaneDivider.java\nindex 6040eb31323..7dceae4930d 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSplitPaneDivider.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSplitPaneDivider.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,23 +25,20 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import java.awt.*;\n-import java.awt.event.*;\n+import java.awt.Color;\n+import java.awt.Cursor;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.event.MouseEvent;\n+\n import javax.swing.JSplitPane;\n import javax.swing.UIManager;\n-import javax.swing.plaf.basic.BasicSplitPaneUI;\n import javax.swing.plaf.basic.BasicSplitPaneDivider;\n-\n+import javax.swing.plaf.basic.BasicSplitPaneUI;\n \n /**\n  * Divider used for Motif split pane.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Jeff Dinkins\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSplitPaneUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSplitPaneUI.java\nindex 6ee670812c3..c61a1713c9b 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSplitPaneUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifSplitPaneUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,21 +25,13 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import javax.swing.plaf.basic.BasicSplitPaneUI;\n+import javax.swing.JComponent;\n+import javax.swing.plaf.ComponentUI;\n import javax.swing.plaf.basic.BasicSplitPaneDivider;\n-import javax.swing.plaf.*;\n-import javax.swing.*;\n-import java.awt.*;\n+import javax.swing.plaf.basic.BasicSplitPaneUI;\n \n /**\n  * Motif rendition of a split pane.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Jeff Dinkins\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTabbedPaneUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTabbedPaneUI.java\nindex e7bae098a55..1c53fc4a179 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTabbedPaneUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTabbedPaneUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2002, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,23 +25,17 @@\n \n package com.sun.java.swing.plaf.motif;\n \n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.plaf.*;\n+import java.awt.Color;\n+import java.awt.Graphics;\n+import java.awt.Rectangle;\n+\n+import javax.swing.JComponent;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.ComponentUI;\n import javax.swing.plaf.basic.BasicTabbedPaneUI;\n-import java.io.Serializable;\n \n /**\n  * A Motif {@literal L&F} implementation of TabbedPaneUI.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author Amy Fowler\n  * @author Philip Milne\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTextAreaUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTextAreaUI.java\nindex c6f4cc54b3a..baddbf3a75d 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTextAreaUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTextAreaUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -22,24 +22,18 @@\n  * or visit www.oracle.com if you need additional information or have any\n  * questions.\n  */\n+\n package com.sun.java.swing.plaf.motif;\n \n-import javax.swing.*;\n-import javax.swing.text.*;\n-import javax.swing.plaf.*;\n+import javax.swing.JComponent;\n+import javax.swing.plaf.ComponentUI;\n import javax.swing.plaf.basic.BasicTextAreaUI;\n+import javax.swing.text.Caret;\n \n /**\n  * Provides the look and feel for a plain text editor.  In this\n  * implementation the default UI is extended to act as a simple\n  * view factory.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author  Timothy Prinzing\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTextFieldUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTextFieldUI.java\nindex 895183c1e6a..08437687ebc 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTextFieldUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTextFieldUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -22,22 +22,16 @@\n  * or visit www.oracle.com if you need additional information or have any\n  * questions.\n  */\n+\n package com.sun.java.swing.plaf.motif;\n \n-import javax.swing.*;\n+import javax.swing.JComponent;\n+import javax.swing.plaf.ComponentUI;\n import javax.swing.plaf.basic.BasicTextFieldUI;\n-import javax.swing.plaf.*;\n import javax.swing.text.Caret;\n \n /**\n  * Provides the Motif look and feel for a text field.\n- * <p>\n- * <strong>Warning:</strong>\n- * Serialized objects of this class will not be compatible with\n- * future Swing releases.  The current serialization support is appropriate\n- * for short term storage or RMI between applications running the same\n- * version of Swing.  A future release of Swing will provide support for\n- * long term persistence.\n  *\n  * @author  Timothy Prinzing\n  */\ndiff --git a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTextPaneUI.java b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTextPaneUI.java\nindex 3e1590a8831..e47ad4c60bf 100644\n--- a/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTextPaneUI.java\n+++ b/src/java.desktop/share/classes/com/sun/java/swing/plaf/motif/MotifTextPaneUI.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 1998,",
    "Updated notice files for RC3": "diff --git a/NOTICE b/NOTICE\nindex 4c89dd83a0..8940b32271 100644\n--- a/NOTICE\n+++ b/NOTICE\n@@ -89,6 +89,7 @@ This project includes:\n   Jasig CAS Web Application support under Apache 2\n   Jasig CAS X.509 Client Certificate Support under Apache 2\n   Jasig Central Authentication Service under Apache 2\n+  Java Transaction API under Commons Development and Distribution License, Version 1.0\n   java-getopt under GNU General Public License, with the \"library exception\"\n   JavaBeans Activation Framework (JAF) under Common Development and Distribution License (CDDL) v1.0\n   Javassist under MPL 1.1 or LGPL 2.1\n@@ -110,7 +111,6 @@ This project includes:\n   json-lib under Apache License, Version 2.0\n   JSR 105 - Java(TM) XML Digital Signature API under JDL license\n   jstl under Commons Development and Distribution License, Version 1.0\n-  jta under Commons Development and Distribution License, Version 1.0\n   JUL to SLF4J bridge under MIT License\n   JUnit under Common Public License Version 1.0\n   kryo under BSD style\n@@ -125,10 +125,6 @@ This project includes:\n   OpenID4Java no dependencies under Apache 2\n   OpenSAML-J under Apache 2\n   OpenWS under Apache 2\n-  org.restlet.jee:org.restlet under GPL 3.0 license\n-  org.restlet.jee:org.restlet.ext.servlet under GPL 3.0 license\n-  org.restlet.jee:org.restlet.ext.slf4j under GPL 3.0 license\n-  org.restlet.jee:org.restlet.ext.spring under GPL 3.0 license\n   org.samba.jcifs:jcifs-ext under GNU LESSER GENERAL PUBLIC LICENSE, Version 2.1\n   pac4j core under The Apache Software License, Version 2.0\n   pac4j for OAuth protocol under The Apache Software License, Version 2.0\n@@ -137,6 +133,10 @@ This project includes:\n   Person Directory Implementations under Apache License Version 2.0\n   quartz under The Apache Software License, Version 2.0\n   reflectasm under BSD style\n+  Restlet Core - API and Engine under Apache 2.0 license or LGPL 3.0 license or LGPL 2.1 license or CDDL 1.0 license or EPL 1.0 license\n+  Restlet Extension - Servlet under Apache 2.0 license or LGPL 3.0 license or LGPL 2.1 license or CDDL 1.0 license or EPL 1.0 license\n+  Restlet Extension - SLF4J under Apache 2.0 license or LGPL 3.0 license or LGPL 2.1 license or CDDL 1.0 license or EPL 1.0 license\n+  Restlet Extension - Spring Framework under Apache 2.0 license or LGPL 3.0 license or LGPL 2.1 license or CDDL 1.0 license or EPL 1.0 license\n   Scribe OAuth Library under MIT\n   servlet-api under Commons Development and Distribution License, Version 1.0\n   SLF4J API Module under MIT License\n@@ -166,7 +166,7 @@ This project includes:\n   Spymemcached under The Apache Software License, Version 2.0\n   standard under Apache License, Version 2.0\n   StAX API under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n   VT Crypt Library under Apache 2 or GNU Lesser General Public License\n   Xalan Java under The Apache Software License, Version 2.0\ndiff --git a/cas-management-webapp/NOTICE b/cas-management-webapp/NOTICE\nindex 2aef347df7..57db65a946 100644\n--- a/cas-management-webapp/NOTICE\n+++ b/cas-management-webapp/NOTICE\n@@ -87,7 +87,8 @@ This project includes:\n   spring-security-web under The Apache Software License, Version 2.0\n   standard under Apache License, Version 2.0\n   StAX API under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n   XStream Core under BSD style\n \ndiff --git a/cas-server-core/NOTICE b/cas-server-core/NOTICE\nindex 552f343b7c..e1ee08c11b 100644\n--- a/cas-server-core/NOTICE\n+++ b/cas-server-core/NOTICE\n@@ -73,6 +73,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-extension-clearpass/NOTICE b/cas-server-extension-clearpass/NOTICE\nindex d3fb2a111c..e2f9675b4d 100644\n--- a/cas-server-extension-clearpass/NOTICE\n+++ b/cas-server-extension-clearpass/NOTICE\n@@ -73,6 +73,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-integration-ehcache/NOTICE b/cas-server-integration-ehcache/NOTICE\nindex f4a9f3647d..47c4132883 100644\n--- a/cas-server-integration-ehcache/NOTICE\n+++ b/cas-server-integration-ehcache/NOTICE\n@@ -70,6 +70,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-integration-jboss/NOTICE b/cas-server-integration-jboss/NOTICE\nindex e1c2a6a4eb..8e46781d7c 100644\n--- a/cas-server-integration-jboss/NOTICE\n+++ b/cas-server-integration-jboss/NOTICE\n@@ -35,6 +35,7 @@ This project includes:\n   Inspektr - Common API under Apache 2.0 License\n   Jasig CAS Core under Apache 2\n   Jasig CAS JBoss Cache Integration under Apache 2\n+  Java Transaction API under Commons Development and Distribution License, Version 1.0\n   JavaBeans Activation Framework (JAF) under Common Development and Distribution License (CDDL) v1.0\n   Javassist under MPL 1.1 or LGPL 2.1 or Apache License 2.0\n   jaxb-api under Commons Development and Distribution License, Version 1.0\n@@ -47,7 +48,6 @@ This project includes:\n   JGroups under Library (or Lesser) GNU Public License 2.1\n   Joda time under Apache 2\n   JPA 2.0 API under Sun Binary Code License\n-  jta under Commons Development and Distribution License, Version 1.0\n   JUnit under Common Public License Version 1.0\n   Mockito under The MIT License\n   Objenesis under MIT License\n@@ -74,6 +74,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-integration-memcached/NOTICE b/cas-server-integration-memcached/NOTICE\nindex f4aed92e77..a4b7650907 100644\n--- a/cas-server-integration-memcached/NOTICE\n+++ b/cas-server-integration-memcached/NOTICE\n@@ -86,7 +86,7 @@ This project includes:\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n   Spymemcached under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n   Xalan Java under The Apache Software License, Version 2.0\n   Xalan Java Serializer under The Apache Software License, Version 2.0\ndiff --git a/cas-server-integration-restlet/NOTICE b/cas-server-integration-restlet/NOTICE\nindex f68778a1ee..91203ae25f 100644\n--- a/cas-server-integration-restlet/NOTICE\n+++ b/cas-server-integration-restlet/NOTICE\n@@ -75,6 +75,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-support-generic/NOTICE b/cas-server-support-generic/NOTICE\nindex 66b7c817e7..f2277101f0 100644\n--- a/cas-server-support-generic/NOTICE\n+++ b/cas-server-support-generic/NOTICE\n@@ -69,6 +69,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-support-jdbc/NOTICE b/cas-server-support-jdbc/NOTICE\nindex d8baa81a4d..9cd65432be 100644\n--- a/cas-server-support-jdbc/NOTICE\n+++ b/cas-server-support-jdbc/NOTICE\n@@ -69,6 +69,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-support-ldap/NOTICE b/cas-server-support-ldap/NOTICE\nindex 2e0f7ab0be..ca5818ea43 100644\n--- a/cas-server-support-ldap/NOTICE\n+++ b/cas-server-support-ldap/NOTICE\n@@ -75,6 +75,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-support-legacy/NOTICE b/cas-server-support-legacy/NOTICE\nindex 9f3027c38b..0cf8bc8818 100644\n--- a/cas-server-support-legacy/NOTICE\n+++ b/cas-server-support-legacy/NOTICE\n@@ -70,6 +70,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-support-oauth/NOTICE b/cas-server-support-oauth/NOTICE\nindex d8069b5315..2145db9445 100644\n--- a/cas-server-support-oauth/NOTICE\n+++ b/cas-server-support-oauth/NOTICE\n@@ -72,6 +72,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-support-openid/NOTICE b/cas-server-support-openid/NOTICE\nindex 9061aecf6f..dce48c0a54 100644\n--- a/cas-server-support-openid/NOTICE\n+++ b/cas-server-support-openid/NOTICE\n@@ -75,6 +75,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-support-pac4j/NOTICE b/cas-server-support-pac4j/NOTICE\nindex b73eb2821f..6420167f8e 100644\n--- a/cas-server-support-pac4j/NOTICE\n+++ b/cas-server-support-pac4j/NOTICE\n@@ -75,6 +75,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-support-radius/NOTICE b/cas-server-support-radius/NOTICE\nindex 2f6a0327b8..8a8e54ab71 100644\n--- a/cas-server-support-radius/NOTICE\n+++ b/cas-server-support-radius/NOTICE\n@@ -79,6 +79,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-support-saml/NOTICE b/cas-server-support-saml/NOTICE\nindex 053ef3d816..82ad823ab9 100644\n--- a/cas-server-support-saml/NOTICE\n+++ b/cas-server-support-saml/NOTICE\n@@ -80,7 +80,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n   Xalan Java under The Apache Software License, Version 2.0\n   Xalan Java Serializer under The Apache Software License, Version 2.0\ndiff --git a/cas-server-support-spnego/NOTICE b/cas-server-support-spnego/NOTICE\nindex bf8ab1bb9a..4ed2171223 100644\n--- a/cas-server-support-spnego/NOTICE\n+++ b/cas-server-support-spnego/NOTICE\n@@ -71,6 +71,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-support-trusted/NOTICE b/cas-server-support-trusted/NOTICE\nindex 1621741661..9288cd7fb9 100644\n--- a/cas-server-support-trusted/NOTICE\n+++ b/cas-server-support-trusted/NOTICE\n@@ -69,6 +69,7 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-support-x509/NOTICE b/cas-server-support-x509/NOTICE\nindex d109ea73cd..bfc6b3565d 100644\n--- a/cas-server-support-x509/NOTICE\n+++ b/cas-server-support-x509/NOTICE\n@@ -76,7 +76,8 @@ This project includes:\n   Spring Web Flow under Apache License, Version 2.0\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n   VT Crypt Library under Apache 2 or GNU Lesser General Public License\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-uber-webapp/NOTICE b/cas-server-uber-webapp/NOTICE\nindex f0b741f872..538bc19f9e 100644\n--- a/cas-server-uber-webapp/NOTICE\n+++ b/cas-server-uber-webapp/NOTICE\n@@ -55,6 +55,7 @@ This project includes:\n   Jasig CAS SPNEGO/NTLM Support under Apache 2\n   Jasig CAS Web Application under Apache 2\n   Jasig CAS X.509 Client Certificate Support under Apache 2\n+  Java Transaction API under Commons Development and Distribution License, Version 1.0\n   java-getopt under GNU General Public License, with the \"library exception\"\n   JavaBeans Activation Framework (JAF) under Common Development and Distribution License (CDDL) v1.0\n   Javassist under MPL 1.1 or LGPL 2.1 or Apache License 2.0\n@@ -71,7 +72,6 @@ This project includes:\n   JPA 2.0 API under Sun Binary Code License\n   jradius-core-1.0.0 under GNU Lessor/Library Public License, Version 3.0 or GNU Public License, Version 3.0\n   jradius-dictionary-1.0.0 under GNU Lessor/Library Public License, Version 3.0 or GNU Public License, Version 3.0\n-  jta under Commons Development and Distribution License, Version 1.0\n   JUnit under Common Public License Version 1.0\n   kryo under BSD style\n   LDAPTIVE under Apache 2 or GNU Lesser General Public License\n@@ -104,7 +104,8 @@ This project includes:\n   Spring Web MVC under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n   Spymemcached under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n   VT Crypt Library under Apache 2 or GNU Lesser General Public License\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-webapp-support/NOTICE b/cas-server-webapp-support/NOTICE\nindex dcb878d7e3..14d11f57d4 100644\n--- a/cas-server-webapp-support/NOTICE\n+++ b/cas-server-webapp-support/NOTICE\n@@ -77,6 +77,7 @@ This project includes:\n   spring-security-config under The Apache Software License, Version 2.0\n   spring-security-core under The Apache Software License, Version 2.0\n   spring-security-web under The Apache Software License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n \ndiff --git a/cas-server-webapp/NOTICE b/cas-server-webapp/NOTICE\nindex eb85e59fa1..156619c638 100644\n--- a/cas-server-webapp/NOTICE\n+++ b/cas-server-webapp/NOTICE\n@@ -79,6 +79,7 @@ This project includes:\n   spring-security-core under The Apache Software License, Version 2.0\n   spring-security-web under The Apache Software License, Version 2.0\n   standard under Apache License, Version 2.0\n-  stax-api under Sun Binary Code License\n+  Streaming API for XML under Sun Binary Code License\n   Transaction 1.1 API under lgpl\n+  XML Commons External Components XML APIs under The Apache Software License, Version 2.0\n ",
    "Add fromBytes to Codec": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/smile/Codec.java b/presto-main/src/main/java/com/facebook/presto/server/smile/Codec.java\nindex 876c6b65bf..f4ac5ba1eb 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/smile/Codec.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/smile/Codec.java\n@@ -16,4 +16,6 @@ package com.facebook.presto.server.smile;\n public interface Codec<T>\n {\n     byte[] toBytes(T instance);\n+\n+    T fromBytes(byte[] bytes);\n }\ndiff --git a/presto-main/src/main/java/com/facebook/presto/server/smile/JsonCodecWrapper.java b/presto-main/src/main/java/com/facebook/presto/server/smile/JsonCodecWrapper.java\nindex b6afe8680f..365392ba39 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/smile/JsonCodecWrapper.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/smile/JsonCodecWrapper.java\n@@ -44,4 +44,10 @@ public class JsonCodecWrapper<T>\n     {\n         return jsonCodec.toJsonBytes(instance);\n     }\n+\n+    @Override\n+    public T fromBytes(byte[] bytes)\n+    {\n+        return jsonCodec.fromJson(bytes);\n+    }\n }\ndiff --git a/presto-main/src/main/java/com/facebook/presto/server/smile/SmileCodec.java b/presto-main/src/main/java/com/facebook/presto/server/smile/SmileCodec.java\nindex 5abf5d3618..4db9e488d0 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/smile/SmileCodec.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/smile/SmileCodec.java\n@@ -154,6 +154,12 @@ public class SmileCodec<T>\n         }\n     }\n \n+    @Override\n+    public T fromBytes(byte[] bytes)\n+    {\n+        return fromSmile(bytes);\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     TypeToken<T> getTypeToken()\n     {",
    "Added \\\" returnOnlyChildren \\\" flag to fragment specs and improved javadoc .": "diff --git a/src/main/java/org/thymeleaf/dom/DOMSelector.java b/src/main/java/org/thymeleaf/dom/DOMSelector.java\nindex 1f896d05f..c758b7e16 100644\n--- a/src/main/java/org/thymeleaf/dom/DOMSelector.java\n+++ b/src/main/java/org/thymeleaf/dom/DOMSelector.java\n@@ -59,6 +59,9 @@\n  * <p>\n  *   For example: <tt>//div[@id=\"menu\"]</tt>.\n  * </p>\n+ * <p>\n+ *   Objects of this class are <b>thread-safe</b>.\n+ * </p>\n  * \n  * @author Daniel Fern&aacute;ndez\n  * \n@@ -75,7 +78,7 @@ public final class DOMSelector implements Serializable {\n     private static final Pattern selectorPattern =\n             Pattern.compile(selectorPatternStr);\n     \n-    private final String selectorSpec;\n+    private final String selectorExpression;\n     private final boolean descendMoreThanOneLevel;\n     private final String selectorName;\n     private final boolean text;\n@@ -84,15 +87,23 @@ public final class DOMSelector implements Serializable {\n     \n     private final DOMSelector next;\n     \n-    \n-    public DOMSelector(final String selectorSpec) {\n+\n+    /**\n+     * <p>\n+     *   Creates a new DOM selector specified by the argument selector\n+     *   expression.\n+     * </p>\n+     * \n+     * @param selectorExpression the expression specifying the selector to be used.\n+     */\n+    public DOMSelector(final String selectorExpression) {\n         \n         super();\n \n-        this.selectorSpec = selectorSpec;\n+        this.selectorExpression = selectorExpression;\n         \n         String selectorSpecStr =\n-            (selectorSpec.trim().startsWith(\"/\")? selectorSpec.trim() : \"/\" + selectorSpec.trim());\n+            (selectorExpression.trim().startsWith(\"/\")? selectorExpression.trim() : \"/\" + selectorExpression.trim());\n         \n         final int selectorSpecStrLen = selectorSpecStr.length();\n         int firstNonSlash = 0;\n@@ -102,7 +113,7 @@ public DOMSelector(final String selectorSpec) {\n         \n         if (firstNonSlash >= selectorSpecStrLen) {\n             throw new TemplateProcessingException(\n-                    \"Invalid syntax in DOM selector \\\"\" + selectorSpec + \"\\\": '/' should be followed by a selector name\");\n+                    \"Invalid syntax in DOM selector \\\"\" + selectorExpression + \"\\\": '/' should be followed by a selector name\");\n         }\n         \n         final int selEnd = selectorSpecStr.substring(firstNonSlash).indexOf('/');\n@@ -117,7 +128,7 @@ public DOMSelector(final String selectorSpec) {\n         final Matcher matcher = selectorPattern.matcher(selectorSpecStr);\n         if (!matcher.matches()) {\n             throw new TemplateProcessingException(\n-                    \"Invalid syntax in DOM selector \\\"\" + selectorSpec + \"\\\": selector does not match selector syntax: \" +\n+                    \"Invalid syntax in DOM selector \\\"\" + selectorExpression + \"\\\": selector does not match selector syntax: \" +\n             \t\t\"(/|//)(selector)([@attrib=\\\"value\\\" (and @attrib2=\\\"value\\\")?])?([index])?\");\n         }\n         \n@@ -128,7 +139,7 @@ public DOMSelector(final String selectorSpec) {\n         \n         if (rootGroup == null) {\n             throw new TemplateProcessingException(\n-                    \"Invalid syntax in DOM selector \\\"\" + selectorSpec + \"\\\": selector does not match selector syntax: \" +\n+                    \"Invalid syntax in DOM selector \\\"\" + selectorExpression + \"\\\": selector does not match selector syntax: \" +\n                     \"(/|//)(selector)([@attrib=\\\"value\\\" (and @attrib2=\\\"value\\\")?])?([index])?\");\n         }\n         \n@@ -138,13 +149,13 @@ public DOMSelector(final String selectorSpec) {\n             this.descendMoreThanOneLevel = false;\n         } else {\n             throw new TemplateProcessingException(\n-                    \"Invalid syntax in DOM selector \\\"\" + selectorSpec + \"\\\": selector does not match selector syntax: \" +\n+                    \"Invalid syntax in DOM selector \\\"\" + selectorExpression + \"\\\": selector does not match selector syntax: \" +\n                     \"(/|//)(selector)([@attrib=\\\"value\\\" (and @attrib2=\\\"value\\\")?])?([index])?\");\n         }\n         \n         if (selectorNameGroup == null) {\n             throw new TemplateProcessingException(\n-                    \"Invalid syntax in DOM selector \\\"\" + selectorSpec + \"\\\": selector does not match selector syntax: \" +\n+                    \"Invalid syntax in DOM selector \\\"\" + selectorExpression + \"\\\": selector does not match selector syntax: \" +\n                     \"(/|//)(selector)([@attrib=\\\"value\\\" (and @attrib2=\\\"value\\\")?])?([index])?\");\n         }\n         \n@@ -155,10 +166,10 @@ public DOMSelector(final String selectorSpec) {\n             \n             Integer ind = parseIndex(index1Group);\n             if (ind == null) {\n-                HashMap<String,String> attribs = parseAttributes(selectorSpec, index1Group);\n+                HashMap<String,String> attribs = parseAttributes(selectorExpression, index1Group);\n                 if (attribs == null) {\n                     throw new TemplateProcessingException(\n-                            \"Invalid syntax in DOM selector \\\"\" + selectorSpec + \"\\\": selector does not match selector syntax: \" +\n+                            \"Invalid syntax in DOM selector \\\"\" + selectorExpression + \"\\\": selector does not match selector syntax: \" +\n                             \"(/|//)(selector)([@attrib=\\\"value\\\" (and @attrib2=\\\"value\\\")?])?([index])?\");\n                 }\n                 this.attributes = attribs;\n@@ -170,14 +181,14 @@ public DOMSelector(final String selectorSpec) {\n \n                 if (this.index != null) {\n                     throw new TemplateProcessingException(\n-                            \"Invalid syntax in DOM selector \\\"\" + selectorSpec + \"\\\": selector does not match selector syntax: \" +\n+                            \"Invalid syntax in DOM selector \\\"\" + selectorExpression + \"\\\": selector does not match selector syntax: \" +\n                             \"(/|//)(selector)([@attrib=\\\"value\\\" (and @attrib2=\\\"value\\\")?])?([index])?\");\n                 }\n                 \n                 ind = parseIndex(index1Group);\n                 if (ind == null) {\n                     throw new TemplateProcessingException(\n-                            \"Invalid syntax in DOM selector \\\"\" + selectorSpec + \"\\\": selector does not match selector syntax: \" +\n+                            \"Invalid syntax in DOM selector \\\"\" + selectorExpression + \"\\\": selector does not match selector syntax: \" +\n                             \"(/|//)(selector)([@attrib=\\\"value\\\" (and @attrib2=\\\"value\\\")?])?([index])?\");\n                 }\n                 this.index = ind;\n@@ -186,7 +197,7 @@ public DOMSelector(final String selectorSpec) {\n             \n             if (this.descendMoreThanOneLevel && this.index != null) {\n                 throw new TemplateProcessingException(\n-                        \"Invalid syntax in DOM selector \\\"\" + selectorSpec + \"\\\": index cannot be specified on a \\\"descend any levels\\\" selector (//).\");\n+                        \"Invalid syntax in DOM selector \\\"\" + selectorExpression + \"\\\": index cannot be specified on a \\\"descend any levels\\\" selector (//).\");\n             }\n             \n         }\n@@ -195,6 +206,20 @@ public DOMSelector(final String selectorSpec) {\n     \n     \n     \n+    /**\n+     * <p>\n+     *   Returns the expression that specifies this DOM selector.\n+     * </p>\n+     * \n+     * @return the selector expression.\n+     * @since 2.0.12\n+     */\n+    public String getSelectorExpression() {\n+        return this.selectorExpression;\n+    }\n+    \n+    \n+    \n     private static Integer parseIndex(final String indexGroup) {\n         if (\"last()\".equals(indexGroup.toLowerCase())) {\n             return Integer.valueOf(-1);\n@@ -260,13 +285,30 @@ private static void parseAttribute(final String selectorSpec, final HashMap<Stri\n \n     \n     \n-    \n+    /**\n+     * <p>\n+     *   Executes the DOM selector against the specified node, returning\n+     *   the result of applying the selector expression.\n+     * </p>\n+     * \n+     * @param node the node on which the selector will be executed.\n+     * @return the result of executing the selector.\n+     */\n     public List<Node> select(final Node node) {\n         Validate.notNull(node, \"Node to be searched cannot be null\");\n         return select(Collections.singletonList(node));\n     }\n \n-    \n+\n+    /**\n+     * <p>\n+     *   Executes the DOM selector against the specified list of nodes,\n+     *   returning the result of applying the selector expression.\n+     * </p>\n+     * \n+     * @param nodes the nodes on which the selector will be executed.\n+     * @return the result of executing the selector.\n+     */\n     public List<Node> select(final List<Node> nodes) {\n         Validate.notEmpty(nodes, \"Nodes to be searched cannot be null or empty\");\n         final List<Node> selected = new ArrayList<Node>();\n@@ -410,7 +452,7 @@ private final boolean doCheckSpecificNodeSelection(final Node node) {\n     \n     @Override\n     public final String toString() {\n-        return this.selectorSpec;\n+        return this.selectorExpression;\n     }\n \n    \ndiff --git a/src/main/java/org/thymeleaf/fragment/ChainedFragmentSpec.java b/src/main/java/org/thymeleaf/fragment/ChainedFragmentSpec.java\nindex c2750b145..e4b4be24f 100644\n--- a/src/main/java/org/thymeleaf/fragment/ChainedFragmentSpec.java\n+++ b/src/main/java/org/thymeleaf/fragment/ChainedFragmentSpec.java\n@@ -33,6 +33,9 @@\n  *   Implementation of {@link IFragmentSpec} that allows the execution of\n  *   two fragment specs in chain, effectively performing a double-filering.\n  * </p>\n+ * <p>\n+ *   Objects of this class are <b>thread-safe</b>.\n+ * </p>\n  * \n  * @author Daniel Fern&aacute;ndez\n  * \n@@ -45,6 +48,14 @@ public final class ChainedFragmentSpec implements IFragmentSpec {\n     private final IFragmentSpec fragmentSpec2;\n     \n     \n+    /**\n+     * <p>\n+     *   Creates a new instance of this fragment spec.\n+     * </p>\n+     * \n+     * @param fragmentSpec1 the first fragment spec that will be executed.\n+     * @param fragmentSpec2 the second fragment spec that will be executed.\n+     */\n     public ChainedFragmentSpec(\n             final IFragmentSpec fragmentSpec1, final IFragmentSpec fragmentSpec2) {\n         super();\n@@ -69,7 +80,11 @@ public IFragmentSpec getFragmentSpec1() {\n \n     /**\n      * <p>\n-     *   Returns the seconf fragment spec in the chain.\n+     *   Returns the second fragment spec in the chain.\n+     * </p>\n+     * <p>\n+     *   This fragment spec will be executed using the output from \n+     *   <tt>fragmentSpec1</tt> as input.\n      * </p>\n      * \n      * @return the fragment spec\ndiff --git a/src/main/java/org/thymeleaf/fragment/DOMSelectorFragmentSpec.java b/src/main/java/org/thymeleaf/fragment/DOMSelectorFragmentSpec.java\nindex 3616c67ac..e96d43c28 100644\n--- a/src/main/java/org/thymeleaf/fragment/DOMSelectorFragmentSpec.java\n+++ b/src/main/java/org/thymeleaf/fragment/DOMSelectorFragmentSpec.java\n@@ -19,19 +19,34 @@\n  */\n package org.thymeleaf.fragment;\n \n+import java.util.ArrayList;\n import java.util.List;\n \n import org.thymeleaf.Configuration;\n import org.thymeleaf.cache.ICache;\n import org.thymeleaf.cache.ICacheManager;\n import org.thymeleaf.dom.DOMSelector;\n+import org.thymeleaf.dom.NestableNode;\n import org.thymeleaf.dom.Node;\n+import org.thymeleaf.exceptions.TemplateProcessingException;\n import org.thymeleaf.util.Validate;\n \n \n \n \n /**\n+ * <p>\n+ *  Implementation of the {@link IFragmentSpec} interface that extracts fragments\n+ *  of DOM trees using a {@link DOMSelector} object.\n+ * </p>\n+ * <p>\n+ *  The DOM selector instances used by these fragment specs are stored at the\n+ *  <i>expression cache</i> (see {@link ICacheManager#getExpressionCache()}) using\n+ *  as key {@link #DOM_SELECTOR_EXPRESSION_PREFIX} + <tt>selectorExpression</tt>.\n+ * </p>\n+ * <p>\n+ *   Objects of this class are <b>thread-safe</b>.\n+ * </p>\n  * \n  * @author Daniel Fern&aacute;ndez\n  * \n@@ -40,17 +55,55 @@\n  */\n public final class DOMSelectorFragmentSpec implements IFragmentSpec {\n \n-    \n-    private static final String DOM_SELECTOR_EXPRESSION_PREFIX = \"{dom_selector}\";\n+    /**\n+     * <p>\n+     *   Prefix to be used for keys when storing selector expressions at the\n+     *   <i>expression cache</i>.\n+     * </p>\n+     */\n+    public static final String DOM_SELECTOR_EXPRESSION_PREFIX = \"{dom_selector}\";\n     \n     private final String selectorExpression;\n+    private final boolean returnOnlyChildren;\n \n     \n-    \n+\n+    /**\n+     * <p>\n+     *   Creates a new instance, specifying the expression to be used for a\n+     *   {@link DOMSelector} object to be created internally.\n+     * </p>\n+     * \n+     * @param selectorExpression the expression to be used for the DOM selector.\n+     */\n     public DOMSelectorFragmentSpec(final String selectorExpression) {\n+        this(selectorExpression, false);\n+    }\n+    \n+\n+    /**\n+     * <p>\n+     *   Creates a new instance, specifying the expression to be used for a\n+     *   {@link DOMSelector} object to be created internally and also a flag indicating\n+     *   whether the selected element itself (or selected elements if more than\n+     *   one) must be returned or only its/their children.\n+     * </p>\n+     * <p>\n+     *   If <tt>returnOnlyChildren</tt> is true, the element with the specified name \n+     *   and/or containing the specified attribute will be discarded, and only its/their\n+     *   children will be returned.\n+     * </p>\n+     * \n+     * @param selectorExpression the expression to be used for the DOM selector.\n+     * @param returnOnlyChildren whether the selected elements should be returned (false),\n+     *        or only their children (true).\n+     * @since 2.0.12\n+     */\n+    public DOMSelectorFragmentSpec(final String selectorExpression, final boolean returnOnlyChildren) {\n         super();\n         Validate.notEmpty(selectorExpression, \"DOM selector expression cannot be null or empty\");\n         this.selectorExpression = selectorExpression;\n+        this.returnOnlyChildren = returnOnlyChildren;\n     }\n     \n     \n@@ -59,6 +112,21 @@ public String getSelectorExpression() {\n         return this.selectorExpression;\n     }\n     \n+    \n+    /**\n+     * <p>\n+     *   Returns whether this spec should only return the children of the selected nodes\n+     *   (<tt>true</tt>) or the selected nodes themselves (<tt>false</tt>, default).\n+     * </p>\n+     * \n+     * @return whether this spec should only return the children of the selected nodes\n+     *         or not (default: false).\n+     * @since 2.0.12\n+     */\n+    public boolean isReturnOnlyChildren() {\n+        return this.returnOnlyChildren;\n+    }\n+    \n \n     \n \n@@ -83,12 +151,35 @@ public final List<Node> extractFragment(final Configuration configuration, final\n             }\n         }\n         \n-        final List<Node> selectedNodes = selector.select(nodes);\n-        if (selectedNodes == null || selectedNodes.size() == 0) {\n+        final List<Node> extraction = selector.select(nodes);\n+        if (extraction == null || extraction.size() == 0) {\n             return null;\n         }\n             \n-        return selectedNodes;\n+        \n+        if (!this.returnOnlyChildren) {\n+            return extraction;\n+        }\n+        \n+        final List<Node> extractionChildren = new ArrayList<Node>(); \n+        for (final Node extractionNode : extraction) {\n+            \n+            if (extractionNode == null) {\n+                continue;\n+            }\n+            \n+            if (!(extractionNode instanceof NestableNode)) {\n+                throw new TemplateProcessingException(\n+                        \"Cannot correctly retrieve children of node selected by fragment spec \" +\n+                        \"with DOM selector \\\"\" + this.selectorExpression + \"\\\". Node is not a \" +\n+                \t\t\"nestable node (\" + extractionNode.getClass().getSimpleName() + \").\");\n+            }\n+            \n+            extractionChildren.addAll(((NestableNode)extractionNode).getChildren());\n+            \n+        }\n+        \n+        return extractionChildren;\n         \n     }\n \ndiff --git a/src/main/java/org/thymeleaf/fragment/ElementAndAttributeNameFragmentSpec.java b/src/main/java/org/thymeleaf/fragment/ElementAndAttributeNameFragmentSpec.java\nindex 8e36c490f..cf4adc4dd 100644\n--- a/src/main/java/org/thymeleaf/fragment/ElementAndAttributeNameFragmentSpec.java\n+++ b/src/main/java/org/thymeleaf/fragment/ElementAndAttributeNameFragmentSpec.java\n@@ -19,10 +19,13 @@\n  */\n package org.thymeleaf.fragment;\n \n+import java.util.ArrayList;\n import java.util.List;\n \n import org.thymeleaf.Configuration;\n+import org.thymeleaf.dom.NestableNode;\n import org.thymeleaf.dom.Node;\n+import org.thymeleaf.exceptions.TemplateProcessingException;\n import org.thymeleaf.util.DOMUtils;\n import org.thymeleaf.util.StringUtils;\n import org.thymeleaf.util.Validate;\n@@ -31,6 +34,13 @@\n \n \n /**\n+ * <p>\n+ *   Fragment specification that extracts a specific element from a Node tree\n+ *   by its name, or by the value of one of its attributes.\n+ * </p>\n+ * <p>\n+ *   Objects of this class are <b>thread-safe</b>.\n+ * </p>\n  * \n  * @author Daniel Fern&aacute;ndez\n  * \n@@ -42,14 +52,53 @@ public final class ElementAndAttributeNameFragmentSpec implements IFragmentSpec\n     private final String elementName;\n     private final String attributeName;\n     private final String attributeValue;\n+    private final boolean returnOnlyChildren;\n     \n     \n     \n-    \n+\n+    /**\n+     * <p>\n+     *   Create a fragment spec specifying element name and/or attribute name+value.\n+     * </p>\n+     * \n+     * @param elementName the element name to look for, optional.\n+     * @param attributeName the attribute name to look for, optional.\n+     * @param attributeValue the value of the attribute (if attribute name has been specified).\n+     */\n     public ElementAndAttributeNameFragmentSpec(\n             final String elementName, \n             final String attributeName, \n             final String attributeValue) {\n+        this(elementName, attributeName, attributeValue, false);\n+    }\n+\n+    \n+    \n+    /**\n+     * <p>\n+     *   Create a fragment spec specifying element name and/or attribute name+value, and\n+     *   specifying whether the selected element itself (or selected",
    "Migrate processing hbm . xml files to use Jaxb - generated classes": "diff --git a/hibernate-core/src/main/java/org/hibernate/InvalidMappingException.java b/hibernate-core/src/main/java/org/hibernate/InvalidMappingException.java\nindex b2883bb6f5..124fe21954 100644\n--- a/hibernate-core/src/main/java/org/hibernate/InvalidMappingException.java\n+++ b/hibernate-core/src/main/java/org/hibernate/InvalidMappingException.java\n@@ -24,6 +24,9 @@\n package org.hibernate;\n \n import org.hibernate.internal.util.xml.XmlDocument;\n+import org.hibernate.metamodel.source.Origin;\n+import org.hibernate.metamodel.source.hbm.xml.mapping.HibernateMapping;\n+import org.hibernate.metamodel.source.internal.JaxbRoot;\n \n /**\n  * Thrown when a mapping is found to be invalid.\n@@ -55,7 +58,11 @@ public class InvalidMappingException extends MappingException {\n \tpublic InvalidMappingException(String customMessage, XmlDocument xmlDocument) {\n \t\tthis( customMessage, xmlDocument.getOrigin().getType(), xmlDocument.getOrigin().getName() );\n \t}\n-\t\n+\n+\tpublic InvalidMappingException(String customMessage, Origin origin) {\n+\t\tthis( customMessage, origin.getType().toString(), origin.getName() );\n+\t}\n+\n \tpublic InvalidMappingException(String type, String path) {\n \t\tthis(\"Could not parse mapping document from \" + type + (path==null?\"\":\" \" + path), type, path);\n \t}\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/AbstractAttributeBinding.java b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/AbstractAttributeBinding.java\nindex ccc20f0070..cee70c8932 100644\n--- a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/AbstractAttributeBinding.java\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/AbstractAttributeBinding.java\n@@ -28,18 +28,14 @@ import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n \n-import org.dom4j.Element;\n-\n-import org.hibernate.mapping.MetaAttribute;\n import org.hibernate.metamodel.domain.Attribute;\n+import org.hibernate.metamodel.domain.MetaAttribute;\n import org.hibernate.metamodel.relational.Column;\n import org.hibernate.metamodel.relational.DerivedValue;\n import org.hibernate.metamodel.relational.SimpleValue;\n import org.hibernate.metamodel.relational.TableSpecification;\n import org.hibernate.metamodel.relational.Tuple;\n import org.hibernate.metamodel.relational.Value;\n-import org.hibernate.metamodel.source.hbm.HbmHelper;\n-import org.hibernate.metamodel.source.util.DomHelper;\n \n /**\n  * TODO : javadoc\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/AttributeBinding.java b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/AttributeBinding.java\nindex e28613d9ce..266b656052 100644\n--- a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/AttributeBinding.java\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/AttributeBinding.java\n@@ -25,9 +25,8 @@ package org.hibernate.metamodel.binding;\n \n import java.util.Map;\n \n-import org.hibernate.FetchMode;\n-import org.hibernate.mapping.MetaAttribute;\n import org.hibernate.metamodel.domain.Attribute;\n+import org.hibernate.metamodel.domain.MetaAttribute;\n import org.hibernate.metamodel.relational.SimpleValue;\n import org.hibernate.metamodel.relational.TableSpecification;\n import org.hibernate.metamodel.relational.Value;\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/CollectionElement.java b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/CollectionElement.java\nindex 15e4a992a2..bf84c2fa6b 100644\n--- a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/CollectionElement.java\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/CollectionElement.java\n@@ -25,8 +25,7 @@ package org.hibernate.metamodel.binding;\n \n import org.dom4j.Element;\n \n-import org.hibernate.mapping.PropertyGeneration;\n-import org.hibernate.mapping.Value;\n+import org.hibernate.metamodel.relational.Value;\n import org.hibernate.metamodel.source.hbm.HbmHelper;\n import org.hibernate.metamodel.source.util.DomHelper;\n \ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/EntityBinding.java b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/EntityBinding.java\nindex bf59079e58..2fb47e28bc 100644\n--- a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/EntityBinding.java\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/EntityBinding.java\n@@ -29,18 +29,15 @@ import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n \n-import org.dom4j.Attribute;\n-import org.dom4j.Element;\n-\n import org.hibernate.MappingException;\n import org.hibernate.engine.Versioning;\n import org.hibernate.internal.util.ReflectHelper;\n-import org.hibernate.mapping.MetaAttribute;\n import org.hibernate.metamodel.domain.Entity;\n+import org.hibernate.metamodel.domain.MetaAttribute;\n import org.hibernate.metamodel.relational.Column;\n import org.hibernate.metamodel.relational.TableSpecification;\n import org.hibernate.metamodel.source.hbm.HbmHelper;\n-import org.hibernate.metamodel.source.util.DomHelper;\n+import org.hibernate.metamodel.source.util.MappingHelper;\n \n /**\n  * TODO : javadoc\n@@ -86,21 +83,20 @@ public class EntityBinding {\n \tprivate List<String> synchronizedTableNames;\n \n \t// TODO: change to intialize from Doimain\n-\tpublic void fromHbmXml(MappingDefaults defaults, Element node, Entity entity) {\n+\tpublic void fromHbmXml(MappingDefaults defaults, org.hibernate.metamodel.source.hbm.xml.mapping.Class entityClazz, Entity entity) {\n \t\tthis.entity = entity;\n-\t\tmetaAttributes = HbmHelper.extractMetas( node, true, defaults.getMappingMetas() );\n+\t\tmetaAttributes = HbmHelper.extractMetas( entityClazz.getMeta(), true, defaults.getMappingMetas() );\n \n \t\t// go ahead and set the lazy here, since pojo.proxy can override it.\n-\t\tlazy = DomHelper.extractBooleanAttributeValue( node, \"lazy\", defaults.isDefaultLazy()  );\n-\n-\t\tdiscriminatorValue = DomHelper.extractAttributeValue( node, \"discriminator-value\", entity.getName() );\n-\t\tdynamicUpdate = DomHelper.extractBooleanAttributeValue( node, \"dynamic-update\", false );\n-\t\tdynamicInsert = DomHelper.extractBooleanAttributeValue( node, \"dynamic-insert\", false );\n-\t\tbatchSize = DomHelper.extractIntAttributeValue( node, \"batch-size\", 0 );\n-\t\tselectBeforeUpdate = DomHelper.extractBooleanAttributeValue( node, \"select-before-update\", false );\n+\t\tlazy = MappingHelper.getBooleanValue( entityClazz.getLazy(), defaults.isDefaultLazy() );\n+\t\tdiscriminatorValue = MappingHelper.getStringValue( entityClazz.getDiscriminatorValue(), entity.getName() );\n+\t\tdynamicUpdate = MappingHelper.getBooleanValue( entityClazz.getDynamicUpdate(), false );\n+\t\tdynamicInsert = MappingHelper.getBooleanValue( entityClazz.getDynamicInsert(), false );\n+\t\tbatchSize = MappingHelper.getIntValue( entityClazz.getBatchSize(), 0 );\n+\t\tselectBeforeUpdate = MappingHelper.getBooleanValue( entityClazz.getSelectBeforeUpdate(), false );\n \n \t\t// OPTIMISTIC LOCK MODE\n-\t\tString optimisticLockModeString = DomHelper.extractAttributeValue( node,  \"optimistic-lock\", \"version\" );\n+\t\tString optimisticLockModeString = MappingHelper.getStringValue( entityClazz.getOptimisticLock(), \"version\" );\n \t\tif ( \"version\".equals( optimisticLockModeString ) ) {\n \t\t\toptimisticLockMode = Versioning.OPTIMISTIC_LOCK_VERSION;\n \t\t}\n@@ -118,28 +114,51 @@ public class EntityBinding {\n \t\t}\n \n \t\t// PERSISTER\n-\t\tAttribute persisterNode = node.attribute( \"persister\" );\n-\t\tif ( persisterNode != null ) {\n+\t\tif ( entityClazz.getPersister() != null ) {\n \t\t\ttry {\n-\t\t\t\tentityPersisterClass = ReflectHelper.classForName( persisterNode.getValue() );\n+\t\t\t\tentityPersisterClass = ReflectHelper.classForName( entityClazz.getPersister() );\n \t\t\t}\n \t\t\tcatch (ClassNotFoundException cnfe) {\n \t\t\t\tthrow new MappingException( \"Could not find persister class: \"\n-\t\t\t\t\t+ persisterNode.getValue() );\n+\t\t\t\t\t+ entityClazz.getPersister() );\n \t\t\t}\n \t\t}\n \n \t\t// CUSTOM SQL\n-\t\tcustomInsert = HbmHelper.getCustomSql( node.element( \"sql-insert\" ) );\n-\t\tcustomDelete = HbmHelper.getCustomSql( node.element( \"sql-delete\" ) );\n-\t\tcustomUpdate = HbmHelper.getCustomSql( node.element( \"sql-update\" ) );\n+\t\torg.hibernate.metamodel.source.hbm.xml.mapping.SqlInsert sqlInsert = entityClazz.getSqlInsert();\n+\t\tif ( sqlInsert != null ) {\n+\t\t\tcustomInsert = HbmHelper.getCustomSql(\n+\t\t\t\t\tsqlInsert.getContent(),\n+\t\t\t\t\tMappingHelper.getBooleanValue( sqlInsert.getCallable(), false ),\n+\t\t\t\t\tsqlInsert.getCheck()\n+\t\t\t);\n+\t\t}\n \n-\t\tIterator tables = node.elementIterator( \"synchronize\" );\n-\t\twhile ( tables.hasNext() ) {\n-\t\t\taddSynchronizedTable( ( ( Element ) tables.next() ).attributeValue( \"table\" ) );\n+\t\torg.hibernate.metamodel.source.hbm.xml.mapping.SqlDelete sqlDelete = entityClazz.getSqlDelete();\n+\t\tif ( sqlDelete != null ) {\n+\t\t\tcustomDelete = HbmHelper.getCustomSql(\n+\t\t\t\t\tsqlDelete.getContent(),\n+\t\t\t\t\tMappingHelper.getBooleanValue( sqlDelete.getCallable(), false ),\n+\t\t\t\t\tsqlDelete.getCheck()\n+\t\t\t);\n+\t\t}\n+\n+\t\torg.hibernate.metamodel.source.hbm.xml.mapping.SqlUpdate sqlUpdate = entityClazz.getSqlUpdate();\n+\t\tif ( sqlUpdate != null ) {\n+\t\t\tcustomUpdate = HbmHelper.getCustomSql(\n+\t\t\t\t\tsqlUpdate.getContent(),\n+\t\t\t\t\tMappingHelper.getBooleanValue( sqlUpdate.getCallable(), false ),\n+\t\t\t\t\tsqlUpdate.getCheck()\n+\t\t\t);\n+\t\t}\n+\n+\t\tif ( entityClazz.getSynchronize() != null ) {\n+\t\t\tfor ( org.hibernate.metamodel.source.hbm.xml.mapping.Synchronize synchronize : entityClazz.getSynchronize() ) {\n+\t\t\t\taddSynchronizedTable( synchronize.getTable() );\n+\t\t\t}\n \t\t}\n \n-\t\tisAbstract = DomHelper.extractBooleanAttributeValue( node, \"abstract\", false );\n+\t\tisAbstract = MappingHelper.getBooleanValue( entityClazz.getAbstract(), false );\n \t}\n \n \tpublic Entity getEntity() {\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/FetchProfile.java b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/FetchProfile.java\nnew file mode 100644\nindex 0000000000..1136f2615c\n--- /dev/null\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/FetchProfile.java\n@@ -0,0 +1,143 @@\n+/*\n+ * Hibernate, Relational Persistence for Idiomatic Java\n+ *\n+ * Copyright (c) 2011, Red Hat Inc. or third-party contributors as\n+ * indicated by the @author tags or express copyright attribution\n+ * statements applied by the authors.  All third-party contributions are\n+ * distributed under license by Red Hat Inc.\n+ *\n+ * This copyrighted material is made available to anyone wishing to use, modify,\n+ * copy, or redistribute it subject to the terms and conditions of the GNU\n+ * Lesser General Public License, as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\n+ * for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this distribution; if not, write to:\n+ * Free Software Foundation, Inc.\n+ * 51 Franklin Street, Fifth Floor\n+ * Boston, MA  02110-1301  USA\n+ */\n+package org.hibernate.metamodel.binding;\n+import java.util.LinkedHashSet;\n+\n+import org.hibernate.mapping.MetadataSource;\n+\n+/**\n+ * A fetch profile allows a user to dynamically modify the fetching strategy used for particular associations at\n+ * runtime, whereas that information was historically only statically defined in the metadata.\n+ * <p/>\n+ * This class represent the data as it is defined in their metadata.\n+ *\n+ * @author Steve Ebersole\n+ *\n+ * @see org.hibernate.engine.profile.FetchProfile\n+ */\n+public class FetchProfile {\n+\tprivate final String name;\n+\tprivate final MetadataSource source;\n+\tprivate LinkedHashSet<Fetch> fetches = new LinkedHashSet<Fetch>();\n+\n+\t/**\n+\t * Create a fetch profile representation.\n+\t *\n+\t * @param name The name of the fetch profile.\n+\t * @param source The source of the fetch profile (where was it defined).\n+\t */\n+\tpublic FetchProfile(String name, MetadataSource source) {\n+\t\tthis.name = name;\n+\t\tthis.source = source;\n+\t}\n+\n+\t/**\n+\t * Retrieve the name of the fetch profile.\n+\t *\n+\t * @return The profile name\n+\t */\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\n+\t/**\n+\t * Retrieve the fetch profile source.\n+\t *\n+\t * @return The profile source.\n+\t */\n+\tpublic MetadataSource getSource() {\n+\t\treturn source;\n+\t}\n+\n+\t/**\n+\t * Retrieve the fetches associated with this profile\n+\t *\n+\t * @return The fetches associated with this profile.\n+\t */\n+\tpublic LinkedHashSet<Fetch> getFetches() {\n+\t\treturn fetches;\n+\t}\n+\n+\t/**\n+\t * Adds a fetch to this profile.\n+\t *\n+\t * @param entity The entity which contains the association to be fetched\n+\t * @param association The association to fetch\n+\t * @param style The style of fetch t apply\n+\t */\n+\tpublic void addFetch(String entity, String association, String style) {\n+\t\tfetches.add( new Fetch( entity, association, style ) );\n+\t}\n+\n+\t/**\n+\t * {@inheritDoc}\n+\t */\n+\tpublic boolean equals(Object o) {\n+\t\tif ( this == o ) {\n+\t\t\treturn true;\n+\t\t}\n+\t\tif ( o == null || getClass() != o.getClass() ) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\tFetchProfile that = (FetchProfile) o;\n+\n+\t\treturn name.equals( that.name );\n+\t}\n+\n+\t/**\n+\t * {@inheritDoc}\n+\t */\n+\tpublic int hashCode() {\n+\t\treturn name.hashCode();\n+\t}\n+\n+\n+\t/**\n+\t * Defines an individual association fetch within the given profile.\n+\t */\n+\tpublic static class Fetch {\n+\t\tprivate final String entity;\n+\t\tprivate final String association;\n+\t\tprivate final String style;\n+\n+\t\tpublic Fetch(String entity, String association, String style) {\n+\t\t\tthis.entity = entity;\n+\t\t\tthis.association = association;\n+\t\t\tthis.style = style;\n+\t\t}\n+\n+\t\tpublic String getEntity() {\n+\t\t\treturn entity;\n+\t\t}\n+\n+\t\tpublic String getAssociation() {\n+\t\t\treturn association;\n+\t\t}\n+\n+\t\tpublic String getStyle() {\n+\t\t\treturn style;\n+\t\t}\n+\t}\n+}\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/IdGenerator.java b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/IdGenerator.java\nnew file mode 100644\nindex 0000000000..faeb9ca7ab\n--- /dev/null\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/IdGenerator.java\n@@ -0,0 +1,73 @@\n+/*\n+ * Hibernate, Relational Persistence for Idiomatic Java\n+ *\n+ * Copyright (c) 2011, Red Hat Inc. or third-party contributors as\n+ * indicated by the @author tags or express copyright attribution\n+ * statements applied by the authors.  All third-party contributions are\n+ * distributed under license by Red Hat Inc.\n+ *\n+ * This copyrighted material is made available to anyone wishing to use, modify,\n+ * copy, or redistribute it subject to the terms and conditions of the GNU\n+ * Lesser General Public License, as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\n+ * for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this distribution; if not, write to:\n+ * Free Software Foundation, Inc.\n+ * 51 Franklin Street, Fifth Floor\n+ * Boston, MA  02110-1301  USA\n+ */\n+package org.hibernate.metamodel.binding;\n+import java.io.Serializable;\n+import java.util.Properties;\n+\n+/**\n+ * Identifier generator container,\n+ * Useful to keep named generator in annotations\n+ *\n+ * @author Emmanuel Bernard\n+ */\n+public class IdGenerator implements Serializable {\n+\tprivate String name;\n+\tprivate String identifierGeneratorStrategy;\n+\tprivate Properties params = new Properties();\n+\n+\n+\t/**\n+\t * @return identifier generator strategy\n+\t */\n+\tpublic String getIdentifierGeneratorStrategy() {\n+\t\treturn identifierGeneratorStrategy;\n+\t}\n+\n+\t/**\n+\t * @return generator name\n+\t */\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\n+\t/**\n+\t * @return generator configuration parameters\n+\t */\n+\tpublic Properties getParams() {\n+\t\treturn params;\n+\t}\n+\n+\tpublic void setIdentifierGeneratorStrategy(String string) {\n+\t\tidentifierGeneratorStrategy = string;\n+\t}\n+\n+\tpublic void setName(String string) {\n+\t\tname = string;\n+\t}\n+\n+\tpublic void addParam(String key, String value) {\n+\t\tparams.setProperty( key, value );\n+\t}\n+\n+}\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/MappingDefaults.java b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/MappingDefaults.java\nindex 6bd331ccd5..db0bb147f6 100644\n--- a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/MappingDefaults.java\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/MappingDefaults.java\n@@ -26,7 +26,7 @@ package org.hibernate.metamodel.binding;\n import java.util.Map;\n \n import org.hibernate.cfg.NamingStrategy;\n-import org.hibernate.mapping.MetaAttribute;\n+import org.hibernate.metamodel.domain.MetaAttribute;\n \n /**\n  * @author Gail Badner\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/PluralAttributeBinding.java b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/PluralAttributeBinding.java\nindex 2d1c723e8b..08b28f6113 100644\n--- a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/PluralAttributeBinding.java\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/PluralAttributeBinding.java\n@@ -156,105 +156,6 @@ public abstract class PluralAttributeBinding extends AbstractAttributeBinding {\n \t}\n \n \n-\tpublic void fromHbmXml(MappingDefaults defaults, Element element, org.hibernate.metamodel.domain.Attribute attribute) {\n-\t\tinverse = DomHelper.extractBooleanAttributeValue( element, \"inverse\", false );\n-\t\tmutable = DomHelper.extractBooleanAttributeValue( element, \"mutable\", true );\n-\t\tif ( \"subselect\".equals( element.attributeValue(\"fetch\") ) ) {\n-\t\t\tsubselectLoadable = true;\n-\t\t\tgetEntityBinding().setSubselectLoadableCollections( true );\n-\t\t}\n-\t\torderBy = DomHelper.extractAttributeValue( element, \"order-by\", null );\n-\t\twhere = DomHelper.extractAttributeValue( element, \"where\", null );\n-\t\tbatchSize = DomHelper.extractIntAttributeValue( element, \"batch-size\", 0 );\n-\t\tembedded = DomHelper.extractBooleanAttributeValue( element, \"embed-xml\", true );\n-\t\ttry {\n-\t\t\tcollectionPersisterClass = DomHelper.extractClassAttributeValue( element, \"persister\" );\n-\t\t}\n-\t\tcatch (ClassNotFoundException cnfe) {\n-\t\t\tthrow new MappingException( \"Could not find collection persister class: \"\n-\t\t\t\t+ element.attributeValue( \"persister\" ) );\n-\t\t}\n-\n-\t\t//Attribute typeNode = collectionElement.attribute( \"collection-type\" );\n-\t\t//if ( typeNode != null ) {\n-\t\t\t// TODO: implement when typedef binding is implemented\n-\t\t\t/*\n-\t\t\tString typeName = typeNode.getValue();\n-\t\t\tTypeDef typeDef = mappings.getTypeDef( typeName );\n-\t\t\tif ( typeDef != null ) {\n-\t\t\t\tcollectionBinding.setTypeName( typeDef.getTypeClass() );\n-\t\t\t\tcollectionBinding.setTypeParameters( typeDef.getParameters() );\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\tcollectionBinding.setTypeName( typeName );\n-\t\t\t}\n-\t\t\t*/\n-\t\t//}\n-\n-\t\t// SORT\n-\t\t// unsorted, natural, comparator.class.name\n-\t\tString sortString = DomHelper.extractAttributeValue( element, \"sort\", \"unsorted\" );\n-\t\tsorted = ( ! \"unsorted\".equals( sortString ) );\n-\t\tif ( sorted && ! \"natural\".equals( sortString ) ) {\n-\t\t\tcomparatorClassName = sortString;\n-\t\t}\n-\n-\t\t// ORPHAN DELETE (used for programmer error detection)\n-\t\tString cascadeString = DomHelper.extractAttributeValue( element, \"cascade\", \"none\"  );\n-\t\torphanDelete = ( cascadeString.indexOf( \"delete-orphan\" ) >= 0 );\n-\n-\t\t// CUSTOM SQL\n-\t\tcustomSQLInsert = HbmHelper.getCustomSql( element.element( \"sql-insert\" ) );\n-\t\tcustomSQLDelete = HbmHelper.getCustomSql( element.element( \"sql-delete\" ) );\n-\t\tcustomSQLUpdate = HbmHelper.getCustomSql( element.element( \"sql-update\" ) );\n-\t\tcustomSQLDeleteAll = HbmHelper.getCustomSql( element.element( \"sql-delete-all\" ) );\n-\n-\t\t// TODO: IMPLEMENT\n-\t\t//Iterator iter = collectionElement.elementIterator( \"filter\" );\n-\t\t//while ( iter.hasNext() ) {\n-\t\t//\tfinal Element filter = (Element) iter.next();\n-\t\t//\tparseFilter( filter, collectionElement, collectionBinding );\n-\t\t//}\n-\n-\t\tIterator tables = element.elementIterator( \"synchronize\" );\n-\t\twhile ( tables.hasNext() ) {\n-\t\t\tsynchronizedTables.add( ( (Element ) tables.next() ).attributeValue( \"table\" ) );\n-\t\t}\n-\n-\t\tloaderName = DomHelper.extractAttributeValue( element.element( \"loader\" ), \"query-ref\" );\n-\t\treferencedPropertyName = element.element( \"key\" ).attributeValue( \"property-ref\" );\n-\n-\t\tElement cacheElement = element.element( \"cache\" );\n-\t\tif ( cacheElement != null ) {\n-\t\t\t\tcacheConcurrencyStrategy = cacheElement.attributeValue( \"usage\" );\n-\t\t\t\tcacheRegionName = cacheElement.attributeValue( \"region\" );\n-\t\t}\n-\n-\t\tAttribute fetchNode = element.attribute( \"fetch\" );\n-\t\tif ( fetchNode != null ) {\n-\t\t\tfetchMode = \"join\".equals( fetchNode.getValue() ) ? FetchMode.JOIN : FetchMode.SELECT;\n-\t\t}\n-\t\telse {\n-\t\t\tAttribute jfNode = element.attribute( \"outer-join\" );\n-\t\t\tString jfNodeValue = ( jfNode == null ? \"auto\" : jfNode.getValue() );\n-\t\t\tif ( \"auto\".equals( jfNodeValue ) ) {\n-\t\t\t\tfetchMode = FetchMode.DEFAULT;\n-\t\t\t}\n-\t\t\telse if ( \"true\".equals( jfNodeValue ) ) {\n-\t\t\t\tfetchMode = FetchMode.JOIN;\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\tfetchMode = FetchMode.SELECT;\n-\t\t\t}\n-\t\t}\n-\n-\t\tString lazyString = DomHelper.extractAttributeValue( element, \"lazy\" );\n-\t\textraLazy = ( \"extra\".equals( lazyString ) );\n-\t\tif ( extraLazy && ! isLazy() ) {\n-\t\t\t// explicitly make lazy\n-\t\t\tsetLazy( true );\n-\t\t}\n-\t}\n \n \tprotected boolean isLazyDefault(MappingDefaults defaults) {\n \t\treturn defaults.isDefaultLazy();\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/SimpleAttributeBinding.java b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/SimpleAttributeBinding.java\nindex a8d269fe0a..3b2cb56130 100644\n--- a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/SimpleAttributeBinding.java\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/SimpleAttributeBinding.java\n@@ -69,7 +69,7 @@ public class SimpleAttributeBinding extends SingularAttributeBinding {\n \t}\n \n \tpublic static interface TupleRelationalState {\n-\t\tLinkedHashSet<SingleValueRelationalState> getSingleValueRelationalStates();\n+\t\tSet<SingleValueRelationalState> getSingleValueRelationalStates();\n \t}\n \n \tprivate PropertyGeneration generation;\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/binding/TypeDef.java b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/TypeDef.java\nnew file mode 100644\nindex 0000000000..df746ea001\n--- /dev/null\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/binding/TypeDef.java\n@@ -0,0 +1,48 @@\n+/*\n+ * Hibernate, Relational Persistence for Idiomatic Java\n+ *\n+ * Copyright (c) 2011, Red Hat Inc. or third-party contributors as\n+ * indicated by the @author tags or express copyright attribution\n+ * statements applied by the authors.  All third-party contributions are\n+ * distributed under license by Red Hat Inc.\n+ *\n+ * This copyrighted material is made available to anyone wishing to use, modify,\n+ * copy, or redistribute it subject to the terms and conditions of the GNU\n+ * Lesser General Public License, as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\n+ * for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this distribution; if not, write to:\n+ * Free Software Foundation, Inc.\n+ * 51 Franklin Street, Fifth Floor\n+ * Boston, MA  02110-1301  USA\n+ */\n+package org.hibernate.metamodel.binding;\n+import java.io.Serializable;\n+import java.util.Properties;\n+\n+/**\n+ * Placeholder for typedef information\n+ */\n+public class TypeDef implements Serializable {\n+\n+\tprivate String typeClass;\n+\tprivate Properties parameters;\n+\n+\tpublic TypeDef(String typeClass, Properties parameters) {\n+\t\tthis.typeClass = typeClass;\n+\t\tthis.parameters = parameters;\n+\t}\n+\n+\tpublic Properties getParameters() {\n+\t\treturn parameters;\n+\t}\n+\tpublic String getTypeClass() {\n+\t\treturn typeClass;\n+\t}\n+\n+}\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/domain/MetaAttribute.java b/hibernate-core/src/main/java/org/hibernate/metamodel/domain/MetaAttribute.java\nnew file mode 100644\nindex 0000000000..ce4664ec99\n--- /dev/null\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/domain/MetaAttribute.java\n@@ -0,0 +1,67 @@\n+/*\n+ * Hibernate, Relational Persistence for Idiomatic Java\n+ *\n+ * Copyright (c) 2011, Red Hat Inc. or third-party contributors as\n+ * indicated by the @author tags or express copyright attribution\n+ * statements applied by the authors.  All third-party contributions are\n+ * distributed under license by Red Hat Inc.\n+ *\n+ * This copyrighted material is made available to anyone wishing to use, modify,\n+ * copy, or redistribute it subject to the terms and conditions of the GNU\n+ * Lesser General Public License, as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\n+ * for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this distribution; if not, write to:\n+ * Free Software Foundation, Inc.\n+ * 51 Franklin Street, Fifth Floor\n+ * Boston, MA  02110-1301  USA\n+ */\n+package org.hibernate.metamodel.domain;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+\n+/**\n+ * A meta attribute is a named value or values.\n+ * @author Gavin King\n+ */\n+public class MetaAttribute implements Serializable {\n+\tprivate String name;\n+\tprivate java.util.List values = new ArrayList();\n+\n+\tpublic MetaAttribute(String name) {\n+\t\tthis.name = name;\n+\t}\n+\t\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\t\n+\n+\tpublic java.util.List getValues() {\n+\t\treturn Collections.unmodifiableList(values);\n+\t}\n+\n+\tpublic void addValue(String value) {\n+\t\tvalues.add(value);\n+\t}\n+\n+\tpublic String getValue() {\n+\t\tif ( values.size()!=1 ) {\n+\t\t\tthrow new IllegalStateException(\"no unique value\");\n+\t\t}\n+\t\treturn (String) values.get(0);\n+\t}\n+\n+\tpublic boolean isMultiValued() {\n+\t\treturn values.size()>1;\n+\t}\n+\n+\tpublic String toString() {\n+\t\treturn \"[\" + name + \"=\" + values + \"]\";\n+\t}\n+}\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/relational/AbstractAuxiliaryDatabaseObject.java b/hibernate-core/src/main/java/org/hibernate/metamodel/relational/AbstractAuxiliaryDatabaseObject.java\nnew file mode 100644\nindex 0000000000..b2b0d350bc\n--- /dev/null\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/relational/AbstractAuxiliaryDatabaseObject.java\n@@ -0,0 +1,64 @@\n+/*\n+ * Hibernate, Relational Persistence for Idiomatic Java\n+ *\n+ * Copyright (c) 2011, Red Hat Inc. or third-party contributors as\n+ * indicated by the @author tags or express copyright attribution\n+ * statements applied by the authors.  All third-party contributions are\n+ * distributed under license by Red Hat Inc.\n+ *\n+ * This copyrighted material is made available to anyone wishing to use, modify,\n+ * copy, or redistribute it subject to the terms and conditions of the GNU\n+ * Lesser General Public License, as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\n+ * for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this distribution; if not, write to:\n+ * Free Software Foundation, Inc.\n+ * 51 Franklin Street, Fifth Floor\n+ * Boston, MA  02110-1301  USA\n+ */\n+package org.hibernate.metamodel.relational;\n+\n+import java.util.HashSet;\n+\n+import org.hibernate.dialect.Dialect;\n+import org.hibernate.mapping.AuxiliaryDatabaseObject;\n+\n+/**\n+ * Convenience base class for {@link org.hibernate.mapping.AuxiliaryDatabaseObject}s.\n+ * <p/>\n+ * This implementation performs dialect scoping checks strictly based on\n+ * dialect name comparisons.  Custom implementations might want to do\n+ * instanceof-type checks.\n+ *\n+ * @author Steve Ebersole\n+ */\n+public abstract class AbstractAuxiliaryDatabaseObject implements AuxiliaryDatabaseObject {\n+\n+\tprivate final HashSet dialectScopes;\n+\n+\tprotected AbstractAuxiliaryDatabaseObject() {\n+\t\tthis.dialectScopes = new HashSet();\n+\t}\n+\n+\tprotected AbstractAuxiliaryDatabaseObject(HashSet dialectScopes) {\n+\t\tthis.dialectScopes = dialectScopes;\n+\t}\n+\n+\tpublic void addDialectScope(String dialectName) {\n+\t\tdialectScopes.add( dialectName );\n+\t}\n+\n+\tpublic HashSet getDialectScopes() {\n+\t\treturn dialectScopes;\n+\t}\n+\n+\tpublic boolean appliesToDialect(Dialect dialect) {\n+\t\t// empty means no scoping\n+\t\treturn dialectScopes.isEmpty() || dialectScopes.contains( dialect.getClass().getName() );\n+\t}\n+}\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/relational/AuxiliaryDatabaseObject.java b/hibernate-core/src/main/java/org/hibernate/metamodel/relational/AuxiliaryDatabaseObject.java\nnew file mode 100644\nindex 0000000000..a9e708946f\n--- /dev/null\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/relational/AuxiliaryDatabaseObject.java\n@@ -0,0 +1,54 @@\n+/*\n+ * Hibernate, Relational Persistence for Idiomatic Java\n+ *\n+ * Copyright (c) 2011, Red Hat Inc. or third-party contributors as\n+ * indicated by the @author tags or express copyright attribution\n+ * statements applied by the authors.  All third-party contributions are\n+ * distributed under license by Red Hat Inc.\n+ *\n+ * This copyrighted material is made available to anyone wishing to use, modify,\n+ * copy, or redistribute it subject to the terms and conditions of the GNU\n+ * Lesser General Public License, as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\n+ * for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this distribution; if not, write to:\n+ * Free Software Foundation, Inc.\n+ * 51 Franklin Street, Fifth Floor\n+ * Boston, MA  02110-1301  USA\n+ */\n+package org.hibernate.metamodel.relational;\n+\n+import java.io.Serializable;\n+\n+import org.hibernate.dialect.Dialect;\n+import org.hibernate.mapping.RelationalModel;\n+\n+/**\n+ * Auxiliary database objects (i.e., triggers, stored procedures, etc) defined\n+ * in the mappings.  Allows Hibernate to manage their lifecycle as part of\n+ * creating/dropping the schema.\n+ *\n+ * @author Steve Ebersole\n+ */\n+public interface AuxiliaryDatabaseObject extends RelationalModel, Serializable {\n+\t/**\n+\t * Add the given dialect name to the scope of dialects to which\n+\t * this database object applies.\n+\t *\n+\t * @param dialectName The name of a dialect.\n+\t */\n+\tvoid addDialectScope(String dialectName);\n+\n+\t/**\n+\t * Does this database object apply to the given dialect?\n+\t *\n+\t * @param dialect The dialect to check against.\n+\t * @return True if this database object does apply to the given dialect.\n+\t */\n+\tboolean appliesToDialect(Dialect dialect);\n+}\ndiff --git a/hibernate-core/src/main/java/org/hibernate/metamodel/source/hbm/AbstractEntityBinder.java b/hibernate-core/src/main/java/org/hibernate/metamodel/source/hbm/AbstractEntityBinder.java\nindex 5ab8ecefa9..da57659982 100644\n--- a/hibernate-core/src/main/java/org/hibernate/metamodel/source/hbm/AbstractEntityBinder.java\n+++ b/hibernate-core/src/main/java/org/hibernate/metamodel/source/hbm/AbstractEntityBinder.java\n@@ -23,6 +23,7 @@\n  */\n package org.hibernate.metamodel.source.hbm;\n \n+import java.sql.ResultSet;\n import java.util.Iterator;\n \n import org.dom4j.Attribute;\n@@ -31,6 +32,7 @@ import org.hibernate.EntityMode;\n import org.hibernate.MappingException;\n import org.hibernate.cfg.NamingStrategy;\n import org.hibernate.engine.Versioning;\n+import org.hibernate.engine.jdbc.batch.spi.Batch;\n import org.hibernate.internal.util.StringHelper;\n import org.hibernate.metamodel.binding.AttributeBinding;\n import org.hibernate.metamodel.binding.BagBinding;\n@@ -39,6 +41,7 @@ import org.hibernate.metamodel.binding.PluralAttributeBinding;\n import org.hibernate.metamodel.binding.SimpleAttributeBinding;\n import org.hibernate.metamodel.domain.Entity;\n import org.hibernate.metamodel.domain.Hierarchical;\n+import org.hibernate.metamodel.domain.PluralAttribute;\n import org.hibernate.metamodel.domain.PluralAttributeNature;\n import org.hibernate.metamodel.relational.Schema;\n import org.hibernate.metamodel.relational.Table;\n@@ -58,20 +61,17 @@ abstract class AbstractEntityBinder {\n \tprivate final HibernateMappingBinder hibernateMappingBinder;\n \tprivate final Schema.Name schemaName;\n \n-\tAbstractEntityBinder(HibernateMappingBinder hibernateMappingBinder, Element entityElement) {\n+\tAbstractEntityBinder(HibernateMappingBinder hibernateMappingBinder,\n+\t\t\t\t\t\t org.hibernate.metamodel.source.hbm.xml.mapping.Class entityClazz) {\n \t\tthis.hibernateMappingBinder = hibernateMappingBinder;\n-\n-\t\tfinal Attribute schemaAttribute = entityElement.attribute( \"schema\" );\n-\t\tString schemaName = ( schemaAttribute == null )\n-\t\t\t\t? hibernateMappingBinder.getDefaultSchemaName()\n-\t\t\t\t: schemaAttribute.getValue();\n-\n-\t\tfinal Attribute catalogAttribute = entityElement.attribute( \"catalog\" );\n-\t\tString catalogName = ( catalogAttribute == null )\n-\t\t\t\t? hibernateMappingBinder.getDefaultCatalogName()\n-\t\t\t\t: catalogAttribute.getValue();\n-\n-\t\tthis.schemaName = new Schema.Name( schemaName, catalogName );\n+\t\tthis.schemaName = new Schema.Name(\n+\t\t\t\t( entityClazz.getSchema() == null ?\n+\t\t\t\t\t\thibernateMappingBinder.getDefaultSchemaName() :\n+\t\t\t\t\t\tentityClazz.getSchema() ),\n+\t\t\t\t( entityClazz.getCatalog() == null ?\n+\t\t\t\t\t\thibernateMappingBinder.getDefaultCatalogName() :\n+\t\t\t\t\t\tentityClazz.getCatalog() )\n+\t\t);\n \t}\n \n \tprotected HibernateMappingBinder getHibernateMappingBinder() {\n@@ -93,23 +93,24 @@ abstract class AbstractEntityBinder {\n \t\treturn getMetadata().getNamingStrategy();\n \t}\n \n-\tprotected void basicEntityBinding(Element node, EntityBinding entityBinding, Hierarchical superType) {\n+\tprotected void basicEntityBinding(org.hibernate.metamodel.source.hbm.xml.mapping.Class entityClazz,\n+\t\t\t\t\t\t\t\t\t  EntityBinding entityBinding,\n+\t\t\t\t\t\t\t\t\t  Hierarchical superType) {\n \t\tentityBinding.fromHbmXml(\n \t\t\t\thibernateMappingBinder,\n-\t\t\t\tnode,\n-\t\t\t\tnew Entity( hibernateMappingBinder.extractEntityName( node ), superType )\n+\t\t\t\tentityClazz,\n+\t\t\t\tnew Entity( hibernateMappingBinder.extractEntityName( entityClazz ), superType )\n \t\t);\n \t\t// TODO: move this stuff out\n \t\t// transfer an explicitly defined lazy attribute\n-\t\tbindPojoRepresentation( node, entityBinding );\n-\t\tbindDom4jRepresentation( node, entityBinding );\n-\t\tbindMapRepresentation( node, entityBinding );\n+\t\tbindPojoRepresentation( entityClazz, entityBinding );\n+\t\tbindDom4jRepresentation( entityClazz, entityBinding );\n+\t\tbindMapRepresentation( entityClazz, entityBinding );\n \n \t\tfinal String entityName = entityBinding.getEntity().getName();\n-\t\tIterator itr = node.elementIterator( \"fetch-profile\" );\n-\t\twhile ( itr.hasNext() ) {\n-\t\t\tfinal Element profileElement = ( Element ) itr.next();\n-\t\t\thibernateMappingBinder.parseFetchProfile( profileElement, entityName );\n+\n+\t\tif ( entityClazz.getFetchProfile() != null ) {\n+\t\t\thibernateMappingBinder.parseFetchProfiles( entityClazz.getFetchProfile(), entityName );\n \t\t}\n \n \t\tgetMetadata().addImport( entityName, entityName );\n@@ -124,9 +125,10 @@ abstract class AbstractEntityBinder {\n \t\treturn hibernateMappingBinder.getDefaultAccess();\n \t}\n \n-\tprivate void bindPojoRepresentation(Element node, EntityBinding entityBinding) {\n-\t\tString className = hibernateMappingBinder.getClassName( node.attribute( \"name\" ) );\n-\t\tString proxyName = hibernateMappingBinder.getClassName( node.attribute( \"proxy\" ) );\n+\tprivate void bindPojoRepresentation(org.hibernate.metamodel.source.hbm.xml.mapping.Class entityClazz,\n+\t\t\t\t\t\t\t\t\t\tEntityBinding entityBinding) {\n+\t\tString className = hibernateMappingBinder.getClassName( entityClazz.getName() );\n+\t\tString proxyName = hibernateMappingBinder.getClassName( entityClazz.getProxy() );\n \n \t\tentityBinding.getEntity().getPojoEntitySpecifics().setClassName( className );\n \n@@ -138,29 +140,31 @@ abstract class AbstractEntityBinder {\n \t\t\tentityBinding.getEntity().getPojoEntitySpecifics().setProxyInterfaceName( className );\n \t\t}\n \n-\t\tElement tuplizer = locateTuplizerDefinition( node, EntityMode.POJO );\n+\t\torg.hibernate.metamodel.source.hbm.xml.mapping.Tuplizer tuplizer = locateTuplizerDefinition( entityClazz, EntityMode.POJO );\n \t\tif ( tuplizer != null ) {\n-\t\t\tentityBinding.getEntity().getPojoEntitySpecifics().setTuplizerClassName( tuplizer.attributeValue( \"class\" ) );\n+\t\t\tentityBinding.getEntity().getPojoEntitySpecifics().setTuplizerClassName( tuplizer.getClazz() );\n \t\t}\n \t}\n \n-\tprivate void bindDom4jRepresentation(Element node, EntityBinding entityBinding) {\n-\t\tString nodeName = node.attributeValue( \"node\" );\n+\tprivate void bindDom4jRepresentation(org.hibernate.metamodel.source.hbm.xml.mapping.Class entityClazz,\n+\t\t\t\t\t\t\t\t\t\t EntityBinding entityBinding) {\n+\t\tString nodeName = entityClazz.getNode();\n \t\tif ( nodeName == null ) {\n \t\t\tnodeName = StringHelper.unqualify( entityBinding.getEntity().getName() );\n \t\t}\n \t\tentityBinding.getEntity().getDom4jEntitySpecifics().setNodeName(nodeName);\n \n-\t\tElement tuplizer = locateTuplizerDefinition( node, EntityMode.DOM4J );\n+\t\torg.hibernate.metamodel.source.hbm.xml.mapping.Tuplizer tuplizer = locateTuplizerDefinition( entityClazz, EntityMode.DOM4J );\n \t\tif ( tuplizer != null ) {\n-\t\t\tentityBinding.getEntity().getDom4jEntitySpecifics().setTuplizerClassName( tuplizer.attributeValue( \"class\" ) );\n+\t\t\tentityBinding.getEntity().getDom4jEntitySpecifics().setTuplizerClassName( tuplizer.getClazz() );\n \t\t}\n \t}\n \n-\tprivate void bindMapRepresentation(Element node, EntityBinding entityBinding) {\n-\t\tElement tuplizer = locateTuplizerDefinition( node, EntityMode.MAP );\n+\tprivate void bindMapRepresentation(org.hibernate.metamodel.source.hbm.xml.mapping.Class entityClazz,\n+\t\t\t\t\t\t\t\t\t   EntityBinding entityBinding) {\n+\t\torg.hibernate.metamodel.source.hbm.xml.mapping.Tuplizer tuplizer = locateTuplizerDefinition( entityClazz, EntityMode.MAP );\n \t\tif ( tuplizer != null ) {\n-\t\t\tentityBinding.getEntity().getMapEntitySpecifics().setTuplizerClassName( tuplizer.attributeValue( \"class\" ) );\n+\t\t\tentityBinding.getEntity().getMapEntitySpecifics().setTuplizerClassName( tuplizer.getClazz() );\n \t\t}\n \t}\n \n@@ -172,12 +176,11 @@ abstract class AbstractEntityBinder {\n \t *\n \t * @return The tuplizer element, or null.\n \t */\n-\tprivate static Element locateTuplizerDefinition(Element container, EntityMode entityMode) {\n-\t\tIterator itr = container.elementIterator( \"tuplizer\" );\n-\t\twhile( itr.hasNext() ) {\n-\t\t\tfinal Element tuplizerElem = ( Element ) itr.next();\n-\t\t\tif ( entityMode.toString().equals( tuplizerElem.attributeValue( \"entity-mode\") ) ) {\n-\t\t\t\treturn tuplizerElem;\n+\tprivate static org.hibernate.metamodel.source.hbm.xml.mapping.Tuplizer locateTuplizerDefinition(org.hibernate.metamodel.source.hbm.xml.mapping.Class container,\n+\t\t\t\t\t\t\t\t\t\t\t\t\tEntityMode entityMode) {\n+\t\tfor ( org.hibernate.metamodel.source.hbm.xml.mapping.Tuplizer tuplizer : container.getTuplizer() ) {\n+\t\t\tif ( entityMode.toString().equals( tuplizer.getEntityMode() ) ) {\n+\t\t\t\treturn tuplizer;\n \t\t\t}\n \t\t}\n \t\treturn null;\n@@ -206,19 +209,18 @@ abstract class AbstractEntityBinder {\n \t}\n \n \tprotected String getClassTableName(\n-\t\t\tElement entityElement,\n+\t\t\torg.hibernate.metamodel.source.hbm.xml.mapping.Class entityClazz,\n \t\t\tEntityBinding entityBinding,\n \t\t\tTable denormalizedSuperTable) {\n \t\tfinal String entityName = entityBinding.getEntity().getName();\n-\t\tfinal Attribute tableNameNode = entityElement.attribute( \"table\" );\n \t\tString logicalTableName;\n \t\tString physicalTableName;\n-\t\tif ( tableNameNode == null ) {\n+\t\tif ( entityClazz.getTable() == null ) {\n \t\t\tlogicalTableName = StringHelper.unqualify( entityName );\n \t\t\tphysicalTableName = getHibernateXmlBinder().getMetadata().getNamingStrategy().classToTableName( entityName );\n \t\t}\n \t\telse {\n-\t\t\tlogicalTableName = tableNameNode.getValue();\n+\t\t\tlogicalTableName = entityClazz.getTable();\n \t\t\tphysicalTableName = getHibernateXmlBinder().getMetadata().getNamingStrategy().tableName( logicalTableName );\n \t\t}\n // todo : find out the purpose of these logical bindings\n@@ -226,25 +228,26 @@ abstract class AbstractEntityBinder {\n \t\treturn physicalTableName;\n \t}\n \n-\tprotected void buildAttributeBindings(Element entityElement, EntityBinding entityBinding) {\n+\tprotected void buildAttributeBindings(org.hibernate.metamodel.source.hbm.xml.mapping.Class entityClazz,\n+\t\t\t\t\t\t\t\t\t\t  EntityBinding entityBinding) {\n \t\t// null = UniqueKey (we are not binding a natural-id mapping)\n \t\t// true = mutable, by default properties are mutable\n \t\t// true = nullable, by default properties are nullable.\n-\t\tbuildAttributeBindings( entityElement, entityBinding, null, true, true );\n+\t\tbuildAttributeBindings( entityClazz, entityBinding, null, true, true );\n \t}\n \n \t/**\n \t * This form is essentially used to create natural-id mappings.  But the processing is the same, aside from these\n \t * extra parameterized values, so we encapsulate it here.\n \t *\n-\t * @param entityElement\n+\t * @param entityClazz\n \t * @param entityBinding\n \t * @param uniqueKey\n \t * @param mutable\n \t * @param nullable\n \t */\n \tprotected void buildAttributeBindings(\n-\t\t\tElement entityElement,\n+\t\t\torg.hibernate.metamodel.source.hbm.xml.mapping.Class entityClazz,\n \t\t\tEntityBinding entityBinding,\n \t\t\tUniqueKey uniqueKey,\n \t\t\tboolean mutable,\n@@ -255,69 +258,68 @@ abstract class AbstractEntityBinder {\n \t\tfinal TableSpecification tabe = entityBinding.getBaseTable();\n \n \t\tAttributeBinding attributeBinding = null;\n-\n-\t\tIterator iter = entityElement.elementIterator();\n-\t\twhile ( iter.hasNext() ) {\n-\t\t\tfinal Element subElement = (Element) iter.next();\n-\t\t\tfinal String subElementName = subElement.getName();\n-\t\t\tfinal String propertyName = subElement.attributeValue( \"name\" );\n-\n-\t\t\tif ( \"bag\".equals( subElementName ) ) {\n-\t\t\t\tBagBinding bagBinding = entityBinding.makeBagAttributeBinding( propertyName );\n-\t\t\t\tbindCollection( subElement, bagBinding, entityBinding, PluralAttributeNature.BAG, propertyName );\n-\t\t\t\thibernateMappingBinder.getHibernateXmlBinder().getMetadata().addCollection( bagBinding );\n-\t\t\t\tattributeBinding = bagBinding;\n+\t\tfor ( Object attribute : entityClazz.getPropertyOrManyToOneOrOneToOne() ) {\n+\t\t\tif ( org.hibernate.metamodel.source.hbm.xml.mapping.Bag.class.isInstance( attribute ) ) {\n+\t\t\t\torg.hibernate.metamodel.source.hbm.xml.mapping.Bag collection = org.hibernate.metamodel.source.hbm.xml.mapping.Bag.class.cast( attribute );\n+\t\t\t\tBagBinding collectionBinding = entityBinding.makeBagAttributeBinding( collection.getName() );\n+\t\t\t\tbindBag( collection, collectionBinding, entityBinding );\n+\t\t\t\thibernateMappingBinder.getHibernateXmlBinder().getMetadata().addCollection( collectionBinding );\n+\t\t\t\tattributeBinding = collectionBinding;\n \t\t\t}\n-\t\t\telse if ( \"idbag\".equals( subElementName ) ) {\n-\t\t\t\tBagBinding bagBinding = entityBinding.makeBagAttributeBinding( propertyName );\n-\t\t\t\tbindCollection( subElement, bagBinding, entityBinding, PluralAttributeNature.BAG, propertyName );\n-\t\t\t\thibernateMappingBinder.getHibernateXmlBinder().getMetadata().addCollection( bagBinding );\n-\t\t\t\tattributeBinding = bagBinding;\n+\t\t\telse if ( org.hibernate.metamodel.source.hbm.xml.mapping.Idbag.class.isInstance( attribute ) ) {\n+\t\t\t\torg.hibernate.metamodel.source.hbm.xml.mapping.Idbag collection = org.hibernate.metamodel.source.hbm.xml.mapping.Idbag.class.cast( attribute );\n+\t\t\t\t//BagBinding collectionBinding = entityBinding.makeBagAttributeBinding( collection.getName() );\n+\t\t\t\t//bindIdbag( collection, bagBinding, entityBinding, PluralAttributeNature.BAG, collection.getName() );\n \t\t\t\t// todo: handle identifier\n+\t\t\t\t//attributeBinding = collectionBinding;\n+\t\t\t\t//hibernateMappingBinder.getHibernateXmlBinder().getMetadata().addCollection( attributeBinding );\n \t\t\t}\n-\t\t\telse if ( \"set\".equals( subElementName ) ) {\n-\t\t\t\tBagBinding bagBinding = entityBinding.makeBagAttributeBinding( propertyName );\n-\t\t\t\tbindCollection( subElement, bagBinding, entityBinding, PluralAttributeNature.SET, propertyName );\n-\t\t\t\thibernateMappingBinder.getHibernateXmlBinder().getMetadata().addCollection( bagBinding );\n-\t\t\t\tattributeBinding = bagBinding;\n+\t\t\telse if ( org.hibernate.metamodel.source.hbm.xml.mapping.Set.class.isInstance( attribute ) ) {\n+\t\t\t\torg.hibernate.metamodel.source.hbm.xml.mapping.Set collection = org.hibernate.metamodel.source.hbm.xml.mapping.Set.class.cast( attribute );\n+\t\t\t\t//BagBinding collectionBinding = entityBinding.makeBagAttributeBinding( collection.getName() );\n+\t\t\t\t//bindSet( collection, collectionBinding, entityBinding, PluralAttributeNature.SET, collection.getName() );\n+\t\t\t\t//attributeBinding = collectionBinding;\n+\t\t\t\t//hibernateMappingBinder.getHibernateXmlBinder().getMetadata().addCollection( attributeBinding );\n \t\t\t}\n-\t\t\telse if ( \"list\".equals( subElementName ) ) {\n-\t\t\t\tBagBinding bagBinding = entityBinding.makeBagAttributeBinding( propertyName );\n-\t\t\t\tbindCollection( subElement, bagBinding, entityBinding, PluralAttributeNature.LIST, propertyName );\n-\t\t\t\thibernateMappingBinder.getHibernateXmlBinder().getMetadata().addCollection( bagBinding );\n-\t\t\t\tattributeBinding = bagBinding;\n+\t\t\telse if ( org.hibernate.metamodel.source.hbm.xml.mapping.List.class.isInstance( attribute ) ) {\n+\t\t\t\torg.hibernate.metamodel.source.hbm.xml.mapping.List collection = org.hibernate.metamodel.source.hbm.xml.mapping.List.class.cast( attribute );\n+\t\t\t\t//ListBinding collectionBinding = entityBinding.makeBagAttributeBinding( collection.getName() );\n+\t\t\t\t//bindList( collection, bagBinding, entityBinding, PluralAttributeNature.LIST, collection.getName() );\n \t\t\t\t// todo : handle list index\n+\t\t\t\t//attributeBinding = collectionBinding;\n+\t\t\t\t//hibernateMappingBinder.getHibernateXmlBinder().getMetadata().addCollection( attributeBinding );\n \t\t\t}\n-\t\t\telse if ( \"map\".equals( subElementName ) ) {\n-\t\t\t\tBagBinding bagBinding = entityBinding.makeBagAttributeBinding( propertyName );\n-\t\t\t\tbindCollection( subElement, bagBinding, entityBinding, PluralAttributeNature.MAP, propertyName );\n-\t\t\t\thibernateMappingBinder.getHibernateXmlBinder().getMetadata().addCollection( bagBinding );\n-\t\t\t\tattributeBinding = bagBinding;\n+\t\t\telse if ( org.hibernate.metamodel.source.hbm.xml.mapping.Map.class.isInstance( attribute ) ) {\n+\t\t\t\torg.hibernate.metamodel.source.hbm.xml.mapping.Map collection = org.hibernate.metamodel.source.hbm.xml.mapping.Map.class.cast( attribute );\n+\t\t\t\t//BagBinding bagBinding = entityBinding.makeBagAttributeBinding( collection.getName() );\n+\t\t\t\t//bindMap( collection, bagBinding, entityBinding, PluralAttributeNature.MAP, collection.getName() );\n \t\t\t\t// todo : handle map key\n+\t\t\t\t//hibernateMappingBinder.getHibernateXmlBinder().getMetadata().addCollection( attributeBinding );\n \t\t\t}\n-\t\t\telse if ( \"many-to-one\".equals( subElementName ) ) {\n+\t\t\telse if ( org.hibernate.metamodel.source.hbm.xml.mapping.ManyToOne.class.isInstance( attribute ) ) {\n // todo : implement\n //\t\t\t\tvalue = new ManyToOne( mappings, table );\n //\t\t\t\tbindManyToOne( subElement, (ManyToOne) value, propertyName, nullable, mappings );\n \t\t\t}\n-\t\t\telse if ( \"any\".equals( subElementName ) ) {\n+\t\t\telse if ( org.hibernate.metamodel.source.hbm.xml.mapping.Any.class.isInstance( attribute ) ) {\n // todo : implement\n //\t\t\t\tvalue = new Any( mappings, table );\n //\t\t\t\tbindAny( subElement, (Any) value, nullable, mappings );\n \t\t\t}\n-\t\t\telse if ( \"one-to-one\".equals( subElementName ) ) {\n+\t\t\telse if ( org.hibernate.metamodel.source.hbm.xml.mapping.OneToOne.class.isInstance( attribute ) ) {\n // todo : implement\n //\t\t\t\tvalue = new OneToOne( mappings, table, persistentClass );\n //\t\t\t\tbindOneToOne( subElement, (OneToOne) value, propertyName, true, mappings );\n \t\t\t}\n-\t\t\telse if ( \"property\".equals( subElementName ) ) {\n-\t\t\t\tSimpleAttributeBinding binding = entityBinding.makeSimpleAttributeBinding( propertyName );\n-\t\t\t\tbindSimpleAttribute( subElement, binding, entityBinding, propertyName );\n+\t\t\telse if ( org.hibernate.metamodel.source.hbm.xml.mapping.Property.class.isInstance( attribute ) ) {\n+\t\t\t\torg.hibernate.metamodel.source.hbm.xml.mapping.Property property = org.hibernate.metamodel.source.hbm.xml.mapping.Property.class.cast( attribute );\n+\t\t\t\tSimpleAttributeBinding binding = entityBinding.makeSimpleAttributeBinding( property.getName() );\n+\t\t\t\tbindSimpleAttribute( property, binding, entityBinding );\n \t\t\t\tattributeBinding = binding;\n \t\t\t}\n-\t\t\telse if ( \"component\".equals( subElementName )\n-\t\t\t\t\t|| \"dynamic-component\".equals( subElementName )\n-\t\t\t\t\t|| \"properties\".equals( subElementName ) ) {\n+\t\t\telse if ( org.hibernate.metamodel.source.hbm.xml.mapping.Component.class.isInstance( attribute )\n+\t\t\t\t\t|| org.hibernate.metamodel.source.hbm.xml.mapping.DynamicComponent.class.isInstance( attribute )\n+\t\t\t\t\t|| org.hibernate.metamodel.source.hbm.xml.mapping.Properties.class.isInstance( attribute ) ) {\n // todo : implement\n //\t\t\t\tString subpath = StringHelper.qualify( entityName, propertyName );\n //\t\t\t\tvalue = new Component( mappings, persistentClass );\n@@ -335,30 +337,36 @@ abstract class AbstractEntityBinder {\n //\t\t\t\t\t\tfalse\n //\t\t\t\t\t);\n \t\t\t}\n-\t\t\telse if ( \"join\".equals( subElementName ) ) {\n+\t\t}\n+\n+\t\t/*\n+Array\n+PrimitiveArray\n+*/\n+\t\tfor ( org.hibernate.metamodel.source.hbm.xml.mapping.Join join : entityClazz.getJoin() ) {\n // todo : implement\n-//\t\t\t\tJoin join = new Join();\n-//\t\t\t\tjoin.setPersistentClass( persistentClass );\n-//\t\t\t\tbindJoin( subElement, join, mappings, inheritedMetas );\n-//\t\t\t\tpersistentClass.addJoin( join );\n-\t\t\t}\n-\t\t\telse if ( \"subclass\".equals( subElementName ) ) {\n+//\t\t\tJoin join = new Join();\n+//\t\t\tjoin.setPersistentClass( persistentClass );\n+//\t\t\tbindJoin( subElement, join, mappings, inheritedMetas );\n+//\t\t\tpersistentClass.addJoin( join );\n+\t\t}\n+\t\tfor ( org.hibernate.metamodel.source.hbm.xml.mapping.Subclass subclass : entityClazz.getSubclass() ) {\n // todo : implement\n-//\t\t\t\thandleSubclass( persistentClass, mappings, subElement, inheritedMetas );\n-\t\t\t}\n-\t\t\telse if ( \"joined-subclass\".equals( subElementName ) ) {\n+//\t\t\thandleSubclass( persistentClass, mappings, subElement, inheritedMetas );\n+\t\t}\n+\t\tfor ( org.hibernate.metamodel.source.hbm.xml.mapping.JoinedSubclass subclass : entityClazz.getJoinedSubclass() ) {\n // todo : implement\n-//\t\t\t\thandleJoinedSubclass( persistentClass, mappings, subElement, inheritedMetas );\n-\t\t\t}\n-\t\t\telse if ( \"union-subclass\".equals( subElementName ) ) {\n+//\t\t\thandleJoinedSubclass( persistentClass, mappings, subElement, inheritedMetas );\n+\t\t}\n+\t\tfor ( org.hibernate.metamodel.source.hbm.xml.mapping.UnionSubclass subclass : entityClazz.getUnionSubclass() ) {\n // todo : implement\n-//\t\t\t\thandleUnionSubclass( persistentClass, mappings, subElement, inheritedMetas );\n-\t\t\t}\n-\t\t\telse if ( \"filter\".equals( subElementName ) ) {\n+//\t\t\thandleUnionSubclass( persistentClass, mappings, subElement, inheritedMetas );\n+\t\t}\n+\t\tfor ( org.hibernate.metamodel.source.hbm.xml.mapping.Filter filter : entityClazz.getFilter() ) {\n // todo : implement\n //\t\t\t\tparseFilter( subElement, entityBinding );\n-\t\t\t}\n-\t\t\telse if ( \"natural-id\".equals( subElementName ) ) {\n+\t\t}\n+\t\tif ( entityClazz.getNaturalId() != null ) {\n // todo : implement\n //\t\t\t\tUniqueKey uk = new UniqueKey();\n //\t\t\t\tuk.setName(\"_UniqueKey\");\n@@ -376,20 +384,25 @@ abstract class AbstractEntityBinder {\n //\t\t\t\t\t\ttrue\n //\t\t\t\t\t);\n //\t\t\t\ttable.addUniqueKey(uk);\n-\t\t\t}\n-\t\t\telse if ( \"query\".equals(subElementName) ) {\n+\t\t}\n+\t\tif ( entityClazz.getQueryOrSqlQuery() != null ) {\n+\t\t\tfor ( Object queryOrSqlQuery : entityClazz.getQueryOrSqlQuery() ) {\n+\t\t\t\tif ( org.hibernate.metamodel.source.hbm.xml.mapping.Query.class.isInstance( queryOrSqlQuery ) ) {\n // todo : implement\n //\t\t\t\tbindNamedQuery(subElement, persistentClass.getEntityName(), mappings);\n-\t\t\t}\n-\t\t\telse if ( \"sql-query\".equals(subElementName) ) {\n+\t\t\t\t}\n+\t\t\t\telse if ( org.hibernate.metamodel.source.hbm.xml.mapping.SqlQuery.class.isInstance( queryOrSqlQuery ) ) {\n // todo : implement\n-//\t\t\t\tbindNamedSQLQuery(subElement, persistentClass.getEntityName(), mappings);\n+//\t\t\tbindNamedSQLQuery(subElement, persistentClass.getEntityName(), mappings);\n+\t\t\t\t}\n \t\t\t}\n-\t\t\telse if ( \"resultset\".equals(subElementName) ) {\n+\t\t}\n+\t\tif ( entityClazz.getResultset() != null ) {\n+\t\t\tfor ( org.hibernate.metamodel.source.hbm.xml.mapping.Resultset resultSet : entityClazz.getResultset() ) {\n // todo : implement\n //\t\t\t\tbindResultSetMappingDefinition( subElement, persistentClass.getEntityName(), mappings );\n \t\t\t}\n-\n+\t\t}\n //\t\t\tif ( value != null ) {\n //\t\t\t\tProperty property = createProperty( value, propertyName, persistentClass\n //\t\t\t\t\t.getClassName(), subElement, mappings, inheritedMetas );\n@@ -399,10 +412,37 @@ abstract class AbstractEntityBinder {\n //\t\t\t\tif ( uniqueKey!=null ) uniqueKey.addColumns( property.getColumnIterator() );\n //\t\t\t}\n \n+\t}\n+\n+\tprotected void bindSimpleAttribute(org.hibernate.metamodel.source.hbm.xml.mapping.Id id,\n+\t\t\t\t\t\t\t\t\t   SimpleAttributeBinding attributeBinding,\n+\t\t\t\t\t\t\t\t\t   EntityBinding entityBinding,\n+\t\t\t\t\t\t\t\t\t   String attributeName) {\n+\t\tif ( attributeBinding.getAttribute() == null ) {\n+\t\t\tattributeBinding.initialize(\n+\t\t\t\t\tnew HbmSimpleAttributeDomainState(\n+\t\t\t\t\t\t\thibernateMappingBinder,\n+\t\t\t\t\t\t\tentityBinding.getEntity().getOrCreateSingularAttribute( attributeName ),\n+\t\t\t\t\t\t\tentityBinding.getMetaAttributes(),\n+\t\t\t\t\t\t\tid\n+\t\t\t\t\t)\n+\t\t\t);\n+\t\t}\n+\n+\t\tif ( attributeBinding.getValue() == null ) {\n+\t\t\t// relational model has not been bound yet\n+\t\t\t// boolean (true here) indicates that by default column names should be guessed\n+\t\t\tattributeBinding.initializeTupleValue(\n+\t\t\t\t\tnew HbmSimpleValueRelationalStateContainer(\n+\t\t\t\t\t\t\tgetHibernateMappingBinder(),\n+\t\t\t\t\t\t\ttrue,\n+\t\t\t\t\t\t\tid\n+\t\t\t\t\t)\n+\t\t\t);\n \t\t}\n \t}\n \n-\tprotected void bindSimpleAttribute(Element propertyElement,\n+\tprotected void bindSimpleAttribute(org.hibernate.metamodel.source.hbm.xml.mapping.Discriminator discriminator,\n \t\t\t\t\t\t\t\t\t   SimpleAttributeBinding attributeBinding,\n \t\t\t\t\t\t\t\t\t   EntityBinding entityBinding,\n \t\t\t\t\t\t\t\t\t   String attributeName) {\n@@ -410,8 +450,9 @@ abstract class AbstractEntityBinder {\n \t\t\tattributeBinding.initialize(\n \t\t\t\t\tnew HbmSimpleAttributeDomainState(\n \t\t\t\t\t\t\thibernateMappingBinder,\n-\t\t\t\t\t\t\tpropertyElement,\n-\t\t\t\t\t\t\tentityBinding.getEntity().getOrCreateSingularAttribute( attributeName )\n+\t\t\t\t\t\t\tentityBinding.getEntity().getOrCreateSingularAttribute( attributeName ),\n+\t\t\t\t\t\t\tentityBinding.getMetaAttributes(),\n+\t\t\t\t\t\t\tdiscriminator\n \t\t\t\t\t)\n \t\t\t);\n \t\t}\n@@ -422,26 +463,111 @@ abstract class AbstractEntityBinder {\n \t\t\tattributeBinding.initializeTupleValue(\n \t\t\t\t\tnew HbmSimpleValueRelationalStateContainer(\n \t\t\t\t\t\t\tgetHibernateMappingBinder(),\n-\t\t\t\t\t\t\tpropertyElement,\n-\t\t\t\t\t\t\ttrue\n+\t\t\t\t\t\t\ttrue,\n+\t\t\t\t\t\t\tdiscriminator\n \t\t\t\t\t)\n \t\t\t);\n \t\t}\n \t}\n \n-\tprotected void bindCollection(\n-\t\t\tElement collectionNode,\n+\tprotected void bindSimpleAttribute(org.hibernate.metamodel.source.hbm.xml.mapping.Version version,\n+\t\t\t\t\t\t\t\t\t   SimpleAttributeBinding attributeBinding,\n+\t\t\t\t\t\t\t\t\t   EntityBinding entityBinding,\n+\t\t\t\t\t\t\t\t\t   String attributeName) {\n+\t\tif ( attributeBinding.getAttribute() == null ) {\n+\t\t\tattributeBinding.initialize(\n+\t\t\t\t\tnew HbmSimpleAttributeDomainState(\n+\t\t\t\t\t\t\thibernateMappingBinder,\n+\t\t\t\t\t\t\tentityBinding.getEntity().getOrCreateSingularAttribute( attributeName ),\n+\t\t\t\t\t\t\tentityBinding.getMetaAttributes(),\n+\t\t\t\t\t\t\tversion\n+\t\t\t\t\t)\n+\t\t\t);\n+\t\t}\n+\n+\t\tif ( attributeBinding.getValue() == null ) {\n+\t\t\t//",
    "Add index . data_path setting .": "diff --git a/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java b/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java\nindex 432891622d4..bd1aaba4a46 100644\n--- a/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java\n+++ b/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java\n@@ -48,9 +48,9 @@ import java.util.Set;\n \n import static com.google.common.collect.Maps.newHashMap;\n import static org.elasticsearch.action.ValidateActions.addValidationError;\n+import static org.elasticsearch.common.settings.ImmutableSettings.Builder.EMPTY_SETTINGS;\n import static org.elasticsearch.common.settings.ImmutableSettings.readSettingsFromStream;\n import static org.elasticsearch.common.settings.ImmutableSettings.writeSettingsToStream;\n-import static org.elasticsearch.common.settings.ImmutableSettings.Builder.EMPTY_SETTINGS;\n \n /**\n  * A request to create an index. Best created with {@link org.elasticsearch.client.Requests#createIndexRequest(String)}.\ndiff --git a/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java\nindex 286641c6648..1e1cc5cb232 100644\n--- a/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java\n+++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java\n@@ -167,6 +167,7 @@ public class IndexMetaData {\n     public static final String SETTING_UUID = \"index.uuid\";\n     public static final String SETTING_LEGACY_ROUTING_HASH_FUNCTION = \"index.legacy.routing.hash.type\";\n     public static final String SETTING_LEGACY_ROUTING_USE_TYPE = \"index.legacy.routing.use_type\";\n+    public static final String SETTING_DATA_PATH = \"index.data_path\";\n     public static final String INDEX_UUID_NA_VALUE = \"_na_\";\n \n     // hard-coded hash function as of 2.0\ndiff --git a/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java\nindex cc89db535fa..4edbe17f16b 100644\n--- a/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java\n+++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java\n@@ -26,6 +26,7 @@ import com.google.common.collect.Lists;\n import com.google.common.collect.Maps;\n import org.apache.lucene.util.CollectionUtil;\n import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.ElasticsearchIllegalArgumentException;\n import org.elasticsearch.Version;\n import org.elasticsearch.action.ActionListener;\n import org.elasticsearch.action.ActionRunnable;\n@@ -57,6 +58,7 @@ import org.elasticsearch.common.xcontent.XContentFactory;\n import org.elasticsearch.common.xcontent.XContentHelper;\n import org.elasticsearch.common.xcontent.XContentParser;\n import org.elasticsearch.env.Environment;\n+import org.elasticsearch.env.NodeEnvironment;\n import org.elasticsearch.index.Index;\n import org.elasticsearch.index.mapper.DocumentMapper;\n import org.elasticsearch.index.mapper.MapperParsingException;\n@@ -64,6 +66,7 @@ import org.elasticsearch.index.mapper.MapperService;\n import org.elasticsearch.index.query.IndexQueryParserService;\n import org.elasticsearch.index.IndexService;\n import org.elasticsearch.indices.IndexAlreadyExistsException;\n+import org.elasticsearch.indices.IndexCreationException;\n import org.elasticsearch.indices.IndicesService;\n import org.elasticsearch.indices.InvalidIndexNameException;\n import org.elasticsearch.river.RiverIndexName;\n@@ -101,11 +104,13 @@ public class MetaDataCreateIndexService extends AbstractComponent {\n     private final String riverIndexName;\n     private final AliasValidator aliasValidator;\n     private final IndexTemplateFilter indexTemplateFilter;\n+    private final NodeEnvironment nodeEnv;\n \n     @Inject\n-    public MetaDataCreateIndexService(Settings settings, Environment environment, ThreadPool threadPool, ClusterService clusterService, IndicesService indicesService,\n-                                      AllocationService allocationService, MetaDataService metaDataService, Version version, @RiverIndexName String riverIndexName,\n-                                      AliasValidator aliasValidator, Set<IndexTemplateFilter> indexTemplateFilters) {\n+    public MetaDataCreateIndexService(Settings settings, Environment environment, ThreadPool threadPool, ClusterService clusterService,\n+                                      IndicesService indicesService, AllocationService allocationService, MetaDataService metaDataService,\n+                                      Version version, @RiverIndexName String riverIndexName, AliasValidator aliasValidator,\n+                                      Set<IndexTemplateFilter> indexTemplateFilters, NodeEnvironment nodeEnv) {\n         super(settings);\n         this.environment = environment;\n         this.threadPool = threadPool;\n@@ -116,6 +121,7 @@ public class MetaDataCreateIndexService extends AbstractComponent {\n         this.version = version;\n         this.riverIndexName = riverIndexName;\n         this.aliasValidator = aliasValidator;\n+        this.nodeEnv = nodeEnv;\n \n         if (indexTemplateFilters.isEmpty()) {\n             this.indexTemplateFilter = DEFAULT_INDEX_TEMPLATE_FILTER;\n@@ -554,6 +560,11 @@ public class MetaDataCreateIndexService extends AbstractComponent {\n \n     private void validate(CreateIndexClusterStateUpdateRequest request, ClusterState state) throws ElasticsearchException {\n         validateIndexName(request.index(), state);\n+        String customPath = request.settings().get(IndexMetaData.SETTING_DATA_PATH, null);\n+        if (customPath != null && nodeEnv.isCustomPathsEnabled() == false) {\n+            throw new IndexCreationException(new Index(request.index()),\n+                    new ElasticsearchIllegalArgumentException(\"custom data_paths for indices is disabled\"));\n+        }\n     }\n \n     private static class DefaultIndexTemplateFilter implements IndexTemplateFilter {\ndiff --git a/src/main/java/org/elasticsearch/env/NodeEnvironment.java b/src/main/java/org/elasticsearch/env/NodeEnvironment.java\nindex 237ead4fc56..3697127d85a 100644\n--- a/src/main/java/org/elasticsearch/env/NodeEnvironment.java\n+++ b/src/main/java/org/elasticsearch/env/NodeEnvironment.java\n@@ -24,14 +24,19 @@ import com.google.common.collect.Sets;\n import com.google.common.primitives.Ints;\n import org.apache.lucene.store.*;\n import org.apache.lucene.util.IOUtils;\n+import org.elasticsearch.ElasticsearchIllegalArgumentException;\n import org.elasticsearch.ElasticsearchIllegalStateException;\n+import org.elasticsearch.cluster.metadata.IndexMetaData;\n import org.elasticsearch.cluster.node.DiscoveryNode;\n import org.elasticsearch.common.Nullable;\n import org.elasticsearch.common.component.AbstractComponent;\n import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.common.io.FileSystemUtils;\n+import org.elasticsearch.common.settings.ImmutableSettings;\n import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.common.unit.ByteSizeValue;\n import org.elasticsearch.index.Index;\n+import org.elasticsearch.index.settings.IndexSettings;\n import org.elasticsearch.index.shard.ShardId;\n \n import java.io.Closeable;\n@@ -52,15 +57,30 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n     /* ${data.paths}/nodes/{node.id}/indices */\n     private final Path[] nodeIndicesPaths;\n     private final Lock[] locks;\n+    private final boolean addNodeId;\n \n     private final int localNodeId;\n     private final AtomicBoolean closed = new AtomicBoolean(false);\n     private final Map<ShardId, InternalShardLock> shardLocks = new HashMap<>();\n \n+    private final boolean customPathsEnabled;\n+\n+    // Setting to automatically append node id to custom data paths\n+    public static final String ADD_NODE_ID_TO_CUSTOM_PATH = \"node.add_id_to_custom_path\";\n+    // Setting to enable custom index.data_path setting for new indices\n+    public static final String SETTING_CUSTOM_DATA_PATH_ENABLED = \"node.enable_custom_paths\";\n+\n+    public static final String NODES_FOLDER = \"nodes\";\n+    public static final String INDICES_FOLDER = \"indices\";\n+    public static final String NODE_LOCK_FILENAME = \"node.lock\";\n+\n     @Inject\n     public NodeEnvironment(Settings settings, Environment environment) throws IOException {\n         super(settings);\n \n+        this.addNodeId = settings.getAsBoolean(ADD_NODE_ID_TO_CUSTOM_PATH, true);\n+        this.customPathsEnabled = settings.getAsBoolean(SETTING_CUSTOM_DATA_PATH_ENABLED, false);\n+\n         if (!DiscoveryNode.nodeRequiresLocalStorage(settings)) {\n             nodePaths = null;\n             nodeIndicesPaths = null;\n@@ -76,14 +96,14 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n         int maxLocalStorageNodes = settings.getAsInt(\"node.max_local_storage_nodes\", 50);\n         for (int possibleLockId = 0; possibleLockId < maxLocalStorageNodes; possibleLockId++) {\n             for (int dirIndex = 0; dirIndex < environment.dataWithClusterFiles().length; dirIndex++) {\n-                Path dir = environment.dataWithClusterFiles()[dirIndex].resolve(Paths.get(\"nodes\", Integer.toString(possibleLockId)));\n+                Path dir = environment.dataWithClusterFiles()[dirIndex].resolve(Paths.get(NODES_FOLDER, Integer.toString(possibleLockId)));\n                 if (Files.exists(dir) == false) {\n                     Files.createDirectories(dir);\n                 }\n                 \n                 try (Directory luceneDir = FSDirectory.open(dir, NativeFSLockFactory.INSTANCE)) {\n                     logger.trace(\"obtaining node lock on {} ...\", dir.toAbsolutePath());\n-                    Lock tmpLock = luceneDir.makeLock(\"node.lock\");\n+                    Lock tmpLock = luceneDir.makeLock(NODE_LOCK_FILENAME);\n                     boolean obtained = tmpLock.obtain();\n                     if (obtained) {\n                         locks[dirIndex] = tmpLock;\n@@ -117,7 +137,8 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n             }\n         }\n         if (locks[0] == null) {\n-            throw new ElasticsearchIllegalStateException(\"Failed to obtain node lock, is the following location writable?: \" + Arrays.toString(environment.dataWithClusterFiles()), lastException);\n+            throw new ElasticsearchIllegalStateException(\"Failed to obtain node lock, is the following location writable?: \"\n+                    + Arrays.toString(environment.dataWithClusterFiles()), lastException);\n         }\n \n         this.localNodeId = localNodeId;\n@@ -131,14 +152,20 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n         if (logger.isTraceEnabled()) {\n             StringBuilder sb = new StringBuilder(\"node data locations details:\\n\");\n             for (Path file : nodePaths) {\n-                sb.append(\" -> \").append(file.toAbsolutePath()).append(\", free_space [\").append(new ByteSizeValue(Files.getFileStore(file).getUnallocatedSpace())).append(\"], usable_space [\").append(new ByteSizeValue(Files.getFileStore(file).getUsableSpace())).append(\"]\\n\");\n+                sb.append(\" -> \")\n+                        .append(file.toAbsolutePath())\n+                        .append(\", free_space [\")\n+                        .append(new ByteSizeValue(Files.getFileStore(file).getUnallocatedSpace()))\n+                        .append(\"], usable_space [\")\n+                        .append(new ByteSizeValue(Files.getFileStore(file).getUsableSpace()))\n+                        .append(\"]\\n\");\n             }\n             logger.trace(sb.toString());\n         }\n \n         this.nodeIndicesPaths = new Path[nodePaths.length];\n         for (int i = 0; i < nodePaths.length; i++) {\n-            nodeIndicesPaths[i] = nodePaths[i].resolve(\"indices\");\n+            nodeIndicesPaths[i] = nodePaths[i].resolve(INDICES_FOLDER);\n         }\n     }\n \n@@ -150,10 +177,20 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n      * @param shardId the id of the shard to delete to delete\n      * @throws IOException if an IOException occurs\n      */\n-    public void deleteShardDirectorySafe(ShardId shardId) throws IOException {\n+    public void deleteShardDirectorySafe(ShardId shardId, @IndexSettings Settings indexSettings) throws IOException {\n+        // This is to ensure someone doesn't use ImmutableSettings.EMPTY\n+        assert indexSettings != ImmutableSettings.EMPTY;\n         final Path[] paths = shardPaths(shardId);\n+        logger.trace(\"deleting shard {} directory, paths: [{}]\", shardId, paths);\n         try (Closeable lock = shardLock(shardId)) {\n             IOUtils.rm(paths);\n+            if (hasCustomDataPath(indexSettings)) {\n+                Path customLocation = resolveCustomLocation(indexSettings, shardId);\n+                logger.trace(\"deleting custom shard {} directory [{}]\", shardId, customLocation);\n+                IOUtils.rm(customLocation);\n+            }\n+            logger.trace(\"deleted shard {} directory, paths: [{}]\", shardId, paths);\n+            assert FileSystemUtils.exists(paths) == false;\n         }\n     }\n \n@@ -166,21 +203,25 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n      * @param lockTimeoutMS how long to wait for acquiring the indices shard locks\n      * @throws Exception if any of the shards data directories can't be locked or deleted\n      */\n-    public void deleteIndexDirectorySafe(Index index, long lockTimeoutMS) throws IOException {\n+    public void deleteIndexDirectorySafe(Index index, long lockTimeoutMS, @IndexSettings Settings indexSettings) throws IOException {\n+        // This is to ensure someone doesn't use ImmutableSettings.EMPTY\n+        assert indexSettings != ImmutableSettings.EMPTY;\n         final List<ShardLock> locks = lockAllForIndex(index, lockTimeoutMS);\n         try {\n-            final Path[] indexPaths = new Path[nodeIndicesPaths.length];\n-            for (int i = 0; i < indexPaths.length; i++) {\n-                indexPaths[i] = nodeIndicesPaths[i].resolve(index.name());\n-            }\n+            final Path[] indexPaths = indexPaths(index);\n+            logger.trace(\"deleting index {} directory, paths({}): [{}]\", index, indexPaths.length, indexPaths);\n             IOUtils.rm(indexPaths);\n+            if (hasCustomDataPath(indexSettings)) {\n+                Path customLocation = resolveCustomLocation(indexSettings, index.name());\n+                logger.trace(\"deleting custom index {} directory [{}]\", index, customLocation);\n+                IOUtils.rm(customLocation);\n+            }\n         } finally {\n             IOUtils.closeWhileHandlingException(locks);\n         }\n     }\n \n \n-\n     /**\n      * Tries to lock all local shards for the given index. If any of the shard locks can't be acquired\n      * an {@link LockObtainFailedException} is thrown and all previously acquired locks are released.\n@@ -192,7 +233,8 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n      */\n     public List<ShardLock> lockAllForIndex(Index index, long lockTimeoutMS) throws IOException {\n         Set<ShardId> allShardIds = findAllShardIds(index);\n-        List<ShardLock> allLocks = new ArrayList<>();\n+        logger.trace(\"locking all shards for index {} - [{}]\", index, allShardIds);\n+        List<ShardLock> allLocks = new ArrayList<>(allShardIds.size());\n         boolean success = false;\n         long startTime = System.currentTimeMillis();\n         try {\n@@ -203,6 +245,7 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n             success = true;\n         } finally {\n             if (success == false) {\n+                logger.trace(\"unable to lock all shards for index {}\", index);\n                 IOUtils.closeWhileHandlingException(allLocks);\n             }\n         }\n@@ -236,6 +279,7 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n      * @throws IOException if an IOException occurs.\n      */\n     public ShardLock shardLock(final ShardId id, long lockTimeoutMS) throws IOException {\n+        logger.trace(\"acquiring node shardlock on [{}], timeout [{}]\", id, lockTimeoutMS);\n         final InternalShardLock shardLock;\n         final boolean acquired;\n         synchronized (shardLocks) {\n@@ -260,10 +304,12 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n                 }\n             }\n         }\n+        logger.trace(\"successfully acquired shardlock for [{}]\", id);\n         return new ShardLock(id) { // new instance prevents double closing\n             @Override\n             protected void closeInternal() {\n                 shardLock.release();\n+                logger.trace(\"released shard lock for [{}]\", id);\n             }\n         };\n     }\n@@ -309,7 +355,10 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n         private void decWaitCount() {\n             synchronized (shardLocks) {\n                 assert waitCount > 0 : \"waitCount is \" + waitCount + \" but should be > 0\";\n-                if (--waitCount == 0) {\n+                --waitCount;\n+                logger.trace(\"shard lock wait count for [{}] is now [{}]\", shardId, waitCount);\n+                if (waitCount == 0) {\n+                    logger.trace(\"last shard lock wait decremented, removing lock for [{}]\", shardId);\n                     InternalShardLock remove = shardLocks.remove(shardId);\n                     assert remove != null : \"Removed lock was null\";\n                 }\n@@ -349,7 +398,7 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n     }\n \n     /**\n-     * Returns all data paths for the given index.\n+     * Returns all data paths excluding custom index paths.\n      */\n     public Path[] indexPaths(Index index) {\n         assert assertEnvIsLocked();\n@@ -361,14 +410,30 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n     }\n \n     /**\n-     * Returns all data paths for the given shards ID\n+     * Returns all paths where lucene data will be stored, if a index.data_path\n+     * setting is present, will return the custom data path to be used\n+     */\n+    public Path[] shardDataPaths(ShardId shardId, @IndexSettings Settings indexSettings) {\n+        assert indexSettings != ImmutableSettings.EMPTY;\n+        assert assertEnvIsLocked();\n+        if (hasCustomDataPath(indexSettings)) {\n+            return new Path[] {resolveCustomLocation(indexSettings, shardId)};\n+        } else {\n+            return shardPaths(shardId);\n+        }\n+    }\n+\n+    /**\n+     * Returns all shard paths excluding custom shard path\n      */\n     public Path[] shardPaths(ShardId shardId) {\n         assert assertEnvIsLocked();\n         final Path[] nodePaths = nodeDataPaths();\n         final Path[] shardLocations = new Path[nodePaths.length];\n         for (int i = 0; i < nodePaths.length; i++) {\n-            shardLocations[i] = nodePaths[i].resolve(Paths.get(\"indices\", shardId.index().name(), Integer.toString(shardId.id())));\n+            shardLocations[i] = nodePaths[i].resolve(Paths.get(INDICES_FOLDER,\n+                    shardId.index().name(),\n+                    Integer.toString(shardId.id())));\n         }\n         return shardLocations;\n     }\n@@ -395,14 +460,14 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n     }\n \n     /**\n-     * Tries to find all allocated shards for the given index or for all indices iff the given index is <code>null</code>\n+     * Tries to find all allocated shards for the given index or for all indices iff the given index is {@code null}\n      * on the current node. NOTE: This methods is prone to race-conditions on the filesystem layer since it might not\n      * see directories created concurrently or while it's traversing.\n-     * @param index the index to filter shards for or <code>null</code> if all shards for all indices should be listed\n+     * @param index the index to filter shards for or {@code null} if all shards for all indices should be listed\n      * @return a set of shard IDs\n      * @throws IOException if an IOException occurs\n      */\n-    public Set<ShardId> findAllShardIds(@Nullable final Index index) throws IOException {\n+    public Set<ShardId> findAllShardIds(final Index index) throws IOException {\n         if (nodePaths == null || locks == null) {\n             throw new ElasticsearchIllegalStateException(\"node is not configured to store local location\");\n         }\n@@ -435,7 +500,8 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n                     if (Files.exists(shardPath) && Files.isDirectory(shardPath)) {\n                         Integer shardId = Ints.tryParse(shardPath.getFileName().toString());\n                         if (shardId != null) {\n-                            shardIds.add(new ShardId(currentIndex, shardId));\n+                            ShardId id = new ShardId(currentIndex, shardId);\n+                            shardIds.add(id);\n                         }\n                     }\n                 }\n@@ -500,7 +566,9 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n             try {\n                 Files.move(src, target, StandardCopyOption.ATOMIC_MOVE);\n             } catch (AtomicMoveNotSupportedException ex) {\n-                throw new ElasticsearchIllegalStateException(\"atomic_move is not supported by the filesystem on path [\" + directory + \"] atomic_move is required for elasticsearch to work correctly.\", ex);\n+                throw new ElasticsearchIllegalStateException(\"atomic_move is not supported by the filesystem on path [\"\n+                        + directory\n+                        + \"] atomic_move is required for elasticsearch to work correctly.\", ex);\n             } finally {\n                 Files.deleteIfExists(src);\n                 Files.deleteIfExists(target);\n@@ -512,4 +580,63 @@ public class NodeEnvironment extends AbstractComponent implements Closeable{\n         return settings;\n     }\n \n+    /** return true if custom",
    "Add back access to backing node to symbol table .": "diff --git a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/BoundToNode.java b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/BoundToNode.java\nindex 77bfb733ec..bdccb0c02e 100644\n--- a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/BoundToNode.java\n+++ b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/BoundToNode.java\n@@ -5,7 +5,9 @@\n \n package net.sourceforge.pmd.lang.java.symbols;\n \n-import net.sourceforge.pmd.lang.ast.Node;\n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n+import net.sourceforge.pmd.lang.java.ast.JavaNode;\n \n \n /**\n@@ -16,6 +18,11 @@ import net.sourceforge.pmd.lang.ast.Node;\n  *\n  * @since 7.0.0\n  */\n-interface BoundToNode<N extends Node> extends JElementSymbol {\n+interface BoundToNode<N extends JavaNode> extends JElementSymbol {\n+\n \n+    @Override\n+    default @Nullable N tryGetNode() {\n+        return null;\n+    }\n }\ndiff --git a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/JElementSymbol.java b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/JElementSymbol.java\nindex e92493b762..58d1ff627b 100644\n--- a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/JElementSymbol.java\n+++ b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/JElementSymbol.java\n@@ -5,8 +5,12 @@\n \n package net.sourceforge.pmd.lang.java.symbols;\n \n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n import net.sourceforge.pmd.annotation.Experimental;\n import net.sourceforge.pmd.annotation.InternalApi;\n+import net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration;\n+import net.sourceforge.pmd.lang.java.ast.JavaNode;\n import net.sourceforge.pmd.lang.java.types.TypeSystem;\n \n \n@@ -40,6 +44,15 @@ public interface JElementSymbol {\n      */\n     TypeSystem getTypeSystem();\n \n+    /**\n+     * Returns the node that declares this symbol. Eg for {@link JMethodSymbol},\n+     * it's an {@link ASTMethodDeclaration}. Will only return non-null\n+     * if the symbol is declared in the file currently being analysed.\n+     */\n+    default @Nullable JavaNode tryGetNode() {\n+        return null;\n+    }\n+\n     /**\n      * Two symbols representing the same program element should be equal.\n      * So eg two {@link JClassSymbol}, even if their implementation class\ndiff --git a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/internal/ast/AbstractAstBackedSymbol.java b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/internal/ast/AbstractAstBackedSymbol.java\nindex d4b1d07133..eb971226b6 100644\n--- a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/internal/ast/AbstractAstBackedSymbol.java\n+++ b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/internal/ast/AbstractAstBackedSymbol.java\n@@ -4,6 +4,8 @@\n \n package net.sourceforge.pmd.lang.java.symbols.internal.ast;\n \n+import org.checkerframework.checker.nullness.qual.NonNull;\n+\n import net.sourceforge.pmd.lang.java.ast.InternalApiBridge;\n import net.sourceforge.pmd.lang.java.ast.SymbolDeclaratorNode;\n import net.sourceforge.pmd.lang.java.symbols.JElementSymbol;\n@@ -30,6 +32,10 @@ abstract class AbstractAstBackedSymbol<T extends SymbolDeclaratorNode> implement\n         return node.getTypeSystem();\n     }\n \n+    @Override\n+    public @NonNull T tryGetNode() {\n+        return node;\n+    }\n \n     @Override\n     public String toString() {",
    "Remove dependencies on Servlet": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/ApplicationConfig.java b/modules/cpr/src/main/java/org/atmosphere/cpr/ApplicationConfig.java\nindex ade09b8e0..ab432999c 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/ApplicationConfig.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/ApplicationConfig.java\n@@ -131,11 +131,11 @@ public interface ApplicationConfig {\n     /**\n      * A request attribute used to tell {@link AsyncSupport} implementation to keep alive the connection or not. Default is to delegate the talk to the underlying WebServer.\n      */\n-    String RESUME_AND_KEEPALIVE = AtmosphereServlet.class.getName() + \".resumeAndKeepAlive\";\n+    String RESUME_AND_KEEPALIVE = \"org.atmosphere.cpr.AtmosphereServlet.resumeAndKeepAlive\";\n     /**\n      * A request attribute telling a {@link AsyncSupport} if the AtmosphereResource was resumed on timeout or by an application. This attribute is for WebServer that doesn't support times out (like Jetty 6)\n      */\n-    String RESUMED_ON_TIMEOUT = AtmosphereServlet.class.getName() + \".resumedOnTimeout\";\n+    String RESUMED_ON_TIMEOUT = \"org.atmosphere.cpr.AtmosphereServlet.resumedOnTimeout\";\n     /**\n      * Disable invoking {@link org.atmosphere.cpr.AtmosphereHandler#onStateChange(org.atmosphere.cpr.AtmosphereResourceEvent)} when the connection times out or get cancelled\n      */",
    "Remove STRESS_TEST_MODE flag": "diff --git a/src/main/java/bisq/desktop/main/MainView.java b/src/main/java/bisq/desktop/main/MainView.java\nindex b50de56dd9..386fa19e8f 100644\n--- a/src/main/java/bisq/desktop/main/MainView.java\n+++ b/src/main/java/bisq/desktop/main/MainView.java\n@@ -47,7 +47,6 @@ import bisq.core.locale.Res;\n \n import bisq.common.Timer;\n import bisq.common.UserThread;\n-import bisq.common.app.DevEnv;\n import bisq.common.app.Version;\n import bisq.common.util.Tuple2;\n import bisq.common.util.Utilities;\n@@ -103,26 +102,22 @@ public class MainView extends InitializableView<StackPane, MainViewModel> {\n \n     @SuppressWarnings(\"PointlessBooleanExpression\")\n     public static void blur() {\n-        if (!DevEnv.STRESS_TEST_MODE)\n-            transitions.blur(MainView.rootContainer);\n+        transitions.blur(MainView.rootContainer);\n     }\n \n     @SuppressWarnings(\"PointlessBooleanExpression\")\n     public static void blurLight() {\n-        if (!DevEnv.STRESS_TEST_MODE)\n-            transitions.blur(MainView.rootContainer, Transitions.DEFAULT_DURATION, -0.1, false, 5);\n+        transitions.blur(MainView.rootContainer, Transitions.DEFAULT_DURATION, -0.1, false, 5);\n     }\n \n     @SuppressWarnings(\"PointlessBooleanExpression\")\n     public static void blurUltraLight() {\n-        if (!DevEnv.STRESS_TEST_MODE)\n-            transitions.blur(MainView.rootContainer, Transitions.DEFAULT_DURATION, -0.1, false, 2);\n+        transitions.blur(MainView.rootContainer, Transitions.DEFAULT_DURATION, -0.1, false, 2);\n     }\n \n     @SuppressWarnings(\"PointlessBooleanExpression\")\n     public static void darken() {\n-        if (!DevEnv.STRESS_TEST_MODE)\n-            transitions.darken(MainView.rootContainer, Transitions.DEFAULT_DURATION, false);\n+        transitions.darken(MainView.rootContainer, Transitions.DEFAULT_DURATION, false);\n     }\n \n     public static void removeEffect() {\ndiff --git a/src/main/java/bisq/desktop/main/MainViewModel.java b/src/main/java/bisq/desktop/main/MainViewModel.java\nindex 29b157c49e..6c43fd513f 100644\n--- a/src/main/java/bisq/desktop/main/MainViewModel.java\n+++ b/src/main/java/bisq/desktop/main/MainViewModel.java\n@@ -181,7 +181,7 @@ public class MainViewModel implements ViewModel {\n     // BTC network\n     final StringProperty btcInfo = new SimpleStringProperty(Res.get(\"mainView.footer.btcInfo.initializing\"));\n     @SuppressWarnings(\"ConstantConditions\")\n-    final DoubleProperty btcSyncProgress = new SimpleDoubleProperty(DevEnv.STRESS_TEST_MODE ? 0 : -1);\n+    final DoubleProperty btcSyncProgress = new SimpleDoubleProperty(-1);\n     final StringProperty walletServiceErrorMsg = new SimpleStringProperty();\n     final StringProperty btcSplashSyncIconId = new SimpleStringProperty();\n     private final StringProperty marketPriceCurrencyCode = new SimpleStringProperty(\"\");\ndiff --git a/src/main/java/bisq/desktop/main/offer/offerbook/OfferBook.java b/src/main/java/bisq/desktop/main/offer/offerbook/OfferBook.java\nindex 1aa16f3f27..d975419359 100644\n--- a/src/main/java/bisq/desktop/main/offer/offerbook/OfferBook.java\n+++ b/src/main/java/bisq/desktop/main/offer/offerbook/OfferBook.java\n@@ -21,8 +21,6 @@ import bisq.core.offer.Offer;\n import bisq.core.offer.OfferBookService;\n import bisq.core.trade.TradeManager;\n \n-import bisq.common.app.Log;\n-\n import javax.inject.Inject;\n \n import javafx.collections.FXCollections;\n@@ -81,7 +79,6 @@ public class OfferBook {\n                     }\n \n                     offerBookListItems.add(offerBookListItem);\n-                    Log.logIfStressTests(\"OfferPayload added: No. of offers = \" + offerBookListItems.size());\n                 } else {\n                     log.debug(\"We have the exact same offer already in our list and ignore the onAdded call. ID={}\", offer.getId());\n                 }\n@@ -98,10 +95,7 @@ public class OfferBook {\n                 Optional<OfferBookListItem> candidateToRemove = offerBookListItems.stream()\n                         .filter(item -> item.getOffer().getId().equals(offer.getId()))\n                         .findAny();\n-                if (candidateToRemove.isPresent()) {\n-                    offerBookListItems.remove(candidateToRemove.get());\n-                    Log.logIfStressTests(\"OfferPayload removed: No. of offers = \" + offerBookListItems.size());\n-                }\n+                candidateToRemove.ifPresent(offerBookListItems::remove);\n             }\n         });\n     }\n@@ -119,8 +113,6 @@ public class OfferBook {\n                     .map(OfferBookListItem::new)\n                     .collect(Collectors.toList()));\n \n-            Log.logIfStressTests(\"OfferPayload filled: No. of offers = \" + offerBookListItems.size());\n-\n             log.debug(\"offerBookListItems.size \" + offerBookListItems.size());\n             fillOfferCountMaps();\n         } catch (Throwable t) {",
    "Detect and handle simple imported fields in expressions ( Java )": "diff --git a/document/src/main/java/com/yahoo/document/select/rule/AttributeNode.java b/document/src/main/java/com/yahoo/document/select/rule/AttributeNode.java\nindex 0cedda7c4f0..9e2759e1590 100644\n--- a/document/src/main/java/com/yahoo/document/select/rule/AttributeNode.java\n+++ b/document/src/main/java/com/yahoo/document/select/rule/AttributeNode.java\n@@ -7,6 +7,7 @@ import com.yahoo.document.Document;\n import com.yahoo.document.DocumentGet;\n import com.yahoo.document.DocumentPut;\n import com.yahoo.document.DocumentRemove;\n+import com.yahoo.document.DocumentType;\n import com.yahoo.document.DocumentUpdate;\n import com.yahoo.document.FieldPath;\n import com.yahoo.document.datatypes.FieldPathIteratorHandler;\n@@ -131,10 +132,37 @@ public class AttributeNode implements ExpressionNode {\n         throw new IllegalStateException(\"Function '\" + function + \"' is not supported.\");\n     }\n \n-    private static Object evaluateFieldPath(String fieldPth, Object value) {\n+    private static boolean looksLikeComplexFieldPath(String path) {\n+        for (int i = 0; i < path.length(); ++i) {\n+            switch (path.charAt(i)) {\n+                case '.':\n+                case '{':\n+                case '[':\n+                    return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private static boolean isSimpleImportedField(String path, DocumentType documentType) {\n+        if (looksLikeComplexFieldPath(path)) {\n+            return false;\n+        }\n+        return documentType.hasImportedField(path);\n+    }\n+\n+    private static Object evaluateFieldPath(String fieldPathStr, Object value) {\n         if (value instanceof DocumentPut) {\n             final Document doc = ((DocumentPut) value).getDocument();\n-            FieldPath fieldPath = doc.getDataType().buildFieldPath(fieldPth);\n+            if (isSimpleImportedField(fieldPathStr, doc.getDataType())) {\n+                // Imported fields can only be meaningfully evaluated in the backend, so we\n+                // explicitly treat them as if they are valid fields with missing values. This\n+                // will be treated the same as if it's a normal field by the selection operators.\n+                // This avoids any awkward interaction with Invalid values or having to\n+                // augment the FieldPath code with knowledge of imported fields.\n+                return null;\n+            }\n+            FieldPath fieldPath = doc.getDataType().buildFieldPath(fieldPathStr);\n             IteratorHandler handler = new IteratorHandler();\n             doc.iterateNested(fieldPath, 0, handler);\n             if (handler.values.isEmpty()) {\ndiff --git a/document/src/test/java/com/yahoo/document/select/DocumentSelectorTestCase.java b/document/src/test/java/com/yahoo/document/select/DocumentSelectorTestCase.java\nindex 0ff0bd81d90..05cfbc301cc 100644\n--- a/document/src/test/java/com/yahoo/document/select/DocumentSelectorTestCase.java\n+++ b/document/src/test/java/com/yahoo/document/select/DocumentSelectorTestCase.java\n@@ -8,10 +8,13 @@ import com.yahoo.document.select.parser.ParseException;\n import com.yahoo.document.select.parser.TokenMgrException;\n import com.yahoo.yolean.Exceptions;\n import org.junit.Before;\n+import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n \n@@ -26,11 +29,15 @@ import static org.junit.Assert.fail;\n  */\n public class DocumentSelectorTestCase {\n \n+    @Rule\n+    public final ExpectedException exceptionRule = ExpectedException.none();\n+\n     private static DocumentTypeManager manager = new DocumentTypeManager();\n \n     @Before\n     public void setUp() {\n-        DocumentType type = new DocumentType(\"test\");\n+        var importedFields = new HashSet<>(List.of(\"my_imported_field\"));\n+        DocumentType type = new DocumentType(\"test\", importedFields);\n         type.addHeaderField(\"hint\", DataType.INT);\n         type.addHeaderField(\"hfloat\", DataType.FLOAT);\n         type.addHeaderField(\"hstring\", DataType.STRING);\n@@ -696,6 +703,27 @@ public class DocumentSelectorTestCase {\n         assertEquals(Result.FALSE, evaluate(\"test.structarrmap{$x}.key == 17 AND test.stringweightedset{$x}\", documents.get(1)));\n     }\n \n+    @Test\n+    public void imported_field_references_are_treated_as_valid_field_with_missing_value() throws ParseException {\n+        var documents = createDocs();\n+        assertEquals(Result.TRUE, evaluate(\"test.my_imported_field == null\", documents.get(0)));\n+        assertEquals(Result.FALSE, evaluate(\"test.my_imported_field != null\", documents.get(0)));\n+        assertEquals(Result.FALSE, evaluate(\"test.my_imported_field\", documents.get(0)));\n+        // Only (in)equality operators are well defined for null values; everything else becomes Invalid.\n+        assertEquals(Result.INVALID, evaluate(\"test.my_imported_field > 0\", documents.get(0)));\n+    }\n+\n+    @Test\n+    public void imported_fields_only_supported_for_simple_expressions() throws ParseException {\n+        exceptionRule.expect(IllegalArgumentException.class);\n+        // TODO we should probably handle this case specially and give a better exception message\n+        exceptionRule.expectMessage(\"Field 'my_imported_field' not found in type datatype test\");\n+\n+        var documents = createDocs();\n+        // Nested field access is NOT considered a simple expression.\n+        evaluate(\"test.my_imported_field.foo\", documents.get(0));\n+    }\n+\n     @Test\n     public void testTicket1769674() {\n         assertParseError(\"music.uri=\\\"junk\",",
    "Clarifying comment to coalesce variable names normalization precheck .": "diff --git a/src/com/google/javascript/jscomp/CoalesceVariableNames.java b/src/com/google/javascript/jscomp/CoalesceVariableNames.java\nindex e6062d632..970af51dd 100644\n--- a/src/com/google/javascript/jscomp/CoalesceVariableNames.java\n+++ b/src/com/google/javascript/jscomp/CoalesceVariableNames.java\n@@ -75,6 +75,9 @@ class CoalesceVariableNames extends AbstractPostOrderCallback implements\n    * to foo, rename both variable to foo_bar.\n    */\n   CoalesceVariableNames(AbstractCompiler compiler, boolean usePseudoNames) {\n+    // The code is normalized at this point in the compilation process, however as a result of this\n+    // pass, the code becomes unnormalized (since we are reusing variable names) and so we want to\n+    // unconditionally mark the code as unnormalized. We mark unnormalized right before this pass.\n     checkState(!compiler.getLifeCycleStage().isNormalized());\n \n     this.compiler = compiler;",
    "update task queue format": "diff --git a/escheduler-common/src/main/java/cn/escheduler/common/queue/TaskQueueZkImpl.java b/escheduler-common/src/main/java/cn/escheduler/common/queue/TaskQueueZkImpl.java\nindex 88915b97c..2c2e3ef4d 100644\n--- a/escheduler-common/src/main/java/cn/escheduler/common/queue/TaskQueueZkImpl.java\n+++ b/escheduler-common/src/main/java/cn/escheduler/common/queue/TaskQueueZkImpl.java\n@@ -210,7 +210,12 @@ public class TaskQueueZkImpl extends AbstractZKClient implements ITaskQueue {\n         while(iterator.hasNext()){\n             if(j++ < tasksNum){\n                 String task = iterator.next();\n-                taskslist.add(task);\n+                String[] taskArray = task.split(Constants.UNDERLINE);\n+                int processInstanceId = Integer.parseInt(taskArray[1]);\n+                int taskId = Integer.parseInt(taskArray[3]);\n+                String destTask = taskArray[0]+Constants.UNDERLINE + processInstanceId + Constants.UNDERLINE\n+                        + taskArray[2] + Constants.UNDERLINE + taskId;\n+     ",
    "remove experimental and internal things from pydoc": "diff --git a/sdks/python/generate_pydoc.sh b/sdks/python/generate_pydoc.sh\nindex 6039942e7e..1fea6f12a1 100755\n--- a/sdks/python/generate_pydoc.sh\n+++ b/sdks/python/generate_pydoc.sh\n@@ -31,21 +31,24 @@ rm -rf target/docs/*\n \n mkdir -p target/docs/source\n \n-# Exclude autogenerated API message definition files that aren't part of SDK.\n-excluded_internal_clients=(\n+# Exclude internal/experimental files from the documentation.\n+excluded_internal_code=(\n+    apache_beam/examples/\n     apache_beam/internal/clients/\n     apache_beam/io/gcp/internal/clients/\n+    apache_beam/runners/api/\n+    apache_beam/runners/test/\n+    apache_beam/runners/portability/\n+    apache_beam/runners/worker/\n     apache_beam/runners/dataflow/internal/clients/\n-    apache_beam/examples/complete/juliaset/setup.py)\n+    apache_beam/testing/data/)\n \n python $(type -p sphinx-apidoc) -f -o target/docs/source apache_beam \\\n-    \"${excluded_internal_clients[@]}\" \"*_test.py\"\n+    \"${excluded_internal_code[@]}\" \"*_test.py\"\n \n # Remove Cython modules from doc template; they won't load\n sed -i -e '/.. automodule:: apache_beam.coders.stream/d' \\\n     target/docs/source/apache_beam.coders.rst\n-sed -i -e '/.. automodule:: apache_beam.runners.worker.statesampler/d' \\\n-    target/docs/source/apache_beam.runners.worker.rst\n \n # Create the configuration and index files\n cat > target/docs/source/conf.py <<'EOF'",
    "add getHeaderPositionForItem unit test .": "diff --git a/src/test/java/com/owncloud/android/ui/adapter/ActivityListAdapterTest.java b/src/test/java/com/owncloud/android/ui/adapter/ActivityListAdapterTest.java\nindex a1d5bbd9ca..92c3a07b64 100644\n--- a/src/test/java/com/owncloud/android/ui/adapter/ActivityListAdapterTest.java\n+++ b/src/test/java/com/owncloud/android/ui/adapter/ActivityListAdapterTest.java\n@@ -52,4 +52,66 @@ public final class ActivityListAdapterTest {\n         activityListAdapter.values.add(activity);\n         Assert.assertFalse(activityListAdapter.isHeader(1));\n     }\n+\n+    @Test\n+    public void getHeaderPositionForItem__AdapterIsEmpty_ReturnZero(){\n+        Mockito.when(activityListAdapter.isHeader(0)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getItemViewType(0)).thenCallRealMethod();\n+\n+        Assert.assertEquals(0,activityListAdapter.getHeaderPositionForItem(0));\n+    }\n+\n+    @Test\n+    public void getHeaderPositionForItem__ItemIsHeader_ReturnCurrentItem() {\n+        Object header = \"Hello\";\n+        Object activity = Mockito.mock(Activity.class);\n+\n+        Mockito.when(activityListAdapter.isHeader(0)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getItemViewType(0)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.isHeader(1)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getItemViewType(1)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.isHeader(2)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getItemViewType(2)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getHeaderPositionForItem(2)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.isHeader(3)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getItemViewType(3)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getHeaderPositionForItem(3)).thenCallRealMethod();\n+\n+\n+        activityListAdapter.values.add(header);\n+        activityListAdapter.values.add(activity);\n+        activityListAdapter.values.add(header);\n+        activityListAdapter.values.add(activity);\n+\n+\n+        Assert.assertEquals(2, activityListAdapter.getHeaderPositionForItem(2));\n+\n+    }\n+\n+    @Test\n+    public void getHeaderPositionForItem__ItemIsActivity_ReturnNextHeader() {\n+        Object header = \"Hello\";\n+        Object activity = Mockito.mock(Activity.class);\n+\n+        Mockito.when(activityListAdapter.isHeader(0)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getItemViewType(0)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getHeaderPositionForItem(0)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.isHeader(1)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getItemViewType(1)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getHeaderPositionForItem(1)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.isHeader(2)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getItemViewType(2)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getHeaderPositionForItem(2)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.isHeader(3)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getItemViewType(3)).thenCallRealMethod();\n+        Mockito.when(activityListAdapter.getHeaderPositionForItem(3)).thenCallRealMethod();\n+\n+        activityListAdapter.values.add(header);\n+        activityListAdapter.values.add(activity);\n+        activityListAdapter.values.add(header);\n+        activityListAdapter.values.add(activity);\n+\n+        Assert.assertEquals(2, activityListAdapter.getHeaderPositionForItem(2));\n+    }\n+\n }",
    "add listsnapshots command to nodetool .": "diff --git a/CHANGES.txt b/CHANGES.txt\nindex 6eeb8193d7..5c9b64ff69 100644\n--- a/CHANGES.txt\n+++ b/CHANGES.txt\n@@ -1,4 +1,5 @@\n 2.1\n+ * add listsnapshots command to nodetool (CASSANDRA-5742)\n  * Introduce AtomicBTreeColumns (CASSANDRA-6271)\n  * Multithreaded commitlog (CASSANDRA-3578)\n  * allocate fixed index summary memory pool and resample cold index summaries \ndiff --git a/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/src/java/org/apache/cassandra/db/ColumnFamilyStore.java\nindex 892e881c09..fe77d09e84 100644\n--- a/src/java/org/apache/cassandra/db/ColumnFamilyStore.java\n+++ b/src/java/org/apache/cassandra/db/ColumnFamilyStore.java\n@@ -1839,6 +1839,15 @@ public class ColumnFamilyStore implements ColumnFamilyStoreMBean\n         List<File> snapshotDirs = directories.getCFDirectories();\n         Directories.clearSnapshot(snapshotName, snapshotDirs);\n     }\n+    /**\n+     *\n+     * @return  Return a map of all snapshots to space being used\n+     * The pair for a snapshot has true size and size on disk.\n+     */\n+    public Map<String, Pair<Long,Long>> getSnapshotDetails()\n+    {\n+        return directories.getSnapshotDetails();\n+    }\n \n     public boolean hasUnreclaimedSpace()\n     {\ndiff --git a/src/java/org/apache/cassandra/db/Directories.java b/src/java/org/apache/cassandra/db/Directories.java\nindex a124d6714e..b3723b3455 100644\n--- a/src/java/org/apache/cassandra/db/Directories.java\n+++ b/src/java/org/apache/cassandra/db/Directories.java\n@@ -485,6 +485,42 @@ public class Directories\n         }\n     }\n \n+    /**\n+     *\n+     * @return  Return a map of all snapshots to space being used\n+     * The pair for a snapshot has size on disk and true size.\n+     */\n+    public Map<String, Pair<Long, Long>> getSnapshotDetails()\n+    {\n+        final Map<String, Pair<Long, Long>> snapshotSpaceMap = new HashMap<>();\n+        for (final File dir : sstableDirectories)\n+        {\n+            final File snapshotDir = new File(dir,SNAPSHOT_SUBDIR);\n+            if (snapshotDir.exists() && snapshotDir.isDirectory())\n+            {\n+                final File[] snapshots  = snapshotDir.listFiles();\n+                if (snapshots != null)\n+                {\n+                    for (final File snapshot : snapshots)\n+                    {\n+                        if (snapshot.isDirectory())\n+                        {\n+                            final long sizeOnDisk = FileUtils.folderSize(snapshot);\n+                            final long trueSize = getTrueAllocatedSizeIn(snapshot);\n+                            Pair<Long,Long> spaceUsed = snapshotSpaceMap.get(snapshot.getName());\n+                            if (spaceUsed == null)\n+                                spaceUsed =  Pair.create(sizeOnDisk,trueSize);\n+                            else\n+                                spaceUsed = Pair.create(spaceUsed.left + sizeOnDisk, spaceUsed.right + trueSize);\n+                            snapshotSpaceMap.put(snapshot.getName(), spaceUsed);\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        return snapshotSpaceMap;\n+    }\n     public boolean snapshotExists(String snapshotName)\n     {\n         for (File dir : sstableDirectories)\ndiff --git a/src/java/org/apache/cassandra/io/util/FileUtils.java b/src/java/org/apache/cassandra/io/util/FileUtils.java\nindex 3c84cc33ba..cbed4f8286 100644\n--- a/src/java/org/apache/cassandra/io/util/FileUtils.java\n+++ b/src/java/org/apache/cassandra/io/util/FileUtils.java\n@@ -447,4 +447,22 @@ public class FileUtils\n                 throw new IllegalStateException();\n         }\n     }\n+\n+    /**\n+     * Get the size of a directory in bytes\n+     * @param The directory for which we need size.\n+     * @return The size of the directory\n+     */\n+    public static long folderSize(File directory)\n+    {\n+        long length = 0;\n+        for (File file : directory.listFiles())\n+        {\n+            if (file.isFile())\n+                length += file.length();\n+            else\n+                length += folderSize(file);\n+        }\n+        return length;\n+    }\n }\ndiff --git a/src/java/org/apache/cassandra/service/StorageService.java b/src/java/org/apache/cassandra/service/StorageService.java\nindex 6f4788fc15..43fead02a0 100644\n--- a/src/java/org/apache/cassandra/service/StorageService.java\n+++ b/src/java/org/apache/cassandra/service/StorageService.java\n@@ -34,6 +34,8 @@ import javax.management.MBeanServer;\n import javax.management.Notification;\n import javax.management.NotificationBroadcasterSupport;\n import javax.management.ObjectName;\n+import javax.management.openmbean.TabularData;\n+import javax.management.openmbean.TabularDataSupport;\n \n import static java.nio.charset.StandardCharsets.ISO_8859_1;\n \n@@ -2229,6 +2231,49 @@ public class StorageService extends NotificationBroadcasterSupport implements IE\n             logger.debug(\"Cleared out snapshot directories\");\n     }\n \n+    public Map<String, TabularData> getSnapshotDetails()\n+    {\n+        final Map<String, TabularData> snapshotMap = new HashMap<>();\n+        for (final Keyspace keyspace : Keyspace.all())\n+        {\n+            if (Keyspace.SYSTEM_KS.equals(keyspace.getName()))\n+                continue;\n+\n+            for (final ColumnFamilyStore cfStore : keyspace.getColumnFamilyStores())\n+            {\n+                for (final Map.Entry<String, Pair<Long,Long>> snapshotDetail : cfStore.getSnapshotDetails().entrySet())\n+                {\n+                    TabularDataSupport data = (TabularDataSupport)snapshotMap.get(snapshotDetail.getKey());\n+                    if (data == null)\n+                    {\n+                        data = new TabularDataSupport(SnapshotDetailsTabularData.TABULAR_TYPE);\n+                        snapshotMap.put(snapshotDetail.getKey(), data);\n+                    }\n+\n+                    SnapshotDetailsTabularData.from(snapshotDetail.getKey(), keyspace.getName(), cfStore.getColumnFamilyName(), snapshotDetail, data);\n+                }\n+            }\n+        }\n+        return snapshotMap;\n+    }\n+\n+    public long trueSnapshotsSize()\n+    {\n+        long total = 0;\n+        for (final Keyspace keyspace : Keyspace.all())\n+        {\n+            if (Keyspace.SYSTEM_KS.equals(keyspace.getName()))\n+                continue;\n+\n+            for (final ColumnFamilyStore cfStore : keyspace.getColumnFamilyStores())\n+            {\n+                total += cfStore.trueSnapshotsSize();\n+            }\n+        }\n+\n+        return total;\n+    }\n+\n     /**\n      * @param allowIndexes Allow index CF names to be passed in\n      * @param autoAddIndexes Automatically add secondary indexes if a CF has them\ndiff --git a/src/java/org/apache/cassandra/service/StorageServiceMBean.java b/src/java/org/apache/cassandra/service/StorageServiceMBean.java\nindex e0bca269f4..390795e08e 100644\n--- a/src/java/org/apache/cassandra/service/StorageServiceMBean.java\n+++ b/src/java/org/apache/cassandra/service/StorageServiceMBean.java\n@@ -28,6 +28,7 @@ import java.util.concurrent.ExecutionException;\n import java.util.concurrent.TimeoutException;\n \n import javax.management.NotificationEmitter;\n+import javax.management.openmbean.TabularData;\n \n public interface StorageServiceMBean extends NotificationEmitter\n {\n@@ -215,6 +216,18 @@ public interface StorageServiceMBean extends NotificationEmitter\n      */\n     public void clearSnapshot(String tag, String... keyspaceNames) throws IOException;\n \n+    /**\n+     *  Get the details of all the snapshot\n+     * @return A map of snapshotName to all its details in Tabular form.\n+     */\n+    public Map<String, TabularData> getSnapshotDetails();\n+\n+    /**\n+     * Get the true size taken by all snapshots across all keyspaces.\n+     * @return True size taken by all the snapshots.\n+     */\n+    public long trueSnapshotsSize();\n+\n     /**\n      * Forces major compaction of a single keyspace\n      */\ndiff --git a/src/java/org/apache/cassandra/tools/NodeProbe.java b/src/java/org/apache/cassandra/tools/NodeProbe.java\nindex 7727401834..cbd43e9de2 100644\n--- a/src/java/org/apache/cassandra/tools/NodeProbe.java\n+++ b/src/java/org/apache/cassandra/tools/NodeProbe.java\n@@ -452,6 +452,16 @@ public class NodeProbe implements AutoCloseable\n         ssProxy.clearSnapshot(tag, keyspaces);\n     }\n \n+    public Map<String, TabularData> getSnapshotDetails()\n+    {\n+        return ssProxy.getSnapshotDetails();\n+    }\n+\n+    public long trueSnapshotsSize()\n+    {\n+        return ssProxy.trueSnapshotsSize();\n+    }\n+\n     public boolean isJoined()\n     {\n         return ssProxy.isJoined();\ndiff --git a/src/java/org/apache/cassandra/tools/NodeTool.java b/src/java/org/apache/cassandra/tools/NodeTool.java\nindex c9ddf4f5f6..70580f28ac 100644\n--- a/src/java/org/apache/cassandra/tools/NodeTool.java\n+++ b/src/java/org/apache/cassandra/tools/NodeTool.java\n@@ -42,6 +42,7 @@ import org.apache.cassandra.db.ColumnFamilyStoreMBean;\n import org.apache.cassandra.db.Keyspace;\n import org.apache.cassandra.db.compaction.CompactionManagerMBean;\n import org.apache.cassandra.db.compaction.OperationType;\n+import org.apache.cassandra.io.util.FileUtils;\n import org.apache.cassandra.locator.EndpointSnitchInfoMBean;\n import org.apache.cassandra.net.MessagingServiceMBean;\n import org.apache.cassandra.service.CacheServiceMBean;\n@@ -117,6 +118,7 @@ public class NodeTool\n                 SetStreamThroughput.class,\n                 SetTraceProbability.class,\n                 Snapshot.class,\n+                ListSnapshots.class,\n                 Status.class,\n                 StatusBinary.class,\n                 StatusThrift.class,\n@@ -1645,6 +1647,48 @@ public class NodeTool\n         }\n     }\n \n+    @Command(name = \"listsnapshots\", description = \"Lists all the snapshots along with the size on disk and true size.\")\n+    public static class ListSnapshots extends NodeToolCmd\n+    {\n+        @Override\n+        public void execute(NodeProbe probe)\n+        {\n+            try\n+            {\n+                System.out.println(\"Snapshot Details: \");\n+\n+                final Map<String,TabularData> snapshotDetails = probe.getSnapshotDetails();\n+                if (snapshotDetails.isEmpty())\n+          ",
    "Exception handling : provide a global variable in Threading that receives all unhandled exceptions from all framework threads . . Replaces the now removed PeerEventListener . onException ( ) callback .": "diff --git a/core/src/main/java/com/google/bitcoin/core/AbstractPeerEventListener.java b/core/src/main/java/com/google/bitcoin/core/AbstractPeerEventListener.java\nindex f3332ac4b..86ceff72a 100644\n--- a/core/src/main/java/com/google/bitcoin/core/AbstractPeerEventListener.java\n+++ b/core/src/main/java/com/google/bitcoin/core/AbstractPeerEventListener.java\n@@ -52,8 +52,4 @@ public class AbstractPeerEventListener implements PeerEventListener {\n     public List<Message> getData(Peer peer, GetDataMessage m) {\n         return null;\n     }\n-\n-    @Override\n-    public void onException(Throwable throwable) {\n-    }\n }\ndiff --git a/core/src/main/java/com/google/bitcoin/core/Message.java b/core/src/main/java/com/google/bitcoin/core/Message.java\nindex cc88cfb94..025844a7b 100644\n--- a/core/src/main/java/com/google/bitcoin/core/Message.java\n+++ b/core/src/main/java/com/google/bitcoin/core/Message.java\n@@ -378,8 +378,6 @@ public abstract class Message implements Serializable {\n     /**\n      * This method is a NOP for all classes except Block and Transaction.  It is only declared in Message\n      * so BitcoinSerializer can avoid 2 instanceof checks + a casting.\n-     *\n-     * @return\n      */\n     public Sha256Hash getHash() {\n         return null;\ndiff --git a/core/src/main/java/com/google/bitcoin/core/Peer.java b/core/src/main/java/com/google/bitcoin/core/Peer.java\nindex 2f84cea16..c09606d0b 100644\n--- a/core/src/main/java/com/google/bitcoin/core/Peer.java\n+++ b/core/src/main/java/com/google/bitcoin/core/Peer.java\n@@ -239,11 +239,15 @@ public class Peer {\n             String s;\n             PeerAddress addr = vAddress;\n             s = addr == null ? \"?\" : addr.toString();\n-            if (e.getCause() instanceof ConnectException || e.getCause() instanceof IOException) {\n+            final Throwable cause = e.getCause();\n+            if (cause instanceof ConnectException || cause instanceof IOException) {\n                 // Short message for network errors\n-                log.info(s + \" - \" + e.getCause().getMessage());\n+                log.info(s + \" - \" + cause.getMessage());\n             } else {\n-                log.warn(s + \" - \", e.getCause());\n+                log.warn(s + \" - \", cause);\n+                Thread.UncaughtExceptionHandler handler = Threading.uncaughtExceptionHandler;\n+                if (handler != null)\n+                    handler.uncaughtException(Thread.currentThread(), cause);\n             }\n \n             e.getChannel().close();\n@@ -261,92 +265,75 @@ public class Peer {\n         }\n     }\n \n-    private void processMessage(MessageEvent e, Message m) throws IOException, VerificationException, ProtocolException {\n-        try {\n-            // Allow event listeners to filter the message stream. Listeners are allowed to drop messages by\n-            // returning null.\n-            for (ListenerRegistration<PeerEventListener> registration : eventListeners) {\n-                // Skip any listeners that are supposed to run in another thread as we don't want to block waiting\n-                // for it, which might cause circular deadlock.\n-                if (registration.executor == Threading.SAME_THREAD) {\n-                    m = registration.listener.onPreMessageReceived(this, m);\n-                    if (m == null) break;\n-                }\n+    private void processMessage(MessageEvent e, Message m) throws Exception {\n+        // Allow event listeners to filter the message stream. Listeners are allowed to drop messages by\n+        // returning null.\n+        for (ListenerRegistration<PeerEventListener> registration : eventListeners) {\n+            // Skip any listeners that are supposed to run in another thread as we don't want to block waiting\n+            // for it, which might cause circular deadlock.\n+            if (registration.executor == Threading.SAME_THREAD) {\n+                m = registration.listener.onPreMessageReceived(this, m);\n+                if (m == null) break;\n             }\n-            if (m == null) return;\n+        }\n+        if (m == null) return;\n \n-            // If we are in the middle of receiving transactions as part of a filtered block push from the remote node,\n-            // and we receive something that's not a transaction, then we're done.\n-            if (currentFilteredBlock != null && !(m instanceof Transaction)) {\n-                endFilteredBlock(currentFilteredBlock);\n-                currentFilteredBlock = null;\n-            }\n+        // If we are in the middle of receiving transactions as part of a filtered block push from the remote node,\n+        // and we receive something that's not a transaction, then we're done.\n+        if (currentFilteredBlock != null && !(m instanceof Transaction)) {\n+            endFilteredBlock(currentFilteredBlock);\n+            currentFilteredBlock = null;\n+        }\n \n-            if (m instanceof NotFoundMessage) {\n-                // This is sent to us when we did a getdata on some transactions that aren't in the peers memory pool.\n-                // Because NotFoundMessage is a subclass of InventoryMessage, the test for it must come before the next.\n-                processNotFoundMessage((NotFoundMessage) m);\n-            } else if (m instanceof InventoryMessage) {\n-                processInv((InventoryMessage) m);\n-            } else if (m instanceof Block) {\n-                processBlock((Block) m);\n-            } else if (m instanceof FilteredBlock) {\n-                startFilteredBlock((FilteredBlock) m);\n-            } else if (m instanceof Transaction) {\n-                processTransaction((Transaction) m);\n-            } else if (m instanceof GetDataMessage) {\n-                processGetData((GetDataMessage) m);\n-            } else if (m instanceof AddressMessage) {\n-                // We don't care about addresses of the network right now. But in future,\n-                // we should save them in the wallet so we don't put too much load on the seed nodes and can\n-                // properly explore the network.\n-            } else if (m instanceof HeadersMessage) {\n-                processHeaders((HeadersMessage) m);\n-            } else if (m instanceof AlertMessage) {\n-                processAlert((AlertMessage) m);\n-            } else if (m instanceof VersionMessage) {\n-                vPeerVersionMessage = (VersionMessage) m;\n-            } else if (m instanceof VersionAck) {\n-                if (vPeerVersionMessage == null) {\n-                    throw new ProtocolException(\"got a version ack before version\");\n-                }\n-                if (isAcked) {\n-                    throw new ProtocolException(\"got more than one version ack\");\n-                }\n-                isAcked = true;\n-                for (PeerLifecycleListener listener : lifecycleListeners)\n-                    listener.onPeerConnected(this);\n-                // We check min version after onPeerConnected as channel.close() will\n-                // call onPeerDisconnected, and we should probably call onPeerConnected first.\n-                final int version = vMinProtocolVersion;\n-                if (vPeerVersionMessage.clientVersion < version) {\n-                    log.warn(\"Connected to a peer speaking protocol version {} but need {}, closing\",\n-                            vPeerVersionMessage.clientVersion, version);\n-                    e.getChannel().close();\n-                }\n-            } else if (m instanceof Ping) {\n-                if (((Ping) m).hasNonce())\n-                    sendMessage(new Pong(((Ping) m).getNonce()));\n-            } else if (m instanceof Pong) {\n-                processPong((Pong)m);\n-            } else {\n-                log.warn(\"Received unhandled message: {}\", m);\n+        if (m instanceof NotFoundMessage) {\n+            // This is sent to us when we did a getdata on some transactions that aren't in the peers memory pool.\n+            // Because NotFoundMessage is a subclass of InventoryMessage, the test for it must come before the next.\n+            processNotFoundMessage((NotFoundMessage) m);\n+        } else if (m instanceof InventoryMessage) {\n+            processInv((InventoryMessage) m);\n+        } else if (m instanceof Block) {\n+            processBlock((Block) m);\n+        } else if (m instanceof FilteredBlock) {\n+            startFilteredBlock((FilteredBlock) m);\n+        } else if (m instanceof Transaction) {\n+            processTransaction((Transaction) m);\n+        } else if (m instanceof GetDataMessage) {\n+            processGetData((GetDataMessage) m);\n+        } else if (m instanceof AddressMessage) {\n+            // We don't care about addresses of the network right now. But in future,\n+            // we should save them in the wallet so we don't put too much load on the seed nodes and can\n+            // properly explore the network.\n+        } else if (m instanceof HeadersMessage) {\n+            processHeaders((HeadersMessage) m);\n+        } else if (m instanceof AlertMessage) {\n+            processAlert((AlertMessage) m);\n+        } else if (m instanceof VersionMessage) {\n+            vPeerVersionMessage = (VersionMessage) m;\n+        } else if (m instanceof VersionAck) {\n+            if (vPeerVersionMessage == null) {\n+                throw new ProtocolException(\"got a version ack before version\");\n             }\n-        } catch (final Throwable throwable) {\n-            log.warn(\"Caught exception in peer thread: {}\", throwable.getMessage());\n-            throwable.printStackTrace();\n-            for (final ListenerRegistration<PeerEventListener> registration : eventListeners) {\n-                try {\n-                    registration.executor.execute(new Runnable() {\n-                        @Override\n-                        public void run() {\n-                            registration.listener.onException(throwable);\n-                        }\n-                    });\n-                } catch (Exception e1) {\n-                    e1.printStackTrace();\n-                }\n+            if (isAcked) {\n+                throw new ProtocolException(\"got more than one version ack\");\n             }\n+            isAcked = true;\n+            for (PeerLifecycleListener listener : lifecycleListeners)\n+                listener.onPeerConnected(this);\n+            // We check min version after onPeerConnected as channel.close() will\n+            // call onPeerDisconnected, and we should probably call onPeerConnected first.\n+            final int version = vMinProtocolVersion;\n+            if (vPeerVersionMessage.clientVersion < version) {\n+                log.warn(\"Connected to a peer speaking protocol version {} but need {}, closing\",\n+                        vPeerVersionMessage.clientVersion, version);\n+                e.getChannel().close();\n+            }\n+        } else if (m instanceof Ping) {\n+            if (((Ping) m).hasNonce())\n+                sendMessage(new Pong(((Ping) m).getNonce()));\n+        } else if (m instanceof Pong) {\n+            processPong((Pong)m);\n+        } else {\n+            log.warn(\"Received unhandled message: {}\", m);\n         }\n     }\n \ndiff --git a/core/src/main/java/com/google/bitcoin/core/PeerEventListener.java b/core/src/main/java/com/google/bitcoin/core/PeerEventListener.java\nindex 8895b08df..dc854e156 100644\n--- a/core/src/main/java/com/google/bitcoin/core/PeerEventListener.java\n+++ b/core/src/main/java/com/google/bitcoin/core/PeerEventListener.java\n@@ -78,11 +78,4 @@ public interface PeerEventListener {\n      * items as possible which appear in the {@link GetDataMessage}, or null if you're not interested in responding.\n      */\n     public List<Message> getData(Peer peer, GetDataMessage m);\n-\n-    /**\n-     * Called if there is an exception thrown in a Netty worker thread whilst processing an inbound message. You\n-     * can use this to report crashes of the peer threads back to your apps website, for instance. After this callback\n-     * runs the peer will be disconnected. Any exceptions thrown by this method will be logged and ignored.\n-     */\n-    public void onException(Throwable throwable);\n }\ndiff --git a/core/src/main/java/com/google/bitcoin/core/Wallet.java b/core/src/main/java/com/google/bitcoin/core/Wallet.java\nindex f02feadb6..1e2bb0aa6 100644\n--- a/core/src/main/java/com/google/bitcoin/core/Wallet.java\n+++ b/core/src/main/java/com/google/bitcoin/core/Wallet.java\n@@ -461,6 +461,9 @@ public class Wallet implements Serializable, BlockChainListener {\n             setDaemon(true);\n             setName(\"Wallet auto save thread\");\n             setPriority(Thread.MIN_PRIORITY);   // Avoid competing with the UI.\n+            Thread.UncaughtExceptionHandler handler = Threading.uncaughtExceptionHandler;\n+            if (handler != null)\n+                setUncaughtExceptionHandler(handler);\n         }\n \n         /** Returns the global instance that services all wallets. It never shuts down. */\ndiff --git a/core/src/main/java/com/google/bitcoin/utils/Threading.java b/core/src/main/java/com/google/bitcoin/utils/Threading.java\nindex bae0b6c7a..753d1fde6 100644\n--- a/core/src/main/java/com/google/bitcoin/utils/Threading.java\n+++ b/core/src/main/java/com/google/bitcoin/utils/Threading.java\n@@ -21,6 +21,7 @@ import com.google.common.util.concurrent.CycleDetectingLockFactory;\n import com.google.common.util.concurrent.Futures;\n \n import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n import java.lang.ref.WeakReference;\n import java.util.concurrent.*;\n import java.util.concurrent.locks.ReentrantLock;\n@@ -67,6 +68,17 @@ public class Threading {\n         Futures.getUnchecked(USER_THREAD.submit(Callables.returning(null)));\n     }\n \n+    /**\n+     * An exception handler that will be invoked for any exceptions that occur in the user thread, and\n+     * any unhandled exceptions that are caught whilst the framework is processing network traffic or doing other\n+     * background tasks. The purpose of this is to allow you to report back unanticipated crashes from your users\n+     * to a central collection center for analysis and debugging. You should configure this <b>before</b> any\n+     * bitcoinj library code is run, setting it after you started network traffic and other forms of processing\n+     * may result in the change not taking effect.\n+     */\n+    @Nullable\n+    public static volatile Thread.UncaughtExceptionHandler uncaughtExceptionHandler;\n+\n     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n \n     static {\n@@ -80,6 +92,7 @@ public class Threading {\n                 Thread t = new Thread(runnable);\n                 t.setName(\"bitcoinj user thread\");\n                 t.setDaemon(true);\n+                t.setUncaughtExceptionHandler(uncaughtExceptionHandler);\n                 userThread = new WeakReference<Thread>(t);\n                 return t;\n             }\ndiff --git a/core/src/test/java/com/google/bitcoin/core/PeerTest.java b/core/src/test/java/com/google/bitcoin/core/PeerTest.java\nindex bb28832ad..3dd4c6785 100644\n--- a/core/src/test/java/com/google/bitcoin/core/PeerTest.java\n+++ b/core/src/test/java/com/google/bitcoin/core/PeerTest.java\n@@ -17,20 +17,30 @@\n package com.google.bitcoin.core;\n \n import com.google.bitcoin.core.Peer.PeerHandler;\n+import com.google.bitcoin.params.TestNet3Params;\n import com.google.bitcoin.utils.Threading;\n import com.google.common.collect.Lists;\n import com.google.common.util.concurrent.ListenableFuture;\n+import com.google.common.util.concurrent.SettableFuture;\n import org.easymock.Capture;\n import org.easymock.CaptureType;\n import org.jboss.netty.channel.*;\n import org.junit.Before;\n import org.junit.Test;\n \n+import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n+import java.io.OutputStream;\n import java.math.BigInteger;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n import java.nio.charset.Charset;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.List;\n+import java.util.concurrent.ExecutionException;\n import java.util.concurrent.Future;\n \n import static com.google.bitcoin.core.TestUtils.*;\n@@ -782,12 +792,21 @@ public class PeerTest extends TestWithNetworkConnections {\n             }\n         });\n         final Throwable[] throwables = new Throwable[1];\n-        peer.addEventListener(new AbstractPeerEventListener() {\n+        Threading.uncaughtExceptionHandler = new Thread.UncaughtExceptionHandler() {\n             @Override\n-            public void onException(Throwable throwable) {\n+            public void uncaughtException(Thread thread, Throwable throwable) {\n                 throwables[0] = throwable;\n             }\n-        }, Threading.SAME_THREAD);\n+        };\n+        // In real usage we're not really meant to adjust the uncaught exception handler after stuff started happening\n+        // but in the unit test environment other tests have just run so the thread is probably still kicking around.\n+        // Force it to crash so it'll be recreated with our new handler.\n+        Threading.USER_THREAD.execute(new Runnable() {\n+            @Override\n+            public void run() {\n+                throw new RuntimeException();\n+            }\n+        });\n         control.replay();\n         connect();\n         Transaction t1 = new Transaction(unitTestParams);\n@@ -797,8 +816,59 @@ public class PeerTest extends TestWithNetworkConnections {\n         t2.addInput(t1.getOutput(0));\n         t2.addOutput(Utils.toNanoCoins(1, 0), wallet.getChangeAddress());\n         inbound(peer, t2);\n-        inbound(peer, new NotFoundMessage(unitTestParams, Lists.newArrayList(new InventoryItem(InventoryItem.Type.Transaction, t2.getInput(0).getHash()))));\n+        final InventoryItem inventoryItem = new InventoryItem(InventoryItem.Type.Transaction, t2.getInput(0).getOutpoint().getHash());\n+        final NotFoundMessage nfm = new NotFoundMessage(unitTestParams, Lists.newArrayList(inventoryItem));\n+        inbound(peer, nfm);\n+        Threading.waitForUserCode();\n         assertTrue(throwables[0] instanceof NullPointerException);\n+        Threading.uncaughtExceptionHandler = null;\n+    }\n+\n+    @Test\n+    public void badMessage() throws Exception {\n+        // Bring up an actual network connection and feed it bogus data.\n+        final SettableFuture<Void> result = SettableFuture.create();\n+        Threading.uncaughtExceptionHandler = new Thread.UncaughtExceptionHandler() {\n+            @Override\n+            public void uncaughtException(Thread thread, Throwable throwable) {\n+                result.setException(throwable);\n+   ",
    "dismiss the initialization progress dialog if system is initialized correctly .": "diff --git a/cSploit/src/org/csploit/android/MainActivity.java b/cSploit/src/org/csploit/android/MainActivity.java\nindex 73dfce71..3f781890 100644\n--- a/cSploit/src/org/csploit/android/MainActivity.java\n+++ b/cSploit/src/org/csploit/android/MainActivity.java\n@@ -121,7 +121,6 @@ public class MainActivity extends SherlockListActivity {\n   private ProgressDialog progressDialog;\n \tprivate long mLastBackPressTime = 0;\n   private ActionMode mActionMode = null;\n-  private boolean mInitialization = false;\n \n \tprivate void createUpdateLayout() {\n \n@@ -242,8 +241,6 @@ public class MainActivity extends SherlockListActivity {\n     } else {\n       progressDialog.show();\n     }\n-\n-    mInitialization = true;\n   }\n \n   private void onInitializationError(final String message) {\n@@ -256,7 +253,6 @@ public class MainActivity extends SherlockListActivity {\n                 MainActivity.this).show();\n       }\n     });\n-    mInitialization = false;\n   }\n \n   private void onInitializationSuccess() {\n@@ -284,7 +280,6 @@ public class MainActivity extends SherlockListActivity {\n         }\n       }\n     });\n-    mInitialization = false;\n   }\n \n \t@Override\n@@ -374,6 +369,10 @@ public class MainActivity extends SherlockListActivity {\n     }\n \n     createLayout();\n+\n+    if(coreBeating) {\n+      onInitializationSuccess();\n+    }\n",
    "added dataSource and tests for metadata support": "diff --git a/pom.xml b/pom.xml\nindex 0e650d5a9c..f923df50ab 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -4,7 +4,7 @@\n \t<parent>\n \t\t<groupId>com.orientechnologies</groupId>\n \t\t<artifactId>orientdb-parent</artifactId>\n-\t\t<version>1.0rc7-SNAPSHOT</version>\n+\t\t<version>1.0rc8-SNAPSHOT</version>\n \t</parent>\n \n \t<artifactId>orientdb-jdbc</artifactId>\ndiff --git a/src/main/java/com/orientechnologies/orient/jdbc/OrientDataSource.java b/src/main/java/com/orientechnologies/orient/jdbc/OrientDataSource.java\nnew file mode 100644\nindex 0000000000..3b0a8fd298\n--- /dev/null\n+++ b/src/main/java/com/orientechnologies/orient/jdbc/OrientDataSource.java\n@@ -0,0 +1,73 @@\n+package com.orientechnologies.orient.jdbc;\n+\n+import java.io.PrintWriter;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+\n+import javax.sql.DataSource;\n+\n+public class OrientDataSource implements DataSource {\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\tClass.forName(OrientJdbcDriver.class.getCanonicalName());\n+\t\t} catch (ClassNotFoundException e) {\n+\t\t\tSystem.err.println(\"OrientDB DataSource unable to load OrientDB JDBC Driver\");\n+\t\t}\n+\t}\n+\n+\tprivate String url;\n+\tprivate String username;\n+\tprivate String password;\n+\n+\tprivate PrintWriter logger;\n+\tprivate int loginTimeout;\n+\n+\tpublic PrintWriter getLogWriter() throws SQLException {\n+\t\treturn logger;\n+\t}\n+\n+\tpublic void setLogWriter(PrintWriter out) throws SQLException {\n+\t\tthis.logger = out;\n+\n+\t}\n+\n+\tpublic void setLoginTimeout(int seconds) throws SQLException {\n+\t\tthis.loginTimeout = seconds;\n+\n+\t}\n+\n+\tpublic int getLoginTimeout() throws SQLException {\n+\t\treturn loginTimeout;\n+\t}\n+\n+\tpublic <T> T unwrap(Class<T> iface) throws SQLException {\n+\t\tthrow new UnsupportedOperationException();\n+\t}\n+\n+\tpublic boolean isWrapperFor(Class<?> iface) throws SQLException {\n+\t\tthrow new UnsupportedOperationException();\n+\t}\n+\n+\tpublic Connection getConnection() throws SQLException {\n+\t\treturn this.getConnection(username, password);\n+\t}\n+\n+\tpublic Connection getConnection(String username, String password) throws SQLException {\n+\t\treturn DriverManager.getConnection(url, username, password);\n+\t}\n+\n+\tpublic void setUrl(String url) {\n+\t\tthis.url = url;\n+\t}\n+\n+\tpublic void setUsername(String username) {\n+\t\tthis.username = username;\n+\t}\n+\n+\tpublic void setPassword(String password) {\n+\t\tthis.password = password;\n+\t}\n+\n+}\ndiff --git a/src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcConnection.java b/src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcConnection.java\nindex b386dfa9e8..af63e89910 100644\n--- a/src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcConnection.java\n+++ b/src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcConnection.java\n@@ -136,8 +136,7 @@ public class OrientJdbcConnection implements Connection {\n \t}\r\n \r\n \tpublic String getCatalog() throws SQLException {\r\n-\r\n-\t\treturn null;\r\n+\t\treturn database.getName();\r\n \t}\r\n \r\n \tpublic Properties getClientInfo() throws SQLException {\r\n@@ -226,11 +225,11 @@ public class OrientJdbcConnection implements Connection {\n \t}\r\n \r\n \tpublic void setClientInfo(Properties properties) throws SQLClientInfoException {\r\n-\r\n+\t\t// noop\r\n \t}\r\n \r\n \tpublic void setClientInfo(String name, String value) throws SQLClientInfoException {\r\n-\r\n+\t\t// noop\r\n \t}\r\n \r\n \tpublic void setHoldability(int holdability) throws SQLException {\r\n@@ -257,12 +256,12 @@ public class OrientJdbcConnection implements Connection {\n \r\n \tpublic boolean isWrapperFor(Class<?> iface) throws SQLException {\r\n \r\n-\t\treturn false;\r\n+\t\tthrow new SQLFeatureNotSupportedException();\r\n \t}\r\n \r\n \tpublic <T> T unwrap(Class<T> iface) throws SQLException {\r\n \r\n-\t\treturn null;\r\n+\t\tthrow new SQLFeatureNotSupportedException();\r\n \t}\r\n \r\n \tpublic String getUrl() {\r\ndiff --git a/src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcResultSet.java b/src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcResultSet.java\nindex dc0536c4cd..ca2fd7656d 100644\n--- a/src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcResultSet.java\n+++ b/src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcResultSet.java\n@@ -140,7 +140,7 @@ public class OrientJdbcResultSet implements ResultSet {\n \t}\r\n \r\n \tpublic ResultSetMetaData getMetaData() throws SQLException {\r\n-\t\treturn new OrientJdbcMetaData(connection, this);\r\n+\t\treturn new OrientJdbcResultSetMetaData(connection, this);\r\n \t}\r\n \r\n \tpublic void deleteRow() throws SQLException {\r\ndiff --git a/src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcMetaData.java b/src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcResultSetMetaData.java\nsimilarity index 92%\nrename from src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcMetaData.java\nrename to src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcResultSetMetaData.java\nindex ef43f8d02f..3ee16ecbeb 100644\n--- a/src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcMetaData.java\n+++ b/src/main/java/com/orientechnologies/orient/jdbc/OrientJdbcResultSetMetaData.java\n@@ -27,7 +27,7 @@ import com.orientechnologies.orient.core.metadata.schema.OType;\n import com.orientechnologies.orient.core.record.impl.ODocument;\r\n \r\n @SuppressWarnings(\"boxing\")\r\n-public class OrientJdbcMetaData implements ResultSetMetaData {\r\n+public class OrientJdbcResultSetMetaData implements ResultSetMetaData {\r\n \r\n \tprivate final static Map<OType, Integer> oTypesSqlTypes = new HashMap<OType, Integer>();\r\n \r\n@@ -44,7 +44,7 @@ public class OrientJdbcMetaData implements ResultSetMetaData {\n \tprivate OrientJdbcResultSet resultSet;\r\n \tprivate final OrientJdbcConnection connection;\r\n \r\n-\tpublic OrientJdbcMetaData(OrientJdbcConnection connection, OrientJdbcResultSet iResultSet) {\r\n+\tpublic OrientJdbcResultSetMetaData(OrientJdbcConnection connection, OrientJdbcResultSet iResultSet) {\r\n \t\tthis.connection = connection;\r\n \t\tresultSet = iResultSet;\r\n \t}\r\ndiff --git a/src/test/java/com/orientechnologies/orient/jdbc/OrientDataSourceTest.java b/src/test/java/com/orientechnologies/orient/jdbc/OrientDataSourceTest.java\nnew file mode 100644\nindex 0000000000..4bbb6e229a\n--- /dev/null\n+++ b/src/test/java/com/orientechnologies/orient/jdbc/OrientDataSourceTest.java\n@@ -0,0 +1,36 @@\n+package com.orientechnologies.orient.jdbc;\n+\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+\n+import org.junit.Test;\n+\n+import com.orientechnologies.orient.core.db.document.ODatabaseDocumentTx;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class OrientDataSourceTest {\n+\n+\t@Test\n+\tpublic void shouldConnect() throws SQLException {\n+\t\tString dbUrl = \"memory:test\";\n+\n+\t\tODatabaseDocumentTx db = new ODatabaseDocumentTx(dbUrl);\n+\t\tif (db.exists()) db.delete();\n+\t\tdb.create();\n+\n+\t\tOrientDataSource ds = new OrientDataSource();\n+\t\tds.setUrl(\"jdbc:orient:memory:test\");\n+\t\tds.setUsername(\"admin\");\n+\t\tds.setPassword(\"admin\");\n+\n+\t\tConnection conn = ds.getConnection();\n+\n+\t\tassertNotNull(conn);\n+\t\tconn.close();\n+\t\tassertTrue(conn.isClosed());\n+\n+\t}\n+\n+}\ndiff --git a/src/test/java/com/orientechnologies/orient/jdbc/OrientJdbcDriverTest.java b/src/test/java/com/orientechnologies/orient/jdbc/OrientJdbcDriverTest.java\nindex 16fb18b064..ee10e4bfd6 100644\n--- a/src/test/java/com/orientechnologies/orient/jdbc/OrientJdbcDriverTest.java\n+++ b/src/test/java/com/orientechnologies/orient/jdbc/OrientJdbcDriverTest.java\n@@ -44,4 +44,6 @@ public class OrientJdbcDriverTest {\n \t\tassertTrue(conn.isClosed());\n \t}\n \n+\t\n+\t\n }",
    "renamed SearchExpressionParser . isValidSyntax to checkSyntax and made it return the resulting AST ( or null )": "diff --git a/src/java/net/sf/jabref/SearchManager2.java b/src/java/net/sf/jabref/SearchManager2.java\nindex 5c10dd3e11..6b0a0ec0ff 100644\n--- a/src/java/net/sf/jabref/SearchManager2.java\n+++ b/src/java/net/sf/jabref/SearchManager2.java\n@@ -494,10 +494,10 @@ settings.add(select);\n \t/** Updates the text on the search button to reflect\n       * the type of search that will happen on click. */\n     private void updateSearchButtonText() {\n-        search.setText(SearchExpressionParser.isValidSyntax(\n+        search.setText(SearchExpressionParser.checkSyntax(\n                 searchField.getText(),\n                 caseSensitive.isSelected(),\n-                regExpSearch.isSelected()) \n+                regExpSearch.isSelected()) != null \n                 ? Globals.lang(\"Search Specified Field(s)\") \n                 : Globals.lang(\"Search All Fields\"));\n     }\ndiff --git a/src/java/net/sf/jabref/search/Parser.g b/src/java/net/sf/jabref/search/Parser.g\nindex 7e1fbfd1e0..b1d025a359 100644\n--- a/src/java/net/sf/jabref/search/Parser.g\n+++ b/src/java/net/sf/jabref/search/Parser.g\n@@ -27,8 +27,8 @@ tokens {\n \tpublic boolean caseSensitive = false;\n     public boolean regex = true;\n \t/** Creates a parser and lexer instance and tests the specified String.\n-\t  * Returns true if s is in valid syntax for advanced field search, false otherwise. */\n-\tpublic static boolean isValidSyntax(String s, boolean caseSensitive, boolean regex) {\n+\t  * Returns the AST if s is in valid syntax for advanced field search, null otherwise. */\n+\tpublic static AST checkSyntax(String s, boolean caseSensitive, boolean regex) {\n \t\t// JZTODO: Is there some way to prevent instance creation here?\n \t\t// How can a parser and/or lexer be reused?\n \t\tSearchExpressionParser parser = new SearchExpressionParser(new SearchExpressionLexer(\n@@ -37,9 +37,9 @@ tokens {\n \t\tparser.regex = regex;\n \t\ttry {\n \t\t\tparser.searchExpression();\n-\t\t\treturn true;\n+\t\t\treturn parser.getAST();\n \t\t} catch (Exception e) {\n-\t\t\treturn false;\n+\t\t\treturn null;\n \t\t}\n \t}\n }\ndiff --git a/src/java/net/sf/jabref/search/SearchExpressionParser.java b/src/java/net/sf/jabref/search/SearchExpressionParser.java\nindex d71a040d21..4388d388f2 100644\n--- a/src/java/net/sf/jabref/search/SearchExpressionParser.java\n+++ b/src/java/net/sf/jabref/search/SearchExpressionParser.java\n@@ -28,8 +28,8 @@ public class SearchExpressionParser extends antlr.LLkParser       implements Sea\n \tpublic boolean caseSensitive = false;\n     public boolean regex = true;\n \t/** Creates a parser and lexer instance and tests the specified String.\n-\t  * Returns true if s is in valid syntax for advanced field search, false otherwise. */\n-\tpublic static boolean isValidSyntax(String s, boolean caseSensitive, boolean regex) {\n+\t  * Returns the AST if s is in valid syntax for advanced field search, null otherwise. */\n+\tpublic static AST checkSyntax(String s, boolean caseSensitive, boolean regex) {\n \t\t// JZTODO: Is there some way to prevent instance creation here?\n \t\t// How can a parser and/or lexer be reused?\n \t\tSearchExpressionParser parser = new SearchExpressionParser(new SearchExpressionLexer(\n@@ -38,9 +38,9 @@ public class SearchExpressionParser extends antlr.LLkParser       implements Sea\n \t\tparser.regex = regex;\n \t\ttry {\n \t\t\tparser.searchExpression();\n-\t\t\treturn true;\n+\t\t\treturn parser.getAST();\n \t\t} catch (Exception e) {\n-\t\t\treturn false;\n+\t\t\treturn null;\n \t\t}\n \t}\n ",
    "Added another Nakov2": "diff --git a/src/edu/stanford/nlp/ie/machinereading/structure/Span.java b/src/edu/stanford/nlp/ie/machinereading/structure/Span.java\nindex 5e9c79dd5..ef39d7423 100644\n--- a/src/edu/stanford/nlp/ie/machinereading/structure/Span.java\n+++ b/src/edu/stanford/nlp/ie/machinereading/structure/Span.java\n@@ -53,23 +53,7 @@ public class Span implements Serializable, Iterable<Integer> {\n       return new Span(val2, val1);\n     }\n   }\n-\n-  public static Span fromValues(Object... values) {\n-    if (values.length == 1) {\n-      return fromValues(values[0], values[0] instanceof Number ? ((Number) values[0]).intValue() + 1 : Integer.parseInt(values[0].toString()) + 1);\n-    }\n-    if (values.length != 2) { throw new IllegalArgumentException(\"fromValues() must take an array with 2 elements\"); }\n-    int val1;\n-    if (values[0] instanceof Number) { val1 = ((Number) values[0]).intValue(); }\n-    else if (values[0] instanceof String) { val1 = Integer.parseInt((String) values[0]); }\n-    else { throw new IllegalArgumentException(\"Unknown value for span: \" + values[0]); }\n-    int val2;\n-    if (values[1] instanceof Number) { val2 = ((Number) values[1]).intValue(); }\n-    else if (values[0] instanceof String) { val2 = Integer.parseInt((String) values[1]); }\n-    else { throw new IllegalArgumentException(\"Unknown value for span: \" + values[1]); }\n-    return fromValues(val1, val2);\n-  }\n-\n+  \n   public int start() { return start; }\n   public int end() { return end; }\n   \ndiff --git a/src/edu/stanford/nlp/util/Characters.java b/src/edu/stanford/nlp/util/Characters.java\nindex d7748568f..c0f838a92 100644\n--- a/src/edu/stanford/nlp/util/Characters.java\n+++ b/src/edu/stanford/nlp/util/Characters.java\n@@ -54,14 +54,28 @@ public final class Characters {\n    */\n   public static boolean isPunctuation(char c) {\n     int cType = Character.getType(c);\n-    return ( \n-        cType == Character.START_PUNCTUATION ||\n+    return cType == Character.START_PUNCTUATION ||\n         cType == Character.END_PUNCTUATION ||\n         cType == Character.OTHER_PUNCTUATION ||\n         cType == Character.CONNECTOR_PUNCTUATION ||\n         cType == Character.DASH_PUNCTUATION ||\n         cType == Character.INITIAL_QUOTE_PUNCTUATION ||\n-        cType == Character.FINAL_QUOTE_PUNCTUATION);\n+        cType == Character.FINAL_QUOTE_PUNCTUATION;\n+  }\n+  \n+  /**\n+   * Returns true if a character is a symbol, and false\n+   * otherwise.\n+   * \n+   * @param c\n+   * @return\n+   */\n+  public static boolean isSymbol(char c) {\n+    int cType = Character.getType(c);\n+    return cType == Character.MATH_SYMBOL || \n+        cType == Character.CURRENCY_SYMBOL ||\n+        cType == Character.MODIFIER_SYMBOL ||\n+        cType == Character.OTHER_SYMBOL;\n   }\n \n   /**",
    "Simplify token management in protocol Query .": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java b/presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java\nindex 5dd57acb2e..8dfac27bc7 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java\n@@ -66,10 +66,10 @@ import java.util.List;\n import java.util.Map;\n import java.util.NoSuchElementException;\n import java.util.Optional;\n+import java.util.OptionalLong;\n import java.util.Set;\n import java.util.concurrent.Executor;\n import java.util.concurrent.ScheduledExecutorService;\n-import java.util.concurrent.atomic.AtomicLong;\n \n import static com.facebook.airlift.concurrent.MoreFutures.addTimeout;\n import static com.facebook.presto.SystemSessionProperties.isExchangeCompressionEnabled;\n@@ -78,6 +78,7 @@ import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n import static com.facebook.presto.util.Failures.toFailure;\n import static com.google.common.base.MoreObjects.firstNonNull;\n import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Verify.verify;\n import static com.google.common.util.concurrent.Futures.immediateFuture;\n import static com.google.common.util.concurrent.MoreExecutors.directExecutor;\n import static java.lang.String.format;\n@@ -101,13 +102,14 @@ class Query\n \n     private final PagesSerde serde;\n \n-    private final AtomicLong resultId = new AtomicLong();\n+    @GuardedBy(\"this\")\n+    private OptionalLong nextToken = OptionalLong.of(0);\n \n     @GuardedBy(\"this\")\n     private QueryResults lastResult;\n \n     @GuardedBy(\"this\")\n-    private String lastResultPath;\n+    private long lastToken = -1;\n \n     @GuardedBy(\"this\")\n     private List<Column> columns;\n@@ -266,8 +268,7 @@ class Query\n     public synchronized ListenableFuture<QueryResults> waitForResults(long token, UriInfo uriInfo, String scheme, Duration wait, DataSize targetResultSize)\n     {\n         // before waiting, check if this request has already been processed and cached\n-        String requestedPath = uriInfo.getAbsolutePath().getPath();\n-        Optional<QueryResults> cachedResult = getCachedResult(token, requestedPath);\n+        Optional<QueryResults> cachedResult = getCachedResult(token);\n         if (cachedResult.isPresent()) {\n             return immediateFuture(cachedResult.get());\n         }\n@@ -300,7 +301,7 @@ class Query\n         }\n     }\n \n-    private synchronized Optional<QueryResults> getCachedResult(long token, String requestedPath)\n+    private synchronized Optional<QueryResults> getCachedResult(long token)\n     {\n         // is this the first request?\n         if (lastResult == null) {\n@@ -308,18 +309,24 @@ class Query\n         }\n \n         // is the a repeated request for the last results?\n-        if (requestedPath.equals(lastResultPath)) {\n+        if (token == lastToken) {\n             // tell query manager we are still interested in the query\n             queryManager.recordHeartbeat(queryId);\n             return Optional.of(lastResult);\n         }\n \n-        if (token < resultId.get()) {\n+        // if this is a result before the lastResult, the data is gone\n+        if (token < lastToken) {\n             throw new WebApplicationException(Response.Status.GONE);\n         }\n \n+        // if this is a request for a result after the end of the stream, return not found\n+        if (!nextToken.isPresent()) {\n+            throw new WebApplicationException(Response.Status.NOT_FOUND);\n+        }\n+\n         // if this is not a request for the next results, return not found\n-        if (lastResult.getNextUri() == null || !requestedPath.equals(lastResult.getNextUri().getPath())) {\n+        if (token != nextToken.getAsLong()) {\n             // unknown token\n             throw new WebApplicationException(Response.Status.NOT_FOUND);\n         }\n@@ -330,12 +337,13 @@ class Query\n     private synchronized QueryResults getNextResult(long token, UriInfo uriInfo, String scheme, DataSize targetResultSize)\n     {\n         // check if the result for the token have already been created\n-        String requestedPath = uriInfo.getAbsolutePath().getPath();\n-        Optional<QueryResults> cachedResult = getCachedResult(token, requestedPath);\n+        Optional<QueryResults> cachedResult = getCachedResult(token);\n         if (cachedResult.isPresent()) {\n             return cachedResult.get();\n         }\n \n+        verify(nextToken.isPresent(), \"Can not generate next result when next token is not present\");\n+        verify(token == nextToken.getAsLong(), \"Expected token to equal next token\");\n         URI queryHtmlUri = uriInfo.getRequestUriBuilder()\n                 .scheme(scheme)\n                 .replacePath(\"ui/query.html\")\n@@ -399,17 +407,24 @@ class Query\n             data = ImmutableSet.of(ImmutableList.of(true));\n         }\n \n+        // advance next token\n         // only return a next if\n         // (1) the query is not done AND the query state is not FAILED\n         //   OR\n         // (2)there is more data to send (due to buffering)\n+        if ((!queryInfo.isFinalQueryInfo() && queryInfo.getState() != FAILED) || !exchangeClient.isClosed()) {\n+            nextToken = OptionalLong.of(token + 1);\n+        }\n+        else {\n+            nextToken = OptionalLong.empty();\n+        }\n+\n         URI nextResultsUri = null;\n-        if (!queryInfo.isFinalQueryInfo() && !queryInfo.getState().equals(QueryState.FAILED)\n-                || !exchangeClient.isClosed()) {\n-            nextResultsUri = createNextResultsUri(scheme, uriInfo);\n+        if (nextToken.isPresent()) {\n+            nextResultsUri = createNextResultsUri(scheme, uriInfo, nextToken.getAsLong());\n         }\n \n-        // update catalog and schema\n+        // update catalog, schema, and path\n         setCatalog = queryInfo.getSetCatalog();\n         setSchema = queryInfo.getSetSchema();\n \n@@ -442,14 +457,11 @@ class Query\n                 queryInfo.getUpdateType(),\n                 updateCount);\n \n-        cacheLastResults(queryResults, requestedPath);\n-        return queryResults;\n-    }\n-\n-    private synchronized void cacheLastResults(QueryResults queryResults, String requestedPath)\n-    {\n-        lastResultPath = requestedPath;\n+        // cache the new result\n+        lastToken = token;\n         lastResult = queryResults;\n+\n+        return queryResults;\n     }\n \n     private synchronized void closeExchangeClientIfNecessary(QueryInfo queryInfo)\n@@ -493,13 +505,13 @@ class Query\n         return Futures.transformAsync(queryManager.getStateChange(queryId, currentState), this::queryDoneFuture, directExecutor());\n     }\n \n-    private synchronized URI createNextResultsUri(String scheme, UriInfo uriInfo)\n+    private synchronized URI createNextResultsUri(String scheme, UriInfo uriInfo, long nextToken)\n     {\n         return uriInfo.getBaseUriBuilder()\n                 .scheme(scheme)\n                 .replacePath(\"/v1/statement/executing\")\n                 .path(queryId.toString())\n-                .path(String.valueOf(resultId.getAndIncrement()))\n+                .path(String.valueOf(nextToken))\n                 .replaceQuery(\"\")\n                 .queryParam(\"slug\", slug)\n      ",
    "Add unit test to support folders in zip files . . Add implementation to support folders in zip files . . Add backwards compatibility and separate entries for folders . . Add options to camel - core for ZipFileDataFormat and TarFileDataFormat . . Add unit": "diff --git a/camel-core/src/main/java/org/apache/camel/model/dataformat/TarFileDataFormat.java b/camel-core/src/main/java/org/apache/camel/model/dataformat/TarFileDataFormat.java\nindex 26153f86ea0..b9b5a0e4b5b 100644\n--- a/camel-core/src/main/java/org/apache/camel/model/dataformat/TarFileDataFormat.java\n+++ b/camel-core/src/main/java/org/apache/camel/model/dataformat/TarFileDataFormat.java\n@@ -37,6 +37,8 @@ public class TarFileDataFormat extends DataFormatDefinition {\n     private Boolean usingIterator;\n     @XmlAttribute\n     private Boolean allowEmptyDirectory;\n+    @XmlAttribute\n+    private Boolean preservePathElements;\n \n     public TarFileDataFormat() {\n         super(\"tarfile\");\n@@ -47,6 +49,9 @@ public class TarFileDataFormat extends DataFormatDefinition {\n         if (usingIterator != null) {\n             setProperty(camelContext, dataFormat, \"usingIterator\", usingIterator);\n         }\n+        if (preservePathElements != null) {\n+            setProperty(camelContext, dataFormat, \"preservePathElements\", preservePathElements);\n+        }\n     }\n \n     public Boolean getUsingIterator() {\n@@ -57,6 +62,10 @@ public class TarFileDataFormat extends DataFormatDefinition {\n         return allowEmptyDirectory;\n     }\n \n+    public Boolean getPreservePathElements() {\n+        return preservePathElements;\n+    }\n+\n     /**\n      * If the tar file has more then one entry, the setting this option to true, allows to work with the splitter EIP,\n      * to split the data using an iterator in a streaming mode.\n@@ -72,4 +81,12 @@ public class TarFileDataFormat extends DataFormatDefinition {\n     public void setAllowEmptyDirectory(Boolean allowEmptyDirectory) {\n         this.allowEmptyDirectory = allowEmptyDirectory;\n     }\n+\n+    /**\n+     * If the file name contains path elements, setting this option to true, allows the path to be maintained\n+     * in the tar file.\n+     */\n+    public void setPreservePathElements(Boolean preservePathElements) {\n+        this.preservePathElements = preservePathElements;\n+    }\n }\ndiff --git a/camel-core/src/main/java/org/apache/camel/model/dataformat/ZipFileDataFormat.java b/camel-core/src/main/java/org/apache/camel/model/dataformat/ZipFileDataFormat.java\nindex ff2dd608c32..4d98796d9d0 100644\n--- a/camel-core/src/main/java/org/apache/camel/model/dataformat/ZipFileDataFormat.java\n+++ b/camel-core/src/main/java/org/apache/camel/model/dataformat/ZipFileDataFormat.java\n@@ -38,6 +38,8 @@ public class ZipFileDataFormat extends DataFormatDefinition {\n     private Boolean usingIterator;\n     @XmlAttribute\n     private Boolean allowEmptyDirectory;\n+    @XmlAttribute\n+    private Boolean preservePathElements;\n \n     public ZipFileDataFormat() {\n         super(\"zipfile\");\n@@ -51,6 +53,9 @@ public class ZipFileDataFormat extends DataFormatDefinition {\n         if (allowEmptyDirectory != null) {\n             setProperty(camelContext, dataFormat, \"allowEmptyDirectory\", allowEmptyDirectory);\n         }\n+        if (preservePathElements != null) {\n+            setProperty(camelContext, dataFormat, \"preservePathElements\", preservePathElements);\n+        }\n     }\n \n     public Boolean getUsingIterator() {\n@@ -61,6 +66,10 @@ public class ZipFileDataFormat extends DataFormatDefinition {\n         return allowEmptyDirectory;\n     }\n \n+    public Boolean getPreservePathElements() {\n+        return preservePathElements;\n+    }\n+\n     /**\n      * If the zip file has more then one entry, the setting this option to true, allows to work with the splitter EIP,\n      * to split the data using an iterator in a streaming mode.\n@@ -77,4 +86,12 @@ public class ZipFileDataFormat extends DataFormatDefinition {\n         this.allowEmptyDirectory = allowEmptyDirectory;\n     }\n \n+    /**\n+     * If the file name contains path elements, setting this option to true, allows the path to be maintained\n+     * in the zip file.\n+     */\n+    public void setPreservePathElements(Boolean preservePathElements) {\n+        this.preservePathElements = preservePathElements;\n+    }\n+\n }\ndiff --git a/components/camel-tarfile/src/main/java/org/apache/camel/dataformat/tarfile/TarFileDataFormat.java b/components/camel-tarfile/src/main/java/org/apache/camel/dataformat/tarfile/TarFileDataFormat.java\nindex b226c6ee777..35b1a9c2605 100644\n--- a/components/camel-tarfile/src/main/java/org/apache/camel/dataformat/tarfile/TarFileDataFormat.java\n+++ b/components/camel-tarfile/src/main/java/org/apache/camel/dataformat/tarfile/TarFileDataFormat.java\n@@ -17,9 +17,12 @@\n package org.apache.camel.dataformat.tarfile;\n \n import java.io.BufferedInputStream;\n+import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.nio.file.Path;\n import java.nio.file.Paths;\n+import java.util.Iterator;\n \n import org.apache.camel.Exchange;\n import org.apache.camel.converter.stream.OutputStreamBuilder;\n@@ -43,6 +46,7 @@ import static org.apache.camel.Exchange.FILE_NAME;\n public class TarFileDataFormat extends ServiceSupport implements DataFormat, DataFormatName {\n     private boolean usingIterator;\n     private boolean allowEmptyDirectory;\n+    private boolean preservePathElements;\n \n     @Override\n     public String getDataFormatName() {\n@@ -51,13 +55,14 @@ public class TarFileDataFormat extends ServiceSupport implements DataFormat, Dat\n \n     @Override\n     public void marshal(final Exchange exchange, final Object graph, final OutputStream stream) throws Exception {\n-        String filename = exchange.getIn().getHeader(FILE_NAME, String.class);\n+        String filename;\n+        String filepath = exchange.getIn().getHeader(FILE_NAME, String.class);\n         Long filelength = exchange.getIn().getHeader(FILE_LENGTH, Long.class);\n-        if (filename == null) {\n+        if (filepath == null) {\n             // generate the file name as the camel file component would do\n-            filename = StringHelper.sanitize(exchange.getIn().getMessageId());\n+            filename = filepath = StringHelper.sanitize(exchange.getIn().getMessageId());\n         } else {\n-            filename = Paths.get(filename).getFileName().toString(); // remove any path elements\n+            filename = Paths.get(filepath).getFileName().toString(); // remove any path elements\n         }\n \n         TarArchiveOutputStream tos = new TarArchiveOutputStream(stream);\n@@ -69,9 +74,11 @@ public class TarFileDataFormat extends ServiceSupport implements DataFormat, Dat\n             filelength = (long) is.available();\n         }\n \n-        TarArchiveEntry entry = new TarArchiveEntry(filename);\n-        entry.setSize(filelength);\n-        tos.putArchiveEntry(entry);\n+        if (preservePathElements) {\n+            createTarEntries(tos, filepath, filelength);\n+        } else {\n+            createTarEntries(tos, filename, filelength);\n+        }\n \n         try {\n             IOHelper.copy(is, tos);\n@@ -115,6 +122,31 @@ public class TarFileDataFormat extends ServiceSupport implements DataFormat, Dat\n         }\n     }\n \n+    private void createTarEntries(TarArchiveOutputStream tos, String filepath, Long filelength) throws IOException {\n+        Iterator<Path> elements = Paths.get(filepath).iterator();\n+        StringBuilder sb = new StringBuilder();\n+\n+        while (elements.hasNext()) {\n+            Path path = elements.next();\n+            String element = path.toString();\n+            Long length = filelength;\n+\n+            // If there are more elements to come this element is a directory\n+            // The \"/\" at the end tells the TarEntry it is a folder\n+            if (elements.hasNext()) {\n+                element += \"/\";\n+                length = 0L;\n+            }\n+\n+            // Each entry needs the complete path, including previous created folders.\n+            TarArchiveEntry entry = new TarArchiveEntry(sb + element);\n+            entry.setSize(length);\n+            tos.putArchiveEntry(entry);\n+\n+            sb.append(element);\n+        }\n+    }\n+\n     public boolean isUsingIterator() {\n         return usingIterator;\n     }\n@@ -131,6 +163,14 @@ public class TarFileDataFormat extends ServiceSupport implements DataFormat, Dat\n         this.allowEmptyDirectory = allowEmptyDirectory;\n     }\n \n+    public boolean isPreservePathElements() {\n+        return preservePathElements;\n+    }\n+\n+    public void setPreservePathElements(boolean preservePathElements) {\n+        this.preservePathElements = preservePathElements;\n+    }\n+\n     @Override\n     protected void doStart() throws Exception {\n         // noop\ndiff --git a/components/camel-tarfile/src/test/java/org/apache/camel/dataformat/tarfile/TarFileDataFormatTest.java b/components/camel-tarfile/src/test/java/org/apache/camel/dataformat/tarfile/TarFileDataFormatTest.java\nindex 7f8b79201f9..b74cfb61458 100644\n--- a/components/camel-tarfile/src/test/java/org/apache/camel/dataformat/tarfile/TarFileDataFormatTest.java\n+++ b/components/camel-tarfile/src/test/java/org/apache/camel/dataformat/tarfile/TarFileDataFormatTest.java\n@@ -43,6 +43,7 @@ import static org.apache.camel.Exchange.FILE_NAME;\n import static org.apache.camel.dataformat.tarfile.TarUtils.TEXT;\n import static org.apache.camel.dataformat.tarfile.TarUtils.getBytes;\n import static org.apache.camel.dataformat.tarfile.TarUtils.getTaredText;\n+import static org.apache.camel.dataformat.tarfile.TarUtils.getTaredTextInFolder;\n \n /**\n  * Unit tests for {@link TarFileDataFormat}.\n@@ -80,6 +81,36 @@ public class TarFileDataFormatTest extends CamelTestSupport {\n         assertTrue(ObjectHelper.equalByteArray(getTaredText(\"poem.txt\"), (byte[]) exchange.getIn().getBody()));\n     }\n \n+    @Test\n+    public void testTarWithPathElements() throws Exception {\n+        MockEndpoint mock = getMockEndpoint(\"mock:tar\");\n+        mock.expectedMessageCount(1);\n+        mock.expectedHeaderReceived(FILE_NAME, \"poem.txt.tar\");\n+\n+        template.sendBodyAndHeader(\"direct:tar\", TEXT, FILE_NAME, \"poems/poem.txt\");\n+\n+        assertMockEndpointsSatisfied();\n+\n+        Exchange exchange = mock.getReceivedExchanges().get(0);\n+        assertTrue(ObjectHelper.equalByteArray(getTaredText(\"poem.txt\"), (byte[]) exchange.getIn().getBody()));\n+    }\n+\n+    @Test\n+    public void testTarWithPreservedPathElements() throws Exception {\n+        MockEndpoint mock = getMockEndpoint(\"mock:tar\");\n+        mock.expectedMessageCount(1);\n+        mock.expectedHeaderReceived(FILE_NAME, \"poem.txt.tar\");\n+\n+        tar.setPreservePathElements(true);\n+\n+        template.sendBodyAndHeader(\"direct:tar\", TEXT, FILE_NAME, \"poems/poem.txt\");\n+\n+        assertMockEndpointsSatisfied();\n+\n+        Exchange exchange = mock.getReceivedExchanges().get(0);\n+        assertTrue(ObjectHelper.equalByteArray(getTaredTextInFolder(\"poems/\", \"poems/poem.txt\"), (byte[]) exchange.getIn().getBody()));\n+    }\n+\n     @Test\n     public void testUntar() throws Exception {\n         getMockEndpoint(\"mock:untar\").expectedBodiesReceived(TEXT);\ndiff --git a/components/camel-tarfile/src/test/java/org/apache/camel/dataformat/tarfile/TarUtils.java b/components/camel-tarfile/src/test/java/org/apache/camel/dataformat/tarfile/TarUtils.java\nindex df07907001f..4acf633682b 100644\n--- a/components/camel-tarfile/src/test/java/org/apache/camel/dataformat/tarfile/TarUtils.java\n+++ b/components/camel-tarfile/src/test/java/org/apache/camel/dataformat/tarfile/TarUtils.java\n@@ -59,6 +59,27 @@ final class TarUtils {\n         return baos.toByteArray();\n     }\n \n+    static byte[] getTaredTextInFolder(String folder, String file) throws IOException {\n+        ByteArrayInputStream bais = new ByteArrayInputStream(TEXT.getBytes(\"UTF-8\"));\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        TarArchiveOutputStream tos = new TarArchiveOutputStream(baos);\n+        try {\n+            TarArchiveEntry folderEntry = new TarArchiveEntry(folder);\n+            folderEntry.setSize(0L);\n+            tos.putArchiveEntry(folderEntry);\n+\n+            TarArchiveEntry fileEntry = new TarArchiveEntry(file);\n+            fileEntry.setSize(bais.available());\n+            tos.putArchiveEntry(fileEntry);\n+\n+            IOHelper.copy(bais, tos);\n+        } finally {\n+            tos.closeArchiveEntry();\n+            IOHelper.close(bais, tos);\n+        }\n+        return baos.toByteArray();\n+    }\n+\n     static byte[] getBytes(File file) throws IOException {\n         FileInputStream fis = new FileInputStream(file);\n         ByteArrayOutputStream baos = new ByteArrayOutputStream();\ndiff --git a/components/camel-zipfile/src/main/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormat.java b/components/camel-zipfile/src/main/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormat.java\nindex 171858e0b69..28ce82c5c65 100644\n--- a/components/camel-zipfile/src/main/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormat.java\n+++ b/components/camel-zipfile/src/main/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormat.java\n@@ -16,9 +16,12 @@\n  */\n package org.apache.camel.dataformat.zipfile;\n \n+import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.nio.file.Path;\n import java.nio.file.Paths;\n+import java.util.Iterator;\n import java.util.zip.ZipEntry;\n import java.util.zip.ZipInputStream;\n import java.util.zip.ZipOutputStream;\n@@ -40,6 +43,7 @@ import static org.apache.camel.Exchange.FILE_NAME;\n public class ZipFileDataFormat extends ServiceSupport implements DataFormat, DataFormatName {\n     private boolean usingIterator;\n     private boolean allowEmptyDirectory;\n+    private boolean preservePathElements;\n \n     @Override\n     public String getDataFormatName() {\n@@ -48,16 +52,22 @@ public class ZipFileDataFormat extends ServiceSupport implements DataFormat, Dat\n \n     @Override\n     public void marshal(final Exchange exchange, final Object graph, final OutputStream stream) throws Exception {\n-        String filename = exchange.getIn().getHeader(FILE_NAME, String.class);\n-        if (filename == null) {\n+        String filename;\n+        String filepath = exchange.getIn().getHeader(FILE_NAME, String.class);\n+        if (filepath == null) {\n             // generate the file name as the camel file component would do\n-            filename = StringHelper.sanitize(exchange.getIn().getMessageId());\n+            filename = filepath = StringHelper.sanitize(exchange.getIn().getMessageId());\n         } else {\n-            filename = Paths.get(filename).getFileName().toString(); // remove any path elements\n+            filename = Paths.get(filepath).getFileName().toString(); // remove any path elements\n         }\n \n         ZipOutputStream zos = new ZipOutputStream(stream);\n-        zos.putNextEntry(new ZipEntry(filename));\n+\n+        if (preservePathElements) {\n+            createZipEntries(zos, filepath);\n+        } else {\n+            createZipEntries(zos, filename);\n+        }\n \n         InputStream is = exchange.getContext().getTypeConverter().mandatoryConvertTo(InputStream.class, exchange, graph);\n \n@@ -100,6 +110,27 @@ public class ZipFileDataFormat extends ServiceSupport implements DataFormat, Dat\n         }\n     }\n \n+    private void createZipEntries(ZipOutputStream zos, String filepath) throws IOException {\n+        Iterator<Path> elements = Paths.get(filepath).iterator();\n+        StringBuilder sb = new StringBuilder();\n+\n+        while (elements.hasNext()) {\n+            Path path = elements.next();\n+            String element = path.toString();\n+\n+            // If there are more elements to come this element is a directory\n+            // The \"/\" at the end tells the ZipEntry it is a folder\n+            if (elements.hasNext()) {\n+                element += \"/\";\n+            }\n+\n+            // Each entry needs the complete path, including previous created folders.\n+            zos.putNextEntry(new ZipEntry(sb + element));\n+\n+            sb.append(element);\n+        }\n+    }\n+\n     public boolean isUsingIterator() {\n         return usingIterator;\n     }\n@@ -116,6 +147,14 @@ public class ZipFileDataFormat extends ServiceSupport implements DataFormat, Dat\n         this.allowEmptyDirectory = allowEmptyDirectory;\n     }\n \n+    public boolean isPreservePathElements() {\n+        return preservePathElements;\n+    }\n+\n+    public void setPreservePathElements(boolean preservePathElements) {\n+        this.preservePathElements = preservePathElements;\n+    }\n+\n     @Override\n     protected void doStart() throws Exception {\n         // noop\n@@ -125,4 +164,4 @@ public class ZipFileDataFormat extends ServiceSupport implements DataFormat, Dat\n     protected void doStop() throws Exception {\n         // noop\n     }\n-}\n\\ No newline at end of file\n+}\ndiff --git a/components/camel-zipfile/src/test/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormatTest.java b/components/camel-zipfile/src/test/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormatTest.java\nindex 305283eff48..63b1b033312 100644\n--- a/components/camel-zipfile/src/test/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormatTest.java\n+++ b/components/camel-zipfile/src/test/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormatTest.java\n@@ -103,6 +103,28 @@ public class ZipFileDataFormatTest extends CamelTestSupport {\n         assertMockEndpointsSatisfied();\n     }\n \n+    @Test\n+    public void testZipWithPathElements() throws Exception {\n+        getMockEndpoint(\"mock:zip\").expectedBodiesReceived(getZippedText(\"poem.txt\"));\n+        getMockEndpoint(\"mock:zip\").expectedHeaderReceived(FILE_NAME, \"poem.txt.zip\");\n+\n+        template.sendBodyAndHeader(\"direct:zip\", TEXT, FILE_NAME, \"poems/poem.txt\");\n+\n+        assertMockEndpointsSatisfied();\n+    }\n+\n+    @Test\n+    public void testZipWithPreservedPathElements() throws Exception {\n+        zip.setPreservePathElements(true);\n+\n+        getMockEndpoint(\"mock:zip\").expectedBodiesReceived(getZippedTextInFolder(\"poems/\", \"poems/poem.txt\"));\n+        getMockEndpoint(\"mock:zip\").expectedHeaderReceived(FILE_NAME, \"poem.txt.zip\");\n+\n+        template.sendBodyAndHeader(\"direct:zip\", TEXT, FILE_NAME, \"poems/poem.txt\");\n+\n+        assertMockEndpointsSatisfied();\n+    }\n+\n     @Test\n     public void testUnzip() throws Exception {\n         getMockEndpoint(\"mock:unzip\").expectedBodiesReceived(TEXT);\n@@ -298,6 +320,20 @@ public class ZipFileDataFormatTest extends CamelTestSupport {\n         return baos.toByteArray();\n     }\n \n+    private static byte[] getZippedTextInFolder(String folder, String file) throws IOException {\n+        ByteArrayInputStream bais = new ByteArrayInputStream(TEXT.getBytes(\"UTF-8\"));\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        ZipOutputStream zos = new ZipOutputStream(baos);\n+        try {\n+            zos.putNextEntry(new ZipEntry(folder));\n+            zos.putNextEntry(new ZipEntry(file));\n+            IOHelper.copy(bais, zos);\n+        } finally {\n+            IOHelper.close(bais, zos);\n+        }\n+        return baos.toByteArray();\n+    }\n+\n     private static byte[] getBytes(File file) throws IOException {\n         FileInputStream fis = new FileInputStream(file);\n         ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "Fix the bug that confirm discarding unsaved change does not work .": "diff --git a/web/src/main/java/com/gitplex/server/web/page/base/base.js b/web/src/main/java/com/gitplex/server/web/page/base/base.js\nindex 57cf101eb..745645c81 100644\n--- a/web/src/main/java/com/gitplex/server/web/page/base/base.js\n+++ b/web/src/main/java/com/gitplex/server/web/page/base/base.js\n@@ -206,6 +206,7 @@ gitplex.server = {\n \t\t\tif ($dirtyForms.length != 0) {\n \t\t\t\tif (confirm(\"There are unsaved changes, do you want to discard and continue?\")) {\n \t\t\t\t\tgitplex.server.form.clearAutosavings($dirtyForms);\n+\t\t\t\t\treturn true;\n \t\t\t\t} else {\n \t\t\t\t\treturn false;\n \t\t\t\t}",
    "Added support for non - blocking resolution ( before View rendering ) of reactive variables specified by dialects as execution attributes": "diff --git a/thymeleaf-spring5/ChangeLog.txt b/thymeleaf-spring5/ChangeLog.txt\nindex 4fe4cc633..2ec0356fe 100755\n--- a/thymeleaf-spring5/ChangeLog.txt\n+++ b/thymeleaf-spring5/ChangeLog.txt\n@@ -9,6 +9,8 @@\n   SpringTemplateEngine) in order to instruct th:field to render the <input type=\"hidden\" ...> associated with\n   checkbox fields before the checkbox itself and not after, in order to improve compatibility with several CSS-based\n   frameworks.\n+- Added support for non-blocking resolution (before View rendering) of reactive variables specified by dialects\n+  as execution attributes.\n - Added \"Automatic-Module-Name: thymeleaf-spring5\" to MANIFEST.MF for Java 9+ JPMS.\n \n \ndiff --git a/thymeleaf-spring5/src/main/java/org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.java b/thymeleaf-spring5/src/main/java/org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.java\nindex a9894c5ce..1d139b15f 100644\n--- a/thymeleaf-spring5/src/main/java/org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.java\n+++ b/thymeleaf-spring5/src/main/java/org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.java\n@@ -28,6 +28,8 @@\n import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n \n import org.reactivestreams.Publisher;\n import org.slf4j.Logger;\n@@ -102,6 +104,38 @@ public class ThymeleafReactiveView extends AbstractView implements BeanNameAware\n      */\n     public static final int DEFAULT_RESPONSE_CHUNK_SIZE_BYTES = Integer.MAX_VALUE;\n \n+\n+    /**\n+     * <p>\n+     *   This prefix should be used in order to allow dialects to provide reactive stream objects\n+     *   that should be resolved (in an unblocked manner) just before the execution of the view. The idea is to allow\n+     *   these streams to be included in the standard reactive Spring view model resolution mechanisms so that Thymeleaf\n+     *   does not have to block during the execution of the view in order to obtain the value. The result will be as\n+     *   if reactive stream objects had been added by the controller methods.\n+     * </p>\n+     * <p>\n+     *   The name of the attributes being added to the Model will be the name of the execution attribute minus the\n+     *   prefix. So <tt>ThymeleafReactiveModelAdditions:somedata</tt> will result in a Model attribute called\n+     *   <tt>somedata</tt>.\n+     * </p>\n+     * <p>\n+     *   Values of these execution attributes are allowed to be:\n+     * </p>\n+     * <ul>\n+     *     <li><tt>Publisher&lt;?&gt;</tt> (including Flux&lt;?&gt; and Mono&lt;?&gt;).</li>\n+     *     <li><tt>Supplier&lt;? extends Publisher&lt;?&gt;&gt;</tt>: The supplier will be called at <tt>View</tt>\n+     *          rendering time and the result will be added to the Model.</li>\n+     *     <li><tt>Function&lt;ServerWebExchange,? extends Publisher&lt;?&gt;&gt;</tt>: The function will be called\n+     *          at <tt>View</tt> rendering time and the result will be added to the Model.</li>\n+     * </ul>\n+     * <p>\n+     *     Value: <tt>ThymeleafReactiveModelAdditions:</tt>\n+     * </p>\n+     *\n+     * @since 3.0.10\n+     */\n+    public static final String REACTIVE_MODEL_ADDITIONS_EXECUTION_ATTRIBUTE_PREFIX = \"ThymeleafReactiveModelAdditions:\";\n+\n     private static final String WEBFLUX_CONVERSION_SERVICE_NAME = \"webFluxConversionService\";\n \n \n@@ -284,6 +318,58 @@ public void setStaticVariables(final Map<String, ?> variables) {\n \n \n \n+    @Override\n+    public Mono<Void> render(final Map<String, ?> model, final MediaType contentType, final ServerWebExchange exchange) {\n+\t    // We will prepare the model for rendering by checking if the configured dialects have specified any execution\n+        // attributes to be added to the model during preparation (e.g. reactive streams that will need to be previously\n+        // resolved)\n+\n+        final ISpringWebFluxTemplateEngine viewTemplateEngine = getTemplateEngine();\n+\n+        if (viewTemplateEngine == null) {\n+            return Mono.error(new IllegalArgumentException(\"Property 'thymeleafTemplateEngine' is required\"));\n+        }\n+\n+        final IEngineConfiguration configuration = viewTemplateEngine.getConfiguration();\n+        final Map<String,Object> executionAttributes = configuration.getExecutionAttributes();\n+\n+        // execution attribute -> process the model somehow? in SpringSecurityDialect there should be nothing that\n+        // depends from reactor -> no Flux, o Flux extraction. So just an object of an interface of some kind?\n+        // Such object cannot be even instantiated when we are not using WebFlux!\n+\n+        for (final String executionAttributeName : executionAttributes.keySet()) {\n+\n+            if (executionAttributeName != null && executionAttributeName.startsWith(REACTIVE_MODEL_ADDITIONS_EXECUTION_ATTRIBUTE_PREFIX)) {\n+                // This execution attribute defines a reactive stream object that should be added to the model for\n+                // non-blocking resolution at view rendering time\n+\n+                final Object executionAttributeValue = executionAttributes.get(executionAttributeName);\n+                final String modelAttributeName =\n+                        executionAttributeName.substring(REACTIVE_MODEL_ADDITIONS_EXECUTION_ATTRIBUTE_PREFIX.length());\n+                Publisher<?> modelAttributeValue = null;\n+\n+                if (executionAttributeValue != null) {\n+                    if (executionAttributeValue instanceof Publisher<?>) {\n+                        modelAttributeValue = (Publisher<?>) executionAttributeValue;\n+                    } else if (executionAttributeValue instanceof Supplier<?>){\n+                        final Supplier<Publisher<?>> supplier = (Supplier<Publisher<?>>) executionAttributeValue;\n+                        modelAttributeValue = supplier.get();\n+                    } else if (executionAttributeValue instanceof Function<?,?>) {\n+                        final Function<ServerWebExchange, Publisher<?>> function = (Function<ServerWebExchange, Publisher<?>>) executionAttributeValue;\n+                        modelAttributeValue = function.apply(exchange);\n+                    }\n+                }\n+\n+                ((Map<String,Object>)model).put(modelAttributeName, modelAttributeValue);\n+\n+            }\n+\n+        }\n+\n+        return super.render(model, contentType, exchange);\n+\n+    }\n+\n \n \n     @Override",
    "avoid full parser for simple paths .": "diff --git a/src/main/java/com/typesafe/config/impl/Parser.java b/src/main/java/com/typesafe/config/impl/Parser.java\nindex e7788e2..9f2c8d8 100644\n--- a/src/main/java/com/typesafe/config/impl/Parser.java\n+++ b/src/main/java/com/typesafe/config/impl/Parser.java\n@@ -511,6 +511,10 @@ final class Parser {\n     static ConfigOrigin apiOrigin = new SimpleConfigOrigin(\"path parameter\");\n \n     static Path parsePath(String path) {\n+        Path speculated = speculativeFastParsePath(path);\n+        if (speculated != null)\n+            return speculated;\n+\n         StringReader reader = new StringReader(path);\n \n         try {\n@@ -521,4 +525,41 @@ final class Parser {\n             reader.close();\n         }\n     }\n+\n+    // the idea is to see if the string has any chars that might require the\n+    // full parser to deal with.\n+    private static boolean hasUnsafeChars(String s) {\n+        for (int i = 0; i < s.length(); ++i) {\n+            char c = s.charAt(i);\n+            if (Character.isLetter(c) || c == '.')\n+                continue;\n+            else\n+                return true;\n+        }\n+        return false;\n+    }\n+\n+    private static void appendPathString(PathBuilder pb, String s) {\n+        int splitAt = s.indexOf('.');\n+        if (splitAt < 0) {\n+            pb.appendKey(s);\n+        } else {\n+            pb.appendKey(s.substring(0, splitAt));\n+            appendPathString(pb, s.substring(splitAt + 1));\n+        }\n+    }\n+\n+    // do something much faster than the full parser if\n+    // we just have something like \"foo\" or \"foo.bar\"\n+    private static Path speculativeFastParsePath(String path) {\n+        String s = path.trim();\n+        if (hasUnsafeChars(s))\n+            return null;\n+        if (s.startsWith(\".\") || s.endsWith(\".\") || s.contains(\"..\"))\n+            return null; // let the full parser throw the error\n+\n+        PathBuilder pb",
    "Decrease the TM JVM metaspace size default value to 96MB . .": "diff --git a/docs/_includes/generated/task_manager_memory_configuration.html b/docs/_includes/generated/task_manager_memory_configuration.html\nindex 739273cd705..afa022c8972 100644\n--- a/docs/_includes/generated/task_manager_memory_configuration.html\n+++ b/docs/_includes/generated/task_manager_memory_configuration.html\n@@ -28,7 +28,7 @@\n         </tr>\n         <tr>\n             <td><h5>taskmanager.memory.jvm-metaspace.size</h5></td>\n-            <td style=\"word-wrap: break-word;\">134217728 bytes</td>\n+            <td style=\"word-wrap: break-word;\">100663296 bytes</td>\n             <td>MemorySize</td>\n             <td>JVM Metaspace Size for the TaskExecutors.</td>\n         </tr>\ndiff --git a/flink-core/src/main/java/org/apache/flink/configuration/TaskManagerOptions.java b/flink-core/src/main/java/org/apache/flink/configuration/TaskManagerOptions.java\nindex a1748ee30b7..a1a91cb8cbf 100644\n--- a/flink-core/src/main/java/org/apache/flink/configuration/TaskManagerOptions.java\n+++ b/flink-core/src/main/java/org/apache/flink/configuration/TaskManagerOptions.java\n@@ -389,7 +389,7 @@ public class TaskManagerOptions {\n \tpublic static final ConfigOption<MemorySize> JVM_METASPACE =\n \t\tkey(\"taskmanager.memory.jvm-metaspace.size\")\n \t\t\t.memoryType()\n-\t\t\t.defaultValue(MemorySize.parse(\"128m\"))\n+\t\t\t.defaultValue(MemorySize.parse(\"96m\"))\n \t\t\t.withDescription(\"JVM Metaspace Size for the TaskExecutors.\");\n \n \t/**",
    "Replace AUTHORS . md by an updated MAINTAINERS . md ( <issue_id> )": "diff --git a/AUTHORS.md b/AUTHORS.md\ndeleted file mode 100644\nindex b02544d..0000000\n--- a/AUTHORS.md\n+++ /dev/null\n@@ -1,17 +0,0 @@\n-The Prometheus project was started by Matt T. Proud (emeritus) and\n-Julius Volz in 2012.\n-\n-Maintainers of this repository:\n-\n-* Brian Brazil <brian.brazil@robustperception.io>\n-\n-The following individuals have contributed code to this repository\n-(listed in alphabetical order):\n-\n-* Barisa Obradovic <barisa.obradovic@gmail.com>\n-* Brian Brazil <brian.brazil@robustperception.io>\n-* Conor Hennessy <conor@soundcloud.com>\n-* Julius Volz <julius.volz@gmail.com>\n-* Levi Lovelock\n-* Peter Rossbach <peterrossbach@me.com>\n-\ndiff --git a/MAINTAINERS.md b/MAINTAINERS.md\nnew file mode 100644\nindex 0000000..d1cb20b\n--- /dev/null\n+++ b/MAINTAINERS.md\n@@ -0,0 +1 @@\n+* Brian Brazil <brian.brazil@robustperception.io>",
    "adding setId for TaskImpl and default constructor for ProcessInstanceImpl": "diff --git a/activiti-api-process-model-impl/src/main/java/org/activiti/api/runtime/model/impl/ProcessInstanceImpl.java b/activiti-api-process-model-impl/src/main/java/org/activiti/api/runtime/model/impl/ProcessInstanceImpl.java\nindex 8fd3731ad4..d8b1b9b919 100644\n--- a/activiti-api-process-model-impl/src/main/java/org/activiti/api/runtime/model/impl/ProcessInstanceImpl.java\n+++ b/activiti-api-process-model-impl/src/main/java/org/activiti/api/runtime/model/impl/ProcessInstanceImpl.java\n@@ -35,6 +35,9 @@ public class ProcessInstanceImpl implements ProcessInstance {\n     private String parentId;\n     private Integer processDefinitionVersion;\n \n+    public ProcessInstanceImpl() {\n+    }\n+\n     @Override\n     public String getId() {\n         return id;\ndiff --git a/activiti-api-task-model-impl/src/main/java/org/activiti/api/task/model/impl/TaskImpl.java b/activiti-api-task-model-impl/src/main/java/org/activiti/api/task/model/impl/TaskImpl.java\nindex ca5493b97f..ff10dd7656 100644\n--- a/activiti-api-task-model-impl/src/main/java/org/activiti/api/task/model/impl/TaskImpl.java\n+++ b/activiti-api-task-model-impl/src/main/java/org/activiti/api/task/model/impl/TaskImpl.java\n@@ -49,7 +49,9 @@ public class TaskImpl implements Task {\n         this.status = status;\n     }\n \n-\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n \n     public String getId() {\n         return id;",
    "Updated version to 1 . 3 . 2 - SNAPSHOT": "diff --git a/README.adoc b/README.adoc\nindex 82eed26..2ac66e4 100644\n--- a/README.adoc\n+++ b/README.adoc\n@@ -27,7 +27,7 @@ image::src/docs/asciidoc/images/Swagger2Markup.PNG[]\n image::src/docs/asciidoc/images/Swagger2Markup_definitions.PNG[]\n \n == Reference documentation\n-- http://swagger2markup.github.io/swagger2markup/1.3.0/[Reference Documentation]\n+- http://swagger2markup.github.io/swagger2markup/1.3.1/[Reference Documentation]\n - https://github.com/Swagger2Markup/swagger2markup/blob/master/RELEASENOTES.adoc[Release notes]\n - https://github.com/Swagger2Markup/spring-swagger2markup-demo[Demo using Swagger2Markup, Spring Boot, Springfox and spring-restdocs]\n \ndiff --git a/build.gradle b/build.gradle\nindex c763f42..6079afd 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -13,7 +13,7 @@ buildscript {\n     }\n }\n description = 'swagger2markup Build'\n-version = '1.3.1'\n+version = '1.3.2-SNAPSHOT'\n ext.releaseVersion = '1.3.1'\n group = 'io.github.swagger2markup'\n ",
    "revise cache API .": "diff --git a/org.springframework.context/src/test/java/org/springframework/cache/vendor/AbstractNativeCacheTest.java b/org.springframework.context/src/test/java/org/springframework/cache/vendor/AbstractNativeCacheTest.java\nindex 55abdf165b..45832d66cc 100644\n--- a/org.springframework.context/src/test/java/org/springframework/cache/vendor/AbstractNativeCacheTest.java\n+++ b/org.springframework.context/src/test/java/org/springframework/cache/vendor/AbstractNativeCacheTest.java\n@@ -63,7 +63,7 @@ public abstract class AbstractNativeCacheTest<T> {\n \r\n \t\tassertNull(cache.get(key));\r\n \t\tcache.put(key, value);\r\n-\t\tassertEquals(value, cache.get(key));\r\n+\t\tassertEquals(value, cache.get(key).get());\r\n \t}\r\n \r\n \t@Test\r",
    "Add Linus Dietz as developer : party :": "diff --git a/DEVELOPERS b/DEVELOPERS\nindex ce33c7f77e..62ba204198 100644\n--- a/DEVELOPERS\n+++ b/DEVELOPERS\n@@ -6,3 +6,4 @@ Matthias Geiger (since 2015)\n Oscar Gustafsson (since 2015)\n Tobias Diez (since 2015)\n Christoph Schwentker (since 2016)\n+Linus Dietz (since 2017)",
    "Add missing class .": "diff --git a/library/src/main/java/com/google/android/exoplayer/util/PriorityHandlerThread.java b/library/src/main/java/com/google/android/exoplayer/util/PriorityHandlerThread.java\nnew file mode 100644\nindex 0000000000..86f77ffa3b\n--- /dev/null\n+++ b/library/src/main/java/com/google/android/exoplayer/util/PriorityHandlerThread.java\n@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (C) 2014 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.android.exoplayer.util;\n+\n+import android.os.HandlerThread;\n+import android.os.Process;\n+\n+/**\n+ * A {@link HandlerThread} with a specified process priority.\n+ */\n+public class PriorityHandlerThread extends HandlerThread {\n+\n+  private final int priority;\n+\n+  /**\n+   * @param name The name of the thread.\n+   * @param priority The priority level. See {@link Process#setThreadPriority(int)} for details.\n+   */\n+  public PriorityHandlerThread(String name, int priority) {\n+    super(name);\n+    this.priority = priority;\n+  }\n+\n+  @Override\n+  public void run() {\n+    Process.setThreadPriority(priority);\n+    super.run();\n+  }\n+\n+}",
    "Remove more unused defines": "diff --git a/document/src/vespa/document/fieldvalue/serializablearray.cpp b/document/src/vespa/document/fieldvalue/serializablearray.cpp\nindex a2d92100dde..6309338eb3b 100644\n--- a/document/src/vespa/document/fieldvalue/serializablearray.cpp\n+++ b/document/src/vespa/document/fieldvalue/serializablearray.cpp\n@@ -191,7 +191,7 @@ SerializableArray::deCompress() // throw (DeserializeException)\n         if (unCompressed.getDataLen() != (size_t)_uncompressedLength) {\n             throw DeserializeException(\n                     vespalib::make_string(\n-                            \"Did not decompress to the expected length: had %\" PRIu64 \", wanted %\" PRId32 \", got %\" PRIu64,\n+                            \"Did not decompress to the expected length: had %\" PRIu64 \", wanted %d, got %\" PRIu64,\n                             _compSerData->getRemaining(), _uncompressedLength, unCompressed.getDataLen()),\n                     VESPA_STRLOC);\n         }\ndiff --git a/fastos/src/vespa/fastos/thread.h b/fastos/src/vespa/fastos/thread.h\nindex 1bbda9d7372..a6ef359342a 100644\n--- a/fastos/src/vespa/fastos/thread.h\n+++ b/fastos/src/vespa/fastos/thread.h\n@@ -15,6 +15,7 @@\n #include <vespa/fastos/mutex.h>\n #include <vespa/fastos/cond.h>\n \n+typedef pthread_t FastOS_ThreadId;\n \n class FastOS_Runnable;\n class FastOS_ThreadInterface;\ndiff --git a/fastos/src/vespa/fastos/types.h b/fastos/src/vespa/fastos/types.h\nindex ea7bf7a5a88..fddf79437d4 100644\n--- a/fastos/src/vespa/fastos/types.h\n+++ b/fastos/src/vespa/fastos/types.h\n@@ -58,10 +58,6 @@\n \n #include <sys/socket.h>\n \n-#ifndef SHUT_RDWR\n-#define SHUT_RDWR 2\n-#endif\n-\n #include <netinet/in.h>\n #include <arpa/inet.h>\n #include <netdb.h>\n@@ -113,7 +109,7 @@\n #include <getopt.h>\n \n /* 64bit printf specifiers */\n-#ifdef FASTOS_64BIT_LONG\n+#if (__WORDSIZE == 64)\n \n   #ifndef PRIu64\n     #define PRIu64        \"lu\"\n@@ -125,5 +121,3 @@\n #else /* ! FASTOS_64BIT_LONG */\n   #error \"Only 64 environments are supported.\"\n #endif /* FASTOS_64BIT_LONG */\n-\n-typedef pthread_t FastOS_ThreadId;\ndiff --git a/fastos/src/vespa/fastos/unix_socket.cpp b/fastos/src/vespa/fastos/unix_socket.cpp\nindex 8e0b4b5e658..a6cce42bfad 100644\n--- a/fastos/src/vespa/fastos/unix_socket.cpp\n+++ b/fastos/src/vespa/fastos/unix_socket.cpp\n@@ -20,10 +20,6 @@ bool FastOS_UNIX_Socket::Close()\n     return rc;\n }\n \n-#ifndef SHUT_WR\n-#define SHUT_WR 1\n-#endif\n-\n bool FastOS_UNIX_Socket::Shutdown()\n {\n     bool rc=true;\ndiff --git a/vespalib/src/vespa/vespalib/util/atomic.h b/vespalib/src/vespa/vespalib/util/atomic.h\nindex 77f1f7554ae..c9259671cae 100644\n--- a/vespalib/src/vespa/vespalib/util/atomic.h\n+++ b/vespalib/src/vespa/vespalib/util/atomic.h\n@@ -67,7 +67,7 @@ public:\n     static inline int64_t postDec(volatile int64_t *data);\n     static inline bool cmpSwap(volatile int64_t * dest, int64_t newVal, int64_t oldVal);\n \n-#if defined(FASTOS_64BIT_LONG)\n+#if defined(__x86_64__)\n     static inline bool cmpSwap(volatile long long * dest, long long newVal, long long oldVal);\n     static inline bool cmpSwap(volatile unsigned long long * dest, unsigned long long newVal, unsigned long long oldVal);\n #endif\n@@ -75,8 +75,6 @@ public:\n \n #if defined(__x86_64__)\n     #define VESPALIB_ATOMIC_TAGGEDPTR_ALIGNMENT __attribute__ ((aligned (16)))\n-#elif defined(__i386__)\n-    #define VESPALIB_ATOMIC_TAGGEDPTR_ALIGNMENT\n #else\n     #error \"VESPALIB_ATOMIC_TAGGEDPTR_ALIGNMENT can not be defined.\"\n #endif",
    "Added placement groups to the sample launchers": "diff --git a/h2o-samples/src/main/java/samples/launchers/CloudRemote.java b/h2o-samples/src/main/java/samples/launchers/CloudRemote.java\nindex 9b5b0517e..d4b7c674e 100644\n--- a/h2o-samples/src/main/java/samples/launchers/CloudRemote.java\n+++ b/h2o-samples/src/main/java/samples/launchers/CloudRemote.java\n@@ -14,16 +14,16 @@ import water.util.Log;\n  */\n public class CloudRemote {\n   public static void main(String[] args) throws Exception {\n-    launchEC2(null);\n+    launchEC2(null, 4);\n     // launchDefaultIPs(null);\n   }\n \n   /**\n    * Starts EC2 machines and builds a cluster.\n    */\n-  public static void launchEC2(Class<? extends Job> job) throws Exception {\n+  public static void launchEC2(Class<? extends Job> job, int boxes) throws Exception {\n     EC2 ec2 = new EC2();\n-    ec2.boxes = 4;\n+    ec2.boxes = boxes;\n     Cloud c = ec2.resize();\n     launch(c, job);\n   }\ndiff --git a/src/main/java/water/deploy/EC2.java b/src/main/java/water/deploy/EC2.java\nindex 0d994d705..e9d4b6dbc 100644\n--- a/src/main/java/water/deploy/EC2.java\n+++ b/src/main/java/water/deploy/EC2.java\n@@ -94,7 +94,7 @@ public class EC2 {\n \n     if( instances.size() > boxes ) {\n       for( int i = 0; i < instances.size() - boxes; i++ ) {\n-        // TODO terminate\n+        // TODO terminate?\n       }\n     } else if( instances.size() < boxes ) {\n       int launchCount = boxes - instances.size();\n@@ -106,16 +106,29 @@ public class EC2 {\n           throw new Exception(\"Aborted\");\n       }\n \n-      RunInstancesRequest request = new RunInstancesRequest();\n-      request.withInstanceType(type);\n-      request.withImageId(image);\n-      request.withMinCount(launchCount).withMaxCount(launchCount);\n-      request.withSecurityGroupIds(securityGroup);\n-      request.withUserData(new String(Base64.encodeBase64(cloudConfig.getBytes())));\n+      CreatePlacementGroupRequest group = new CreatePlacementGroupRequest();\n+      group.withGroupName(USER);\n+      group.withStrategy(PlacementStrategy.Cluster);\n+      try {\n+        ec2.createPlacementGroup(group);\n+      } catch( AmazonServiceException ex ) {\n+        if( !\"InvalidPlacementGroup.Duplicate\".equals(ex.getErrorCode()) )\n+          throw ex;\n+      }\n \n-      RunInstancesResult runInstances = ec2.runInstances(request);\n+      RunInstancesRequest run = new RunInstancesRequest();\n+      run.withInstanceType(type);\n+      run.withImageId(image);\n+      run.withMinCount(launchCount).withMaxCount(launchCount);\n+      run.withSecurityGroupIds(securityGroup);\n+      Placement placement = new Placement();\n+      placement.setGroupName(USER);\n+      run.withPlacement(placement);\n+      run.withUserData(new String(Base64.encodeBase64(cloudConfig.getBytes())));\n+\n+      RunInstancesResult runRes = ec2.runInstances(run);\n       ArrayList<String> ids = new ArrayList<String>();\n-      for( Instance instance : runInstances.getReservation().getInstances() )\n+      for( Instance instance : runRes.getReservation().getInstances() )\n         ids.add(instance.getInstanceId());\n \n       List<Instance> created = wait(ec2, ids);\n@@ -123,9 +136,9 @@ public class EC2 {\n       instances.addAll(created);\n     }\n \n-    String[] pub = new String[instances.size()];\n-    String[] prv = new String[instances.size()];\n-    for( int i = 0; i < instances.size(); i++ ) {\n+    String[] pub = new String[boxes];\n+    String[] prv = new String[boxes];\n+    for( int i = 0; i < boxes; i++ ) {\n       pub[i] = instances.get(i).getPublicIpAddress();\n       prv[i] = instances.get(i).getPrivateIpAddress();\n     }",
    "Recalculate snap to road after adding changes": "diff --git a/OsmAnd/src/net/osmand/plus/measurementtool/MeasurementToolFragment.java b/OsmAnd/src/net/osmand/plus/measurementtool/MeasurementToolFragment.java\nindex f85c657198..0b8909183b 100644\n--- a/OsmAnd/src/net/osmand/plus/measurementtool/MeasurementToolFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/measurementtool/MeasurementToolFragment.java\n@@ -62,6 +62,7 @@ import net.osmand.plus.measurementtool.adapter.MeasurementToolItemTouchHelperCal\n import net.osmand.plus.measurementtool.command.AddPointCommand;\n import net.osmand.plus.measurementtool.command.ClearPointsCommand;\n import net.osmand.plus.measurementtool.command.MeasurementCommandManager;\n+import net.osmand.plus.measurementtool.command.MeasurementModeCommand.MeasurementCommandType;\n import net.osmand.plus.measurementtool.command.MovePointCommand;\n import net.osmand.plus.measurementtool.command.RemovePointCommand;\n import net.osmand.plus.measurementtool.command.ReorderPointCommand;\n@@ -307,7 +308,10 @@ public class MeasurementToolFragment extends Fragment {\n \t\tundoBtn.setOnClickListener(new View.OnClickListener() {\n \t\t\t@Override\n \t\t\tpublic void onClick(View view) {\n-\t\t\t\tcommandManager.undo();\n+\t\t\t\tMeasurementCommandType type = commandManager.undo();\n+\t\t\t\tif (type != null && type != MeasurementCommandType.SNAP_TO_ROAD) {\n+\t\t\t\t\trecalculateSnapToRoadIfNedeed();\n+\t\t\t\t}\n \t\t\t\tif (commandManager.canUndo()) {\n \t\t\t\t\tenable(undoBtn);\n \t\t\t\t} else {\n@@ -328,6 +332,7 @@ public class MeasurementToolFragment extends Fragment {\n \t\t\t@Override\n \t\t\tpublic void onClick(View view) {\n \t\t\t\tcommandManager.redo();\n+\t\t\t\trecalculateSnapToRoadIfNedeed();\n \t\t\t\tif (commandManager.canRedo()) {\n \t\t\t\t\tenable(redoBtn);\n \t\t\t\t} else {\n@@ -478,6 +483,15 @@ public class MeasurementToolFragment extends Fragment {\n \t\treturn view;\n \t}\n \n+\tprivate void recalculateSnapToRoadIfNedeed() {\n+\t\tif (calculationProgress != null) {\n+\t\t\tcalculationProgress.isCancelled = true;\n+\t\t}\n+\t\tif (isInSnapToRoadMode) {\n+\t\t\tdoSnapToRoad();\n+\t\t}\n+\t}\n+\n \t@Override\n \tpublic void onDestroyView() {\n \t\tsuper.onDestroyView();\n@@ -590,6 +604,9 @@ public class MeasurementToolFragment extends Fragment {\n \t\t\t@Override\n \t\t\tpublic void clearAllOnClick() {\n \t\t\t\tcommandManager.execute(new ClearPointsCommand(measurementLayer));\n+\t\t\t\tif (calculationProgress != null) {\n+\t\t\t\t\tcalculationProgress.isCancelled = true;\n+\t\t\t\t}\n \t\t\t\tif (pointsListOpened) {\n \t\t\t\t\thidePointsList();\n \t\t\t\t}\n@@ -617,13 +634,7 @@ public class MeasurementToolFragment extends Fragment {\n \t\t\tpublic void deleteOnClick() {\n \t\t\t\tclearSelection();\n \t\t\t\tif (measurementLayer != null) {\n-\t\t\t\t\tint position = measurementLayer.getSelectedPointPos();\n-\t\t\t\t\tcommandManager.execute(new RemovePointCommand(measurementLayer, position));\n-\t\t\t\t\tadapter.notifyDataSetChanged();\n-\t\t\t\t\tdisable(redoBtn);\n-\t\t\t\t\tupdateText();\n-\t\t\t\t\tsaved = false;\n-\t\t\t\t\thidePointsListIfNoPoints();\n+\t\t\t\t\tremovePoint(measurementLayer, measurementLayer.getSelectedPointPos());\n \t\t\t\t\tmeasurementLayer.clearSelection();\n \t\t\t\t}\n \t\t\t}\n@@ -674,6 +685,16 @@ public class MeasurementToolFragment extends Fragment {\n \t\t};\n \t}\n \n+\tprivate void removePoint(MeasurementToolLayer layer, int position) {\n+\t\tcommandManager.execute(new RemovePointCommand(layer, position));\n+\t\trecalculateSnapToRoadIfNedeed();\n+\t\tadapter.notifyDataSetChanged();\n+\t\tdisable(redoBtn);\n+\t\tupdateText();\n+\t\tsaved = false;\n+\t\thidePointsListIfNoPoints();\n+\t}\n+\n \tprivate SaveAsNewTrackFragmentListener createSaveAsNewTrackFragmentListener() {\n \t\treturn new SaveAsNewTrackFragmentListener() {\n \t\t\t@Override\n@@ -699,12 +720,7 @@ public class MeasurementToolFragment extends Fragment {\n \t\t\t@Override\n \t\t\tpublic void onRemoveClick(int position) {\n \t\t\t\tif (measurementLayer != null) {\n-\t\t\t\t\tcommandManager.execute(new RemovePointCommand(measurementLayer, position));\n-\t\t\t\t\tadapter.notifyDataSetChanged();\n-\t\t\t\t\tdisable(redoBtn);\n-\t\t\t\t\tupdateText();\n-\t\t\t\t\tsaved = false;\n-\t\t\t\t\thidePointsListIfNoPoints();\n+\t\t\t\t\tremovePoint(measurementLayer, position);\n \t\t\t\t}\n \t\t\t}\n \n@@ -739,6 +755,7 @@ public class MeasurementToolFragment extends Fragment {\n \t\t\t\t\ttoPosition = holder.getAdapterPosition();\n \t\t\t\t\tif (toPosition >= 0 && fromPosition >= 0 && toPosition != fromPosition) {\n \t\t\t\t\t\tcommandManager.execute(new ReorderPointCommand(measurementLayer, fromPosition, toPosition));\n+\t\t\t\t\t\trecalculateSnapToRoadIfNedeed();\n \t\t\t\t\t\tadapter.notifyDataSetChanged();\n \t\t\t\t\t\tdisable(redoBtn);\n \t\t\t\t\t\tupdateText();\n@@ -807,7 +824,6 @@ public class MeasurementToolFragment extends Fragment {\n \t\t\tparams.calculationProgressCallback = new RoutingHelper.RouteCalculationProgressCallback() {\n \t\t\t\t@Override\n \t\t\t\tpublic void updateProgress(int progress) {\n-\t\t\t\t\tsnapToRoadProgressBar.setVisibility(View.VISIBLE);\n \t\t\t\t\tsnapToRoadProgressBar.setProgress(progress);\n \t\t\t\t}\n \n@@ -841,9 +857,10 @@ public class MeasurementToolFragment extends Fragment {\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t};\n+\t\t\tsnapToRoadProgressBar.setVisibility(View.VISIBLE);\n \n \t\t\tmapActivity.getMyApplication().getRoutingHelper().recalculateSnapToRoad(start, end, intermediates, params);\n-\t\t} else {\n+\t\t} else if (calculationProgress != null) {\n \t\t\tcalculationProgress.isCancelled = true;\n \t\t}\n \t}\n@@ -853,7 +870,9 @@ public class MeasurementToolFragment extends Fragment {\n \t\ttoolBarController.setTitle(previousToolBarTitle);\n \t\tisInSnapToRoadMode = false;\n \t\tmainIcon.setImageDrawable(getActiveIcon(R.drawable.ic_action_ruler));\n-\t\tcalculationProgress.isCancelled = true;\n+\t\tif (calculationProgress != null) {\n+\t\t\tcalculationProgress.isCancelled = true;\n+\t\t}\n \t\tMapActivity mapActivity = getMapActivity();\n \t\tif (mapActivity != null) {\n \t\t\tmapActivity.findViewById(R.id.snap_to_road_image_button).setVisibility(View.GONE);\n@@ -928,11 +947,7 @@ public class MeasurementToolFragment extends Fragment {\n \t\t\tWptPt oldPoint = measurementLayer.getSelectedCachedPoint();\n \t\t\tint position = measurementLayer.getSelectedPointPos();\n \t\t\tcommandManager.execute(new MovePointCommand(measurementLayer, oldPoint, newPoint, position));\n-\t\t\tenable(undoBtn, upDownBtn);\n-\t\t\tdisable(redoBtn);\n-\t\t\tupdateText();\n-\t\t\tadapter.notifyDataSetChanged();\n-\t\t\tsaved = false;\n+\t\t\tdoAddOrMovePointCommonStuff();\n \t\t\tmeasurementLayer.exitMovePointMode();\n \t\t\tmeasurementLayer.clearSelection();\n \t\t\tmeasurementLayer.refreshMap();\n@@ -1112,11 +1127,7 @@ public class MeasurementToolFragment extends Fragment {\n \t\tMeasurementToolLayer measurementLayer = getMeasurementLayer();\n \t\tif (measurementLayer != null) {\n \t\t\tcommandManager.execute(new AddPointCommand(measurementLayer, false));\n-\t\t\tenable(undoBtn, upDownBtn);\n-\t\t\tdisable(redoBtn);\n-\t\t\tupdateText();\n-\t\t\tadapter.notifyDataSetChanged();\n-\t\t\tsaved = false;\n+\t\t\tdoAddOrMovePointCommonStuff();\n \t\t}\n \t}\n \n@@ -1124,11 +1135,7 @@ public class MeasurementToolFragment extends Fragment {\n \t\tMeasurementToolLayer measurementLayer = getMeasurementLayer();\n \t\tif (measurementLayer != null) {\n \t\t\tcommandManager.execute(new AddPointCommand(measurementLayer, true));\n-\t\t\tenable(undoBtn, upDownBtn);\n-\t\t\tdisable(redoBtn);\n-\t\t\tupdateText();\n-\t\t\tadapter.notifyDataSetChanged();\n-\t\t\tsaved = false;\n+\t\t\tdoAddOrMovePointCommonStuff();\n \t\t}\n \t}\n \n@@ -1137,15 +1144,20 @@ public class MeasurementToolFragment extends Fragment {\n \t\tMeasurementToolLayer measurementLayer = getMeasurementLayer();\n \t\tif (measurementLayer != null) {\n \t\t\tadded = commandManager.execute(new AddPointCommand(measurementLayer, position));\n-\t\t\tenable(undoBtn, upDownBtn);\n-\t\t\tdisable(redoBtn);\n-\t\t\tupdateText();\n-\t\t\tadapter.notifyDataSetChanged();\n-\t\t\tsaved = false;\n+\t\t\tdoAddOrMovePointCommonStuff();\n \t\t}\n \t\treturn added;\n \t}\n \n+\tprivate void doAddOrMovePointCommonStuff() {\n+\t\trecalculateSnapToRoadIfNedeed();\n+\t\tenable(undoBtn, upDownBtn);\n+\t\tdisable(redoBtn);\n+\t\tupdateText();\n+\t\tadapter.notifyDataSetChanged();\n+\t\tsaved = false;\n+\t}\n+\n \tprivate void showPointsList() {\n \t\tpointsListOpened = true;\n \t\tupDownBtn.setImageDrawable(downIcon);\ndiff --git a/OsmAnd/src/net/osmand/plus/measurementtool/command/AddPointCommand.java b/OsmAnd/src/net/osmand/plus/measurementtool/command/AddPointCommand.java\nindex 6de9d2702c..1d4582dc17 100644\n--- a/OsmAnd/src/net/osmand/plus/measurementtool/command/AddPointCommand.java\n+++ b/OsmAnd/src/net/osmand/plus/measurementtool/command/AddPointCommand.java\n@@ -44,4 +44,9 @@ public class AddPointCommand extends MeasurementModeCommand {\n \t\tmeasurementLayer.refreshMap();\n \t\tmeasurementLayer.moveMapToPoint(position);\n \t}\n+\n+\t@Override\n+\tMeasurementCommandType getType() {\n+\t\treturn MeasurementCommandType.ADD_POINT;\n+\t}\n }\ndiff --git a/OsmAnd/src/net/osmand/plus/measurementtool/command/ClearPointsCommand.java b/OsmAnd/src/net/osmand/plus/measurementtool/command/ClearPointsCommand.java\nindex 97e4afc4d2..f80340def6 100644\n--- a/OsmAnd/src/net/osmand/plus/measurementtool/command/ClearPointsCommand.java\n+++ b/OsmAnd/src/net/osmand/plus/measurementtool/command/ClearPointsCommand.java\n@@ -40,4 +40,9 @@ public class ClearPointsCommand extends MeasurementModeCommand {\n \t\tmeasurementLayer.getSnappedToRoadPoints().clear();\n \t\tmeasurementLayer.refreshMap();\n \t}\n+\n+\t@Override\n+\tMeasurementCommandType getType() {\n+\t\treturn MeasurementCommandType.CLEAR_POINTS;\n+\t}\n }\ndiff --git a/OsmAnd/src/net/osmand/plus/measurementtool/command/MeasurementCommandManager.java b/OsmAnd/src/net/osmand/plus/measurementtool/command/MeasurementCommandManager.java\nindex 503cae2704..4261271adb 100644\n--- a/OsmAnd/src/net/osmand/plus/measurementtool/command/MeasurementCommandManager.java\n+++ b/OsmAnd/src/net/osmand/plus/measurementtool/command/MeasurementCommandManager.java\n@@ -1,6 +1,9 @@\n package net.osmand.plus.measurementtool.command;\n \n+import android.support.annotation.Nullable;\n+\n import net.osmand.plus.measurementtool.MeasurementToolLayer;\n+import net.osmand.plus.measurementtool.command.MeasurementModeCommand.MeasurementCommandType;\n \n import java.util.Deque;\n import java.util.LinkedList;\n@@ -27,20 +30,26 @@ public class MeasurementCommandManager {\n \t\treturn false;\n \t}\n \n-\tpublic void undo() {\n+\t@Nullable\n+\tpublic MeasurementCommandType undo() {\n \t\tif (canUndo()) {\n \t\t\tMeasurementModeCommand command = undoCommands.pop();\n \t\t\tredoCommands.push(command);\n \t\t\tcommand.undo();\n+\t\t\treturn command.getType();\n \t\t}\n+\t\treturn null;\n \t}\n \n-\tpublic void redo() {\n+\t@Nullable\n+\tpublic MeasurementCommandType redo() {\n \t\tif (canRedo()) {\n \t\t\tMeasurementModeCommand command = redoCommands.pop();\n \t\t\tundoCommands.push(command);\n \t\t\tcommand.redo();\n+\t\t\treturn command.getType();\n \t\t}\n+\t\treturn null;\n \t}\n \n \tpublic void resetMeasurementLayer(MeasurementToolLayer layer) {\ndiff --git a/OsmAnd/src/net/osmand/plus/measurementtool/command/MeasurementModeCommand.java b/OsmAnd/src/net/osmand/plus/measurementtool/command/MeasurementModeCommand.java\nindex 20d48372d3..f0fb2133ea 100644\n--- a/OsmAnd/src/net/osmand/plus/measurementtool/command/MeasurementModeCommand.java\n+++ b/OsmAnd/src/net/osmand/plus/measurementtool/command/MeasurementModeCommand.java\n@@ -2,11 +2,22 @@ package net.osmand.plus.measurementtool.command;\n \n import net.osmand.plus.measurementtool.MeasurementToolLayer;\n \n-abstract class MeasurementModeCommand implements Command {\n+public abstract class MeasurementModeCommand implements Command {\n \n \tMeasurementToolLayer measurementLayer;\n \n \tvoid setMeasurementLayer(MeasurementToolLayer layer) {\n \t\tthis.measurementLayer = layer;\n \t}\n+\n+\tabstract MeasurementCommandType getType();\n+\n+\tpublic enum MeasurementCommandType {\n+\t\tADD_POINT,\n+\t\tCLEAR_POINTS,\n+\t\tMOVE_POINT,\n+\t\tREMOVE_POINT,\n+\t\tREORDER_POINT,\n+\t\tSNAP_TO_ROAD\n+\t}\n }\ndiff --git a/OsmAnd/src/net/osmand/plus/measurementtool/command/MovePointCommand.java b/OsmAnd/src/net/osmand/plus/measurementtool/command/MovePointCommand.java\nindex b5cd4252f1..242f981ea1 100644\n--- a/OsmAnd/src/net/osmand/plus/measurementtool/command/MovePointCommand.java\n+++ b/OsmAnd/src/net/osmand/plus/measurementtool/command/MovePointCommand.java\n@@ -34,4 +34,9 @@ public class MovePointCommand extends MeasurementModeCommand {\n \t\tmeasurementLayer.getMeasurementPoints().add(position, newPoint);\n \t\tmeasurementLayer.refreshMap();\n \t}\n+\n+\t@Override\n+\tMeasurementCommandType getType() {\n+\t\treturn MeasurementCommandType.MOVE_POINT;\n+\t}\n }\ndiff --git a/OsmAnd/src/net/osmand/plus/measurementtool/command/RemovePointCommand.java b/OsmAnd/src/net/osmand/plus/measurementtool/command/RemovePointCommand.java\nindex dea29a4e9d..380e55e331 100644\n--- a/OsmAnd/src/net/osmand/plus/measurementtool/command/RemovePointCommand.java\n+++ b/OsmAnd/src/net/osmand/plus/measurementtool/command/RemovePointCommand.java\n@@ -32,4 +32,9 @@ public class RemovePointCommand extends MeasurementModeCommand {\n \t\tmeasurementLayer.getMeasurementPoints().remove(position);\n \t\tmeasurementLayer.refreshMap();\n \t}\n+\n+\t@Override\n+\tMeasurementCommandType getType() {\n+\t\treturn MeasurementCommandType.REMOVE_POINT;\n+\t}\n }\ndiff --git a/OsmAnd/src/net/osmand/plus/measurementtool/command/ReorderPointCommand.java b/OsmAnd/src/net/osmand/plus/measurementtool/command/ReorderPointCommand.java\nindex ecaf081d9c..69c9218a28 100644\n--- a/OsmAnd/src/net/osmand/plus/measurementtool/command/ReorderPointCommand.java\n+++ b/OsmAnd/src/net/osmand/plus/measurementtool/command/ReorderPointCommand.java\n@@ -34,4 +34,9 @@ public class ReorderPointCommand extends MeasurementModeCommand {\n \t\tCollections.swap(measurementLayer.getMeasurementPoints(), from, to);\n \t\tmeasurementLayer.refreshMap();\n \t}\n+\n+\t@Override\n+\tMeasurementCommandType getType() {\n+\t\treturn MeasurementCommandType.REORDER_POINT;\n+\t}\n }\ndiff --git a/OsmAnd/src/net/osmand/plus/measurementtool/command/SnapToRoadCommand.java b/OsmAnd/src/net/osmand/plus/measurementtool/command/SnapToRoadCommand.java\nindex cf00791eaf..ceb4d1bdd2 100644\n--- a/OsmAnd/src/net/osmand/plus/measurementtool/command/SnapToRoadCommand.java\n+++ b/OsmAnd/src/net/osmand/plus/measurementtool/command/SnapToRoadCommand.java\n@@ -33,4 +33,9 @@ public class SnapToRoadCommand extends MeasurementModeCommand {\n \t\tmeasurementLayer.getSnappedToRoadPoints().addAll(snappedPoints);\n \t\tmeasurementLayer.refreshMap();\n \t}\n+\n+\t@Override\n+\tMeasurementCommandType getType() {\n+\t\treturn MeasurementCommandType.SNAP_TO_ROAD;\n+\t}\n }",
    "adding context to UEL Exceptions": "diff --git a/engine/src/main/java/org/camunda/bpm/engine/impl/el/JuelExpression.java b/engine/src/main/java/org/camunda/bpm/engine/impl/el/JuelExpression.java\nindex bfa641755d..58dc36870b 100644\n--- a/engine/src/main/java/org/camunda/bpm/engine/impl/el/JuelExpression.java\n+++ b/engine/src/main/java/org/camunda/bpm/engine/impl/el/JuelExpression.java\n@@ -52,13 +52,13 @@ public class JuelExpression implements Expression {\n         .handleInvocation(invocation);\n       return invocation.getInvocationResult();      \n     } catch (PropertyNotFoundException pnfe) {\n-      throw new ProcessEngineException(\"Unknown property used in expression: \" + expressionText, pnfe);\n+      throw new ProcessEngineException(\"Unknown property used in expression: \" + expressionText+\". Cause: \"+pnfe.getMessage(), pnfe);\n     } catch (MethodNotFoundException mnfe) {\n-      throw new ProcessEngineException(\"Unknown method used in expression: \" + expressionText, mnfe);\n+      throw new ProcessEngineException(\"Unknown method used in expression: \" + expressionText+\". Cause: \"+mnfe.getMessage(), mnfe);\n     } catch(ELException ele) {\n-      throw new ProcessEngineException(\"Error while evaluating expression: \" + expressionText, ele);\n+      throw new ProcessEngineException(\"Error while evaluating expression: \" + expressionText+\". Cause: \"+ele.getMessage(), ele);\n     } catch (Exception e) {\n-      throw new ProcessEngineException(\"Error while evaluating expression: \" + expressionText, e);\n+      throw new ProcessEngineException(\"Error while evaluating expression: \" + expressionText+\". Cause: \"+e.getMessage(), e);\n     }\n   }\n     \n@@ -70,7 +70,7 @@ public class JuelExpression implements Expression {\n         .getDelegateInterceptor()\n         .handleInvocation(invocation);\n     } catch (Exception e) {\n-      throw new ProcessEngineException(\"Error while evaluating expression: \" + expressionText, e);\n+      throw new ProcessEngineException(\"Error while evaluating expression: \" + expressionText+\". Cause: \"+e.getMessage(), e);\n     }\n   }\n   ",
    "Add sample RouterFunction": "diff --git a/spring-cloud-gateway-sample/src/main/java/org/springframework/cloud/gateway/sample/GatewaySampleApplication.java b/spring-cloud-gateway-sample/src/main/java/org/springframework/cloud/gateway/sample/GatewaySampleApplication.java\nindex 8232830f..b8995c40 100644\n--- a/spring-cloud-gateway-sample/src/main/java/org/springframework/cloud/gateway/sample/GatewaySampleApplication.java\n+++ b/spring-cloud-gateway-sample/src/main/java/org/springframework/cloud/gateway/sample/GatewaySampleApplication.java\n@@ -24,6 +24,11 @@ import org.springframework.cloud.gateway.EnableGateway;\n import org.springframework.cloud.gateway.route.RouteLocator;\n import org.springframework.cloud.gateway.route.Routes;\n import org.springframework.context.annotation.Bean;\n+import org.springframework.web.reactive.function.BodyInserters;\n+import org.springframework.web.reactive.function.server.RequestPredicates;\n+import org.springframework.web.reactive.function.server.RouterFunction;\n+import org.springframework.web.reactive.function.server.RouterFunctions;\n+import org.springframework.web.reactive.function.server.ServerResponse;\n \n import static org.springframework.cloud.gateway.filter.factory.WebFilterFactories.addResponseHeader;\n import static org.springframework.cloud.gateway.handler.predicate.RoutePredicates.host;\n@@ -68,6 +73,14 @@ public class GatewaySampleApplication {\n \t\treturn new ThrottleWebFilterFactory();\n \t}\n \n+\t@Bean\n+\tpublic RouterFunction<ServerResponse> testFunRouterFunction() {\n+\t\tRouterFunction<ServerResponse> route = RouterFunctions.route(\n+\t\t\t\tRequestPredicates.path(\"/testfun\"),\n+\t\t\t\trequest -> ServerResponse.ok().body(BodyInserters.fromObject(\"hello\")));\n+\t\treturn route;\n+\t}\n+\n \tpublic static void main(String[] args) {\n \t\tSpringApplication.run(GatewaySampleApplication.class, args);\n \t}",
    "Updated javadoc for ImageInfo . getRotationDegrees ( ) .": "diff --git a/camera/camera-core/src/main/java/androidx/camera/core/ImageAnalysis.java b/camera/camera-core/src/main/java/androidx/camera/core/ImageAnalysis.java\nindex 7b3522225ac..25f675b66e2 100644\n--- a/camera/camera-core/src/main/java/androidx/camera/core/ImageAnalysis.java\n+++ b/camera/camera-core/src/main/java/androidx/camera/core/ImageAnalysis.java\n@@ -262,10 +262,10 @@ public final class ImageAnalysis extends UseCase {\n     /**\n      * Sets the target rotation.\n      *\n-     * <p>This informs the use case so it can adjust the rotation value sent to\n-     * {@link Analyzer#analyze(ImageProxy)} which provides rotation information to the\n-     * analysis method. The rotation parameter sent to the analyzer will be the rotation, which if\n-     * applied to the output image, will make the image match target rotation specified here.\n+     * <p>This adjust the {@link ImageInfo#getRotationDegrees()} of the {@link ImageProxy} passed\n+     * to {@link Analyzer#analyze(ImageProxy)}. The rotation value of ImageInfo will be the\n+     * rotation, which if applied to the output image, will make the image match target rotation\n+     * specified here.\n      *\n      * <p>While rotation can also be set via {@link Builder#setTargetRotation(int)}, using\n      * {@link ImageAnalysis#setTargetRotation(int)} allows the target rotation to be set\n@@ -801,8 +801,10 @@ public final class ImageAnalysis extends UseCase {\n         /**\n          * Sets the rotation of the intended target for images from this configuration.\n          *\n-         * <p>The rotation parameter sent to the analyzer will be the rotation, which if applied to\n-         * the output image, will make the image match target rotation specified here.\n+         * <p>This adjust the {@link ImageInfo#getRotationDegrees()} of the {@link ImageProxy}\n+         * passed to {@link Analyzer#analyze(ImageProxy)}. The rotation value of ImageInfo will\n+         * be the rotation, which if applied to the output image, will make the image match\n+         * target rotation specified here.\n          *\n          * <p>This is one of four valid values: {@link Surface#ROTATION_0}, {@link\n          * Surface#ROTATION_90}, {@link Surface#ROTATION_180}, {@link Surface#ROTATION_270}.\ndiff --git a/camera/camera-core/src/main/java/androidx/camera/core/ImageCapture.java b/camera/camera-core/src/main/java/androidx/camera/core/ImageCapture.java\nindex 258f53f5885..624097f5387 100644\n--- a/camera/camera-core/src/main/java/androidx/camera/core/ImageCapture.java\n+++ b/camera/camera-core/src/main/java/androidx/camera/core/ImageCapture.java\n@@ -501,9 +501,9 @@ public class ImageCapture extends UseCase {\n      * Sets the desired rotation of the output image.\n      *\n      * <p>This will affect the EXIF rotation metadata in images saved by takePicture calls and the\n-     * rotation value returned by {@link OnImageCapturedCallback}.  These will be set to be the\n-     * rotation, which if applied to the output image data, will make the image match target\n-     * rotation specified here.\n+     * {@link ImageInfo#getRotationDegrees()} value of the {@link ImageProxy} returned by\n+     * {@link OnImageCapturedCallback}. These will be set to be the rotation, which if applied to\n+     * the output image data, will make the image match target rotation specified here.\n      *\n      * <p>While rotation can also be set via {@link Builder#setTargetRotation(int)}, using\n      * {@link ImageCapture#setTargetRotation(int)} allows the target rotation to be set dynamically.\n@@ -1927,11 +1927,11 @@ public class ImageCapture extends UseCase {\n         /**\n          * Sets the rotation of the intended target for images from this configuration.\n          *\n-         * <p>This will affect the EXIF rotation metadata in images saved by takePicture calls and\n-         * the rotation value returned by\n-         * {@link androidx.camera.core.ImageCapture.OnImageCapturedCallback}.  These will be set to\n-         * be the rotation, which if applied to the output image data, will make the image match the\n-         * target rotation specified here.\n+         * This will affect the EXIF rotation metadata in images saved by takePicture calls and the\n+         * {@link ImageInfo#getRotationDegrees()} value of the {@link ImageProxy} returned by\n+         * {@link OnImageCapturedCallback}. These will be set to be the rotation, which if\n+         * applied to the output image data, will make the image match the target rotation\n+         * specified here.\n          *\n          * <p>This is one of four valid values: {@link Surface#ROTATION_0}, {@link\n          * Surface#ROTATION_90}, {@link Surface#ROTATION_180}, {@link Surface#ROTATION_270}.\ndiff --git a/camera/camera-core/src/main/java/androidx/camera/core/ImageInfo.java b/camera/camera-core/src/main/java/androidx/camera/core/ImageInfo.java\nindex 1d3f0bd2f0d..c3def192d23 100644\n--- a/camera/camera-core/src/main/java/androidx/camera/core/ImageInfo.java\n+++ b/camera/camera-core/src/main/java/androidx/camera/core/ImageInfo.java\n@@ -25,12 +25,13 @@ public interface ImageInfo {\n      * Returns the tag of the metadata.\n      *\n      * @hide\n-     * */\n+     */\n     @RestrictTo(RestrictTo.Scope.LIBRARY_GROUP)\n     @Nullable\n     Object getTag();\n \n-    /** Returns the timestamp of the metadata.\n+    /**\n+     * Returns the timestamp of the metadata.\n      *\n      * Details on the timestamp depend on the source providing the image, and the method providing\n      * the image contains more documentation.\n@@ -40,9 +41,26 @@ public interface ImageInfo {\n     long getTimestamp();\n \n     /**\n-      * The rotation which if applied to the image would make it match the current target\n-     * rotation of the {@link UseCase} that produced it. The rotationDegrees will be a value in {0,\n-     * 90, 180, 270}.\n+     * Returns the rotation needed to transform the image to the correct orientation.\n+     *\n+     * <p> This is a clockwise rotation in degrees that needs to be applied to the image buffer.\n+     * Note that for images that are in {@link android.graphics.ImageFormat#JPEG} this value will\n+     * match the rotation defined in the EXIF.\n+     *\n+     * <p> The target rotation is set at the time the image capture was requested.\n+     *\n+     * <p> The correct orientation of the image is dependent upon the producer of the image. For\n+     * example, if the {@link ImageProxy} that contains this instance of ImageInfo is produced\n+     * by an {@link ImageCapture}, then the rotation will be determined by\n+     * {@link ImageCapture#setTargetRotation(int)} or\n+     * {@link ImageCapture.Builder#setTargetRotation(int)}.\n+     *\n+     * @return The rotation in degrees which will be a value in {0, 90, 180, 270}.\n+     * @see ImageCapture#setTargetRotation(int)\n+     * @see ImageCapture.Builder#setTargetRotation(int)\n+     * @see ImageAnalysis#setTargetRotation(int)\n+     * @see ImageAnalysis.Builder#setTargetRotation(int)\n      */\n+    // TODO(b/122806727) Need to correctly set EXIF in JPEG images\n     int getRotationDegrees();\n }",
    "Added LeakCanary to sample - mvi <issue_id>": "diff --git a/sample-mvi/build.gradle b/sample-mvi/build.gradle\nindex bfd9dba..3633543 100644\n--- a/sample-mvi/build.gradle\n+++ b/sample-mvi/build.gradle\n@@ -81,6 +81,11 @@ dependencies {\n \n   compile \"com.github.akarnokd:rxjava2-interop:0.7.2\"\n \n+\n+  debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'\n+  releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'\n+  testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'\n+\n   compile \"com.jakewharton.rxbinding:rxbinding:$rxbindingVersion\"\n   compile \"com.jakewharton.rxbinding:rxbinding-support-v4:$rxbindingVersion\"\n   compile \"com.jakewharton.rxbinding:rxbinding-design:$rxbindingVersion\"\ndiff --git a/sample-mvi/src/main/java/com/hannesdorfmann/mosby3/sample/mvi/SampleApplication.java b/sample-mvi/src/main/java/com/hannesdorfmann/mosby3/sample/mvi/SampleApplication.java\nindex 621d490..da8c175 100644\n--- a/sample-mvi/src/main/java/com/hannesdorfmann/mosby3/sample/mvi/SampleApplication.java\n+++ b/sample-mvi/src/main/java/com/hannesdorfmann/mosby3/sample/mvi/SampleApplication.java\n@@ -20,6 +20,8 @@ package com.hannesdorfmann.mosby3.sample.mvi;\n import android.app.Application;\n import android.content.Context;\n import com.hannesdorfmann.mosby3.sample.mvi.dependencyinjection.DependencyInjection;\n+import com.squareup.leakcanary.LeakCanary;\n+import com.squareup.leakcanary.RefWatcher;\n import timber.log.Timber;\n \n /**\n@@ -38,4 +40,22 @@ public class SampleApplication extends Application {\n   public static DependencyInjection getDependencyInjection(Context context) {\n     return ((SampleApplication) context.getApplicationContext()).dependencyInjection;\n   }\n+\n+\n+  public static RefWatcher getRefWatcher(Context context) {\n+    SampleApplication application = (SampleApplication) context.getApplicationContext();\n+    return application.refWatcher;\n+  }\n+\n+  private RefWatcher refWatcher;\n+\n+  @Override public void onCreate() {\n+    super.onCreate();\n+    if (LeakCanary.isInAnalyzerProcess(this)) {\n+      // This process is dedicated to LeakCanary for heap analysis.\n+      // You should not init your app in this process.\n+      return;\n+    }\n+    refWatcher = LeakCanary.install(this);\n+  }\n }",
    "updated maven javadoc plugin": "diff --git a/pom.xml b/pom.xml\nindex 308d8d59e..a736991ea 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -343,7 +343,7 @@\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-javadoc-plugin</artifactId>\n-                <version>2.7</version>\n+                <version>2.</version>\n   ",
    "Add test cases to testng . xml": "diff --git a/tests/ballerina-test-integration/src/test/resources/testng.xml b/tests/ballerina-test-integration/src/test/resources/testng.xml\nindex 273838a448b..0e68a8d6412 100644\n--- a/tests/ballerina-test-integration/src/test/resources/testng.xml\n+++ b/tests/ballerina-test-integration/src/test/resources/testng.xml\n@@ -46,12 +46,15 @@\n         <!--</packages>-->\n     <!--</test>-->\n \n-    <!--<test name=\"ballerina-web-socket-sample-tests\" preserve-order=\"true\" parallel=\"false\">-->\n-        <!--<classes>-->\n+    <test name=\"ballerina-web-socket-sample-tests\" preserve-order=\"true\" parallel=\"false\">\n+        <classes>\n             <!--<class name=\"org.ballerinalang.test.service.websocket.sample.WebSocketPassThroughTestCase\"/>-->\n             <!--<class name=\"org.ballerinalang.test.service.websocket.sample.WebSocketAutoPingPongTest\"/>-->\n-        <!--</classes>-->\n-    <!--</test>-->\n+            <class name=\"org.ballerinalang.test.service.websocket.sample.WebSocketSimpleProxyTestCase\"/>\n+            <class name=\"org.ballerinalang.test.service.websocket.sample.WebSocketQueryAndPathParamSupportTestCase\"/>\n+        </classes>\n+    </test>\n+\n     <test name=\"ballerina-grpc-sample-tests\" preserve-order=\"true\" parallel=\"false\">\n         <classes>\n             <class name=\"org.ballerinalang.test.service.grpc.sample.UnaryBlockingBasicTestCase\"/>",
    "Add MultiChoiceModeListener for both listView and gridView": "diff --git a/src/com/owncloud/android/ui/fragment/ExtendedListFragment.java b/src/com/owncloud/android/ui/fragment/ExtendedListFragment.java\nindex 8ef1792a25..3816c38f88 100644\n--- a/src/com/owncloud/android/ui/fragment/ExtendedListFragment.java\n+++ b/src/com/owncloud/android/ui/fragment/ExtendedListFragment.java\n@@ -453,12 +453,13 @@ public class ExtendedListFragment extends Fragment\n     }\n \n     protected void setChoiceMode(int choiceMode) {\n-        if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {\n-            mListView.setChoiceMode(choiceMode);\n-            mGridView.setChoiceMode(choiceMode);\n-        } else {\n-            ((ListView)mListView).setChoiceMode(choiceMode);\n-        }\n+        mListView.setChoiceMode(choiceMode);\n+        mGridView.setChoiceMode(choiceMode);\n+    }\n+\n+    protected void setMultiChoiceModeListener(AbsListView.MultiChoiceModeListener listener) {\n+        mListView.setMultiChoiceModeListener(listener);\n+        mGridView.setMultiChoiceModeListener(listener);\n     }\n \n     protected void registerForContextMenu() {\ndiff --git a/src/com/owncloud/android/ui/fragment/OCFileListFragment.java b/src/com/owncloud/android/ui/fragment/OCFileListFragment.java\nindex 95b7c8e7fd..b1c85f95d0 100644\n--- a/src/com/owncloud/android/ui/fragment/OCFileListFragment.java\n+++ b/src/com/owncloud/android/ui/fragment/OCFileListFragment.java\n@@ -31,6 +31,7 @@ import android.os.Bundle;\n import android.preference.PreferenceManager;\n import android.support.v4.widget.SwipeRefreshLayout;\n import android.view.ActionMode;\n+import android.view.ContextMenu;\n import android.view.LayoutInflater;\n import android.view.Menu;\n import android.view.MenuInflater;\n@@ -41,6 +42,7 @@ import android.widget.AbsListView;\n import android.widget.AdapterView;\n import android.widget.AdapterView.AdapterContextMenuInfo;\n import android.widget.PopupMenu;\n+import android.widget.ListView;\n import android.widget.TextView;\n import android.widget.Toast;\n \n@@ -342,9 +344,10 @@ public class OCFileListFragment extends ExtendedListFragment {\n     }\n \n     private void registerLongClickListener() {\n-        getListView().setMultiChoiceModeListener(new AbsListView.MultiChoiceModeListener() {\n+        AbsListView listView = getListView();\n+        setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);\n+        setMultiChoiceModeListener(new AbsListView.MultiChoiceModeListener() {\n             private Menu menu;\n-\n             @Override\n             public void onItemCheckedStateChanged(ActionMode mode, int position, long id, boolean checked) {\n                 final int checkedCount = getListView().getCheckedItemCount();",
    "Added description field to the \\' Computer \\' api": "diff --git a/core/src/main/java/hudson/model/Computer.java b/core/src/main/java/hudson/model/Computer.java\nindex afad020673..dec1b10d27 100644\n--- a/core/src/main/java/hudson/model/Computer.java\n+++ b/core/src/main/java/hudson/model/Computer.java\n@@ -1067,6 +1067,17 @@ public /*transient*/ abstract class Computer extends Actionable implements Acces\n         return firstDemand;\n     }\n \n+    /**\n+     * Returns the {@link Node} description for this computer\n+     */\n+    @Restricted(DoNotUse.class)\n+    @Exported\n+    public @Nonnull String getDescription() {\n+        Node node = getNode();\n+        return (node != null) ? node.getNodeDescription() : null;\n+    }\n+\n+\n     /**\n      * Called by {@link Executor} to kill excessive executors from this computer.\n      */",
    "Added example of @ JdbcTest usage": "diff --git a/persistence-modules/spring-jdbc/src/main/java/com/baeldung/spring/jdbc/template/testing/EmployeeApplication.java b/persistence-modules/spring-jdbc/src/main/java/com/baeldung/spring/jdbc/template/testing/EmployeeApplication.java\nnew file mode 100644\nindex 0000000000..a2917be105\n--- /dev/null\n+++ b/persistence-modules/spring-jdbc/src/main/java/com/baeldung/spring/jdbc/template/testing/EmployeeApplication.java\n@@ -0,0 +1,7 @@\n+package com.baeldung.spring.jdbc.template.testing;\n+\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class EmployeeApplication {\n+}\ndiff --git a/persistence-modules/spring-jdbc/src/main/java/com/baeldung/spring/jdbc/template/testing/EmployeeDAO.java b/persistence-modules/spring-jdbc/src/main/java/com/baeldung/spring/jdbc/template/testing/EmployeeDAO.java\nindex 64b146fd47..15da78ce35 100644\n--- a/persistence-modules/spring-jdbc/src/main/java/com/baeldung/spring/jdbc/template/testing/EmployeeDAO.java\n+++ b/persistence-modules/spring-jdbc/src/main/java/com/baeldung/spring/jdbc/template/testing/EmployeeDAO.java\n@@ -13,6 +13,10 @@ public class EmployeeDAO {\n         jdbcTemplate = new JdbcTemplate(dataSource);\n     }\n \n+    public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {\n+        this.jdbcTemplate = jdbcTemplate;\n+    }\n+\n     public int getCountOfEmployees() {\n         return jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM EMPLOYEE\", Integer.class);\n     }\ndiff --git a/persistence-modules/spring-jdbc/src/test/java/com/baeldung/spring/jdbc/template/testing/EmployeeDAOIntegrationTest.java b/persistence-modules/spring-jdbc/src/test/java/com/baeldung/spring/jdbc/template/testing/EmployeeDAOIntegrationTest.java\nnew file mode 100644\nindex 0000000000..9634c3e0d7\n--- /dev/null\n+++ b/persistence-modules/spring-jdbc/src/test/java/com/baeldung/spring/jdbc/template/testing/EmployeeDAOIntegrationTest.java\n@@ -0,0 +1,24 @@\n+package com.baeldung.spring.jdbc.template.testing;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.jdbc.JdbcTest;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.test.context.jdbc.Sql;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+@JdbcTest\n+@Sql({\"schema.sql\", \"test-data.sql\"})\n+class EmployeeDAOIntegrationTest {\n+    @Autowired\n+    private JdbcTemplate jdbcTemplate;\n+\n+    @Test\n+    void whenInjectInMemoryDataSource_thenReturnCorrectEmployeeCount() {\n+        EmployeeDAO employeeDAO = new EmployeeDAO();\n+        employeeDAO.setJdbcTemplate(jdbcTemplate);\n+\n+        assertEquals(4, employeeDAO.getCountOfEmployees());\n+    }\n+}",
    "adding new key , needs to be translated": "diff --git a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle.properties b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle.properties\nindex 84c1dabfbf..1178b62e50 100644\n--- a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle.properties\n+++ b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle.properties\n@@ -145,3 +145,5 @@ two_dots = Two consecutive dots\n uk = Ukrainian\n \n unpaired_brackets = Unpaired bracket or similar symbol\n+\n+guiMenuShowMainWindow = Open main window\ndiff --git a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_cs.properties b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_cs.properties\nindex 0c5f6226e9..49734724ce 100644\n--- a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_cs.properties\n+++ b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_cs.properties\n@@ -145,3 +145,5 @@ two_dots = Dv\\u011B po sebe jdouc\\u00ED te\\u010Dky\n uk = Ukrajinsky\n \n unpaired_brackets = Nesp\\u00E1rovan\\u00E9 z\\u00E1vorky nebo podobn\\u00FD symbol\n+\n+guiMenuShowMainWindow = Open main window\ndiff --git a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_es.properties b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_es.properties\nindex 0b110cd2ab..b55936e9a4 100644\n--- a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_es.properties\n+++ b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_es.properties\n@@ -143,3 +143,5 @@ two_dots = Dos puntos consecutivos\n uk = ucraniano\n \n unpaired_brackets = Se ha encontrado un error en los par\\u00E9ntesis, comillas, signos de exclamaci\\u00F3n o interrogaci\\u00F3n\n+\n+guiMenuShowMainWindow = Open main window\ndiff --git a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_fr.properties b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_fr.properties\nindex ba64cb328e..05eba7dda3 100644\n--- a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_fr.properties\n+++ b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_fr.properties\n@@ -145,3 +145,5 @@ two_dots = Deux points cons\\u00E9cutif\n uk = Ukrainien\n \n unpaired_brackets = Il manque une parenth\\u00E8se fermante ou ouvrante, guillemet fermant ou ouvrant etc.\n+\n+guiMenuShowMainWindow = Open main window\ndiff --git a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_lt.properties b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_lt.properties\nindex 9d5fd96f03..adbfff5175 100644\n--- a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_lt.properties\n+++ b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_lt.properties\n@@ -146,3 +146,5 @@ uk = ukrainie\\u010Di\\u0173\n \n #fixme:\n unpaired_brackets = Unpaired bracket or similar symbol\n+\n+guiMenuShowMainWindow = Open main window\ndiff --git a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_nl.properties b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_nl.properties\nindex 628a54310a..6e5e6499f6 100644\n--- a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_nl.properties\n+++ b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_nl.properties\n@@ -145,3 +145,5 @@ two_dots = Twee opeenvolgende punten\n uk = Oekra\\u00EFens\n \n unpaired_brackets = Oneven aantal teksthaken\n+\n+guiMenuShowMainWindow = Open main window\ndiff --git a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_pl.properties b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_pl.properties\nindex 71ca2cf03e..d73a577c19 100644\n--- a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_pl.properties\n+++ b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_pl.properties\n@@ -145,3 +145,5 @@ two_dots = Dwie kropki\n uk = ukrai\\u0144ski\n \n unpaired_brackets = Niesparowany cudzys\\u0142\\u00F3w, nawias itd.\n+\n+guiMenuShowMainWindow = Open main window\ndiff --git a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_sl.properties b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_sl.properties\nindex a5a049deaf..944460ac95 100644\n--- a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_sl.properties\n+++ b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_sl.properties\n@@ -145,3 +145,5 @@ two_dots = Dve zaporedni piki\n uk = ukrajin\\u0161\\u010Dina\n \n unpaired_brackets = Neparni oklepaji ali podobni znaki\n+\n+guiMenuShowMainWindow = Open main window\ndiff --git a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_uk.properties b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_uk.properties\nindex 33080cb19b..7d7d27da75 100644\n--- a/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_uk.properties\n+++ b/trunk/JLanguageTool/src/java/de/danielnaber/languagetool/MessagesBundle_uk.properties\n@@ -145,3 +145,5 @@ two_dots = \\u041F\\u043E\\u0434\\u0432\\u0456\\u0439\\u043D\\u0430 \\u043A\\u0440\\u0430\\u\n uk = \\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\n \n unpaired_brackets = \\u041D\\u0435\\u043F\\u0430\\u0440\\u043D\\u0456 \\u0434\\u0443\\u0436\\u043A\\u0438 \\u0430\\u0431\\u043E \\u0456\\u043D\\u0448\\u0456 \\u0432\\u0438\\u043E\\u043A\\u0440\\u0435\\u043C\\u043B\\u044E\\u0432\\u0430\\u043B\\u043D\\u0456 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0438\n+\n+guiMenuShowMainWindow = Open main window",
    "update IR codec and add Token class to hold IR tokens for rework of OTF .": "diff --git a/sbe-tool/src/main/cpp/otf_api/Ir.cpp b/sbe-tool/src/main/cpp/otf_api/Ir.cpp\nindex 581cef75..199573d6 100644\n--- a/sbe-tool/src/main/cpp/otf_api/Ir.cpp\n+++ b/sbe-tool/src/main/cpp/otf_api/Ir.cpp\n@@ -140,6 +140,11 @@ bool Ir::end() const\n     return impl_->tokenCodec.tokenSize();\n }\n \n+::int32_t Ir::componentTokenCount() const\n+{\n+    return impl_->tokenCodec.componentTokenCount();\n+}\n+\n Ir::TokenSignal Ir::signal() const\n {\n     // the serialized IR and the Ir::TokenSignal enums MUST be kept in sync!\ndiff --git a/sbe-tool/src/main/cpp/otf_api/Ir.h b/sbe-tool/src/main/cpp/otf_api/Ir.h\nindex caf90502..1d32e355 100644\n--- a/sbe-tool/src/main/cpp/otf_api/Ir.h\n+++ b/sbe-tool/src/main/cpp/otf_api/Ir.h\n@@ -186,6 +186,8 @@ public:\n     ::int32_t offset() const;\n     /// Retrieve the size value of the current token\n     ::int32_t size() const;\n+    /// Retrieve the count of tokens in current component\n+    ::int32_t componentTokenCount() const;\n     /// Retrieve the Ir::TokenSignal of the current token\n     TokenSignal signal() const;\n     /// Retrieve the Ir::TokenByteOrder of the current token\ndiff --git a/sbe-tool/src/main/cpp/otf_api/Token.h b/sbe-tool/src/main/cpp/otf_api/Token.h\nnew file mode 100644\nindex 00000000..4c05dd96\n--- /dev/null\n+++ b/sbe-tool/src/main/cpp/otf_api/Token.h\n@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2015 Real Logic Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+#ifndef _TOKEN_H\n+#define _TOKEN_H\n+\n+#include \"Ir.h\"\n+\n+namespace sbe {\n+namespace on_the_fly {\n+\n+/*\n+ * Hold the state for a single token in the IR\n+ */\n+class Token\n+{\n+public:\n+    Token(int index, const Ir *ir);\n+\n+private:\n+    int offset_;\n+    int index_;\n+};\n+\n+}}\n+\n+#endif //TOKEN_H\ndiff --git a/sbe-tool/src/main/cpp/uk_co_real_logic_sbe_ir_generated/TokenCodec.hpp b/sbe-tool/src/main/cpp/uk_co_real_logic_sbe_ir_generated/TokenCodec.hpp\nindex 09f16715..f3855201 100644\n--- a/sbe-tool/src/main/cpp/uk_co_real_logic_sbe_ir_generated/TokenCodec.hpp\n+++ b/sbe-tool/src/main/cpp/uk_co_real_logic_sbe_ir_generated/TokenCodec.hpp\n@@ -84,7 +84,7 @@ public:\n \n     static const sbe_uint16_t sbeBlockLength(void)\n     {\n-        return (sbe_uint16_t)20;\n+        return (sbe_uint16_t)24;\n     }\n \n     static const sbe_uint16_t sbeTemplateId(void)\n@@ -369,11 +369,65 @@ public:\n         return *this;\n     }\n \n-    static const int signalId(void)\n+    static const int componentTokenCountId(void)\n     {\n         return 15;\n     }\n \n+    static const int componentTokenCountSinceVersion(void)\n+    {\n+         return 0;\n+    }\n+\n+    bool componentTokenCountInActingVersion(void)\n+    {\n+        return (actingVersion_ >= 0) ? true : false;\n+    }\n+\n+\n+    static const char *componentTokenCountMetaAttribute(const MetaAttribute::Attribute metaAttribute)\n+    {\n+        switch (metaAttribute)\n+        {\n+            case MetaAttribute::EPOCH: return \"unix\";\n+            case MetaAttribute::TIME_UNIT: return \"nanosecond\";\n+            case MetaAttribute::SEMANTIC_TYPE: return \"\";\n+        }\n+\n+        return \"\";\n+    }\n+\n+    static const sbe_int32_t componentTokenCountNullValue()\n+    {\n+        return SBE_NULLVALUE_INT32;\n+    }\n+\n+    static const sbe_int32_t componentTokenCountMinValue()\n+    {\n+        return -2147483647;\n+    }\n+\n+    static const sbe_int32_t componentTokenCountMaxValue()\n+    {\n+        return 2147483647;\n+    }\n+\n+    sbe_int32_t componentTokenCount(void) const\n+    {\n+        return SBE_LITTLE_ENDIAN_ENCODE_32(*((sbe_int32_t *)(buffer_ + offset_ + 16)));\n+    }\n+\n+    TokenCodec &componentTokenCount(const sbe_int32_t value)\n+    {\n+        *((sbe_int32_t *)(buffer_ + offset_ + 16)) = SBE_LITTLE_ENDIAN_ENCODE_32(value);\n+        return *this;\n+    }\n+\n+    static const int signalId(void)\n+    {\n+        return 16;\n+    }\n+\n     static const int signalSinceVersion(void)\n     {\n          return 0;\n@@ -399,18 +453,18 @@ public:\n \n     SignalCodec::Value signal(void) const\n     {\n-        return SignalCodec::get((*((sbe_uint8_t *)(buffer_ + offset_ + 16))));\n+        return SignalCodec::get((*((sbe_uint8_t *)(buffer_ + offset_ + 20))));\n     }\n \n     TokenCodec &signal(const SignalCodec::Value value)\n     {\n-        *((sbe_uint8_t *)(buffer_ + offset_ + 16)) = (value);\n+        *((sbe_uint8_t *)(buffer_ + offset_ + 20)) = (value);\n         return *this;\n     }\n \n     static const int primitiveTypeId(void)\n     {\n-        return 16;\n+        return 17;\n     }\n \n     static const int primitiveTypeSinceVersion(void)\n@@ -438,18 +492,18 @@ public:\n \n     PrimitiveTypeCodec::Value primitiveType(void) const\n     {\n-        return PrimitiveTypeCodec::get((*((sbe_uint8_t *)(buffer_ + offset_ + 17))));\n+        return PrimitiveTypeCodec::get((*((sbe_uint8_t *)(buffer_ + offset_ + 21))));\n     }\n \n     TokenCodec &primitiveType(const PrimitiveTypeCodec::Value value)\n     {\n-        *((sbe_uint8_t *)(buffer_ + offset_ + 17)) = (value);\n+        *((sbe_uint8_t *)(buffer_ + offset_ + 21)) = (value);\n         return *this;\n     }\n \n     static const int byteOrderId(void)\n     {\n-        return 17;\n+        return 18;\n     }\n \n     static const int byteOrderSinceVersion(void)\n@@ -477,18 +531,18 @@ public:\n \n     ByteOrderCodec::Value byteOrder(void) const\n     {\n-        return ByteOrderCodec::get((*((sbe_uint8_t *)(buffer_ + offset_ + 18))));\n+        return ByteOrderCodec::get((*((sbe_uint8_t *)(buffer_ + offset_ + 22))));\n     }\n \n     TokenCodec &byteOrder(const ByteOrderCodec::Value value)\n     {\n-        *((sbe_uint8_t *)(buffer_ + offset_ + 18)) = (value);\n+        *((sbe_uint8_t *)(buffer_ + offset_ + 22)) = (value);\n         return *this;\n     }\n \n     static const int presenceId(void)\n     {\n-        return 18;\n+        return 19;\n     }\n \n     static const int presenceSinceVersion(void)\n@@ -516,12 +570,12 @@ public:\n \n     PresenceCodec::Value presence(void) const\n     {\n-        return PresenceCodec::get((*((sbe_uint8_t *)(buffer_ + offset_ + 19))));\n+        return PresenceCodec::get((*((sbe_uint8_t *)(buffer_ + offset_ + 23))));\n     }\n \n     TokenCodec &presence(const PresenceCodec::Value value)\n     {\n-        *((sbe_uint8_t *)(buffer_ + offset_ + 19)) = (value);\n+        *((sbe_uint8_t *)(buffer_ + offset_ + 23)) = (value);\n         return *this;\n     }\n \n@@ -554,7 +608,7 @@ public:\n \n     static const int nameId(void)\n     {\n-        return 19;\n+        return 20;\n     }\n \n \n@@ -629,7 +683,7 @@ public:\n \n     static const int constValueId(void)\n     {\n-        return 20;\n+        return 21;\n     }\n \n \n@@ -704,7 +758,7 @@ public:\n \n     static const int minValueId(void)\n     {\n-        return 21;\n+        return 22;\n     }\n \n \n@@ -779,7 +833,7 @@ public:\n \n     static const int maxValueId(void)\n     {\n-        return 22;\n+        return 23;\n     }\n \n \n@@ -854,7 +908,7 @@ public:\n \n     static const int nullValueId(void)\n     {\n-        return 23;\n+        return 24;\n     }\n \n \n@@ -929,7 +983,7 @@ public:\n \n     static const int characterEncodingId(void)\n     {\n-        return 24;\n+        return 25;\n     }\n \n \n@@ -1004,7 +1058,7 @@ public:\n \n     static const int epochId(void)\n     {\n-        return 25;\n+        return 26;\n     }\n \n \n@@ -1079,7 +1133,7 @@ public:\n \n     static const int timeUnitId(void)\n     {\n-        return 26;\n+        return 27;\n     }\n \n \n@@ -1154,7 +1208,7 @@ public:\n \n     static const int semanticTypeId(void)\n     {\n-        return 27;\n+        return 28;\n     }\n \n ",
    "Create a DumpFileAsserts from the dumpfile logic in FakeExtractorOutput .": "diff --git a/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacPlaybackTest.java b/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacPlaybackTest.java\nindex ccd0da4e19..c3c7b00149 100644\n--- a/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacPlaybackTest.java\n+++ b/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacPlaybackTest.java\n@@ -34,6 +34,7 @@ import com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor;\n import com.google.android.exoplayer2.source.MediaSource;\n import com.google.android.exoplayer2.source.ProgressiveMediaSource;\n import com.google.android.exoplayer2.testutil.CapturingAudioSink;\n+import com.google.android.exoplayer2.testutil.DumpFileAsserts;\n import com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;\n import org.junit.Before;\n import org.junit.Test;\n@@ -80,8 +81,8 @@ public class FlacPlaybackTest {\n       throw testPlaybackRunnable.playbackException;\n     }\n \n-    audioSink.assertOutput(\n-        ApplicationProvider.getApplicationContext(), fileName + \".audiosink.dump\");\n+    DumpFileAsserts.assertOutput(\n+        ApplicationProvider.getApplicationContext(), audioSink, fileName + \".audiosink.dump\");\n   }\n \n   private static class TestPlaybackRunnable implements Player.EventListener, Runnable {\ndiff --git a/library/hls/src/test/java/com/google/android/exoplayer2/source/hls/WebvttExtractorTest.java b/library/hls/src/test/java/com/google/android/exoplayer2/source/hls/WebvttExtractorTest.java\nindex 5f1169e222..5da804a996 100644\n--- a/library/hls/src/test/java/com/google/android/exoplayer2/source/hls/WebvttExtractorTest.java\n+++ b/library/hls/src/test/java/com/google/android/exoplayer2/source/hls/WebvttExtractorTest.java\n@@ -20,6 +20,7 @@ import static com.google.common.truth.Truth.assertThat;\n import androidx.test.core.app.ApplicationProvider;\n import androidx.test.ext.junit.runners.AndroidJUnit4;\n import com.google.android.exoplayer2.extractor.ExtractorInput;\n+import com.google.android.exoplayer2.testutil.DumpFileAsserts;\n import com.google.android.exoplayer2.testutil.FakeExtractorInput;\n import com.google.android.exoplayer2.testutil.FakeExtractorOutput;\n import com.google.android.exoplayer2.testutil.TestUtil;\n@@ -83,8 +84,10 @@ public class WebvttExtractorTest {\n     // The output has a ~5s sampleTime and a large, negative subsampleOffset because the cue\n     // timestamps are ~10 days ahead of the PTS (due to wrapping) so the offset is used to ensure\n     // they're rendered at the right time.\n-    output.assertOutput(\n-        ApplicationProvider.getApplicationContext(), \"webvtt/with_x-timestamp-map_header.dump\");\n+    DumpFileAsserts.assertOutput(\n+        ApplicationProvider.getApplicationContext(),\n+        output,\n+        \"webvtt/with_x-timestamp-map_header.dump\");\n   }\n \n   private static boolean sniffData(byte[] data) throws IOException {\ndiff --git a/testutils/src/main/java/com/google/android/exoplayer2/testutil/CapturingAudioSink.java b/testutils/src/main/java/com/google/android/exoplayer2/testutil/CapturingAudioSink.java\nindex ead5bd24d9..bf1ffdce0e 100644\n--- a/testutils/src/main/java/com/google/android/exoplayer2/testutil/CapturingAudioSink.java\n+++ b/testutils/src/main/java/com/google/android/exoplayer2/testutil/CapturingAudioSink.java\n@@ -15,18 +15,11 @@\n  */\n package com.google.android.exoplayer2.testutil;\n \n-import static com.google.common.truth.Truth.assertWithMessage;\n-\n-import android.content.Context;\n import androidx.annotation.Nullable;\n import com.google.android.exoplayer2.C;\n import com.google.android.exoplayer2.Format;\n import com.google.android.exoplayer2.audio.AudioSink;\n import com.google.android.exoplayer2.audio.ForwardingAudioSink;\n-import com.google.android.exoplayer2.util.Assertions;\n-import java.io.File;\n-import java.io.IOException;\n-import java.io.PrintWriter;\n import java.nio.ByteBuffer;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -35,15 +28,6 @@ import java.util.List;\n /** A {@link ForwardingAudioSink} that captures configuration, discontinuity and buffer events. */\n public final class CapturingAudioSink extends ForwardingAudioSink implements Dumper.Dumpable {\n \n-  /**\n-   * If true, makes {@link #assertOutput(Context, String)} method write the output to a file, rather\n-   * than validating that the output matches the dump file.\n-   *\n-   * <p>The output file is written to the test apk's external storage directory, which is typically:\n-   * {@code /sdcard/Android/data/${package-under-test}.test/files/}.\n-   */\n-  private static final boolean WRITE_DUMP = false;\n-\n   private final List<Dumper.Dumpable> interceptedData;\n   @Nullable private ByteBuffer currentBuffer;\n \n@@ -98,30 +82,6 @@ public final class CapturingAudioSink extends ForwardingAudioSink implements Dum\n     super.reset();\n   }\n \n-  /**\n-   * Asserts that dump of this sink is equal to expected dump which is read from {@code dumpFile}.\n-   *\n-   * <p>If assertion fails because of an intended change in the output or a new dump file needs to\n-   * be created, set {@link #WRITE_DUMP} flag to true and run the test again. Instead of assertion,\n-   * actual dump will be written to {@code dumpFile}. This new dump file needs to be copied to the\n-   * project, {@code library/src/androidTest/assets} folder manually.\n-   */\n-  public void assertOutput(Context context, String dumpFile) throws IOException {\n-    String actual = new Dumper().add(this).toString();\n-\n-    if (WRITE_DUMP) {\n-      File directory = context.getExternalFilesDir(null);\n-      File file = new File(directory, dumpFile);\n-      Assertions.checkStateNotNull(file.getParentFile()).mkdirs();\n-      PrintWriter out = new PrintWriter(file);\n-      out.print(actual);\n-      out.close();\n-    } else {\n-      String expected = TestUtil.getString(context, dumpFile);\n-      assertWithMessage(dumpFile).that(actual).isEqualTo(expected);\n-    }\n-  }\n-\n   @Override\n   public void dump(Dumper dumper) {\n     for (int i = 0; i < interceptedData.size(); i++) {\ndiff --git a/testutils/src/main/java/com/google/android/exoplayer2/testutil/DumpFileAsserts.java b/testutils/src/main/java/com/google/android/exoplayer2/testutil/DumpFileAsserts.java\nnew file mode 100644\nindex 0000000000..42884ec6f4\n--- /dev/null\n+++ b/testutils/src/main/java/com/google/android/exoplayer2/testutil/DumpFileAsserts.java\n@@ -0,0 +1,110 @@\n+/*\n+ * Copyright (C) 2020 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.android.exoplayer2.testutil;\n+\n+import static com.google.common.truth.Truth.assertWithMessage;\n+\n+import android.content.Context;\n+import androidx.annotation.IntDef;\n+import com.google.android.exoplayer2.util.Assertions;\n+import com.google.common.base.StandardSystemProperty;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+/**\n+ * Helper class to enable assertions based on golden-data dump files.\n+ *\n+ * <p>Allows the golden files to be easily updated with new data (see more info in the docs on\n+ * {@link #DUMP_FILE_ACTION}).\n+ *\n+ * <p>Compatible with {@link Dumper.Dumpable} but can also be used directly with Strings generated\n+ * through different means.\n+ */\n+public class DumpFileAsserts {\n+\n+  private static final String DUMP_UPDATE_INSTRUCTIONS =\n+      \"To update the dump file, change DumpFileAsserts#DUMP_FILE_ACTION to WRITE_TO_LOCAL (for\"\n+          + \" Robolectric tests) or WRITE_TO_DEVICE (for instrumentation tests) and re-run the\"\n+          + \" test.\";\n+\n+  /** Possible actions to take with the dumps passed to {@link #assertOutput}. */\n+  @Documented\n+  @Retention(RetentionPolicy.SOURCE)\n+  @IntDef(\n+      flag = true,\n+      value = {COMPARE_WITH_EXISTING, WRITE_TO_LOCAL, WRITE_TO_DEVICE})\n+  private @interface DumpFilesAction {}\n+  /** Compare output with existing dump file. */\n+  private static final int COMPARE_WITH_EXISTING = 0;\n+  /**\n+   * Write output to the project folder {@code testdata/src/test}.\n+   *\n+   * <p>Enabling this option works when tests are run in Android Studio. It may not work when the\n+   * tests are run in another environment.\n+   */\n+  private static final int WRITE_TO_LOCAL = 1;\n+  /** Write output to folder {@code /storage/emulated/0/Android/data} of device. */\n+  private static final int WRITE_TO_DEVICE = 1 << 1;\n+\n+  @DumpFilesAction private static final int DUMP_FILE_ACTION = COMPARE_WITH_EXISTING;\n+\n+  private DumpFileAsserts() {}\n+\n+  public static void assertOutput(Context context, Dumper.Dumpable actual, String dumpFile)\n+      throws IOException {\n+    assertOutput(context, new Dumper().add(actual).toString(), dumpFile);\n+  }\n+\n+  /**\n+   * Asserts that {@code actual} is equal to the contents of {@code dumpFile}.\n+   *\n+   * <p>If the assertion fails because of an intended change in the output or a new dump file needs\n+   * to be created, set {@link #DUMP_FILE_ACTION} to {@link #WRITE_TO_LOCAL} for local tests and to\n+   * {@link #WRITE_TO_DEVICE} for instrumentation tests, and run the test again. Instead of\n+   * assertion, {@code actual} will be written to {@code dumpFile}. For instrumentation tests, this\n+   * new dump file needs to be copied to the project {@code testdata/src/test} folder manually.\n+   */\n+  public static void assertOutput(Context context, String actual, String dumpFile)\n+      throws IOException {\n+    if (DUMP_FILE_ACTION == COMPARE_WITH_EXISTING) {\n+      String expected;\n+      try {\n+        expected = TestUtil.getString(context, dumpFile);\n+      } catch (FileNotFoundException e) {\n+        throw new IOException(\"Dump file not found. \" + DUMP_UPDATE_INSTRUCTIONS, e);\n+      }\n+      assertWithMessage(\n+              \"Actual data doesn't match dump file: %s\\n%s\", dumpFile, DUMP_UPDATE_INSTRUCTIONS)\n+          .that(actual)\n+          .isEqualTo(expected);\n+    } else {\n+      File file =\n+          DUMP_FILE_ACTION == WRITE_TO_LOCAL\n+              ? new File(StandardSystemProperty.USER_DIR.value(), \"../../testdata/src/test\")\n+              : context.getExternalFilesDir(null);\n+      file = new File(file, dumpFile);\n+      Assertions.checkStateNotNull(file.getParentFile()).mkdirs();\n+      PrintWriter out = new PrintWriter(file);\n+      out.print(actual);\n+      out.close();\n+    }\n+  }\n+}\ndiff --git a/testutils/src/main/java/com/google/android/exoplayer2/testutil/ExtractorAsserts.java b/testutils/src/main/java/com/google/android/exoplayer2/testutil/ExtractorAsserts.java\nindex 7411016177..c396e41f4a 100644\n--- a/testutils/src/main/java/com/google/android/exoplayer2/testutil/ExtractorAsserts.java\n+++ b/testutils/src/main/java/com/google/android/exoplayer2/testutil/ExtractorAsserts.java\n@@ -326,9 +326,11 @@ public final class ExtractorAsserts {\n     FakeExtractorOutput extractorOutput =\n         consumeTestData(extractor, input, 0, true, deduplicateConsecutiveFormats);\n     if (simulateUnknownLength) {\n-      extractorOutput.assertOutput(context, dumpFilesPrefix + UNKNOWN_LENGTH_EXTENSION);\n+      DumpFileAsserts.assertOutput(\n+          context, extractorOutput, dumpFilesPrefix + UNKNOWN_LENGTH_EXTENSION);\n     } else {\n-      extractorOutput.assertOutput(context, dumpFilesPrefix + \".0\" + DUMP_EXTENSION);\n+      DumpFileAsserts.assertOutput(\n+          context, extractorOutput, dumpFilesPrefix + \".0\" + DUMP_EXTENSION);\n     }\n \n     // Seeking to (timeUs=0, position=0) should always work, and cause the same data to be output.\n@@ -336,9 +338,11 @@ public final class ExtractorAsserts {\n     input.reset();\n     consumeTestData(extractor, input, /* timeUs= */ 0, extractorOutput, false);\n     if (simulateUnknownLength) {\n-      extractorOutput.assertOutput(context, dumpFilesPrefix + UNKNOWN_LENGTH_EXTENSION);\n+      DumpFileAsserts.assertOutput(\n+          context, extractorOutput, dumpFilesPrefix + UNKNOWN_LENGTH_EXTENSION);\n     } else {\n-      extractorOutput.assertOutput(context, dumpFilesPrefix + \".0\" + DUMP_EXTENSION);\n+      DumpFileAsserts.assertOutput(\n+          context, extractorOutput, dumpFilesPrefix + \".0\" + DUMP_EXTENSION);\n     }\n \n     SeekMap seekMap = Assertions.checkNotNull(extractorOutput.seekMap);\n@@ -357,9 +361,11 @@ public final class ExtractorAsserts {\n       extractorOutput.clearTrackOutputs();\n       consumeTestData(extractor, input, timeUs, extractorOutput, false);\n       if (simulateUnknownLength && timeUs == 0) {\n-        extractorOutput.assertOutput(context, dumpFilesPrefix + UNKNOWN_LENGTH_EXTENSION);\n+        DumpFileAsserts.assertOutput(\n+            context, extractorOutput, dumpFilesPrefix + UNKNOWN_LENGTH_EXTENSION);\n       } else {\n-        extractorOutput.assertOutput(context, dumpFilesPrefix + '.' + j + DUMP_EXTENSION);\n+        DumpFileAsserts.assertOutput(\n+            context, extractorOutput, dumpFilesPrefix + '.' + j + DUMP_EXTENSION);\n       }\n     }\n   }\ndiff --git a/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeExtractorOutput.java b/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeExtractorOutput.java\nindex 6df4fc4dd2..6253ae4daa 100644\n--- a/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeExtractorOutput.java\n+++ b/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeExtractorOutput.java\n@@ -16,57 +16,17 @@\n package com.google.android.exoplayer2.testutil;\n \n import static com.google.common.truth.Truth.assertThat;\n-import static com.google.common.truth.Truth.assertWithMessage;\n \n-import android.content.Context;\n import android.util.SparseArray;\n-import androidx.annotation.IntDef;\n import androidx.annotation.Nullable;\n import com.google.android.exoplayer2.C;\n import com.google.android.exoplayer2.extractor.ExtractorOutput;\n import com.google.android.exoplayer2.extractor.SeekMap;\n-import com.google.android.exoplayer2.util.Assertions;\n-import java.io.File;\n-import java.io.FileNotFoundException;\n-import java.io.IOException;\n-import java.io.PrintWriter;\n-import java.lang.annotation.Documented;\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.RetentionPolicy;\n import org.checkerframework.checker.nullness.qual.MonotonicNonNull;\n \n /** A fake {@link ExtractorOutput}. */\n public final class FakeExtractorOutput implements ExtractorOutput, Dumper.Dumpable {\n \n-  private static final String DUMP_UPDATE_INSTRUCTIONS =\n-      \"To update the dump file, change FakeExtractorOutput#DUMP_FILE_ACTION to WRITE_TO_LOCAL (for\"\n-          + \" Robolectric tests) or WRITE_TO_DEVICE (for instrumentation tests) and re-run the\"\n-          + \" test.\";\n-\n-  /**\n-   * Possible actions to take with the dumps generated from this {@code FakeExtractorOutput} in\n-   * {@link #assertOutput(Context, String)}.\n-   */\n-  @Documented\n-  @Retention(RetentionPolicy.SOURCE)\n-  @IntDef(\n-      flag = true,\n-      value = {COMPARE_WITH_EXISTING, WRITE_TO_LOCAL, WRITE_TO_DEVICE})\n-  private @interface DumpFilesAction {}\n-  /** Compare output with existing dump file. */\n-  private static final int COMPARE_WITH_EXISTING = 0;\n-  /**\n-   * Write output to the project folder {@code testdata/src/test/assets}.\n-   *\n-   * <p>Enabling this option works when tests are run in Android Studio. It may not work when the\n-   * tests are run in another environment.\n-   */\n-  private static final int WRITE_TO_LOCAL = 1;\n-  /** Write output to folder {@code /storage/emulated/0/Android/data} of device. */\n-  private static final int WRITE_TO_DEVICE = 1 << 1;\n-\n-  @DumpFilesAction private static final int DUMP_FILE_ACTION = COMPARE_WITH_EXISTING;\n-\n   public final SparseArray<FakeTrackOutput> trackOutputs;\n   private final FakeTrackOutput.Factory trackOutputFactory;\n \n@@ -124,44 +84,6 @@ public final class FakeExtractorOutput implements ExtractorOutput, Dumper.Dumpab\n     }\n   }\n \n-  /**\n-   * Asserts that dump of this {@link FakeExtractorOutput} is equal to expected dump which is read\n-   * from {@code dumpFile}.\n-   *\n-   * <p>If assertion fails because of an intended change in the output or a new dump file needs to\n-   * be created, set {@link #DUMP_FILE_ACTION} to {@link #WRITE_TO_LOCAL} for local tests and to\n-   * {@link #WRITE_TO_DEVICE} for instrumentation tests, and run the test again. Instead of\n-   * assertion, actual dump will be written to {@code dumpFile}. For instrumentation tests, this new\n-   * dump file needs to be copied to the project {@code testdata/src/test/assets} folder manually.\n-   */\n-  public void assertOutput(Context context, String dumpFile) throws IOException {\n-    String actual = new Dumper().add(this).toString();\n-\n-    if (DUMP_FILE_ACTION == COMPARE_WITH_EXISTING) {\n-      String expected;\n-      try {\n-        expected = TestUtil.getString(context, dumpFile);\n-      } catch (FileNotFoundException e) {\n-        throw new IOException(\"Dump file not found. \" + DUMP_UPDATE_INSTRUCTIONS, e);\n-      }\n-      assertWithMessage(\n-              \"Extractor output doesn't match dump file: %s\\n%s\",\n-              dumpFile, DUMP_UPDATE_INSTRUCTIONS)\n-          .that(actual)\n-          .isEqualTo(expected);\n-    } else {\n-      File file =\n-          DUMP_FILE_ACTION == WRITE_TO_LOCAL\n-              ? new File(System.getProperty(\"user.dir\"), \"../../testdata/src/test/assets\")\n-              : context.getExternalFilesDir(null);\n-      file = new File(file, dumpFile);\n-      Assertions.checkStateNotNull(file.getParentFile()).mkdirs();\n-      PrintWriter out = new PrintWriter(file);\n-      out.print(actual);\n-      out.close();\n-    }\n-  }\n-\n   @Override\n   public void dump(Dumper dumper) {\n     if (seekMap != null) {",
    "fix bug found by CR .": "diff --git a/src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java b/src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java\nindex 7ad211d71c..d630ce8d46 100644\n--- a/src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java\n+++ b/src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java\n@@ -93,6 +93,7 @@ public class UploadFilesActivity extends FileActivity implements\n     private Account mAccountOnCreation;\n     private DialogFragment mCurrentDialog;\n     private Menu mOptionsMenu;\n+    private SearchView mSearchView;\n \n     public static final String EXTRA_CHOSEN_FILES =\n             UploadFilesActivity.class.getCanonicalName() + \".EXTRA_CHOSEN_FILES\";\n@@ -237,11 +238,11 @@ public class UploadFilesActivity extends FileActivity implements\n \n         int fontColor = ThemeUtils.fontColor(this);\n         final MenuItem item = menu.findItem(R.id.action_search);\n-        SearchView searchView = (SearchView) MenuItemCompat.getActionView(item);\n-        EditText editText = searchView.findViewById(android.support.v7.appcompat.R.id.search_src_text);\n+        mSearchView = (SearchView) MenuItemCompat.getActionView(item);\n+        EditText editText = mSearchView.findViewById(android.support.v7.appcompat.R.id.search_src_text);\n         editText.setHintTextColor(fontColor);\n         editText.setTextColor(fontColor);\n-        ImageView searchClose = searchView.findViewById(android.support.v7.appcompat.R.id.search_close_btn);\n+        ImageView searchClose = mSearchView.findViewById(android.support.v7.appcompat.R.id.search_close_btn);\n         searchClose.setColorFilter(fontColor);\n \n \n@@ -314,27 +315,43 @@ public class UploadFilesActivity extends FileActivity implements\n         }\n         return true;\n     }\n+\n+    private boolean isSearchOpen() {\n+        if (mSearchView == null) {\n+            return false;\n+        } else {\n+            View mSearchEditFrame = mSearchView.findViewById(android.support.v7.appcompat.R.id.search_edit_frame);\n+            return (mSearchEditFrame != null && mSearchEditFrame.getVisibility() == View.VISIBLE);\n+        }\n+    }\n     \n     @Override\n     public void onBackPressed() {\n-        if (mDirectories.getCount() <= 1) {\n-            finish();\n-            return;\n-        }\n-        popDirname();\n-        mFileListFragment.onNavigateUp();\n-        mCurrentDir = mFileListFragment.getCurrentDirectory();\n-\n-        if (mCurrentDir.getParentFile() == null) {\n-            ActionBar actionBar = getSupportActionBar();\n-            if (actionBar != null) {\n-                actionBar.setDisplayHomeAsUpEnabled(false);\n+        if (isSearchOpen() && mSearchView != null) {\n+            mSearchView.setQuery(\"\", false);\n+            mFileListFragment.onClose();\n+            mSearchView.onActionViewCollapsed();\n+            setDrawerIndicatorEnabled(isDrawerIndicatorAvailable());\n+        } else {\n+            if (mDirectories.getCount() <= 1) {\n+                finish();\n+                return;\n+            }\n+            popDirname();\n+            mFileListFragment.onNavigateUp();\n+            mCurrentDir = mFileListFragment.getCurrentDirectory();\n+\n+            if (mCurrentDir.getParentFile() == null) {\n+                ActionBar actionBar = getSupportActionBar();\n+                if (actionBar != null) {\n+                    actionBar.setDisplayHomeAsUpEnabled(false);\n+         ",
    "Added ShadowPreference support for default value": "diff --git a/src/main/java/com/xtremelabs/robolectric/shadows/ShadowPreference.java b/src/main/java/com/xtremelabs/robolectric/shadows/ShadowPreference.java\nindex a9c4f117f..d1099db88 100644\n--- a/src/main/java/com/xtremelabs/robolectric/shadows/ShadowPreference.java\n+++ b/src/main/java/com/xtremelabs/robolectric/shadows/ShadowPreference.java\n@@ -20,6 +20,7 @@ public class ShadowPreference {\n \tprotected String key;\n \tprotected CharSequence title;\n \tprotected CharSequence summary;\n+\tprotected Object defaultValue;\n \t\n \tpublic void __constructor__(Context context) {\n \t\t__constructor__(context, null, 0);\n@@ -132,4 +133,13 @@ public class ShadowPreference {\n \t\treturn key;\n \t}\n \t\n+\t@Implementation\n+\tpublic void setDefaultValue(Object defaultValue) {\n+\t\tthis.defaultValue = defaultValue;\n+\t}\n+\t\n+\tpublic Object getDefaultValue() {\n+\t\treturn defaultValue;\n+\t}\n+\t\n }\ndiff --git a/src/test/java/com/xtremelabs/robolectric/shadows/PreferenceTest.java b/src/test/java/com/xtremelabs/robolectric/shadows/PreferenceTest.java\nindex 3de58e8a9..42967cf26 100644\n--- a/src/test/java/com/xtremelabs/robolectric/shadows/PreferenceTest.java\n+++ b/src/test/java/com/xtremelabs/robolectric/shadows/PreferenceTest.java\n@@ -116,6 +116,15 @@ public class PreferenceTest {\n \t\tpreference.setSummary(R.string.hello);\n \t\tassertThat(preference.getSummary(), equalTo(expected));\t\n \t}\n+\t\n+\t@Test\n+\tpublic void shouldRememberDefaultValue() {\n+\t\tObject defaultValue = \"Zoodles was here\";\n+\t\t\n+\t\tassertThat(shadow.getDefaultValue(), nullValue());\n+\t\tpreference.setDefaultValue(defaultValue);\n+\t\tassertThat(shadow.getDefaultValue(), sameInstance(defaultValue));\n+\t}\n \n \t\n \t@Test",
    "Add XNIO compatibility pool": "diff --git a/core/src/main/java/io/undertow/server/XnioByteBufferPool.java b/core/src/main/java/io/undertow/server/XnioByteBufferPool.java\nnew file mode 100644\nindex 000000000..6cd9e5c40\n--- /dev/null\n+++ b/core/src/main/java/io/undertow/server/XnioByteBufferPool.java\n@@ -0,0 +1,77 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.undertow.server;\n+\n+import io.undertow.connector.ByteBufferPool;\n+import io.undertow.connector.PooledByteBuffer;\n+import org.xnio.Pool;\n+import org.xnio.Pooled;\n+\n+import java.nio.ByteBuffer;\n+\n+/**\n+ * @author Stuart Douglas\n+ */\n+public class XnioByteBufferPool implements ByteBufferPool {\n+\n+    private final Pool<ByteBuffer> pool;\n+    private final int bufferSize;\n+\n+    public XnioByteBufferPool(Pool<ByteBuffer> pool) {\n+        this.pool = pool;\n+        Pooled<ByteBuffer> buf = pool.allocate();\n+        bufferSize = buf.getResource().remaining();\n+        buf.free();\n+    }\n+\n+    @Override\n+    public PooledByteBuffer allocate() {\n+        final Pooled<ByteBuffer> buf = pool.allocate();\n+        return new PooledByteBuffer() {\n+\n+            private boolean open = true;\n+\n+            @Override\n+            public ByteBuffer getBuffer() {\n+                return buf.getResource();\n+            }\n+\n+            @Override\n+            public void close() {\n+                open = false;\n+                buf.free();\n+            }\n+\n+            @Override\n+            public boolean isOpen() {\n+                return open;\n+            }\n+        };\n+    }\n+\n+    @Override\n+    public void close() {\n+\n+    }\n+\n+    @Override\n+    public int getBufferSize() {\n+        return bufferSize;\n+    }\n+}\ndiff --git a/core/src/main/java/io/undertow/server/protocol/ajp/AjpOpenListener.java b/core/src/main/java/io/undertow/server/protocol/ajp/AjpOpenListener.java\nindex 69308c67c..c0429954d 100644\n--- a/core/src/main/java/io/undertow/server/protocol/ajp/AjpOpenListener.java\n+++ b/core/src/main/java/io/undertow/server/protocol/ajp/AjpOpenListener.java\n@@ -29,14 +29,17 @@ import io.undertow.server.ConnectorStatistics;\n import io.undertow.server.ConnectorStatisticsImpl;\n import io.undertow.server.HttpHandler;\n import io.undertow.server.OpenListener;\n+import io.undertow.server.XnioByteBufferPool;\n import org.xnio.IoUtils;\n import org.xnio.OptionMap;\n import org.xnio.Options;\n import io.undertow.connector.ByteBufferPool;\n import io.undertow.connector.PooledByteBuffer;\n+import org.xnio.Pool;\n import org.xnio.StreamConnection;\n \n import java.io.IOException;\n+import java.nio.ByteBuffer;\n import java.nio.charset.StandardCharsets;\n \n import static io.undertow.UndertowOptions.DECODE_URL;\n@@ -61,15 +64,14 @@ public class AjpOpenListener implements OpenListener {\n     private volatile boolean statisticsEnabled;\n     private final ConnectorStatisticsImpl connectorStatistics;\n \n-    @Deprecated\n-    public AjpOpenListener(final ByteBufferPool pool, final int bufferSize) {\n+    public AjpOpenListener(final Pool<ByteBuffer> pool) {\n         this(pool, OptionMap.EMPTY);\n     }\n \n-    @Deprecated\n-    public AjpOpenListener(final ByteBufferPool pool, final OptionMap undertowOptions, final int bufferSize) {\n-        this(pool, undertowOptions);\n+    public AjpOpenListener(final Pool<ByteBuffer> pool, final OptionMap undertowOptions) {\n+        this(new XnioByteBufferPool(pool), undertowOptions);\n     }\n+\n     public AjpOpenListener(final ByteBufferPool pool) {\n         this(pool, OptionMap.EMPTY);\n     }\ndiff --git a/core/src/main/java/io/undertow/server/protocol/http/AlpnOpenListener.java b/core/src/main/java/io/undertow/server/protocol/http/AlpnOpenListener.java\nindex e6f7472ca..5e7be6bd3 100644\n--- a/core/src/main/java/io/undertow/server/protocol/http/AlpnOpenListener.java\n+++ b/core/src/main/java/io/undertow/server/protocol/http/AlpnOpenListener.java\n@@ -19,6 +19,7 @@\n package io.undertow.server.protocol.http;\n \n import java.io.IOException;\n+import java.nio.ByteBuffer;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n@@ -35,12 +36,14 @@ import io.undertow.server.ConnectorStatistics;\n import io.undertow.server.DelegateOpenListener;\n import io.undertow.server.HttpHandler;\n import io.undertow.server.OpenListener;\n+import io.undertow.server.XnioByteBufferPool;\n import org.eclipse.jetty.alpn.ALPN;\n import org.xnio.ChannelListener;\n import org.xnio.IoUtils;\n import org.xnio.OptionMap;\n import io.undertow.connector.ByteBufferPool;\n import io.undertow.connector.PooledByteBuffer;\n+import org.xnio.Pool;\n import org.xnio.StreamConnection;\n import org.xnio.channels.StreamSourceChannel;\n import org.xnio.ssl.SslConnection;\n@@ -64,38 +67,34 @@ public class AlpnOpenListener implements ChannelListener<StreamConnection>, Open\n     private volatile OptionMap undertowOptions;\n     private volatile boolean statisticsEnabled;\n \n-    public AlpnOpenListener(ByteBufferPool bufferPool, OptionMap undertowOptions, String fallbackProtocol, DelegateOpenListener fallbackListener) {\n-        this.bufferPool = bufferPool;\n-        this.fallbackProtocol = fallbackProtocol;\n-        if(fallbackProtocol != null && fallbackListener != null) {\n-            addProtocol(fallbackProtocol, fallbackListener, 0);\n-        }\n-        statisticsEnabled = undertowOptions.get(UndertowOptions.ENABLE_CONNECTOR_STATISTICS, false);\n-        this.undertowOptions = undertowOptions;\n-    }\n-\n-    public AlpnOpenListener(ByteBufferPool bufferPool, OptionMap undertowOptions, DelegateOpenListener httpListener) {\n+    public AlpnOpenListener(Pool<ByteBuffer> bufferPool, OptionMap undertowOptions, DelegateOpenListener httpListener) {\n         this(bufferPool, undertowOptions, \"http/1.1\", httpListener);\n     }\n \n-    public AlpnOpenListener(ByteBufferPool bufferPool,  OptionMap undertowOptions) {\n+    public AlpnOpenListener(Pool<ByteBuffer> bufferPool,  OptionMap undertowOptions) {\n         this(bufferPool, undertowOptions, null, null);\n     }\n \n-    @Deprecated\n-    public AlpnOpenListener(ByteBufferPool bufferPool, String fallbackProtocol, DelegateOpenListener fallbackListener) {\n-        this(bufferPool, OptionMap.EMPTY, fallbackProtocol, fallbackListener);\n+    public AlpnOpenListener(Pool<ByteBuffer> bufferPool, OptionMap undertowOptions, String fallbackProtocol, DelegateOpenListener fallbackListener) {\n+        this(new XnioByteBufferPool(bufferPool), undertowOptions, fallbackProtocol, fallbackListener);\n     }\n \n-    @Deprecated\n-    public AlpnOpenListener(ByteBufferPool bufferPool, DelegateOpenListener httpListener) {\n-        this(bufferPool, OptionMap.EMPTY, \"http/1.1\", httpListener);\n+    public AlpnOpenListener(ByteBufferPool bufferPool, OptionMap undertowOptions, DelegateOpenListener httpListener) {\n+        this(bufferPool, undertowOptions, \"http/1.1\", httpListener);\n     }\n \n+    public AlpnOpenListener(ByteBufferPool bufferPool,  OptionMap undertowOptions) {\n+        this(bufferPool, undertowOptions, null, null);\n+    }\n \n-    @Deprecated\n-    public AlpnOpenListener(ByteBufferPool bufferPool) {\n-        this(bufferPool, OptionMap.EMPTY, null, null);\n+    public AlpnOpenListener(ByteBufferPool bufferPool, OptionMap undertowOptions, String fallbackProtocol, DelegateOpenListener fallbackListener) {\n+        this.bufferPool = bufferPool;\n+        this.fallbackProtocol = fallbackProtocol;\n+        if(fallbackProtocol != null && fallbackListener != null) {\n+            addProtocol(fallbackProtocol, fallbackListener, 0);\n+        }\n+        statisticsEnabled = undertowOptions.get(UndertowOptions.ENABLE_CONNECTOR_STATISTICS, false);\n+        this.undertowOptions = undertowOptions;\n     }\n \n \ndiff --git a/core/src/main/java/io/undertow/server/protocol/http/HttpOpenListener.java b/core/src/main/java/io/undertow/server/protocol/http/HttpOpenListener.java\nindex df03a5d38..4e1c1218c 100644\n--- a/core/src/main/java/io/undertow/server/protocol/http/HttpOpenListener.java\n+++ b/core/src/main/java/io/undertow/server/protocol/http/HttpOpenListener.java\n@@ -29,15 +29,18 @@ import io.undertow.server.ConnectorStatistics;\n import io.undertow.server.ConnectorStatisticsImpl;\n import io.undertow.server.DelegateOpenListener;\n import io.undertow.server.HttpHandler;\n+import io.undertow.server.XnioByteBufferPool;\n import org.xnio.ChannelListener;\n import org.xnio.IoUtils;\n import org.xnio.OptionMap;\n import org.xnio.Options;\n import io.undertow.connector.ByteBufferPool;\n import io.undertow.connector.PooledByteBuffer;\n+import org.xnio.Pool;\n import org.xnio.StreamConnection;\n \n import java.io.IOException;\n+import java.nio.ByteBuffer;\n \n /**\n  * Open listener for HTTP server.  XNIO should be set up to chain the accept handler to post-accept open\n@@ -60,13 +63,13 @@ public final class HttpOpenListener implements ChannelListener<StreamConnection>\n     private final ConnectorStatisticsImpl connectorStatistics;\n \n     @Deprecated\n-    public HttpOpenListener(final ByteBufferPool pool, final int bufferSize) {\n+    public HttpOpenListener(final Pool<ByteBuffer> pool) {\n         this(pool, OptionMap.EMPTY);\n     }\n \n     @Deprecated\n-    public HttpOpenListener(final ByteBufferPool pool, final OptionMap undertowOptions, final int bufferSize) {\n-        this(pool, undertowOptions);\n+    public HttpOpenListener(final Pool<ByteBuffer> pool, final OptionMap undertowOptions) {\n+        this(new XnioByteBufferPool(pool), undertowOptions);\n     }\n \n     public HttpOpenListener(final ByteBufferPool pool) {\ndiff --git a/core/src/main/java/io/undertow/server/protocol/http2/Http2OpenListener.java b/core/src/main/java/io/undertow/server/protocol/http2/Http2OpenListener.java\nindex eee947c1a..7e05f44a7 100644\n--- a/core/src/main/java/io/undertow/server/protocol/http2/Http2OpenListener.java\n+++ b/core/src/main/java/io/undertow/server/protocol/http2/Http2OpenListener.java\n@@ -28,12 +28,16 @@ import io.undertow.server.ConnectorStatistics;\n import io.undertow.server.ConnectorStatisticsImpl;\n import io.undertow.server.DelegateOpenListener;\n import io.undertow.server.HttpHandler;\n+import io.undertow.server.XnioByteBufferPool;\n import org.xnio.ChannelListener;\n import org.xnio.OptionMap;\n import io.undertow.connector.ByteBufferPool;\n import io.undertow.connector.PooledByteBuffer;\n+import org.xnio.Pool;\n import org.xnio.StreamConnection;\n \n+import java.nio.ByteBuffer;\n+\n \n /**\n  * Open listener for HTTP2 server\n@@ -55,6 +59,21 @@ public final class Http2OpenListener implements ChannelListener<StreamConnection\n     private final ConnectorStatisticsImpl connectorStatistics;\n     private final String protocol;\n \n+    @Deprecated\n+    public Http2OpenListener(final Pool<ByteBuffer> pool) {\n+        this(pool, OptionMap.EMPTY);\n+    }\n+\n+    @Deprecated\n+    public Http2OpenListener(final Pool<ByteBuffer> pool, final OptionMap undertowOptions) {\n+        this(pool, undertowOptions, HTTP2);\n+    }\n+\n+    @Deprecated\n+    public Http2OpenListener(final Pool<ByteBuffer> pool, final OptionMap undertowOptions, String protocol) {\n+        this(new XnioByteBufferPool(pool), undertowOptions, protocol);\n+    }\n+\n     public Http2OpenListener(final ByteBufferPool pool) {\n         this(pool, OptionMap.EMPTY);\n     }\ndiff --git a/core/src/main/java/io/undertow/server/protocol/spdy/SpdyOpenListener.java b/core/src/main/java/io/undertow/server/protocol/spdy/SpdyOpenListener.java\nindex efc9358cd..4b2a5fc2a 100644\n--- a/core/src/main/java/io/undertow/server/protocol/spdy/SpdyOpenListener.java\n+++ b/core/src/main/java/io/undertow/server/protocol/spdy/SpdyOpenListener.java\n@@ -27,12 +27,16 @@ import io.undertow.server.ConnectorStatistics;\n import io.undertow.server.ConnectorStatisticsImpl;\n import io.undertow.server.DelegateOpenListener;\n import io.undertow.server.HttpHandler;\n+import io.undertow.server.XnioByteBufferPool;\n import org.xnio.ChannelListener;\n import org.xnio.OptionMap;\n import io.undertow.connector.ByteBufferPool;\n import io.undertow.connector.PooledByteBuffer;\n+import org.xnio.Pool;\n import org.xnio.StreamConnection;\n \n+import java.nio.ByteBuffer;\n+\n \n /**\n  * Open listener for SPDY server\n@@ -53,6 +57,16 @@ public final class SpdyOpenListener implements ChannelListener<StreamConnection>\n     private volatile boolean statisticsEnabled;\n     private final ConnectorStatisticsImpl connectorStatistics;\n \n+    @Deprecated\n+    public SpdyOpenListener(final Pool<ByteBuffer> pool, final Pool<ByteBuffer> heapBufferPool) {\n+        this(pool, heapBufferPool, OptionMap.EMPTY);\n+    }\n+\n+    @Deprecated\n+    public SpdyOpenListener(final Pool<ByteBuffer> pool, final Pool<ByteBuffer> heapBufferPool, final OptionMap undertowOptions) {\n+        this(new XnioByteBufferPool(pool), new XnioByteBufferPool(heapBufferPool), undertowOptions);\n+    }\n+\n     public SpdyOpenListener(final ByteBufferPool pool, final ByteBufferPool heapBufferPool) {\n         this(pool, heapBufferPool, OptionMap.EMPTY);\n     }\ndiff --git a/core/src/test/java/io/undertow/websockets/core/protocol/server/AutobahnWebSocketServer.java b/core/src/test/java/io/undertow/websockets/core/protocol/server/AutobahnWebSocketServer.java\nindex fa394f761..803084d44 100644\n--- a/core/src/test/java/io/undertow/websockets/core/protocol/server/AutobahnWebSocketServer.java\n+++ b/core/src/test/java/io/undertow/websockets/core/protocol/server/AutobahnWebSocketServer.java\n@@ -126,7 +126,7 @@ public class AutobahnWebSocketServer {\n                     .set(Options.TCP_NODELAY, true)\n                     .set(Options.REUSE_ADDRESSES, true)\n                     .getMap();\n-            openListener = new HttpOpenListener(new DefaultByteBufferPool(false, 8192), 8192);\n+            openListener = new HttpOpenListener(new DefaultByteBufferPool(false, 8192));\n             ChannelListener acceptListener = ChannelListeners.openListenerAdapter(openListener);\n             server = worker.createStreamConnectionServer(new InetSocketAddress(port), acceptListener, serverOptions);\n \ndiff --git a/core/src/test/java/io/undertow/websockets/extensions/AutobahnExtensionCustomReceiverServer.java b/core/src/test/java/io/undertow/websockets/extensions/AutobahnExtensionCustomReceiverServer.java\nindex 72bad2537..388b2c546 100644\n--- a/core/src/test/java/io/undertow/websockets/extensions/AutobahnExtensionCustomReceiverServer.java\n+++ b/core/src/test/java/io/undertow/websockets/extensions/AutobahnExtensionCustomReceiverServer.java\n@@ -98,7 +98,7 @@ public class AutobahnExtensionCustomReceiverServer {\n                     .set(Options.TCP_NODELAY, true)\n                     .set(Options.REUSE_ADDRESSES, true)\n                     .getMap();\n-            openListener = new HttpOpenListener(new DefaultByteBufferPool(false, 8192), 8192);\n+            openListener = new HttpOpenListener(new DefaultByteBufferPool(false, 8192));\n             ChannelListener acceptListener = ChannelListeners.openListenerAdapter(openListener);\n             server = worker.createStreamConnectionServer(new InetSocketAddress(port), acceptListener, serverOptions);\n \ndiff --git a/websockets-jsr/src/main/java/io/undertow/websockets/jsr/WebSocketDeploymentInfo.java b/websockets-jsr/src/main/java/io/undertow/websockets/jsr/WebSocketDeploymentInfo.java\nindex 136a2686c..cdc978703 100644\n--- a/websockets-jsr/src/main/java/io/undertow/websockets/jsr/WebSocketDeploymentInfo.java\n+++ b/websockets-jsr/src/main/java/io/undertow/websockets/jsr/WebSocketDeploymentInfo.java\n@@ -18,11 +18,14 @@\n \n package io.undertow.websockets.jsr;\n \n+import io.undertow.server.XnioByteBufferPool;\n import io.undertow.websockets.extensions.ExtensionHandshake;\n import io.undertow.connector.ByteBufferPool;\n+import org.xnio.Pool;\n import org.xnio.XnioWorker;\n \n import javax.websocket.server.ServerEndpointConfig;\n+import java.nio.ByteBuffer;\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -58,6 +61,11 @@ public class WebSocketDeploymentInfo {\n         return buffers;\n     }\n \n+    @Deprecated\n+    public WebSocketDeploymentInfo setBuffers(Pool<ByteBuffer> buffers) {\n+        return setBuffers(new XnioByteBufferPool(buffers));\n+    }\n+\n     public WebSocketDeploymentInfo setBuffers(ByteBufferPool buffers) {\n         this.buffers = buffers;\n         return this;",
    "set satellite frame to about : blank before removing ( so javascript unload event is triggered )": "diff --git a/src/gwt/src/org/rstudio/core/client/widget/SatelliteFramePanel.java b/src/gwt/src/org/rstudio/core/client/widget/SatelliteFramePanel.java\nindex f2f6beffe5..3e89d98e40 100644\n--- a/src/gwt/src/org/rstudio/core/client/widget/SatelliteFramePanel.java\n+++ b/src/gwt/src/org/rstudio/core/client/widget/SatelliteFramePanel.java\n@@ -46,6 +46,11 @@ public abstract class SatelliteFramePanel <T extends RStudioFrame>\n    {\n       if (appFrame_ != null)\n       {\n+         // first set the frame to about:blank so that the \n+         // javascript \"unload\" event is triggered (this is\n+         // used by bookdown to save/restore scroll position)\n+         appFrame_.setUrl(\"about:blank\");\n+         \n          rootPanel_.remove(appFrame_);\n          appFrame_ = null;\n       }",
    "removed comments": "diff --git a/tpc/src/serializers/wobly/optimized/WImage.java b/tpc/src/serializers/wobly/optimized/WImage.java\nindex 7eb0ab8..4571428 100644\n--- a/tpc/src/serializers/wobly/optimized/WImage.java\n+++ b/tpc/src/serializers/wobly/optimized/WImage.java\n@@ -1,21 +1,3 @@\n-/*******************************************************************************\r\n- * Wobly - Wowd's byte-level serialization protocol\r\n- * Copyright 2008-2011 Wowd Inc. All rights reserved.\r\n- * http://code.google.com/p/wobly/\r\n- *\r\n- * Wobly is free software: you can redistribute it and/or modify\r\n- * it under the terms of the GNU Lesser General Public License\r\n- * as published by the Free Software Foundation, either version 3\r\n- * of the License, or (at your option) any later version.\r\n- *\r\n- * Wobly is distributed in the hope that it will be useful,\r\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n- * GNU Lesser General Public License for more details.\r\n- *\r\n- * You should have received a copy of the GNU Lesser General Public\r\n- * License along with Wobly. If not, see <http://www.gnu.org/licenses/>.\r\n- *******************************************************************************/\r\n package serializers.wobly.optimized;\n \n import com.wowd.wobly.WoblyUtils.Format;\ndiff --git a/tpc/src/serializers/wobly/optimized/WMedia.java b/tpc/src/serializers/wobly/optimized/WMedia.java\nindex 98b5078..b2472ca 100644\n--- a/tpc/src/serializers/wobly/optimized/WMedia.java\n+++ b/tpc/src/serializers/wobly/optimized/WMedia.java\n@@ -1,21 +1,3 @@\n-/*******************************************************************************\r\n- * Wobly - Wowd's byte-level serialization protocol\r\n- * Copyright 2008-2011 Wowd Inc. All rights reserved.\r\n- * http://code.google.com/p/wobly/\r\n- *\r\n- * Wobly is free software: you can redistribute it and/or modify\r\n- * it under the terms of the GNU Lesser General Public License\r\n- * as published by the Free Software Foundation, either version 3\r\n- * of the License, or (at your option) any later version.\r\n- *\r\n- * Wobly is distributed in the hope that it will be useful,\r\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n- * GNU Lesser General Public License for more details.\r\n- *\r\n- * You should have received a copy of the GNU Lesser General Public\r\n- * License along with Wobly. If not, see <http://www.gnu.org/licenses/>.\r\n- *******************************************************************************/\r\n package serializers.wobly.optimized;\n \n import java.util.List;\ndiff --git a/tpc/src/serializers/wobly/optimized/WMediaContent.java b/tpc/src/serializers/wobly/optimized/WMediaContent.java\nindex 73a254d..3ec35db 100644\n--- a/tpc/src/serializers/wobly/optimized/WMediaContent.java\n+++ b/tpc/src/serializers/wobly/optimized/WMediaContent.java\n@@ -1,21 +1,3 @@\n-/*******************************************************************************\r\n- * Wobly - Wowd's byte-level serialization protocol\r\n- * Copyright 2008-2011 Wowd Inc. All rights reserved.\r\n- * http://code.google.com/p/wobly/\r\n- *\r\n- * Wobly is free software: you can redistribute it and/or modify\r\n- * it under the terms of the GNU Lesser General Public License\r\n- * as published by the Free Software Foundation, either version 3\r\n- * of the License, or (at your option) any later version.\r\n- *\r\n- * Wobly is distributed in the hope that it will be useful,\r\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n- * GNU Lesser General Public License for more details.\r\n- *\r\n- * You should have received a copy of the GNU Lesser General Public\r\n- * License along with Wobly. If not, see <http://www.gnu.org/licenses/>.\r\n- *******************************************************************************/\r\n package serializers.wobly.optimized;\n \n import java.util.List;\ndiff --git a/tpc/src/serializers/wobly/simple/WImage.java b/tpc/src/serializers/wobly/simple/WImage.java\nindex c1796f4..2ccb15a 100644\n--- a/tpc/src/serializers/wobly/simple/WImage.java\n+++ b/tpc/src/serializers/wobly/simple/WImage.java\n@@ -1,21 +1,3 @@\n-/*******************************************************************************\r\n- * Wobly - Wowd's byte-level serialization protocol\r\n- * Copyright 2008-2011 Wowd Inc. All rights reserved.\r\n- * http://code.google.com/p/wobly/\r\n- *\r\n- * Wobly is free software: you can redistribute it and/or modify\r\n- * it under the terms of the GNU Lesser General Public License\r\n- * as published by the Free Software Foundation, either version 3\r\n- * of the License, or (at your option) any later version.\r\n- *\r\n- * Wobly is distributed in the hope that it will be useful,\r\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n- * GNU Lesser General Public License for more details.\r\n- *\r\n- * You should have received a copy of the GNU Lesser General Public\r\n- * License along with Wobly. If not, see <http://www.gnu.org/licenses/>.\r\n- *******************************************************************************/\r\n package serializers.wobly.simple;\n \r\n import com.wowd.wobly.WoblyUtils.Format;\ndiff --git a/tpc/src/serializers/wobly/simple/WMedia.java b/tpc/src/serializers/wobly/simple/WMedia.java\nindex 63a1509..2143827 100644\n--- a/tpc/src/serializers/wobly/simple/WMedia.java\n+++ b/tpc/src/serializers/wobly/simple/WMedia.java\n@@ -1,21 +1,3 @@\n-/*******************************************************************************\r\n- * Wobly - Wowd's byte-level serialization protocol\r\n- * Copyright 2008-2011 Wowd Inc. All rights reserved.\r\n- * http://code.google.com/p/wobly/\r\n- *\r\n- * Wobly is free software: you can redistribute it and/or modify\r\n- * it under the terms of the GNU Lesser General Public License\r\n- * as published by the Free Software Foundation, either version 3\r\n- * of the License, or (at your option) any later version.\r\n- *\r\n- * Wobly is distributed in the hope that it will be useful,\r\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n- * GNU Lesser General Public License for more details.\r\n- *\r\n- * You should have received a copy of the GNU Lesser General Public\r\n- * License along with Wobly. If not, see <http://www.gnu.org/licenses/>.\r\n- *******************************************************************************/\r\n package serializers.wobly.simple;\n \n import java.util.List;\ndiff --git a/tpc/src/serializers/wobly/simple/WMediaContent.java b/tpc/src/serializers/wobly/simple/WMediaContent.java\nindex 91b27e2..ea6a9fb 100644\n--- a/tpc/src/serializers/wobly/simple/WMediaContent.java\n+++ b/tpc/src/serializers/wobly/simple/WMediaContent.java\n@@ -1,21 +1,3 @@\n-/*******************************************************************************\r\n- * Wobly - Wowd's byte-level serialization protocol\r\n- * Copyright 2008-2011 Wowd Inc. All rights reserved.\r\n- * http://code.google.com/p/wobly/\r\n- *\r\n- * Wobly is free software: you can redistribute it and/or modify\r\n- * it under the terms of the GNU Lesser General Public License\r\n- * as published by the Free Software Foundation, either version 3\r\n- * of the License, or (at your option) any later version.\r\n- *\r\n- * Wobly is distributed in the hope that it will be useful,\r\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n- * GNU Lesser General Public License for more details.\r\n- *\r\n- * You should have received a copy of the GNU Lesser General Public\r\n- * License along with Wobly. If not, see <http://www.gnu.org/licenses/>.\r\n- *******************************************************************************/\r\n package serializers.wobly.simple;\n \n import java.util.List;",
    "add function support in where condition": "diff --git a/src/main/java/org/nlpcn/es4sql/parse/ChildrenType.java b/src/main/java/org/nlpcn/es4sql/parse/ChildrenType.java\nindex 09e33bf..4e53ad2 100644\n--- a/src/main/java/org/nlpcn/es4sql/parse/ChildrenType.java\n+++ b/src/main/java/org/nlpcn/es4sql/parse/ChildrenType.java\n@@ -43,7 +43,7 @@ public class ChildrenType {\n             this.simple = true;\n         } else {\n             Where where = Where.newInstance();\n-            new SqlParser().parseWhere(secondParameter,where);\n+            new WhereParser(new SqlParser()).parseWhere(secondParameter,where);\n             if(where.getWheres().size() == 0)\n                 throw new SqlParseException(\"unable to parse filter where.\");\n             this.where = where;\ndiff --git a/src/main/java/org/nlpcn/es4sql/parse/FieldMaker.java b/src/main/java/org/nlpcn/es4sql/parse/FieldMaker.java\nindex 5633722..17845a8 100644\n--- a/src/main/java/org/nlpcn/es4sql/parse/FieldMaker.java\n+++ b/src/main/java/org/nlpcn/es4sql/parse/FieldMaker.java\n@@ -56,10 +56,10 @@ public class FieldMaker {\n                 return makeFilterMethodField(mExpr, alias);\n             }\n \n-            return makeMethodField(methodName, mExpr.getParameters(), null, alias, tableAlias,true);\n+            return makeMethodField(methodName, mExpr.getParameters(), null, alias, tableAlias, true);\n         } else if (expr instanceof SQLAggregateExpr) {\n             SQLAggregateExpr sExpr = (SQLAggregateExpr) expr;\n-            return makeMethodField(sExpr.getMethodName(), sExpr.getArguments(), sExpr.getOption(), alias,tableAlias, true);\n+            return makeMethodField(sExpr.getMethodName(), sExpr.getArguments(), sExpr.getOption(), alias, tableAlias, true);\n         } else {\n             throw new SqlParseException(\"unknown field name : \" + expr);\n         }\n@@ -70,7 +70,7 @@ public class FieldMaker {\n         return Util.getScriptValue(expr);\n     }\n \n-    private static Field makeScriptMethodField(SQLBinaryOpExpr binaryExpr, String alias,String tableAlias) throws SqlParseException {\n+    private static Field makeScriptMethodField(SQLBinaryOpExpr binaryExpr, String alias, String tableAlias) throws SqlParseException {\n         List<SQLExpr> params = new ArrayList<>();\n \n         String scriptFieldAlias;\n@@ -86,7 +86,7 @@ public class FieldMaker {\n \n         params.add(new SQLCharExpr(script));\n \n-        return makeMethodField(\"script\", params, null, null, tableAlias,false);\n+        return makeMethodField(\"script\", params, null, null, tableAlias, false);\n     }\n \n \n@@ -107,7 +107,7 @@ public class FieldMaker {\n             exprToCheck = parameters.get(1);\n         }\n         Where where = Where.newInstance();\n-        new SqlParser().parseWhere(exprToCheck, where);\n+        new WhereParser(new SqlParser()).parseWhere(exprToCheck, where);\n         if (where.getWheres().size() == 0)\n             throw new SqlParseException(\"unable to parse filter where.\");\n         List<KVValue> methodParameters = new ArrayList<>();\n@@ -133,7 +133,7 @@ public class FieldMaker {\n \n \n     //binary method can nested\n-    private static SQLMethodInvokeExpr makeBinaryMethodField(SQLBinaryOpExpr expr, String alias, boolean first) throws SqlParseException {\n+    public static SQLMethodInvokeExpr makeBinaryMethodField(SQLBinaryOpExpr expr, String alias, boolean first) throws SqlParseException {\n         List<SQLExpr> params = new ArrayList<>();\n \n         String scriptFieldAlias;\n@@ -171,7 +171,6 @@ public class FieldMaker {\n     }\n \n \n-\n     private static Field handleIdentifier(SQLExpr expr, String alias, String tableAlias) throws SqlParseException {\n         String name = expr.toString().replace(\"`\", \"\");\n         String newFieldName = name;\n@@ -192,12 +191,12 @@ public class FieldMaker {\n             List<SQLExpr> paramers = Lists.newArrayList();\n             paramers.add(new SQLCharExpr(alias));\n             paramers.add(new SQLCharExpr(\"doc['\" + newFieldName + \"'].value\"));\n-            field = makeMethodField(\"script\", paramers, null, alias, tableAlias,true);\n+            field = makeMethodField(\"script\", paramers, null, alias, tableAlias, true);\n         }\n         return field;\n     }\n \n-    private static MethodField makeMethodField(String name, List<SQLExpr> arguments, SQLAggregateOption option, String alias,String tableAlias, boolean first) throws SqlParseException {\n+    public static MethodField makeMethodField(String name, List<SQLExpr> arguments, SQLAggregateOption option, String alias, String tableAlias, boolean first) throws SqlParseException {\n         List<KVValue> paramers = new LinkedList<>();\n         String finalMethodName = name;\n \n@@ -209,11 +208,11 @@ public class FieldMaker {\n \n                 if (SQLFunctions.buildInFunctions.contains(binaryOpExpr.getOperator().toString().toLowerCase())) {\n                     SQLMethodInvokeExpr mExpr = makeBinaryMethodField(binaryOpExpr, alias, first);\n-                    MethodField abc = makeMethodField(mExpr.getMethodName(), mExpr.getParameters(), null, null,tableAlias, false);\n+                    MethodField abc = makeMethodField(mExpr.getMethodName(), mExpr.getParameters(), null, null, tableAlias, false);\n                     paramers.add(new KVValue(abc.getParams().get(0).toString(), new SQLCharExpr(abc.getParams().get(1).toString())));\n                 } else {\n                     if (!binaryOpExpr.getOperator().getName().equals(\"=\")) {\n-                        paramers.add(new KVValue(\"script\", makeScriptMethodField(binaryOpExpr, null,tableAlias)));\n+                        paramers.add(new KVValue(\"script\", makeScriptMethodField(binaryOpExpr, null, tableAlias)));\n                     } else {\n                         SQLExpr right = binaryOpExpr.getRight();\n                         Object value = Util.expr2Object(right);\n@@ -225,7 +224,7 @@ public class FieldMaker {\n                 SQLMethodInvokeExpr mExpr = (SQLMethodInvokeExpr) object;\n                 String methodName = mExpr.getMethodName().toLowerCase();\n                 if (methodName.equals(\"script\")) {\n-                    KVValue script = new KVValue(\"script\", makeMethodField(mExpr.getMethodName(), mExpr.getParameters(), null, alias,tableAlias, true));\n+                    KVValue script = new KVValue(\"script\", makeMethodField(mExpr.getMethodName(), mExpr.getParameters(), null, alias, tableAlias, true));\n                     paramers.add(script);\n                 } else if (methodName.equals(\"nested\") || methodName.equals(\"reverse_nested\")) {\n                     NestedType nestedType = new NestedType();\n@@ -245,11 +244,11 @@ public class FieldMaker {\n                     paramers.add(new KVValue(\"children\", childrenType));\n                 } else if (SQLFunctions.buildInFunctions.contains(methodName)) {\n                     //throw new SqlParseException(\"only support script/nested as inner functions\");\n-                    MethodField abc = makeMethodField(methodName, mExpr.getParameters(), null, null, tableAlias,false);\n+                    MethodField abc = makeMethodField(methodName, mExpr.getParameters(), null, null, tableAlias, false);\n                     paramers.add(new KVValue(abc.getParams().get(0).toString(), new SQLCharExpr(abc.getParams().get(1).toString())));\n                 } else throw new SqlParseException(\"only support script/nested/children as inner functions\");\n             } else {\n-                paramers.add(new KVValue(Util.removeTableAilasFromField(object,tableAlias)));\n+                paramers.add(new KVValue(Util.removeTableAilasFromField(object, tableAlias)));\n             }\n \n         }\ndiff --git a/src/main/java/org/nlpcn/es4sql/parse/NestedType.java b/src/main/java/org/nlpcn/es4sql/parse/NestedType.java\nindex f1109c4..d633d27 100644\n--- a/src/main/java/org/nlpcn/es4sql/parse/NestedType.java\n+++ b/src/main/java/org/nlpcn/es4sql/parse/NestedType.java\n@@ -65,7 +65,7 @@ public class NestedType {\n             else {\n                 this.path = field;\n                 Where where = Where.newInstance();\n-                new SqlParser().parseWhere(secondParameter,where);\n+                new WhereParser(new SqlParser()).parseWhere(secondParameter,where);\n                 if(where.getWheres().size() == 0)\n                     throw new SqlParseException(\"unable to parse filter where.\");\n                 this.where = where;\ndiff --git a/src/main/java/org/nlpcn/es4sql/parse/SelectParser.java b/src/main/java/org/nlpcn/es4sql/parse/SelectParser.java\nnew file mode 100644\nindex 0000000..a896ea1\n--- /dev/null\n+++ b/src/main/java/org/nlpcn/es4sql/parse/SelectParser.java\n@@ -0,0 +1,7 @@\n+package org.nlpcn.es4sql.parse;\n+\n+/**\n+ * Created by allwefantasy on 9/2/16.\n+ */\n+public class SelectParser {\n+}\ndiff --git a/src/main/java/org/nlpcn/es4sql/parse/SqlParser.java b/src/main/java/org/nlpcn/es4sql/parse/SqlParser.java\nindex 458714d..58be09f 100644\n--- a/src/main/java/org/nlpcn/es4sql/parse/SqlParser.java\n+++ b/src/main/java/org/nlpcn/es4sql/parse/SqlParser.java\n@@ -9,14 +9,11 @@ import com.alibaba.druid.sql.dialect.mysql.ast.expr.MySqlSelectGroupByExpr;\n import com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock;\n \n \n-import com.google.common.collect.Sets;\n-import org.nlpcn.es4sql.Util;\n import org.nlpcn.es4sql.domain.*;\n-import org.nlpcn.es4sql.domain.Where.CONN;\n import org.nlpcn.es4sql.domain.hints.Hint;\n import org.nlpcn.es4sql.domain.hints.HintFactory;\n import org.nlpcn.es4sql.exception.SqlParseException;\n-import org.nlpcn.es4sql.spatial.SpatialParamsFactory;\n+\n \n /**\n  * es sql support\n@@ -25,7 +22,9 @@ import org.nlpcn.es4sql.spatial.SpatialParamsFactory;\n  */\n public class SqlParser {\n \n+\n     public SqlParser() {\n+\n     }\n \n     public Select parseSelect(SQLQueryExpr mySqlExpr) throws SqlParseException {\n@@ -37,14 +36,17 @@ public class SqlParser {\n         return select;\n     }\n \n-    private Select parseSelect(MySqlSelectQueryBlock query) throws SqlParseException {\n+    public Select parseSelect(MySqlSelectQueryBlock query) throws SqlParseException {\n+\n         Select select = new Select();\n+        WhereParser whereParser = new WhereParser(this, query);\n+\n \n         findSelect(query, select, query.getFrom().getAlias());\n \n         select.getFrom().addAll(findFrom(query.getFrom()));\n \n-        select.setWhere(findWhere(query.getWhere()));\n+        select.setWhere(whereParser.findWhere());\n \n         select.fillSubQueries();\n \n@@ -60,414 +62,15 @@ public class SqlParser {\n \n     public Delete parseDelete(SQLDeleteStatement deleteStatement) throws SqlParseException {\n         Delete delete = new Delete();\n+        WhereParser whereParser = new WhereParser(this, deleteStatement);\n \n         delete.getFrom().addAll(findFrom(deleteStatement.getTableSource()));\n \n-        delete.setWhere(findWhere(deleteStatement.getWhere()));\n+        delete.setWhere(whereParser.findWhere());\n \n         return delete;\n     }\n \n-    private Where findWhere(SQLExpr where) throws SqlParseException {\n-        if (where == null) {\n-            return null;\n-        }\n-\n-        Where myWhere = Where.newInstance();\n-        parseWhere(where, myWhere);\n-        return myWhere;\n-    }\n-\n-    private boolean isCond(SQLBinaryOpExpr expr) {\n-        SQLExpr leftSide = expr.getLeft();\n-        if (leftSide instanceof SQLMethodInvokeExpr) {\n-            return isAllowedMethodOnConditionLeft((SQLMethodInvokeExpr) leftSide, expr.getOperator());\n-        }\n-        return leftSide instanceof SQLIdentifierExpr || leftSide instanceof SQLPropertyExpr || leftSide instanceof SQLVariantRefExpr;\n-    }\n-\n-    private boolean isAllowedMethodOnConditionLeft(SQLMethodInvokeExpr method, SQLBinaryOperator operator) {\n-        return (method.getMethodName().toLowerCase().equals(\"nested\") || method.getMethodName().toLowerCase().equals(\"children\")) && !operator.isLogical();\n-    }\n-\n-    public void parseWhere(SQLExpr expr, Where where) throws SqlParseException {\n-\n-\n-\n-        if (expr instanceof SQLBinaryOpExpr) {\n-            SQLBinaryOpExpr bExpr = (SQLBinaryOpExpr) expr;\n-            if (explanSpecialCondWithBothSidesAreLiterals(bExpr, where)) {\n-                return;\n-            }\n-            if (explanSpecialCondWithBothSidesAreProperty(bExpr, where)) {\n-                return;\n-            }\n-        }\n-\n-        if (expr instanceof SQLBinaryOpExpr && !isCond((SQLBinaryOpExpr) expr)) {\n-            SQLBinaryOpExpr bExpr = (SQLBinaryOpExpr) expr;\n-            routeCond(bExpr, bExpr.getLeft(), where);\n-            routeCond(bExpr, bExpr.getRight(), where);\n-        } else if (expr instanceof SQLNotExpr) {\n-            parseWhere(((SQLNotExpr) expr).getExpr(), where);\n-            negateWhere(where);\n-        } else {\n-            explanCond(\"AND\", expr, where);\n-        }\n-    }\n-\n-    //some where conditions eg. 1=1 or 3>2 or 'a'='b'\n-    private boolean explanSpecialCondWithBothSidesAreLiterals(SQLBinaryOpExpr bExpr, Where where) throws SqlParseException {\n-        if ((bExpr.getLeft() instanceof SQLNumericLiteralExpr || bExpr.getLeft() instanceof SQLCharExpr) &&\n-                (bExpr.getRight() instanceof SQLNumericLiteralExpr || bExpr.getRight() instanceof SQLCharExpr)\n-                ) {\n-            SQLMethodInvokeExpr sqlMethodInvokeExpr = new SQLMethodInvokeExpr(\"script\", null);\n-            String operator = bExpr.getOperator().getName();\n-            if (operator.equals(\"=\")) {\n-                operator = \"==\";\n-            }\n-            sqlMethodInvokeExpr.addParameter(\n-                    new SQLCharExpr(Util.expr2Object(bExpr.getLeft(), \"'\") +\n-                            \" \" + operator + \" \" +\n-                            Util.expr2Object(bExpr.getRight(), \"'\"))\n-            );\n-\n-            explanCond(\"AND\", sqlMethodInvokeExpr, where);\n-            return true;\n-        }\n-        return false;\n-    }\n-\n-    //some where conditions eg. field1=field2 or field1>field2\n-    private boolean explanSpecialCondWithBothSidesAreProperty(SQLBinaryOpExpr bExpr, Where where) throws SqlParseException {\n-        //join is not support\n-        if ((bExpr.getLeft() instanceof SQLPropertyExpr || bExpr.getLeft() instanceof SQLIdentifierExpr) &&\n-                (bExpr.getRight() instanceof SQLPropertyExpr || bExpr.getRight() instanceof SQLIdentifierExpr) &&\n-                Sets.newHashSet(\"=\", \"<\", \">\", \">=\", \"<=\").contains(bExpr.getOperator().getName()) &&\n-                !Util.isFromJoinTable(bExpr)\n-\n-                ) {\n-            SQLMethodInvokeExpr sqlMethodInvokeExpr = new SQLMethodInvokeExpr(\"script\", null);\n-            String operator = bExpr.getOperator().getName();\n-            if (operator.equals(\"=\")) {\n-                operator = \"==\";\n-            }\n-\n-            String leftProperty = Util.expr2Object(bExpr.getLeft()).toString();\n-            String rightProperty = Util.expr2Object(bExpr.getRight()).toString();\n-            if (leftProperty.split(\"\\\\.\").length > 1) {\n-\n-                leftProperty = leftProperty.substring(leftProperty.split(\"\\\\.\")[0].length()+1);\n-            }\n-\n-            if (rightProperty.split(\"\\\\.\").length > 1) {\n-                rightProperty = rightProperty.substring(rightProperty.split(\"\\\\.\")[0].length()+1);\n-            }\n-\n-            sqlMethodInvokeExpr.addParameter(new SQLCharExpr(\n-                    \"doc['\" + leftProperty + \"'].value \" +\n-                            operator +\n-                            \" doc['\" + rightProperty + \"'].value\"));\n-\n-\n-            explanCond(\"AND\", sqlMethodInvokeExpr, where);\n-            return true;\n-        }\n-        return false;\n-    }\n-\n-\n-    private void routeCond(SQLBinaryOpExpr bExpr, SQLExpr sub, Where where) throws SqlParseException {\n-        if (sub instanceof SQLBinaryOpExpr && !isCond((SQLBinaryOpExpr) sub)) {\n-            SQLBinaryOpExpr binarySub = (SQLBinaryOpExpr) sub;\n-            if (binarySub.getOperator().priority != bExpr.getOperator().priority) {\n-                Where subWhere = new Where(bExpr.getOperator().name);\n-                where.addWhere(subWhere);\n-                parseWhere(binarySub, subWhere);\n-            } else {\n-                parseWhere(binarySub, where);\n-            }\n-        } else if (sub instanceof SQLNotExpr) {\n-            Where subWhere = new Where(bExpr.getOperator().name);\n-            where.addWhere(subWhere);\n-            parseWhere(((SQLNotExpr) sub).getExpr(), subWhere);\n-            negateWhere(subWhere);\n-        } else {\n-            explanCond(bExpr.getOperator().name, sub, where);\n-        }\n-    }\n-\n-    private void explanCond(String opear, SQLExpr expr, Where where) throws SqlParseException {\n-        if (expr instanceof SQLBinaryOpExpr) {\n-            SQLBinaryOpExpr soExpr = (SQLBinaryOpExpr) expr;\n-            boolean methodAsOpear = false;\n-\n-            boolean isNested = false;\n-            boolean isChildren = false;\n-\n-            NestedType nestedType = new NestedType();\n-            if (nestedType.tryFillFromExpr(soExpr.getLeft())) {\n-                soExpr.setLeft(new SQLIdentifierExpr(nestedType.field));\n-                isNested = true;\n-            }\n-\n-            ChildrenType childrenType = new ChildrenType();\n-            if (childrenType.tryFillFromExpr(soExpr.getLeft())) {\n-                soExpr.setLeft(new SQLIdentifierExpr(childrenType.field));\n-                isChildren = true;\n-            }\n-\n-            if (soExpr.getRight() instanceof SQLMethodInvokeExpr) {\n-                SQLMethodInvokeExpr method = (SQLMethodInvokeExpr) soExpr.getRight();\n-                String methodName = method.getMethodName().toLowerCase();\n-\n-                if (Condition.OPEAR.methodNameToOpear.containsKey(methodName)) {\n-                    Object[] methodParametersValue = getMethodValuesWithSubQueries(method);\n-\n-                    Condition condition = null;\n-\n-                    if (isNested)\n-                        condition = new Condition(CONN.valueOf(opear), soExpr.getLeft().toString(), Condition.OPEAR.methodNameToOpear.get(methodName), methodParametersValue, nestedType);\n-                    else if (isChildren)\n-                        condition = new Condition(CONN.valueOf(opear), soExpr.getLeft().toString(), Condition.OPEAR.methodNameToOpear.get(methodName), methodParametersValue, childrenType);\n-                    else\n-                        condition = new Condition(CONN.valueOf(opear), soExpr.getLeft().toString(), Condition.OPEAR.methodNameToOpear.get(methodName), methodParametersValue, null);\n-\n-                    where.addWhere(condition);\n-                    methodAsOpear = true;\n-                }\n-            }\n-\n-            if (!methodAsOpear) {\n-                Condition condition = null;\n-\n-                if (isNested)\n-                    condition = new Condition(CONN.valueOf(opear), soExpr.getLeft().toString(), soExpr.getOperator().name, parseValue(soExpr.getRight()), nestedType);\n-                else if (isChildren)\n-                    condition = new Condition(CONN.valueOf(opear), soExpr.getLeft().toString(), soExpr.getOperator().name, parseValue(soExpr.getRight()), childrenType);\n-                else\n-                    condition = new Condition(CONN.valueOf(opear), soExpr.getLeft().toString(), soExpr.getOperator().name, parseValue(soExpr.getRight()), null);\n-\n-                where.addWhere(condition);\n-            }\n-        } else if (expr instanceof SQLInListExpr) {\n-            SQLInListExpr siExpr = (SQLInListExpr) expr;\n-            String leftSide = siExpr.getExpr().toString();\n-\n-            boolean isNested = false;\n-            boolean isChildren = false;\n-\n-            NestedType nestedType = new NestedType();\n-            if (nestedType.tryFillFromExpr(siExpr.getExpr())) {\n-                leftSide",
    "add STORM - 1450 to changelog": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 29ca61c84..91cdf0c96 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -1,5 +1,6 @@\n ## 2.0.0\n ## 1.0.0\n+ * STORM-1450: Fix minor bugs and refactor code in ResourceAwareScheduler\n  * STORM-1478: make bolts getComponentConfiguration method cleaner/simpler\n  * STORM-1482: add missing 'break' for RedisStoreBolt\n  * STORM-1466: Move the org.apache.thrift7 namespace to something correct/sensible",
    "Add synchronizeWithMavenCentral task": "diff --git a/build.gradle b/build.gradle\nindex 0497658e8b..69e3274a9a 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -11,6 +11,7 @@ buildscript {\n         classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'\n         classpath \"gradle.plugin.io.sdkman:gradle-sdkvendor-plugin:1.0.0\"\n         classpath \"gradle.plugin.org.aim42:htmlSanityCheck:$htmlSanityCheckVersion\"\n+        classpath \"org.codehaus.groovy.modules.http-builder:http-builder:0.7.1\"\n     }\n }\n \ndiff --git a/gradle/publishing.gradle b/gradle/publishing.gradle\nindex 3078b74f17..864eb80b19 100644\n--- a/gradle/publishing.gradle\n+++ b/gradle/publishing.gradle\n@@ -11,6 +11,20 @@\n  * $ travis encrypt BINTRAY_KEY=...\n  *\n  */\n+\n+buildscript {\n+    repositories {\n+        maven { url \"https://repo.grails.org/grails/core\" }\n+    }\n+    dependencies {\n+        classpath \"org.codehaus.groovy.modules.http-builder:http-builder:0.7.1\"\n+    }\n+}\n+\n+\n+import groovyx.net.http.RESTClient\n+import static groovyx.net.http.ContentType.*\n+\n apply plugin: 'maven-publish'\n apply plugin: 'com.jfrog.bintray'\n apply plugin: 'com.bmuschko.nexus'\n@@ -160,12 +174,16 @@ publishing {\n     }\n }\n \n+def bintrayUser = System.getenv(\"BINTRAY_USER\") ?: project.hasProperty(\"bintrayUser\") ? project.bintrayUser : ''\n+def bintrayKey = System.getenv(\"BINTRAY_KEY\") ?: project.hasProperty(\"bintrayKey\") ? project.bintrayKey : ''\n+def ossUser = System.getenv(\"SONATYPE_USERNAME\") ?: project.hasProperty(\"sonatypeOssUsername\") ? project.sonatypeOssUsername : ''\n+def ossPass = System.getenv(\"SONATYPE_PASSWORD\") ?: project.hasProperty(\"sonatypeOssPassword\") ? project.sonatypeOssPassword : ''\n+\n+\n bintray {\n-    def u = System.getenv(\"BINTRAY_USER\") ?: project.hasProperty(\"bintrayUser\") ? project.bintrayUser : ''\n-    def p = System.getenv(\"BINTRAY_KEY\") ?: project.hasProperty(\"bintrayKey\") ? project.bintrayKey : ''\n \n-    user = u\n-    key = p\n+    user = bintrayUser\n+    key = bintrayKey\n     publications = ['maven']\n     publish = false\n     pkg {\n@@ -186,8 +204,6 @@ bintray {\n             }\n             mavenCentralSync {\n                 sync = project.hasProperty(\"mavenCentralSync\") ? project.mavenCentralSync.toBoolean() : false\n-                def ossUser = System.getenv(\"SONATYPE_USERNAME\") ?: project.hasProperty(\"sonatypeOssUsername\") ? project.sonatypeOssUsername : ''\n-                def ossPass = System.getenv(\"SONATYPE_PASSWORD\") ?: project.hasProperty(\"sonatypeOssPassword\") ? project.sonatypeOssPassword : ''\n                 user = ossUser\n                 password = ossPass\n             }\n@@ -195,3 +211,32 @@ bintray {\n         }\n     }\n }\n+\n+task synchronizeWithMavenCentral() {\n+    description = \"Syncs with Maven Central/Sonatype\"\n+    doLast {\n+        println \"\"\"\n+Synchronizing with Maven central. This may take a few minutes ...\n+If this fails, log on to http://oss.sonatype.org/ using the centralUser credentials\n+and progress through process manually -> Close -> Publish ... under staging repositories\n+\"\"\"\n+        try {\n+            def client = new RESTClient('https://api.bintray.com/maven_central_sync/micronaut/core-releases-local/')\n+            client.headers['Authorization'] = 'Basic ' + \"$bintrayUser:$bintrayKey\".getBytes('iso-8859-1').encodeBase64()\n+            def body = /{}/\n+            def resp = client.post(\n+                    path: \"$bintray.pkg.name/versions/$projectVersion\",\n+                    body: body,\n+                    requestContentType: JSON\n+            )\n+            assert resp.status == 200\n+            println resp.data.status\n+            println resp.data.messages.join('\\n')\n+        } catch (groovyx.net.http.HttpResponseException e) {\n+            println \"Error: $e\"\n+            println \"Message: $e.message\"\n+            println \"Body: $e.response.data\"\n+            throw e\n+        }\n+    }\n+}\n\\ No newline at end of file",
    "Add JDBCParameterDecorator to decouple ProxyGovernanceSchemaContexts . createDataSources ( <issue_id> ) .": "diff --git a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/common/event/datasource/DataSourceChangedEvent.java b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/common/event/datasource/DataSourceChangedEvent.java\nindex f2ea5e556dd..b494c857f5b 100644\n--- a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/common/event/datasource/DataSourceChangedEvent.java\n+++ b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/common/event/datasource/DataSourceChangedEvent.java\n@@ -19,7 +19,7 @@ package org.apache.shardingsphere.governance.core.common.event.datasource;\n \n import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.governance.core.common.event.GovernanceEvent;\n \n import java.util.Map;\ndiff --git a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/common/event/schema/SchemaAddedEvent.java b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/common/event/schema/SchemaAddedEvent.java\nindex 0593f981cc2..8393031616b 100644\n--- a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/common/event/schema/SchemaAddedEvent.java\n+++ b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/common/event/schema/SchemaAddedEvent.java\n@@ -20,7 +20,7 @@ package org.apache.shardingsphere.governance.core.common.event.schema;\n import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n \n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.config.RuleConfiguration;\n import org.apache.shardingsphere.governance.core.common.event.GovernanceEvent;\n \ndiff --git a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/common/yaml/swapper/DataSourceConfigurationYamlSwapper.java b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/common/yaml/swapper/DataSourceConfigurationYamlSwapper.java\nindex 51aa54b9928..ae073c80c29 100644\n--- a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/common/yaml/swapper/DataSourceConfigurationYamlSwapper.java\n+++ b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/common/yaml/swapper/DataSourceConfigurationYamlSwapper.java\n@@ -17,7 +17,7 @@\n \n package org.apache.shardingsphere.governance.core.common.yaml.swapper;\n \n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.yaml.swapper.YamlSwapper;\n import org.apache.shardingsphere.governance.core.common.yaml.config.YamlDataSourceConfiguration;\n \ndiff --git a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/test/java/org/apache/shardingsphere/governance/core/common/yaml/swapper/DataSourceConfigurationYamlSwapperTest.java b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/test/java/org/apache/shardingsphere/governance/core/common/yaml/swapper/DataSourceConfigurationYamlSwapperTest.java\nindex 2fee888b1e0..dbe23ac3852 100644\n--- a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/test/java/org/apache/shardingsphere/governance/core/common/yaml/swapper/DataSourceConfigurationYamlSwapperTest.java\n+++ b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/test/java/org/apache/shardingsphere/governance/core/common/yaml/swapper/DataSourceConfigurationYamlSwapperTest.java\n@@ -17,7 +17,7 @@\n \n package org.apache.shardingsphere.governance.core.common.yaml.swapper;\n \n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.governance.core.common.yaml.config.YamlDataSourceConfiguration;\n import org.junit.Test;\n \ndiff --git a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-config/src/main/java/org/apache/shardingsphere/governance/core/config/ConfigCenter.java b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-config/src/main/java/org/apache/shardingsphere/governance/core/config/ConfigCenter.java\nindex 3b7b6ffde5a..aa9b67eb7e7 100644\n--- a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-config/src/main/java/org/apache/shardingsphere/governance/core/config/ConfigCenter.java\n+++ b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-config/src/main/java/org/apache/shardingsphere/governance/core/config/ConfigCenter.java\n@@ -24,11 +24,14 @@ import com.google.common.base.Strings;\n import com.google.common.eventbus.Subscribe;\n import org.apache.shardingsphere.encrypt.algorithm.config.AlgorithmProvidedEncryptRuleConfiguration;\n import org.apache.shardingsphere.encrypt.api.config.EncryptRuleConfiguration;\n+import org.apache.shardingsphere.governance.core.common.yaml.config.YamlDataSourceConfiguration;\n+import org.apache.shardingsphere.governance.core.common.yaml.swapper.DataSourceConfigurationYamlSwapper;\n+import org.apache.shardingsphere.governance.repository.api.ConfigurationRepository;\n import org.apache.shardingsphere.infra.auth.Authentication;\n import org.apache.shardingsphere.infra.auth.yaml.config.YamlAuthenticationConfiguration;\n import org.apache.shardingsphere.infra.auth.yaml.swapper.AuthenticationYamlSwapper;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.config.RuleConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.eventbus.ShardingSphereEventBus;\n import org.apache.shardingsphere.infra.eventbus.event.DataSourceEvent;\n import org.apache.shardingsphere.infra.eventbus.event.RuleEvent;\n@@ -38,9 +41,6 @@ import org.apache.shardingsphere.infra.yaml.engine.YamlEngine;\n import org.apache.shardingsphere.infra.yaml.swapper.YamlRuleConfigurationSwapperEngine;\n import org.apache.shardingsphere.masterslave.algorithm.config.AlgorithmProvidedMasterSlaveRuleConfiguration;\n import org.apache.shardingsphere.masterslave.api.config.MasterSlaveRuleConfiguration;\n-import org.apache.shardingsphere.governance.core.common.yaml.config.YamlDataSourceConfiguration;\n-import org.apache.shardingsphere.governance.core.common.yaml.swapper.DataSourceConfigurationYamlSwapper;\n-import org.apache.shardingsphere.governance.repository.api.ConfigurationRepository;\n import org.apache.shardingsphere.shadow.api.config.ShadowRuleConfiguration;\n import org.apache.shardingsphere.sharding.algorithm.config.AlgorithmProvidedShardingRuleConfiguration;\n import org.apache.shardingsphere.sharding.api.config.ShardingRuleConfiguration;\ndiff --git a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-config/src/test/java/org/apache/shardingsphere/governance/core/config/ConfigCenterTest.java b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-config/src/test/java/org/apache/shardingsphere/governance/core/config/ConfigCenterTest.java\nindex febe474098a..3ebb20cd764 100644\n--- a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-config/src/test/java/org/apache/shardingsphere/governance/core/config/ConfigCenterTest.java\n+++ b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-config/src/test/java/org/apache/shardingsphere/governance/core/config/ConfigCenterTest.java\n@@ -23,7 +23,7 @@ import org.apache.shardingsphere.encrypt.api.config.EncryptRuleConfiguration;\n import org.apache.shardingsphere.infra.auth.Authentication;\n import org.apache.shardingsphere.infra.auth.yaml.config.YamlAuthenticationConfiguration;\n import org.apache.shardingsphere.infra.auth.yaml.swapper.AuthenticationYamlSwapper;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.config.RuleConfiguration;\n import org.apache.shardingsphere.infra.config.algorithm.ShardingSphereAlgorithmConfiguration;\n import org.apache.shardingsphere.infra.config.properties.ConfigurationPropertyKey;\ndiff --git a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-facade/src/main/java/org/apache/shardingsphere/governance/core/facade/GovernanceFacade.java b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-facade/src/main/java/org/apache/shardingsphere/governance/core/facade/GovernanceFacade.java\nindex 0ef6f3eb242..0b0b33f39d9 100644\n--- a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-facade/src/main/java/org/apache/shardingsphere/governance/core/facade/GovernanceFacade.java\n+++ b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-facade/src/main/java/org/apache/shardingsphere/governance/core/facade/GovernanceFacade.java\n@@ -21,7 +21,7 @@ import lombok.AccessLevel;\n import lombok.Getter;\n import lombok.NoArgsConstructor;\n import org.apache.shardingsphere.infra.auth.Authentication;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.config.RuleConfiguration;\n import org.apache.shardingsphere.governance.core.config.ConfigCenter;\n import org.apache.shardingsphere.governance.core.facade.listener.GovernanceListenerManager;\ndiff --git a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-facade/src/test/java/org/apache/shardingsphere/governance/core/facade/GovernanceFacadeTest.java b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-facade/src/test/java/org/apache/shardingsphere/governance/core/facade/GovernanceFacadeTest.java\nindex 44bb10a179d..5ab52172220 100644\n--- a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-facade/src/test/java/org/apache/shardingsphere/governance/core/facade/GovernanceFacadeTest.java\n+++ b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-facade/src/test/java/org/apache/shardingsphere/governance/core/facade/GovernanceFacadeTest.java\n@@ -19,7 +19,7 @@ package org.apache.shardingsphere.governance.core.facade;\n \n import org.apache.shardingsphere.infra.auth.Authentication;\n import org.apache.shardingsphere.infra.auth.ProxyUser;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.config.RuleConfiguration;\n import org.apache.shardingsphere.governance.core.config.ConfigCenter;\n import org.apache.shardingsphere.governance.core.facade.listener.GovernanceListenerManager;\ndiff --git a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/main/java/org/apache/shardingsphere/governance/core/schema/GovernanceSchemaContexts.java b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/main/java/org/apache/shardingsphere/governance/core/schema/GovernanceSchemaContexts.java\nindex 1bf51bb5e76..fdd73150a15 100644\n--- a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/main/java/org/apache/shardingsphere/governance/core/schema/GovernanceSchemaContexts.java\n+++ b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/main/java/org/apache/shardingsphere/governance/core/schema/GovernanceSchemaContexts.java\n@@ -32,8 +32,9 @@ import org.apache.shardingsphere.governance.core.registry.event.CircuitStateChan\n import org.apache.shardingsphere.governance.core.registry.event.DisabledStateChangedEvent;\n import org.apache.shardingsphere.governance.core.registry.schema.GovernanceSchema;\n import org.apache.shardingsphere.infra.auth.Authentication;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.config.RuleConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConverter;\n import org.apache.shardingsphere.infra.config.properties.ConfigurationProperties;\n import org.apache.shardingsphere.infra.config.properties.ConfigurationPropertyKey;\n import org.apache.shardingsphere.infra.context.SchemaContext;\n@@ -335,5 +336,11 @@ public abstract class GovernanceSchemaContexts implements SchemaContexts {\n     \n     protected abstract Map<String, DataSource> getModifiedDataSources(SchemaContext oldSchemaContext, Map<String, DataSourceConfiguration> newDataSourceConfigs);\n     \n-    protected abstract Map<String, Map<String, DataSource>> createDataSourcesMap(Map<String, Map<String, DataSourceConfiguration>> dataSourcesConfigs);\n+    private Map<String, Map<String, DataSource>> createDataSourcesMap(final Map<String, Map<String, DataSourceConfiguration>> dataSourcesConfigs) {\n+        Map<String, Map<String, DataSource>> result = new LinkedHashMap<>(dataSourcesConfigs.size(), 1);\n+        for (Entry<String, Map<String, DataSourceConfiguration>> entry : dataSourcesConfigs.entrySet()) {\n+            result.put(entry.getKey(), DataSourceConverter.getDataSourceMap(entry.getValue()));\n+        }\n+        return result;\n+    }\n }\ndiff --git a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/test/java/org/apache/shardingsphere/governance/core/schema/GovernanceSchemaContextsTest.java b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/test/java/org/apache/shardingsphere/governance/core/schema/GovernanceSchemaContextsTest.java\nindex 530f77ec0ed..aeaa3f2e0b3 100644\n--- a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/test/java/org/apache/shardingsphere/governance/core/schema/GovernanceSchemaContextsTest.java\n+++ b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/test/java/org/apache/shardingsphere/governance/core/schema/GovernanceSchemaContextsTest.java\n@@ -34,7 +34,7 @@ import org.apache.shardingsphere.governance.core.registry.event.DisabledStateCha\n import org.apache.shardingsphere.governance.core.registry.schema.GovernanceSchema;\n import org.apache.shardingsphere.governance.core.schema.fixture.GovernanceSchemaContextsFixture;\n import org.apache.shardingsphere.infra.auth.Authentication;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.config.properties.ConfigurationProperties;\n import org.apache.shardingsphere.infra.context.SchemaContext;\n import org.apache.shardingsphere.infra.context.impl.StandardSchemaContexts;\ndiff --git a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/test/java/org/apache/shardingsphere/governance/core/schema/fixture/GovernanceSchemaContextsFixture.java b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/test/java/org/apache/shardingsphere/governance/core/schema/fixture/GovernanceSchemaContextsFixture.java\nindex 0f329bb6303..c59992f05e7 100644\n--- a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/test/java/org/apache/shardingsphere/governance/core/schema/fixture/GovernanceSchemaContextsFixture.java\n+++ b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/test/java/org/apache/shardingsphere/governance/core/schema/fixture/GovernanceSchemaContextsFixture.java\n@@ -21,7 +21,7 @@ import com.zaxxer.hikari.HikariConfig;\n import com.zaxxer.hikari.HikariDataSource;\n import org.apache.shardingsphere.governance.core.facade.GovernanceFacade;\n import org.apache.shardingsphere.governance.core.schema.GovernanceSchemaContexts;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.context.SchemaContext;\n import org.apache.shardingsphere.infra.context.SchemaContexts;\n import org.apache.shardingsphere.infra.context.schema.DataSourceParameter;\n@@ -58,16 +58,6 @@ public final class GovernanceSchemaContextsFixture extends GovernanceSchemaConte\n         return result;\n     }\n     \n-    @Override\n-    protected Map<String, Map<String, DataSource>> createDataSourcesMap(final Map<String, Map<String, DataSourceConfiguration>> dataSourcesConfigs) {\n-        Map<String, Map<String, DataSourceParameter>> dataSourceParametersMap = createDataSourceParametersMap(dataSourcesConfigs);\n-        Map<String, Map<String, DataSource>> result = new LinkedHashMap<>(dataSourceParametersMap.size(), 1);\n-        for (Entry<String, Map<String, DataSourceParameter>> entry : dataSourceParametersMap.entrySet()) {\n-            result.put(entry.getKey(), createDataSources(entry.getValue()));\n-        }\n-        return result;\n-    }\n-    \n     private Map<String, DataSource> createDataSources(final Map<String, DataSourceParameter> dataSourceParameters) {\n         Map<String, DataSource> result = new LinkedHashMap<>(dataSourceParameters.size(), 1);\n         for (Entry<String, DataSourceParameter> entry: dataSourceParameters.entrySet()) {\ndiff --git a/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/test/resources/logback-test.xml b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/test/resources/logback-test.xml\nnew file mode 100644\nindex 00000000000..1af4509b347\n--- /dev/null\n+++ b/shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-schema/src/test/resources/logback-test.xml\n@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<configuration>\n+    <appender name=\"console\" class=\"ch.qos.logback.core.ConsoleAppender\">\n+        <encoder>\n+            <pattern>[%-5level] %d{HH:mm:ss.SSS} [%thread] %logger{36} - %msg%n</pattern>\n+        </encoder>\n+    </appender>\n+    <logger name=\"org.apache.shardingsphere\" level=\"warn\" additivity=\"false\">\n+        <appender-ref ref=\"console\"/>\n+    </logger>\n+    <logger name=\"org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.ExecutorExceptionHandler\" level=\"off\" />\n+    \n+    <root>\n+        <level value=\"error\" />\n+        <appender-ref ref=\"console\" />\n+    </root>\n+</configuration> \ndiff --git a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/DataSourceConfiguration.java b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/DataSourceConfiguration.java\nsimilarity index 90%\nrename from shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/DataSourceConfiguration.java\nrename to shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/DataSourceConfiguration.java\nindex 709fbcb80a9..6bc0d731b78 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/DataSourceConfiguration.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/DataSourceConfiguration.java\n@@ -15,7 +15,7 @@\n  * limitations under the License.\n  */\n \n-package org.apache.shardingsphere.infra.config;\n+package org.apache.shardingsphere.infra.config.datasource;\n \n import com.google.common.base.CaseFormat;\n import com.google.common.base.Joiner;\n@@ -24,6 +24,7 @@ import com.google.common.collect.Sets;\n import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n import lombok.SneakyThrows;\n+import org.apache.shardingsphere.infra.spi.ShardingSphereServiceLoader;\n \n import javax.sql.DataSource;\n import java.lang.reflect.Method;\n@@ -51,6 +52,7 @@ public final class DataSourceConfiguration {\n     private static final Collection<String> SKIPPED_PROPERTY_NAMES;\n     \n     static {\n+        ShardingSphereServiceLoader.register(JDBCParameterDecorator.class);\n         GENERAL_CLASS_TYPE = Sets.newHashSet(boolean.class, Boolean.class, int.class, Integer.class, long.class, Long.class, String.class, Collection.class, List.class);\n         SKIPPED_PROPERTY_NAMES = Sets.newHashSet(\"loginTimeout\");\n     }\n@@ -100,6 +102,7 @@ public final class DataSourceConfiguration {\n      * \n      * @return data source\n      */\n+    @SuppressWarnings(\"unchecked\")\n     @SneakyThrows(ReflectiveOperationException.class)\n     public DataSource createDataSource() {\n         DataSource result = (DataSource) Class.forName(dataSourceClassName).getConstructor().newInstance();\n@@ -113,9 +116,16 @@ public final class DataSourceConfiguration {\n                 setterMethod.get().invoke(result, entry.getValue());\n             }\n         }\n+        findJDBCParameterDecorator(result).ifPresent(decorator -> decorator.decorate(result));\n         return result;\n     }\n     \n+    @SuppressWarnings(\"rawtypes\")\n+    private Optional<JDBCParameterDecorator> findJDBCParameterDecorator(final DataSource dataSource) {\n+        return ShardingSphereServiceLoader.newServiceInstances(JDBCParameterDecorator.class).stream().filter(each -> each.getType() == dataSource.getClass()).findFirst();\n+        \n+    }\n+    \n     private Optional<Method> findSetterMethod(final Method[] methods, final String property) {\n         String setterMethodName = Joiner.on(\"\").join(SETTER_PREFIX, CaseFormat.LOWER_CAMEL.to(CaseFormat.UPPER_CAMEL, property));\n         for (Method each : methods) {\ndiff --git a/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/main/java/org/apache/shardingsphere/driver/governance/internal/util/DataSourceConverter.java b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/DataSourceConverter.java\nsimilarity index 93%\nrename from shardingsphere-jdbc/shardingsphere-jdbc-governance/src/main/java/org/apache/shardingsphere/driver/governance/internal/util/DataSourceConverter.java\nrename to shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/DataSourceConverter.java\nindex f2531617f67..f50ba221010 100644\n--- a/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/main/java/org/apache/shardingsphere/driver/governance/internal/util/DataSourceConverter.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/DataSourceConverter.java\n@@ -15,11 +15,10 @@\n  * limitations under the License.\n  */\n \n-package org.apache.shardingsphere.driver.governance.internal.util;\n+package org.apache.shardingsphere.infra.config.datasource;\n \n import lombok.AccessLevel;\n import lombok.NoArgsConstructor;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n \n import javax.sql.DataSource;\n import java.util.LinkedHashMap;\ndiff --git a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/JDBCParameterDecorator.java b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/JDBCParameterDecorator.java\nnew file mode 100644\nindex 00000000000..f6f26a8d25a\n--- /dev/null\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/JDBCParameterDecorator.java\n@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.config.datasource;\n+\n+import javax.sql.DataSource;\n+\n+/**\n+ * JDBC parameter decorator.\n+ * \n+ * @param <T> type of data source\n+ */\n+public interface JDBCParameterDecorator<T extends DataSource> {\n+    \n+    /**\n+     * Decorate data source.\n+     * \n+     * @param dataSource data source to be decorated\n+     */\n+    void decorate(T dataSource);\n+    \n+    /**\n+     * Get data source type.\n+     *\n+     * @return data source type\n+     */\n+    Class<T> getType();\n+}\ndiff --git a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/ShardingSphereEventBus.java b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/ShardingSphereEventBus.java\nindex 9e131ebacff..4e37ba5e064 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/ShardingSphereEventBus.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/ShardingSphereEventBus.java\n@@ -1,42 +1,42 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.shardingsphere.infra.eventbus;\r\n-\r\n-import com.google.common.eventbus.EventBus;\r\n-import lombok.AccessLevel;\r\n-import lombok.NoArgsConstructor;\r\n-\r\n-/**\r\n- * ShardingSphere event bus.\r\n- */\r\n-@NoArgsConstructor(access = AccessLevel.PRIVATE)\r\n-public final class ShardingSphereEventBus {\r\n-    \r\n-    /**\r\n-     * Get instance of ShardingSphere event bus.\r\n-     *\r\n-     * @return instance of ShardingSphere event bus\r\n-     */\r\n-    public static EventBus getInstance() {\r\n-        return ShardingSphereEventBusHolder.INSTANCE;\r\n-    }\r\n-    \r\n-    private static final class ShardingSphereEventBusHolder {\r\n-        private static final EventBus INSTANCE = new EventBus();\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.eventbus;\n+\n+import com.google.common.eventbus.EventBus;\n+import lombok.AccessLevel;\n+import lombok.NoArgsConstructor;\n+\n+/**\n+ * ShardingSphere event bus.\n+ */\n+@NoArgsConstructor(access = AccessLevel.PRIVATE)\n+public final class ShardingSphereEventBus {\n+    \n+    /**\n+     * Get instance of ShardingSphere event bus.\n+     *\n+     * @return instance of ShardingSphere event bus\n+     */\n+    public static EventBus getInstance() {\n+        return ShardingSphereEventBusHolder.INSTANCE;\n+    }\n+    \n+    private static final class ShardingSphereEventBusHolder {\n+        private static final EventBus INSTANCE = new EventBus();\n+    }\n+}\ndiff --git a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/DataSourceEvent.java b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/DataSourceEvent.java\nindex 9c38d3318bd..9e505b2988a 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/DataSourceEvent.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/DataSourceEvent.java\n@@ -1,36 +1,36 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.shardingsphere.infra.eventbus.event;\r\n-\r\n-import lombok.Getter;\r\n-import lombok.RequiredArgsConstructor;\r\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\r\n-\r\n-import java.util.Map;\r\n-\r\n-/**\r\n- * Data source event.\r\n- */\r\n-@RequiredArgsConstructor\r\n-@Getter\r\n-public class DataSourceEvent {\r\n-    \r\n-    private final String schemaName;\r\n-    \r\n-    private final Map<String, DataSourceConfiguration> dataSourceConfigurations;\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.eventbus.event;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n+\n+import java.util.Map;\n+\n+/**\n+ * Data source event.\n+ */\n+@RequiredArgsConstructor\n+@Getter\n+public final class DataSourceEvent {\n+    \n+    private final String schemaName;\n+    \n+    private final Map<String, DataSourceConfiguration> dataSourceConfigurations;\n+}\ndiff --git a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/MetaDataEvent.java b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/MetaDataEvent.java\nindex c7078b8cad1..b68f2e49523 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/MetaDataEvent.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/MetaDataEvent.java\n@@ -1,34 +1,34 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.shardingsphere.infra.eventbus.event;\r\n-\r\n-import lombok.Getter;\r\n-import lombok.RequiredArgsConstructor;\r\n-import org.apache.shardingsphere.infra.metadata.schema.RuleSchemaMetaData;\r\n-\r\n-/**\r\n- * Meta data event.\r\n- */\r\n-@RequiredArgsConstructor\r\n-@Getter\r\n-public class MetaDataEvent {\r\n-    \r\n-    private final String schemaName;\r\n-    \r\n-    private final RuleSchemaMetaData metaData;\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.eventbus.event;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import org.apache.shardingsphere.infra.metadata.schema.RuleSchemaMetaData;\n+\n+/**\n+ * Meta data event.\n+ */\n+@RequiredArgsConstructor\n+@Getter\n+public final class MetaDataEvent {\n+    \n+    private final String schemaName;\n+    \n+    private final RuleSchemaMetaData metaData;\n+}\ndiff --git a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/RuleEvent.java b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/RuleEvent.java\nindex 11c178d6f26..2a09e5fb04b 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/RuleEvent.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/RuleEvent.java\n@@ -1,36 +1,36 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.shardingsphere.infra.eventbus.event;\r\n-\r\n-import lombok.Getter;\r\n-import lombok.RequiredArgsConstructor;\r\n-import org.apache.shardingsphere.infra.config.RuleConfiguration;\r\n-\r\n-import java.util.Collection;\r\n-\r\n-/**\r\n- * Rule event.\r\n- */\r\n-@RequiredArgsConstructor\r\n-@Getter\r\n-public class RuleEvent {\r\n-    \r\n-    private final String schemaName;\r\n-    \r\n-    private final Collection<RuleConfiguration> ruleConfigurations;\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.eventbus.event;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import org.apache.shardingsphere.infra.config.RuleConfiguration;\n+\n+import java.util.Collection;\n+\n+/**\n+ * Rule event.\n+ */\n+@RequiredArgsConstructor\n+@Getter\n+public final class RuleEvent {\n+    \n+    private final String schemaName;\n+    \n+    private final Collection<RuleConfiguration> ruleConfigurations;\n+}\ndiff --git a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/SchemaNameEvent.java b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/SchemaNameEvent.java\nindex 11164e3191a..3a63d37d49c 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/SchemaNameEvent.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/eventbus/event/SchemaNameEvent.java\n@@ -1,33 +1,33 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.shardingsphere.infra.eventbus.event;\r\n-\r\n-import lombok.Getter;\r\n-import lombok.RequiredArgsConstructor;\r\n-\r\n-/**\r\n- * Schema name event.\r\n- */\r\n-@RequiredArgsConstructor\r\n-@Getter\r\n-public class SchemaNameEvent {\r\n-    \r\n-    private final String schemaName;\r\n-    \r\n-    private final boolean overwrite; \r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.eventbus.event;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+\n+/**\n+ * Schema name event.\n+ */\n+@RequiredArgsConstructor\n+@Getter\n+public final class SchemaNameEvent {\n+    \n+    private final String schemaName;\n+    \n+    private final boolean overwrite; \n+}\ndiff --git a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/DataSourceConfigurationTest.java b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/DataSourceConfigurationTest.java\nindex a86ccb3084e..b0d0672be57 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/DataSourceConfigurationTest.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/DataSourceConfigurationTest.java\n@@ -19,6 +19,7 @@ package org.apache.shardingsphere.infra.config;\n \n import com.zaxxer.hikari.HikariDataSource;\n import org.apache.commons.dbcp2.BasicDataSource;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.junit.Test;\n \n import java.sql.SQLException;\ndiff --git a/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/test/java/org/apache/shardingsphere/driver/governance/internal/util/DataSourceConverterTest.java b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/DataSourceConverterTest.java\nsimilarity index 93%\nrename from shardingsphere-jdbc/shardingsphere-jdbc-governance/src/test/java/org/apache/shardingsphere/driver/governance/internal/util/DataSourceConverterTest.java\nrename to shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/DataSourceConverterTest.java\nindex b202c185dbe..7042594fe99 100644\n--- a/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/test/java/org/apache/shardingsphere/driver/governance/internal/util/DataSourceConverterTest.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/config/DataSourceConverterTest.java\n@@ -15,10 +15,11 @@\n  * limitations under the License.\n  */\n \n-package org.apache.shardingsphere.driver.governance.internal.util;\n+package org.apache.shardingsphere.infra.config;\n \n import org.apache.commons.dbcp2.BasicDataSource;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConverter;\n import org.junit.Test;\n \n import javax.sql.DataSource;\ndiff --git a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/eventbus/ShardingSphereEventBusTest.java b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/eventbus/ShardingSphereEventBusTest.java\nindex ed488251e2b..4320dca661d 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/eventbus/ShardingSphereEventBusTest.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/eventbus/ShardingSphereEventBusTest.java\n@@ -1,31 +1,31 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.shardingsphere.infra.eventbus;\r\n-\r\n-import org.junit.Test;\r\n-\r\n-import static org.hamcrest.CoreMatchers.is;\r\n-import static org.junit.Assert.assertThat;\r\n-\r\n-public class ShardingSphereEventBusTest {\r\n-    \r\n-    @Test\r\n-    public void assertInstance() {\r\n-        assertThat(ShardingSphereEventBus.getInstance(), is(ShardingSphereEventBus.getInstance()));\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.eventbus;\n+\n+import org.junit.Test;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+\n+public final class ShardingSphereEventBusTest {\n+    \n+    @Test\n+    public void assertInstance() {\n+        assertThat(ShardingSphereEventBus.getInstance(), is(ShardingSphereEventBus.getInstance()));\n+    }\n+}\ndiff --git a/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/main/java/org/apache/shardingsphere/driver/governance/internal/datasource/GovernanceShardingSphereDataSource.java b/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/main/java/org/apache/shardingsphere/driver/governance/internal/datasource/GovernanceShardingSphereDataSource.java\nindex dcc4e21be16..61a4c25b7e0 100644\n--- a/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/main/java/org/apache/shardingsphere/driver/governance/internal/datasource/GovernanceShardingSphereDataSource.java\n+++ b/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/main/java/org/apache/shardingsphere/driver/governance/internal/datasource/GovernanceShardingSphereDataSource.java\n@@ -22,14 +22,14 @@ import lombok.Getter;\n import lombok.Setter;\n import org.apache.shardingsphere.driver.governance.internal.circuit.datasource.CircuitBreakerDataSource;\n import org.apache.shardingsphere.driver.governance.internal.schema.JDBCGovernanceSchemaContexts;\n-import org.apache.shardingsphere.driver.governance.internal.util.DataSourceConverter;\n import org.apache.shardingsphere.driver.jdbc.core.connection.ShardingSphereConnection;\n import org.apache.shardingsphere.driver.jdbc.unsupported.AbstractUnsupportedOperationDataSource;\n import org.apache.shardingsphere.governance.core.config.ConfigCenter;\n import org.apache.shardingsphere.governance.core.facade.GovernanceFacade;\n import org.apache.shardingsphere.governance.repository.api.config.GovernanceConfiguration;\n import org.apache.shardingsphere.infra.auth.Authentication;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConverter;\n import org.apache.shardingsphere.infra.config.RuleConfiguration;\n import org.apache.shardingsphere.infra.context.SchemaContexts;\n import org.apache.shardingsphere.infra.context.SchemaContextsBuilder;\ndiff --git a/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/main/java/org/apache/shardingsphere/driver/governance/internal/schema/JDBCGovernanceSchemaContexts.java b/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/main/java/org/apache/shardingsphere/driver/governance/internal/schema/JDBCGovernanceSchemaContexts.java\nindex 1a196224d42..92e557c7bac 100644\n--- a/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/main/java/org/apache/shardingsphere/driver/governance/internal/schema/JDBCGovernanceSchemaContexts.java\n+++ b/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/main/java/org/apache/shardingsphere/driver/governance/internal/schema/JDBCGovernanceSchemaContexts.java\n@@ -18,10 +18,10 @@\n package org.apache.shardingsphere.driver.governance.internal.schema;\n \n import com.google.common.collect.Maps;\n-import org.apache.shardingsphere.driver.governance.internal.util.DataSourceConverter;\n import org.apache.shardingsphere.governance.core.facade.GovernanceFacade;\n import org.apache.shardingsphere.governance.core.schema.GovernanceSchemaContexts;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConverter;\n import org.apache.shardingsphere.infra.context.SchemaContext;\n import org.apache.shardingsphere.infra.context.SchemaContexts;\n import org.apache.shardingsphere.infra.database.DefaultSchema;\n@@ -58,13 +58,4 @@ public final class JDBCGovernanceSchemaContexts extends GovernanceSchemaContexts\n         Map<String, DataSourceConfiguration> oldDataSourceConfigs = DataSourceConverter.getDataSourceConfigurationMap(getSchemaContexts().get(DefaultSchema.LOGIC_NAME).getSchema().getDataSources());\n         return oldDataSourceConfigs.containsKey(dataSourceConfigs.getKey()) && !oldDataSourceConfigs.get(dataSourceConfigs.getKey()).equals(dataSourceConfigs.getValue());\n     }\n-    \n-    @Override\n-    protected Map<String, Map<String, DataSource>> createDataSourcesMap(final Map<String, Map<String, DataSourceConfiguration>> dataSourcesConfigs) {\n-        Map<String, Map<String, DataSource>> result = new LinkedHashMap<>(dataSourcesConfigs.size(), 1);\n-        for (Entry<String, Map<String, DataSourceConfiguration>> entry : dataSourcesConfigs.entrySet()) {\n-            result.put(entry.getKey(), DataSourceConverter.getDataSourceMap(entry.getValue()));\n-        }\n-        return result;\n-    }\n }\ndiff --git a/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/test/java/org/apache/shardingsphere/driver/governance/internal/datasource/GovernanceShardingSphereDataSourceTest.java b/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/test/java/org/apache/shardingsphere/driver/governance/internal/datasource/GovernanceShardingSphereDataSourceTest.java\nindex 5bac954122e..11bf542f545 100644\n--- a/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/test/java/org/apache/shardingsphere/driver/governance/internal/datasource/GovernanceShardingSphereDataSourceTest.java\n+++ b/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/test/java/org/apache/shardingsphere/driver/governance/internal/datasource/GovernanceShardingSphereDataSourceTest.java\n@@ -29,7 +29,7 @@ import org.apache.shardingsphere.governance.core.registry.event.DisabledStateCha\n import org.apache.shardingsphere.governance.core.registry.schema.GovernanceSchema;\n import org.apache.shardingsphere.governance.repository.api.config.GovernanceCenterConfiguration;\n import org.apache.shardingsphere.governance.repository.api.config.GovernanceConfiguration;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.config.algorithm.ShardingSphereAlgorithmConfiguration;\n import org.apache.shardingsphere.infra.context.SchemaContexts;\n import org.apache.shardingsphere.infra.database.DefaultSchema;\ndiff --git a/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/test/java/org/apache/shardingsphere/driver/governance/internal/schema/JDBCGovernanceSchemaContextsTest.java b/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/test/java/org/apache/shardingsphere/driver/governance/internal/schema/JDBCGovernanceSchemaContextsTest.java\nindex 51286aeddb3..bb76ed0321e 100644\n--- a/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/test/java/org/apache/shardingsphere/driver/governance/internal/schema/JDBCGovernanceSchemaContextsTest.java\n+++ b/shardingsphere-jdbc/shardingsphere-jdbc-governance/src/test/java/org/apache/shardingsphere/driver/governance/internal/schema/JDBCGovernanceSchemaContextsTest.java\n@@ -18,11 +18,11 @@\n package org.apache.shardingsphere.driver.governance.internal.schema;\n \n import org.apache.commons.dbcp2.BasicDataSource;\n-import org.apache.shardingsphere.driver.governance.internal.util.DataSourceConverter;\n import org.apache.shardingsphere.governance.core.common.event.datasource.DataSourceChangedEvent;\n import org.apache.shardingsphere.governance.core.facade.GovernanceFacade;\n import org.apache.shardingsphere.infra.auth.Authentication;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConverter;\n import org.apache.shardingsphere.infra.config.properties.ConfigurationProperties;\n import org.apache.shardingsphere.infra.context.SchemaContext;\n import org.apache.shardingsphere.infra.context.impl.StandardSchemaContexts;\ndiff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/admin/RDLBackendHandler.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/admin/RDLBackendHandler.java\nindex 77f34483022..07e12c13c3e 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/admin/RDLBackendHandler.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/admin/RDLBackendHandler.java\n@@ -18,8 +18,8 @@\n package org.apache.shardingsphere.proxy.backend.text.admin;\n \n import lombok.RequiredArgsConstructor;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.config.RuleConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.context.impl.StandardSchemaContexts;\n import org.apache.shardingsphere.infra.database.type.DatabaseType;\n import org.apache.shardingsphere.infra.eventbus.ShardingSphereEventBus;\ndiff --git a/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/main/java/org/apache/shardingsphere/proxy/governance/GovernanceBootstrap.java b/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/main/java/org/apache/shardingsphere/proxy/governance/GovernanceBootstrap.java\nindex f1e005a6988..90a4d795bf8 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/main/java/org/apache/shardingsphere/proxy/governance/GovernanceBootstrap.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/main/java/org/apache/shardingsphere/proxy/governance/GovernanceBootstrap.java\n@@ -20,7 +20,7 @@ package org.apache.shardingsphere.proxy.governance;\n import lombok.RequiredArgsConstructor;\n import org.apache.shardingsphere.infra.auth.Authentication;\n import org.apache.shardingsphere.infra.auth.yaml.swapper.AuthenticationYamlSwapper;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.config.RuleConfiguration;\n import org.apache.shardingsphere.infra.yaml.swapper.YamlRuleConfigurationSwapperEngine;\n import org.apache.shardingsphere.infra.context.schema.DataSourceParameter;\ndiff --git a/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/test/java/org/apache/shardingsphere/proxy/governance/GovernanceBootstrapTest.java b/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/test/java/org/apache/shardingsphere/proxy/governance/GovernanceBootstrapTest.java\nindex addc3783438..b84aeab950f 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/test/java/org/apache/shardingsphere/proxy/governance/GovernanceBootstrapTest.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/test/java/org/apache/shardingsphere/proxy/governance/GovernanceBootstrapTest.java\n@@ -18,7 +18,7 @@\n package org.apache.shardingsphere.proxy.governance;\n \n import com.zaxxer.hikari.HikariDataSource;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.governance.core.facade.GovernanceFacade;\n import org.apache.shardingsphere.proxy.config.ProxyConfiguration;\n import org.apache.shardingsphere.proxy.config.ProxyConfigurationLoader;\ndiff --git a/shardingsphere-proxy/shardingsphere-proxy-common/src/main/java/org/apache/shardingsphere/proxy/config/util/DataSourceConverter.java b/shardingsphere-proxy/shardingsphere-proxy-common/src/main/java/org/apache/shardingsphere/proxy/config/util/DataSourceConverter.java\nindex 5a3b6ced0bd..59bd96061d9 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-common/src/main/java/org/apache/shardingsphere/proxy/config/util/DataSourceConverter.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-common/src/main/java/org/apache/shardingsphere/proxy/config/util/DataSourceConverter.java\n@@ -20,7 +20,7 @@ package org.apache.shardingsphere.proxy.config.util;\n import com.zaxxer.hikari.HikariDataSource;\n import lombok.AccessLevel;\n import lombok.NoArgsConstructor;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.context.schema.DataSourceParameter;\n import org.apache.shardingsphere.proxy.config.yaml.YamlDataSourceParameter;\n \ndiff --git a/shardingsphere-proxy/shardingsphere-proxy-common/src/test/java/org/apache/shardingsphere/proxy/config/util/DataSourceConverterTest.java b/shardingsphere-proxy/shardingsphere-proxy-common/src/test/java/org/apache/shardingsphere/proxy/config/util/DataSourceConverterTest.java\nindex d17277b6f90..38d6d411194 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-common/src/test/java/org/apache/shardingsphere/proxy/config/util/DataSourceConverterTest.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-common/src/test/java/org/apache/shardingsphere/proxy/config/util/DataSourceConverterTest.java\n@@ -18,7 +18,7 @@\n package org.apache.shardingsphere.proxy.config.util;\n \n import com.zaxxer.hikari.HikariDataSource;\n-import org.apache.shardingsphere.infra.config.DataSourceConfiguration;\n+import org.apache.shardingsphere.infra.config.datasource.DataSourceConfiguration;\n import org.apache.shardingsphere.infra.context.schema.DataSourceParameter;\n import org.junit.Test;\n \ndiff --git a/shardingsphere-proxy/shardingsphere-proxy-governance/pom.xml b/shardingsphere-proxy/shardingsphere-proxy-governance/pom.xml\nindex 7a0859d1651..9927316a05b 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-governance/pom.xml\n+++ b/shardingsphere-proxy/shardingsphere-proxy-governance/pom.xml\n@@ -54,5 +54,11 @@\n             <artifactId>shardingsphere-governance-core-schema</artifactId>\n             <version>${project.parent.version}</version>\n         </dependency>\n+        \n+        <dependency>\n+            <groupId>com.zaxxer</groupId>\n+            <artifactId>HikariCP</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n     </dependencies>\n </project>\ndiff --git a/shardingsphere-proxy/shardingsphere-proxy-governance/src/main/java/org/apache/shardingsphere/proxy/governance/schema/HikariJDBCParameterDecorator.java b/shardingsphere-proxy/shardingsphere-proxy-governance/src/main/java/org/apache/shardingsphere/proxy/governance/schema/HikariJDBCParameterDecorator.java\nnew file mode 100644\nindex 00000000000..c6af5ff1695\n--- /dev/null\n+++ b/shardingsphere-proxy/shardingsphere-proxy-governance/src/main/java/org/apache/shardingsphere/proxy/governance/schema/HikariJDBCParameterDecorator.java\n@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.proxy.governance.schema;\n+\n+import com.zaxxer.hikari.HikariDataSource;\n+import org.apache.shardingsphere.infra.config.datasource.JDBCParameterDecorator;\n+\n+/**\n+ * JDBC parameter decorator for HikariCP.\n+ */\n+public final class HikariJDBCParameterDecorator implements JDBCParameterDecorator<HikariDataSource> {\n+    \n+    @Override\n+    public void decorate(final HikariDataSource dataSource) {\n+        dataSource.getDataSourceProperties().setProperty(\"useServerPrepStmts\", Boolean.TRUE.toString());\n+        dataSource.getDataSourceProperties().setProperty(\"cachePrepStmts\", \"true\");\n+        dataSource.getDataSourceProperties().setProperty(\"prepStmtCacheSize\", \"250\");\n+        dataSource.getDataSourceProperties().setProperty(\"prepStmtCacheSqlLimit\", \"2048\");\n+        dataSource.getDataSourceProperties().setProperty(\"useLocalSessionState\", Boolean.TRUE.toString());\n+        dataSource.getDataSourceProperties().setProperty(\"rewriteBatchedStatements\", Boolean.TRUE.toString());\n+     ",
    "Using a LinkedHashSet instead of ArrayList to store unique Activity objects": "diff --git a/robotium-solo/src/main/java/com/jayway/android/robotium/solo/ActivityUtils.java b/robotium-solo/src/main/java/com/jayway/android/robotium/solo/ActivityUtils.java\nindex b6f7de7..b5c446d 100644\n--- a/robotium-solo/src/main/java/com/jayway/android/robotium/solo/ActivityUtils.java\n+++ b/robotium-solo/src/main/java/com/jayway/android/robotium/solo/ActivityUtils.java\n@@ -1,6 +1,7 @@\n package com.jayway.android.robotium.solo;\n \n import java.util.ArrayList;\n+import java.util.LinkedHashSet;\n import junit.framework.Assert;\n import android.app.Activity;\n import android.app.Instrumentation;\n@@ -23,7 +24,7 @@ class ActivityUtils {\n \tprivate ActivityMonitor activityMonitor;\n \tprivate Activity activity;\n \tprivate final Sleeper sleeper;\n-\tprivate ArrayList<Activity> activityList;\n+\tprivate LinkedHashSet<Activity> activityList;\n \tprivate final String LOG_TAG = \"Robotium\";\n \n \t/**\n@@ -39,7 +40,7 @@ class ActivityUtils {\n \t\tthis.inst = inst;\n \t\tthis.activity = activity;\n \t\tthis.sleeper = sleeper;\n-\t\tactivityList = new ArrayList<Activity>();\n+\t\tactivityList = new LinkedHashSet<Activity>();\n \t\tsetupActivityMonitor();\n \t}\n \n@@ -52,7 +53,7 @@ class ActivityUtils {\n \n \tpublic ArrayList<Activity> getAllOpenedActivities()\n \t{\n-\t\treturn activityList;\n+\t\treturn new ArrayList<Activity>(activityList);\n \t}\n \n \n@@ -145,13 +146,8 @@ class ActivityUtils {\n \t\t\tif (activityMonitor.getLastActivity() != null)\n \t\t\t\tactivity = activityMonitor.getLastActivity();\n \t\t}\n-\n-\t\tif (activityList.contains(activity))\n-\t\t\treturn activity;\n-\t\telse {\n \t\t\tactivityList.add(activity);\n \t\t\treturn activity;\n-\t\t}\n \t}\n \n \n@@ -164,9 +160,10 @@ class ActivityUtils {\n \n \tpublic void goBackToActivity(String name)\n \t{\n+\t\tArrayList<Activity> activitiesOpened = getAllOpenedActivities();\n \t\tboolean found = false;\t\n-\t\tfor(int i = 0; i < activityList.size(); i++){\n-\t\t\tif(activityList.get(i).getClass().getSimpleName().equals(name)){\n+\t\tfor(int i = 0; i < activitiesOpened.size(); i++){\n+\t\t\tif(activitiesOpened.get(i).getClass().getSimpleName().equals(name)){\n \t\t\t\tfound = true;\n \t\t\t\tbreak;\n \t\t\t}\n@@ -180,8 +177,8 @@ class ActivityUtils {\n \t\t\t}\n \t\t}\n \t\telse{\n-\t\t\tfor (int i = 0; i < activityList.size(); i++)\n-\t\t\t\tLog.d(LOG_TAG, \"Activity priorly opened: \"+ activityList.get(i).getClass().getSimpleName());\n+\t\t\tfor (int i = 0; i < activitiesOpened.size(); i++)\n+\t\t\t\tLog.d(LOG_TAG, \"Activity priorly opened: \"+ activitiesOpened.get(i).getClass().getSimpleName());\n \t\t\tAssert.assertTrue(\"No Activity named \" + name + \" has been priorly opened\", false);\n \t\t}\n \t}\n@@ -223,10 +220,11 @@ class ActivityUtils {\n \t */\n \n \tpublic void finishOpenedActivities(){\n+\t\tArrayList<Activity> activitiesOpened = getAllOpenedActivities();\n \t\t// Finish all opened activities\n-\t\tfor (int i = activityList.size()-1; i >= 0; i--) {\n+\t\tfor (int i = activitiesOpened.size()-1; i >= 0; i--) {\n \t\t\tsleeper.sleep(100);\n-\t\t\tfinishActivity(activityList.get(i));\n+\t\t\tfinishActivity(activitiesOpened.get(i));\n \t\t}\n \t\t// Finish the initial activity, pressing Back for good measure\n \t\tfinishActivity(getCurrentActivity());",
    "Rework ArchivingMediaDriver .": "diff --git a/aeron-archive/src/main/java/io/aeron/archive/ArchivingMediaDriver.java b/aeron-archive/src/main/java/io/aeron/archive/ArchivingMediaDriver.java\nindex a06936a99..59c22afac 100644\n--- a/aeron-archive/src/main/java/io/aeron/archive/ArchivingMediaDriver.java\n+++ b/aeron-archive/src/main/java/io/aeron/archive/ArchivingMediaDriver.java\n@@ -23,41 +23,93 @@ import org.agrona.concurrent.ShutdownSignalBarrier;\n import static io.aeron.driver.MediaDriver.loadPropertiesFiles;\n \n /**\n- * Archiving media driver which has dedicated threads for high throughput.\n+ * Archiving {@link MediaDriver}.\n  */\n-public class ArchivingMediaDriver\n+public final class ArchivingMediaDriver implements AutoCloseable\n {\n+    private final MediaDriver driver;\n+    private final Archive archive;\n+\n+    private ArchivingMediaDriver(final MediaDriver driver, final Archive archive)\n+    {\n+        this.driver = driver;\n+        this.archive = archive;\n+    }\n+\n     /**\n-     * Start an {@link ArchiveConductor} as a stand-alone process, with a {@link MediaDriver}.\n+     * Get the launched {@link Archive}.\n      *\n-     * @param args command line argument which is a list for properties files as URLs or filenames.\n+     * @return the launched {@link Archive}.\n      */\n-    public static void main(final String[] args)\n+    public Archive archive()\n     {\n-        loadPropertiesFiles(args);\n+        return archive;\n+    }\n+\n+    /**\n+     * Get the launched {@link MediaDriver}.\n+     *\n+     * @return the launched {@link MediaDriver}.\n+     */\n+    public MediaDriver mediaDriver()\n+    {\n+        return driver;\n+    }\n \n-        launch();\n+    public void close()\n+    {\n+        archive.close();\n+        driver.close();\n     }\n \n     /**\n-     * Launch an {@link Archive} with embedded {@link MediaDriver} and await a shutdown signal.\n+     * Launch an {@link Archive} with an embedded {@link MediaDriver} and await a shutdown signal.\n+     *\n+     * @param args command line argument which is a list for properties files as URLs or filenames.\n      */\n-    public static void launch()\n+    public static void main(final String[] args)\n     {\n-        final boolean useConcurrentCounterManager = Configuration.THREADING_MODE_DEFAULT != ThreadingMode.INVOKER;\n-\n-        try (MediaDriver driver = MediaDriver.launch(\n-                new MediaDriver.Context()\n-                    .useConcurrentCounterManager(useConcurrentCounterManager));\n-             Archive ignore = Archive.launch(\n-                 new Archive.Context()\n-                    .mediaDriverAgentInvoker(driver.sharedAgentInvoker())\n-                    .countersManager(driver.context().countersManager())\n-                    .errorHandler(driver.context().errorHandler())))\n+        loadPropertiesFiles(args);\n+\n+        try (ArchivingMediaDriver ignore = launch())\n         {\n             new ShutdownSignalBarrier().await();\n \n             System.out.println(\"Shutdown Archive...\");\n         }\n     }\n+\n+    /**\n+     * Launch a new {@link ArchivingMediaDriver} with default contexts.\n+     *\n+     * @return a new {@link ArchivingMediaDriver} with default contexts.\n+     */\n+    public static ArchivingMediaDriver launch()\n+    {\n+        return launch(new MediaDriver.Context(), new Archive.Context());\n+    }\n+\n+    /**\n+     * Launch a new {@link ArchivingMediaDriver} with provided contexts.\n+     *\n+     * @param driverCtx  for configuring the {@link MediaDriver}.\n+     * @param archiveCtx for configuring the {@link Archive}.\n+     * @return a new {@link ArchivingMediaDriver} with the provided contexts.\n+     */\n+    public static ArchivingMediaDriver launch(final MediaDriver.Context driverCtx, final Archive.Context archiveCtx)\n+    {\n+        final boolean useConcurrentCounterManager =\n+            driverCtx.threadingMode() != ThreadingMode.INVOKER ||\n+                (driverCtx.threadingMode() == null && Configuration.THREADING_MODE_DEFAULT != ThreadingMode.INVOKER);\n+\n+        final MediaDriver driver = MediaDriver.launch(driverCtx\n+            .useConcurrentCounterManager(useConcurrentCounterManager));\n+\n+        final Archive archive = Archive.launch(archiveCtx\n+                .mediaDriverAgentInvoker(driver.sharedAgentInvoker())\n+                .countersManager(driver.context().countersManager())\n+                .errorHandler(driver.context().errorHandler()));\n+\n+        return new ArchivingMediaDriver(driver, archive);\n+    }\n }\ndiff --git a/aeron-driver/src/main/java/io/aeron/driver/MediaDriver.java b/aeron-driver/src/main/java/io/aeron/driver/MediaDriver.java\nindex 58875623f..8517f33a1 100644\n--- a/aeron-driver/src/main/java/io/aeron/driver/MediaDriver.java\n+++ b/aeron-driver/src/main/java/io/aeron/driver/MediaDriver.java\n@@ -1110,6 +1110,11 @@ public final class MediaDriver implements AutoCloseable\n             return driverConductorProxy;\n         }\n \n+        public ThreadingMode threadingMode()\n+        {\n+            return threadingMode;\n+        }\n+\n         public IdleStrategy conductorIdleStrategy()\n         {\n             return conductorIdleStrategy;",
    "Remove useless System . out . println": "diff --git a/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/metadata/JsonMarshallerTests.java b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/metadata/JsonMarshallerTests.java\nindex 9780fe0669..7b5e838d28 100644\n--- a/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/metadata/JsonMarshallerTests.java\n+++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/metadata/JsonMarshallerTests.java\n@@ -49,7 +49,6 @@ public class JsonMarshallerTests {\n \t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n \t\tJsonMarshaller marshaller = new JsonMarshaller();\n \t\tmarshaller.write(metadata, outputStream);\n-\t\tSystem.out.println(outputStream);\n \t\tConfigurationMetadata read = marshaller.read(new ByteArrayInputStream(\n \t\t\t\toutputStream.toByteArray()));\n \t\tassertThat(read,",
    "Throw an exception when memory usage estimation endpoint encounters empty data frame .": "diff --git a/x-pack/plugin/ml/qa/ml-with-security/build.gradle b/x-pack/plugin/ml/qa/ml-with-security/build.gradle\nindex 1929b03ba43..063ad43a921 100644\n--- a/x-pack/plugin/ml/qa/ml-with-security/build.gradle\n+++ b/x-pack/plugin/ml/qa/ml-with-security/build.gradle\n@@ -92,6 +92,7 @@ integTest.runner {\n     'ml/data_frame_analytics_crud/Test put classification given num_top_classes is greater than 1k',\n     'ml/data_frame_analytics_crud/Test put classification given training_percent is less than one',\n     'ml/data_frame_analytics_crud/Test put classification given training_percent is greater than hundred',\n+    'ml/data_frame_analytics_memory_usage_estimation/Test memory usage estimation for empty data frame',\n     'ml/evaluate_data_frame/Test given missing index',\n     'ml/evaluate_data_frame/Test given index does not exist',\n     'ml/evaluate_data_frame/Test given missing evaluation',\ndiff --git a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportStartDataFrameAnalyticsAction.java b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportStartDataFrameAnalyticsAction.java\nindex 46bec44ea56..849d948f671 100644\n--- a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportStartDataFrameAnalyticsAction.java\n+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportStartDataFrameAnalyticsAction.java\n@@ -239,11 +239,13 @@ public class TransportStartDataFrameAnalyticsAction\n                             .collectDataSummaryAsync(ActionListener.wrap(\n                                 dataSummary -> {\n                                     if (dataSummary.rows == 0) {\n-                                        finalListener.onFailure(new ElasticsearchStatusException(\n-                                            \"Unable to start {} as there are no analyzable data in source indices [{}].\",\n-                                            RestStatus.BAD_REQUEST,\n-                                            id,\n-                                            Strings.arrayToCommaDelimitedString(startContext.config.getSource().getIndex())\n+                                        finalListener.onFailure(ExceptionsHelper.badRequestException(\n+                                            \"Unable to start {} as no documents in the source indices [{}] contained all the fields \"\n+                                                + \"selected for analysis. If you are relying on automatic field selection then there are \"\n+                                                + \"currently mapped fields that do not exist in any indexed documents, and you will have \"\n+                                                + \"to switch to explicit field selection and include only fields that exist in indexed \"\n+                                                + \"documents.\",\n+                                            id, Strings.arrayToCommaDelimitedString(startContext.config.getSource().getIndex())\n                                         ));\n                                     } else {\n                                         finalListener.onResponse(startContext);\ndiff --git a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/MemoryUsageEstimationProcessManager.java b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/MemoryUsageEstimationProcessManager.java\nindex c41e3038725..2e5189eb249 100644\n--- a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/MemoryUsageEstimationProcessManager.java\n+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/MemoryUsageEstimationProcessManager.java\n@@ -9,6 +9,7 @@ import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import org.apache.logging.log4j.message.ParameterizedMessage;\n import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.common.Strings;\n import org.elasticsearch.common.unit.ByteSizeUnit;\n import org.elasticsearch.common.unit.ByteSizeValue;\n import org.elasticsearch.xpack.core.ml.dataframe.DataFrameAnalyticsConfig;\n@@ -57,10 +58,16 @@ public class MemoryUsageEstimationProcessManager {\n                                                DataFrameDataExtractorFactory dataExtractorFactory) {\n         DataFrameDataExtractor dataExtractor = dataExtractorFactory.newExtractor(false);\n         DataFrameDataExtractor.DataSummary dataSummary = dataExtractor.collectDataSummary();\n-        Set<String> categoricalFields = dataExtractor.getCategoricalFields(config.getAnalysis());\n         if (dataSummary.rows == 0) {\n-            return new MemoryUsageEstimationResult(ByteSizeValue.ZERO, ByteSizeValue.ZERO);\n+            throw ExceptionsHelper.badRequestException(\n+                \"[{}] Unable to estimate memory usage as no documents in the source indices [{}] contained all the fields selected for \"\n+                    + \"analysis. If you are relying on automatic field selection then there are currently mapped fields that do not exist \"\n+                    + \"in any indexed documents, and you will have to switch to explicit field selection and include only fields that \"\n+                    + \"exist in indexed documents.\",\n+                jobId,\n+                Strings.arrayToCommaDelimitedString(config.getSource().getIndex()));\n         }\n+        Set<String> categoricalFields = dataExtractor.getCategoricalFields(config.getAnalysis());\n         AnalyticsProcessConfig processConfig =\n             new AnalyticsProcessConfig(\n                 jobId,\ndiff --git a/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/dataframe/process/MemoryUsageEstimationProcessManagerTests.java b/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/dataframe/process/MemoryUsageEstimationProcessManagerTests.java\nindex 7cc3e64c15b..5dc015d86e7 100644\n--- a/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/dataframe/process/MemoryUsageEstimationProcessManagerTests.java\n+++ b/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/dataframe/process/MemoryUsageEstimationProcessManagerTests.java\n@@ -42,8 +42,6 @@ public class MemoryUsageEstimationProcessManagerTests extends ESTestCase {\n     private static final String CONFIG_ID = \"dummy\";\n     private static final int NUM_ROWS = 100;\n     private static final int NUM_COLS = 4;\n-    private static final MemoryUsageEstimationResult PROCESS_RESULT_ZERO =\n-        new MemoryUsageEstimationResult(ByteSizeValue.ZERO, ByteSizeValue.ZERO);\n     private static final MemoryUsageEstimationResult PROCESS_RESULT =\n         new MemoryUsageEstimationResult(ByteSizeValue.parseBytesSizeValue(\"20kB\", \"\"), ByteSizeValue.parseBytesSizeValue(\"10kB\", \"\"));\n \n@@ -85,9 +83,11 @@ public class MemoryUsageEstimationProcessManagerTests extends ESTestCase {\n \n         processManager.runJobAsync(TASK_ID, dataFrameAnalyticsConfig, dataExtractorFactory, listener);\n \n-        verify(listener).onResponse(resultCaptor.capture());\n-        MemoryUsageEstimationResult result = resultCaptor.getValue();\n-        assertThat(result, equalTo(PROCESS_RESULT_ZERO));\n+        verify(listener).onFailure(exceptionCaptor.capture());\n+        ElasticsearchException exception = (ElasticsearchException) exceptionCaptor.getValue();\n+        assertThat(exception.status(), equalTo(RestStatus.BAD_REQUEST));\n+        assertThat(exception.getMessage(), containsString(TASK_ID));\n+        assertThat(exception.getMessage(), containsString(\"Unable to estimate memory usage\"));\n \n         verifyNoMoreInteractions(process, listener);\n     }\ndiff --git a/x-pack/plugin/src/test/resources/rest-api-spec/test/ml/data_frame_analytics_memory_usage_estimation.yml b/x-pack/plugin/src/test/resources/rest-api-spec/test/ml/data_frame_analytics_memory_usage_estimation.yml\nindex a58ea36aaac..39fe8005fa8 100644\n--- a/x-pack/plugin/src/test/resources/rest-api-spec/test/ml/data_frame_analytics_memory_usage_estimation.yml\n+++ b/x-pack/plugin/src/test/resources/rest-api-spec/test/ml/data_frame_analytics_memory_usage_estimation.yml\n@@ -14,12 +14,27 @@ setup:\n ---\n \"Test memory usage estimation for empty data frame\":\n   - do:\n+      catch: /Unable to estimate memory usage as no documents in the source indices \\[index-source\\] contained all the fields selected for analysis/\n+      ml.estimate_memory_usage:\n+        body:\n+          source: { index: \"index-source\" }\n+          analysis: { outlier_detection: {} }\n+\n+  - do:\n+      index:\n+       ",
    "verify instrumentation fix": "diff --git a/src/main/java/co/paralleluniverse/fibers/Fiber.java b/src/main/java/co/paralleluniverse/fibers/Fiber.java\nindex 8f1d0343c..b005aa224 100644\n--- a/src/main/java/co/paralleluniverse/fibers/Fiber.java\n+++ b/src/main/java/co/paralleluniverse/fibers/Fiber.java\n@@ -5,6 +5,7 @@ import co.paralleluniverse.common.util.NamingThreadFactory;\n import co.paralleluniverse.common.util.VisibleForTesting;\n import co.paralleluniverse.concurrent.forkjoin.ParkableForkJoinTask;\n import co.paralleluniverse.concurrent.util.UtilUnsafe;\n+import co.paralleluniverse.fibers.instrument.Retransform;\n import co.paralleluniverse.strands.Strand;\n import co.paralleluniverse.strands.Stranded;\n import co.paralleluniverse.strands.SuspendableCallable;\n@@ -39,8 +40,13 @@ public class Fiber<V> extends Strand implements Joinable<V>, Serializable {\n     private static final long serialVersionUID = 2783452871536981L;\n \n     static {\n+        assert printVerifyInstrumentationWarning();\n+    }\n+\n+    private static boolean printVerifyInstrumentationWarning() {\n         if (verifyInstrumentation)\n             System.err.println(\"WARNING: Fiber is set to verify instrumentation. This may severely harm performance\");\n+        return true;\n     }\n \n     public static enum State {\n@@ -328,6 +334,9 @@ public class Fiber<V> extends Strand implements Joinable<V>, Serializable {\n                 postParkActions = null;\n             }\n             return false;\n+        } catch (FiberInterruptedException e) {\n+            state = State.TERMINATED;\n+            return true;\n         } catch (InterruptedException e) {\n             state = State.TERMINATED;\n             throw new RuntimeException(e);\n@@ -340,9 +349,9 @@ public class Fiber<V> extends Strand implements Joinable<V>, Serializable {\n     }\n \n     private void installFiberLocals() {\n-        if(fjPool == null) // in tests\n+        if (fjPool == null) // in tests\n             return;\n-        \n+\n         final Thread currentThread = Thread.currentThread();\n \n         Object tmpThreadLocals = ThreadAccess.getThreadLocals(currentThread);\n@@ -530,7 +539,7 @@ public class Fiber<V> extends Strand implements Joinable<V>, Serializable {\n     public boolean isDone() {\n         return state == State.TERMINATED;\n     }\n-    \n+\n     private void sleep1(long millis) throws SuspendExecution {\n         // this class's methods aren't instrumented, so we can't rely on the stack. This method will be called again when unparked\n         try {\n@@ -751,21 +760,21 @@ public class Fiber<V> extends Strand implements Joinable<V>, Serializable {\n     private static boolean checkInstrumentation() {\n         if (!verifyInstrumentation)\n             throw new AssertionError();\n+\n         StackTraceElement[] stes = Thread.currentThread().getStackTrace();\n-        try {\n-            for (StackTraceElement ste : stes) {\n-                if (ste.getClassName().equals(Thread.class.getName()) && ste.getMethodName().equals(\"getStackTrace\"))\n-                    continue;\n-                if (!ste.getClassName().equals(Fiber.class.getName()) && !ste.getClassName().startsWith(Fiber.class.getName() + '$')) {\n-                    if (!isInstrumented(Class.forName(ste.getClassName())))\n-                        throw new IllegalStateException(\"Method \" + ste.getClassName() + \".\" + ste.getMethodName() + \" on the call-stack has not been instrumented. (trace: \" + Arrays.toString(stes) + \")\");\n-                } else if (ste.getMethodName().equals(\"run1\"))\n-                    return true;\n-            }\n-            return false;\n-        } catch (ClassNotFoundException e) {\n-            throw new IllegalStateException(\"Not run through Fiber.exec(). (trace: \" + Arrays.toString(stes) + \")\");\n+        for (StackTraceElement ste : stes) {\n+            if (ste.getClassName().equals(Thread.class.getName()) && ste.getMethodName().equals(\"getStackTrace\"))\n+                continue;\n+            if (!ste.getClassName().equals(Fiber.class.getName()) && !ste.getClassName().startsWith(Fiber.class.getName() + '$')) {\n+                if (!Retransform.isInstrumented(ste.getClassName())) {\n+                    final String str = \"Method \" + ste.getClassName() + \".\" + ste.getMethodName() + \" on the call-stack has not been instrumented. (trace: \" + Arrays.toString(stes) + \")\";\n+                    throw new IllegalStateException(str);\n+                    //System.err.println(\"WARNING: \" + str);\n+                }\n+            } else if (ste.getMethodName().equals(\"run1\"))\n+                return true;\n         }\n+        throw new IllegalStateException(\"Not run through Fiber.exec(). (trace: \" + Arrays.toString(stes) + \")\");\n   ",
    "Create rest version 2 based on restfulapi . net .": "diff --git a/src/main/java/io/antmedia/datastore/db/MapDBStore.java b/src/main/java/io/antmedia/datastore/db/MapDBStore.java\nindex 016df8b85..7f167860b 100644\n--- a/src/main/java/io/antmedia/datastore/db/MapDBStore.java\n+++ b/src/main/java/io/antmedia/datastore/db/MapDBStore.java\n@@ -820,7 +820,6 @@ public class MapDBStore extends DataStore {\n \t\t\t\toldBroadcast.setPassword(broadcast.getPassword());\n \t\t\t\toldBroadcast.setIpAddr(broadcast.getIpAddr());\n \t\t\t\toldBroadcast.setStreamUrl(broadcast.getStreamUrl());\n-\t\t\t\toldBroadcast.setStreamUrl(broadcast.getStreamUrl());\n \n \t\t\t\tgetMap().replace(oldBroadcast.getStreamId(), gson.toJson(oldBroadcast));\n \ndiff --git a/src/main/java/io/antmedia/rest/BroadcastRestService.java b/src/main/java/io/antmedia/rest/BroadcastRestService.java\nindex f70ad419b..b4ceccdd0 100644\n--- a/src/main/java/io/antmedia/rest/BroadcastRestService.java\n+++ b/src/main/java/io/antmedia/rest/BroadcastRestService.java\n@@ -95,10 +95,6 @@ import io.swagger.annotations.SwaggerDefinition;\n @Path(\"/\")\n public class BroadcastRestService extends RestServiceBase{\n \n-\t/**\n-\t * Key for Manifest entry of Build number. It should match with the value in pom.xml\n-\t */\n-\tprivate static final String BUILD_NUMBER = \"Build-Number\";\n \n \t@ApiModel(value=\"BroadcastStatistics\", description=\"The statistics class of the broadcasts\")\n \tpublic static class BroadcastStatistics {\n@@ -137,22 +133,13 @@ public class BroadcastRestService extends RestServiceBase{\n \tpublic static final int ERROR_SOCIAL_ENDPOINT_UNDEFINED_ENDPOINT = -2;\n \tpublic static final int ERROR_SOCIAL_ENDPOINT_EXCEPTION_IN_ASKING_AUTHPARAMS = -3;\n \n-\tpublic static final String ENTERPRISE_EDITION = \"Enterprise Edition\";\n-\tpublic static final String COMMUNITY_EDITION = \"Community Edition\";\n-\tpublic static final int MP4_ENABLE = 1;\n-\tpublic static final int MP4_DISABLE = -1;\n-\tpublic static final int MP4_NO_SET = 0;\n \n-\tprivate AppSettings appSettings;\n \n \tpublic interface ProcessBuilderFactory {\n \t\tProcess make(String...args);\n \t}\n \n-\tprivate ProcessBuilderFactory processBuilderFactory = null;\n-\n \tprotected static Logger logger = LoggerFactory.getLogger(BroadcastRestService.class);\n-\tprivate static String hostaddress;\n \n \n \t/**\n@@ -199,17 +186,7 @@ public class BroadcastRestService extends RestServiceBase{\n \t@Path(\"/broadcast/createWithStreamID\")\n \t@Produces(MediaType.APPLICATION_JSON)\n \tpublic Broadcast createBroadcastWithStreamID(@ApiParam(value = \"Broadcast object only related information should be set, it may be null as well.\", required = true) Broadcast broadcast) {\n-\n-\t\tString settingsListenerHookURL = null; \n-\t\tString fqdn = null;\n-\t\tAppSettings appSettingsLocal = getAppSettings();\n-\t\tif (appSettingsLocal != null) {\n-\t\t\tsettingsListenerHookURL = appSettingsLocal.getListenerHookURL();\n-\t\t\tfqdn = appSettingsLocal.getServerName();\n-\t\t}\n-\n-\t\treturn saveBroadcast(broadcast, AntMediaApplicationAdapter.BROADCAST_STATUS_CREATED, getScope().getName(),\n-\t\t\t\tgetDataStore(), settingsListenerHookURL, fqdn);\n+\t\treturn super.createBroadcastWithStreamID(broadcast);\n \t}\n \n \n@@ -324,58 +301,6 @@ public class BroadcastRestService extends RestServiceBase{\n \n \n \n-\tpublic static Broadcast saveBroadcast(Broadcast broadcast, String status, String scopeName, DataStore dataStore,\n-\t\t\tString settingsListenerHookURL, String fqdn) {\n-\n-\t\tif (broadcast == null) {\n-\t\t\tbroadcast = new Broadcast();\n-\t\t}\n-\t\tbroadcast.setStatus(status);\n-\t\tbroadcast.setDate(System.currentTimeMillis());\n-\n-\t\tString listenerHookURL = broadcast.getListenerHookURL();\n-\n-\t\tif ((listenerHookURL == null || listenerHookURL.isEmpty()) \n-\t\t\t\t&& settingsListenerHookURL != null && !settingsListenerHookURL.isEmpty()) {\n-\n-\t\t\tbroadcast.setListenerHookURL(settingsListenerHookURL);\n-\t\t}\n-\n-\t\tif (fqdn == null || fqdn.length() == 0) {\n-\t\t\tfqdn = getHostAddress(); \n-\t\t}\n-\n-\t\tif (fqdn != null && fqdn.length() >= 0) {\n-\t\t\tbroadcast.setRtmpURL(\"rtmp://\" + fqdn + \"/\" + scopeName + \"/\");\n-\t\t}\n-\n-\t\tdataStore.save(broadcast);\n-\t\treturn broadcast;\n-\t}\n-\n-\tprivate static String getHostAddress() {\n-\t\t\n-\t\tif (hostaddress == null) {\n-\t\t\tlong startTime = System.currentTimeMillis();\n-\t\t\ttry {\n-\t\t\t\t/*\n-\t\t\t\t * InetAddress.getLocalHost().getHostAddress() takes long time(5sec in macos) to return.\n-\t\t\t\t * Let it is run once\n-\t\t\t\t */\n-\t\t\t\thostaddress = InetAddress.getLocalHost().getHostAddress();\n-\t\t\t} catch (UnknownHostException e) {\n-\t\t\t\tlogger.error(ExceptionUtils.getStackTrace(e));\n-\t\t\t}\n-\t\t\tlong diff = System.currentTimeMillis() - startTime;\n-\t\t\tif (diff > 1000) {\n-\t\t\t\tlogger.warn(\"Getting host adress took {}ms. it's cached now and will return immediately from now on. You can \"\n-\t\t\t\t\t\t+ \" alternatively set serverName in conf/red5.properties file \", diff);\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\t\n-\t\treturn hostaddress;\n-\t}\n \n \t/**\n \t * Create broadcast and bind social networks at the same time. Server should\n@@ -434,21 +359,6 @@ public class BroadcastRestService extends RestServiceBase{\n \t\treturn new Result(result);\n \t}\n \n-\tprivate boolean stopBroadcastInternal(Broadcast broadcast) {\n-\t\tboolean result = false;\n-\t\tif (broadcast != null) {\n-\t\t\tresult = getApplication().stopStreaming(broadcast).isSuccess(); \n-\t\t\tif (result) {\n-\t\t\t\tlogger.info(\"broadcast is stopped streamId: {}\", broadcast.getStreamId());\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\tlogger.error(\"No active broadcast found with id {}, so could not stopped\", broadcast.getStreamId());\n-\t\t\t}\n-\t\t}\n-\t\treturn result;\n-\t}\n-\n-\n \t/**\n \t * Updates the properties of the broadcast\n \t * \n@@ -466,32 +376,7 @@ public class BroadcastRestService extends RestServiceBase{\n \tpublic Result updateBroadcast(@ApiParam(value = \"Broadcast object\", required = true) Broadcast broadcast,\n \t\t\t@ApiParam(value = \"Comma separated social network IDs, they must in comma separated and IDs must match with the defined IDs\", required = true) @QueryParam(\"socialNetworks\") String socialNetworksToPublish) {\n \n-\t\tboolean result = getDataStore().updateName(broadcast.getStreamId(), broadcast.getName(),\n-\t\t\t\tbroadcast.getDescription());\n-\t\tStringBuilder message = new StringBuilder();\n-\t\tint errorId = 0;\n-\t\tif (result) {\n-\t\t\tBroadcast fetchedBroadcast = getDataStore().get(broadcast.getStreamId());\n-\t\t\tgetDataStore().removeAllEndpoints(fetchedBroadcast.getStreamId());\n-\n-\t\t\tif (socialNetworksToPublish != null && socialNetworksToPublish.length() > 0) {\n-\t\t\t\tString[] socialNetworks = socialNetworksToPublish.split(\",\");\n-\n-\t\t\t\tfor (String networkName : socialNetworks) {\n-\t\t\t\t\tResult addSocialEndpoint = addSocialEndpoint(broadcast.getStreamId(), networkName);\n-\t\t\t\t\tif (!addSocialEndpoint.isSuccess()) {\n-\t\t\t\t\t\tresult = false;\n-\t\t\t\t\t\tmessage.append(networkName).append(\" \");\n-\t\t\t\t\t\terrorId = -1;\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tif (message.length() > 0) {\n-\t\t\tmessage.append(\" endpoint cannot be added\");\n-\t\t}\n-\t\treturn new Result(result, message.toString(), errorId);\n+\t\treturn super.updateBroadcast(broadcast.getStreamId(), broadcast.getName(), broadcast.getDescription(), socialNetworksToPublish);\n \t}\n \n \t/**\n@@ -506,26 +391,9 @@ public class BroadcastRestService extends RestServiceBase{\n \t@Consumes(MediaType.APPLICATION_JSON)\n \t@Path(\"/broadcast/revokeSocialNetwork/{endpointId}\")\n \t@Produces(MediaType.APPLICATION_JSON)\n+\t@Override\n \tpublic Result revokeSocialNetwork(@ApiParam(value = \"Endpoint id\", required = true) @PathParam(\"endpointId\") String endpointId) {\n-\t\tMap<String, VideoServiceEndpoint> endPointServiceMap = getEndpointList();\n-\t\tString message = null;\n-\t\tboolean result = false;\n-\t\tif (endPointServiceMap != null) {\n-\n-\t\t\tVideoServiceEndpoint videoServiceEndpoint = endPointServiceMap.get(endpointId);\n-\t\t\tif (videoServiceEndpoint != null) {\n-\t\t\t\tvideoServiceEndpoint.resetCredentials();\n-\t\t\t\tendPointServiceMap.remove(endpointId);\n-\t\t\t\tresult = true;\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\tmessage = \"Service with the name specified is not found in this app\";\n-\t\t\t}\n-\t\t} \n-\t\telse {\n-\t\t\tmessage = \"No endpoint is defined for this app\";\n-\t\t}\n-\t\treturn new Result(result, message);\n+\t\treturn super.revokeSocialNetwork(endpointId);\n \t}\n \n \t/**\n@@ -573,16 +441,8 @@ public class BroadcastRestService extends RestServiceBase{\n \n \t\t\t@ApiParam(value = \"the id of the service in order to have successfull operation. Social network must be authorized in advance\", required = true)\n \t@FormParam(\"serviceName\") String endpointServiceId) {\n-\n-\t\tBroadcast broadcast = lookupBroadcast(id);\n-\n-\t\tboolean success = addSocialEndpoints(broadcast, endpointServiceId);\n-\t\tString message = \"\";\n-\t\tif(!success) {\n-\t\t\tmessage  = endpointServiceId+\" endpoint can not be added to \"+id;\n-\t\t}\n-\n-\t\treturn new Result(success, message);\n+\t\t\n+\t\treturn super.addSocialEndpoint(id, endpointServiceId);\n \t}\n \n \t/**\n@@ -605,19 +465,7 @@ public class BroadcastRestService extends RestServiceBase{\n \t@Produces(MediaType.APPLICATION_JSON)\n \tpublic Result addEndpoint(@ApiParam(value = \"Broadcast id\", required = true) @FormParam(\"id\") String id,\n \t\t\t@ApiParam(value = \"RTMP url of the endpoint that stream will be republished\", required = true) @FormParam(\"rtmpUrl\") String rtmpUrl) {\n-\t\tboolean success = false;\n-\t\tString message = null;\n-\t\ttry {\n-\t\t\tEndpoint endpoint = new Endpoint();\n-\t\t\tendpoint.setRtmpUrl(rtmpUrl);\n-\t\t\tendpoint.type = \"generic\";\n-\n-\t\t\tsuccess = getDataStore().addEndpoint(id, endpoint);\n-\t\t} catch (Exception e) {\n-\t\t\tlogger.error(ExceptionUtils.getStackTrace(e));\n-\t\t}\n-\n-\t\treturn new Result(success, message);\n+\t\treturn super.addEndpoint(id, rtmpUrl);\n \t}\n \n \t/**\n@@ -635,13 +483,14 @@ public class BroadcastRestService extends RestServiceBase{\n \t@Path(\"/broadcast/getLiveComments/{endpointServiceId}/{streamId}/{offset}/{batch}\")\n \t@Produces(MediaType.APPLICATION_JSON)\n \tpublic List<LiveComment> getLiveCommentsFromEndpoint(@ApiParam(value = \"This is the id of the endpoint service\", required = true)\n-\t@PathParam(\"endpointServiceId\") String endpointServiceId,\n-\t@ApiParam(value = \"Stream id\", required = true)\n-\t@PathParam(\"streamId\") String streamId,\n-\t@ApiParam(value = \"this is the start offset where to start getting comment\", required = true)\n-\t@PathParam(\"offset\") int offset,\n-\t@ApiParam(value = \"number of items to be returned\", required = true)\n-\t@PathParam(\"batch\") int batch) {\n+\t\t\t\t@PathParam(\"endpointServiceId\") String endpointServiceId,\n+\t\t\t\t@ApiParam(value = \"Stream id\", required = true)\n+\t\t\t\t@PathParam(\"streamId\") String streamId,\n+\t\t\t\t@ApiParam(value = \"this is the start offset where to start getting comment\", required = true)\n+\t\t\t\t@PathParam(\"offset\") int offset,\n+\t\t\t\t@ApiParam(value = \"number of items to be returned\", required = true)\n+\t\t\t\t@PathParam(\"batch\") int batch) \n+\t{\n \n \t\tVideoServiceEndpoint videoServiceEndPoint = getApplication().getVideoServiceEndPoint(endpointServiceId);\n \t\tList<LiveComment> liveComment = null;\n@@ -720,18 +569,6 @@ public class BroadcastRestService extends RestServiceBase{\n \t\treturn interaction;\n \t}\n \n-\n-\n-\tprotected Broadcast lookupBroadcast(String id) {\n-\t\tBroadcast broadcast = null;\n-\t\ttry {\n-\t\t\tbroadcast = getDataStore().get(id);\n-\t\t} catch (Exception e) {\n-\t\t\tlogger.error(ExceptionUtils.getStackTrace(e));\n-\t\t}\n-\t\treturn broadcast;\n-\t}\n-\n \t/**\n \t * Get broadcast object\n \t * \n@@ -885,128 +722,12 @@ public class BroadcastRestService extends RestServiceBase{\n \t@POST\n \t@Path(\"/importLiveStreamsToStalker\")\n \t@Produces(MediaType.APPLICATION_JSON)\n+\t@Override\n \tpublic Result importLiveStreams2Stalker() \n \t{\n-\n-\t\tString stalkerDBServer = getAppSettings().getStalkerDBServer();\n-\t\tString stalkerDBUsername = getAppSettings().getStalkerDBUsername();\n-\t\tString stalkerDBPassword = getAppSettings().getStalkerDBPassword();\n-\n-\t\tboolean result = false;\n-\t\tString message = \"\";\n-\t\tint errorId = -1;\n-\t\tif (stalkerDBServer != null && stalkerDBServer.length() > 0\n-\t\t\t\t&& stalkerDBUsername != null && stalkerDBUsername.length() > 0\n-\t\t\t\t&& stalkerDBPassword != null && stalkerDBPassword.length() > 0) \n-\t\t{\n-\n-\n-\t\t\tlong broadcastCount = getDataStore().getBroadcastCount();\n-\t\t\tint pageCount = (int) broadcastCount/DataStore.MAX_ITEM_IN_ONE_LIST\n-\t\t\t\t\t+ ((broadcastCount % DataStore.MAX_ITEM_IN_ONE_LIST != 0) ? 1 : 0);\n-\n-\t\t\tList<Broadcast> broadcastList = new ArrayList<>();\n-\t\t\tfor (int i = 0; i < pageCount; i++) {\n-\t\t\t\tbroadcastList.addAll(getDataStore().getBroadcastList(i*DataStore.MAX_ITEM_IN_ONE_LIST, DataStore.MAX_ITEM_IN_ONE_LIST));\n-\t\t\t}\n-\n-\t\t\tStringBuilder insertQueryString = new StringBuilder();\n-\n-\t\t\tinsertQueryString.append(\"DELETE FROM stalker_db.ch_links;\");\n-\t\t\tinsertQueryString.append(\"DELETE FROM stalker_db.itv;\");\n-\n-\t\t\tString fqdn = getAppSettings().getServerName();\n-\t\t\tif (fqdn == null || fqdn.length() == 0) {\n-\t\t\t\tfqdn = getHostAddress();\n-\t\t\t}\n-\n-\t\t\tint number = 1;\n-\t\t\tfor (Broadcast broadcast : broadcastList) {\n-\t\t\t\tString cmd = \"ffmpeg http://\"+ fqdn + \":5080/\" \n-\t\t\t\t\t\t+ getScope().getName() + \"/streams/\"+broadcast.getStreamId()+\".m3u8\";\n-\n-\t\t\t\tinsertQueryString.append(\"INSERT INTO stalker_db.itv(name, number, tv_genre_id, base_ch, cmd, languages)\"\n-\t\t\t\t\t\t+ \" VALUES ('\"+broadcast.getName()+\"' , \"+ number +\", 2, 1, '\"+ cmd +\"', '');\");\n-\n-\t\t\t\tinsertQueryString.append(\"SET @last_id=LAST_INSERT_ID();\"\n-\t\t\t\t\t\t+ \"INSERT INTO stalker_db.ch_links(ch_id, url)\"\n-\t\t\t\t\t\t+ \" VALUES(@last_id, '\"+ cmd +\"');\");\n-\t\t\t\tnumber++;\n-\t\t\t}\n-\t\t\tresult = runStalkerImportQuery(insertQueryString.toString(), stalkerDBServer, stalkerDBUsername, stalkerDBPassword);\n-\t\t}\n-\t\telse {\n-\t\t\tmessage = \"Portal DB info is missing\";\n-\t\t\terrorId = 404;\n-\t\t}\n-\n-\n-\t\treturn new Result(result, message, errorId);\n-\t}\n-\n-\tprivate boolean runStalkerImportQuery(String query, String stalkerDBServer, String stalkerDBUsername, String stalkerDBPassword) {\n-\n-\t\tboolean result = false;\n-\t\ttry {\n-\n-\t\t\tProcess p = getProcess(query, stalkerDBServer, stalkerDBUsername, stalkerDBPassword);\n-\n-\t\t\tif (p != null) {\n-\t\t\t\tInputStream is = p.getInputStream();\n-\t\t\t\tif (is != null) {\n-\t\t\t\t\tbyte[] data = new byte[1024];\n-\t\t\t\t\tint length;\n-\t\t\t\t\twhile ((length = is.read(data, 0, data.length)) != -1) {\n-\t\t\t\t\t\tif (logger.isInfoEnabled()) {\n-\t\t\t\t\t\t\tlogger.info(new String(data, 0, length));\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\n-\t\t\t\tint exitWith = p.waitFor();\n-\n-\t\t\t\tif (exitWith == 0) {\n-\t\t\t\t\tresult = true;\n-\t\t\t\t}\t\n-\t\t\t}\n-\n-\t\t} catch (IOException e) {\n-\t\t\tlogger.error(ExceptionUtils.getStackTrace(e));\n-\t\t} catch (InterruptedException e) {\n-\t\t\tlogger.error(ExceptionUtils.getStackTrace(e));\n-\t\t\tThread.currentThread().interrupt();\n-\t\t} \n-\t\treturn result;\n+\t\treturn super.importLiveStreams2Stalker();\n \t}\n \n-\tprivate Process getProcess(String query, String stalkerDBServer, String stalkerDBUsername, String stalkerDBPassword) {\n-\t\tProcess process = null;\n-\t\tString mysqlClientPath = getAppSettings().getMySqlClientPath();\n-\t\tif (processBuilderFactory != null) {\n-\n-\t\t\tprocess = processBuilderFactory.make(mysqlClientPath, \n-\t\t\t\t\t\"-h\", stalkerDBServer,\n-\t\t\t\t\t\"-u\", stalkerDBUsername,\n-\t\t\t\t\t\"-p\"+stalkerDBPassword,\n-\t\t\t\t\t\"-e\",   query);\n-\t\t}\n-\t\telse {\n-\t\t\ttry {\n-\t\t\t\tprocess = new ProcessBuilder(\n-\t\t\t\t\t\tmysqlClientPath, \n-\t\t\t\t\t\t\"-h\", stalkerDBServer,\n-\t\t\t\t\t\t\"-u\", stalkerDBUsername,\n-\t\t\t\t\t\t\"-p\"+stalkerDBPassword,\n-\t\t\t\t\t\t\"-e\",   query  \n-\t\t\t\t\t\t).redirectErrorStream(true).start();\n-\t\t\t} catch (IOException e) {\n-\t\t\t\tlogger.error(ExceptionUtils.getStackTrace(e));\n-\t\t\t}\n-\t\t}\n-\n-\t\treturn process;\n-\n-\t}\n \n \n \t/**\n@@ -1014,82 +735,14 @@ public class BroadcastRestService extends RestServiceBase{\n \t * \n \t * @return {@link io.antmedia.rest.BroadcastRestService.Result}\n \t */\n-\n \t@ApiOperation(value = \"Import VoDs to Stalker Portal\", notes = \"\", response = Result.class)\n \t@POST\n \t@Path(\"/importVoDsToStalker\")\n \t@Produces(MediaType.APPLICATION_JSON)\n+\t@Override\n \tpublic Result importVoDsToStalker() \n \t{\n-\n-\t\tString stalkerDBServer = getAppSettings().getStalkerDBServer();\n-\t\tString stalkerDBUsername = getAppSettings().getStalkerDBUsername();\n-\t\tString stalkerDBPassword = getAppSettings().getStalkerDBPassword();\n-\n-\t\tboolean result = false;\n-\t\tString message = \"\";\n-\t\tint errorId = -1;\n-\t\tif (stalkerDBServer != null && stalkerDBUsername != null && stalkerDBPassword != null) {\n-\n-\t\t\tString vodFolderPath = getAppSettings().getVodFolder();\n-\t\t\tif (vodFolderPath != null && !vodFolderPath.isEmpty()) {\n-\n-\t\t\t\tlong totalVodNumber = getDataStore().getTotalVodNumber();\n-\t\t\t\tint pageCount = (int) totalVodNumber/DataStore.MAX_ITEM_IN_ONE_LIST \n-\t\t\t\t\t\t+ ((totalVodNumber % DataStore.MAX_ITEM_IN_ONE_LIST != 0) ? 1 : 0);\n-\n-\t\t\t\tList<VoD> vodList = new ArrayList<>();\n-\t\t\t\tfor (int i = 0; i < pageCount; i++) {\n-\t\t\t\t\tvodList.addAll(getDataStore().getVodList(i*DataStore.MAX_ITEM_IN_ONE_LIST, DataStore.MAX_ITEM_IN_ONE_LIST));\n-\t\t\t\t}\n-\n-\n-\t\t\t\tString fqdn = getAppSettings().getServerName();\n-\t\t\t\tif (fqdn == null || fqdn.length() == 0) {\n-\t\t\t\t\tfqdn = getHostAddress();\n-\t\t\t\t}\n-\n-\t\t\t\tStringBuilder insertQueryString = new StringBuilder();\n-\n-\t\t\t\t//delete all videos in stalker to import new ones\n-\t\t\t\tinsertQueryString.append(\"DELETE FROM stalker_db.video_series_files;\");\n-\t\t\t\tinsertQueryString.append(\"DELETE FROM stalker_db.video;\");\n-\n-\t\t\t\tfor (VoD vod : vodList) {\n-\t\t\t\t\tif (vod.getType().equals(VoD.USER_VOD)) {\n-\t\t\t\t\t\tinsertQueryString.append(\"INSERT INTO stalker_db.video(name, o_name, protocol, category_id, cat_genre_id_1, status, cost, path, accessed) \"\n-\t\t\t\t\t\t\t\t+ \"values('\"+ vod.getVodName() + \"', '\"+vod.getVodName()+\"', '', 1, 1, 1, 0, '\"+vod.getVodName()+\"', 1);\");\n-\n-\t\t\t\t\t\tFile vodFolder = new File(vodFolderPath);\n-\t\t\t\t\t\tint lastIndexOf = vod.getFilePath().lastIndexOf(vodFolder.getName());\n-\t\t\t\t\t\tString filePath = vod.getFilePath().substring(lastIndexOf);\n-\t\t\t\t\t\tString cmd = \"ffmpeg http://\"+ fqdn + \":5080/\" \n-\t\t\t\t\t\t\t\t+ getScope().getName() + \"/streams/\" + filePath;\n-\n-\t\t\t\t\t\tinsertQueryString.append(\"SET @last_id=LAST_INSERT_ID();\");\n-\n-\t\t\t\t\t\tinsertQueryString.append(\"INSERT INTO stalker_db.video_series_files\"\n-\t\t\t\t\t\t\t\t+ \"(video_id, file_type, protocol, url, languages, quality, date_add, date_modify, status, accessed)\"\n-\t\t\t\t\t\t\t\t+ \"VALUES(@last_id, 'video', 'custom', '\"+cmd+\"', 'a:1:{i:0;s:2:\\\"en\\\";}', 5, NOW(), NOW(), 1, 1);\");\n-\n-\t\t\t\t\t}\n-\n-\t\t\t\t}\n-\n-\t\t\t\tresult = runStalkerImportQuery(insertQueryString.toString(), stalkerDBServer, stalkerDBUsername, stalkerDBPassword );\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\tmessage = \"No VoD folder specified\";\n-\t\t\t\terrorId = 500;\n-\t\t\t}\n-\t\t}\n-\t\telse {\n-\t\t\tmessage = \"Portal DB info is missing\";\n-\t\t\terrorId = 404;\n-\t\t}\n-\n-\t\treturn new Result(result, message, errorId);\n-\n+\t\treturn super.importVoDsToStalker();\n \t}\n \n \t/**\n@@ -1106,7 +759,6 @@ public class BroadcastRestService extends RestServiceBase{\n \t * @return JSON list of VoD objects\n \t * \n \t */\n-\n \t@ApiOperation(value = \" Get the VoD list from database\", notes = \"\", responseContainer = \"List\",response = VoD.class)\n \t@GET\n \t@Path(\"/broadcast/getVodList/{offset}/{size}\")\n@@ -1247,7 +899,6 @@ public class BroadcastRestService extends RestServiceBase{\n \t * @param token - sent token for validation\n \t * @return validated token {@link io.antmedia.datastore.db.types.Token}, either null or token. Null means not validated\n \t */\n-\n \t@ApiOperation(value = \"Perform validation of token for requested stream\", notes = \"\", response = Token.class)\n \t@POST\n \t@Consumes(MediaType.APPLICATION_JSON)\n@@ -1430,14 +1081,6 @@ public class BroadcastRestService extends RestServiceBase{\n \t\treturn list;\n \t}\n \n-\tpublic IWebRTCAdaptor getWebRTCAdaptor() {\n-\t\tIWebRTCAdaptor adaptor = null;\n-\t\tApplicationContext appContext = getAppContext();\n-\t\tif (appContext != null && appContext.containsBean(IWebRTCAdaptor.BEAN_NAME)) {\n-\t\t\tadaptor = (IWebRTCAdaptor) appContext.getBean(IWebRTCAdaptor.BEAN_NAME);\n-\t\t}\n-\t\treturn adaptor;\n-\t}\n \n \t/**\n \t * Get filtered broadcast list\n@@ -1453,7 +1096,7 @@ public class BroadcastRestService extends RestServiceBase{\n \t@Produces(MediaType.APPLICATION_JSON)\n \tpublic List<Broadcast> filterBroadcastList(@ApiParam(value = \"starting point of the list\", required = true) @PathParam(\"offset\") int offset,\n \t\t\t@ApiParam(value = \"size of the return list (max:50 )\", required = true) @PathParam(\"size\") int size,\n-\t\t\t@ApiParam(value = \"type of the stream\", required = true) @PathParam(\"type\") String type) {\n+\t\t\t@ApiParam(value = \"type of the stream possible values are \\\"liveStream\\\", \\\"ipCamera\\\", \\\"streamSource\\\", \\\"VoD\\\"\", required = true) @PathParam(\"type\") String type) {\n \t\treturn getDataStore().filterBroadcastList(offset, size, type);\n \t}\n \n@@ -1467,7 +1110,6 @@ public class BroadcastRestService extends RestServiceBase{\n \t * @param type -type of the VoD file\n \t * @return {@link io.antmedia.rest.BroadcastRestService.Result}\n \t */\n-\n \t@ApiOperation(value = \"Delete specific VoD File. Deprecated -> Use deleteVoD method (/broadcast/deleteVoD/{id})\", notes = \"\", response = Result.class)\n \t@POST\n \t@Consumes({ MediaType.APPLICATION_JSON })\n@@ -1635,26 +1277,9 @@ public class BroadcastRestService extends RestServiceBase{\n \t@Consumes({ MediaType.APPLICATION_JSON })\n \t@Path(\"/broadcast/delete/{id}\")\n \t@Produces(MediaType.APPLICATION_JSON)\n+\t@Override\n \tpublic Result deleteBroadcast(@ApiParam(value = \" Id of the braodcast\", required = true) @PathParam(\"id\") String id) {\n-\t\tResult result = new Result (false);\n-\t\tboolean stopResult = false;\n-\n-\t\tif (id != null) {\n-\t\t\tBroadcast broacast = getDataStore().get(id);\n-\t\t\tstopResult = stopBroadcastInternal(broacast);\n-\n-\t\t\tresult.setSuccess(getDataStore().delete(id));\n-\n-\t\t\tif(result.isSuccess() && stopResult) {\n-\t\t\t\tresult.setMessage(\"brodcast is deleted and stopped successfully\");\n-\t\t\t\tlogger.info(\"brodcast {} is deleted and stopped successfully\", id);\n-\t\t\t}\n-\t\t\telse if(result.isSuccess() && !stopResult) {\n-\t\t\t\tresult.setMessage(\"brodcast is deleted but could not stopped \");\n-\t\t\t\tlogger.info(\"brodcast {} is deleted but could not stopped\", id);\n-\t\t\t}\n-\t\t}\n-\t\treturn result;\n+\t\treturn super.deleteBroadcast(id);\n \t}\n \n \t/**\n@@ -1947,29 +1572,6 @@ public class BroadcastRestService extends RestServiceBase{\n \t\treturn getApplication().getVideoServiceEndpointsHavingError();\n \t}\n \n-\tprivate AppSettings getAppSettings() {\n-\t\tif (appSettings == null) {\n-\t\t\tApplicationContext appContext = getAppContext();\n-\t\t\tif (appContext != null) {\n-\t\t\t\tappSettings = (AppSettings) appContext.getBean(AppSettings.BEAN_NAME);\n-\t\t\t}\n-\t\t}\n-\t\treturn appSettings;\n-\t}\n-\n-\tpublic void setAppSettings(AppSettings appSettings) {\n-\t\tthis.appSettings = appSettings;\n-\t}\n-\n-\tpublic ProcessBuilderFactory getProcessBuilderFactory() {\n-\t\treturn processBuilderFactory;\n-\t}\n-\n-\n-\tpublic void setProcessBuilderFactory(ProcessBuilderFactory processBuilderFactory) {\n-\t\tthis.processBuilderFactory = processBuilderFactory;\n-\t}\n-\n     /**\n      * Set stream specific Mp4 Muxing setting, this setting overrides general Mp4 Muxing Setting\n      *\n@@ -1977,7 +1579,6 @@ public class BroadcastRestService extends RestServiceBase{\n      * @param enableMp4 - the integer value for Mp4 Muxing, 1 = Enable Muxing, -1 = Disable Muxing, 0 = No Settings\n      * @return {@link io.antmedia.rest.BroadcastRestService.Result}\n      */\n-\n     @ApiOperation(value = \"Set stream specific Mp4 Muxing setting, this setting overrides general Mp4 Muxing Setting\", notes = \"\", response = Result.class)\n     @POST\n     @Consumes(MediaType.APPLICATION_JSON)\ndiff --git a/src/main/java/io/antmedia/rest/BroadcastRestServiceV2.java b/src/main/java/io/antmedia/rest/BroadcastRestServiceV2.java\nnew file mode 100644\nindex 000000000..ca3437205\n--- /dev/null\n+++ b/src/main/java/io/antmedia/rest/BroadcastRestServiceV2.java\n@@ -0,0 +1,1040 @@\n+package io.antmedia.rest;\n+\n+import java.net.InetAddress;\n+import java.net.NetworkInterface;\n+import java.net.SocketException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Enumeration;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.regex.Pattern;\n+\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.exception.ExceptionUtils;\n+import org.jetbrains.annotations.Nullable;\n+import org.red5.server.api.scope.IBroadcastScope;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.stereotype.Component;\n+\n+import io.antmedia.AntMediaApplicationAdapter;\n+import io.antmedia.IResourceMonitor;\n+import io.antmedia.datastore.db.types.Broadcast;\n+import io.antmedia.datastore.db.types.SocialEndpointChannel;\n+import io.antmedia.datastore.db.types.SocialEndpointCredentials;\n+import io.antmedia.datastore.db.types.TensorFlowObject;\n+import io.antmedia.datastore.db.types.Token;\n+import io.antmedia.ipcamera.OnvifCamera;\n+import io.antmedia.ipcamera.onvifdiscovery.OnvifDiscovery;\n+import io.antmedia.muxer.Mp4Muxer;\n+import io.antmedia.muxer.MuxAdaptor;\n+import io.antmedia.muxer.Muxer;\n+import io.antmedia.rest.BroadcastRestService.BroadcastStatistics;\n+import io.antmedia.rest.model.Interaction;\n+import io.antmedia.rest.model.Result;\n+import io.antmedia.security.ITokenService;\n+import io.antmedia.social.LiveComment;\n+import io.antmedia.social.endpoint.PeriscopeEndpoint;\n+import io.antmedia.social.endpoint.VideoServiceEndpoint;\n+import io.antmedia.social.endpoint.VideoServiceEndpoint.DeviceAuthParameters;\n+import io.antmedia.streamsource.StreamFetcher;\n+import io.antmedia.webrtc.api.IWebRTCAdaptor;\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import io.swagger.annotations.ApiResponse;\n+import io.swagger.annotations.ApiResponses;\n+import io.swagger.annotations.Contact;\n+import io.swagger.annotations.ExternalDocs;\n+import io.swagger.annotations.Info;\n+import io.swagger.annotations.License;\n+import io.swagger.annotations.SwaggerDefinition;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.Response.Status;\n+\n+@Api(value = \"BroadcastRestService\")\n+@SwaggerDefinition(\n+\t\tinfo = @Info(\n+\t\t\t\tdescription = \"Ant Media Server REST API Reference\",\n+\t\t\t\tversion = \"v2.0\",\n+\t\t\t\ttitle = \"Ant Media Server REST API Reference\",\n+\t\t\t\tcontact = @Contact(name = \"Ant Media Info\", email = \"contact@antmedia.io\", url = \"https://antmedia.io\"),\n+\t\t\t\tlicense = @License(name = \"Apache 2.0\", url = \"http://www.apache.org\")),\n+\t\tconsumes = {\"application/json\"},\n+\t\tproduces = {\"application/json\"},\n+\t\tschemes = {SwaggerDefinition.Scheme.HTTP, SwaggerDefinition.Scheme.HTTPS},\n+\t\texternalDocs = @ExternalDocs(value = \"External Docs\", url = \"https://antmedia.io\"),\n+\t\tbasePath = \"/v2\"\n+\t\t)\n+@Component\n+@Path(\"/v2/broadcasts\")\n+public class BroadcastRestServiceV2 extends RestServiceBase{\n+\n+\t@ApiModel(value=\"SimpleStat\", description=\"Simple generic statistics class to return single values\")\n+\tpublic static class SimpleStat {\n+\t\t@ApiModelProperty(value = \"the stat value\")\n+\t\tpublic long number;\n+\n+\t\tpublic SimpleStat(long number) {\n+\t\t\tthis.number = number;\n+\t\t}\n+\n+\t}\n+\n+\t@ApiOperation(value = \"Creates a broadcast(stream) and returns the full broadcast object with rtmp address and \"\n+\t\t\t+ \"other information.\")\n+\t@ApiResponses(value = { @ApiResponse(code = 400, message = \"If stream id is already used in the data store, it returns error\", response=Result.class),\n+\t\t\t@ApiResponse(code = 200, message = \"Returns the created stream\", response = Broadcast.class)})\n+\t@POST\n+\t@Consumes({ MediaType.APPLICATION_JSON })\n+\t@Path(\"/\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Response createBroadcast(@ApiParam(value = \"Broadcast object only related information should be set, it may be null as well.\", required = true) Broadcast broadcast) {\n+\t\tif (broadcast != null && broadcast.getStreamId() != null && !broadcast.getStreamId().isEmpty()) {\n+\t\t\t// make sure stream id is not set on rest service\n+\t\t\tBroadcast broadcastTmp = getDataStore().get(broadcast.getStreamId());\n+\t\t\tif (broadcastTmp != null) {\n+\n+\t\t\t\treturn Response.status(Status.BAD_REQUEST).entity(new Result(false, \"Stream id is already being used. \")).build();\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn Response.status(Status.OK).entity(createBroadcastWithStreamID(broadcast)).build();\n+\t}\n+\n+\t@ApiOperation(value = \"Delete broadcast from data store and stop if it's broadcasting\", response = Result.class)\n+\t@ApiResponses(value = { @ApiResponse(code = 200, message = \"If it's deleted, success is true. If it's not deleted, success if false.\") })\n+\t@DELETE\n+\t@Consumes({ MediaType.APPLICATION_JSON })\n+\t@Path(\"/{id}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\t@Override\n+\tpublic Result deleteBroadcast(@ApiParam(value = \" Id of the braodcast\", required = true) @PathParam(\"id\") String id) {\n+\t\treturn super.deleteBroadcast(id);\t\t\n+\t}\n+\n+\n+\t@ApiOperation(value = \"Get broadcast object\")\n+\t@ApiResponses(value = { @ApiResponse(code = 200, message = \"Return the broadcast object\"),\n+\t\t\t@ApiResponse(code = 404, message = \"Broadcast object not found\")})\n+\t@GET\n+\t@Path(\"/{id}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Response getBroadcast(@ApiParam(value = \"id of the broadcast\", required = true) @PathParam(\"id\") String id) {\n+\t\tBroadcast broadcast = null;\n+\t\tif (id != null) {\n+\t\t\tbroadcast = lookupBroadcast(id);\n+\t\t}\n+\t\tif (broadcast == null) {\n+\t\t\treturn Response.status(Status.OK).entity(broadcast).build();\n+\t\t}\n+\t\telse {\n+\t\t\treturn Response.status(Status.NOT_FOUND).build();\n+\t\t}\n+\t}\n+\n+\t@ApiOperation(value = \"Gets the broadcast list from database\", notes = \"\",responseContainer = \"List\", response = Broadcast.class)\n+\t@GET\n+\t@Path(\"/list/{offset}/{size}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic List<Broadcast> getBroadcastList(@ApiParam(value = \"This is the offset of the list, it is useful for pagination\", required = true) @PathParam(\"offset\") int offset,\n+\t\t\t@ApiParam(value = \"Number of items that will be fetched. If there is not enough item in the datastore, returned list size may less then this value\", required = true) @PathParam(\"size\") int size) {\n+\t\treturn getDataStore().getBroadcastList(offset, size);\n+\t}\n+\n+\n+\t@ApiOperation(value = \"Updates the name and description of the broadcast. It also updates the social endpoints\", notes = \"\", response = Result.class)\n+\t@ApiResponses(value = { @ApiResponse(code = 200, message = \"If it's updated, success field is true. If it's not updated, success  field if false.\")})\n+\t@PUT\n+\t@Consumes(MediaType.APPLICATION_JSON)\n+\t@Path(\"/{id}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\t@Override\n+\tpublic Result updateBroadcast(@ApiParam(value=\"Broadcast id\", required = true) @PathParam(\"id\") String id, \n+\t\t\t@ApiParam(value=\"Broadcast name\", required = false) @QueryParam(\"name\") String name, \n+\t\t\t@ApiParam(value=\"Broadcast description\", required = false) @QueryParam(\"description\") String description,\n+\t\t\t@ApiParam(value = \"Comma separated social network IDs, they must in comma separated and IDs must match with the defined IDs\", required = true) @QueryParam(\"socialNetworks\") String socialNetworksToPublish) {\n+\t\tResult result = new Result(false);\n+\t\tif (id != null) {\n+\t\t\tBroadcast broadcast = getDataStore().get(id);\n+\t\t\tif (broadcast != null) {\n+\t\t\t\tif (name == null) {\n+\t\t\t\t\tname = broadcast.getName();\n+\t\t\t\t}\n+\t\t\t\tif (description == null) {\n+\t\t\t\t\tdescription = broadcast.getDescription();\n+\t\t\t\t}\n+\t\t\t\tresult = super.updateBroadcast(id, name, description, socialNetworksToPublish);\n+\t\t\t}\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\t@ApiOperation(value = \"Revoke authorization from a social network account that is authorized before\", notes = \"\", response = Result.class)\n+\t@DELETE\n+\t@Consumes(MediaType.APPLICATION_JSON)\n+\t@Path(\"/social-networks/{endpointId}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\t@Override\n+\tpublic Result revokeSocialNetwork(@ApiParam(value = \"Endpoint id\", required = true) @PathParam(\"endpointId\") String endpointId) {\n+\t\treturn super.revokeSocialNetwork(endpointId);\n+\t}\n+\n+\t@ApiOperation(value = \"Add social endpoint to a stream. \", notes = \"\", response = Result.class)\n+\t@POST\n+\t@Consumes(MediaType.APPLICATION_JSON)\n+\t@Path(\"/{id}/social-endpoints/{endpointServiceId}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Result addSocialEndpointJSON(@ApiParam(value = \"Stream id\", required = true) @PathParam(\"id\") String id,\n+\t\t\t@ApiParam(value = \"the id of the service in order to have successfull operation. Social network must be authorized in advance\", required = true) @PathParam(\"endpointServiceId\") String endpointServiceId) {\n+\t\treturn addSocialEndpoint(id, endpointServiceId);\n+\t}\n+\n+\t@ApiOperation(value = \"Add a third pary rtmp end point to the stream. When broadcast is started,it will send rtmp stream to this rtmp url as well. \", notes = \"\", response = Result.class)\n+\t@POST\n+\t@Consumes(MediaType.APPLICATION_JSON)\n+\t@Path(\"/{id}/endpoint\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\t@Override\n+\tpublic Result addEndpoint(@ApiParam(value = \"Broadcast id\", required = true) @PathParam(\"id\") String id,\n+\t\t\t@ApiParam(value = \"RTMP url of the endpoint that stream will be republished\", required = true) @QueryParam(\"rtmpUrl\") String rtmpUrl) {\n+\t\treturn super.addEndpoint(id, rtmpUrl);\n+\t}\n+\n+\t@ApiOperation(value = \"Returns live comments from a specific endpoint like Facebook, Youtube, PSCP, etc. It works If interactivity is collected which can be enabled/disabled by properties file.\", notes = \"Notes here\", responseContainer = \"List\", response = LiveComment.class)\n+\t@GET\n+\t@Path(\"/{id}/social-endpoints/{endpointServiceId}/live-comments/{offset}/{batch}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic List<LiveComment> getLiveCommentsFromEndpoint(@ApiParam(value = \"This is the id of the endpoint service\", required = true)\n+\t@PathParam(\"endpointServiceId\") String endpointServiceId,\n+\t@ApiParam(value = \"Broadcast id\", required = true)\n+\t@PathParam(\"id\") String streamId,\n+\t@ApiParam(value = \"this is the start offset where to start getting comment\", required = true)\n+\t@PathParam(\"offset\") int offset,\n+\t@ApiParam(value = \"number of items to be returned\", required = true)\n+\t@PathParam(\"batch\") int batch) \n+\t{\n+\n+\t\tVideoServiceEndpoint videoServiceEndPoint = getApplication().getVideoServiceEndPoint(endpointServiceId);\n+\t\tList<LiveComment> liveComment = null;\n+\t\tif (videoServiceEndPoint != null) {\n+\t\t\tliveComment = videoServiceEndPoint.getComments(streamId, offset, batch);\n+\t\t}\n+\t\treturn liveComment;\n+\t}\n+\n+\n+\t@ApiOperation(value = \"Return the number of live views in specified video service endpoint. It works If interactivity is collected which can be enabled/disabled by properties file.\", notes = \"\", response = Result.class)\n+\t@GET\n+\t@Path(\"/{id}/social-endpoints/{endpointServiceId}/live-views-count\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Result getViewerCountFromEndpoint(@ApiParam(value = \"the id of the endpoint\", required = true)\n+\t@PathParam(\"endpointServiceId\") String endpointServiceId,\n+\t@ApiParam(value = \"the id of the stream\", required = true)\n+\t@PathParam(\"id\") String streamId) \n+\t{\n+\t\tVideoServiceEndpoint videoServiceEndPoint = getApplication().getVideoServiceEndPoint(endpointServiceId);\n+\t\tlong liveViews = 0;\n+\t\tif (videoServiceEndPoint != null) {\n+\t\t\tliveViews = videoServiceEndPoint.getLiveViews(streamId);\n+\t\t}\n+\t\treturn new Result(true, String.valueOf(liveViews));\n+\t}\n+\n+\n+\t@ApiOperation(value = \"Returns the number of live comment count from a specific video service endpoint. It works If interactivity is collected which can be enabled/disabled by properties file.\", notes = \"\", response = Result.class)\n+\t@GET\n+\t@Path(\"/{id}/social-endpoints/{endpointServiceId}/live-comments-count\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Result getLiveCommentsCount(@ApiParam(value = \" the id of the endpoint\", required = true) @PathParam(\"endpointServiceId\") String endpointServiceId,\n+\t\t\t@ApiParam(value = \"the id of the stream\", required = true)  @PathParam(\"streamId\") String streamId) {\n+\t\tVideoServiceEndpoint videoServiceEndPoint = getApplication().getVideoServiceEndPoint(endpointServiceId);\n+\t\tint commentCount = 0;\n+\t\tif (videoServiceEndPoint != null) {\n+\t\t\tcommentCount = videoServiceEndPoint.getTotalCommentsCount(streamId);\n+\t\t}\n+\t\treturn new Result(true, String.valueOf(commentCount));\n+\t}\n+\n+\n+\t@ApiOperation(value = \"Return the interaction from a specific endpoint like Facebook, Youtube, PSCP, etc. It works If interactivity is collected which can be enabled/disabled by properties file.\", notes = \"\", response = Interaction.class)\n+\t@GET\n+\t@Path(\"/{id}/social-endpoints/{endpointServiceId}/interaction\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Interaction getInteractionFromEndpoint(@ApiParam(value = \"the id of the endpoint\", required = true) @PathParam(\"endpointServiceId\") String endpointServiceId,\n+\t\t\t@ApiParam(value = \"the id of the stream\", required = true) @PathParam(\"id\") String streamId) {\n+\t\tInteraction interaction = null;\n+\t\tVideoServiceEndpoint videoServiceEndPoint = getApplication().getVideoServiceEndPoint(endpointServiceId);\n+\t\tif (videoServiceEndPoint != null) {\n+\t\t\tinteraction = videoServiceEndPoint.getInteraction(streamId);\n+\t\t}\n+\t\treturn interaction;\n+\t}\n+\n+\n+\n+\t@ApiOperation(value = \"Get detected objects from the stream based on offset and size\", notes = \"\",responseContainer = \"List\", response = TensorFlowObject.class)\n+\t@GET\n+\t@Path(\"/{id}/detections/{offset}/{size}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic List<TensorFlowObject> getDetectionList(@ApiParam(value = \"the id of the stream\", required = true) @PathParam(\"id\") String id,\n+\t\t\t@ApiParam(value = \"starting point of the list\", required = true) @PathParam(\"offset\") int offset,\n+\t\t\t@ApiParam(value = \"total size of the return list\", required = true) @PathParam(\"size\") int size) {\n+\t\tList<TensorFlowObject> list = null;\n+\n+\t\tif (id != null) {\n+\t\t\tlist = getDataStore().getDetectionList(id, offset, size);\t\n+\t\t}\n+\n+\t\tif (list == null) {\n+\t\t\t//do not return null in rest service\n+\t\t\tlist = new ArrayList<>();\n+\t\t}\n+\t\treturn list;\n+\t}\n+\n+\t@ApiOperation(value = \"Get total number of detected objects\", notes = \"\", response = Long.class)\n+\t@GET\n+\t@Path(\"/{id}/detections/count\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic long getObjectDetectedTotal(@ApiParam(value = \"id of the stream\", required = true) @PathParam(\"id\") String id){\n+\t\treturn getDataStore().getObjectDetectedTotal(id);\n+\t}\n+\n+\t@ApiOperation(value = \"Import Live Streams to Stalker Portal\", notes = \"\", response = Result.class)\n+\t@POST\n+\t@Path(\"/import-to-stalker\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\t@Override\n+\tpublic Result importLiveStreams2Stalker() \n+\t{\n+\t\treturn super.importLiveStreams2Stalker();\n+\t}\n+\n+\n+\t@ApiOperation(value = \"Get the total number of broadcasts\", notes = \"\", response = SimpleStat.class)\n+\t@GET\n+\t@Path(\"/count\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic SimpleStat getTotalBroadcastNumber() {\n+\t\treturn new SimpleStat(getDataStore().getTotalBroadcastNumber());\n+\t}\n+\n+\t@ApiOperation(value = \"Return the statistics of the  total live streams, total RTMP watchers, total HLS and total WebRTC watchers\", notes = \"\", response = SimpleStat.class)\n+\t@GET\n+\t@Path(\"/active-live-stream-count\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic SimpleStat getAppLiveStatistics() {\n+\t\treturn new SimpleStat(getDataStore().getActiveBroadcastCount());\n+\t}\n+\n+\n+\t@ApiOperation(value = \"Generates random one-time token for specified stream\")\n+\t@ApiResponses(value = { @ApiResponse(code = 200, message = \"Returns token\", response=Token.class), \n+\t\t\t@ApiResponse(code = 400, message = \"When there is an error in creating token\", response=Result.class)})\n+\t@GET\n+\t@Path(\"/{id}/token\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Response getToken (@ApiParam(value = \"the id of the stream\", required = true) @PathParam(\"id\")String streamId,\n+\t\t\t@ApiParam(value = \"the expire date of the token\", required = true) @QueryParam(\"expireDate\") long expireDate,\n+\t\t\t@ApiParam(value = \"type of the token. It may be \\\"play\\\" or \\\"publish\\\" \", required = true) @QueryParam(\"type\") String type) \n+\t{\n+\t\tToken token = null;\n+\t\tString message = \"Define stream Id and Expire Date (unix time)\";\n+\t\tif(streamId != null && expireDate > 0) {\n+\n+\t\t\tApplicationContext appContext = getAppContext();\n+\n+\t\t\tif(appContext != null && appContext.containsBean(ITokenService.BeanName.TOKEN_SERVICE.toString())) \n+\t\t\t{\n+\t\t\t\tITokenService tokenService = (ITokenService)appContext.getBean(ITokenService.BeanName.TOKEN_SERVICE.toString());\n+\t\t\t\ttoken = tokenService.createToken(streamId, expireDate, type);\n+\t\t\t\tif(token != null) \n+\t\t\t\t{\n+\t\t\t\t\tif (getDataStore().saveToken(token)) {\n+\t\t\t\t\t\t//returns token only everything is OK\n+\t\t\t\t\t\treturn Response.status(Status.OK).entity(token).build();\n+\t\t\t\t\t}\n+\t\t\t\t\telse {\n+\t\t\t\t\t\tmessage = \"Cannot save token to the datastore\";\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\tmessage = \"Cannot create token. It can be a mock token service\";\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tmessage = \"No token service in this app\";\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn Response.status(Status.BAD_REQUEST).entity(new Result(false, message)).build();\n+\t}\n+\n+\t@ApiOperation(value = \"Perform validation of token for requested stream\", notes = \"\", response = Token.class)\n+\t@POST\n+\t@Consumes(MediaType.APPLICATION_JSON)\n+\t@Path(\"/validate-token\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Token validateToken (@ApiParam(value = \"token to be validated\", required = true) Token token) {\n+\t\tToken validatedToken = null;\n+\n+\t\tif(token.getTokenId() != null) {\n+\n+\t\t\tvalidatedToken = getDataStore().validateToken(token);\n+\t\t}\n+\n+\t\treturn validatedToken;\n+\t}\n+\n+\n+\t@ApiOperation(value = \" Removes all tokens related with requested stream\", notes = \"\", response = Result.class)\n+\t@DELETE\n+\t@Consumes(MediaType.APPLICATION_JSON)\n+\t@Path(\"/{id}/tokens\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Result revokeTokens (@ApiParam(value = \"the id of the stream\", required = true) @PathParam(\"id\") String streamId) {\n+\t\tResult result = new Result(false);\n+\n+\t\tif(streamId != null) {\n+\n+\t\t\tresult.setSuccess(getDataStore().revokeTokens(streamId));\n+\t\t}\n+\n+\t\treturn result;\n+\t}\n+\n+\n+\t@ApiOperation(value = \"Get the all tokens of requested stream\", notes = \"\",responseContainer = \"List\", response = Token.class)\n+\t@GET\n+\t@Path(\"/{id}/tokens/list/{offset}/{size}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic List<Token> listTokens (@ApiParam(value = \"the id of the stream\", required = true) @PathParam(\"id\") String streamId,\n+\t\t\t@ApiParam(value = \"the starting point of the list\", required = true) @PathParam(\"offset\") int offset,\n+\t\t\t@ApiParam(value = \"size of the return list (max:50 )\", required = true) @PathParam(\"size\") int size) {\n+\t\tList<Token> tokens = null;\n+\t\tif(streamId != null) {\n+\t\t\ttokens = getDataStore().listAllTokens(streamId, offset, size);\n+\t\t}\n+\t\treturn tokens;\n+\t}\n+\n+\t@ApiOperation(value = \"Get the broadcast live statistics total RTMP watcher count, total HLS watcher count, total WebRTC watcher count\", notes = \"\", response = BroadcastStatistics.class)\n+\t@GET\n+\t@Path(\"/{id}/broadcast-statistics\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic BroadcastStatistics getBroadcastStatistics(@ApiParam(value = \"the id of the stream\", required = true) @PathParam(\"id\") String id) {\n+\n+\t\tint totalRTMPViewer = -1;\n+\t\tint totalWebRTCViewer = -1;\n+\t\tint totalHLSViewer = -1;\n+\t\tif (id != null) \n+\t\t{\n+\t\t\tIBroadcastScope broadcastScope = getScope().getBroadcastScope(id);\n+\n+\t\t\tif (broadcastScope != null)\t{\n+\t\t\t\ttotalRTMPViewer = broadcastScope.getConsumers().size();\n+\t\t\t}\n+\n+\t\t\tBroadcast broadcast = getDataStore().get(id);\n+\t\t\tif (broadcast != null) {\n+\t\t\t\ttotalHLSViewer = broadcast.getHlsViewerCount();\n+\t\t\t}\n+\n+\t\t\tIWebRTCAdaptor webRTCAdaptor = getWebRTCAdaptor();\n+\n+\t\t\tif (webRTCAdaptor != null) {\n+\t\t\t\ttotalWebRTCViewer = webRTCAdaptor.getNumberOfViewers(id);\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn new BroadcastStatistics(totalRTMPViewer, totalHLSViewer, totalWebRTCViewer);\n+\t}\n+\n+\t@ApiOperation(value = \"Returns filtered broadcast list\", notes = \"\",responseContainer = \"List\",response = Broadcast.class)\n+\t@GET\n+\t@Consumes(MediaType.APPLICATION_JSON)\n+\t@Path(\"/filter-list/{offset}/{size}/{type}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic List<Broadcast> filterBroadcastList(@ApiParam(value = \"starting point of the list\", required = true) @PathParam(\"offset\") int offset,\n+\t\t\t@ApiParam(value = \"size of the return list (max:50 )\", required = true) @PathParam(\"size\") int size,\n+\t\t\t@ApiParam(value = \"type of the stream. Possible values are \\\"liveStream\\\", \\\"ipCamera\\\", \\\"streamSource\\\", \\\"VoD\\\"\", required = true) @PathParam(\"type\") String type) {\n+\t\treturn getDataStore().filterBroadcastList(offset, size, type);\n+\t}\n+\n+\n+\t@ApiOperation(value = \"Get device parameters for social network authorization.\", notes = \"\", response = Object.class)\n+\t@POST\n+\t@Consumes(MediaType.APPLICATION_JSON)\n+\t@Path(\"/social-networks/{serviceName}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Object getDeviceAuthParameters(@ApiParam(value = \"Name of the service, like Facebook, Youtube, Periscope\", required = true) @PathParam(\"serviceName\") String serviceName) {\n+\t\tString message = null;\n+\t\tboolean missingClientIdAndSecret = false;\n+\n+\t\tint errorId = -1;\n+\t\tVideoServiceEndpoint videoServiceEndpoint = null;\n+\t\tif (serviceName.equals(AntMediaApplicationAdapter.FACEBOOK)) \n+\t\t{\n+\t\t\tString clientId = getAppSettings().getFacebookClientId();\n+\t\t\tString clientSecret = getAppSettings().getFacebookClientSecret();\n+\n+\t\t\tvideoServiceEndpoint = getApplication().getEndpointService(AntMediaApplicationAdapter.FACEBOOK_ENDPOINT_CLASS, null, clientId, clientSecret);\n+\n+\t\t\tif (isClientIdMissing(videoServiceEndpoint, clientId, clientSecret)) \n+\t\t\t{\n+\t\t\t\tmissingClientIdAndSecret = true;\n+\t\t\t}\n+\n+\t\t}\n+\t\telse if (serviceName.equals(AntMediaApplicationAdapter.YOUTUBE)) \n+\t\t{\n+\n+\t\t\tString clientId = getAppSettings().getYoutubeClientId();\n+\t\t\tString clientSecret = getAppSettings().getYoutubeClientSecret();\n+\n+\t\t\tvideoServiceEndpoint = getApplication().getEndpointService(AntMediaApplicationAdapter.YOUTUBE_ENDPOINT_CLASS, null, clientId, clientSecret);\n+\n+\t\t\tif (isClientIdMissing(videoServiceEndpoint, clientId, clientSecret)) \n+\t\t\t{\n+\t\t\t\tmissingClientIdAndSecret = true;\n+\t\t\t}\n+\n+\t\t}\n+\t\telse if (serviceName.equals(AntMediaApplicationAdapter.PERISCOPE)) \n+\t\t{\n+\t\t\tString clientId = getAppSettings().getPeriscopeClientId();\n+\t\t\tString clientSecret = getAppSettings().getPeriscopeClientSecret();\n+\n+\t\t\tvideoServiceEndpoint = getApplication().getEndpointService(PeriscopeEndpoint.class.getName(), null, clientId, clientSecret);\n+\n+\t\t\tif (isClientIdMissing(videoServiceEndpoint, clientId, clientSecret))  {\n+\t\t\t\tmissingClientIdAndSecret = true;\n+\t\t\t}\n+\t\t}\n+\n+\t\ttry {\n+\n+\t\t\tif (missingClientIdAndSecret) {\n+\t\t\t\terrorId = ERROR_SOCIAL_ENDPOINT_UNDEFINED_CLIENT_ID;\n+\t\t\t\tmessage = \"Please enter service client id and client secret in app configuration\";\n+\t\t\t}\n+\t\t\telse if (videoServiceEndpoint == null) {\n+\t\t\t\terrorId = ERROR_SOCIAL_ENDPOINT_UNDEFINED_ENDPOINT;\n+\t\t\t\tmessage = \"Service with the name specified is not found in this app\";\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tDeviceAuthParameters askDeviceAuthParameters = videoServiceEndpoint.askDeviceAuthParameters();\n+\n+\t\t\t\tgetApplication().startDeviceAuthStatusPolling(videoServiceEndpoint,\n+\t\t\t\t\t\taskDeviceAuthParameters);\n+\t\t\t\treturn askDeviceAuthParameters;\n+\t\t\t}\n+\t\t}\n+\t\tcatch (Exception e) {\n+\t\t\terrorId = ERROR_SOCIAL_ENDPOINT_EXCEPTION_IN_ASKING_AUTHPARAMS;\n+\t\t\tmessage = \"Exception in asking parameters\";\n+\t\t\tlogger.error(ExceptionUtils.getStackTrace(e));\n+\t\t}\n+\n+\t\treturn new Result(false, message, errorId);\n+\t}\n+\n+\tprivate boolean isClientIdMissing(VideoServiceEndpoint videoServiceEndpoint, String clientId, String clientSecret) {\n+\t\tboolean result = false;\n+\t\tif ((videoServiceEndpoint != null) && \n+\t\t\t\t(clientId == null || clientSecret == null || \n+\t\t\t\tclientId.length() == 0 || clientSecret.length() == 0)) {\n+\t\t\tresult = true;\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\t@ApiOperation(value = \"Check if device is authenticated in the social network. In authorization phase, \" +\n+\t\t\t\"this function may be polled periodically until it returns success.\" +\n+\t\t\t\"Server checks social network service for about 1 minute so that if user\" +\n+\t\t\t\"does not enter DeviceAuthParameters in a 1 minute, this function will\" +\n+\t\t\t\"never return true\", notes = \"\", response = Result.class)\n+\t@POST\n+\t@Consumes({ MediaType.APPLICATION_JSON })\n+\t@Path(\"/check-social-network-status/{userCode}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Result checkDeviceAuthStatus(@ApiParam(value = \"Code of social media account\", required = true) @PathParam(\"userCode\") String userCode) {\n+\t\tMap<String, VideoServiceEndpoint> endPointMap = getEndpointList();\n+\t\tString message = null;\n+\t\tboolean authenticated = false;\n+\t\tString endpointId = null;\n+\t\tif (endPointMap != null) {\n+\t\t\tfor (VideoServiceEndpoint videoServiceEndpoint : endPointMap.values()) {\n+\t\t\t\t//if there is an endpoint added to the list with same user code,\n+\t\t\t\t//it means it is authenticated\n+\t\t\t\tDeviceAuthParameters authParameters = videoServiceEndpoint.getAuthParameters();\n+\t\t\t\tif (authParameters != null && authParameters.user_code.equals(userCode)) {\n+\t\t\t\t\tauthenticated = true;\n+\t\t\t\t\tendpointId = videoServiceEndpoint.getCredentials().getId();\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (!authenticated) {\n+\t\t\tList<VideoServiceEndpoint> endPointList = getEndpointsHavingErrorList();\n+\t\t\tfor (VideoServiceEndpoint videoServiceEndpoint : endPointList) {\n+\t\t\t\tDeviceAuthParameters authParameters = videoServiceEndpoint.getAuthParameters();\n+\t\t\t\tif (authParameters != null && authParameters.user_code.equals(userCode)) {\n+\t\t\t\t\tmessage = videoServiceEndpoint.getError();\n+\t\t\t\t\tendPointList.remove(videoServiceEndpoint);\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t}\n+\t\treturn new Result(authenticated, endpointId, message);\n+\t}\n+\n+\tprotected List<VideoServiceEndpoint> getEndpointsHavingErrorList(){\n+\t\treturn getApplication().getVideoServiceEndpointsHavingError();\n+\t}\n+\n+\t@ApiOperation(value = \"Get Credentials of Social Endpoints\", notes = \"\", responseContainer = \"List\",response = SocialEndpointCredentials.class)\n+\t@GET\n+\t@Consumes({ MediaType.APPLICATION_JSON })\n+\t@Path(\"/social-endpoints/{offset}/{size}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic List<SocialEndpointCredentials> getSocialEndpoints(@ApiParam(value = \"the starting point of the list\", required = true) @PathParam(\"offset\") int offset,\n+\t\t\t@ApiParam(value = \"size of the return list (max:50 )\", required = true) @PathParam(\"size\") int size) {\n+\t\tList<SocialEndpointCredentials> endPointCredentials = new ArrayList<>();\n+\t\tMap<String, VideoServiceEndpoint> endPointMap = getEndpointList();\n+\t\tif (endPointMap != null) {\n+\t\t\tfor (VideoServiceEndpoint videoServiceEndpoint : endPointMap.values()) {\n+\t\t\t\tendPointCredentials.add(videoServiceEndpoint.getCredentials());\n+\t\t\t}\n+\t\t}\n+\t\treturn endPointCredentials;\n+\t}\n+\n+\t@ApiOperation(value = \"Some social networks have different channels especially for facebook,\" +\n+\t\t\t\"Live stream can be published on Facebook Page or Personal account, this\" +\n+\t\t\t\"service returns the related information about that.\", notes = \"\", response = SocialEndpointChannel.class)\n+\t@GET\n+\t@Consumes({ MediaType.APPLICATION_JSON })\n+\t@Path(\"/social-networks-channel/{endpointId}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic SocialEndpointChannel getSocialNetworkChannel(@ApiParam(value = \"endpointId\", required = true) @PathParam(\"endpointId\") String endpointId) {\n+\t\tMap<String, VideoServiceEndpoint> endPointMap = getEndpointList();\n+\t\tVideoServiceEndpoint endPoint = endPointMap.get(endpointId);\n+\t\tSocialEndpointChannel channel = null;\n+\t\tif (endPoint != null) {\n+\t\t\tchannel = endPoint.getChannel();\n+\t\t}\n+\t\treturn channel;\n+\t}\n+\n+\n+\t@ApiOperation(value = \"Returns available social network channels for the specific service\", notes = \"\",responseContainer = \"List\",response = SocialEndpointChannel.class)\n+\t@GET\n+\t@Consumes({ MediaType.APPLICATION_JSON })\n+\t@Path(\"/social-networks-channel-lists/{endpointId}/{type}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic List<SocialEndpointChannel> getSocialNetworkChannelList(@ApiParam(value = \"endpointId\", required = true) @PathParam(\"endpointId\") String endpointId,\n+\t\t\t@ApiParam(value = \"This is very service specific, it may be page for Facebook\", required = true) @PathParam(\"type\") String type) {\n+\n+\t\tMap<String, VideoServiceEndpoint> endPointMap = getEndpointList();\n+\t\tVideoServiceEndpoint endPoint = endPointMap.get(endpointId);\n+\t\tList<SocialEndpointChannel>  channelList = null;\n+\t\tif (endPoint != null) {\n+\t\t\tchannelList = endPoint.getChannelList();\n+\t\t}\n+\t\treturn channelList;\n+\t}\n+\n+\n+\t@ApiOperation(value = \"If there are multiple channels in a social network,\" +\n+\t\t\t\"this method sets specific channel for that endpoint\" +\n+\t\t\t\"If a user has pages in Facebook, this method sets the specific page to publish live stream to\", notes = \"\", response = Result.class)\n+\t@POST\n+\t@Consumes({ MediaType.APPLICATION_JSON })\n+\t@Path(\"/social-networks-channels/{endpointId}/{type}/{id}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Result setSocialNetworkChannelList(@ApiParam(value = \"endpointId\", required = true) @PathParam(\"endpointId\") String endpointId,\n+\t\t\t@ApiParam(value = \"type\", required = true) @PathParam(\"type\") String type,\n+\t\t\t@ApiParam(value = \"id\", required = true) @PathParam(\"id\") String channelId) {\n+\t\tboolean result = false;\n+\t\tMap<String, VideoServiceEndpoint> endPointMap = getEndpointList();\n+\n+\t\tVideoServiceEndpoint endPoint = endPointMap.get(endpointId);\n+\n+\t\tif (endPoint != null) {\n+\t\t\tresult = endPoint.setActiveChannel(type, channelId);\n+\t\t}\n+\t\treturn new Result(result, null);\n+\t}\n+\n+\t@ApiOperation(value = \"Set stream specific Mp4 Muxing setting, this setting overrides general Mp4 Muxing Setting\", notes = \"\", response = Result.class)\n+\t@POST\n+\t@Consumes(MediaType.APPLICATION_JSON)\n+\t@Path(\"/{id}/recording/{recording-status}\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Result enableMp4Muxing(@ApiParam(value = \"the id of the stream\", required = true) @PathParam(\"id\") String streamId,\n+\t\t\t@ApiParam(value = \"the integer value for Mp4 Muxing, 1 = Enable Muxing, -1 = Disable Muxing, 0 = No Settings\", required = true) @PathParam(\"recording-status\") int enableMp4) {\n+\t\tResult result = new Result(false);\n+\t\tif (streamId != null) {\n+\n+\t\t\tif (getDataStore().setMp4Muxing(streamId, enableMp4)) {\n+\t\t\t\tif (MP4_ENABLE == enableMp4) {\n+\t\t\t\t\tstartMp4Muxing(streamId);\n+\t\t\t\t} else if (MP4_DISABLE == enableMp4) {\n+\t\t\t\t\tstopMp4Muxing(streamId);\n+\t\t\t\t}\n+\t\t\t\tresult.setSuccess(true);\n+\t\t\t\tresult.setMessage(\"streamId:\" + streamId);\n+\t\t\t} else {\n+\t\t\t\tresult.setMessage(\"no stream for this id: \" + streamId + \" or wrong setting parameter\");\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn result;\n+\t}\n+\n+\t@Nullable\n+\tprivate Mp4Muxer getMp4Muxer(MuxAdaptor muxAdaptor) {\n+\t\tMp4Muxer mp4Muxer = null;\n+\t\tfor (Muxer muxer : muxAdaptor.getMuxerList()) {\n+\t\t\tif (muxer instanceof Mp4Muxer) {\n+\t\t\t\tmp4Muxer = (Mp4Muxer) muxer;\n+\t\t\t}\n+\t\t}\n+\t\treturn mp4Muxer;\n+\t}\n+\n+\tprivate Result startMp4Muxing(String streamId) {\n+\t\tboolean result = false;\n+\t\tList<MuxAdaptor> muxAdaptors = getMuxAdaptors(streamId);\n+\t\tfor (MuxAdaptor muxAdaptor : muxAdaptors) {\n+\t\t\tif (muxAdaptor != null) {\n+\t\t\t\tMp4Muxer mp4Muxer = getMp4Muxer(muxAdaptor);\n+\t\t\t\tif (mp4Muxer == null) {\n+\t\t\t\t\t//avoid multiple call of rest api adding new mp4muxers\n+\t\t\t\t\tmuxAdaptor.startRecording();\n+\t\t\t\t}\n+\t\t\t\tresult = true;\n+\t\t\t}\n+\t\t}\n+\t\treturn new Result(result);\n+\t}\n+\n+\tprivate List<MuxAdaptor> getMuxAdaptors(String streamId) {\n+\t\tAntMediaApplicationAdapter application = getApplication();\n+\t\tList<MuxAdaptor> muxAdaptors = new ArrayList<>();\n+\t\tif(application != null){\n+\t\t\tmuxAdaptors = application.getMuxAdaptors();\n+\t\t}\n+\t\tList<MuxAdaptor> matchedMuxAdaptors = new ArrayList<>();\n+\t\tfor (MuxAdaptor muxAdaptor : muxAdaptors) {\n+\t\t\tif (streamId.equals(muxAdaptor.getStreamId())) {\n+\t\t\t\tmatchedMuxAdaptors.add(muxAdaptor);\n+\t\t\t}\n+\t\t}\n+\t\treturn matchedMuxAdaptors;\n+\t}\n+\n+\tprivate Result stopMp4Muxing(String streamId) {\n+\t\tboolean result = false;\n+\t\tList<MuxAdaptor> muxAdaptors = getMuxAdaptors(streamId);\n+\t\tfor (MuxAdaptor muxAdaptor : muxAdaptors) {\n+\t\t\tif (muxAdaptor != null) {\n+\t\t\t\tMp4Muxer mp4Muxer = getMp4Muxer(muxAdaptor);\n+\t\t\t\tif (mp4Muxer != null) {\n+\t\t\t\t\t//avoid multiple call of rest api stopping mp4 muxer\n+\t\t\t\t\tmuxAdaptor.stopRecording();\n+\t\t\t\t}\n+\t\t\t\tresult = true;\n+\t\t\t}\n+\t\t}\n+\t\treturn new Result(result);\n+\t}\n+\t\n+\t@ApiOperation(value = \"Add IP Camera and Stream Sources to the system as broadcast. It starts automatically\", response = Result.class)\n+\t@POST\n+\t@Consumes(MediaType.APPLICATION_JSON)\n+\t@Path(\"/stream-source\")\n+\t@Produces(MediaType.APPLICATION_JSON)\n+\tpublic Result addStreamSource(@ApiParam(value = \"stream\", required = true) Broadcast stream, @QueryParam(\"socialNetworks\") String socialEndpointIds) {\n+\n+\t\tResult result =",
    "Add DefaultDownloadIndex setManualStopReason variant for single download .": "diff --git a/library/core/src/main/java/com/google/android/exoplayer2/offline/DefaultDownloadIndex.java b/library/core/src/main/java/com/google/android/exoplayer2/offline/DefaultDownloadIndex.java\nindex e84f90a811..10e01969bb 100644\n--- a/library/core/src/main/java/com/google/android/exoplayer2/offline/DefaultDownloadIndex.java\n+++ b/library/core/src/main/java/com/google/android/exoplayer2/offline/DefaultDownloadIndex.java\n@@ -220,6 +220,7 @@ public final class DefaultDownloadIndex implements DownloadIndex {\n   /**\n    * Removes the {@link DownloadState} with the given {@code id}.\n    *\n+   * @param id ID of a {@link DownloadState}.\n    * @throws DatabaseIOException If an error occurs removing the state.\n    */\n   public void removeDownloadState(String id) throws DatabaseIOException {\n@@ -250,6 +251,30 @@ public final class DefaultDownloadIndex implements DownloadIndex {\n     }\n   }\n \n+  /**\n+   * Sets the manual stop reason of the download with the given {@code id} in a terminal state\n+   * ({@link DownloadState#STATE_COMPLETED}, {@link DownloadState#STATE_FAILED}).\n+   *\n+   * <p>If there's no {@link DownloadState} with the given {@code id} or it isn't in a terminal\n+   * state, then nothing happens.\n+   *\n+   * @param id ID of a {@link DownloadState}.\n+   * @param manualStopReason The manual stop reason.\n+   * @throws DatabaseIOException If an error occurs updating the state.\n+   */\n+  public void setManualStopReason(String id, int manualStopReason) throws DatabaseIOException {\n+    ensureInitialized();\n+    try {\n+      ContentValues values = new ContentValues();\n+      values.put(COLUMN_MANUAL_STOP_REASON, manualStopReason);\n+      SQLiteDatabase writableDatabase = databaseProvider.getWritableDatabase();\n+      writableDatabase.update(\n+          TABLE_NAME, values, WHERE_STATE_TERMINAL + \" AND \" + WHERE_ID_EQUALS, new String[] {id});\n+    } catch (SQLException e) {\n+      throw new DatabaseIOException(e);\n+    }\n+  }\n+\n   private void ensureInitialized() throws DatabaseIOException {\n     if (initialized) {\n       return;\ndiff --git a/library/core/src/test/java/com/google/android/exoplayer2/offline/DefaultDownloadIndexTest.java b/library/core/src/test/java/com/google/android/exoplayer2/offline/DefaultDownloadIndexTest.java\nindex 37c3f69514..c537eb1152 100644\n--- a/library/core/src/test/java/com/google/android/exoplayer2/offline/DefaultDownloadIndexTest.java\n+++ b/library/core/src/test/java/com/google/android/exoplayer2/offline/DefaultDownloadIndexTest.java\n@@ -221,7 +221,7 @@ public class DefaultDownloadIndexTest {\n   }\n \n   @Test\n-  public void setManualStopReason_setToReasonNone() throws Exception {\n+  public void setManualStopReason_setReasonToNone() throws Exception {\n     String id = \"id\";\n     DownloadStateBuilder downloadStateBuilder =\n         new DownloadStateBuilder(id)\n@@ -271,4 +271,57 @@ public class DefaultDownloadIndexTest {\n     DownloadState readDownloadState = downloadIndex.getDownloadState(id);\n     DownloadStateTest.assertEqual(readDownloadState, downloadState);\n   }\n+\n+  @Test\n+  public void setSingleDownloadManualStopReason_setReasonToNone() throws Exception {\n+    String id = \"id\";\n+    DownloadStateBuilder downloadStateBuilder =\n+        new DownloadStateBuilder(id)\n+            .setState(DownloadState.STATE_COMPLETED)\n+            .setManualStopReason(0x12345678);\n+    DownloadState downloadState = downloadStateBuilder.build();\n+    downloadIndex.putDownloadState(downloadState);\n+\n+    downloadIndex.setManualStopReason(id, DownloadState.MANUAL_STOP_REASON_NONE);\n+\n+    DownloadState readDownloadState = downloadIndex.getDownloadState(id);\n+    DownloadState expectedDownloadState =\n+        downloadStateBuilder.setManualStopReason(DownloadState.MANUAL_STOP_REASON_NONE).build();\n+    DownloadStateTest.assertEqual(readDownloadState, expectedDownloadState);\n+  }\n+\n+  @Test\n+  public void setSingleDownloadManualStopReason_setReason() throws Exception {\n+    String id = \"id\";\n+    DownloadStateBuilder downloadStateBuilder =\n+        new DownloadStateBuilder(id)\n+            .setState(DownloadState.STATE_FAILED)\n+            .setFailureReason(DownloadState.FAILURE_REASON_UNKNOWN);\n+    DownloadState downloadState = downloadStateBuilder.build();\n+    downloadIndex.putDownloadState(downloadState);\n+    int manualStopReason = 0x12345678;\n+\n+    downloadIndex.setManualStopReason(id, manualStopReason);\n+\n+    DownloadState readDownloadState = downloadIndex.getDownloadState(id);\n+    DownloadState expectedDownloadState =\n+        downloadStateBuilder.setManualStopReason(manualStopReason).build();\n+    DownloadStateTest.assertEqual(readDownloadState, expectedDownloadState);\n+  }\n+\n+  @Test\n+  public void setSingleDownloadManualStopReason_notTerminalState_doesNotSetManualStopReason()\n+      throws Exception {\n+    String id = \"id\";\n+    DownloadStateBuilder downloadStateBuilder =\n+        new DownloadStateBuilder(id).setState(DownloadState.STATE_DOWNLOADING);\n+    DownloadState downloadState = downloadStateBuilder.build();\n+    downloadIndex.putDownloadState(downloadState);\n+    int notMetRequirements = 0x12345678;\n+\n+    downloadIndex.setManualStopReason(id, notMetRequirements);\n+\n+    DownloadState readDownloadState = downloadIndex.getDownloadState(id);\n+    DownloadStateTest.assertEqual(readDownloadState, downloadState);\n+  }\n }",
    "Suppress 2 eclipse - warnings .": "diff --git a/src/java/org/apache/cassandra/io/sstable/SSTableIdentityIterator.java b/src/java/org/apache/cassandra/io/sstable/SSTableIdentityIterator.java\nindex 3ade9ffcec..f9c6e82248 100644\n--- a/src/java/org/apache/cassandra/io/sstable/SSTableIdentityIterator.java\n+++ b/src/java/org/apache/cassandra/io/sstable/SSTableIdentityIterator.java\n@@ -49,6 +49,7 @@ public class SSTableIdentityIterator implements Comparable<SSTableIdentityIterat\n         this.staticRow = iterator.readStaticRow();\n     }\n \n+    @SuppressWarnings(\"resource\")\n     public static SSTableIdentityIterator create(SSTableReader sstable, RandomAccessReader file, DecoratedKey key)\n     {\n         try\n@@ -65,6 +66,7 @@ public class SSTableIdentityIterator implements Comparable<SSTableIdentityIterat\n         }\n     }\n \n+    @SuppressWarnings(\"resource\")\n     public static SSTableIdentityIterator create(SSTableReader sstable, FileDataInput dfile, RowIndexEntry<?> indexEntry, DecoratedKey key, boolean tombstoneOnly)\n     {\n         try",
    "Remove code made redundant by default interface methods .": "diff --git a/clustering/common/src/main/java/org/jboss/as/clustering/controller/Capability.java b/clustering/common/src/main/java/org/jboss/as/clustering/controller/Capability.java\nindex d5dbdbd65e..eefbb42ada 100644\n--- a/clustering/common/src/main/java/org/jboss/as/clustering/controller/Capability.java\n+++ b/clustering/common/src/main/java/org/jboss/as/clustering/controller/Capability.java\n@@ -35,5 +35,7 @@ public interface Capability extends Definable<RuntimeCapability<Void>> {\n      * @param address a path address\n      * @return a resolved runtime capability\n      */\n-    RuntimeCapability<Void> getRuntimeCapability(PathAddress address);\n+    default RuntimeCapability<Void> getRuntimeCapability(PathAddress address) {\n+        return this.getDefinition().fromBaseCapability(address.getLastElement().getValue());\n+    }\n }\ndiff --git a/clustering/common/src/main/java/org/jboss/as/clustering/controller/ResourceServiceBuilder.java b/clustering/common/src/main/java/org/jboss/as/clustering/controller/ResourceServiceBuilder.java\nindex 30a7af5353..bae8d6053c 100644\n--- a/clustering/common/src/main/java/org/jboss/as/clustering/controller/ResourceServiceBuilder.java\n+++ b/clustering/common/src/main/java/org/jboss/as/clustering/controller/ResourceServiceBuilder.java\n@@ -40,5 +40,7 @@ public interface ResourceServiceBuilder<T> extends Builder<T> {\n      * @return the reference to this builder\n      * @throws OperationFailedException if there was a failure reading the model\n      */\n-    Builder<T> configure(OperationContext context, ModelNode model) throws OperationFailedException;\n+    default Builder<T> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n+        return this;\n+    }\n }\ndiff --git a/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/NoStoreBuilder.java b/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/NoStoreBuilder.java\nindex 5eae059577..008bf23017 100644\n--- a/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/NoStoreBuilder.java\n+++ b/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/NoStoreBuilder.java\n@@ -25,9 +25,6 @@ package org.jboss.as.clustering.infinispan.subsystem;\n import org.infinispan.configuration.cache.ConfigurationBuilder;\n import org.infinispan.configuration.cache.PersistenceConfiguration;\n import org.jboss.as.clustering.controller.ResourceServiceBuilder;\n-import org.jboss.as.controller.OperationContext;\n-import org.jboss.dmr.ModelNode;\n-import org.wildfly.clustering.service.Builder;\n \n /**\n  * @author Paul Ferraro\n@@ -42,9 +39,4 @@ public class NoStoreBuilder extends CacheComponentBuilder<PersistenceConfigurati\n     public PersistenceConfiguration getValue() {\n         return new ConfigurationBuilder().persistence().passivation(false).create();\n     }\n-\n-    @Override\n-    public Builder<PersistenceConfiguration> configure(OperationContext context, ModelNode model) {\n-        return this;\n-    }\n }\ndiff --git a/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/NoStoreResourceDefinition.java b/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/NoStoreResourceDefinition.java\nindex 1ef6b003e9..419b3bada6 100644\n--- a/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/NoStoreResourceDefinition.java\n+++ b/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/NoStoreResourceDefinition.java\n@@ -44,10 +44,6 @@ public class NoStoreResourceDefinition extends ChildResourceDefinition {\n         // Nothing to do yet\n     }\n \n-    /**\n-     * @param type\n-     * @param allowRuntimeOnlyRegistration\n-     */\n     public NoStoreResourceDefinition() {\n         super(PATH, new InfinispanResourceDescriptionResolver(PATH));\n     }\ndiff --git a/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/RemoteStoreResourceDefinition.java b/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/RemoteStoreResourceDefinition.java\nindex 7adbca71d5..0239fb7174 100644\n--- a/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/RemoteStoreResourceDefinition.java\n+++ b/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/RemoteStoreResourceDefinition.java\n@@ -57,7 +57,7 @@ public class RemoteStoreResourceDefinition extends StoreResourceDefinition {\n     static final PathElement LEGACY_PATH = PathElement.pathElement(\"remote-store\", \"REMOTE_STORE\");\n     static final PathElement PATH = pathElement(\"remote\");\n \n-    private enum Capability implements org.jboss.as.clustering.controller.Capability {\n+    enum Capability implements org.jboss.as.clustering.controller.Capability {\n         OUTBOUND_SOCKET_BINDING(\"org.wildfly.clustering.infinispan.cache-container.cache.store.remote.outbound-socket-binding\", OutboundSocketBinding.class),\n         ;\n         private final RuntimeCapability<Void> definition;\ndiff --git a/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteThroughBuilder.java b/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteThroughBuilder.java\nindex 6d8e02b574..1edc50cec2 100644\n--- a/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteThroughBuilder.java\n+++ b/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteThroughBuilder.java\n@@ -25,9 +25,6 @@ package org.jboss.as.clustering.infinispan.subsystem;\n import org.infinispan.configuration.cache.AsyncStoreConfiguration;\n import org.infinispan.configuration.cache.ConfigurationBuilder;\n import org.jboss.as.clustering.controller.ResourceServiceBuilder;\n-import org.jboss.as.controller.OperationContext;\n-import org.jboss.dmr.ModelNode;\n-import org.wildfly.clustering.service.Builder;\n \n /**\n  * @author Paul Ferraro\n@@ -42,9 +39,4 @@ public class StoreWriteThroughBuilder extends CacheComponentBuilder<AsyncStoreCo\n     public AsyncStoreConfiguration getValue() throws IllegalStateException, IllegalArgumentException {\n         return new ConfigurationBuilder().persistence().addSingleFileStore().async().disable().create();\n     }\n-\n-    @Override\n-    public Builder<AsyncStoreConfiguration> configure(OperationContext context, ModelNode model) {\n-        return this;\n-    }\n }\ndiff --git a/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/PropertyResourceDefinition.java b/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/PropertyResourceDefinition.java\nindex 537bae3cda..54a1bbfa9b 100644\n--- a/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/PropertyResourceDefinition.java\n+++ b/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/PropertyResourceDefinition.java\n@@ -174,7 +174,6 @@ public class PropertyResourceDefinition extends ChildResourceDefinition {\n \n     static ResourceTransformer PROPERTIES_RESOURCE_TRANSFORMER = new ResourceTransformer() {\n         @Override\n-        @SuppressWarnings(\"deprecation\")\n         public void transformResource(ResourceTransformationContext context, PathAddress address, Resource resource) throws OperationFailedException {\n             final ModelNode model = resource.getModel();\n             final ModelNode properties = model.remove(ProtocolResourceDefinition.Attribute.PROPERTIES.getDefinition().getName());\n@@ -197,7 +196,6 @@ public class PropertyResourceDefinition extends ChildResourceDefinition {\n \n     static OperationTransformer PROPERTIES_ADD_OP_TRANSFORMER = new OperationTransformer()  {\n         @Override\n-        @SuppressWarnings(\"deprecation\")\n         public ModelNode transformOperation(ModelNode operation) {\n             if (operation.hasDefined(ProtocolResourceDefinition.Attribute.PROPERTIES.getDefinition().getName())) {\n                 final ModelNode addOp = operation.clone();\n@@ -227,7 +225,6 @@ public class PropertyResourceDefinition extends ChildResourceDefinition {\n     static org.jboss.as.controller.transform.OperationTransformer PROPERTIES_OP_TRANSFORMER = new org.jboss.as.controller.transform.OperationTransformer() {\n \n         @Override\n-        @SuppressWarnings(\"deprecation\")\n         public TransformedOperation transformOperation(TransformationContext context, PathAddress address, ModelNode operation) throws OperationFailedException {\n             if (operation.get(ModelDescriptionConstants.NAME).asString().equals(ProtocolResourceDefinition.Attribute.PROPERTIES.getDefinition().getName())) {\n \ndiff --git a/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/TransportResourceDefinition.java b/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/TransportResourceDefinition.java\nindex 332d456364..1ec8be4997 100644\n--- a/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/TransportResourceDefinition.java\n+++ b/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/TransportResourceDefinition.java\n@@ -91,7 +91,7 @@ public class TransportResourceDefinition extends ProtocolResourceDefinition {\n         return PathElement.pathElement(\"transport\", name);\n     }\n \n-    private enum Capability implements org.jboss.as.clustering.controller.Capability {\n+    enum Capability implements org.jboss.as.clustering.controller.Capability {\n         DIAGNOSTICS_SOCKET_BINDING(\"org.wildfly.clustering.transport.diagnostics-socket-binding\", SocketBinding.class),\n         ;\n         private final RuntimeCapability<Void> definition;\ndiff --git a/clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonPolicyResourceDefinition.java b/clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonPolicyResourceDefinition.java\nindex efb9dda664..a01460eae4 100644\n--- a/clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonPolicyResourceDefinition.java\n+++ b/clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonPolicyResourceDefinition.java\n@@ -28,7 +28,6 @@ import org.jboss.as.clustering.controller.RemoveStepHandler;\n import org.jboss.as.clustering.controller.ResourceDescriptor;\n import org.jboss.as.clustering.controller.ResourceServiceHandler;\n import org.jboss.as.clustering.controller.SimpleResourceServiceHandler;\n-import org.jboss.as.controller.PathAddress;\n import org.jboss.as.controller.PathElement;\n import org.jboss.as.controller.SimpleAttributeDefinition;\n import org.jboss.as.controller.SimpleAttributeDefinitionBuilder;\n@@ -64,11 +63,6 @@ public class SingletonPolicyResourceDefinition extends ChildResourceDefinition {\n         public RuntimeCapability<Void> getDefinition() {\n             return this.definition;\n         }\n-\n-        @Override\n-        public RuntimeCapability<Void> getRuntimeCapability(PathAddress address) {\n-            return this.definition.fromBaseCapability(address.getLastElement().getValue());\n-        }\n     }\n \n     enum Attribute implements org.jboss.as.clustering.controller.Attribute {",
    "Remove unused ToolchainProviderBuilder . withDefaultAppleCxxPlatforms .": "diff --git a/test/com/facebook/buck/toolchain/impl/BUCK b/test/com/facebook/buck/toolchain/impl/BUCK\nindex 8c5406b79c..e1638b536c 100644\n--- a/test/com/facebook/buck/toolchain/impl/BUCK\n+++ b/test/com/facebook/buck/toolchain/impl/BUCK\n@@ -26,7 +26,6 @@ java_library(\n         \"PUBLIC\",\n     ],\n     deps = [\n-        \"//src/com/facebook/buck/apple/toolchain:toolchain\",\n         \"//src/com/facebook/buck/model:model\",\n         \"//src/com/facebook/buck/toolchain/impl:impl\",\n         \"//src/com/facebook/buck/util/environment:platform\",\ndiff --git a/test/com/facebook/buck/toolchain/impl/ToolchainProviderBuilder.java b/test/com/facebook/buck/toolchain/impl/ToolchainProviderBuilder.java\nindex 84828f7283..198d420116 100644\n--- a/test/com/facebook/buck/toolchain/impl/ToolchainProviderBuilder.java\n+++ b/test/com/facebook/buck/toolchain/impl/ToolchainProviderBuilder.java\n@@ -17,10 +17,8 @@\n package com.facebook.buck.toolchain.impl;\n \n import com.facebook.buck.android.toolchain.NdkCxxPlatformsProvider;\n-import com.facebook.buck.apple.toolchain.AppleCxxPlatformsProvider;\n import com.facebook.buck.cxx.toolchain.CxxPlatformUtils;\n import com.facebook.buck.cxx.toolchain.CxxPlatformsProvider;\n-import com.facebook.buck.model.FlavorDomain;\n import com.facebook.buck.toolchain.BaseToolchainProvider;\n import com.facebook.buck.toolchain.Toolchain;\n import com.facebook.buck.toolchain.ToolchainProvider;\n@@ -28,7 +26,6 @@ import com.facebook.buck.toolchain.ToolchainWithCapability;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableMap;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n \n@@ -42,13 +39,6 @@ public class ToolchainProviderBuilder {\n         NdkCxxPlatformsProvider.DEFAULT_NAME, NdkCxxPlatformsProvider.of(ImmutableMap.of()));\n   }\n \n-  public ToolchainProviderBuilder withDefaultAppleCxxPlatforms() {\n-    return withToolchain(\n-        AppleCxxPlatformsProvider.DEFAULT_NAME,\n-        AppleCxxPlatformsProvider.of(\n-            FlavorDomain.from(\"Apple C++ Platform\", Collections.emptyList())));\n-  }\n-\n   public ToolchainProviderBuilder withDefaultCxxPlatforms() {\n     return withToolchain(\n         CxxPlatformsProvider.DEFAULT_NAME,",
    "added a missing VariableResolver .": "diff --git a/core/src/main/java/hudson/model/StringParameterValue.java b/core/src/main/java/hudson/model/StringParameterValue.java\nindex 04c25caa76..730374abb9 100644\n--- a/core/src/main/java/hudson/model/StringParameterValue.java\n+++ b/core/src/main/java/hudson/model/StringParameterValue.java\n@@ -4,6 +4,8 @@ import org.kohsuke.stapler.DataBoundConstructor;\n \r\n import java.util.Map;\r\n \r\n+import hudson.util.VariableResolver;\r\n+\r\n /**\r\n  * {@link ParameterValue} created from {@link StringParameterDefinition}.\r\n  */\r\n@@ -23,4 +25,13 @@ public class StringParameterValue extends ParameterValue {\n     public void buildEnvVars(AbstractBuild<?,?> build, Map<String,String> env) {\r\n         env.put(name.toUpperCase(),value);\r\n     }\r\n+\r\n+    @Override\r\n+    public VariableResolver<String> createVariableResolver(AbstractBuild<?, ?> build) {\r\n+        return new VariableResolver<String>() {\r\n+            public String resolve(String name) {\r\n+                return StringParameterValue.this.name.equals(name) ? value : null;\r\n+            }\r\n+        };\r\n+    }\r\n }\r",
    "Added FAQ": "diff --git a/FAQ.md b/FAQ.md\nindex b300eea1..d5e994f7 100644\n--- a/FAQ.md\n+++ b/FAQ.md\n@@ -335,6 +335,22 @@ Sometimes it helps to uninstall and install NetGuard again (be sure to export yo\n Since turning off the VPN service using the Android settings cannot be prevented,\n there is little use in adding PIN or password protection.\n \n+<a name=\"FAQ37\"></a>\n+**(37) Why are the pro features so expensive?**\n+\n+The right question is \"*why are there so many taxes and fees*\":\n+\n+* VAT: 25% (depending on your country)\n+* Google fee: 30%\n+* Income tax: 50%\n+\n+So, what is left for the developer is just a fraction of what you pay.\n+\n+Despite NetGuard being *really* a lot of work, only some of the convenience and advanced features are paid,\n+which means that NetGuard is basically free to use.\n+\n+Also note that most free applications will appear not to be sustainable in the end, whereas NetGuard is properly maintained and supported.\n+\n <br />\n \n **If you didn't find the answer to your question, you can ask your questions [in this forum](http://forum.xda-developers.com/showthread.php?t=3233012) or contact me directly [by e-mail](mailto:marcel+netguard@faircode.eu)**.\ndiff --git a/README.md b/README.md\nindex 814b06ac..b9e146b1 100644\n--- a/README.md\n+++ b/README.md\n@@ -178,6 +178,9 @@ Frequently Asked Questions (FAQ)\n <a name=\"FAQ36\"></a>\n [**(36) Can you add PIN or password protection?**](https://github.com/M66B/NetGuard/blob/master/FAQ.md#FAQ36)\n \n+<a name=\"FAQ37\"></a>\n+[**(37) Why are the pro features so expensive?**](https://github.com/M66B/NetGuard/blob/master/FAQ.md#FAQ37)\n+\n Permissions\n -----------\n ",
    "Add cause to the warn message .": "diff --git a/axon-server-connector/src/main/java/org/axonframework/axonserver/connector/heartbeat/HeartbeatMonitor.java b/axon-server-connector/src/main/java/org/axonframework/axonserver/connector/heartbeat/HeartbeatMonitor.java\nindex b43772555..9cfb7b95a 100644\n--- a/axon-server-connector/src/main/java/org/axonframework/axonserver/connector/heartbeat/HeartbeatMonitor.java\n+++ b/axon-server-connector/src/main/java/org/axonframework/axonserver/connector/heartbeat/HeartbeatMonitor.java\n@@ -77,7 +77,7 @@ private void run() {\n                 onInvalidConnection.run();\n             }\n         } catch (Exception e) {\n-            logger.warn(\"Impossible to correctly monitor the Axon Server connection state.\");\n+            logger.warn(\"Impossible to correctly monitor the Axon Server connection state.\", e);\n         }\n     }\n ",
    "Added test file to demo the deletion of file content": "diff --git a/core-java-io/src/test/java/com/baeldung/file/FilesClearDataManualTest.java b/core-java-io/src/test/java/com/baeldung/file/FilesClearDataManualTest.java\nnew file mode 100644\nindex 0000000000..8a4b3a7380\n--- /dev/null\n+++ b/core-java-io/src/test/java/com/baeldung/file/FilesClearDataManualTest.java\n@@ -0,0 +1,98 @@\n+package com.baeldung.file;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.io.BufferedWriter;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.nio.channels.FileChannel;\n+import java.nio.charset.Charset;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.nio.file.StandardOpenOption;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import com.baeldung.util.StreamUtils;\n+\n+public class FilesClearDataManualTest {\n+\t\n+    public static final String FILE_PATH = \"src/test/resources/fileexample.txt\";\n+\n+    @Before\n+    @After\n+    public void setup() throws IOException {\n+        PrintWriter writer = new PrintWriter(FILE_PATH);\n+        writer.print(\"This example shows how we can delete the file contents without deleting the file\");\n+        writer.close();\n+    }\n+    \n+    @Test\n+    public void givenExistingFile_whenDeleteContentUsingPrintWritter_thenEmptyFile() throws IOException {\n+        PrintWriter writer = new PrintWriter(FILE_PATH);\n+        writer.print(\"\");\n+        writer.close();\n+        assertEquals(0, StreamUtils.getStringFromInputStream(new FileInputStream(FILE_PATH)).length());\n+    }    \n+\n+    @Test\n+    public void givenExistingFile_whenDeleteContentUsingPrintWritterWithougObject_thenEmptyFile() throws IOException {\n+        new PrintWriter(FILE_PATH).close();\n+        assertEquals(0, StreamUtils.getStringFromInputStream(new FileInputStream(FILE_PATH)).length());\n+    }    \n+\n+       \n+    @Test\n+    public void givenExistingFile_whenDeleteContentUsingFileWriter_thenEmptyFile() throws IOException {\n+        new FileWriter(FILE_PATH, false).close();\n+ \n+        assertEquals(0, StreamUtils.getStringFromInputStream(new FileInputStream(FILE_PATH)).length());\n+    }\n+    \n+    @Test\n+    public void givenExistingFile_whenDeleteContentUsingFileOutputStream_thenEmptyFile() throws IOException {\n+        new FileOutputStream(FILE_PATH).close();\n+\n+        assertEquals(0, StreamUtils.getStringFromInputStream(new FileInputStream(FILE_PATH)).length());\n+    }    \n+\n+    @Test\n+    public void givenExistingFile_whenDeleteContentUsingFileUtils_thenEmptyFile() throws IOException {\n+        FileUtils.write(new File(FILE_PATH), \"\", Charset.defaultCharset());\n+\n+        assertEquals(0, StreamUtils.getStringFromInputStream(new FileInputStream(FILE_PATH)).length());\n+    }    \n+\n+    @Test\n+    public void givenExistingFile_whenDeleteContentUsingNIOFiles_thenEmptyFile() throws IOException {\n+        BufferedWriter writer = Files.newBufferedWriter(Paths.get(FILE_PATH));\n+        writer.write(\"\");\n+        writer.flush();\n+ \n+        assertEquals(0, StreamUtils.getStringFromInputStream(new FileInputStream(FILE_PATH)).length());\n+    }    \n+    \n+    @Test\n+    public void givenExistingFile_whenDeleteContentUsingNIOFileChannel_thenEmptyFile() throws IOException {\n+        FileChannel.open(Paths.get(FILE_PATH), StandardOpenOption.WRITE).truncate(0).close();\n+ \n+        assertEquals(0, StreamUtils.getStringFromInputStream(new FileInputStream(FILE_PATH)).length());\n+    }   \n+    \n+    @Test\n+    public void givenExistingFile_whenDeleteContentUsingGuava_thenEmptyFile() throws IOException {\n+        File file = new File(FILE_PATH);\n+        byte[] empty = new byte[0];\n+        com.google.common.io.Files.write(empty, file);\n+        \n+        assertEquals(0, StreamUtils.getStringFromInputStream(new FileInputStream(FILE_PATH)).length());\n+    }    \n+    \n+}\ndiff --git a/core-java-io/src/test/resources/fileexample.txt b/core-java-io/src/test/resources/fileexample.txt\nnew file mode 100644\nindex 0000000000..ee48fdfb84\n--- /dev/null\n+++ b/core-java-io/src/test/resources/fileexample.txt\n@@ -0,0 +1 @@\n+This example shows how we can delete the file contents without deleting the file\n\\ No newline at end of file",
    "Automated merge with http : / / hg . netbeans . org / jet - main": "diff --git a/lib.profiler/native/src-jdk15/common_functions.c b/lib.profiler/native/src-jdk15/common_functions.c\nindex f83753452..c5de7f5d7 100644\n--- a/lib.profiler/native/src-jdk15/common_functions.c\n+++ b/lib.profiler/native/src-jdk15/common_functions.c\n@@ -135,7 +135,7 @@ JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *jvm, void *reserved) {\n \n         initializeJVMTI(jvm);\n     \n-        fprintf(stderr, \"Profiler Agent: JNI OnLoad Initialized succesfully\\n\");\n+        fprintf(stderr, \"Profiler Agent: JNI OnLoad Initialized successfully\\n\");\n     }\n     return JNI_VERSION_1_2;\n }\n@@ -168,7 +168,7 @@ JNIEXPORT jint JNICALL Agent_OnLoad(JavaVM *jvm, char *options, void *reserved)\n         }\n     } // in case of calibration, the arguments are just empty, this is OK\n \n-    fprintf(stderr, \"Profiler Agent: Initialized succesfully\\n\");\n+    fprintf(stderr, \"Profiler Agent: Initialized successfully\\n\");\n     return 0;\n }\n ",
    "Extending the grid migration logic to handle density changes .": "diff --git a/src/com/android/launcher3/InvariantDeviceProfile.java b/src/com/android/launcher3/InvariantDeviceProfile.java\nindex a91181d5e..56c0192f6 100644\n--- a/src/com/android/launcher3/InvariantDeviceProfile.java\n+++ b/src/com/android/launcher3/InvariantDeviceProfile.java\n@@ -73,12 +73,12 @@ public class InvariantDeviceProfile {\n     /**\n      * Number of icons inside the hotseat area.\n      */\n-    int numHotseatIcons;\n+    public int numHotseatIcons;\n     float hotseatIconSize;\n     int defaultLayoutId;\n \n     // Derived invariant properties\n-    int hotseatAllAppsRank;\n+    public int hotseatAllAppsRank;\n \n     DeviceProfile landscapeProfile;\n     DeviceProfile portraitProfile;\ndiff --git a/src/com/android/launcher3/LauncherBackupAgentHelper.java b/src/com/android/launcher3/LauncherBackupAgentHelper.java\nindex 0773bf27c..bf9c66822 100644\n--- a/src/com/android/launcher3/LauncherBackupAgentHelper.java\n+++ b/src/com/android/launcher3/LauncherBackupAgentHelper.java\n@@ -24,7 +24,7 @@ import android.database.Cursor;\n import android.os.ParcelFileDescriptor;\n import android.util.Log;\n \n-import com.android.launcher3.model.MigrateFromRestoreTask;\n+import com.android.launcher3.model.GridSizeMigrationTask;\n \n import java.io.IOException;\n \n@@ -101,8 +101,9 @@ public class LauncherBackupAgentHelper extends BackupAgentHelper {\n                         LauncherSettings.Settings.METHOD_UPDATE_FOLDER_ITEMS_RANK);\n             }\n \n-            if (MigrateFromRestoreTask.ENABLED && mHelper.shouldAttemptWorkspaceMigration()) {\n-                MigrateFromRestoreTask.markForMigration(getApplicationContext(),\n+            // TODO: Update this logic to handle grid difference of 2. as well as hotseat difference\n+            if (GridSizeMigrationTask.ENABLED && mHelper.shouldAttemptWorkspaceMigration()) {\n+                GridSizeMigrationTask.markForMigration(getApplicationContext(),\n                         (int) mHelper.migrationCompatibleProfileData.desktopCols,\n                         (int) mHelper.migrationCompatibleProfileData.desktopRows,\n                         mHelper.widgetSizes);\ndiff --git a/src/com/android/launcher3/LauncherBackupHelper.java b/src/com/android/launcher3/LauncherBackupHelper.java\nindex 509fbf8b8..4ebead56a 100644\n--- a/src/com/android/launcher3/LauncherBackupHelper.java\n+++ b/src/com/android/launcher3/LauncherBackupHelper.java\n@@ -52,7 +52,7 @@ import com.android.launcher3.backup.BackupProtos.Screen;\n import com.android.launcher3.backup.BackupProtos.Widget;\n import com.android.launcher3.compat.UserHandleCompat;\n import com.android.launcher3.compat.UserManagerCompat;\n-import com.android.launcher3.model.MigrateFromRestoreTask;\n+import com.android.launcher3.model.GridSizeMigrationTask;\n import com.android.launcher3.util.Thunk;\n import com.google.protobuf.nano.InvalidProtocolBufferNanoException;\n import com.google.protobuf.nano.MessageNano;\n@@ -315,7 +315,7 @@ public class LauncherBackupHelper implements BackupHelper {\n             return true;\n         }\n \n-        if (MigrateFromRestoreTask.ENABLED &&\n+        if (GridSizeMigrationTask.ENABLED &&\n                 (oldProfile.desktopCols - currentProfile.desktopCols <= 1) &&\n                 (oldProfile.desktopRows - currentProfile.desktopRows <= 1)) {\n             // Allow desktop migration when row and/or column count contracts by 1.\ndiff --git a/src/com/android/launcher3/LauncherModel.java b/src/com/android/launcher3/LauncherModel.java\nindex fe0abc024..0eb1a90b0 100644\n--- a/src/com/android/launcher3/LauncherModel.java\n+++ b/src/com/android/launcher3/LauncherModel.java\n@@ -57,7 +57,7 @@ import com.android.launcher3.compat.PackageInstallerCompat.PackageInstallInfo;\n import com.android.launcher3.compat.UserHandleCompat;\n import com.android.launcher3.compat.UserManagerCompat;\n import com.android.launcher3.config.ProviderConfig;\n-import com.android.launcher3.model.MigrateFromRestoreTask;\n+import com.android.launcher3.model.GridSizeMigrationTask;\n import com.android.launcher3.model.WidgetsModel;\n import com.android.launcher3.util.ComponentKey;\n import com.android.launcher3.util.CursorIconInfo;\n@@ -1651,14 +1651,14 @@ public class LauncherModel extends BroadcastReceiver\n             int countX = profile.numColumns;\n             int countY = profile.numRows;\n \n-            if (MigrateFromRestoreTask.ENABLED && MigrateFromRestoreTask.shouldRunTask(mContext)) {\n+            if (GridSizeMigrationTask.ENABLED && GridSizeMigrationTask.shouldRunTask(mContext)) {\n                 long migrationStartTime = System.currentTimeMillis();\n                 Log.v(TAG, \"Starting workspace migration after restore\");\n                 try {\n-                    MigrateFromRestoreTask task = new MigrateFromRestoreTask(mContext);\n+                    GridSizeMigrationTask task = new GridSizeMigrationTask(mContext);\n                     // Clear the flags before starting the task, so that we do not run the task\n                     // again, in case there was an uncaught error.\n-                    MigrateFromRestoreTask.clearFlags(mContext);\n+                    GridSizeMigrationTask.clearFlags(mContext);\n                     task.execute();\n                 } catch (Exception e) {\n                     Log.e(TAG, \"Error during grid migration\", e);\n@@ -1668,6 +1668,8 @@ public class LauncherModel extends BroadcastReceiver\n                 }\n                 Log.v(TAG, \"Workspace migration completed in \"\n                         + (System.currentTimeMillis() - migrationStartTime));\n+\n+                GridSizeMigrationTask.saveCurrentConfig(mContext);\n             }\n \n             if ((mFlags & LOADER_FLAG_CLEAR_WORKSPACE) != 0) {\ndiff --git a/src/com/android/launcher3/model/MigrateFromRestoreTask.java b/src/com/android/launcher3/model/GridSizeMigrationTask.java\nsimilarity index 78%\nrename from src/com/android/launcher3/model/MigrateFromRestoreTask.java\nrename to src/com/android/launcher3/model/GridSizeMigrationTask.java\nindex 9cabc8d41..08c3dc0bb 100644\n--- a/src/com/android/launcher3/model/MigrateFromRestoreTask.java\n+++ b/src/com/android/launcher3/model/GridSizeMigrationTask.java\n@@ -24,29 +24,33 @@ import com.android.launcher3.Utilities;\n import com.android.launcher3.compat.PackageInstallerCompat;\n import com.android.launcher3.compat.UserHandleCompat;\n import com.android.launcher3.util.LongArrayMap;\n-import com.android.launcher3.util.Thunk;\n \n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n+import java.util.Locale;\n \n /**\n  * This class takes care of shrinking the workspace (by maximum of one row and one column), as a\n- * result of restoring from a larger device.\n+ * result of restoring from a larger device or device density change.\n  */\n-public class MigrateFromRestoreTask {\n+public class GridSizeMigrationTask {\n \n-    public static boolean ENABLED = false;\n+    public static boolean ENABLED = Utilities.isNycOrAbove();\n \n-    private static final String TAG = \"MigrateFromRestoreTask\";\n+    private static final String TAG = \"GridSizeMigrationTask\";\n     private static final boolean DEBUG = true;\n \n-    private static final String KEY_MIGRATION_SOURCE_SIZE = \"migration_restore_src_size\";\n+    private static final String KEY_MIGRATION_SRC_WORKSPACE_SIZE = \"migration_src_workspace_size\";\n+    private static final String KEY_MIGRATION_SRC_HOTSEAT_SIZE = \"migration_src_hotseat_size\";\n+\n+    // Set of entries indicating minimum size a widget can be resized to. This is used during\n+    // restore in case the widget has not been installed yet.\n     private static final String KEY_MIGRATION_WIDGET_MINSIZE = \"migration_widget_min_size\";\n \n     // These are carefully selected weights for various item types (Math.random?), to allow for\n-    // the lease absurd migration experience.\n+    // the least absurd migration experience.\n     private static final float WT_SHORTCUT = 1;\n     private static final float WT_APPLICATION = 0.8f;\n     private static final float WT_WIDGET_MIN = 2;\n@@ -65,17 +69,37 @@ public class MigrateFromRestoreTask {\n     private ArrayList<DbEntry> mCarryOver;\n \n     private final int mSrcX, mSrcY;\n-    @Thunk final int mTrgX, mTrgY;\n+    private final int mTrgX, mTrgY;\n     private final boolean mShouldRemoveX, mShouldRemoveY;\n \n-    public MigrateFromRestoreTask(Context context) {\n+    private final int mSrcHotseatSize;\n+    private final int mSrcAllAppsRank;\n+\n+    /**\n+     * TODO: Create a generic constructor which can be unit tested.\n+     */\n+    public GridSizeMigrationTask(Context context) {\n         mContext = context;\n \n+\n+        mIdp = LauncherAppState.getInstance().getInvariantDeviceProfile();\n+        mTrgX = mIdp.numColumns;\n+        mTrgY = mIdp.numRows;\n+\n         SharedPreferences prefs = Utilities.getPrefs(context);\n-        Point sourceSize = parsePoint(prefs.getString(KEY_MIGRATION_SOURCE_SIZE, \"\"));\n+        Point sourceSize = parsePoint(\n+                prefs.getString(KEY_MIGRATION_SRC_WORKSPACE_SIZE, getPointString(mTrgX, mTrgY)));\n         mSrcX = sourceSize.x;\n         mSrcY = sourceSize.y;\n \n+        // Hotseat\n+        Point hotseatSize = parsePoint(\n+                prefs.getString(KEY_MIGRATION_SRC_HOTSEAT_SIZE,\n+                        getPointString(mIdp.numHotseatIcons, mIdp.hotseatAllAppsRank)));\n+        mSrcHotseatSize = hotseatSize.x;\n+        mSrcAllAppsRank = hotseatSize.y;\n+\n+        // Widget sizes\n         mWidgetMinSize = new HashMap<String, Point>();\n         for (String s : prefs.getStringSet(KEY_MIGRATION_WIDGET_MINSIZE,\n                 Collections.<String>emptySet())) {\n@@ -83,16 +107,12 @@ public class MigrateFromRestoreTask {\n             mWidgetMinSize.put(parts[0], parsePoint(parts[1]));\n         }\n \n-        mIdp = LauncherAppState.getInstance().getInvariantDeviceProfile();\n-        mTrgX = mIdp.numColumns;\n-        mTrgY = mIdp.numRows;\n         mShouldRemoveX = mTrgX < mSrcX;\n         mShouldRemoveY = mTrgY < mSrcY;\n     }\n \n     public void execute() throws Exception {\n         mEntryToRemove = new ArrayList<>();\n-        mCarryOver = new ArrayList<>();\n         mUpdateOperations = new ArrayList<>();\n \n         // Initialize list of valid packages. This contain all the packages which are already on\n@@ -107,6 +127,97 @@ public class MigrateFromRestoreTask {\n         mValidPackages.addAll(PackageInstallerCompat.getInstance(mContext)\n                 .updateAndGetActiveSessionCache().keySet());\n \n+        // Migrate hotseat\n+        if (mSrcHotseatSize != mIdp.numHotseatIcons || mSrcAllAppsRank != mIdp.hotseatAllAppsRank) {\n+            migrateHotseat();\n+        }\n+\n+        if (mShouldRemoveX || mShouldRemoveY) {\n+            if ((mSrcY - mTrgX) > 1 || (mSrcY - mSrcY) > 1) {\n+                // TODO: support this.\n+                throw new Exception(\"The universe is too large for migration\");\n+            } else {\n+                migrateWorkspace();\n+            }\n+        }\n+\n+        // Update items\n+        if (!mUpdateOperations.isEmpty()) {\n+            mContext.getContentResolver().applyBatch(LauncherProvider.AUTHORITY, mUpdateOperations);\n+        }\n+\n+        if (!mEntryToRemove.isEmpty()) {\n+            if (DEBUG) {\n+                Log.d(TAG, \"Removing items: \" + TextUtils.join(\", \", mEntryToRemove));\n+            }\n+            mContext.getContentResolver().delete(LauncherSettings.Favorites.CONTENT_URI,\n+                    Utilities.createDbSelectionQuery(\n+                            LauncherSettings.Favorites._ID, mEntryToRemove), null);\n+        }\n+\n+        if (!mUpdateOperations.isEmpty() || !mEntryToRemove.isEmpty()) {\n+            // Make sure we haven't removed everything.\n+            final Cursor c = mContext.getContentResolver().query(\n+                    LauncherSettings.Favorites.CONTENT_URI, null, null, null, null);\n+            boolean hasData = c.moveToNext();\n+            c.close();\n+            if (!hasData) {\n+                throw new Exception(\"Removed every thing during grid resize\");\n+            }\n+        }\n+    }\n+\n+    /**\n+     * To migrate hotseat, we load all the entries in order (LTR or RTL) and arrange them\n+     * in the order in the new hotseat while keeping an empty space for all-apps. If the number of\n+     * entries is more than what can fit in the new hotseat, we drop the entries with least weight.\n+     * For weight calculation {@see #WT_SHORTCUT}, {@see #WT_APPLICATION}\n+     * & {@see #WT_FOLDER_FACTOR}.\n+     */\n+    private void migrateHotseat() {\n+        ArrayList<DbEntry> items = loadHotseatEntries();\n+\n+        int requiredCount = mIdp.numHotseatIcons - 1;\n+\n+        while (items.size() > requiredCount) {\n+            // Pick the center item by default.\n+            DbEntry toRemove = items.get(items.size() / 2);\n+\n+            // Find the item with least weight.\n+            for (DbEntry entry : items) {\n+                if (entry.weight < toRemove.weight) {\n+                    toRemove = entry;\n+                }\n+            }\n+\n+            mEntryToRemove.add(toRemove.id);\n+            items.remove(toRemove);\n+        }\n+\n+        // Update screen IDS\n+        int newScreenId = 0;\n+        for (DbEntry entry : items) {\n+            if (entry.screenId != newScreenId) {\n+                entry.screenId = newScreenId;\n+\n+                // These values does not affect the item position, but we should set them\n+                // to something other than -1.\n+                entry.cellX = newScreenId;\n+                entry.cellY = 0;\n+\n+                update(entry);\n+            }\n+\n+            newScreenId++;\n+            if (newScreenId == mIdp.hotseatAllAppsRank) {\n+                newScreenId++;\n+            }\n+        }\n+    }\n+\n+    private void migrateWorkspace() throws Exception {\n+        mCarryOver = new ArrayList<>();\n+\n         ArrayList<Long> allScreens = LauncherModel.loadWorkspaceScreensDb(mContext);\n         if (allScreens.isEmpty()) {\n             throw new Exception(\"Unable to get workspace screens\");\n@@ -157,27 +268,6 @@ public class MigrateFromRestoreTask {\n             LauncherAppState.getInstance().getModel()\n                 .updateWorkspaceScreenOrder(mContext, allScreens);\n         }\n-\n-        // Update items\n-        mContext.getContentResolver().applyBatch(LauncherProvider.AUTHORITY, mUpdateOperations);\n-\n-        if (!mEntryToRemove.isEmpty()) {\n-            if (DEBUG) {\n-                Log.d(TAG, \"Removing items: \" + TextUtils.join(\", \", mEntryToRemove));\n-            }\n-            mContext.getContentResolver().delete(LauncherSettings.Favorites.CONTENT_URI,\n-                    Utilities.createDbSelectionQuery(\n-                            LauncherSettings.Favorites._ID, mEntryToRemove), null);\n-        }\n-\n-        // Make sure we haven't removed everything.\n-        final Cursor c = mContext.getContentResolver().query(\n-                LauncherSettings.Favorites.CONTENT_URI, null, null, null, null);\n-        boolean hasData = c.moveToNext();\n-        c.close();\n-        if (!hasData) {\n-            throw new Exception(\"Removed every thing during grid resize\");\n-        }\n     }\n \n     /**\n@@ -191,7 +281,7 @@ public class MigrateFromRestoreTask {\n      *      (otherwise they are placed on a new screen).\n      */\n     private void migrateScreen(long screenId) {\n-        ArrayList<DbEntry> items = loadEntries(screenId);\n+        ArrayList<DbEntry> items = loadWorkspaceEntries(screenId);\n \n         int removedCol = Integer.MAX_VALUE;\n         int removedRow = Integer.MAX_VALUE;\n@@ -329,7 +419,7 @@ public class MigrateFromRestoreTask {\n         return finalItems;\n     }\n \n-    @Thunk void markCells(boolean[][] occupied, DbEntry item, boolean val) {\n+    private void markCells(boolean[][] occupied, DbEntry item, boolean val) {\n         for (int i = item.cellX; i < (item.cellX + item.spanX); i++) {\n             for (int j = item.cellY; j < (item.cellY + item.spanY); j++) {\n                 occupied[i][j] = val;\n@@ -337,7 +427,7 @@ public class MigrateFromRestoreTask {\n         }\n     }\n \n-    @Thunk boolean isVacant(boolean[][] occupied, int x, int y, int w, int h) {\n+    private boolean isVacant(boolean[][] occupied, int x, int y, int w, int h) {\n         if (x + w > mTrgX) return false;\n         if (y + h > mTrgY) return false;\n \n@@ -545,10 +635,71 @@ public class MigrateFromRestoreTask {\n         }\n     }\n \n+    private ArrayList<DbEntry> loadHotseatEntries() {\n+        Cursor c =  mContext.getContentResolver().query(LauncherSettings.Favorites.CONTENT_URI,\n+                new String[]{\n+                        Favorites._ID,                  // 0\n+                        Favorites.ITEM_TYPE,            // 1\n+                        Favorites.INTENT,               // 2\n+                        Favorites.SCREEN},              // 3\n+                Favorites.CONTAINER + \" = \" + Favorites.CONTAINER_HOTSEAT, null, null, null);\n+\n+        final int indexId = c.getColumnIndexOrThrow(Favorites._ID);\n+        final int indexItemType = c.getColumnIndexOrThrow(Favorites.ITEM_TYPE);\n+        final int indexIntent = c.getColumnIndexOrThrow(Favorites.INTENT);\n+        final int indexScreen = c.getColumnIndexOrThrow(Favorites.SCREEN);\n+\n+        ArrayList<DbEntry> entries = new ArrayList<>();\n+        while (c.moveToNext()) {\n+            DbEntry entry = new DbEntry();\n+            entry.id = c.getLong(indexId);\n+            entry.itemType = c.getInt(indexItemType);\n+            entry.screenId = c.getLong(indexScreen);\n+\n+            if (entry.screenId >= mSrcHotseatSize) {\n+                mEntryToRemove.add(entry.id);\n+                continue;\n+            }\n+\n+            try {\n+                // calculate weight\n+                switch (entry.itemType) {\n+                    case Favorites.ITEM_TYPE_SHORTCUT:\n+                    case Favorites.ITEM_TYPE_APPLICATION: {\n+                        verifyIntent(c.getString(indexIntent));\n+                        entry.weight = entry.itemType == Favorites.ITEM_TYPE_SHORTCUT\n+                                ? WT_SHORTCUT : WT_APPLICATION;\n+                        break;\n+                    }\n+                    case Favorites.ITEM_TYPE_FOLDER: {\n+                        int total = getFolderItemsCount(entry.id);\n+                        if (total == 0) {\n+                            throw new Exception(\"Folder is empty\");\n+                        }\n+                        entry.weight = WT_FOLDER_FACTOR * total;\n+                        break;\n+                    }\n+                    default:\n+                        throw new Exception(\"Invalid item type\");\n+                }\n+            } catch (Exception e) {\n+                if (DEBUG) {\n+      ",
    "Modified syncrhonization blocks to use finer - grained locks . . git - svn - id : http : / / svn . igniterealtime . org / svn / repos / messenger / trunk @ 683 b35dd754 - fafc - 0310 - a699 - 88a17e54d16e": "diff --git a/src/java/org/jivesoftware/messenger/muc/spi/MultiUserChatServerImpl.java b/src/java/org/jivesoftware/messenger/muc/spi/MultiUserChatServerImpl.java\nindex abb0e5127..a06c39165 100644\n--- a/src/java/org/jivesoftware/messenger/muc/spi/MultiUserChatServerImpl.java\n+++ b/src/java/org/jivesoftware/messenger/muc/spi/MultiUserChatServerImpl.java\n@@ -268,7 +268,7 @@ public class MultiUserChatServerImpl extends BasicModule implements MultiUserCha\n \n     public MUCRoom getChatRoom(String roomName, JID userjid) throws UnauthorizedException {\n         MUCRoom room = null;\n-        synchronized (rooms) {\n+        synchronized (roomName.intern()) {\n             room = rooms.get(roomName.toLowerCase());\n             if (room == null) {\n                 room = new MUCRoomImpl(this, roomName, router);\n@@ -347,7 +347,7 @@ public class MultiUserChatServerImpl extends BasicModule implements MultiUserCha\n             throw new IllegalStateException(\"Not initialized\");\n         }\n         MUCUser user = null;\n-        synchronized (users) {\n+        synchronized (userjid.toString().intern()) {\n             user = users.get(userjid);\n     ",
    "Initialize sstables earlier to avoid NPE in CompactionIterator .": "diff --git a/src/java/org/apache/cassandra/db/compaction/CompactionIterator.java b/src/java/org/apache/cassandra/db/compaction/CompactionIterator.java\nindex 78bdfb019b..ec6a4d464c 100644\n--- a/src/java/org/apache/cassandra/db/compaction/CompactionIterator.java\n+++ b/src/java/org/apache/cassandra/db/compaction/CompactionIterator.java\n@@ -99,6 +99,9 @@ public class CompactionIterator extends CompactionInfo.Holder implements Unfilte\n             bytes += scanner.getLengthInBytes();\n         this.totalBytes = bytes;\n         this.mergeCounters = new long[scanners.size()];\n+        // note that we leak `this` from the constructor when calling beginCompaction below, this means we have to get the sstables before\n+        // calling that to avoid a NPE.\n+        sstables = scanners.stream().map(ISSTableScanner::getBackingSSTables).flatMap(Collection::stream).collect(ImmutableSet.toImmutableSet());\n         this.activeCompactions = activeCompactions == null ? ActiveCompactionsTracker.NOOP : activeCompactions;\n         this.activeCompactions.beginCompaction(this); // note that CompactionTask also calls this, but CT only creates CompactionIterator with a NOOP ActiveCompactions\n \n@@ -109,7 +112,6 @@ public class CompactionIterator extends CompactionInfo.Holder implements Unfilte\n         merged = Transformation.apply(merged, new Purger(controller, nowInSec));\n         merged = DuplicateRowChecker.duringCompaction(merged, type);\n         compacted = Transformation.apply(merged, new AbortableUnfilteredPartitionTransformation(this));\n-        sstables = scanners.stream().map(ISSTableScanner::getBackingSSTables).flatMap(Collection::stream).collect(ImmutableSet.toImmutableSet());\n     }\n \n     public TableMetadata metadata()",
    "add missing mappers .": "diff --git a/osgi-bundles/bundles/analytics/src/main/java/com/ning/billing/osgi/bundles/analytics/dao/BusinessDBIProvider.java b/osgi-bundles/bundles/analytics/src/main/java/com/ning/billing/osgi/bundles/analytics/dao/BusinessDBIProvider.java\nindex 09e89c98e8..ca2d73a6dc 100644\n--- a/osgi-bundles/bundles/analytics/src/main/java/com/ning/billing/osgi/bundles/analytics/dao/BusinessDBIProvider.java\n+++ b/osgi-bundles/bundles/analytics/src/main/java/com/ning/billing/osgi/bundles/analytics/dao/BusinessDBIProvider.java\n@@ -25,7 +25,21 @@ import org.skife.jdbi.v2.sqlobject.stringtemplate.StringTemplate3StatementLocato\n import org.skife.jdbi.v2.tweak.Argument;\n \n import com.ning.billing.commons.jdbi.mapper.LowerToCamelBeanMapperFactory;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessAccountFieldModelDao;\n import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessAccountModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessAccountTagModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessInvoiceAdjustmentModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessInvoiceFieldModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessInvoiceItemAdjustmentModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessInvoiceItemCreditModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessInvoiceItemModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessInvoiceModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessInvoicePaymentChargebackModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessInvoicePaymentFieldModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessInvoicePaymentRefundModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessInvoicePaymentTagModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessInvoiceTagModelDao;\n+import com.ning.billing.osgi.bundles.analytics.dao.model.BusinessOverdueStatusModelDao;\n \n import com.google.common.base.CaseFormat;\n \n@@ -36,7 +50,24 @@ public class BusinessDBIProvider {\n     public static DBI get(final DataSource dataSource) {\n         final DBI dbi = new DBI(dataSource);\n \n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessAccountFieldModelDao.class));\n         dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessAccountModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessAccountTagModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessInvoiceAdjustmentModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessInvoiceFieldModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessInvoiceItemAdjustmentModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessInvoiceItemCreditModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessInvoiceItemModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessInvoiceModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessInvoicePaymentChargebackModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessInvoicePaymentFieldModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessInvoicePaymentDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessInvoicePaymentRefundModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessInvoicePaymentTagModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessInvoiceTagModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessOverdueStatusModelDao.class));\n+        dbi.registerMapper(new LowerToCamelBeanMapperFactory(BusinessSubscriptionTransitionDao.class));\n+\n         dbi.setStatementLocator(new AnalyticsStatementLocator());\n \n         return dbi;",
    "add main ( ) method to tree tag updater": "diff --git a/src/edu/stanford/nlp/trees/TreebankTagUpdater.java b/src/edu/stanford/nlp/trees/TreebankTagUpdater.java\nindex 3c1c81ffe..f67338161 100644\n--- a/src/edu/stanford/nlp/trees/TreebankTagUpdater.java\n+++ b/src/edu/stanford/nlp/trees/TreebankTagUpdater.java\n@@ -2,7 +2,9 @@ package edu.stanford.nlp.trees;\n \n import edu.stanford.nlp.ling.*;\n import edu.stanford.nlp.tagger.maxent.*;\n+import edu.stanford.nlp.util.StringUtils;\n \n+import java.io.*;\n import java.util.*;\n import java.util.stream.*;\n \n@@ -42,4 +44,28 @@ public class TreebankTagUpdater {\n     }\n   }\n \n+  /** Read in a tree file, print out trees with updated tags **/\n+  public static void main(String[] args) throws IOException {\n+    // load properties\n+    Properties props = StringUtils.argsToProperties(args);\n+    String taggerPath = props.getProperty(\"tagger\");\n+    String treeFilePath = props.getProperty(\"treeFile\");\n+    // build tag updater\n+    TreebankTagUpdater updater = new TreebankTagUpdater(taggerPath);\n+    // read in trees, update, and print out updated tree\n+    // set up tree reader\n+    TreeFactory tf = new LabeledScoredTreeFactory();\n+    Reader r = new BufferedReader(new InputStreamReader(new FileInputStream(treeFilePath), \"UTF-8\"));\n+    TreeReader tr = new PennTreeReader(r, tf);\n+    Tree t = tr.readTree();\n+    while (t != null) {\n+      // update tree\n+      updater.tagTree(t);\n+      // print new updated tree\n+      System.out.println(t);\n+      // move on to next tree\n+      t = tr.readTree();\n+    }\n+  }\n+\n }"
}
{
    "Revert \\\" [ buck ] Buck to have . buckversion \\\" .": "diff --git a/.gitignore b/.gitignore\nindex 4f1483bcee..94e42a33fa 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -17,6 +17,7 @@ src/com/facebook/buck/intellij/ideabuck/third-party/*.iml\n /.buckd\n /.buckjavaargs.local\n /.bucklogging.local.properties\n+.buckversion\n .fakebuckversion\n /.nobuckcheck\n ",
    "Align code and GC some unused code .": "diff --git a/searchlib/src/vespa/searchlib/datastore/buffer_type.h b/searchlib/src/vespa/searchlib/datastore/buffer_type.h\nindex d937a60209b..b89aaa1bf84 100644\n--- a/searchlib/src/vespa/searchlib/datastore/buffer_type.h\n+++ b/searchlib/src/vespa/searchlib/datastore/buffer_type.h\n@@ -2,7 +2,7 @@\n \n #pragma once\n \n-#include <assert.h>\n+#include <cassert>\n #include <cstdint>\n #include <sys/types.h>\n \ndiff --git a/searchlib/src/vespa/searchlib/datastore/bufferstate.h b/searchlib/src/vespa/searchlib/datastore/bufferstate.h\nindex cd765b22a40..173d74b9e63 100644\n--- a/searchlib/src/vespa/searchlib/datastore/bufferstate.h\n+++ b/searchlib/src/vespa/searchlib/datastore/bufferstate.h\n@@ -2,14 +2,11 @@\n \n #pragma once\n \n-#include <vector>\n-#include <deque>\n-#include <vespa/vespalib/util/alloc.h>\n-#include <vespa/vespalib/util/array.h>\n-\n #include \"buffer_type.h\"\n #include \"entryref.h\"\n #include <vespa/vespalib/util/generationhandler.h>\n+#include <vespa/vespalib/util/alloc.h>\n+#include <vespa/vespalib/util/array.h>\n \n namespace search {\n namespace datastore {\n@@ -40,24 +37,24 @@ public:\n     };\n \n private:\n-    size_t _usedElems;\n-    size_t _allocElems;\n-    uint64_t _deadElems;\n-    State _state;\n-    bool  _disableElemHoldList;\n-    uint64_t _holdElems;\n+    size_t        _usedElems;\n+    size_t        _allocElems;\n+    uint64_t      _deadElems;\n+    State         _state;\n+    bool          _disableElemHoldList;\n+    uint64_t      _holdElems;\n     // Number of bytes that are heap allocated by elements that are stored in this buffer.\n     // For simple types this is 0.\n-    size_t _extraUsedBytes;\n+    size_t        _extraUsedBytes;\n     // Number of bytes that are heap allocated by elements that are stored in this buffer and is now on hold.\n     // For simple types this is 0.\n-    size_t _extraHoldBytes;\n-    FreeList _freeList;\n+    size_t        _extraHoldBytes;\n+    FreeList      _freeList;\n     FreeListList *_freeListList;\t// non-NULL if free lists are enabled\n \n     // NULL pointers if not on circular list of buffer states with free elems\n-    BufferState *_nextHasFree;\n-    BufferState *_prevHasFree;\n+    BufferState    *_nextHasFree;\n+    BufferState    *_prevHasFree;\n \n     BufferTypeBase *_typeHandler;\n     uint32_t        _typeId;\n@@ -83,9 +80,8 @@ public:\n      * @param sizeNeeded\tNumber of elements needed to be free\n      * @param buffer\t\tstart of buffer.\n      */\n-    void\n-    onActive(uint32_t bufferId, uint32_t typeId, BufferTypeBase *typeHandler,\n-             size_t sizeNeeded, void *&buffer);\n+    void onActive(uint32_t bufferId, uint32_t typeId, BufferTypeBase *typeHandler,\n+                  size_t sizeNeeded, void *&buffer);\n \n     /**\n      * Transition from ACTIVE to HOLD state.\ndiff --git a/searchlib/src/vespa/searchlib/datastore/datastore.hpp b/searchlib/src/vespa/searchlib/datastore/datastore.hpp\nindex 56db025c28c..f4d80795c87 100644\n--- a/searchlib/src/vespa/searchlib/datastore/datastore.hpp\n+++ b/searchlib/src/vespa/searchlib/datastore/datastore.hpp\n@@ -30,7 +30,7 @@ void\n DataStoreT<RefT>::freeElem(EntryRef ref, uint64_t len)\n {\n     RefType intRef(ref);\n-    BufferState &state = _states[intRef.bufferId()];\n+    BufferState &state = getBufferState(intRef.bufferId());\n     if (state.isActive()) {\n         if (state.freeListList() != NULL && len == state.getClusterSize()) {\n             if (state.freeList().empty()) {\n@@ -54,7 +54,7 @@ DataStoreT<RefT>::holdElem(EntryRef ref, uint64_t len, size_t extraBytes)\n {\n     RefType intRef(ref);\n     uint64_t alignedLen = RefType::align(len);\n-    BufferState &state = _states[intRef.bufferId()];\n+    BufferState &state = getBufferState(intRef.bufferId());\n     assert(state.isActive());\n     if (state.hasDisabledElemHoldList()) {\n         state.incDeadElems(alignedLen);\n@@ -79,7 +79,7 @@ DataStoreT<RefT>::trimElemHoldList(generation_t usedGen)\n         if (static_cast<sgeneration_t>(it->_generation - usedGen) >= 0)\n             break;\n         RefType intRef(it->_ref);\n-        BufferState &state = _states[intRef.bufferId()];\n+        BufferState &state = getBufferState(intRef.bufferId());\n         freeElem(it->_ref, it->_len);\n         state.decHoldElems(it->_len);\n         ++freed;\n@@ -100,7 +100,7 @@ DataStoreT<RefT>::clearElemHoldList(void)\n     ElemHold2List::iterator ite(elemHold2List.end());\n     for (; it != ite; ++it) {\n         RefType intRef(it->_ref);\n-        BufferState &state = _states[intRef.bufferId()];\n+        BufferState &state = getBufferState(intRef.bufferId());\n         freeElem(it->_ref, it->_len);\n         state.decHoldElems(it->_len);\n     }\ndiff --git a/searchlib/src/vespa/searchlib/datastore/datastorebase.cpp b/searchlib/src/vespa/searchlib/datastore/datastorebase.cpp\nindex 5a99db4c305..e73dcb2d43a 100644\n--- a/searchlib/src/vespa/searchlib/datastore/datastorebase.cpp\n+++ b/searchlib/src/vespa/searchlib/datastore/datastorebase.cpp\n@@ -75,9 +75,9 @@ public:\n };\n \n \n-DataStoreBase::DataStoreBase(uint32_t numBuffers,\n-                             size_t maxClusters)\n+DataStoreBase::DataStoreBase(uint32_t numBuffers, size_t maxClusters)\n     : _buffers(numBuffers),\n+      _typeIds(numBuffers),\n       _activeBufferIds(),\n       _states(numBuffers),\n       _typeHandlers(),\n@@ -160,18 +160,6 @@ DataStoreBase::addType(BufferTypeBase *typeHandler)\n     return typeId;\n }\n \n-uint32_t\n-DataStoreBase::getNumActiveBuffers() const\n-{\n-    uint32_t result = 0;\n-    for (const auto &state : _states) {\n-        if (state.isActive()) {\n-            ++result;\n-        }\n-    }\n-    return result;\n-}\n-\n void\n DataStoreBase::transferElemHoldList(generation_t generation)\n {\n@@ -373,8 +361,7 @@ DataStoreBase::getAddressSpaceUsage() const\n }\n \n void\n-DataStoreBase::onActive(uint32_t bufferId, uint32_t typeId,\n-                        size_t sizeNeeded)\n+DataStoreBase::onActive(uint32_t bufferId, uint32_t typeId, size_t sizeNeeded)\n {\n     assert(typeId < _typeHandlers.size());\n     assert(bufferId < _numBuffers);\ndiff --git a/searchlib/src/vespa/searchlib/datastore/datastorebase.h b/searchlib/src/vespa/searchlib/datastore/datastorebase.h\nindex ed28cf0fa8c..c6aa098cb9f 100644\n--- a/searchlib/src/vespa/searchlib/datastore/datastorebase.h\n+++ b/searchlib/src/vespa/searchlib/datastore/datastorebase.h\n@@ -7,6 +7,7 @@\n #include <vespa/searchlib/util/memoryusage.h>\n #include <vespa/searchlib/common/address_space.h>\n #include <vector>\n+#include <deque>\n \n namespace search {\n namespace datastore {\n@@ -36,6 +37,9 @@ protected:\n     typedef vespalib::GenerationHandler::sgeneration_t sgeneration_t;\n \n     std::vector<void *>   _buffers; // For fast mapping with known types\n+private:\n+    std::vector<uint32_t> _typeIds; // Cached,compact access to frequently used typeId\n+protected:\n     std::vector<uint32_t> _activeBufferIds; // typeId -> active buffer\n \n     // Hold list at freeze, when knowing how long elements must be held\n@@ -121,8 +125,9 @@ public:\n         }\n     };\n \n-protected:\n+private:\n     std::vector<BufferState> _states;\n+protected:\n     std::vector<BufferTypeBase *> _typeHandlers; // TypeId -> handler\n \n     std::vector<BufferState::FreeListList> _freeListLists;\n@@ -132,8 +137,8 @@ protected:\n     ElemHold1List _elemHold1List;\n     ElemHold2List _elemHold2List;\n \n-    uint32_t _numBuffers;\n-    size_t _maxClusters;\n+    const uint32_t _numBuffers;\n+    const size_t   _maxClusters;\n \n     vespalib::GenerationHolder _genHolder;\n \n@@ -220,15 +225,9 @@ public:\n      * Get active buffer id for the given type id.\n      */\n     uint32_t getActiveBufferId(uint32_t typeId) const { return _activeBufferIds[typeId]; }\n-\n     const BufferState &getBufferState(uint32_t bufferId) const { return _states[bufferId]; }\n-\n     BufferState &getBufferState(uint32_t bufferId) { return _states[bufferId]; }\n-\n     uint32_t getNumBuffers() const { return _numBuffers; }\n-\n-    uint32_t getNumActiveBuffers() const;\n-\n     bool hasElemHold1() const { return !_elemHold1List.empty(); }\n \n     /**",
    "Add ContentValues factory method from pairs .": "diff --git a/core/ktx/src/androidTest/java/androidx/content/ContentValuesTest.kt b/core/ktx/src/androidTest/java/androidx/content/ContentValuesTest.kt\nnew file mode 100644\nindex 00000000000..ee5eea36385\n--- /dev/null\n+++ b/core/ktx/src/androidTest/java/androidx/content/ContentValuesTest.kt\n@@ -0,0 +1,58 @@\n+/*\n+ * Copyright (C) 2018 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package androidx.content\n+\n+import androidx.assertThrows\n+import org.junit.Assert.assertArrayEquals\n+import org.junit.Assert.assertEquals\n+import org.junit.Assert.assertNull\n+import org.junit.Test\n+import java.util.concurrent.atomic.AtomicInteger\n+\n+class ContentValuesTest {\n+    @Test fun valuesOfValid() {\n+        val values = contentValuesOf(\n+                \"null\" to null,\n+                \"string\" to \"string\",\n+                \"byte\" to 1.toByte(),\n+                \"short\" to 1.toShort(),\n+                \"int\" to 1,\n+                \"long\" to 1L,\n+                \"float\" to 1f,\n+                \"double\" to 1.0,\n+                \"boolean\" to true,\n+                \"byteArray\" to byteArrayOf()\n+        )\n+        assertEquals(10, values.size())\n+        assertNull(values.get(\"null\"))\n+        assertEquals(\"string\", values.get(\"string\"))\n+        assertEquals(1.toByte(), values.get(\"byte\"))\n+        assertEquals(1.toShort(), values.get(\"short\"))\n+        assertEquals(1, values.get(\"int\"))\n+        assertEquals(1L, values.get(\"long\"))\n+        assertEquals(1f, values.get(\"float\"))\n+        assertEquals(1.0, values.get(\"double\"))\n+        assertEquals(true, values.get(\"boolean\"))\n+        assertArrayEquals(byteArrayOf(), values.get(\"byteArray\") as ByteArray)\n+    }\n+\n+    @Test fun valuesOfInvalid() {\n+        assertThrows<IllegalArgumentException> {\n+            contentValuesOf(\"nope\" to AtomicInteger(1))\n+        }.hasMessageThat().isEqualTo(\"Illegal value type java.util.concurrent.atomic.AtomicInteger for key \\\"nope\\\"\")\n+    }\n+}\ndiff --git a/core/ktx/src/main/java/androidx/content/ContentValues.kt b/core/ktx/src/main/java/androidx/content/ContentValues.kt\nnew file mode 100644\nindex 00000000000..41b6f203c64\n--- /dev/null\n+++ b/core/ktx/src/main/java/androidx/content/ContentValues.kt\n@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (C) 2018 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package androidx.content\n+\n+import android.content.ContentValues\n+\n+/** Returns a new [ContentValues] with the given key/value pairs as elements. */\n+fun contentValuesOf(vararg pairs: Pair<String, Any?>) = ContentValues(pairs.size).apply {\n+    for ((key, value) in pairs) {\n+        when (value) {\n+            null -> putNull(key)\n+            is String -> put(key, value)\n+            is Int -> put(key, value)\n+            is Long -> put(key, value)\n+            is Boolean -> put(key, value)\n+            is Float -> put(key, value)\n+            is Double -> put(key, value)\n+            is ByteArray -> put(key, value)\n+            is Byte -> put(key, value)\n+            is Short -> put(key, value)\n+            else -> {\n+                val valueType = value.javaClass.canonicalName\n+                throw IllegalArgumentException(\"Illegal value type $valueType for key \\\"$key\\\"\")\n+            }\n+        }\n+    }\n+}",
    "Add information to execution plan toString ( ) ( filter clusters on index search )": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/sql/executor/GetValueFromIndexEntryStep.java b/core/src/main/java/com/orientechnologies/orient/core/sql/executor/GetValueFromIndexEntryStep.java\nindex edde63476a..e087e8d3ad 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/sql/executor/GetValueFromIndexEntryStep.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/sql/executor/GetValueFromIndexEntryStep.java\n@@ -5,8 +5,10 @@ import com.orientechnologies.orient.core.command.OCommandContext;\n import com.orientechnologies.orient.core.db.record.OIdentifiable;\n import com.orientechnologies.orient.core.id.ORID;\n \n+import java.util.Arrays;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.stream.Collectors;\n \n /**\n  * Created by luigidellaquila on 16/03/17.\n@@ -161,6 +163,13 @@ public class GetValueFromIndexEntryStep extends AbstractExecutionStep {\n     if (profilingEnabled) {\n       result += \" (\" + getCostFormatted() + \")\";\n     }\n+    if (filterClusterIds != null) {\n+      result += \"\\n\";\n+      result += spaces;\n+      result += \"  filter clusters [\";\n+      result += Arrays.asList(filterClusterIds).stream().map(x -> \"\" + x).collect(Collectors.joining(\",\"));\n+      result += \"]\";\n+    }\n     return result;\n   }\n ",
    "Improves error messages in AvroReader and FileBasedReader when filepattern matches .": "diff --git a/sdk/src/main/java/com/google/cloud/dataflow/sdk/runners/worker/AvroReader.java b/sdk/src/main/java/com/google/cloud/dataflow/sdk/runners/worker/AvroReader.java\nindex cf51cc7344..92c3492e21 100644\n--- a/sdk/src/main/java/com/google/cloud/dataflow/sdk/runners/worker/AvroReader.java\n+++ b/sdk/src/main/java/com/google/cloud/dataflow/sdk/runners/worker/AvroReader.java\n@@ -28,6 +28,7 @@ import org.apache.avro.file.DataFileReader;\n import org.apache.avro.file.SeekableInput;\n import org.apache.avro.io.DatumReader;\n \n+import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.nio.ByteBuffer;\n import java.nio.channels.ReadableByteChannel;\n@@ -70,16 +71,20 @@ public class AvroReader<T> extends Reader<WindowedValue<T>> {\n   public ReaderIterator<WindowedValue<T>> iterator(DatumReader<T> datumReader) throws IOException {\n     IOChannelFactory factory = IOChannelUtils.getFactory(filename);\n     Collection<String> inputs = factory.match(filename);\n+    if (inputs.isEmpty()) {\n+      throw new FileNotFoundException(\"No match for file pattern '\" + filename + \"'\");\n+    }\n \n     if (inputs.size() == 1) {\n       String input = inputs.iterator().next();\n       ReadableByteChannel reader = factory.open(input);\n       return new AvroFileIterator(datumReader, input, reader, startPosition, endPosition);\n-\n     } else {\n       if (startPosition != null || endPosition != null) {\n-        throw new UnsupportedOperationException(\n-            \"Unable to apply range limits to multiple-input stream: \" + filename);\n+        throw new IllegalArgumentException(\n+            \"Offset range specified: [\" + startPosition + \", \" + endPosition + \"), so \"\n+            + \"an exact filename was expected, but more than 1 file matched \\\"\" + filename\n+            + \"\\\" (total \" + inputs.size() + \"): apparently a filepattern was given.\");\n       }\n       return new AvroFileMultiIterator(datumReader, factory, inputs.iterator());\n     }\ndiff --git a/sdk/src/main/java/com/google/cloud/dataflow/sdk/runners/worker/FileBasedReader.java b/sdk/src/main/java/com/google/cloud/dataflow/sdk/runners/worker/FileBasedReader.java\nindex d9e8bd2ab0..f55165c4e5 100644\n--- a/sdk/src/main/java/com/google/cloud/dataflow/sdk/runners/worker/FileBasedReader.java\n+++ b/sdk/src/main/java/com/google/cloud/dataflow/sdk/runners/worker/FileBasedReader.java\n@@ -35,6 +35,7 @@ import org.slf4j.LoggerFactory;\n \n import java.io.BufferedInputStream;\n import java.io.ByteArrayOutputStream;\n+import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.PushbackInputStream;\n@@ -98,13 +99,15 @@ public abstract class FileBasedReader<T> extends Reader<T> {\n     IOChannelFactory factory = IOChannelUtils.getFactory(filename);\n     Collection<String> inputs = factory.match(filename);\n     if (inputs.isEmpty()) {\n-      throw new IOException(\"No match for file pattern '\" + filename + \"'\");\n+      throw new FileNotFoundException(\"No match for file pattern '\" + filename + \"'\");\n     }\n \n     if (startPosition != null || endPosition != null) {\n       if (inputs.size() != 1) {\n-        throw new UnsupportedOperationException(\n-            \"Unable to apply range limits to multiple-input stream: \" + filename);\n+        throw new IllegalArgumentException(\n+            \"Offset range specified: [\" + startPosition + \", \" + endPosition + \"), so \"\n+            + \"an exact filename was expected, but more than 1 file matched \\\"\" + filename\n+            + \"\\\" (total \" + inputs.size() + \"): apparently a filepattern was given.\");\n       }\n \n       return newReaderIteratorForRangeInFile(factory, inputs.iterator().next(),\ndiff --git a/sdk/src/test/java/com/google/cloud/dataflow/sdk/runners/worker/AvroReaderTest.java b/sdk/src/test/java/com/google/cloud/dataflow/sdk/runners/worker/AvroReaderTest.java\nindex d5ea3b8266..957da90ab5 100644\n--- a/sdk/src/test/java/com/google/cloud/dataflow/sdk/runners/worker/AvroReaderTest.java\n+++ b/sdk/src/test/java/com/google/cloud/dataflow/sdk/runners/worker/AvroReaderTest.java\n@@ -31,11 +31,13 @@ import org.apache.avro.io.DatumWriter;\n import org.junit.Assert;\n import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n import org.junit.rules.TemporaryFolder;\n import org.junit.runner.RunWith;\n import org.junit.runners.JUnit4;\n \n import java.io.File;\n+import java.io.FileNotFoundException;\n import java.io.OutputStream;\n import java.nio.channels.Channels;\n import java.util.ArrayList;\n@@ -52,6 +54,8 @@ import javax.annotation.Nullable;\n public class AvroReaderTest {\n   @Rule\n   public TemporaryFolder tmpFolder = new TemporaryFolder();\n+  @Rule\n+  public ExpectedException expectedException = ExpectedException.none();\n \n   private <T> void runTestRead(\n       List<List<T>> elemsList, AvroCoder<T> coder, boolean requireExactMatch) throws Exception {\n@@ -179,6 +183,25 @@ public class AvroReaderTest {\n         false/* don't require exact match */);\n   }\n \n+  @Test\n+  public void testErrorOnFileNotFound() throws Exception {\n+    expectedException.expect(FileNotFoundException.class);\n+    readElems(\"file-not-found\", 0L, 100L, AvroCoder.of(String.class), new ArrayList<Integer>());\n+  }\n+\n+  @Test\n+  public void testErrorOnMultipleFiles() throws Exception {\n+    File file1 = tmpFolder.newFile(\"foo1.avro\");\n+    File file2 = tmpFolder.newFile(\"foo2.avro\");\n+    Channels.newOutputStream(IOChannelUtils.create(file1.getPath(), MimeTypes.BINARY)).close();\n+    Channels.newOutputStream(IOChannelUtils.create(file2.getPath(), MimeTypes.BINARY)).close();\n+\n+    expectedException.expect(IllegalArgumentException.class);\n+    expectedException.expectMessage(\"more than 1 file matched\");\n+    readElems(new File(tmpFolder.getRoot(), \"*\").getPath(), 0L, 100L,\n+        AvroCoder.of(String.class), new ArrayList<Integer>());\n+  }\n+\n   // TODO: sharded filenames\n   // TODO: reading from GCS\n }\ndiff --git a/sdk/src/test/java/com/google/cloud/dataflow/sdk/runners/worker/TextReaderTest.java b/sdk/src/test/java/com/google/cloud/dataflow/sdk/runners/worker/TextReaderTest.java\nindex ea7a3e5c37..857f0b66bd 100644\n--- a/sdk/src/test/java/com/google/cloud/dataflow/sdk/runners/worker/TextReaderTest.java\n+++ b/sdk/src/test/java/com/google/cloud/dataflow/sdk/runners/worker/TextReaderTest.java\n@@ -38,6 +38,8 @@ import com.google.cloud.dataflow.sdk.coders.TextualIntegerCoder;\n import com.google.cloud.dataflow.sdk.io.TextIO;\n import com.google.cloud.dataflow.sdk.io.TextIO.CompressionType;\n import com.google.cloud.dataflow.sdk.util.CoderUtils;\n+import com.google.cloud.dataflow.sdk.util.IOChannelUtils;\n+import com.google.cloud.dataflow.sdk.util.MimeTypes;\n import com.google.cloud.dataflow.sdk.util.common.worker.ExecutorTestUtils;\n import com.google.cloud.dataflow.sdk.util.common.worker.Reader;\n \n@@ -45,15 +47,18 @@ import org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream\n import org.hamcrest.Matchers;\n import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n import org.junit.rules.TemporaryFolder;\n import org.junit.runner.RunWith;\n import org.junit.runners.JUnit4;\n \n import java.io.File;\n+import java.io.FileNotFoundException;\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.OutputStream;\n import java.io.PrintStream;\n+import java.nio.channels.Channels;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.LinkedList;\n@@ -79,6 +84,8 @@ public class TextReaderTest {\n \n   @Rule\n   public TemporaryFolder tmpFolder = new TemporaryFolder();\n+  @Rule\n+  public ExpectedException expectedException = ExpectedException.none();\n \n   private File initTestFile() throws IOException {\n     File tmpFile = tmpFolder.newFile();\n@@ -651,6 +658,29 @@ public class TextReaderTest {\n     }\n   }\n \n+  @Test\n+  public void testErrorOnFileNotFound() throws Exception {\n+    expectedException.expect(FileNotFoundException.class);\n+    TextReader<String> textReader = new TextReader<>(\n+        \"file-not-found\", true, 0L, 100L,\n+        StringUtf8Coder.of(), TextIO.CompressionType.UNCOMPRESSED);\n+    textReader.iterator();\n+  }\n+\n+  @Test\n+  public void testErrorOnMultipleFiles() throws Exception {\n+    File file1 = tmpFolder.newFile(\"foo1.avro\");\n+    File file2 = tmpFolder.newFile(\"foo2.avro\");\n+    Channels.newOutputStream(IOChannelUtils.create(file1.getPath(), MimeTypes.BINARY)).close();\n+    Channels.newOutputStream(IOChannelUtils.create(file2.getPath(), MimeTypes.BINARY)).close();\n+    TextReader<String> textReader = new TextReader<>(\n+        new File(tmpFolder.getRoot(), \"*\").getPath(), true, 0L, 100L,\n+        StringUtf8Coder.of(), TextIO.CompressionType.UNCOMPRESSED);\n+    expectedException.expect(IllegalArgumentException.class);\n+    expectedException.expectMessage(\"more than 1 file matched\");\n+    textReader.iterator();\n+  }\n+\n   // TODO: sharded filenames\n   // TODO: reading from GCS\n }",
    "Improve split index identification": "diff --git a/cli/ballerina-launcher/src/main/java/org/ballerinalang/launcher/Main.java b/cli/ballerina-launcher/src/main/java/org/ballerinalang/launcher/Main.java\nindex 7007f5522e9..27f92067323 100644\n--- a/cli/ballerina-launcher/src/main/java/org/ballerinalang/launcher/Main.java\n+++ b/cli/ballerina-launcher/src/main/java/org/ballerinalang/launcher/Main.java\n@@ -323,15 +323,27 @@ public class Main {\n          * @return  the index of the colon to split at\n          */\n         private int getSourceFunctionSplitIndex(Path sourceRootPath, String programArg) {\n-            int indexOfColon = programArg.indexOf(COLON);\n-            while (indexOfColon != -1) {\n-                String potentialPath = programArg.substring(0, indexOfColon);\n+            String[] programArgConstituents = programArg.split(COLON);\n+            int index = programArgConstituents.length - 1;\n+\n+            String potentialFunction = programArgConstituents[index];\n+            String potentialPath = programArg.replace(COLON.concat(potentialFunction), \"\");\n+            if (Files.exists(sourceRootPath.resolve(potentialPath))) {\n+                return potentialPath.length();\n+            }\n+            index--;\n+\n+            while (index != -1) {\n+                potentialFunction = programArgConstituents[index].concat(COLON).concat(potentialFunction);\n+                potentialPath = programArg.replace(COLON.concat(potentialFunction), \"\");\n+\n                 if (Files.exists(sourceRootPath.resolve(potentialPath))) {\n-                    return indexOfColon;\n+                    return potentialPath.length();\n                 }\n-                indexOfColon = programArg.indexOf(COLON, indexOfColon + 1);\n+\n+                index--;\n             }\n-            return indexOfColon;\n+            return index;\n         }\n     }\n \ndiff --git a/tests/ballerina-tools-integration-test/src/test/java/org/ballerinalang/test/run/BalRunFunctionNegativeTestCase.java b/tests/ballerina-tools-integration-test/src/test/java/org/ballerinalang/test/run/BalRunFunctionNegativeTestCase.java\nindex dddf1fae665..9678c8a6d12 100644\n--- a/tests/ballerina-tools-integration-test/src/test/java/org/ballerinalang/test/run/BalRunFunctionNegativeTestCase.java\n+++ b/tests/ballerina-tools-integration-test/src/test/java/org/ballerinalang/test/run/BalRunFunctionNegativeTestCase.java\n@@ -40,9 +40,9 @@ public class BalRunFunctionNegativeTestCase extends BaseTest {\n     private String sourceRootPath = \"src/test/resources/run/file/\";\n \n     @Test\n-    public void testEmptyEntryFunctionName() throws BallerinaTestException {\n+    public void testInvalidSourceArg() throws BallerinaTestException {\n         String sourceArg = (new File(sourceRootPath + \"test_entry_function.bal\")).getAbsolutePath() + \":\";\n-        LogLeecher errLogLeecher = new LogLeecher(\"ballerina: expected function name after final ':'\",\n+        LogLeecher errLogLeecher = new LogLeecher(\"error: no ballerina source files found in module \" + sourceArg,\n                 LeecherType.ERROR);\n         balClient.runMain(sourceArg, new LogLeecher[]{errLogLeecher});\n         errLogLeecher.waitForText(2000);\ndiff --git a/tests/ballerina-tools-integration-test/src/test/java/org/ballerinalang/test/run/BalxRunFunctionNegativeTestCase.java b/tests/ballerina-tools-integration-test/src/test/java/org/ballerinalang/test/run/BalxRunFunctionNegativeTestCase.java\nindex ae477da102b..7b2b5b84aa7 100644\n--- a/tests/ballerina-tools-integration-test/src/test/java/org/ballerinalang/test/run/BalxRunFunctionNegativeTestCase.java\n+++ b/tests/ballerina-tools-integration-test/src/test/java/org/ballerinalang/test/run/BalxRunFunctionNegativeTestCase.java\n@@ -65,10 +65,10 @@ public class BalxRunFunctionNegativeTestCase extends BaseTest {\n     }\n \n     @Test\n-    public void testEmptyEntryFunctionName() throws BallerinaTestException {\n+    public void testInvalidSourceArg() throws BallerinaTestException {\n         String sourceArg = balxPath + \":\";\n-        LogLeecher errLogLeecher = new LogLeecher(\"ballerina: expected function name after final ':'\",\n-                LeecherType.ERROR);\n+        LogLeecher errLogLeecher = new LogLeecher(\"error: no ballerina source files found in module \" + balxPath +\n+                                                          \":\", LeecherType.ERROR);\n         balClient.runMain(sourceArg, new LogLeecher[]{errLogLeecher});\n         errLogLeecher.waitForText(2000);\n     }\ndiff --git a/tests/ballerina-tools-integration-test/src/test/java/org/ballerinalang/test/run/PkgRunFunctionNegativeTestCase.java b/tests/ballerina-tools-integration-test/src/test/java/org/ballerinalang/test/run/PkgRunFunctionNegativeTestCase.java\nindex bc0f716f050..3db4fbed311 100644\n--- a/tests/ballerina-tools-integration-test/src/test/java/org/ballerinalang/test/run/PkgRunFunctionNegativeTestCase.java\n+++ b/tests/ballerina-tools-integration-test/src/test/java/org/ballerinalang/test/run/PkgRunFunctionNegativeTestCase.java\n@@ -40,10 +40,10 @@ public class PkgRunFunctionNegativeTestCase extends BaseTest {\n     private String sourceRoot = (new File(\"src/test/resources/run/package/\")).getAbsolutePath();\n \n     @Test\n-    public void testEmptyEntryFunctionName() throws BallerinaTestException {\n+    public void testInvalidSourceArg() throws BallerinaTestException {\n         String sourceArg = \"entry:\";\n-        LogLeecher errLogLeecher = new LogLeecher(\"ballerina: expected function name after final ':'\",\n-                LeecherType.ERROR);\n+        LogLeecher errLogLeecher = new LogLeecher(\"error: no ballerina source files found in module \" +\n+                   ",
    "Rendering / caret errors with HTMLDocument .": "diff --git a/jdk/src/java.desktop/share/classes/javax/swing/text/html/HTMLDocument.java b/jdk/src/java.desktop/share/classes/javax/swing/text/html/HTMLDocument.java\nindex 1166f569728..a981e87f304 100644\n--- a/jdk/src/java.desktop/share/classes/javax/swing/text/html/HTMLDocument.java\n+++ b/jdk/src/java.desktop/share/classes/javax/swing/text/html/HTMLDocument.java\n@@ -1400,8 +1400,13 @@ public void insertAfterEnd(Element elem, String htmlText) throws\n             Element parent = elem.getParentElement();\n \n             if (parent != null) {\n+                // If we are going to insert the string into the body\n+                // section, it is necessary to set the corrsponding flag.\n+                if (HTML.Tag.BODY.name.equals(parent.getName())) {\n+                    insertInBody = true;\n+                }\n                 int offset = elem.getEndOffset();\n-                if (offset > getLength()) {\n+                if (offset > (getLength() + 1)) {\n                     offset--;\n                 }\n                 else if (elem.isLeaf() && getText(offset - 1, 1).\n@@ -1409,6 +1414,10 @@ else if (elem.isLeaf() && getText(offset - 1, 1).\n                     offset--;\n                 }\n                 insertHTML(parent, offset, htmlText, false);\n+                // Cleanup the flag, if any.\n+                if (insertInBody) {\n+                    insertInBody = false;\n+                }\n             }\n         }\n     }\n@@ -1846,6 +1855,11 @@ String getBaseTarget() {\n \n     private static char[] NEWLINE;\n \n+    /**\n+     * Indicates that direct insertion to body section takes place.\n+     */\n+    private boolean insertInBody = false;\n+\n     /**\n      * I18N property key.\n      *\n@@ -2610,7 +2624,9 @@ public void handleText(char[] data, int pos) {\n                     // Assume content should be added.\n                     foundInsertTag(false);\n                     foundInsertTag = true;\n-                    inParagraph = impliedP = true;\n+                    // If content is added directly to the body, it should\n+                    // be wrapped by p-implied.\n+                    inParagraph = impliedP = !insertInBody;\n                 }\n                 if (data.length >= 1) {\n                     addContent(data, 0, data.length);\ndiff --git a/jdk/test/javax/swing/text/html/HTMLDocument/8058120/bug8058120.java b/jdk/test/javax/swing/text/html/HTMLDocument/8058120/bug8058120.java\nnew file mode 100644\nindex 00000000000..2378fd2e334\n--- /dev/null\n+++ b/jdk/test/javax/swing/text/html/HTMLDocument/8058120/bug8058120.java\n@@ -0,0 +1,109 @@\n+/*\n+ * Copyright (c) 2014, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+/* @test\n+ * @bug 8058120\n+ * @summary Rendering / caret errors with HTMLDocument\n+ * @author Dmitry Markov\n+ * @run main bug8058120\n+ */\n+\n+import sun.awt.SunToolkit;\n+\n+import javax.swing.*;\n+import javax.swing.text.Element;\n+import javax.swing.text.html.HTML;\n+import javax.swing.text.html.HTMLDocument;\n+import javax.swing.text.html.HTMLEditorKit;\n+import java.awt.*;\n+\n+public class bug8058120 {\n+    private static SunToolkit toolkit = (SunToolkit) Toolkit.getDefaultToolkit();\n+    private static HTMLDocument document = null;\n+    private static final String text = \"<p id = 'ab'>ab</p>\";\n+    private static final String textToInsert = \"c\";\n+\n+    public static void main(String[] args) {\n+        SwingUtilities.invokeLater(new Runnable() {\n+            @Override\n+            public void run() {\n+                createAndShowGUI();\n+            }\n+        });\n+\n+        toolkit.realSync();\n+\n+        SwingUtilities.invokeLater(new Runnable() {\n+            @Override\n+            public void run() {\n+                try {\n+                    document.insertAfterEnd(document.getElement(\"ab\"), textToInsert);\n+                } catch (Exception ex) {\n+                    throw new RuntimeException(ex);\n+                }\n+            }\n+        });\n+\n+        toolkit.realSync();\n+\n+        SwingUtilities.invokeLater(new Runnable() {\n+            @Override\n+            public void run() {\n+                Element parent = document.getElement(\"ab\").getParentElement();\n+                int count = parent.getElementCount();\n+                if (count != 2) {\n+                    throw new RuntimeException(\"Test Failed! Unexpected Element count = \"+count);\n+                }\n+         ",
    "Fix the remaining problems with new BeanPropertyMap impl": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\nindex 9a8107208..6f1871557 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\n@@ -533,7 +533,7 @@ public abstract class BeanPropertyMap\n             // and allocate enough to contain primary/secondary, expand for spillovers as need be\n             int alloc = size + (size>>1);\n             String[] keys = new String[alloc];\n-            SettableBeanProperty[] fieldHash = new SettableBeanProperty[alloc];\n+            SettableBeanProperty[] propHash = new SettableBeanProperty[alloc];\n             int spills = 0;\n \n             for (SettableBeanProperty prop : props) {\n@@ -555,15 +555,21 @@ public abstract class BeanPropertyMap\n                         ++spills;\n                         if (slot >= keys.length) {\n                             keys = Arrays.copyOf(keys, keys.length + 4);\n-                            fieldHash = Arrays.copyOf(fieldHash, fieldHash.length + 4);\n+                            propHash = Arrays.copyOf(propHash, propHash.length + 4);\n                         }\n                     }\n                 }\n+//System.err.println(\" add '\"+key+\" at #\"+slot+\" (hashed at \"+(key.hashCode() & _hashMask)+\")\");             \n                 keys[slot] = key;\n-                fieldHash[slot] = prop;\n+                propHash[slot] = prop;\n             }\n+/*\n+for (int i = 0; i < keys.length; ++i) {\n+    System.err.printf(\"#%02d: %s\\n\", i, (keys[i] == null) ? \"-\" : keys[i]);\n+}\n+*/\n             _keys = keys;\n-            _propsHash = fieldHash;\n+            _propsHash = propHash;\n             _spillCount = spills;\n         }\n \n@@ -620,14 +626,15 @@ public abstract class BeanPropertyMap\n             // If not, append\n \n             int slot = key.hashCode() & _hashMask;\n+            int hashSize = _hashMask+1;\n \n             // primary slot not free?\n             if (_keys[slot] != null) {\n                 // secondary?\n-                slot = _size + (slot >> 1);\n+                slot = hashSize + (slot >> 1);\n                 if (_keys[slot] != null) {\n                     // ok, spill over.\n-                    slot = _size + (_size >> 1) + _spillCount;\n+            ",
    "Reset eTag so that capability get parsed again , so status is set .": "diff --git a/src/main/java/com/owncloud/android/db/ProviderMeta.java b/src/main/java/com/owncloud/android/db/ProviderMeta.java\nindex ce29ce0619..e7e6d11c64 100644\n--- a/src/main/java/com/owncloud/android/db/ProviderMeta.java\n+++ b/src/main/java/com/owncloud/android/db/ProviderMeta.java\n@@ -35,7 +35,7 @@ import java.util.List;\n  */\n public class ProviderMeta {\n     public static final String DB_NAME = \"filelist\";\n-    public static final int DB_VERSION = 60;\n+    public static final int DB_VERSION = 61;\n \n     private ProviderMeta() {\n         // No instance\ndiff --git a/src/main/java/com/owncloud/android/providers/FileContentProvider.java b/src/main/java/com/owncloud/android/providers/FileContentProvider.java\nindex 2a54561626..c11c73c555 100644\n--- a/src/main/java/com/owncloud/android/providers/FileContentProvider.java\n+++ b/src/main/java/com/owncloud/android/providers/FileContentProvider.java\n@@ -2288,6 +2288,23 @@ public class FileContentProvider extends ContentProvider {\n             if (!upgraded) {\n                 Log_OC.i(SQL, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n             }\n+\n+            if (oldVersion < 61 && newVersion >= 61) {\n+                Log_OC.i(SQL, \"Entering in the #61 reset eTag to force capability refresh\");\n+                db.beginTransaction();\n+                try {\n+                    db.execSQL(\"UPDATE capabilities SET etag = '' WHERE 1=1\");\n+\n+                    upgraded = true;\n+                    db.setTransactionSuccessful();\n+                } finally {\n+                    db.endTransaction();\n+            ",
    "Adds nose back under packages needed for testing .": "diff --git a/sdks/python/container/base_image_requirements.txt b/sdks/python/container/base_image_requirements.txt\nindex 49375dc31e..f3d9b86221 100644\n--- a/sdks/python/container/base_image_requirements.txt\n+++ b/sdks/python/container/base_image_requirements.txt\n@@ -73,3 +73,4 @@ pymongo==3.9.0\n # Packages needed for testing.\n tenacity>=5.0.2\n pyhamcrest<2.0,>=1.9\n+nose==1.3.7\ndiff --git a/sdks/python/container/license_scripts/dep_urls_py.yaml b/sdks/python/container/license_scripts/dep_urls_py.yaml\nindex 473674e7a9..4a2b6f3557 100644\n--- a/sdks/python/container/license_scripts/dep_urls_py.yaml\n+++ b/sdks/python/container/license_scripts/dep_urls_py.yaml\n@@ -79,6 +79,8 @@ pip_dependencies:\n     license: \"https://raw.githubusercontent.com/testing-cabal/mock/master/LICENSE.txt\"\n   monotonic:\n     license: \"https://raw.githubusercontent.com/atdt/monotonic/master/LICENSE\"\n+  nose:\n+      license: \"https://raw.githubusercontent.com/nose-devs/nose/master/lgpl.txt\"\n   numpy:\n     license: \"https://raw.githubusercontent.com/numpy/numpy/master/LICENSE.txt\"\n   oauth2client:",
    "add better logging for Tez session creation thread failures ( Sergey Shelukhin , reviewed by Siddharth Seth )": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/tez/TezSessionState.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/tez/TezSessionState.java\nindex e1a8041818..e5df2ec2d7 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/tez/TezSessionState.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/tez/TezSessionState.java\n@@ -315,7 +315,12 @@ private void openInternal(\n       FutureTask<TezClient> sessionFuture = new FutureTask<>(new Callable<TezClient>() {\n         @Override\n         public TezClient call() throws Exception {\n-          return startSessionAndContainers(session, conf, commonLocalResources, tezConfig, true);\n+          try {\n+            return startSessionAndContainers(session, conf, commonLocalResources, tezConfig, true);\n+          } catch (Throwable t) {\n+            LOG.error(\"Failed to start Tez session\", t);\n+            throw (t instanceof Exception) ? (Exception)t : new Exception(t);\n+          }\n         }\n       });\n       new Thread(sessionFuture, \"Tez session start thread\").start();\n@@ -341,9 +346,7 @@ private TezClient startSessionAndContainers(TezClient session, HiveConf conf,\n           session.preWarm(prewarmVertex);\n         } catch (IOException ie) {\n           if (!isOnThread && ie.getMessage().contains(\"Interrupted while waiting\")) {\n-            if (LOG.isDebugEnabled()) {\n-              LOG.debug(\"Hive Prewarm threw an exception \", ie);\n-            }\n+            LOG.warn(\"Hive Prewarm threw an exception \", ie);\n           } else {\n             throw ie;\n           }\n@@ -483,11 +486,14 @@ public TezClient getSession() {\n       try {\n         session = sessionFuture.get();\n       } catch (InterruptedException e) {\n+        console.printInfo(\"Interrupted while waiting for the session\");\n         Thread.currentThread().interrupt();\n         return null;\n       } catch (ExecutionException e) {\n+        console.printInfo(\"Failed to get session\");\n  ",
    "replaced MetaUtil . isJavaLangObject ( ) with type . isClass ( Object . class )": "diff --git a/graal/com.oracle.graal.api.meta/src/com/oracle/graal/api/meta/MetaUtil.java b/graal/com.oracle.graal.api.meta/src/com/oracle/graal/api/meta/MetaUtil.java\nindex 7c3cc504fb3..bd82d5a26b2 100644\n--- a/graal/com.oracle.graal.api.meta/src/com/oracle/graal/api/meta/MetaUtil.java\n+++ b/graal/com.oracle.graal.api.meta/src/com/oracle/graal/api/meta/MetaUtil.java\n@@ -36,15 +36,6 @@ import com.oracle.graal.api.meta.ProfilingInfo.ExceptionSeen;\n  */\n public class MetaUtil {\n \n-    /**\n-     * Returns true if the specified typed is exactly the type {@link java.lang.Object}.\n-     */\n-    public static boolean isJavaLangObject(ResolvedJavaType type) {\n-        boolean result = type.getSuperclass() == null && !type.isInterface() && type.getKind() == Kind.Object;\n-        assert result == type.getName().equals(\"Ljava/lang/Object;\") : type.getName();\n-        return result;\n-    }\n-\n     /**\n      * Gets the {@link Class} mirror for a given resolved type.\n      *\ndiff --git a/graal/com.oracle.graal.hotspot/src/com/oracle/graal/hotspot/meta/HotSpotRuntime.java b/graal/com.oracle.graal.hotspot/src/com/oracle/graal/hotspot/meta/HotSpotRuntime.java\nindex 433505c2214..cd2723b89a2 100644\n--- a/graal/com.oracle.graal.hotspot/src/com/oracle/graal/hotspot/meta/HotSpotRuntime.java\n+++ b/graal/com.oracle.graal.hotspot/src/com/oracle/graal/hotspot/meta/HotSpotRuntime.java\n@@ -491,7 +491,7 @@ public abstract class HotSpotRuntime implements GraalCodeCacheProvider {\n                 ResolvedJavaType arrayType = array.objectStamp().type();\n                 if (arrayType != null && array.objectStamp().isExactType()) {\n                     ResolvedJavaType elementType = arrayType.getComponentType();\n-                    if (!MetaUtil.isJavaLangObject(elementType)) {\n+                    if (!elementType.isClass(Object.class)) {\n                         CheckCastNode checkcast = graph.add(new CheckCastNode(elementType, value, null));\n                         graph.addBeforeFixed(storeIndexed, checkcast);\n                         value = checkcast;\ndiff --git a/graal/com.oracle.graal.java/src/com/oracle/graal/java/BciBlockMapping.java b/graal/com.oracle.graal.java/src/com/oracle/graal/java/BciBlockMapping.java\nindex 953c8b957b7..eaa49d87a96 100644\n--- a/graal/com.oracle.graal.java/src/com/oracle/graal/java/BciBlockMapping.java\n+++ b/graal/com.oracle.graal.java/src/com/oracle/graal/java/BciBlockMapping.java\n@@ -762,7 +762,7 @@ public final class BciBlockMapping {\n         while (stream.currentBCI() <= block.endBci) {\n             switch (stream.currentBC()) {\n                 case RETURN:\n-                    if (method.isConstructor() && MetaUtil.isJavaLangObject(method.getDeclaringClass())) {\n+                    if (method.isConstructor() && method.getDeclaringClass().isClass(Object.class)) {\n                         // return from Object.init implicitly registers a finalizer\n                         // for the receiver if needed, so keep it alive.\n                         loadOne(block, 0);\ndiff --git a/graal/com.oracle.graal.java/src/com/oracle/graal/java/GraphBuilderPhase.java b/graal/com.oracle.graal.java/src/com/oracle/graal/java/GraphBuilderPhase.java\nindex 080ad261bc6..e039d4a84a6 100644\n--- a/graal/com.oracle.graal.java/src/com/oracle/graal/java/GraphBuilderPhase.java\n+++ b/graal/com.oracle.graal.java/src/com/oracle/graal/java/GraphBuilderPhase.java\n@@ -1363,7 +1363,7 @@ public final class GraphBuilderPhase extends Phase {\n     }\n \n     private void createReturn() {\n-        if (method.isConstructor() && MetaUtil.isJavaLangObject(method.getDeclaringClass())) {\n+        if (method.isConstructor() && method.getDeclaringClass().isClass(Object.class)) {\n             callRegisterFinalizer();\n         }\n         Kind returnKind = method.getSignature().getReturnKind().getStackKind();",
    "handling support if language does not exists": "diff --git a/fastlane/Screengrabfile b/fastlane/Screengrabfile\nindex 90eed4ba79..c2e6ab1869 100644\n--- a/fastlane/Screengrabfile\n+++ b/fastlane/Screengrabfile\n@@ -1,8 +1,8 @@\n app_package_name 'com.nextcloud.client'\n use_tests_in_packages ['com.owncloud.android.screenshots']\n \n-app_apk_path 'build/outputs/apk/generic/debug/android-generic-debug.apk'\n-tests_apk_path 'build/outputs/apk/androidTest/generic/debug/android-generic-debug-androidTest.apk'\n+app_apk_path 'build/outputs/apk/generic/debug/android2-generic-debug.apk'\n+tests_apk_path 'build/outputs/apk/androidTest/generic/debug/android2-generic-debug-androidTest.apk'\n \n # locales ['en-US']\n locales ['en-US', 'de-DE', 'en-GB', 'fr-FR', 'it-IT', 'pt-BR', 'pt-PT', 'sv-SE', 'sq-AL', 'sq-MK', 'iw-IL', 'ar-AR', 'bg-BG', 'da-DK', 'fi-FI', 'gl-ES', 'hu-HU', 'tr-TR', 'uk-UK', 'vi-VI', 'ro-RO', 'ru-RU', 'sr-SR', 'pl-PL', 'el-GR', 'ko-KR', 'nl-NL', 'ja-JP', 'no-NO', 'eu-ES', 'lt-LT', 'es-ES', 'es-419', 'zh-HK', 'zk-CN', 'is-IS', 'sr-SR', 'id-ID', 'cs-CZ', 'sl-SL', 'fa-FA' ]\ndiff --git a/scripts/screenshots/addMockDevice.sh b/scripts/screenshots/addMockDevice.sh\nindex d4bb0e0ab5..892ee7f14e 100755\n--- a/scripts/screenshots/addMockDevice.sh\n+++ b/scripts/screenshots/addMockDevice.sh\n@@ -1,4 +1,4 @@\n-#!/bin/sh\n+#!/bin/bash\n \n cd scripts/screenshots/\n for i in $(find ../../fastlane | grep png) ; do \n@@ -12,13 +12,17 @@ for i in $(find ../../fastlane | grep png) ; do\n             locale=\"\"\n             ;;\n         *)\n-            locale=\"-\"+$locale\n+            locale=\"-\"$locale\n     esac\n     \n-    text=$(grep $textID ../../src/main/res/values$locale/strings.xml | cut -d\">\" -f2 | cut -d\"<\" -f1 | sed s'#\\&amp;#\\\\&#')\n+    if [ -e ../../src/main/res/values$locale/strings.xml ] ; then\n+        text=$(grep $textID ../../src/main/res/values$locale/strings.xml | cut -d\">\" -f2 | cut -d\"<\" -f1 | sed s'#\\&amp;#\\\\&#')\n+    else\n+        text=\"\"\n+    fi\n     \n     # fallback to english if there is not translation\n-    if [ $text == \"\" ]; then\n+    if [ -n $text ]; then\n         text=$(grep $textID ../../src/main/res/values/strings.xml | cut -d\">\" -f2 | cut -d\"<\" -f1 | sed s'#\\&amp;#\\\\&#')\n     fi\n     ",
    "added test": "diff --git a/spring-cloud/spring-cloud-zuul-throttling/src/main/java/com/baeldung/spring/cloud/zuulratelimitdemo/controller/GreetingController.java b/spring-cloud/spring-cloud-zuul-throttling/src/main/java/com/baeldung/spring/cloud/zuulratelimitdemo/controller/GreetingController.java\nindex ed380d17ea..4a27324b4d 100644\n--- a/spring-cloud/spring-cloud-zuul-throttling/src/main/java/com/baeldung/spring/cloud/zuulratelimitdemo/controller/GreetingController.java\n+++ b/spring-cloud/spring-cloud-zuul-throttling/src/main/java/com/baeldung/spring/cloud/zuulratelimitdemo/controller/GreetingController.java\n@@ -11,13 +11,16 @@ import org.springframework.web.bind.annotation.RequestMapping;\n @RequestMapping(\"/greeting\")\n public class GreetingController {\n \n+  public static final String SIMPLE_RESPONSE = \"Hi!\";\n+  public static final String ADVANCED_RESPONSE = \"Hello, how you doing?\";\n+\n   @GetMapping(\"/simple\")\n   public ResponseEntity<String> serviceA() {\n-    return ResponseEntity.ok(\"Hi!\");\n+    return ResponseEntity.ok(SIMPLE_RESPONSE);\n   }\n \n   @GetMapping(\"/advanced\")\n   public ResponseEntity<String> serviceB() {\n-    return ResponseEntity.ok(\"Hello, how you doing?\");\n+    return ResponseEntity.ok(ADVANCED_RESPONSE);\n   }\n }\ndiff --git a/spring-cloud/spring-cloud-zuul-throttling/src/test/java/com/baeldung/spring/cloud/zuulratelimitdemo/ZuulRatelimitDemoApplicationTests.java b/spring-cloud/spring-cloud-zuul-throttling/src/test/java/com/baeldung/spring/cloud/zuulratelimitdemo/ZuulRatelimitDemoApplicationTests.java\ndeleted file mode 100644\nindex 134d400b21..0000000000\n--- a/spring-cloud/spring-cloud-zuul-throttling/src/test/java/com/baeldung/spring/cloud/zuulratelimitdemo/ZuulRatelimitDemoApplicationTests.java\n+++ /dev/null\n@@ -1,16 +0,0 @@\n-package com.baeldung.spring.cloud.zuulratelimitdemo;\n-\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.springframework.boot.test.context.SpringBootTest;\n-import org.springframework.test.context.junit4.SpringRunner;\n-\n-@RunWith(SpringRunner.class)\n-@SpringBootTest\n-public class ZuulRatelimitDemoApplicationTests {\n-\n-\t@Test\n-\tpublic void contextLoads() {\n-\t}\n-\n-}\ndiff --git a/spring-cloud/spring-cloud-zuul-throttling/src/test/java/com/baeldung/spring/cloud/zuulratelimitdemo/controller/GreetingControllerTest.java b/spring-cloud/spring-cloud-zuul-throttling/src/test/java/com/baeldung/spring/cloud/zuulratelimitdemo/controller/GreetingControllerTest.java\nnew file mode 100644\nindex 0000000000..6b6dba1704\n--- /dev/null\n+++ b/spring-cloud/spring-cloud-zuul-throttling/src/test/java/com/baeldung/spring/cloud/zuulratelimitdemo/controller/GreetingControllerTest.java\n@@ -0,0 +1,98 @@\n+package com.baeldung.spring.cloud.zuulratelimitdemo.controller;\n+\n+import static com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.support.RateLimitConstants.HEADER_LIMIT;\n+import static com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.support.RateLimitConstants.HEADER_QUOTA;\n+import static com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.support.RateLimitConstants.HEADER_REMAINING;\n+import static com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.support.RateLimitConstants.HEADER_REMAINING_QUOTA;\n+import static com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.support.RateLimitConstants.HEADER_RESET;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.springframework.http.HttpStatus.OK;\n+import static org.springframework.http.HttpStatus.TOO_MANY_REQUESTS;\n+\n+import java.util.concurrent.TimeUnit;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.web.client.TestRestTemplate;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+@AutoConfigureTestDatabase\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n+public class GreetingControllerTest {\n+\n+  private static final String SIMPLE_GREETING = \"/greeting/simple\";\n+  private static final String ADVANCED_GREETING = \"/greeting/advanced\";\n+\n+  @Autowired\n+  private TestRestTemplate restTemplate;\n+\n+  @Test\n+  public void testNotExceedingCapacityRequest() {\n+    ResponseEntity<String> response = this.restTemplate.getForEntity(SIMPLE_GREETING, String.class);\n+    HttpHeaders headers = response.getHeaders();\n+    String key = \"rate-limit-application_serviceSimple_127.0.0.1\";\n+    assertHeaders(headers, key, false, false);\n+    assertEquals(OK, response.getStatusCode());\n+  }\n+\n+  @Test\n+  public void testExceedingCapacity() throws InterruptedException {\n+    ResponseEntity<String> response = this.restTemplate\n+        .getForEntity(ADVANCED_GREETING, String.class);\n+    HttpHeaders headers = response.getHeaders();\n+    String key = \"rate-limit-application_serviceAdvanced_127.0.0.1\";\n+    assertHeaders(headers, key, false, false);\n+    assertEquals(OK, response.getStatusCode());\n+\n+    for (int i = 0; i < 2; i++) {\n+      response = this.restTemplate.getForEntity(ADVANCED_GREETING, String.class);\n+    }\n+\n+    assertEquals(TOO_MANY_REQUESTS, response.getStatusCode());\n+    assertNotEquals(GreetingController.ADVANCED_RESPONSE, response.getBody());\n+\n+    TimeUnit.SECONDS.sleep(2);\n+\n+    response = this.restTemplate.getForEntity(ADVANCED_GREETING, String.class);\n+    headers = response.getHeaders();\n+    assertHeaders(headers, key, false, false);\n+    assertEquals(OK, response.getStatusCode());\n+  }\n+\n+  private void assertHeaders(HttpHeaders headers, String key, boolean nullable,\n+      boolean quotaHeaders) {\n+    String quota = headers.getFirst(HEADER_QUOTA + key);\n+    String remainingQuota = headers.getFirst(HEADER_REMAINING_QUOTA + key);\n+    String limit = headers.getFirst(HEADER_LIMIT + key);\n+    String remaining = headers.getFirst(HEADER_REMAINING + key);\n+    String reset = headers.getFirst(HEADER_RESET + key);\n+\n+    if (nullable) {\n+      if (quotaHeaders) {\n+        assertNull(quota);\n+        assertNull(remainingQuota);\n+      } else {\n+        assertNull(limit);\n+        assertNull(remaining);\n+      }\n+      assertNull(reset);\n+    } else {\n+      if (quotaHeaders) {\n+        assertNotNull(quota);\n+        assertNotNull(remainingQuota);\n+      } else {\n+        assertNotNull(limit);\n+        assertNotNull(remaining);\n+      }\n+      assertNotNull(reset);\n+    }\n+  }\n+}",
    "Remove use of autoconfig , as it was really just a conveniece for creating default access and authentication managers .": "diff --git a/core/src/main/java/org/springframework/security/config/ConfigUtils.java b/core/src/main/java/org/springframework/security/config/ConfigUtils.java\nnew file mode 100644\nindex 0000000000..67d8ee1fe1\n--- /dev/null\n+++ b/core/src/main/java/org/springframework/security/config/ConfigUtils.java\n@@ -0,0 +1,78 @@\n+package org.springframework.security.config;\n+\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n+import org.springframework.beans.factory.support.BeanDefinitionBuilder;\n+import org.springframework.beans.factory.support.BeanDefinitionRegistry;\n+import org.springframework.security.AccessDecisionManager;\n+import org.springframework.security.AuthenticationManager;\n+import org.springframework.security.vote.AffirmativeBased;\n+import org.springframework.security.vote.AuthenticatedVoter;\n+import org.springframework.security.vote.RoleVoter;\n+import org.springframework.util.Assert;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+/**\n+ * @author Luke Taylor\n+ * @version $Id$\n+ */\n+public abstract class ConfigUtils {\n+    public static final String DEFAULT_ACCESS_MANAGER_ID = \"_accessManager\";\n+\n+    static void registerAccessManagerIfNecessary(ConfigurableListableBeanFactory bf) {\n+        if (bf.getBeanNamesForType(AccessDecisionManager.class).length > 0) {\n+            return;\n+        }\n+\n+        Assert.isInstanceOf(BeanDefinitionRegistry.class, bf, \" Auto-registration of default AccessManager will only work \" +\n+                \"with a BeanFactory which implements BeanDefinitionRegistry\");\n+\n+        BeanDefinitionRegistry registry = (BeanDefinitionRegistry)bf;\n+\n+        if (!registry.containsBeanDefinition(DEFAULT_ACCESS_MANAGER_ID)) {\n+            BeanDefinitionBuilder accessMgrBuilder = BeanDefinitionBuilder.rootBeanDefinition(AffirmativeBased.class);\n+            accessMgrBuilder.addPropertyValue(\"decisionVoters\",\n+                            Arrays.asList(new Object[] {new RoleVoter(), new AuthenticatedVoter()}));    \n+            BeanDefinition accessMgr = accessMgrBuilder.getBeanDefinition();\n+\n+            registry.registerBeanDefinition(DEFAULT_ACCESS_MANAGER_ID, accessMgr);\n+        }\n+    }\n+\n+    static AuthenticationManager getAuthenticationManager(ConfigurableListableBeanFactory bf) {\n+        Map authManagers = bf.getBeansOfType(AuthenticationManager.class);\n+\n+        if (authManagers.size() == 0) {\n+            throw new IllegalArgumentException(\"No AuthenticationManager registered. \" +\n+                    \"Make sure you have configured at least one AuthenticationProvider?\");\n+\n+        } else if (authManagers.size() > 1) {\n+            throw new IllegalArgumentException(\"More than one AuthenticationManager registered.\");\n+        }\n+\n+        AuthenticationManager accessMgr = (AuthenticationManager) authManagers.values().toArray()[0];\n+\n+        return accessMgr;\n+    }\n+\n+    static void configureSecurityInterceptor(ConfigurableListableBeanFactory beanFactory,\n+            BeanDefinition securityInterceptor) {\n+        \n+        ConfigUtils.registerAccessManagerIfNecessary(beanFactory);\n+\n+        Map accessManagers = beanFactory.getBeansOfType(AccessDecisionManager.class);\n+\n+        if (accessManagers.size() > 1) {\n+            throw new IllegalArgumentException(\"More than one AccessDecisionManager registered. Please specify one \" +\n+                    \"  using the TODO attribute.\");\n+        }\n+\n+        AccessDecisionManager accessMgr = (AccessDecisionManager) accessManagers.values().toArray()[0];\n+\n+        securityInterceptor.getPropertyValues().addPropertyValue(\"accessDecisionManager\", accessMgr);\n+        securityInterceptor.getPropertyValues().addPropertyValue(\"authenticationManager\",\n+                getAuthenticationManager(beanFactory));\n+    }\n+}\ndiff --git a/core/src/main/java/org/springframework/security/config/HttpSecurityBeanDefinitionParser.java b/core/src/main/java/org/springframework/security/config/HttpSecurityBeanDefinitionParser.java\nindex e323af7a14..464314dd55 100644\n--- a/core/src/main/java/org/springframework/security/config/HttpSecurityBeanDefinitionParser.java\n+++ b/core/src/main/java/org/springframework/security/config/HttpSecurityBeanDefinitionParser.java\n@@ -88,7 +88,7 @@ public class HttpSecurityBeanDefinitionParser implements BeanDefinitionParser {\n         filterSecurityInterceptorBuilder.addPropertyValue(\"objectDefinitionSource\", interceptorFilterInvDefSource);\n \n         // Again pick up auth manager\n-        filterSecurityInterceptorBuilder.setAutowireMode(RootBeanDefinition.AUTOWIRE_BY_TYPE);\n+        //filterSecurityInterceptorBuilder.setAutowireMode(RootBeanDefinition.AUTOWIRE_BY_TYPE);\n \n         parseInterceptUrls(DomUtils.getChildElementsByTagName(element, \"intercept-url\"),\n                 filterChainMap, interceptorFilterInvDefSource);\ndiff --git a/core/src/main/java/org/springframework/security/config/HttpSecurityConfigPostProcessor.java b/core/src/main/java/org/springframework/security/config/HttpSecurityConfigPostProcessor.java\nindex 01176e11ea..f1eab2e57b 100644\n--- a/core/src/main/java/org/springframework/security/config/HttpSecurityConfigPostProcessor.java\n+++ b/core/src/main/java/org/springframework/security/config/HttpSecurityConfigPostProcessor.java\n@@ -8,6 +8,7 @@ import org.springframework.beans.factory.config.BeanFactoryPostProcessor;\n import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n import org.springframework.core.OrderComparator;\n import org.springframework.core.Ordered;\n+import org.springframework.security.AccessDecisionManager;\n import org.springframework.security.AuthenticationManager;\n import org.springframework.security.context.HttpSessionContextIntegrationFilter;\n import org.springframework.security.ui.AuthenticationEntryPoint;\n@@ -15,7 +16,11 @@ import org.springframework.security.util.FilterChainProxy;\n import org.springframework.util.Assert;\n \n import javax.servlet.Filter;\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n \n /**\n  * Responsible for tying up the HTTP security configuration - building ordered filter stack and linking up\n@@ -26,18 +31,29 @@ import java.util.*;\n  */\n public class HttpSecurityConfigPostProcessor implements BeanFactoryPostProcessor, Ordered {\n     private Log logger = LogFactory.getLog(getClass());\n+    private AuthenticationManager authManager;\n \n     public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {\n         HttpSessionContextIntegrationFilter httpSCIF = (HttpSessionContextIntegrationFilter)\n                 beanFactory.getBean(HttpSecurityBeanDefinitionParser.DEFAULT_HTTP_SESSION_FILTER_ID);\n-        AuthenticationManager authManager =\n-                (AuthenticationManager) getBeanOfType(AuthenticationManager.class, beanFactory);\n+        authManager = ConfigUtils.getAuthenticationManager(beanFactory);\n \n         configureAuthenticationEntryPoint(beanFactory);\n \n+        configureFilterSecurityInterceptor(beanFactory);\n+\n         configureFilterChain(beanFactory);\n     }\n \n+    private void configureFilterSecurityInterceptor(ConfigurableListableBeanFactory beanFactory) {\n+        ConfigUtils.registerAccessManagerIfNecessary(beanFactory);\n+\n+        BeanDefinition securityInterceptor =\n+                beanFactory.getBeanDefinition(HttpSecurityBeanDefinitionParser.DEFAULT_FILTER_SECURITY_INTERCEPTOR_ID);\n+\n+        ConfigUtils.configureSecurityInterceptor(beanFactory, securityInterceptor);\n+    }\n+\n     /**\n      * Selects the entry point that should be used in ExceptionTranslationFilter. Strategy is\n      *\n@@ -127,6 +143,6 @@ public class HttpSecurityConfigPostProcessor implements BeanFactoryPostProcessor\n     }\n \n     public int getOrder() {\n-        return 0;\n+        return HIGHEST_PRECEDENCE;\n     }\n }\ndiff --git a/core/src/main/java/org/springframework/security/config/InterceptMethodsBeanDefinitionDecorator.java b/core/src/main/java/org/springframework/security/config/InterceptMethodsBeanDefinitionDecorator.java\nindex 56ad3a98d8..a6b7d26bf7 100644\n--- a/core/src/main/java/org/springframework/security/config/InterceptMethodsBeanDefinitionDecorator.java\n+++ b/core/src/main/java/org/springframework/security/config/InterceptMethodsBeanDefinitionDecorator.java\n@@ -1,24 +1,78 @@\n package org.springframework.security.config;\n \n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n import org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator;\n+import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.beans.factory.config.BeanDefinitionHolder;\n+import org.springframework.beans.factory.config.BeanFactoryPostProcessor;\n+import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n+import org.springframework.beans.factory.support.BeanDefinitionRegistry;\n import org.springframework.beans.factory.support.RootBeanDefinition;\n-import org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor;\n-import org.springframework.security.intercept.method.MethodDefinitionMap;\n-import org.springframework.security.ConfigAttributeEditor;\n+import org.springframework.beans.factory.xml.BeanDefinitionDecorator;\n+import org.springframework.beans.factory.xml.ParserContext;\n+import org.springframework.core.Ordered;\n import org.springframework.security.ConfigAttributeDefinition;\n+import org.springframework.security.ConfigAttributeEditor;\n+import org.springframework.security.intercept.method.MethodDefinitionMap;\n+import org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor;\n import org.springframework.util.xml.DomUtils;\n-import org.w3c.dom.Node;\n import org.w3c.dom.Element;\n+import org.w3c.dom.Node;\n \n-import java.util.List;\n import java.util.Iterator;\n+import java.util.List;\n \n /**\n  * @author Luke Taylor\n  * @version $Id$\n  */\n-public class InterceptMethodsBeanDefinitionDecorator extends AbstractInterceptorDrivenBeanDefinitionDecorator {\n+public class InterceptMethodsBeanDefinitionDecorator implements BeanDefinitionDecorator {\n+    private static final String POST_PROCESSOR_ID = \"_interceptMethodsBeanfactoryPP\";\n+\n+    private BeanDefinitionDecorator delegate = new InternalInterceptMethodsBeanDefinitionDecorator();\n+\n+    public BeanDefinitionHolder decorate(Node node, BeanDefinitionHolder definition, ParserContext parserContext) {\n+        registerPostProcessorIfNecessary(parserContext.getRegistry());\n+\n+        return delegate.decorate(node, definition, parserContext);\n+    }\n+\n+    private void registerPostProcessorIfNecessary(BeanDefinitionRegistry registry) {\n+        if (registry.containsBeanDefinition(POST_PROCESSOR_ID)) {\n+            return;\n+        }\n+\n+        registry.registerBeanDefinition(POST_PROCESSOR_ID,\n+                new RootBeanDefinition(MethodSecurityConfigPostProcessor.class));\n+    }\n+\n+    public static class MethodSecurityConfigPostProcessor implements BeanFactoryPostProcessor, Ordered {\n+\n+        public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {\n+            String[] interceptors = beanFactory.getBeanNamesForType(MethodSecurityInterceptor.class);\n+\n+            for (int i=0; i < interceptors.length; i++) {\n+                BeanDefinition interceptor = beanFactory.getBeanDefinition(interceptors[i]);\n+                ConfigUtils.configureSecurityInterceptor(beanFactory, interceptor);\n+            }\n+        }\n+\n+        public int getOrder() {\n+            return HIGHEST_PRECEDENCE;\n+        }\n+\n+    }\n+}\n+\n+/**\n+ * This is the real class which does the work. We need acccess to the ParserContext in order to register the\n+ * post processor,\n+ */\n+class InternalInterceptMethodsBeanDefinitionDecorator extends AbstractInterceptorDrivenBeanDefinitionDecorator {\n+    private Log logger = LogFactory.getLog(getClass());\n+\n     protected BeanDefinition createInterceptorDefinition(Node node) {\n         Element interceptMethodsElt = (Element)node;\n         RootBeanDefinition interceptor = new RootBeanDefinition(MethodSecurityInterceptor.class);\n@@ -53,8 +107,6 @@ public class InterceptMethodsBeanDefinitionDecorator extends AbstractInterceptor\n \n         interceptor.getPropertyValues().addPropertyValue(\"objectDefinitionSource\", methodMap);\n \n-        interceptor.setAutowireMode(RootBeanDefinition.AUTOWIRE_BY_TYPE);\n-\n         return interceptor;\n     }\n }\ndiff --git a/core/src/main/java/org/springframework/security/config/SecurityNamespaceHandler.java b/core/src/main/java/org/springframework/security/config/SecurityNamespaceHandler.java\nindex c1f13bee21..7f477fcf90 100644\n--- a/core/src/main/java/org/springframework/security/config/SecurityNamespaceHandler.java\n+++ b/core/src/main/java/org/springframework/security/config/SecurityNamespaceHandler.java\n@@ -15,7 +15,6 @@ public class SecurityNamespaceHandler extends NamespaceHandlerSupport {\n         registerBeanDefinitionParser(\"http\", new HttpSecurityBeanDefinitionParser());\n         registerBeanDefinitionParser(\"user-service\", new UserServiceBeanDefinitionParser());\n         registerBeanDefinitionParser(\"authentication-provider\", new AuthenticationProviderBeanDefinitionParser());\n-        registerBeanDefinitionParser(\"autoconfig\", new AutoConfigBeanDefinitionParser());\n         registerBeanDefinitionDecorator(\"intercept-methods\", new InterceptMethodsBeanDefinitionDecorator());\n         registerBeanDefinitionDecorator(\"filter-chain-map\", new FilterChainMapBeanDefinitionDecorator());        \n     }\ndiff --git a/core/src/test/resources/org/springframework/security/config/http-security.xml b/core/src/test/resources/org/springframework/security/config/http-security.xml\nindex 616f87f682..15b921937f 100644\n--- a/core/src/test/resources/org/springframework/security/config/http-security.xml\n+++ b/core/src/test/resources/org/springframework/security/config/http-security.xml\n@@ -6,8 +6,6 @@\n     xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\n http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd\">\n \n-    <security:autoconfig />\n-\n     <security:http createSession=\"ifRequired\" pathType=\"ant\" lowerCaseComparisons=\"true\">\n         <security:intercept-url pattern=\"/unprotected\" filters=\"none\"/>\n         <security:intercept-url pattern=\"/somepath\" access=\"ROLE_SPECIAL,ROLE_USER\" />\n@@ -23,12 +21,10 @@ http://www.springframework.org/schema/security http://www.springframework.org/sc\n         <security:http-basic realm=\"NamespaceTestRealm\"  />\n     </security:http>\n \n-\n     <security:authentication-provider>\n         <security:user-service>\n             <security:user name=\"bob\" password=\"bobspassword\" authorities=\"ROLE_A,ROLE_B\" />\n             <security:user name=\"bill\" password=\"billspassword\" authorities=\"ROLE_A,ROLE_B,AUTH_OTHER\" />\n         </security:user-service>\n     </security:authentication-provider>\n-\n </beans>\n\\ No newline at end of file\ndiff --git a/core/src/test/resources/org/springframework/security/config/method-security.xml b/core/src/test/resources/org/springframework/security/config/method-security.xml\nindex a25c205b71..3ba61d90fd 100644\n--- a/core/src/test/resources/org/springframework/security/config/method-security.xml\n+++ b/core/src/test/resources/org/springframework/security/config/method-security.xml\n@@ -6,8 +6,6 @@\n     xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\n http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd\">\n \n-    <security:autoconfig />\n-\n     <bean id=\"target\" class=\"org.springframework.security.config.TestBusinessBeanImpl\">\n         <!-- This will add a security interceptor to the bean -->\n         <security:intercept-methods>",
    "add 2 Bokomaru \\' s rules from : .": "diff --git a/languagetool-language-modules/en/src/main/resources/org/languagetool/rules/en/grammar.xml b/languagetool-language-modules/en/src/main/resources/org/languagetool/rules/en/grammar.xml\nindex 9ddbc96c68..c10a58512a 100644\n--- a/languagetool-language-modules/en/src/main/resources/org/languagetool/rules/en/grammar.xml\n+++ b/languagetool-language-modules/en/src/main/resources/org/languagetool/rules/en/grammar.xml\n@@ -14207,13 +14207,33 @@ USA\n           <token>about</token>\n         </marker>\n           <token regexp='yes'>an?|the</token>\n-          <token min='1' max='2'></token>\n+          <token/>\n           <token>and</token>\n           <token regexp='yes'>an?|the</token>\n           <token/>\n       </pattern>\n       <message>The usual preposition for \"difference\" is \"between\" not \"about\".  Revise: <suggestion>difference between</suggestion>.</message>\n-      <example correction='difference between'>There is not big <marker>differenceaabout</marker> the week and the weekend to me.</example>\n+      <example correction='difference between'>There is not big <marker>difference about</marker> the week and the weekend to me.</example>\n+    </rule>\n+    <rule id='IMPORTANT_WITH_TO' name='Collocation: Important with/to'>\n+    <!-- Created by Nicholas Walker (Bokomaru), 2017-11-14 -->\n+      <pattern>\n+          <token>important</token>\n+          <token>with</token>\n+          <token postag_regexp=\"yes\" postag=\"NNP|PRP\">\n+            <exception regexp=\"yes\">an?|all|many|some|multiple|most</exception></token>\n+      </pattern>\n+      <message>The usual preposition for \"\\1\" is \"to\" not \"with\".  Revise: <suggestion>\\1 to \\3</suggestion>.</message>\n+      <example correction='important to you'>Family who is closest and <marker>important with you</marker>.</example>\n+    </rule>\n+    <rule id='CONSIST_TO_OF' name='Collocation: Consist to/of'>\n+    <!-- Created by Nicholas Walker (Bokomaru), 2017-11-14 -->\n+      <pattern>\n+          <token inflected=\"yes\">consist</token>\n+          <token>to</token>\n+      </pattern>\n+      <message>The usual preposition for \"\\1\" is \"of\" not \"to\".  Revise: <suggestion>\\1 of</suggestion>.</message>\n+      <example correction='consists of'>There is a program in medicine and this program <marker>consists to</marker> diagnostic people to know if  their body works well.</example>\n     </rule>\n   </rulegroup>\n ",
    "Add optional metrics - packets . xml file to configserver app .": "diff --git a/configserver/src/main/resources/configserver-app/services.xml b/configserver/src/main/resources/configserver-app/services.xml\nindex 8521ca8b31f..5f60be8c202 100644\n--- a/configserver/src/main/resources/configserver-app/services.xml\n+++ b/configserver/src/main/resources/configserver-app/services.xml\n@@ -55,7 +55,11 @@\n     <preprocess:include file='config-models.xml' required='false' />\n     <preprocess:include file='node-repository.xml' required='false' />\n     <preprocess:include file='hosted-vespa/routing-status.xml' required='false' />\n+\n+    <!-- TODO Vespa 7: Remove scoreboard.xml, replaced by metrics-packets.xml -->\n     <preprocess:include file='hosted-vespa/scoreboard.xml' required='false' />\n+\n+    <preprocess:include file='hosted-vespa/metrics-packets.xml' required='false' />\n     <preprocess:include file='controller/container.xml' required='false' />\n     <component id=\"com.yahoo.vespa.service.monitor.internal.slobrok.SlobrokMonitorManagerImpl\" bundle=\"service-monitor\" />\n     <component id=\"com.yahoo.vespa.service.monitor.internal.health.HealthMonitorManager\" bundle=\"service-monitor\" />",
    "Add mention of Android App Bundle bug fix": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 07bf5a0b9..1af390154 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -1,9 +1,14 @@\n ## 5.5.1 (YYYY-MM-DD)\n \n+### Bug Fixes\n+\n+* Building with Android App Bundle enabled should now work correctly (#5977).\n+\n ### Internal\n \n * Updated ReLinker to 1.3.0.\n \n+\n ## 5.5.0 (2018-08-31)\n \n ### Enhancements",
    "Reformat SearchBar component": "diff --git a/javascript/src/components/search/SearchBar.jsx b/javascript/src/components/search/SearchBar.jsx\nindex c6bd1dcc16..def100bbff 100644\n--- a/javascript/src/components/search/SearchBar.jsx\n+++ b/javascript/src/components/search/SearchBar.jsx\n@@ -1,6 +1,6 @@\n /* global $ */\n \n-import React from 'react';\n+import React, {PropTypes} from 'react';\n import ReactDOM from 'react-dom';\n import Immutable from 'immutable';\n import { Input, Button, ButtonToolbar, DropdownButton, MenuItem, Alert } from 'react-bootstrap';\n@@ -22,6 +22,9 @@ require('!script!../../../public/javascripts/jquery-2.1.1.min.js');\n require('!script!../../../public/javascripts/bootstrap-datepicker.js');\n \n const SearchBar = React.createClass({\n+  propTypes: {\n+    userPreferences: PropTypes.object,\n+  },\n   getInitialState() {\n     this.initialSearchParams = SearchStore.getParams();\n     this.datepickerInitialized = false;\n@@ -51,82 +54,6 @@ const SearchBar = React.createClass({\n   componentWillUnmount() {\n     this._removeSearchQueryInput();\n   },\n-  render() {\n-    return (\n-      <div className=\"row no-bm\">\n-        <div className=\"col-md-12\" id=\"universalsearch-container\">\n-          <div className=\"row no-bm\">\n-            <div ref=\"universalSearch\" className=\"col-md-12\" id=\"universalsearch\">\n-              <form ref=\"searchForm\"\n-                    className=\"universalsearch-form\"\n-                    action={SearchStore.searchBaseLocation('index')}\n-                    method=\"GET\"\n-                    onSubmit={this._prepareSearch}>\n-                <Input type=\"hidden\" name=\"rangetype\" value={this.state.rangeType}/>\n-                <Input type=\"hidden\" ref=\"fields\" name=\"fields\" value=\"\"/>\n-                <Input type=\"hidden\" ref=\"width\" name=\"width\" value=\"\"/>\n-\n-                <div className=\"timerange-selector-container\">\n-                  <div className=\"row no-bm\">\n-                    <div className=\"col-md-9\">\n-                      <ButtonToolbar className=\"timerange-chooser pull-left\">\n-                        <DropdownButton bsStyle=\"info\"\n-                                        title={<i className=\"fa fa-clock-o\"></i>}\n-                                        onSelect={this._rangeTypeChanged}\n-                                        id=\"dropdown-timerange-selector\">\n-                          <MenuItem eventKey=\"relative\"\n-                                    className={this.state.rangeType === 'relative' ? 'selected' : null}>\n-                            Relative\n-                          </MenuItem>\n-                          <MenuItem eventKey=\"absolute\"\n-                                    className={this.state.rangeType === 'absolute' ? 'selected' : null}>\n-                            Absolute\n-                          </MenuItem>\n-                          <MenuItem eventKey=\"keyword\"\n-                                    className={this.state.rangeType === 'keyword' ? 'selected' : null}>\n-                            Keyword\n-                          </MenuItem>\n-                        </DropdownButton>\n-                      </ButtonToolbar>\n-\n-                      {this._getRangeTypeSelector()}\n-                    </div>\n-                    <div className=\"col-md-3\">\n-                      <div className=\"saved-searches-selector-container\"\n-                           style={{float: 'right', marginRight: 5, width: 270}}>\n-                        {this._getSavedSearchesSelector()}\n-                      </div>\n-                    </div>\n-                  </div>\n-                </div>\n-\n-                <div id=\"search-container\">\n-                  <div className=\"pull-right search-help\">\n-                    <DocumentationLink page={DocsHelper.PAGES.SEARCH_QUERY_LANGUAGE}\n-                                       title=\"Search query syntax documentation\"\n-                                       text={<i className=\"fa fa-lightbulb-o\"></i>}/>\n-                  </div>\n-\n-                  <Button type=\"submit\" bsStyle=\"success\" className=\"pull-left\">\n-                    <i className=\"fa fa-search\"></i>\n-                  </Button>\n-\n-                  <div className=\"query\">\n-                    <Input type=\"text\"\n-                           ref=\"query\"\n-                           name=\"q\"\n-                           value={this.state.query}\n-                           onChange={this._queryChanged}\n-                           placeholder=\"Type your search query here and press enter. (&quot;not found&quot; AND http) OR http_response_code:[400 TO 404]\"/>\n-                  </div>\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-    );\n-  },\n   _initializeSearchQueryInput() {\n     if (this.props.userPreferences.enableSmartSearch) {\n       const queryInput = new QueryInput(this.refs.query.getInputDOMNode());\n@@ -263,105 +190,105 @@ const SearchBar = React.createClass({\n     let selector;\n \n     switch (this.state.rangeType) {\n-      case 'relative':\n-        selector = (\n-          <div className=\"timerange-selector relative\"\n-               style={{width: 270, marginLeft: 50}}>\n-            <Input id=\"relative-timerange-selector\"\n-                   ref=\"relative\"\n-                   type=\"select\"\n-                   value={this.state.rangeParams.get('relative')}\n-                   name=\"relative\"\n-                   onChange={this._rangeParamsChanged('relative')}\n-                   className=\"input-sm\">\n-              <option value=\"300\">Search in the last 5 minutes</option>\n-              <option value=\"900\">Search in the last 15 minutes</option>\n-              <option value=\"1800\">Search in the last 30 minutes</option>\n-              <option value=\"3600\">Search in the last 1 hour</option>\n-              <option value=\"7200\">Search in the last 2 hours</option>\n-              <option value=\"28800\">Search in the last 8 hours</option>\n-              <option value=\"86400\">Search in the last 1 day</option>\n-              <option value=\"172800\">Search in the last 2 days</option>\n-              <option value=\"432000\">Search in the last 5 days</option>\n-              <option value=\"604800\">Search in the last 7 days</option>\n-              <option value=\"1209600\">Search in the last 14 days</option>\n-              <option value=\"2592000\">Search in the last 30 days</option>\n-              <option value=\"0\">Search in all messages</option>\n-            </Input>\n-          </div>\n-        );\n-        break;\n-      case 'absolute':\n-        selector = (\n-          <div className=\"timerange-selector absolute\" style={{width: 600}}>\n-            <div className=\"row no-bm\" style={{marginLeft: 50}}>\n-              <div className=\"col-md-5\" style={{padding: 0}}>\n-                <Input type=\"hidden\" name=\"from\" ref=\"from\"/>\n-                <Input type=\"text\"\n-                       ref=\"fromFormatted\"\n-                       value={this._formattedDateStringInUserTZ('from')}\n-                       onChange={this._rangeParamsChanged('from')}\n-                       placeholder={momentHelper.DATE_FORMAT}\n-                       buttonAfter={<Button bsSize=\"small\" onClick={this._setDateTimeToNow('from')}><i className=\"fa fa-magic\"></i></Button>}\n-                       bsStyle={this._isValidDateField('from') ? null : 'error'}\n-                       bsSize=\"small\"\n-                       required/>\n-              </div>\n-              <div className=\"col-md-1\">\n-                <p className=\"text-center\" style={{margin: 0, lineHeight: '30px'}}>to</p>\n-              </div>\n-              <div className=\"col-md-5\" style={{padding: 0}}>\n-                <Input type=\"hidden\" name=\"to\" ref=\"to\"/>\n-                <Input type=\"text\"\n-                       ref=\"toFormatted\"\n-                       value={this._formattedDateStringInUserTZ('to')}\n-                       onChange={this._rangeParamsChanged('to')}\n-                       placeholder={momentHelper.DATE_FORMAT}\n-                       buttonAfter={<Button bsSize=\"small\" onClick={this._setDateTimeToNow('to')}><i className=\"fa fa-magic\"></i></Button>}\n-                       bsStyle={this._isValidDateField('to') ? null : 'error'}\n-                       bsSize=\"small\"\n-                       required/>\n-              </div>\n+    case 'relative':\n+      selector = (\n+        <div className=\"timerange-selector relative\"\n+             style={{width: 270, marginLeft: 50}}>\n+          <Input id=\"relative-timerange-selector\"\n+                 ref=\"relative\"\n+                 type=\"select\"\n+                 value={this.state.rangeParams.get('relative')}\n+                 name=\"relative\"\n+                 onChange={this._rangeParamsChanged('relative')}\n+                 className=\"input-sm\">\n+            <option value=\"300\">Search in the last 5 minutes</option>\n+            <option value=\"900\">Search in the last 15 minutes</option>\n+            <option value=\"1800\">Search in the last 30 minutes</option>\n+            <option value=\"3600\">Search in the last 1 hour</option>\n+            <option value=\"7200\">Search in the last 2 hours</option>\n+            <option value=\"28800\">Search in the last 8 hours</option>\n+            <option value=\"86400\">Search in the last 1 day</option>\n+            <option value=\"172800\">Search in the last 2 days</option>\n+            <option value=\"432000\">Search in the last 5 days</option>\n+            <option value=\"604800\">Search in the last 7 days</option>\n+            <option value=\"1209600\">Search in the last 14 days</option>\n+            <option value=\"2592000\">Search in the last 30 days</option>\n+            <option value=\"0\">Search in all messages</option>\n+          </Input>\n+        </div>\n+      );\n+      break;\n+    case 'absolute':\n+      selector = (\n+        <div className=\"timerange-selector absolute\" style={{width: 600}}>\n+          <div className=\"row no-bm\" style={{marginLeft: 50}}>\n+            <div className=\"col-md-5\" style={{padding: 0}}>\n+              <Input type=\"hidden\" name=\"from\" ref=\"from\"/>\n+              <Input type=\"text\"\n+                     ref=\"fromFormatted\"\n+                     value={this._formattedDateStringInUserTZ('from')}\n+                     onChange={this._rangeParamsChanged('from')}\n+                     placeholder={momentHelper.DATE_FORMAT}\n+                     buttonAfter={<Button bsSize=\"small\" onClick={this._setDateTimeToNow('from')}><i className=\"fa fa-magic\"></i></Button>}\n+                     bsStyle={this._isValidDateField('from') ? null : 'error'}\n+                     bsSize=\"small\"\n+                     required/>\n+            </div>\n+            <div className=\"col-md-1\">\n+              <p className=\"text-center\" style={{margin: 0, lineHeight: '30px'}}>to</p>\n+            </div>\n+            <div className=\"col-md-5\" style={{padding: 0}}>\n+              <Input type=\"hidden\" name=\"to\" ref=\"to\"/>\n+              <Input type=\"text\"\n+                     ref=\"toFormatted\"\n+                     value={this._formattedDateStringInUserTZ('to')}\n+                     onChange={this._rangeParamsChanged('to')}\n+                     placeholder={momentHelper.DATE_FORMAT}\n+                     buttonAfter={<Button bsSize=\"small\" onClick={this._setDateTimeToNow('to')}><i className=\"fa fa-magic\"></i></Button>}\n+                     bsStyle={this._isValidDateField('to') ? null : 'error'}\n+                     bsSize=\"small\"\n+                     required/>\n             </div>\n           </div>\n-        );\n-        break;\n-      case 'keyword':\n-        selector = (\n-          <div className=\"timerange-selector keyword\" style={{width: 650}}>\n-            <div className=\"row no-bm\" style={{marginLeft: 50}}>\n-              <div className=\"col-md-5\" style={{padding: 0}}>\n-                <Input type=\"text\"\n-                       ref=\"keyword\"\n-                       name=\"keyword\"\n-                       defaultValue={this.state.rangeParams.get('keyword')}\n-                       onChange={this._keywordSearchChanged}\n-                       placeholder=\"Last week\"\n-                       className=\"input-sm\"\n-                       required/>\n-              </div>\n-              <div className=\"col-md-7\" style={{paddingRight: 0}}>\n-                {this.state.keywordPreview.size > 0 &&\n-                <Alert bsStyle=\"info\" style={{height: 30, paddingTop: 5, paddingBottom: 5, marginTop: 0}}>\n-                  <strong style={{marginRight: 8}}>Preview:</strong>\n-                  {this.state.keywordPreview.get('from')} to {this.state.keywordPreview.get('to')}\n-                </Alert>\n+        </div>\n+      );\n+      break;\n+    case 'keyword':\n+      selector = (\n+        <div className=\"timerange-selector keyword\" style={{width: 650}}>\n+          <div className=\"row no-bm\" style={{marginLeft: 50}}>\n+            <div className=\"col-md-5\" style={{padding: 0}}>\n+              <Input type=\"text\"\n+                     ref=\"keyword\"\n+                     name=\"keyword\"\n+                     defaultValue={this.state.rangeParams.get('keyword')}\n+                     onChange={this._keywordSearchChanged}\n+                     placeholder=\"Last week\"\n+                     className=\"input-sm\"\n+                     required/>\n+            </div>\n+            <div className=\"col-md-7\" style={{paddingRight: 0}}>\n+              {this.state.keywordPreview.size > 0 &&\n+              <Alert bsStyle=\"info\" style={{height: 30, paddingTop: 5, paddingBottom: 5, marginTop: 0}}>\n+                <strong style={{marginRight: 8}}>Preview:</strong>\n+    ",
    "added checks for sender MTU vs . receiver socket SO_RCVBUF and vs . receiver buffer capacity .": "diff --git a/aeron-common/src/main/java/uk/co/real_logic/aeron/common/event/EventCodec.java b/aeron-common/src/main/java/uk/co/real_logic/aeron/common/event/EventCodec.java\nindex 8b288d9a8..594d474de 100644\n--- a/aeron-common/src/main/java/uk/co/real_logic/aeron/common/event/EventCodec.java\n+++ b/aeron-common/src/main/java/uk/co/real_logic/aeron/common/event/EventCodec.java\n@@ -458,14 +458,15 @@ public class EventCodec\n \n     private static String dissect(final SetupFlyweight header)\n     {\n-        return String.format(\"SETUP %x len %d %x:%x:%x @%x %d\",\n+        return String.format(\"SETUP %x len %d %x:%x:%x @%x %d MTU %d\",\n             header.flags(),\n             header.frameLength(),\n             header.sessionId(),\n             header.streamId(),\n             header.termId(),\n             header.termOffset(),\n-            header.termSize());\n+            header.termSize(),\n+            header.mtuLength());\n     }\n \n     private static String dissect(final PublicationMessageFlyweight command)\ndiff --git a/aeron-common/src/main/java/uk/co/real_logic/aeron/common/protocol/SetupFlyweight.java b/aeron-common/src/main/java/uk/co/real_logic/aeron/common/protocol/SetupFlyweight.java\nindex e99b1c483..35a689e4c 100644\n--- a/aeron-common/src/main/java/uk/co/real_logic/aeron/common/protocol/SetupFlyweight.java\n+++ b/aeron-common/src/main/java/uk/co/real_logic/aeron/common/protocol/SetupFlyweight.java\n@@ -26,13 +26,14 @@ import static java.nio.ByteOrder.LITTLE_ENDIAN;\n public class SetupFlyweight extends HeaderFlyweight\n {\n     /** Size of the Setup Header */\n-    public static final int HEADER_LENGTH = 28;\n+    public static final int HEADER_LENGTH = 32;\n \n     private static final int TERM_OFFSET_FIELD_OFFSET = 8;\n     private static final int SESSION_ID_FIELD_OFFSET = 12;\n     private static final int STREAM_ID_FIELD_OFFSET = 16;\n     private static final int TERM_ID_FIELD_OFFSET = 20;\n     private static final int TERM_SIZE_FIELD_OFFSET = 24;\n+    private static final int MTU_LENGTH_FIELD_OFFSET = 28;\n \n     /**\n      * return term offset field\n@@ -146,4 +147,27 @@ public class SetupFlyweight extends HeaderFlyweight\n \n         return this;\n     }\n+\n+    /**\n+     * Return MTU length field\n+     *\n+     * @return MTU length field value\n+     */\n+    public int mtuLength()\n+    {\n+        return atomicBuffer().getInt(offset() + MTU_LENGTH_FIELD_OFFSET, LITTLE_ENDIAN);\n+    }\n+\n+    /**\n+     * Set MTU length field\n+     *\n+     * @param mtuLength field value\n+     * @return flyweight\n+     */\n+    public SetupFlyweight mtuLength(final int mtuLength)\n+    {\n+        atomicBuffer().putInt(offset() + MTU_LENGTH_FIELD_OFFSET, mtuLength, LITTLE_ENDIAN);\n+\n+        return this;\n+    }\n }\ndiff --git a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DataFrameDispatcher.java b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DataFrameDispatcher.java\nindex 3285bd433..dbf3072d6 100644\n--- a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DataFrameDispatcher.java\n+++ b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DataFrameDispatcher.java\n@@ -146,7 +146,8 @@ public class DataFrameDispatcher implements DataFrameHandler, SetupFrameHandler\n \n             if (null == connection && !INIT_IN_PROGRESS.equals(initialisationInProgressMap.get(sessionId, streamId)))\n             {\n-                createConnection(srcAddress, streamId, sessionId, termId, header.termOffset(), header.termSize());\n+                createConnection(\n+                    srcAddress, streamId, sessionId, termId, header.termOffset(), header.termSize(), header.mtuLength());\n             }\n         }\n     }\n@@ -167,7 +168,8 @@ public class DataFrameDispatcher implements DataFrameHandler, SetupFrameHandler\n         final int sessionId,\n         final int termId,\n         final int termOffset,\n-        final int termSize)\n+        final int termSize,\n+        final int mtuLength)\n     {\n         final UdpChannelTransport transport = channelEndpoint.transport();\n         final InetSocketAddress controlAddress =\n@@ -175,6 +177,6 @@ public class DataFrameDispatcher implements DataFrameHandler, SetupFrameHandler\n \n         initialisationInProgressMap.put(sessionId, streamId, INIT_IN_PROGRESS);\n         conductorProxy.createConnection(\n-                sessionId, streamId, termId, termOffset, termSize, controlAddress, srcAddress, channelEndpoint);\n+            sessionId, streamId, termId, termOffset, termSize, mtuLength, controlAddress, srcAddress, channelEndpoint);\n     }\n }\ndiff --git a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DriverConductor.java b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DriverConductor.java\nindex 042e32a0f..bf8a81574 100644\n--- a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DriverConductor.java\n+++ b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DriverConductor.java\n@@ -193,6 +193,7 @@ public class DriverConductor extends Agent\n                 cmd.termId(),\n                 cmd.termOffset(),\n                 cmd.termSize(),\n+                cmd.senderMtuLength(),\n                 cmd.controlAddress(),\n                 cmd.srcAddress(),\n                 cmd.channelEndpoint());\n@@ -544,10 +545,12 @@ public class DriverConductor extends Agent\n         final int initialTermId,\n         final int initialTermOffset,\n         final int termBufferSize,\n+        final int senderMtuLength,\n         final InetSocketAddress controlAddress,\n         final InetSocketAddress sourceAddress,\n         final ReceiveChannelEndpoint channelEndpoint)\n     {\n+        channelEndpoint.validateSenderMtuLength(senderMtuLength);\n         // window size is static at the moment. This needs to change to max once it is adjustable.\n         channelEndpoint.validateWindowSizeMax(initialWindowSize);\n \ndiff --git a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DriverConductorProxy.java b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DriverConductorProxy.java\nindex b020d46fb..34848750e 100644\n--- a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DriverConductorProxy.java\n+++ b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DriverConductorProxy.java\n@@ -42,13 +42,15 @@ public class DriverConductorProxy\n         final int termId,\n         final int termOffset,\n         final int termSize,\n+        final int senderMtuLength,\n         final InetSocketAddress controlAddress,\n         final InetSocketAddress srcAddress,\n         final ReceiveChannelEndpoint channelEndpoint)\n     {\n         offerCommand(\n             new CreateConnectionCmd(\n-                sessionId, streamId, termId, termOffset, termSize, controlAddress, srcAddress, channelEndpoint));\n+                sessionId, streamId, termId, termOffset, termSize, senderMtuLength,\n+                controlAddress, srcAddress, channelEndpoint));\n     }\n \n     public void elicitSetupFromSource(\ndiff --git a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DriverPublication.java b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DriverPublication.java\nindex 846247fd0..4d7bd069c 100644\n--- a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DriverPublication.java\n+++ b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/DriverPublication.java\n@@ -437,6 +437,7 @@ public class DriverPublication implements AutoCloseable\n                    .termId(activeTermId)\n                    .termOffset(0)\n                    .termSize(termCapacity)\n+                   .mtuLength(mtuLength)\n                    .frameLength(SetupFlyweight.HEADER_LENGTH)\n                    .headerType(HeaderFlyweight.HDR_TYPE_SETUP)\n                    .flags((byte)0)\ndiff --git a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/ReceiveChannelEndpoint.java b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/ReceiveChannelEndpoint.java\nindex ac76fad69..c9e90e309 100644\n--- a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/ReceiveChannelEndpoint.java\n+++ b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/ReceiveChannelEndpoint.java\n@@ -173,6 +173,27 @@ public class ReceiveChannelEndpoint implements AutoCloseable\n         }\n     }\n \n+    public void validateSenderMtuLength(final int senderMtuLength)\n+    {\n+        final int soRcvbuf = transport.getOption(StandardSocketOptions.SO_RCVBUF);\n+\n+        if (senderMtuLength > soRcvbuf)\n+        {\n+            throw new ConfigurationException(\n+                String.format(\"Sender MTU greater than socket SO_RCVBUF: senderMtuLength=%d, SO_RCVBUF=%d\",\n+                    senderMtuLength, soRcvbuf));\n+        }\n+\n+        final int capacity = transport.receiveBufferCapacity();\n+\n+        if (senderMtuLength > capacity)\n+        {\n+            throw new ConfigurationException(\n+                String.format(\"Sender MTU greater than receive buffer capacity: senderMtuLength=%d, capacity=%d\",\n+                    senderMtuLength, capacity));\n+        }\n+    }\n+\n     private void sendStatusMessage(\n         final InetSocketAddress controlAddress,\n         final int sessionId,\ndiff --git a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/UdpChannelTransport.java b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/UdpChannelTransport.java\nindex 8a3c47478..80536d29f 100644\n--- a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/UdpChannelTransport.java\n+++ b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/UdpChannelTransport.java\n@@ -180,6 +180,16 @@ public abstract class UdpChannelTransport implements AutoCloseable\n         }\n     }\n \n+    /**\n+     * Return the capacity of the {@link ByteBuffer} used for reception\n+     *\n+     * @return capacity of receiving byte buffer\n+     */\n+    public int receiveBufferCapacity()\n+    {\n+        return readByteBuffer.capacity();\n+    }\n+\n     protected boolean isFrameValid(final int length)\n     {\n         boolean isFrameValid = true;\ndiff --git a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/cmd/CreateConnectionCmd.java b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/cmd/CreateConnectionCmd.java\nindex 520924e07..ecdce23a1 100644\n--- a/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/cmd/CreateConnectionCmd.java\n+++ b/aeron-driver/src/main/java/uk/co/real_logic/aeron/driver/cmd/CreateConnectionCmd.java\n@@ -26,6 +26,7 @@ public class CreateConnectionCmd\n     private final int termId;\n     private final int termOffset;\n     private final int termSize;\n+    private final int senderMtuLength;\n     private final InetSocketAddress controlAddress;\n     private final InetSocketAddress srcAddress;\n     private final ReceiveChannelEndpoint channelEndpoint;\n@@ -36,6 +37,7 @@ public class CreateConnectionCmd\n         final int termId,\n         final int termOffet,\n         final",
    "add new test": "diff --git a/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/AllTests.java b/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/AllTests.java\nindex b4d7371d9be..ca45df991da 100644\n--- a/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/AllTests.java\n+++ b/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/AllTests.java\n@@ -18,14 +18,12 @@\n package io.shardingsphere.jdbc.orchestration;\n \n import io.shardingsphere.jdbc.orchestration.internal.AllInternalTests;\n-import io.shardingsphere.jdbc.orchestration.yaml.AllYamlTests;\n import org.junit.runner.RunWith;\n import org.junit.runners.Suite;\n import org.junit.runners.Suite.SuiteClasses;\n \n @RunWith(Suite.class)\n @SuiteClasses({\n-        AllYamlTests.class,\n         AllInternalTests.class\n     })\n public final class AllTests {\ndiff --git a/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/internal/AllInternalTests.java b/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/internal/AllInternalTests.java\nindex 72e037b736a..5213a3d0bb3 100644\n--- a/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/internal/AllInternalTests.java\n+++ b/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/internal/AllInternalTests.java\n@@ -18,14 +18,12 @@\n package io.shardingsphere.jdbc.orchestration.internal;\n \n import io.shardingsphere.jdbc.orchestration.internal.config.ConfigurationNodeTest;\n-import io.shardingsphere.jdbc.orchestration.internal.jdbc.AllOrcheTests;\n import org.junit.runner.RunWith;\n import org.junit.runners.Suite;\n \n @RunWith(Suite.class)\n @Suite.SuiteClasses({\n-        ConfigurationNodeTest.class,\n-        AllOrcheTests.class\n+        ConfigurationNodeTest.class\n })\n public final class AllInternalTests {\n }\ndiff --git a/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/AllTests.java b/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/AllTests.java\nnew file mode 100644\nindex 00000000000..0c7a478eda5\n--- /dev/null\n+++ b/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/AllTests.java\n@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2016-2018 shardingsphere.io.\n+ * <p>\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * </p>\n+ */\n+\n+package io.shardingsphere.jdbc.orchestration;\n+\n+import io.shardingsphere.jdbc.orchestration.api.AllApiTests;\n+import io.shardingsphere.jdbc.orchestration.internal.AllInternalTests;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+import org.junit.runners.Suite.SuiteClasses;\n+\n+@RunWith(Suite.class)\n+@SuiteClasses({\n+        AllInternalTests.class,\n+        AllApiTests.class\n+    })\n+public final class AllTests {\n+}\ndiff --git a/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/api/AllApiTests.java b/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/api/AllApiTests.java\nnew file mode 100644\nindex 00000000000..4a7bf96f26f\n--- /dev/null\n+++ b/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/api/AllApiTests.java\n@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2016-2018 shardingsphere.io.\n+ * <p>\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * </p>\n+ */\n+\n+package io.shardingsphere.jdbc.orchestration.api;\n+\n+import io.shardingsphere.jdbc.orchestration.api.yaml.AllYamlTests;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+\n+@RunWith(Suite.class)\n+@Suite.SuiteClasses({\n+        AllYamlTests.class\n+    })\n+public final class AllApiTests {\n+}\ndiff --git a/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/yaml/AbstractYamlDataSourceTest.java b/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/api/yaml/AbstractYamlDataSourceTest.java\nsimilarity index 94%\nrename from sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/yaml/AbstractYamlDataSourceTest.java\nrename to sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/api/yaml/AbstractYamlDataSourceTest.java\nindex ea899b02223..208ed14536f 100644\n--- a/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/yaml/AbstractYamlDataSourceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/api/yaml/AbstractYamlDataSourceTest.java\n@@ -15,9 +15,9 @@\n  * </p>\n  */\n \n-package io.shardingsphere.jdbc.orchestration.yaml;\n+package io.shardingsphere.jdbc.orchestration.api.yaml;\n \n-import io.shardingsphere.jdbc.orchestration.util.EmbedTestingServer;\n+import io.shardingsphere.jdbc.orchestration.api.yaml.util.EmbedTestingServer;\n import org.apache.commons.dbcp2.BasicDataSource;\n import org.h2.tools.RunScript;\n import org.junit.BeforeClass;\ndiff --git a/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/yaml/AllYamlTests.java b/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/api/yaml/AllYamlTests.java\nsimilarity index 71%\nrename from sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/yaml/AllYamlTests.java\nrename to sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/api/yaml/AllYamlTests.java\nindex 23e97464896..053a299c6ab 100644\n--- a/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/yaml/AllYamlTests.java\n+++ b/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/api/yaml/AllYamlTests.java\n@@ -15,11 +15,11 @@\n  * </p>\n  */\n \n-package io.shardingsphere.jdbc.orchestration.yaml;\n+package io.shardingsphere.jdbc.orchestration.api.yaml;\n \n-import io.shardingsphere.jdbc.orchestration.yaml.masterslave.YamlOrchestrationMasterSlaveIntegrateTest;\n-import io.shardingsphere.jdbc.orchestration.yaml.sharding.YamlOrchestrationShardingIntegrateTest;\n-import io.shardingsphere.jdbc.orchestration.yaml.sharding.YamlOrchestrationShardingWithMasterSlaveIntegrateTest;\n+import io.shardingsphere.jdbc.orchestration.api.yaml.masterslave.YamlOrchestrationMasterSlaveIntegrateTest;\n+import io.shardingsphere.jdbc.orchestration.api.yaml.sharding.YamlOrchestrationShardingIntegrateTest;\n+import io.shardingsphere.jdbc.orchestration.api.yaml.sharding.YamlOrchestrationShardingWithMasterSlaveIntegrateTest;\n import org.junit.runner.RunWith;\n import org.junit.runners.Suite;\n \ndiff --git a/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/internal/AllInternalTests.java b/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/internal/AllInternalTests.java\nnew file mode 100644\nindex 00000000000..c94c0a09704\n--- /dev/null\n+++ b/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/internal/AllInternalTests.java\n@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2016-2018 shardingsphere.io.\n+ * <p>\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * </p>\n+ */\n+\n+package io.shardingsphere.jdbc.orchestration.internal;\n+\n+import io.shardingsphere.jdbc.orchestration.internal.circuit.AllCircuitTests;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+import org.junit.runners.Suite.SuiteClasses;\n+\n+@RunWith(Suite.class)\n+@SuiteClasses({\n+        AllCircuitTests.class\n+    })\n+public final class AllInternalTests {\n+}\ndiff --git a/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/internal/jdbc/AllOrcheTests.java b/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/internal/circuit/AllCircuitTests.java\nsimilarity index 92%\nrename from sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/internal/jdbc/AllOrcheTests.java\nrename to sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/internal/circuit/AllCircuitTests.java\nindex 5e036fa23c6..f66f0d5fb67 100644\n--- a/sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/internal/jdbc/AllOrcheTests.java\n+++ b/sharding-orchestration/sharding-orchestration-jdbc/src/test/java/io/shardingsphere/jdbc/orchestration/internal/circuit/AllCircuitTests.java\n@@ -15,7 +15,7 @@\n  * </p>\n  */\n \n-package io.shardingsphere.jdbc.orchestration.internal.jdbc;\n+package io.shardingsphere.jdbc.orchestration.internal.circuit;\n \n import io.shardingsphere.jdbc.orchestration.internal.circuit.connection.CircuitBreakerConnectionTest;\n import io.shardingsphere.jdbc.orchestration.internal.circuit.datasource.CircuitBreakerDataSourceTest;\n@@ -29,5 +29,5 @@ import org.junit.runners.Suite;\n         CircuitBreakerDataSourceTest.class,\n         CircuitBreakerDatabaseMetaDataTest.class\n     })\n-public final class AllOrcheTests {\n+public final class AllCircuitTests {\n }\ndiff --git a/sharding-orchestration/sharding-orchestration-reg/src/test/java/io/shardingsphere/orchestration/AllTests.java b/sharding-orchestration/sharding-orchestration-reg/src/test/java/io/shardingsphere/orchestration/AllTests.java\nnew file mode 100644\nindex 00000000000..4a56a4beaa4\n--- /dev/null\n+++ b/sharding-orchestration/sharding-orchestration-reg/src/test/java/io/shardingsphere/orchestration/AllTests.java\n@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2016-2018 shardingsphere.io.\n+ * <p>\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * </p>\n+ */\n+\n+package io.shardingsphere.orchestration;\n+\n+import io.shardingsphere.orchestration.reg.AllRegTests;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+import org.junit.runners.Suite.SuiteClasses;\n+\n+@RunWith(Suite.class)\n+@SuiteClasses({\n+        AllRegTests.class\n+    })\n+public final class AllTests {\n+}\ndiff --git a/sharding-orchestration/sharding-orchestration-reg/src/test/java/io/shardingsphere/orchestration/reg/AllRegTests.java b/sharding-orchestration/sharding-orchestration-reg/src/test/java/io/shardingsphere/orchestration/reg/AllRegTests.java\nnew file mode 100644\nindex 00000000000..88086e13b50\n--- /dev/null\n+++ b/sharding-orchestration/sharding-orchestration-reg/src/test/java/io/shardingsphere/orchestration/reg/AllRegTests.java\n@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2016-2018 shardingsphere.io.\n+ * <p>\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * </p>\n+ */\n+\n+package io.shardingsphere.orchestration.reg;\n+\n+import io.shardingsphere.orchestration.reg.newzk.AllNewzkTests;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+import org.junit.runners.Suite.SuiteClasses;\n+\n+@RunWith(Suite.class)\n+@SuiteClasses({\n+        AllNewzkTests.class\n+    })\n+public final class AllRegTests {\n+}\ndiff --git a/sharding-orchestration/sharding-orchestration-reg/src/test/java/io/shardingsphere/orchestration/reg/newzk/AllNewzkTests.java b/sharding-orchestration/sharding-orchestration-reg/src/test/java/io/shardingsphere/orchestration/reg/newzk/AllNewzkTests.java\nnew file mode 100644\nindex 00000000000..6f07f80b80c\n--- /dev/null\n+++ b/sharding-orchestration/sharding-orchestration-reg/src/test/java/io/shardingsphere/orchestration/reg/newzk/AllNewzkTests.java\n@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2016-2018 shardingsphere.io.\n+ * <p>\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * </p>\n+ */\n+\n+package io.shardingsphere.orchestration.reg.newzk;\n+\n+import io.shardingsphere.orchestration.reg.newzk.client.cache.PathResolveTest;\n+import io.shardingsphere.orchestration.reg.newzk.client.cache.PathTreeTest;\n+import io.shardingsphere.orchestration.reg.newzk.client.retry.TestCallable;\n+import io.shardingsphere.orchestration.reg.newzk.client.retry.TestResultCallable;\n+import io.shardingsphere.orchestration.reg.newzk.client.zookeeper.AllBaseTests;\n+import io.shardingsphere.orchestration.reg.newzk.client.zookeeper.SyncRetryStrategyTest;\n+import io.shardingsphere.orchestration.reg.newzk.client.zookeeper.UsualClientTest;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+import org.junit.runners.Suite.SuiteClasses;\n+\n+@RunWith(Suite.class)\n+@SuiteClasses({\n+        PathResolveTest.class,\n+        PathTreeTest.class,\n+        TestCallable.class,\n+        TestResultCallable.class,\n+        SyncRetryStrategyTest.class,\n+        AllBaseTests.class,\n+        UsualClientTest.class\n+    })\n+public final class AllNewzkTests {\n+}\ndiff --git a/sharding-orchestration/sharding-orchestration-reg/src/test/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/AllBaseTests.java b/sharding-orchestration/sharding-orchestration-reg/src/test/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/AllBaseTests.java\nnew file mode 100644\nindex 00000000000..f39f19fd916\n--- /dev/null\n+++ b/sharding-orchestration/sharding-orchestration-reg/src/test/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/AllBaseTests.java\n@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2016-2018 shardingsphere.io.\n+ * <p>\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * </p>\n+ */\n+\n+package io.shardingsphere.orchestration.reg.newzk.client.zookeeper;\n+\n+import io.shardingsphere.orchestration.reg.newzk.client.zookeeper.base.BaseClientTest;\n+import io.shardingsphere.orchestration.reg.newzk.client.zookeeper.base.BaseTest;\n+import io.shardingsphere.orchestration.reg.newzk.client.zookeeper.base.StartWaitTest;\n+import io.shardingsphere.orchestration.reg.newzk.client.zookeeper.base.TestClient;\n+import io.shardingsphere.orchestration.reg.newzk.client.zookeeper.base.TestHolder;\n+import io.shardingsphere.orchestration.reg.newzk.client.zookeeper.base.TestSupport;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+import org.junit.runners.Suite.SuiteClasses;\n+\n+@RunWith(Suite.class)\n+@SuiteClasses({\n+        BaseClientTest.class,\n+        BaseTest.class,\n+        StartWaitTest.class,\n+        TestClient.class,\n+        TestHolder.class,\n+        TestSupport.class\n+    })\n+public final class AllBaseTests {\n+}",
    "Declare 3rd party system an array to allow none and multiple .": "diff --git a/metrics-proxy/src/main/resources/configdefinitions/telegraf.def b/metrics-proxy/src/main/resources/configdefinitions/telegraf.def\nindex 9f62252e0bf..f3b5db35d52 100644\n--- a/metrics-proxy/src/main/resources/configdefinitions/telegraf.def\n+++ b/metrics-proxy/src/main/resources/configdefinitions/telegraf.def\n@@ -9,12 +9,12 @@ intervalSeconds int default=60\n vespa.consumer string default=\"default\"\n \n \n-cloudWatch.region string default=\"us-east-1\"\n-cloudWatch.namespace string\n+cloudWatch[].region string default=\"us-east-1\"\n+cloudWatch[].namespace string\n \n # Only valid and required for hosted Vespa\n-cloudWatch.accessKeyName string default=\"\"\n-cloudWatch.secretKeyName string default=\"\"\n+cloudWatch[].accessKeyName string default=\"\"\n+cloudWatch[].secretKeyName string default=\"\"\n \n # Only valid and optional for self-hosted Vespa\n-cloudWatch.profile string default=\"\"\n+cloudWatch[].profile string default=\"\"",
    "Move JNI unpinning layout decision to support object": "diff --git a/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/JNISupport.java b/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/JNISupport.java\nnew file mode 100644\nindex 00000000000..ddbc7b71973\n--- /dev/null\n+++ b/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/JNISupport.java\n@@ -0,0 +1,31 @@\n+/*\n+ * Copyright (c) 2020, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+package com.oracle.svm.jni;\n+\n+public class JNISupport {\n+    public boolean isArrayLayout(Class<?> clazz) {\n+        return clazz.isArray();\n+    }\n+}\ndiff --git a/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/JNIThreadLocalPinnedObjects.java b/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/JNIThreadLocalPinnedObjects.java\nindex 76d6eada12b..d93e7ab170f 100644\n--- a/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/JNIThreadLocalPinnedObjects.java\n+++ b/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/JNIThreadLocalPinnedObjects.java\n@@ -26,6 +26,7 @@ package com.oracle.svm.jni;\n \n import java.util.function.Predicate;\n \n+import org.graalvm.nativeimage.ImageSingletons;\n import org.graalvm.nativeimage.PinnedObject;\n import org.graalvm.word.PointerBase;\n \n@@ -54,6 +55,13 @@ public class JNIThreadLocalPinnedObjects {\n         return pin.addressOfArrayElement(0);\n     }\n \n+    /**\n+     * Unpins the first object in the pinned objects list matching a predicate.\n+     * \n+     * @param p Predicate determining whether to unpin an object.\n+     * @return {@code true} if an object was unpinned, {@code false} if no object in the pinned\n+     *         objects list matched the predicate.\n+     */\n     private static boolean unpinFirst(Predicate<PinnedObjectListNode> p) {\n         PinnedObjectListNode previous = null;\n         PinnedObjectListNode current = pinnedObjectsListHead.get();\n@@ -78,7 +86,8 @@ public class JNIThreadLocalPinnedObjects {\n     }\n \n     public static boolean unpinArrayByAddress(PointerBase address) {\n-        return unpinFirst(n -> n.object.getObject().getClass().isArray() && n.object.addressOfArrayElement(0) == address);\n+        JNISupport support = ImageSingletons.lookup(JNISupport.class);\n+        return unpinFirst(n -> support.isArrayLayout(n.object.getObject().getClass()) && n.object.addressOfArrayElement(0) == address);\n     }\n \n     static int pinnedObjectCount() {\ndiff --git a/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/access/JNIAccessFeature.java b/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/access/JNIAccessFeature.java\nindex d2028cb8945..39614d3de16 100644\n--- a/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/access/JNIAccessFeature.java\n+++ b/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/access/JNIAccessFeature.java\n@@ -65,6 +65,7 @@ import com.oracle.svm.hosted.config.ConfigurationParserUtils;\n import com.oracle.svm.hosted.meta.MaterializedConstantFields;\n import com.oracle.svm.hosted.substitute.SubstitutionReflectivityFilter;\n import com.oracle.svm.jni.JNIJavaCallWrappers;\n+import com.oracle.svm.jni.JNISupport;\n import com.oracle.svm.jni.hosted.JNICallTrampolineMethod;\n import com.oracle.svm.jni.hosted.JNIFieldAccessorMethodFactory;\n import com.oracle.svm.jni.hosted.JNIJavaCallWrapperMethod;\n@@ -161,6 +162,9 @@ public class JNIAccessFeature implements Feature {\n         if (!ImageSingletons.contains(JNIFieldAccessorMethodFactory.class)) {\n             ImageSingletons.add(JNIFieldAccessorMethodFactory.class, new JNIFieldAccessorMethodFactory());\n         }\n+        if (!ImageSingletons.contains(JNISupport.class)) {\n+            ImageSingletons.add(JNISupport.class, new JNISupport());\n+        }\n \n         BeforeAnalysisAccessImpl access = (BeforeAnalysisAccessImpl) arg;\n         this.nativeLibraries = access.getNativeLibraries();\ndiff --git a/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/functions/JNIFunctionTablesFeature.java b/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/functions/JNIFunctionTablesFeature.java\nindex 95b4a4ec0aa..ca6a3381ecb 100644\n--- a/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/functions/JNIFunctionTablesFeature.java\n+++ b/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/functions/JNIFunctionTablesFeature.java\n@@ -112,7 +112,7 @@ public class JNIFunctionTablesFeature implements Feature {\n         AnalysisType invokes = metaAccess.lookupJavaType(JNIInvocationInterface.class);\n         AnalysisType exports = metaAccess.lookupJavaType(JNIInvocationInterface.Exports.class);\n         AnalysisType functions = metaAccess.lookupJavaType(JNIFunctions.class);\n-        Stream<AnalysisMethod> analysisMethods = Stream.of(invokes, functions, exports).flatMap(t -> Stream.of(t.getDeclaredMethods()));\n+        Stream<AnalysisMethod> analysisMethods = Stream.of(invokes, functions, exports).flatMap(type -> Stream.of(type.getDeclaredMethods()));\n         Stream<AnalysisMethod> unimplementedMethods = Stream.of((AnalysisMethod) getSingleMethod(metaAccess, UnimplementedWithJNIEnvArgument.class),\n                         (AnalysisMethod) getSingleMethod(metaAccess, UnimplementedWithJavaVMArgument.class));\n         Stream.concat(analysisMethods, unimplementedMethods).forEach(method -> {\n@@ -207,8 +207,7 @@ public class JNIFunctionTablesFeature implements Feature {\n     private void fillJNIFunctionsTable(CompilationAccessImpl access, CFunctionPointer[] table, CFunctionPointer defaultValue) {\n         initializeFunctionPointerTable(access, table, defaultValue);\n \n-        Class<JNIFunctions> clazz = JNIFunctions.class;\n-        HostedType functions = access.getMetaAccess().lookupJavaType(clazz);\n+        HostedType functions = access.getMetaAccess().lookupJavaType(JNIFunctions.class);\n         HostedMethod[] methods = functions.getDeclaredMethods();\n         for (HostedMethod method : methods) {\n             StructFieldInfo field = findFieldFor(functionTableMetadata, method.getName());\ndiff --git a/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/functions/JNIFunctions.java b/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/functions/JNIFunctions.java\nindex fae5885afa5..7d63dd8e709 100644\n--- a/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/functions/JNIFunctions.java\n+++ b/substratevm/src/com.oracle.svm.jni/src/com/oracle/svm/jni/functions/JNIFunctions.java\n@@ -134,7 +134,7 @@ import sun.misc.Unsafe;\n  *      Native Interface Specification: JNI Functions</a>\n  */\n @SuppressWarnings(\"unused\")\n-final class JNIFunctions {\n+public final class JNIFunctions {\n \n     // Checkstyle: stop\n \n@@ -976,7 +976,7 @@ final class JNIFunctions {\n      * Helper code for JNI functions. This is an inner class because the outer methods must match\n      * JNI functions.\n      */\n-    static class Support {\n+    public static class Support {\n         static class JNIEnvEnterReturnEDetachedOnFailurePrologue {\n             public static void enter(JNIEnvironment env) {\n                 int error = CEntryPointActions.enter((IsolateThread) env);\n@@ -1016,7 +1016,7 @@ final class JNIFunctions {\n         static final CGlobalData<CCharPointer> JNIENV_ENTER_FAIL_FATALLY_MESSAGE = CGlobalDataFactory.createCString(\n                         \"A JNI call failed to enter the isolate via its JNI environment argument. The environment might be invalid or no longer exists.\");\n \n-        static class JNIEnvEnterFatalOnFailurePrologue {\n+        public static class JNIEnvEnterFatalOnFailurePrologue {\n             public static void enter(JNIEnvironment env) {\n                 int error = CEntryPointActions.enter((IsolateThread) env);\n                 if (error != 0) {\n@@ -1041,7 +1041,7 @@ final class JNIFunctions {\n             }\n         }\n \n-        static class JNIExceptionHandlerVoid {\n+        public static class JNIExceptionHandlerVoid {\n             static void handle(Throwable t) {\n                 Support.handleException(t);\n             }",
    "Add TCP_QUICKACK socket option .": "diff --git a/make/lib/Lib-jdk.net.gmk b/make/lib/Lib-jdk.net.gmk\nindex b0859339f95..d1e35e82d4d 100644\n--- a/make/lib/Lib-jdk.net.gmk\n+++ b/make/lib/Lib-jdk.net.gmk\n@@ -1,5 +1,5 @@\n #\n-# Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2017, Oracle and/or its affiliates. All rights reserved.\n # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n #\n # This code is free software; you can redistribute it and/or modify it\n@@ -35,7 +35,7 @@ ifeq ($(OPENJDK_TARGET_OS), solaris)\n       SRC := $(TOPDIR)/src/jdk.net/solaris/native/libextnet, \\\n       OPTIMIZATION := LOW, \\\n       CFLAGS := $(CFLAGS_JDKLIB) -I$(SUPPORT_OUTPUTDIR)/headers/jdk.net, \\\n-      MAPFILE := $(TOPDIR)/make/mapfiles/libextnet/mapfile-vers, \\\n+      MAPFILE := $(TOPDIR)/make/mapfiles/libextnet/mapfile-solaris, \\\n       LDFLAGS := $(LDFLAGS_JDKLIB) \\\n           $(call SET_SHARED_LIBRARY_ORIGIN), \\\n       LIBS := -lsocket -lc -ljava, \\\n@@ -48,4 +48,25 @@ ifeq ($(OPENJDK_TARGET_OS), solaris)\n endif\n \n \n+ifeq ($(OPENJDK_TARGET_OS), linux)\n+\n+  $(eval $(call SetupNativeCompilation, BUILD_LIBEXTNET, \\\n+      LIBRARY := extnet, \\\n+      OUTPUT_DIR := $(INSTALL_LIBRARIES_HERE), \\\n+      SRC := $(TOPDIR)/src/jdk.net/linux/native/libextnet, \\\n+      OPTIMIZATION := LOW, \\\n+      CFLAGS := $(CFLAGS_JDKLIB) -I$(SUPPORT_OUTPUTDIR)/headers/jdk.net, \\\n+      MAPFILE := $(TOPDIR)/make/mapfiles/libextnet/mapfile-linux, \\\n+      LDFLAGS := $(LDFLAGS_JDKLIB) \\\n+          $(call SET_SHARED_LIBRARY_ORIGIN), \\\n+      LIBS := -ljvm -ljava -lc, \\\n+      OBJECT_DIR := $(SUPPORT_OUTPUTDIR)/native/$(MODULE)/libextnet, \\\n+  ))\n+\n+  $(BUILD_LIBEXTNET): $(call FindLib, java.base, java)\n+\n+  TARGETS += $(BUILD_LIBEXTNET)\n+endif\n+\n+\n ################################################################################\ndiff --git a/make/mapfiles/libextnet/mapfile-linux b/make/mapfiles/libextnet/mapfile-linux\nnew file mode 100644\nindex 00000000000..7e47c863824\n--- /dev/null\n+++ b/make/mapfiles/libextnet/mapfile-linux\n@@ -0,0 +1,33 @@\n+#\n+# Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+SUNWprivate_1.1 {\n+\tglobal:\n+    \tJava_jdk_net_LinuxSocketOptions_setQuickAck0;\n+    \tJava_jdk_net_LinuxSocketOptions_getQuickAck0;\n+    \tJava_jdk_net_LinuxSocketOptions_quickAckSupported0;\n+\tlocal:\n+\t    *;\n+};\ndiff --git a/make/mapfiles/libextnet/mapfile-vers b/make/mapfiles/libextnet/mapfile-solaris\nsimilarity index 95%\nrename from make/mapfiles/libextnet/mapfile-vers\nrename to make/mapfiles/libextnet/mapfile-solaris\nindex 5dbc5b960aa..d43f9280c26 100644\n--- a/make/mapfiles/libextnet/mapfile-vers\n+++ b/make/mapfiles/libextnet/mapfile-solaris\n@@ -1,5 +1,5 @@\n #\n-# Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.\n # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n #\n # This code is free software; you can redistribute it and/or modify it\ndiff --git a/src/java.base/unix/classes/java/net/PlainDatagramSocketImpl.java b/src/java.base/unix/classes/java/net/PlainDatagramSocketImpl.java\nindex 32640dff272..22e96848050 100644\n--- a/src/java.base/unix/classes/java/net/PlainDatagramSocketImpl.java\n+++ b/src/java.base/unix/classes/java/net/PlainDatagramSocketImpl.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2007, 2016, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -85,10 +85,18 @@ protected <T> T getOption(SocketOption<T> name) throws IOException {\n \n     protected Set<SocketOption<?>> supportedOptions() {\n         HashSet<SocketOption<?>> options = new HashSet<>(super.supportedOptions());\n-        options.addAll(extendedOptions.options());\n+        addExtSocketOptions(extendedOptions.options(), options);\n         return options;\n     }\n \n+    private void addExtSocketOptions(Set<SocketOption<?>> extOptions,\n+                                     Set<SocketOption<?>> options) {\n+        // TCP_QUICKACK is applicable for TCP Sockets only.\n+        extOptions.stream()\n+                .filter((option) -> !option.name().equals(\"TCP_QUICKACK\"))\n+                .forEach((option) -> options.add(option));\n+    }\n+\n     protected void socketSetOption(int opt, Object val) throws SocketException {\n         if (opt == SocketOptions.SO_REUSEPORT &&\n             !supportedOptions().contains(StandardSocketOptions.SO_REUSEPORT)) {\ndiff --git a/src/jdk.net/linux/classes/jdk/net/LinuxSocketOptions.java b/src/jdk.net/linux/classes/jdk/net/LinuxSocketOptions.java\nnew file mode 100644\nindex 00000000000..353dd5e6b8c\n--- /dev/null\n+++ b/src/jdk.net/linux/classes/jdk/net/LinuxSocketOptions.java\n@@ -0,0 +1,64 @@\n+/*\n+ * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+package jdk.net;\n+\n+import java.net.SocketException;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import jdk.net.ExtendedSocketOptions.PlatformSocketOptions;\n+\n+class LinuxSocketOptions extends PlatformSocketOptions {\n+\n+    public LinuxSocketOptions() {\n+    }\n+\n+    @Override\n+    void setQuickAck(int fd, boolean on) throws SocketException {\n+        setQuickAck0(fd, on);\n+    }\n+\n+    @Override\n+    boolean getQuickAck(int fd) throws SocketException {\n+        return getQuickAck0(fd);\n+    }\n+\n+    @Override\n+    public boolean quickAckSupported() {\n+        return quickAckSupported0();\n+    }\n+\n+    native static private void setQuickAck0(int fd, boolean on) throws SocketException;\n+\n+    native static private boolean getQuickAck0(int fd) throws SocketException;\n+\n+    native static private boolean quickAckSupported0();\n+\n+    static {\n+        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n+            System.loadLibrary(\"extnet\");\n+            return null;\n+        });\n+    }\n+}\ndiff --git a/src/jdk.net/linux/native/libextnet/LinuxSocketOptions.c b/src/jdk.net/linux/native/libextnet/LinuxSocketOptions.c\nnew file mode 100644\nindex 00000000000..2beee6a5290\n--- /dev/null\n+++ b/src/jdk.net/linux/native/libextnet/LinuxSocketOptions.c\n@@ -0,0 +1,99 @@\n+/*\n+ * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+#include <sys/socket.h>\n+#include <string.h>\n+#include <errno.h>\n+#include <unistd.h>\n+\n+#include <jni.h>\n+#include <netinet/tcp.h>\n+#include \"jni_util.h\"\n+\n+/*\n+ * Class:     jdk_net_LinuxSocketOptions\n+ * Method:    setQuickAck\n+ * Signature: (II)V\n+ */\n+JNIEXPORT void JNICALL Java_jdk_net_LinuxSocketOptions_setQuickAck0\n+(JNIEnv *env, jobject unused, jint fd, jboolean on) {\n+    int optval;\n+    int rv;\n+    optval = (on ? 1 : 0);\n+    rv = setsockopt(fd, SOL_SOCKET, TCP_QUICKACK, &optval, sizeof (optval));\n+    if (rv < 0) {\n+        if (errno == ENOPROTOOPT) {\n+            JNU_ThrowByName(env, \"java/lang/UnsupportedOperationException\",\n+                            \"unsupported socket option\");\n+        } else {\n+            JNU_ThrowByNameWithLastError(env, \"java/net/SocketException\",\n+                                        \"set option TCP_QUICKACK failed\");\n+        }\n+    }\n+}\n+\n+/*\n+ * Class:     jdk_net_LinuxSocketOptions\n+ * Method:    getQuickAck\n+ * Signature: (I)Z;\n+ */\n+JNIEXPORT jboolean JNICALL Java_jdk_net_LinuxSocketOptions_getQuickAck0\n+(JNIEnv *env, jobject unused, jint fd) {\n+    int on;\n+    socklen_t sz = sizeof (on);\n+    int rv = getsockopt(fd, SOL_SOCKET, TCP_QUICKACK, &on, &sz);\n+    if (rv < 0) {\n+        if (errno == ENOPROTOOPT) {\n+            JNU_ThrowByName(env, \"java/lang/UnsupportedOperationException\",\n+                            \"unsupported socket option\");\n+        } else {\n+            JNU_ThrowByNameWithLastError(env, \"java/net/SocketException\",\n+                                        \"get option TCP_QUICKACK failed\");\n+        }\n+    }\n+    return on != 0;\n+}\n+\n+/*\n+ * Class:     jdk_net_LinuxSocketOptions\n+ * Method:    quickAckSupported\n+ * Signature: ()Z\n+ */\n+JNIEXPORT jboolean JNICALL Java_jdk_net_LinuxSocketOptions_quickAckSupported0\n+(JNIEnv *env, jobject unused) {\n+    int one = 1;\n+    int rv, s;\n+    s = socket(PF_INET, SOCK_STREAM, 0);\n+    if (s < 0) {\n+        return JNI_FALSE;\n+    }\n+    rv = setsockopt(s, SOL_SOCKET, TCP_QUICKACK, (void *) &one, sizeof (one));\n+    if (rv != 0 && errno == ENOPROTOOPT) {\n+        rv = JNI_FALSE;\n+    } else {\n+        rv = JNI_TRUE;\n+    }\n+    close(s);\n+    return rv;\n+}\ndiff --git a/src/jdk.net/share/classes/jdk/net/ExtendedSocketOptions.java b/src/jdk.net/share/classes/jdk/net/ExtendedSocketOptions.java\nindex bcae6ce2251..784d018e3a3 100644\n--- a/src/jdk.net/share/classes/jdk/net/ExtendedSocketOptions.java\n+++ b/src/jdk.net/share/classes/jdk/net/ExtendedSocketOptions.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2014, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2017, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -67,20 +67,53 @@ private ExtendedSocketOptions() { }\n     public static final SocketOption<SocketFlow> SO_FLOW_SLA = new\n         ExtSocketOption<SocketFlow>(\"SO_FLOW_SLA\", SocketFlow.class);\n \n+    /**\n+     * Disable Delayed Acknowledgements.\n+     *\n+     * <p>\n+     * This socket option can be used to reduce or disable delayed\n+     * acknowledgments (ACKs). When {@code TCP_QUICKACK} is enabled, ACKs are\n+     * sent immediately, rather than delayed if needed in accordance to normal\n+     * TCP operation. This option is not permanent, it only enables a switch to\n+     * or from {@code TCP_QUICKACK} mode. Subsequent operations of the TCP\n+     * protocol will once again disable/enable {@code TCP_QUICKACK} mode\n+     * depending on internal protocol processing and factors such as delayed ACK\n+     * timeouts occurring and data transfer, therefore this option needs to be\n+     * set with {@code setOption} after each operation of TCP on a given socket.\n+     *\n+     * <p>\n+     * The value of this socket option is a {@code Boolean} that represents\n+     * whether the option is enabled or disabled. The socket option is specific\n+     * to stream-oriented sockets using the TCP/IP protocol. The exact semantics\n+     * of this socket option are socket type and system dependent.\n+     *\n+     * @since 10\n+     */\n+    public static final SocketOption<Boolean> TCP_QUICKACK =\n+            new ExtSocketOption<Boolean>(\"TCP_QUICKACK\", Boolean.class);\n \n     private static final PlatformSocketOptions platformSocketOptions =\n             PlatformSocketOptions.get();\n \n     private static final boolean flowSupported =\n             platformSocketOptions.flowSupported();\n+    private static final boolean quickAckSupported =\n+            platformSocketOptions.quickAckSupported();\n \n     private static final Set<SocketOption<?>> extendedOptions = options();\n \n     static Set<SocketOption<?>> options() {\n-        if (flowSupported)\n-            return Set.of(SO_FLOW_SLA);\n-        else\n+        if (flowSupported) {\n+            if (quickAckSupported) {\n+                return Set.of(SO_FLOW_SLA, TCP_QUICKACK);\n+            } else {\n+                return Set.of(SO_FLOW_SLA);\n+            }\n+        } else if (quickAckSupported) {\n+            return Set.of(TCP_QUICKACK);\n+        } else {\n             return Collections.<SocketOption<?>>emptySet();\n+        }\n     }\n \n     static {\n@@ -105,6 +138,8 @@ public void setOption(FileDescriptor fd,\n                     assert flowSupported;\n                     SocketFlow flow = checkValueType(value, option.type());\n                     setFlowOption(fd, flow);\n+                } else if (option == TCP_QUICKACK) {\n+                    setQuickAckOption(fd, (boolean) value);\n                 } else {\n                     throw new InternalError(\"Unexpected option \" + option);\n                 }\n@@ -127,6 +162,8 @@ public Object getOption(FileDescriptor fd,\n                     SocketFlow flow = SocketFlow.create();\n                     getFlowOption(fd, flow);\n                     return flow;\n+                } else if (option == TCP_QUICKACK) {\n+                    return getQuickAckOption(fd);\n                 } else {\n                     throw new InternalError(\"Unexpected option \" + option);\n                 }\n@@ -156,12 +193,21 @@ private static void setFlowOption(FileDescriptor fd, SocketFlow f)\n     }\n \n     private static void getFlowOption(FileDescriptor fd, SocketFlow f)\n-        throws SocketException\n-    {\n+            throws SocketException {\n         int status = platformSocketOptions.getFlowOption(fdAccess.get(fd), f);\n         f.status(status);  // augment the given flow with the status\n     }\n \n+    private static void setQuickAckOption(FileDescriptor fd, boolean enable)\n+            throws SocketException {\n+        platformSocketOptions.setQuickAck(fdAccess.get(fd), enable);\n+    }\n+\n+    private static Object getQuickAckOption(FileDescriptor fd)\n+            throws SocketException {\n+        return platformSocketOptions.getQuickAck(fdAccess.get(fd));\n+    }\n+\n     static class PlatformSocketOptions {\n \n         protected PlatformSocketOptions() {}\n@@ -184,9 +230,13 @@ public String run() {\n                             return System.getProperty(\"os.name\");\n                         }\n                     });\n-            if (\"SunOS\".equals(osname))\n+            if (\"SunOS\".equals(osname)) {\n                 return newInstance(\"jdk.net.SolarisSocketOptions\");\n-            return new PlatformSocketOptions();\n+            } else if (\"Linux\".equals(osname)) {\n+                return newInstance(\"jdk.net.LinuxSocketOptions\");\n+            } else {\n+                return new PlatformSocketOptions();\n+            }\n         }\n \n         private static final PlatformSocketOptions instance = create();\n@@ -208,5 +258,17 @@ int getFlowOption(int fd, SocketFlow f) throws SocketException {\n         boolean flowSupported() {\n             return false;\n         }\n+\n+        void setQuickAck(int fd, boolean on) throws SocketException {\n+            throw new UnsupportedOperationException(\"unsupported TCP_QUICKACK option\");\n+        }\n+\n+        boolean getQuickAck(int fd) throws SocketException {\n+            throw new UnsupportedOperationException(\"unsupported TCP_QUICKACK option\");\n+        }\n+\n+        boolean quickAckSupported() {\n+            return false;\n+        }\n     }\n }\ndiff --git a/src/jdk.net/share/classes/jdk/net/Sockets.java b/src/jdk.net/share/classes/jdk/net/Sockets.java\nindex 983fe38956f..b1d003da4ac 100644\n--- a/src/jdk.net/share/classes/jdk/net/Sockets.java\n+++ b/src/jdk.net/share/classes/jdk/net/Sockets.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2017, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -279,6 +279,9 @@ private static Map<Class<?>,Set<SocketOption<?>>> optionSets() {\n         if (flowsupported) {\n             set.add(ExtendedSocketOptions.SO_FLOW_SLA);\n         }\n+        if (QuickAck.available) {\n+            set.add(ExtendedSocketOptions.TCP_QUICKACK);\n+        }\n         set = Collections.unmodifiableSet(set);\n         options.put(Socket.class, set);\n \n@@ -290,6 +293,9 @@ private static Map<Class<?>,Set<SocketOption<?>>> optionSets() {\n         if (reuseportsupported) {\n             set.add(StandardSocketOptions.SO_REUSEPORT);\n         }\n+        if (QuickAck.available) {\n+            set.add(ExtendedSocketOptions.TCP_QUICKACK);\n+        }\n         set.add(StandardSocketOptions.IP_TOS);\n         set = Collections.unmodifiableSet(set);\n         options.put(ServerSocket.class, set);\n@@ -331,4 +337,17 @@ private static Map<Class<?>,Set<SocketOption<?>>> optionSets() {\n \n         return Collections.unmodifiableMap(options);\n     }\n+\n+    /**\n+     * Tells whether TCP_QUICKACK is supported.\n+     */\n+    static class QuickAck {\n+\n+        static final boolean available;\n+\n+        static {\n+            Set<SocketOption<?>> s = new Socket().supportedOptions();\n+            available = s.contains(ExtendedSocketOptions.TCP_QUICKACK);\n+        }\n+    }\n }\ndiff --git a/test/jdk/jdk/net/Sockets/QuickAckTest.java b/test/jdk/jdk/net/Sockets/QuickAckTest.java\nnew file mode 100644\nindex 00000000000..b1d9f899c24\n--- /dev/null\n+++ b/test/jdk/jdk/net/Sockets/QuickAckTest.java\n@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+ /*\n+ * @test\n+ * @bug 8145635\n+ * @summary Add TCP_QUICKACK socket option\n+ * @modules jdk.net\n+ * @run main QuickAckTest\n+ */\n+import java.io.IOException;\n+import java.net.DatagramSocket;\n+import java.net.MulticastSocket;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+import jdk.net.ExtendedSocketOptions;\n+import jdk.net.Sockets;\n+\n+public class QuickAckTest {\n+\n+    private static final String LOCAL_HOST = \"127.0.0.1\";\n+\n+    public static void main(String args[]) throws IOException {\n+\n+        try (ServerSocket ss = new ServerSocket(0);\n+                Socket s = new Socket(LOCAL_HOST, ss.getLocalPort());\n+                DatagramSocket ds = new DatagramSocket(0);\n+                MulticastSocket mc = new MulticastSocket(0)) {\n+\n+            if (ss.supportedOptions().contains(ExtendedSocketOptions.TCP_QUICKACK)) {\n+                Sockets.setOption(ss, ExtendedSocketOptions.TCP_QUICKACK, true);\n+                if (!ss.getOption(ExtendedSocketOptions.TCP_QUICKACK)) {\n+                    throw new RuntimeException(\"Test failed, TCP_QUICKACK should\"\n+                            + \" have been set\");\n+                }\n+            }\n+            if (s.supportedOptions().contains(ExtendedSocketOptions.TCP_QUICKACK)) {\n+                Sockets.setOption(s, ExtendedSocketOptions.TCP_QUICKACK, true);\n+                if (!s.getOption(ExtendedSocketOptions.TCP_QUICKACK)) {\n+                    throw new RuntimeException(\"Test failed, TCP_QUICKACK should\"\n+     ",
    "Get all IMAP folder user flags": "diff --git a/app/src/main/java/eu/faircode/email/ServiceSynchronize.java b/app/src/main/java/eu/faircode/email/ServiceSynchronize.java\nindex 75036c7676..250e5e8dae 100644\n--- a/app/src/main/java/eu/faircode/email/ServiceSynchronize.java\n+++ b/app/src/main/java/eu/faircode/email/ServiceSynchronize.java\n@@ -848,8 +848,7 @@ public class ServiceSynchronize extends LifecycleService {\n \n                         List<String> keywords = new ArrayList<>();\n                         for (String keyword : ifolder.getPermanentFlags().getUserFlags())\n-                            if (!keyword.startsWith(\"$\"))\n-                                keywords.add(keyword);\n+                            keywords.add(keyword);\n            ",
    "Updated Debian optional dependencies with the ones used for snapshots": "diff --git a/debian/control b/debian/control\nindex 1d49d08e0..58f9a66b2 100644\n--- a/debian/control\n+++ b/debian/control\n@@ -8,7 +8,7 @@ Standards-Version: 3.7.2\n Package: yacy\n Architecture: all\n Depends: java8-runtime-headless, sudo, debconf\n-Suggests: curl | wget\n+Suggests: curl | wget, wkhtmltopdf, imagemagick, xvfb, ghostscript\n Description: Peer-to-Peer Web Search Engine\n  YaCy is a Java-based peer-to-peer search engine.\n  It provides a personal web search engine, which is",
    "Rename unit test to track rename of tested class .": "diff --git a/searchcore/CMakeLists.txt b/searchcore/CMakeLists.txt\nindex 273ae940770..5634cde969e 100644\n--- a/searchcore/CMakeLists.txt\n+++ b/searchcore/CMakeLists.txt\n@@ -74,7 +74,6 @@ vespa_define_module(\n     src/tests/proton/common/document_type_inspector\n     src/tests/proton/common/hw_info_sampler\n     src/tests/proton/common/state_reporter_utils\n-    src/tests/proton/config\n     src/tests/proton/docsummary\n     src/tests/proton/document_iterator\n     src/tests/proton/documentdb\n@@ -120,6 +119,7 @@ vespa_define_module(\n     src/tests/proton/persistenceconformance\n     src/tests/proton/persistenceengine\n     src/tests/proton/proton\n+    src/tests/proton/proton_config_fetcher\n     src/tests/proton/proton_configurer\n     src/tests/proton/reference/gid_to_lid_change_handler\n     src/tests/proton/reference/gid_to_lid_change_listener\ndiff --git a/searchcore/src/tests/proton/config/CMakeLists.txt b/searchcore/src/tests/proton/config/CMakeLists.txt\ndeleted file mode 100644\nindex fead8787d37..00000000000\n--- a/searchcore/src/tests/proton/config/CMakeLists.txt\n+++ /dev/null\n@@ -1,9 +0,0 @@\n-# Copyright 2016 Yahoo Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n-vespa_add_executable(searchcore_config_test_app TEST\n-    SOURCES\n-    config_test.cpp\n-    DEPENDS\n-    searchcore_server\n-    searchcore_fconfig\n-)\n-vespa_add_test(NAME searchcore_config_test_app COMMAND searchcore_config_test_app)\ndiff --git a/searchcore/src/tests/proton/config/.cvsignore b/searchcore/src/tests/proton/proton_config_fetcher/.cvsignore\nsimilarity index 100%\nrename from searchcore/src/tests/proton/config/.cvsignore\nrename to searchcore/src/tests/proton/proton_config_fetcher/.cvsignore\ndiff --git a/searchcore/src/tests/proton/config/.gitignore b/searchcore/src/tests/proton/proton_config_fetcher/.gitignore\nsimilarity index 100%\nrename from searchcore/src/tests/proton/config/.gitignore\nrename to searchcore/src/tests/proton/proton_config_fetcher/.gitignore\ndiff --git a/searchcore/src/tests/proton/proton_config_fetcher/CMakeLists.txt b/searchcore/src/tests/proton/proton_config_fetcher/CMakeLists.txt\nnew file mode 100644\nindex 00000000000..bdec36ea2ca\n--- /dev/null\n+++ b/searchcore/src/tests/proton/proton_config_fetcher/CMakeLists.txt\n@@ -0,0 +1,9 @@\n+# Copyright 2016 Yahoo Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+vespa_add_executable(searchcore_proton_config_fetcher_test_app TEST\n+    SOURCES\n+    proton_config_fetcher_test.cpp\n+    DEPENDS\n+    searchcore_server\n+    searchcore_fconfig\n+)\n+vespa_add_test(NAME searchcore_proton_config_fetcher_test_app COMMAND searchcore_proton_config_fetcher_test_app)\ndiff --git a/searchcore/src/tests/proton/config/config_test.cpp b/searchcore/src/tests/proton/proton_config_fetcher/proton_config_fetcher_test.cpp\nsimilarity index 100%\nrename from searchcore/src/tests/proton/config/config_test.cpp\nrename to searchcore/src/tests/proton/proton_config_fetcher/proton_config_fetcher_test.cpp",
    "Added test on inferring constants on function parameters , including destructured param and default value . . - - - - - - - - - - - - - .": "diff --git a/test/com/google/javascript/jscomp/InferConstsTest.java b/test/com/google/javascript/jscomp/InferConstsTest.java\nindex 72413469b..e2ed9e7bd 100644\n--- a/test/com/google/javascript/jscomp/InferConstsTest.java\n+++ b/test/com/google/javascript/jscomp/InferConstsTest.java\n@@ -85,6 +85,16 @@ public final class InferConstsTest extends TestCase {\n     testConsts(\"for (const x of {a, b, c}) {}\", \"x\");\n   }\n \n+  public void testFunctionParam() {\n+    testConsts(\"var x = function(){};\", \"x\");\n+    testConsts(\"var x = ()=>{};\", \"x\");\n+    testConsts(\"function fn(a){var b = a + 1}; \", \"a\", \"b\");\n+    testConsts(\"function fn(a = 1){var b = a + 1}; \", \"a\", \"b\");\n+    testConsts(\"function fn(a, {b, c}){var d = a + 1}; \", \"a\", \"d\");\n+    // TODO(user): Infer b and c to be const\n+    testNotConsts(\"function fn(a, {b, c}){var d = a + 1}; \", \"b\", \"c\");\n+  }\n+\n   public void testClass() {\n     testConsts(\"var Foo = class {}\", \"Foo\");\n     testConsts(\"class Foo {}\", \"Foo\");",
    "add Spring dependencies .": "diff --git a/qa/integration-tests-engine/pom.xml b/qa/integration-tests-engine/pom.xml\nindex b4d26f3902..7fa6f6af31 100644\n--- a/qa/integration-tests-engine/pom.xml\n+++ b/qa/integration-tests-engine/pom.xml\n@@ -159,6 +159,24 @@\n       <artifactId>camunda-connect-core</artifactId>\n     </dependency>\n \n+    <!-- explicit Spring dependencies for applications\n+      that pack camunda-engine-spring -->\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-context</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-jdbc</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-tx</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-orm</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.springframework</groupId>\n       <artifactId>spring-web</artifactId>",
    "update docker due to directory hierarchy change": "diff --git a/deploy/docker/README.md b/deploy/docker/README.md\nindex 4727a35f9c..7545df5394 100644\n--- a/deploy/docker/README.md\n+++ b/deploy/docker/README.md\n@@ -149,7 +149,7 @@ you'll have output in your terminal like:\n     ssh into master via:     ssh -i /tmp/id_rsa13436 -o UserKnownHostsFile=/dev/null -o     StrictHostKeyChecking=no root@172.17.0.10    \n     you can also ssh into workers via the command above with the ip substituted    \n     \n-    after ssh into either master/worker, /root/tachyon_container is tachyon home\n+    after ssh into either master/worker, /opt/tachyon_container is tachyon home\n     \n     to enable the host to resolve {'master', 'worker1', 'worker2'...} to corresponding ip, set 'nameserver     172.17.0.9' as first line in your host's /etc/resolv.conf    \n     \ndiff --git a/deploy/docker/deploy/deploy.sh b/deploy/docker/deploy/deploy.sh\nindex 164627ca75..c8dafd8396 100755\n--- a/deploy/docker/deploy/deploy.sh\n+++ b/deploy/docker/deploy/deploy.sh\n@@ -4,13 +4,13 @@ DEBUG=0\n NUM_WORKERS=2\n \n BASE_DIR=$(cd $(dirname $0); pwd)\n-TACHYON_DIR=$(cd $BASE_DIR/../..; pwd)\n+TACHYON_DIR=$(cd $BASE_DIR/../../..; pwd)\n \n \n # if deploy on a virtual machine, id_rsa's mode may be too open, \n # ssh will then ignore this key, so we copy it to /tmp and change mode to 0600\n SSH_ID_RSA_DIR=/tmp/id_rsa${RANDOM}\n-cp ${TACHYON_DIR}/docker/apache-hadoop-hdfs1.0.4-precise/files/id_rsa $SSH_ID_RSA_DIR\n+cp ${TACHYON_DIR}/deploy/docker/apache-hadoop-hdfs1.0.4-precise/files/id_rsa $SSH_ID_RSA_DIR\n chmod 0600 $SSH_ID_RSA_DIR\n \n NAMESERVER_IMAGE=\"dnsmasq-precise\"\ndiff --git a/deploy/docker/deploy/start_tachyon_cluster.sh b/deploy/docker/deploy/start_tachyon_cluster.sh\nindex 04c5c7f8e0..be4e37e43a 100644\n--- a/deploy/docker/deploy/start_tachyon_cluster.sh\n+++ b/deploy/docker/deploy/start_tachyon_cluster.sh\n@@ -47,7 +47,7 @@ function print_cluster_info() {\n   echo \"ssh into master via:     ssh -i $SSH_ID_RSA_DIR -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@${MASTER_IP}\"\n   echo \"you can also ssh into workers via the command above with the ip substituted\"\n   echo \"\"\n-  echo \"after ssh into either master/worker, /root/tachyon_container is tachyon home\"\n+  echo \"after ssh into either master/worker, /opt/tachyon_container is tachyon home\"\n   echo \"\"\n   echo \"to enable the host to resolve {'master', 'worker1', 'worker2'...} to corresponding ip, set 'nameserver $NAMESERVER_IP' as first line in your host's /etc/resolv.conf\"\n   echo \"\"",
    "Remove tab in the AL header ; trim trailing spaces / tabs .": "diff --git a/eclipse.classpath b/eclipse.classpath\nindex 16bdd3692d..196136368e 100644\n--- a/eclipse.classpath\n+++ b/eclipse.classpath\n@@ -7,7 +7,7 @@\n    (the \"License\"); you may not use this file except in compliance with\n    the License.  You may obtain a copy of the License at\n \n-\t   http://www.apache.org/licenses/LICENSE-2.0\n+       http://www.apache.org/licenses/LICENSE-2.0\n \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -15,12 +15,12 @@\n    See the License for the specific language governing permissions and\n    limitations under the License.\n -->\n-<!-- \n+<!--\n    This is a sample Eclipse .classpath file, which can be used to help set up the proper .classpath.\n    Note that the \"con\" entry may be different on individual systems, but the other entries\n    should generally be the same, unless you attach sources or javadoc to the jars.\n-   \n-   Eclipse seems to use TABS for indenting the entries.\t\n+\n+   Eclipse seems to use TABS for indenting the entries.\n  -->\n <classpath>\n \t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER\"/>",
    "update and clarify javadoc for IFactory and CommandLine . defaultFactory ( )": "diff --git a/src/main/java/picocli/CommandLine.java b/src/main/java/picocli/CommandLine.java\nindex 167c3c63..979ba37b 100644\n--- a/src/main/java/picocli/CommandLine.java\n+++ b/src/main/java/picocli/CommandLine.java\n@@ -4710,11 +4710,39 @@ public class CommandLine {\n     /**\n      * Factory for instantiating classes that are registered declaratively with annotation attributes, like\n      * {@link Command#subcommands()}, {@link Option#converter()}, {@link Parameters#converter()} and {@link Command#versionProvider()}.\n-     * <p>The default factory implementation simply creates a new instance of the specified class when {@link #create(Class)} is invoked.\n-     * </p><p>\n-     * You may provide a custom implementation of this interface.\n-     * For example, a custom factory implementation could delegate to a dependency injection container that provides the requested instance.\n+     * The factory is also used to instantiate the {@code Collection} or {@code Map} implementation class for multi-value\n+     * options and positional parameters with an abstract type, like {@code List<String>}.\n+     * <p>You may provide a custom implementation of this interface.\n+     * For example, a custom factory implementation could delegate to a dependency injection container that provides the requested instance.</p>\n+     * <p><b><em>Custom factory implementations should always fall back to the {@linkplain #defaultFactory() default factory} if instantiation failed.</em></b> For example:\n      * </p>\n+     * <pre>\n+     * class MyFactory implements IFactory {\n+     *     private final ApplicationContext applicationContext = getAppContext();\n+     *\n+     *     public &lt;T&gt; T create(Class&lt;T&gt; cls) throws Exception {\n+     *         try {\n+     *             applicationContext.getBean(cls);\n+     *         } catch (Exception ex) {\n+     *             CommandLine.defaultFactory().create(cls);\n+     *         }\n+     *     }\n+     * }\n+     * </pre>\n+     * <p>Tip: custom factory implementations that have resources that need to be closed when done should consider\n+     * implementing {@code java.lang.AutoCloseable} or {@code java.io.Closeable}. This allows applications to use\n+     * the following idiom for configuring picocli before running their application:</p>\n+     * <pre>\n+     * public static void main(String[] args) {\n+     *     int exitCode = 0;\n+     *     try (MyFactory factory = createMyFactory()) {\n+     *         exitCode = new CommandLine(MyClass.class, factory)\n+     *                 .setXxx(x) // configure the picocli parser...\n+     *                 .execute(args);\n+     *     }\n+     *     System.exit(exitCode);\n+     * }\n+     * </pre>\n      * @see picocli.CommandLine#CommandLine(Object, IFactory)\n      * @see #call(Class, IFactory, PrintStream, PrintStream, Help.Ansi, String...)\n      * @see #run(Class, IFactory, PrintStream, PrintStream, Help.Ansi, String...)\n@@ -4731,6 +4759,21 @@ public class CommandLine {\n         <K> K create(Class<K> cls) throws Exception;\n     }\n     /** Returns the default {@link IFactory} implementation used if no factory was specified in the {@link #CommandLine(Object) CommandLine constructor}.\n+     * <p>This implementation has special logic for instantiating {@code Collections}\n+     * and {@code Maps}, and otherwise tries to create an instance by invoking the default constructor of the specified class.\n+     * </p><p>Special logic for instantiating Collections and Maps:</p>\n+     * <pre>\n+     * // if class is an interface that extends java.util.Collection, return a new instance of:\n+     * 1. List       -> ArrayList\n+     * 2. SortedSet  -> TreeSet\n+     * 3. Set        -> LinkedHashSet\n+     * 4. Queue      -> LinkedList\n+     * 5. Collection -> ArrayList\n+     *\n+     * // if extending or implementing java.util.Map:\n+     * 1. try invoking the default constructor; return this on success.\n+     * 2. if this fails, return a LinkedHashMap\n+     * </pre>\n      * @since 4.0 */\n     public static IFactory defaultFactory() { return new DefaultFactory(); }\n     private static class DefaultFactory implements IFactory {",
    "Make video screen nicer": "diff --git a/res/layout/file_preview.xml b/res/layout/file_preview.xml\nindex 5e1d67aeaa..aa63c5234a 100644\n--- a/res/layout/file_preview.xml\n+++ b/res/layout/file_preview.xml\n@@ -30,7 +30,8 @@\n         android:id=\"@+id/file_preview_container\"\n         android:layout_width=\"match_parent\"\n         android:layout_height=\"match_parent\"\n-        android:visibility=\"invisible\">\n+        android:visibility=\"invisible\"\n+        android:background=\"@color/black\">\n \n         <FrameLayout\n             android:id=\"@+id/visual_area\"\ndiff --git a/res/layout/media_control.xml b/res/layout/media_control.xml\nindex e58b7584cf..cb6b3404b6 100644\n--- a/res/layout/media_control.xml\n+++ b/res/layout/media_control.xml\n@@ -65,6 +65,7 @@\n             android:layout_height=\"wrap_content\"\n             android:paddingEnd=\"@dimen/standard_quarter_padding\"\n             android:text=\"@string/placeholder_media_time\"\n+            android:textColor=\"@color/white\"\n             />\n \n         <SeekBar\n@@ -74,7 +75,11 @@\n             android:layout_weight=\"1\"\n             android:layout_height=\"@dimen/seek_bar_height\"\n             android:layout_alignParentStart=\"true\"\n-            android:layout_alignParentEnd=\"true\" />\n+            android:layout_alignParentEnd=\"true\"\n+            android:progressDrawable=\"@color/white\"\n+            android:layout_alignParentLeft=\"true\"\n+            android:layout_alignParentRight=\"true\"\n+            android:splitTrack=\"false\"/>\n \n         <TextView android:id=\"@+id/totalTimeText\"\n             android:textSize=\"@dimen/two_line_secondary_text_size\"\n@@ -86,6 +91,7 @@\n             android:layout_height=\"wrap_content\"\n             android:paddingStart=\"@dimen/standard_quarter_padding\"\n             android:text=\"@string/placeholder_media_time\"\n+            android:textColor=\"@color/white\"\n             />\n         \n     </LinearLayout>\ndiff --git a/src/com/owncloud/android/media/MediaControlView.java b/src/com/owncloud/android/media/MediaControlView.java\nindex 0163f9e0ee..f36048aa9e 100644\n--- a/src/com/owncloud/android/media/MediaControlView.java\n+++ b/src/com/owncloud/android/media/MediaControlView.java\n@@ -39,12 +39,12 @@ import android.widget.SeekBar;\n import android.widget.SeekBar.OnSeekBarChangeListener;\n import android.widget.TextView;\n \n-import java.util.Formatter;\n-import java.util.Locale;\n-\n import com.owncloud.android.R;\n import com.owncloud.android.utils.DisplayUtils;\n \n+import java.util.Formatter;\n+import java.util.Locale;\n+\n \n /**\n  * View containing controls for a {@link MediaPlayer}. ",
    "Allow AppCompat to work with long - press - back - menu gesture .": "diff --git a/v7/appcompat/src/android/support/v7/app/AppCompatDelegateImplV7.java b/v7/appcompat/src/android/support/v7/app/AppCompatDelegateImplV7.java\nindex d2c7b91462e..e147b7dbe95 100644\n--- a/v7/appcompat/src/android/support/v7/app/AppCompatDelegateImplV7.java\n+++ b/v7/appcompat/src/android/support/v7/app/AppCompatDelegateImplV7.java\n@@ -115,6 +115,8 @@ class AppCompatDelegateImplV7 extends AppCompatDelegateImplBase\n     private PanelFeatureState[] mPanels;\n     private PanelFeatureState mPreparedPanel;\n \n+    private boolean mLongPressBackDown;\n+\n     private boolean mInvalidatePanelMenuPosted;\n     private int mInvalidatePanelMenuFeatures;\n     private final Runnable mInvalidatePanelMenuRunnable = new Runnable() {\n@@ -874,9 +876,17 @@ class AppCompatDelegateImplV7 extends AppCompatDelegateImplBase\n                 onKeyUpPanel(Window.FEATURE_OPTIONS_PANEL, event);\n                 return true;\n             case KeyEvent.KEYCODE_BACK:\n+                final boolean wasLongPressBackDown = mLongPressBackDown;\n+                mLongPressBackDown = false;\n+\n                 PanelFeatureState st = getPanelState(Window.FEATURE_OPTIONS_PANEL, false);\n                 if (st != null && st.isOpen) {\n-                    closePanel(st, true);\n+                    if (!wasLongPressBackDown) {\n+                        // Certain devices allow opening the options menu via a long press of the\n+                        // back button. We should only close the open options menu if it wasn't\n+                        // opened via a long press gesture.\n+                        closePanel(st, true);\n+      ",
    "fixes bug in slotted when checking if property IS NULL on null node .": "diff --git a/enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/ExpressionAcceptanceTest.scala b/enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/ExpressionAcceptanceTest.scala\nindex d951af183e6..182f77ef52e 100644\n--- a/enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/ExpressionAcceptanceTest.scala\n+++ b/enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/ExpressionAcceptanceTest.scala\n@@ -24,6 +24,63 @@ import org.neo4j.internal.cypher.acceptance.CypherComparisonSupport._\n \n class ExpressionAcceptanceTest extends ExecutionEngineFunSuite with CypherComparisonSupport {\n \n+  test(\"property existence checks, on node\") {\n+    createNode(\"exists\" -> 1)\n+    val result = executeWith(\n+      expectSucceed = Configs.Interpreted,\n+      query =\n+        \"MATCH (n) \" +\n+          \"RETURN n.missing IS NULL,\" +\n+          \"       n.missing IS NOT NULL,\" +\n+          \"       exists(n.missing),\" +\n+          \"       n.exists IS NULL,\" +\n+          \"       n.exists IS NOT NULL,\" +\n+          \"       exists(n.exists)\")\n+    result.toList should equal(List(Map(\n+      \"n.missing IS NULL\" -> true,\n+      \"n.missing IS NOT NULL\" -> false,\n+      \"exists(n.missing)\" -> false,\n+      \"n.exists IS NULL\" -> false,\n+      \"n.exists IS NOT NULL\" -> true,\n+      \"exists(n.exists)\" -> true)))\n+  }\n+\n+  test(\"property existence checks, on optional non-null node\") {\n+    createNode(\"exists\" -> 1)\n+    val result = executeWith(\n+      expectSucceed = Configs.Interpreted,\n+      query =\n+        \"OPTIONAL MATCH (n) \" +\n+          \"RETURN n.missing IS NULL,\" +\n+          \"       n.missing IS NOT NULL,\" +\n+          \"       exists(n.missing),\" +\n+          \"       n.exists IS NULL,\" +\n+          \"       n.exists IS NOT NULL,\" +\n+          \"       exists(n.exists)\")\n+    result.toList should equal(List(Map(\n+      \"n.missing IS NULL\" -> true,\n+      \"n.missing IS NOT NULL\" -> false,\n+      \"exists(n.missing)\" -> false,\n+      \"n.exists IS NULL\" -> false,\n+      \"n.exists IS NOT NULL\" -> true,\n+      \"exists(n.exists)\" -> true)))\n+  }\n+\n+  test(\"property existence checks, on optional null node\") {\n+    val result = executeWith(\n+      expectSucceed = Configs.Interpreted,\n+      query =\n+        \"OPTIONAL MATCH (n) \" +\n+          \"RETURN n.missing IS NULL,\" +\n+          // \"       n.missing IS NOT NULL,\" + // Do not test. In 3.3 IS NOT NULL is incorrectly rewritten to Exists. Will be fixed in 3.5.\n+          \"       exists(n.missing)\",\n+      expectedDifferentResults = Configs.Empty)\n+    result.toList should equal(List(Map(\n+      \"n.missing IS NULL\" -> true,\n+      // \"n.missing IS NOT NULL\" -> false, // Do not test. In 3.3 IS NOT NULL is incorrectly rewritten to Exists. Will be fixed in 3.5.\n+      \"exists(n.missing)\" -> null)))\n+  }\n+\n   test(\"should handle map projection with property selectors\") {\n     createNode(\"foo\" -> 1, \"bar\" -> \"apa\")\n \ndiff --git a/enterprise/cypher/physical-planning/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_3/runtime/SlottedRewriter.scala b/enterprise/cypher/physical-planning/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_3/runtime/SlottedRewriter.scala\nindex 3c8c3148dbb..61355b74c16 100644\n--- a/enterprise/cypher/physical-planning/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_3/runtime/SlottedRewriter.scala\n+++ b/enterprise/cypher/physical-planning/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_3/runtime/SlottedRewriter.scala\n@@ -190,12 +190,23 @@ class SlottedRewriter(tokenContext: TokenContext) {\n       case idFunction: FunctionInvocation if idFunction.function == frontendAst.functions.Exists =>\n         idFunction.args.head match {\n           case Property(Variable(key), PropertyKeyName(propKey)) =>\n-            checkIfPropertyExists(pipelineInformation, key, propKey)\n+            val slot = pipelineInformation(key)\n+            val propExpression = checkIfPropertyExists(pipelineInformation, key, propKey, slot)\n+            if (slot.nullable)\n+              NullCheck(slot.offset, propExpression)\n+            else\n+              propExpression\n           case _ => idFunction // Don't know how to specialize this\n         }\n \n-      case e@IsNull(Property(Variable(key), PropertyKeyName(propKey))) =>\n-        Not(checkIfPropertyExists(pipelineInformation, key, propKey))(e.position)\n+      case e@IsNull(Property(variable@Variable(key), PropertyKeyName(propKey))) =>\n+        val slot = pipelineInformation(key)\n+        val propertyExists = checkIfPropertyExists(pipelineInformation, key, propKey, slot)\n+        val notPropertyExists = Not(propertyExists)(e.position)\n+        if (slot.nullable)\n+          Or(IsNull(variable)(e.position), notPropertyExists)(e.position)\n+        else\n+          notPropertyExists\n \n       case _: ShortestPathExpression =>\n         throw new CantCompileQueryException(s\"Expressions with shortestPath functions not yet supported in slot allocation\")\n@@ -209,11 +220,10 @@ class SlottedRewriter(tokenContext: TokenContext) {\n     topDown(rewriter = innerRewriter, stopper = stopAtOtherLogicalPlans(thisPlan))\n   }\n \n-  private def checkIfPropertyExists(pipelineInformation: PipelineInformation, key: String, propKey: String) = {\n-    val slot = pipelineInformation(key)\n+  private def checkIfPropertyExists(pipelineInformation: PipelineInformation, key: String, propKey: String, slot: Slot) = {\n     val maybeToken = tokenContext.getOptPropertyKeyId(propKey)\n \n-    val propExpression = (slot, maybeToken) match {\n+    (slot, maybeToken) match {\n       case (LongSlot(offset, _, typ, name), Some(token)) if typ == CTNode =>\n         NodePropertyExists(offset, token, s\"$name.$propKey\")\n \n@@ -228,11 +238,6 @@ class SlottedRewriter(tokenContext: TokenContext) {\n \n       case _ => throw new CantCompileQueryException(s\"Expressions on object other then nodes and relationships are not yet supported\")\n     }\n-\n-    if (slot.nullable)\n-      NullCheck(slot.offset, propExpression)\n-    else\n-      propExpression\n   }\n \n   private def stopAtOtherLogicalPlans(thisPlan: LogicalPlan): (AnyRef) => Boolean = {",
    "update index of read - write - split . en": "diff --git a/document/current/content/features/read-write-split/_index.en.md b/document/current/content/features/read-write-split/_index.en.md\nindex 0142f150638..87ae45c0617 100644\n--- a/document/current/content/features/read-write-split/_index.en.md\n+++ b/document/current/content/features/read-write-split/_index.en.md\n@@ -7,9 +7,30 @@ chapter = true\n \n ## Background\n \n-To face for more and more page views on website, databases became performance bottleneck. \n-For some systems which have huge concurrent query requests and less update requests, split single database to master database and slave database, master database deal with DML operation, slave database deal with DQL operation, can avoid lock and improve system performance.\n-Use master database with multiple slave databases model, can share query requests on multiple data replica, improve throughput further.\n-Use multiple master databases with multiple slave databases model, can improve system availability. Even one of database physical destroy, system also run lossless.\n+With increasing system TPS, database capacity has faced great bottleneck effect. \n+For the application system with massive concurrence read operations but less write operations in the same time, we can divide the database into a master database and a slave database. \n+The master database is responsible for the addition, deletion and modification operations of transactions, while the slave database is responsible for query operations. \n+It can significantly improve the query performance of the whole system by effectively avoiding line locks caused by data renewal.\n \n-Read-write splitting can improve throughput and availability for system, but data inconsistent will occur. This problem include data inconsistent between master databases each other, and between master master databases and slave databases. Same with data sharding, developers and operators also need to face complicated database environments. **The objective of read-write splitting middleware is let user to use complicated database like a single database.** \n+The configuration of one master database with multiple slave databases can further enhance system processing capacity by distributing queries evenly into multiple data replicas. \n+The configuration of multiple master databases with multiple slave databases can not only enhance system throughput but also the system availability. \n+As a result, under the circumstance that any database goes down, or even the disk is physically destroyed, the normal function of the system will still not be affected.\n+\n+Different from the horizontal sharding that separates the data to all data nodes according to sharding keys, read-write split routes read operations and write operations separately to the master database and slave database according to SQL meaning analysis.\n+\n+[![Read-write split](http://shardingsphere.jd.com/document/current/img/read-write-split/read-write-split.png)\n+\n+Data in read-write split nodes is consistent, whereas that in horizontal shards is not. \n+The combined use of horizontal sharding and read-write split will effectively enhance the system performance.\n+\n+## Challenges\n+\n+Though enhancing system throughput and availability, read-write split also brings the problem of inconsistent data, including that between multiple master databases and between master databases and slave databases. \n+What's more, it also brings the problem similar as data sharding, making application development and operation staff's maintenance work more complex. \n+The following picture has shown the complex topological relations between application and database group when sharding table and database are used together with read-write split.\n+\n+[![Sharding + Read-write split](http://shardingsphere.jd.com/document/current/img/read-write-split/sharding-read-write-split.png)\n+\n+## Goal\n+\n+**The main design goal of the read-write split modular of ShardingSphere is to try to reduce the influence of read-write split, in order to let users use master-slave database group like one database.**",
    "Add export extractors page": "diff --git a/javascript/src/components/extractors/ExportExtractors.jsx b/javascript/src/components/extractors/ExportExtractors.jsx\nnew file mode 100644\nindex 0000000000..183dc320f3\n--- /dev/null\n+++ b/javascript/src/components/extractors/ExportExtractors.jsx\n@@ -0,0 +1,55 @@\n+import React, {PropTypes} from 'react';\n+import Reflux from 'reflux';\n+import {Row, Col, Input} from 'react-bootstrap';\n+\n+import {ClipboardButton, Spinner} from 'components/common';\n+import Version from 'util/Version';\n+\n+import ExtractorsActions from 'actions/extractors/ExtractorsActions';\n+import ExtractorsStore from 'stores/extractors/ExtractorsStore';\n+\n+const ExportExtractors = React.createClass({\n+  propTypes: {\n+    input: PropTypes.object.isRequired,\n+  },\n+  mixins: [Reflux.connect(ExtractorsStore), Reflux.ListenerMethods],\n+  componentDidMount() {\n+    ExtractorsActions.list.triggerPromise(this.props.input.input_id);\n+  },\n+  _isLoading() {\n+    return !this.state.extractors;\n+  },\n+  render() {\n+    if (this._isLoading()) {\n+      return <Spinner/>;\n+    }\n+\n+    const extractorsExportObject = {\n+      extractors: this.state.extractors,\n+      version: Version.getFullVersion(),\n+    };\n+\n+    const formattedJSON = JSON.stringify(extractorsExportObject, null, 2);\n+    return (\n+      <Row className=\"content\">\n+        <Col md={12}>\n+          <Row>\n+            <Col md={8}>\n+              <h2>Extractors JSON</h2>\n+            </Col>\n+            <Col md={4}>\n+              <ClipboardButton title=\"Copy extractors\" className=\"pull-right\" target=\"#extractor-export-textarea\"/>\n+            </Col>\n+          </Row>\n+          <Row>\n+            <Col md={12}>\n+              <Input type=\"textarea\" id=\"extractor-export-textarea\" rows={30} defaultValue={formattedJSON}/>\n+            </Col>\n+          </Row>\n+        </Col>\n+      </Row>\n+    );\n+  },\n+});\n+\n+export default ExportExtractors;\ndiff --git a/javascript/src/pages/ExportExtractorsPage.jsx b/javascript/src/pages/ExportExtractorsPage.jsx\nnew file mode 100644\nindex 0000000000..b6e8fb5288\n--- /dev/null\n+++ b/javascript/src/pages/ExportExtractorsPage.jsx\n@@ -0,0 +1,43 @@\n+import React, {PropTypes} from 'react';\n+\n+import PageHeader from 'components/common/PageHeader';\n+import Spinner from 'components/common/Spinner';\n+import ExportExtractors from 'components/extractors/ExportExtractors';\n+\n+import InputsStore from 'stores/inputs/InputsStore';\n+\n+const ExtractorsPage = React.createClass({\n+  propTypes: {\n+    params: PropTypes.object.isRequired,\n+  },\n+  getInitialState() {\n+    return {\n+      input: undefined,\n+    };\n+  },\n+  componentDidMount() {\n+    InputsStore.get(this.props.params.inputId).then(input => this.setState({input: input}));\n+  },\n+  _isLoading() {\n+    return !this.state.input;\n+  },\n+  render() {\n+    if (this._isLoading()) {\n+      return <Spinner/>;\n+    }\n+\n+    return (\n+      <div>\n+        <PageHeader title={<span>Export extractors of <em>{this.state.input.title}</em></span>}>\n+          <span>\n+            The extractors of an input can be exported to JSON for importing into other setups\n+            or sharing in <a href=\"https://marketplace.graylog.org/\" target=\"_blank\">the Graylog Marketplace</a>.\n+          </span>\n+        </PageHeader>\n+        <ExportExtractors input={this.state.input}/>\n+      </div>\n+    );\n+  },\n+});\n+\n+export default ExtractorsPage;\ndiff --git a/javascript/src/routing/AppRouter.jsx b/javascript/src/routing/AppRouter.jsx\nindex 0794031a1a..3648cd2b08 100644\n--- a/javascript/src/routing/AppRouter.jsx\n+++ b/javascript/src/routing/AppRouter.jsx\n@@ -20,6 +20,7 @@ import InputsPage from 'pages/InputsPage';\n import ExtractorsPage from 'pages/ExtractorsPage';\n import CreateExtractorsPage from 'pages/CreateExtractorsPage';\n import EditExtractorsPage from 'pages/EditExtractorsPage';\n+import ExportExtractorsPage from 'pages/ExportExtractorsPage';\n import CollectorsPage from 'pages/CollectorsPage';\n import SystemOutputsPage from 'pages/SystemOutputsPage';\n import RolesPage from 'pages/RolesPage';\n@@ -56,6 +57,7 @@ const AppRouter = React.createClass({\n             <Route path={Routes.local_input_extractors(':nodeId', ':inputId')} component={ExtractorsPage}/>\n             <Route path={Routes.new_extractor(':nodeId', ':inputId')} component={CreateExtractorsPage}/>\n             <Route path={Routes.edit_extractor(':nodeId', ':inputId', ':extractorId')} component={EditExtractorsPage}/>\n+            <Route path={Routes.export_extractors(':nodeId', ':inputId')} component={ExportExtractorsPage}/>\n             <Route path={Routes.SYSTEM.COLLECTORS} component={CollectorsPage}/>\n             <Route path={Routes.SYSTEM.CONTENTPACKS.LIST} component={ContentPacksPage}/>\n             <Route path={Routes.SYSTEM.CONTENTPACKS.EXPORT} component={ExportContentPackPage}/>",
    "Extend BindExpression to bind multiple values at a time": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/AggregationAnalyzer.java b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/AggregationAnalyzer.java\nindex 28e259bc65..5bf481a5e2 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/AggregationAnalyzer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/AggregationAnalyzer.java\n@@ -375,7 +375,12 @@ class AggregationAnalyzer\n         @Override\n         protected Boolean visitBindExpression(BindExpression node, Void context)\n         {\n-            return process(node.getValue(), context) && process(node.getFunction(), context);\n+            for (Expression value : node.getValues()) {\n+                if (!process(value, context)) {\n+                    return false;\n+                }\n+            }\n+            return process(node.getFunction(), context);\n         }\n \n         @Override\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java\nindex fc9d22f868..b81ddc48b7 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java\n@@ -1087,18 +1087,24 @@ public class ExpressionAnalyzer\n         {\n             verify(context.getContext().isExpectingLambda(), \"bind expression found when lambda is not expected\");\n \n-            List<Type> functionInputTypes = ImmutableList.<Type>builder()\n-                    .add(process(node.getValue(), new StackableAstVisitorContext<>(context.getContext().notExpectingLambda())))\n-                    .addAll(context.getContext().getFunctionInputTypes())\n-                    .build();\n+            StackableAstVisitorContext<Context> innerContext = new StackableAstVisitorContext<>(context.getContext().notExpectingLambda());\n+            ImmutableList.Builder<Type> functionInputTypesBuilder = ImmutableList.builder();\n+            for (Expression value : node.getValues()) {\n+                functionInputTypesBuilder.add(process(value, innerContext));\n+            }\n+            functionInputTypesBuilder.addAll(context.getContext().getFunctionInputTypes());\n+            List<Type> functionInputTypes = functionInputTypesBuilder.build();\n \n             FunctionType functionType = (FunctionType) process(node.getFunction(), new StackableAstVisitorContext<>(context.getContext().expectingLambda(functionInputTypes)));\n \n             List<Type> argumentTypes = functionType.getArgumentTypes();\n+            int numCapturedValues = node.getValues().size();\n             verify(argumentTypes.size() == functionInputTypes.size());\n-            verify(functionInputTypes.get(0) == argumentTypes.get(0));\n+            for (int i = 0; i < numCapturedValues; i++) {\n+                verify(functionInputTypes.get(i) == argumentTypes.get(i));\n+            }\n \n-            FunctionType result = new FunctionType(argumentTypes.subList(1, argumentTypes.size()), functionType.getReturnType());\n+            FunctionType result = new FunctionType(argumentTypes.subList(numCapturedValues, argumentTypes.size()), functionType.getReturnType());\n             return setExpressionType(node, result);\n         }\n \ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/BindCodeGenerator.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/BindCodeGenerator.java\nindex 0f30cd1add..a19d938f8c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/BindCodeGenerator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/BindCodeGenerator.java\n@@ -19,6 +19,7 @@ import com.facebook.presto.bytecode.BytecodeNode;\n import com.facebook.presto.bytecode.Scope;\n import com.facebook.presto.bytecode.Variable;\n import com.facebook.presto.bytecode.control.IfStatement;\n+import com.facebook.presto.bytecode.expression.BytecodeExpression;\n import com.facebook.presto.metadata.Signature;\n import com.facebook.presto.spi.type.Type;\n import com.facebook.presto.sql.relational.RowExpression;\n@@ -47,15 +48,20 @@ public class BindCodeGenerator\n \n         Variable wasNull = scope.getVariable(\"wasNull\");\n \n-        Class<?> valueType = Primitives.wrap(arguments.get(0).getType().getJavaType());\n-        Variable valueVariable = scope.createTempVariable(valueType);\n-        block.append(context.generate(arguments.get(0)));\n-        block.append(boxPrimitiveIfNecessary(scope, valueType));\n-        block.putVariable(valueVariable);\n-        block.append(wasNull.set(constantFalse()));\n+        ImmutableList.Builder<BytecodeExpression> captureVariablesBuilder = ImmutableList.builder();\n+        int numValues = arguments.size() - 1;\n+        for (int i = 0; i < numValues; i++) {\n+            Class<?> valueType = Primitives.wrap(arguments.get(i).getType().getJavaType());\n+            Variable valueVariable = scope.createTempVariable(valueType);\n+            block.append(context.generate(arguments.get(i)));\n+            block.append(boxPrimitiveIfNecessary(scope, valueType));\n+            block.putVariable(valueVariable);\n+            block.append(wasNull.set(constantFalse()));\n+            captureVariablesBuilder.add(valueVariable.cast(Object.class));\n+        }\n \n         Variable functionVariable = scope.createTempVariable(MethodHandle.class);\n-        block.append(context.generate(arguments.get(1)));\n+        block.append(context.generate(arguments.get(numValues)));\n         block.append(\n                 new IfStatement()\n                         .condition(wasNull)\n@@ -69,7 +75,7 @@ public class BindCodeGenerator\n                                                 MethodHandle.class,\n                                                 functionVariable,\n                                                 constantInt(0),\n-                                                newArray(type(Object[].class), ImmutableList.of(valueVariable.cast(Object.class)))))));\n+                                                newArray(type(Object[].class), captureVariablesBuilder.build())))));\n \n         return block;\n     }\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/ExpressionInterpreter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/ExpressionInterpreter.java\nindex bc39f97cf9..440223302c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/ExpressionInterpreter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/ExpressionInterpreter.java\n@@ -1002,16 +1002,23 @@ public class ExpressionInterpreter\n         @Override\n         protected Object visitBindExpression(BindExpression node, Object context)\n         {\n-            Object value = process(node.getValue(), context);\n+            List<Object> values = node.getValues().stream()\n+                    .map(value -> process(value, context))\n+                    .collect(toImmutableList());\n             Object function = process(node.getFunction(), context);\n \n-            if (hasUnresolvedValue(value, function)) {\n+            if (hasUnresolvedValue(values) || hasUnresolvedValue(function)) {\n+                ImmutableList.Builder<Expression> builder = ImmutableList.builder();\n+                for (int i = 0; i < values.size(); i++) {\n+                    builder.add(toExpression(values.get(i), type(node.getValues().get(i))));\n+                }\n+\n                 return new BindExpression(\n-                        toExpression(value, type(node.getValue())),\n+                        builder.build(),\n                         toExpression(function, type(node.getFunction())));\n             }\n \n-            return MethodHandles.insertArguments((MethodHandle) function, 0, value);\n+            return MethodHandles.insertArguments((MethodHandle) function, 0, values.toArray());\n         }\n \n         @Override\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/LambdaCaptureDesugaringRewriter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/LambdaCaptureDesugaringRewriter.java\nindex 597293462e..830e46df58 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/LambdaCaptureDesugaringRewriter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/LambdaCaptureDesugaringRewriter.java\n@@ -98,8 +98,12 @@ public class LambdaCaptureDesugaringRewriter\n             }\n             newLambdaArguments.addAll(node.getArguments());\n             Expression rewrittenExpression = new LambdaExpression(newLambdaArguments.build(), replaceSymbols(rewrittenBody, captureSymbolToExtraSymbol.build()));\n-            for (Symbol captureSymbol : captureSymbols) {\n-                rewrittenExpression = new BindExpression(new SymbolReference(captureSymbol.getName()), rewrittenExpression);\n+\n+            if (captureSymbols.size() != 0) {\n+                List<Expression> capturedValues = captureSymbols.stream()\n+                        .map(symbol -> new SymbolReference(symbol.getName()))\n+                        .collect(toImmutableList());\n+                rewrittenExpression = new BindExpression(capturedValues, rewrittenExpression);\n             }\n \n             context.getReferencedSymbols().addAll(captureSymbols);\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/Signatures.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/Signatures.java\nindex 527fe60329..02f4740e7d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/Signatures.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/Signatures.java\n@@ -155,9 +155,14 @@ public final class Signatures\n         return new Signature(TRY, SCALAR, returnType.getTypeSignature());\n     }\n \n-    public static Signature bindSignature(Type returnType, Type valueType, Type functionType)\n+    public static Signature bindSignature(Type returnType, List<Type> valueTypes, Type functionType)\n     {\n-        return new Signature(BIND, SCALAR, returnType.getTypeSignature(), valueType.getTypeSignature(), functionType.getTypeSignature());\n+        ImmutableList.Builder<TypeSignature> typeSignatureBuilder = ImmutableList.builder();\n+        for (Type valueType : valueTypes) {\n+            typeSignatureBuilder.add(valueType.getTypeSignature());\n+        }\n+        typeSignatureBuilder.add(functionType.getTypeSignature());\n+        return new Signature(BIND, SCALAR, returnType.getTypeSignature(), typeSignatureBuilder.build());\n     }\n \n     // **************** functions that require varargs and/or complex types (e.g., lists) ****************\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlToRowExpressionTranslator.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlToRowExpressionTranslator.java\nindex 51bc9c1bb5..2648c9e3e8 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlToRowExpressionTranslator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlToRowExpressionTranslator.java\n@@ -353,14 +353,20 @@ public final class SqlToRowExpressionTranslator\n         @Override\n         protected RowExpression visitBindExpression(BindExpression node, Void context)\n         {\n-            RowExpression value = process(node.getValue(), context);\n+            ImmutableList.Builder<Type> valueTypesBuilder = ImmutableList.builder();\n+            ImmutableList.Builder<RowExpression> argumentsBuilder = ImmutableList.builder();\n+            for (Expression value : node.getValues()) {\n+                RowExpression valueRowExpression = process(value, context);\n+                valueTypesBuilder.add(valueRowExpression.getType());\n+                argumentsBuilder.add(valueRowExpression);\n+            }\n             RowExpression function = process(node.getFunction(), context);\n+            argumentsBuilder.add(function);\n \n             return call(\n-                    bindSignature(getType(node), value.getType(), function.getType()),\n+                    bindSignature(getType(node), valueTypesBuilder.build(), function.getType()),\n                     getType(node),\n-                    value,\n-                    function);\n+                    argumentsBuilder.build());\n         }\n \n         @Override\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/optimizer/ExpressionOptimizer.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/optimizer/ExpressionOptimizer.java\nindex a2e4f4eb92..15e5470e2c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/optimizer/ExpressionOptimizer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/optimizer/ExpressionOptimizer.java\n@@ -129,15 +129,23 @@ public class ExpressionOptimizer\n                         return call(signature, call.getType(), arguments);\n                     }\n                     case BIND: {\n-                        checkState(call.getArguments().size() == 2, BIND + \" function should have 2 arguments. Got \" + call.getArguments().size());\n-                        RowExpression optimizedValue = call.getArguments().get(0).accept(this, context);\n-                        RowExpression optimizedFunction = call.getArguments().get(1).accept(this, context);\n-                        if (optimizedValue instanceof ConstantExpression && optimizedFunction instanceof ConstantExpression) {\n-                            // Here, optimizedValue and optimizedFunction should be merged together into a new ConstantExpression.\n+                        checkState(call.getArguments().size() >= 1, BIND + \" function should have at least 1 argument. Got \" + call.getArguments().size());\n+\n+                        boolean allConstantExpression = true;\n+                        ImmutableList.Builder<RowExpression> optimizedArgumentsBuilder = ImmutableList.builder();\n+                        for (RowExpression argument : call.getArguments()) {\n+                            RowExpression optimizedArgument = argument.accept(this, context);\n+                            if (!(optimizedArgument instanceof ConstantExpression)) {\n+                                allConstantExpression = false;\n+                            }\n+                            optimizedArgumentsBuilder.add(optimizedArgument);\n+                        }\n+                        if (allConstantExpression) {\n+                            // Here, optimizedArguments should be merged together into a new ConstantExpression.\n                             // It's not implemented because it would be dead code anyways because visitLambda does not produce ConstantExpression.\n                             throw new UnsupportedOperationException();\n                         }\n-                        return call(signature, call.getType(), ImmutableList.of(optimizedValue, optimizedFunction));\n+                        return call(signature, call.getType(), optimizedArgumentsBuilder.build());\n                     }\n                     case NULL_IF:\n                     case SWITCH:\ndiff --git a/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestArrayTransformFunction.java b/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestArrayTransformFunction.java\nindex 4b345fa2fb..cb3317a60b 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestArrayTransformFunction.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestArrayTransformFunction.java\n@@ -45,6 +45,7 @@ public class TestArrayTransformFunction\n     public void testBasic()\n             throws Exception\n     {\n+        assertFunction(\"transform(ARRAY [5, 6], x -> 9)\", new ArrayType(INTEGER), ImmutableList.of(9, 9));\n         assertFunction(\"transform(ARRAY [5, 6], x -> x + 1)\", new ArrayType(INTEGER), ImmutableList.of(6, 7));\n         assertFunction(\"transform(ARRAY [5 + RANDOM(1), 6], x -> x + 1)\", new ArrayType(INTEGER), ImmutableList.of(6, 7));\n     }\ndiff --git a/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestLambdaExpression.java b/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestLambdaExpression.java\nindex aefa009fb6..845344e83d 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestLambdaExpression.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestLambdaExpression.java\n@@ -127,8 +127,8 @@ public class TestLambdaExpression\n     {\n         assertFunction(\"apply(90, \\\"$internal$bind\\\"(9, (x, y) -> x + y))\", INTEGER, 99);\n         assertFunction(\"invoke(\\\"$internal$bind\\\"(8, x -> x + 1))\", INTEGER, 9);\n-        assertFunction(\"apply(900, \\\"$internal$bind\\\"(90, \\\"$internal$bind\\\"(9, (x, y, z) -> x + y + z)))\", INTEGER, 999);\n-        assertFunction(\"invoke(\\\"$internal$bind\\\"(90, \\\"$internal$bind\\\"(9, (x, y) -> x + y)))\", INTEGER, 99);\n+        assertFunction(\"apply(900, \\\"$internal$bind\\\"(90, 9, (x, y, z) -> x + y + z))\", INTEGER, 999);\n+        assertFunction(\"invoke(\\\"$internal$bind\\\"(90, 9, (x, y) -> x + y))\", INTEGER, 99);\n     }\n \n     @Test\ndiff --git a/presto-parser/src/main/java/com/facebook/presto/sql/ExpressionFormatter.java b/presto-parser/src/main/java/com/facebook/presto/sql/ExpressionFormatter.java\nindex 7abba528a3..4eecb84f54 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/ExpressionFormatter.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/ExpressionFormatter.java\n@@ -368,9 +368,14 @@ public final class ExpressionFormatter\n         @Override\n         protected String visitBindExpression(BindExpression node, Void context)\n         {\n-            return \"\\\"$INTERNAL$BIND\\\"(\" +\n-                    process(node.getValue(), context) + \", \" +\n-                    process(node.getFunction(), context) + \")\";\n+            StringBuilder builder = new StringBuilder();\n+\n+            builder.append(\"\\\"$INTERNAL$BIND\\\"(\");\n+            for (Expression value : node.getValues()) {\n+                builder.append(process(value, context) + \", \");\n+            }\n+            builder.append(process(node.getFunction(), context) + \")\");\n+            return builder.toString();\n         }\n \n         @Override\ndiff --git a/presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java b/presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java\nindex 421bdf91f6..f1b5d4bd5c 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java\n@@ -166,6 +166,7 @@ import java.util.Map;\n import java.util.Optional;\n import java.util.stream.Collectors;\n \n+import static com.google.common.collect.ImmutableList.toImmutableList;\n import static com.google.common.collect.Iterables.getOnlyElement;\n import static java.lang.String.format;\n import static java.util.Objects.requireNonNull;\n@@ -1278,14 +1279,20 @@ class AstBuilder\n             return new TryExpression(getLocation(context), (Expression) visit(getOnlyElement(context.expression())));\n         }\n         if (name.toString().equalsIgnoreCase(\"$internal$bind\")) {\n-            check(context.expression().size() == 2, \"The '$internal$bind' function must have exactly two arguments\", context);\n+            check(context.expression().size() >= 1, \"The '$internal$bind' function must have at least one arguments\", context);\n             check(!window.isPresent(), \"OVER clause not valid for '$internal$bind' function\", context);\n             check(!distinct, \"DISTINCT not valid for '$internal$bind' function\", context);\n \n+            int numValues = context.expression().size() - 1;\n+            List<Expression> arguments = context.expression().stream()\n+                    .map(this::visit)\n+                    .map(Expression.class::cast)\n+                    .collect(toImmutableList());\n+\n             return new BindExpression(\n                     getLocation(context),\n-                    (Expression) visit(context.expression(0)),\n-                    (Expression) visit(context.expression(1)));\n+                    arguments.subList(0, numValues),\n+                    arguments.get(numValues));\n         }\n \n         return new FunctionCall(\ndiff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/BindExpression.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/BindExpression.java\nindex 49b5fd4e58..8ab8f4ed57 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/BindExpression.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/BindExpression.java\n@@ -47,31 +47,31 @@ import static java.util.Objects.requireNonNull;\n public class BindExpression\n         extends Expression\n {\n-    private final Expression value;\n+    private final List<Expression> values;\n     // Function expression must be of function type.\n     // It is not necessarily a lambda. For example, it can be another bind expression.\n     private final Expression function;\n \n-    public BindExpression(Expression value, Expression function)\n+    public BindExpression(List<Expression> values, Expression function)\n     {\n-        this(Optional.empty(), value, function);\n+        this(Optional.empty(), values, function);\n     }\n \n-    public BindExpression(NodeLocation location, Expression value, Expression function)\n+    public BindExpression(NodeLocation location, List<Expression> values, Expression function)\n     {\n-        this(Optional.of(location), value, function);\n+        this(Optional.of(location), values, function);\n     }\n \n-    private BindExpression(Optional<NodeLocation> location, Expression value, Expression function)\n+    private BindExpression(Optional<NodeLocation> location, List<Expression> values, Expression function)\n     {\n         super(location);\n-        this.value = requireNonNull(value, \"value is null\");\n+        this.values = requireNonNull(values, \"value is null\");\n         this.function = requireNonNull(function, \"function is null\");\n     }\n \n-    public Expression getValue()\n+    public List<Expression> getValues()\n     {\n-        return value;\n+        return values;\n     }\n \n     public Expression getFunction()\n@@ -89,7 +89,7 @@ public class BindExpression\n     public List<Node> getChildren()\n     {\n         ImmutableList.Builder<Node> nodes = ImmutableList.builder();\n-        return nodes.add(value)\n+        return nodes.addAll(values)\n                 .add(function)\n                 .build();\n     }\n@@ -104,13 +104,13 @@ public class BindExpression\n             return false;\n         }\n         BindExpression that = (BindExpression) o;\n-        return Objects.equals(value, that.value) &&\n+   ",
    "Add negative scenarios to restrict - by - media - type BBE": "diff --git a/examples/restrict-by-media-type/restrict_by_media_type.client.out b/examples/restrict-by-media-type/restrict_by_media_type.client.out\nindex ac031ad49ed..836b7bd1b5d 100644\n--- a/examples/restrict-by-media-type/restrict_by_media_type.client.out\n+++ b/examples/restrict-by-media-type/restrict_by_media_type.client.out\n@@ -1,4 +1,29 @@\n # To invoke the service, use the following client.\n $ curl -v http://localhost:9092/infoService -H \"Accept:application/xml\" -H \"Content-Type:application/json\" -d '{\"name\":\"Ballerina\"}'\n-# The server response. \n+# The server response.\n+< HTTP/1.1 200 OK\n+< content-type: application/xml\n+< content-length: 22\n+<\n+* Connection #0 to host localhost left intact\n <name>Ballerina</name>\n+\n+# Use the following client to invoke the service using unsupported media type. The Content type of the\n+# request is not listed under consumes resource configuration.\n+$ curl -v http://localhost:9092/infoService -H \"Accept:application/xml\" -H \"Content-Type:text/plain\" -d \"Hello ballerina\"\n+# The server response.\n+< HTTP/1.1 415 Unsupported Media Type\n+< content-type: text/plain\n+< content-length: 0\n+<\n+* Connection #0 to host localhost left intact\n+\n+# Use the following client to invoke the service with a media type that is not acceptable. The media type mentioned\n+# in the Accept header is not listed under produces resource configuration.\n+$ curl -v http://localhost:9092/infoService -H \"Accept:text/html\" -H \"Content-Type:application/json\" -d '{\"name\":\"Ballerina\"}'\n+# The server response.\n+< HTTP/1.1 406 Not Acceptable\n+< content-type: text/plain\n+< content-length: 0\n+<\n+* Connection #0 to host localhost left intact",
    "Remove collapsible if statements": "diff --git a/build.gradle b/build.gradle\nindex ad7fa7ee7a..4cc2a21e7b 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -180,7 +180,7 @@ buildscript {\n     classpath \"gradle.plugin.org.nosphere.apache:creadur-rat-gradle:0.3.1\"                              // Enable Apache license enforcement\n     classpath \"com.commercehub.gradle.plugin:gradle-avro-plugin:0.11.0\"                                 // Enable Avro code generation\n     classpath \"com.diffplug.spotless:spotless-plugin-gradle:3.6.0\"                                      // Enable a code formatting plugin\n-    classpath \"gradle.plugin.com.github.blindpirate:gogradle:0.7.0\"                                     // Enable Go code compilation\n+    classpath \"gradle.plugin.com.github.blindpirate:gogradle:0.8.1\"                                     // Enable Go code compilation\n     classpath \"gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0\"                           // Enable building Docker containers\n     classpath \"cz.malohlava:visteg:1.0.3\"                                                               // Enable generating Gradle task dependencies as \".dot\" files\n     classpath \"com.github.jengelman.gradle.plugins:shadow:2.0.1\"                                        // Enable shading Java dependencies\ndiff --git a/build_rules.gradle b/build_rules.gradle\nindex c8197762eb..fb4c17f4c5 100644\n--- a/build_rules.gradle\n+++ b/build_rules.gradle\n@@ -389,6 +389,14 @@ ext.applyGoNature = {\n     goVersion = '1.9'\n   }\n \n+  repositories {\n+    golang {\n+      // Gogradle doesn't like thrift: https://github.com/gogradle/gogradle/issues/183\n+      root 'git.apache.org/thrift.git'\n+      emptyDir()\n+    }\n+  }\n+\n   // GoGradle fails in a parallel build during dependency resolution/installation.\n   // Force a dependency between all GoGradle projects during dependency resolution/installation.\n   // TODO: Figure out how to do this by automatically figuring out the task dependency DAG\ndiff --git a/runners/apex/src/main/java/org/apache/beam/runners/apex/translation/ParDoTranslator.java b/runners/apex/src/main/java/org/apache/beam/runners/apex/translation/ParDoTranslator.java\nindex 7210692b6f..f02633d459 100644\n--- a/runners/apex/src/main/java/org/apache/beam/runners/apex/translation/ParDoTranslator.java\n+++ b/runners/apex/src/main/java/org/apache/beam/runners/apex/translation/ParDoTranslator.java\n@@ -117,7 +117,7 @@ class ParDoTranslator<InputT, OutputT>\n   }\n \n   static class SplittableProcessElementsTranslator<\n-          InputT, OutputT, RestrictionT, TrackerT extends RestrictionTracker<RestrictionT>>\n+          InputT, OutputT, RestrictionT, TrackerT extends RestrictionTracker<RestrictionT, ?>>\n       implements TransformTranslator<ProcessElements<InputT, OutputT, RestrictionT, TrackerT>> {\n \n     @Override\ndiff --git a/runners/apex/src/main/java/org/apache/beam/runners/apex/translation/operators/ApexParDoOperator.java b/runners/apex/src/main/java/org/apache/beam/runners/apex/translation/operators/ApexParDoOperator.java\nindex c410ca0832..8db73df43b 100644\n--- a/runners/apex/src/main/java/org/apache/beam/runners/apex/translation/operators/ApexParDoOperator.java\n+++ b/runners/apex/src/main/java/org/apache/beam/runners/apex/translation/operators/ApexParDoOperator.java\n@@ -474,7 +474,7 @@ public class ApexParDoOperator<InputT, OutputT> extends BaseOperator implements\n           (StateInternalsFactory<String>) this.currentKeyStateInternals.getFactory();\n \n       @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n-      ProcessFn<InputT, OutputT, Object, RestrictionTracker<Object>>\n+      ProcessFn<InputT, OutputT, Object, RestrictionTracker<Object, Object>>\n         splittableDoFn = (ProcessFn) doFn;\n       splittableDoFn.setStateInternalsFactory(stateInternalsFactory);\n       TimerInternalsFactory<String> timerInternalsFactory = key -> currentKeyTimerInternals;\ndiff --git a/runners/apex/src/test/java/org/apache/beam/runners/apex/translation/ParDoTranslatorTest.java b/runners/apex/src/test/java/org/apache/beam/runners/apex/translation/ParDoTranslatorTest.java\nindex 5107ab0339..db314785ea 100644\n--- a/runners/apex/src/test/java/org/apache/beam/runners/apex/translation/ParDoTranslatorTest.java\n+++ b/runners/apex/src/test/java/org/apache/beam/runners/apex/translation/ParDoTranslatorTest.java\n@@ -61,6 +61,7 @@ import org.apache.beam.sdk.values.TupleTag;\n import org.apache.beam.sdk.values.TupleTagList;\n import org.apache.beam.sdk.values.WindowingStrategy;\n import org.junit.Assert;\n+import org.junit.Ignore;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.junit.runners.JUnit4;\n@@ -162,6 +163,7 @@ public class ParDoTranslatorTest {\n   }\n \n   @Test\n+  @Ignore(\"https://issues.apache.org/jira/browse/BEAM-3272\")\n   public void testAssertionFailure() throws Exception {\n     ApexPipelineOptions options = PipelineOptionsFactory.create()\n         .as(ApexPipelineOptions.class);\ndiff --git a/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/PTransformMatchersTest.java b/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/PTransformMatchersTest.java\nindex ca57e92cc3..9ca6d9408d 100644\n--- a/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/PTransformMatchersTest.java\n+++ b/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/PTransformMatchersTest.java\n@@ -160,7 +160,7 @@ public class PTransformMatchersTest implements Serializable {\n           ctxt.output(ctxt.element().getValue() + 1);\n         }\n       };\n-  private abstract static class SomeTracker implements RestrictionTracker<Void> {}\n+  private abstract static class SomeTracker extends RestrictionTracker<Void, Void> {}\n   private DoFn<KV<String, Integer>, Integer> splittableDoFn =\n       new DoFn<KV<String, Integer>, Integer>() {\n         @ProcessElement\ndiff --git a/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/ParDoTranslationTest.java b/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/ParDoTranslationTest.java\nindex a945574b6f..9bd7fe493b 100644\n--- a/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/ParDoTranslationTest.java\n+++ b/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/ParDoTranslationTest.java\n@@ -231,7 +231,7 @@ public class ParDoTranslationTest {\n \n   private static class SplittableDropElementsFn extends DoFn<KV<Long, String>, Void> {\n     @ProcessElement\n-    public void proc(ProcessContext context, RestrictionTracker<Integer> restriction) {\n+    public void proc(ProcessContext context, RestrictionTracker<Integer, ?> restriction) {\n       context.output(null);\n     }\n \n@@ -241,7 +241,7 @@ public class ParDoTranslationTest {\n     }\n \n     @NewTracker\n-    public RestrictionTracker<Integer> newTracker(Integer restriction) {\n+    public RestrictionTracker<Integer, ?> newTracker(Integer restriction) {\n       throw new UnsupportedOperationException(\"Should never be called; only to test translation\");\n     }\n \ndiff --git a/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/SplittableParDoTest.java b/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/SplittableParDoTest.java\nindex 05c471dd2d..68365c85bc 100644\n--- a/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/SplittableParDoTest.java\n+++ b/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/SplittableParDoTest.java\n@@ -50,13 +50,18 @@ public class SplittableParDoTest {\n     }\n   }\n \n-  private static class SomeRestrictionTracker implements RestrictionTracker<SomeRestriction> {\n+  private static class SomeRestrictionTracker extends RestrictionTracker<SomeRestriction, Void> {\n     private final SomeRestriction someRestriction;\n \n     public SomeRestrictionTracker(SomeRestriction someRestriction) {\n       this.someRestriction = someRestriction;\n     }\n \n+    @Override\n+    protected boolean tryClaimImpl(Void position) {\n+      return false;\n+    }\n+\n     @Override\n     public SomeRestriction currentRestriction() {\n       return someRestriction;\ndiff --git a/runners/core-java/src/main/java/org/apache/beam/runners/core/InMemoryStateInternals.java b/runners/core-java/src/main/java/org/apache/beam/runners/core/InMemoryStateInternals.java\nindex 32c561e481..ebd2a8873e 100644\n--- a/runners/core-java/src/main/java/org/apache/beam/runners/core/InMemoryStateInternals.java\n+++ b/runners/core-java/src/main/java/org/apache/beam/runners/core/InMemoryStateInternals.java\n@@ -34,6 +34,7 @@ import org.apache.beam.runners.core.StateTag.StateBinder;\n import org.apache.beam.sdk.annotations.Experimental;\n import org.apache.beam.sdk.annotations.Experimental.Kind;\n import org.apache.beam.sdk.coders.Coder;\n+import org.apache.beam.sdk.coders.CoderException;\n import org.apache.beam.sdk.state.BagState;\n import org.apache.beam.sdk.state.CombiningState;\n import org.apache.beam.sdk.state.MapState;\n@@ -49,6 +50,7 @@ import org.apache.beam.sdk.transforms.Combine.CombineFn;\n import org.apache.beam.sdk.transforms.CombineWithContext.CombineFnWithContext;\n import org.apache.beam.sdk.transforms.windowing.BoundedWindow;\n import org.apache.beam.sdk.transforms.windowing.TimestampCombiner;\n+import org.apache.beam.sdk.util.CoderUtils;\n import org.apache.beam.sdk.util.CombineFnUtil;\n import org.joda.time.Instant;\n \n@@ -126,25 +128,25 @@ public class InMemoryStateInternals<K> implements StateInternals {\n     @Override\n     public <T> ValueState<T> bindValue(\n         StateTag<ValueState<T>> address, Coder<T> coder) {\n-      return new InMemoryValue<>();\n+      return new InMemoryValue<>(coder);\n     }\n \n     @Override\n     public <T> BagState<T> bindBag(\n         final StateTag<BagState<T>> address, Coder<T> elemCoder) {\n-      return new InMemoryBag<>();\n+      return new InMemoryBag<>(elemCoder);\n     }\n \n     @Override\n     public <T> SetState<T> bindSet(StateTag<SetState<T>> spec, Coder<T> elemCoder) {\n-      return new InMemorySet<>();\n+      return new InMemorySet<>(elemCoder);\n     }\n \n     @Override\n     public <KeyT, ValueT> MapState<KeyT, ValueT> bindMap(\n         StateTag<MapState<KeyT, ValueT>> spec,\n         Coder<KeyT> mapKeyCoder, Coder<ValueT> mapValueCoder) {\n-      return new InMemoryMap<>();\n+      return new InMemoryMap<>(mapKeyCoder, mapValueCoder);\n     }\n \n     @Override\n@@ -153,7 +155,7 @@ public class InMemoryStateInternals<K> implements StateInternals {\n             StateTag<CombiningState<InputT, AccumT, OutputT>> address,\n             Coder<AccumT> accumCoder,\n             final CombineFn<InputT, AccumT, OutputT> combineFn) {\n-      return new InMemoryCombiningState<>(combineFn);\n+      return new InMemoryCombiningState<>(combineFn, accumCoder);\n     }\n \n     @Override\n@@ -178,9 +180,15 @@ public class InMemoryStateInternals<K> implements StateInternals {\n    */\n   public static final class InMemoryValue<T>\n       implements ValueState<T>, InMemoryState<InMemoryValue<T>> {\n+    private final Coder<T> coder;\n+\n     private boolean isCleared = true;\n     private @Nullable T value = null;\n \n+    public InMemoryValue(Coder<T> coder) {\n+      this.coder = coder;\n+    }\n+\n     @Override\n     public void clear() {\n       // Even though we're clearing we can't remove this from the in-memory state map, since\n@@ -207,10 +215,10 @@ public class InMemoryStateInternals<K> implements StateInternals {\n \n     @Override\n     public InMemoryValue<T> copy() {\n-      InMemoryValue<T> that = new InMemoryValue<>();\n+      InMemoryValue<T> that = new InMemoryValue<>(coder);\n       if (!this.isCleared) {\n         that.isCleared = this.isCleared;\n-        that.value = this.value;\n+        that.value = uncheckedClone(coder, this.value);\n       }\n       return that;\n     }\n@@ -305,14 +313,16 @@ public class InMemoryStateInternals<K> implements StateInternals {\n   public static final class InMemoryCombiningState<InputT, AccumT, OutputT>\n       implements CombiningState<InputT, AccumT, OutputT>,\n           InMemoryState<InMemoryCombiningState<InputT, AccumT, OutputT>> {\n-    private boolean isCleared = true;\n     private final CombineFn<InputT, AccumT, OutputT> combineFn;\n+    private final Coder<AccumT> accumCoder;\n+    private boolean isCleared = true;\n     private AccumT accum;\n \n     public InMemoryCombiningState(\n-        CombineFn<InputT, AccumT, OutputT> combineFn) {\n+        CombineFn<InputT, AccumT, OutputT> combineFn, Coder<AccumT> accumCoder) {\n       this.combineFn = combineFn;\n       accum = combineFn.createAccumulator();\n+      this.accumCoder = accumCoder;\n     }\n \n     @Override\n@@ -378,10 +388,10 @@ public class InMemoryStateInternals<K> implements StateInternals {\n     @Override\n     public InMemoryCombiningState<InputT, AccumT, OutputT> copy() {\n       InMemoryCombiningState<InputT, AccumT, OutputT> that =\n-          new InMemoryCombiningState<>(combineFn);\n+          new InMemoryCombiningState<>(combineFn, accumCoder);\n       if (!this.isCleared) {\n         that.isCleared = this.isCleared;\n-        that.addAccum(accum);\n+        that.addAccum(uncheckedClone(accumCoder, accum));\n       }\n       return that;\n     }\n@@ -391,8 +401,13 @@ public class InMemoryStateInternals<K> implements StateInternals {\n    * An {@link InMemoryState} implementation of {@link BagState}.\n    */\n   public static final class InMemoryBag<T> implements BagState<T>, InMemoryState<InMemoryBag<T>> {\n+    private final Coder<T> elemCoder;\n     private List<T> contents = new ArrayList<>();\n \n+    public InMemoryBag(Coder<T> elemCoder) {\n+      this.elemCoder = elemCoder;\n+    }\n+\n     @Override\n     public void clear() {\n       // Even though we're clearing we can't remove this from the in-memory state map, since\n@@ -442,8 +457,10 @@ public class InMemoryStateInternals<K> implements StateInternals {\n \n     @Override\n     public InMemoryBag<T> copy() {\n-      InMemoryBag<T> that = new InMemoryBag<>();\n-      that.contents.addAll(this.contents);\n+      InMemoryBag<T> that = new InMemoryBag<>(elemCoder);\n+      for (T elem : this.contents) {\n+        that.contents.add(uncheckedClone(elemCoder, elem));\n+      }\n       return that;\n     }\n   }\n@@ -452,8 +469,13 @@ public class InMemoryStateInternals<K> implements StateInternals {\n    * An {@link InMemoryState} implementation of {@link SetState}.\n    */\n   public static final class InMemorySet<T> implements SetState<T>, InMemoryState<InMemorySet<T>> {\n+    private final Coder<T> elemCoder;\n     private Set<T> contents = new HashSet<>();\n \n+    public InMemorySet(Coder<T> elemCoder) {\n+      this.elemCoder = elemCoder;\n+    }\n+\n     @Override\n     public void clear() {\n       contents = new HashSet<>();\n@@ -513,8 +535,10 @@ public class InMemoryStateInternals<K> implements StateInternals {\n \n     @Override\n     public InMemorySet<T> copy() {\n-      InMemorySet<T> that = new InMemorySet<>();\n-      that.contents.addAll(this.contents);\n+      InMemorySet<T> that = new InMemorySet<>(elemCoder);\n+      for (T elem : this.contents) {\n+        that.contents.add(uncheckedClone(elemCoder, elem));\n+      }\n       return that;\n     }\n   }\n@@ -524,8 +548,16 @@ public class InMemoryStateInternals<K> implements StateInternals {\n    */\n   public static final class InMemoryMap<K, V> implements\n       MapState<K, V>, InMemoryState<InMemoryMap<K, V>> {\n+    private final Coder<K> keyCoder;\n+    private final Coder<V> valueCoder;\n+\n     private Map<K, V> contents = new HashMap<>();\n \n+    public InMemoryMap(Coder<K> keyCoder, Coder<V> valueCoder) {\n+      this.keyCoder = keyCoder;\n+      this.valueCoder = valueCoder;\n+    }\n+\n     @Override\n     public void clear() {\n       contents = new HashMap<>();\n@@ -600,9 +632,22 @@ public class InMemoryStateInternals<K> implements StateInternals {\n \n     @Override\n     public InMemoryMap<K, V> copy() {\n-      InMemoryMap<K, V> that = new InMemoryMap<>();\n+      InMemoryMap<K, V> that = new InMemoryMap<>(keyCoder, valueCoder);\n+      for (Map.Entry<K, V> entry : this.contents.entrySet()) {\n+        that.contents.put(\n+            uncheckedClone(keyCoder, entry.getKey()), uncheckedClone(valueCoder, entry.getValue()));\n+      }\n       that.contents.putAll(this.contents);\n       return that;\n     }\n   }\n+\n+  /** Like {@link CoderUtils#clone} but without a checked exception. */\n+  private static <T> T uncheckedClone(Coder<T> coder, T value) {\n+    try {\n+      return CoderUtils.clone(coder, value);\n+    } catch (CoderException e) {\n+      throw new RuntimeException(e);\n+    }\n+  }\n }\ndiff --git a/runners/core-java/src/main/java/org/apache/beam/runners/core/OutputAndTimeBoundedSplittableProcessElementInvoker.java b/runners/core-java/src/main/java/org/apache/beam/runners/core/OutputAndTimeBoundedSplittableProcessElementInvoker.java\nindex c53efcc23b..b1a3f3bdb6 100644\n--- a/runners/core-java/src/main/java/org/apache/beam/runners/core/OutputAndTimeBoundedSplittableProcessElementInvoker.java\n+++ b/runners/core-java/src/main/java/org/apache/beam/runners/core/OutputAndTimeBoundedSplittableProcessElementInvoker.java\n@@ -50,7 +50,11 @@ import org.joda.time.Instant;\n  * outputs), or runs for the given duration.\n  */\n public class OutputAndTimeBoundedSplittableProcessElementInvoker<\n-        InputT, OutputT, RestrictionT, TrackerT extends RestrictionTracker<RestrictionT>>\n+        InputT,\n+        OutputT,\n+        RestrictionT,\n+        PositionT,\n+        TrackerT extends RestrictionTracker<RestrictionT, PositionT>>\n     extends SplittableProcessElementInvoker<InputT, OutputT, RestrictionT, TrackerT> {\n   private final DoFn<InputT, OutputT> fn;\n   private final PipelineOptions pipelineOptions;\n@@ -71,9 +75,10 @@ public class OutputAndTimeBoundedSplittableProcessElementInvoker<\n    * @param maxNumOutputs Maximum number of outputs, in total over all output tags, after which a\n    *     checkpoint will be requested. This is a best-effort request - the {@link DoFn} may output\n    *     more after receiving the request.\n-   * @param maxDuration Maximum duration of the {@link DoFn.ProcessElement} call after which a\n-   *     checkpoint will be requested. This is a best-effort request - the {@link DoFn} may run for\n-   *     longer after receiving the request.\n+   * @param maxDuration Maximum duration of the {@link DoFn.ProcessElement} call (counted from the\n+   *     first successful {@link RestrictionTracker#tryClaim} call) after which a checkpoint will be\n+   *     requested. This is a best-effort request - the {@link DoFn} may run for longer after\n+   *     receiving the request.\n    */\n   public OutputAndTimeBoundedSplittableProcessElementInvoker(\n       DoFn<InputT, OutputT> fn,\n@@ -98,6 +103,7 @@ public class OutputAndTimeBoundedSplittableProcessElementInvoker<\n       final WindowedValue<InputT> element,\n       final TrackerT tracker) {\n     final ProcessContext processContext = new ProcessContext(element, tracker);\n+    tracker.setClaimObserver(processContext);\n     DoFn.ProcessContinuation cont = invoker.invokeProcessElement(\n         new DoFnInvoker.ArgumentProvider<InputT, OutputT>() {\n           @Override\n@@ -107,7 +113,7 @@ public class OutputAndTimeBoundedSplittableProcessElementInvoker<\n           }\n \n           @Override\n-          public RestrictionTracker<?> restrictionTracker() {\n+          public RestrictionTracker<?, ?> restrictionTracker() {\n             return tracker;\n           }\n \n@@ -157,19 +163,39 @@ public class OutputAndTimeBoundedSplittableProcessElementInvoker<\n                 \"Access to timers not supported in Splittable DoFn\");\n           }\n         });\n-    // TODO: verify that if there was a failed tryClaim() call, then cont.shouldResume() is false.\n-    // Currently we can't verify this because there are no hooks into tryClaim().\n-    // See https://issues.apache.org/jira/browse/BEAM-2607\n     processContext.cancelScheduledCheckpoint();\n     @Nullable KV<RestrictionT, Instant> residual = processContext.getTakenCheckpoint();\n     if (cont.shouldResume()) {\n+      checkState(\n+          !processContext.hasClaimFailed,\n+          \"After tryClaim() returned false, @ProcessElement must return stop(), \"\n+              + \"but returned resume()\");\n       if (residual == null) {\n         // No checkpoint had been taken by the runner while the ProcessElement call ran, however\n         // the call says that not the whole restriction has been processed. So we need to take\n         // a checkpoint now: checkpoint() guarantees that the primary restriction describes exactly\n         // the work that was done in the current ProcessElement call, and returns a residual\n         // restriction that describes exactly the work that wasn't done in the current call.\n-        residual = checkNotNull(processContext.takeCheckpointNow());\n+        if (processContext.numClaimedBlocks > 0) {\n+          residual = checkNotNull(processContext.takeCheckpointNow());\n+          tracker.checkDone();\n+        } else {\n+          // The call returned resume() without trying to claim any blocks, i.e. it is unaware\n+          // of any work to be done at the moment, but more might emerge later. This is a valid\n+          // use case: e.g. a DoFn reading from a streaming source might see that there are\n+          // currently no new elements (hence not claim anything) and return resume() with a delay\n+          // to check again later.\n+          // In this case, we must simply reschedule the original restriction - checkpointing a\n+          // tracker that hasn't claimed any work is not allowed.\n+          //\n+          // Note that the situation \"a DoFn repeatedly says that it doesn't have any work to claim\n+          // and asks to try again later with the same restriction\" is different from the situation\n+          // \"a runner repeatedly checkpoints the DoFn before it has a chance to even attempt\n+          // claiming work\": the former is valid, and the latter would be a bug, and is addressed\n+          // by not checkpointing the tracker until it attempts to claim some work.\n+          residual = KV.of(tracker.currentRestriction(), processContext.getLastReportedWatermark());\n+          // Don't call tracker.checkDone() - it's not done.\n+        }\n       } else {\n         // A checkpoint was taken by the runner, and then the ProcessElement call returned resume()\n         // without making more tryClaim() calls (since no tryClaim() calls can succeed after\n@@ -180,14 +206,15 @@ public class OutputAndTimeBoundedSplittableProcessElementInvoker<\n         // ProcessElement call.\n         // In other words, if we took a checkpoint *after* ProcessElement completed (like in the\n         // branch above), it would have been equivalent to this one.\n+        tracker.checkDone();\n       }\n     } else {\n       // The ProcessElement call returned stop() - that means the tracker's current restriction\n       // has been fully processed by the call. A checkpoint may or may not have been taken in\n       // \"residual\"; if it was, then we'll need to process it; if no, then we don't - nothing\n       // special needs to be done.\n+      tracker.checkDone();\n     }\n-    tracker.checkDone();\n     if (residual == null) {\n       // Can only be true if cont.shouldResume() is false and no checkpoint was taken.\n       // This means the restriction has been fully processed.\n@@ -197,9 +224,12 @@ public class OutputAndTimeBoundedSplittableProcessElementInvoker<\n     return new Result(residual.getKey(), cont, residual.getValue());\n   }\n \n-  private class ProcessContext extends DoFn<InputT, OutputT>.ProcessContext {\n+  private class ProcessContext extends DoFn<InputT, OutputT>.ProcessContext\n+      implements RestrictionTracker.ClaimObserver<PositionT> {\n     private final WindowedValue<InputT> element;\n     private final TrackerT tracker;\n+    private int numClaimedBlocks;\n+    private boolean hasClaimFailed;\n \n     private int numOutputs;\n     // Checkpoint may be initiated either when the given number of outputs is reached,\n@@ -212,20 +242,44 @@ public class OutputAndTimeBoundedSplittableProcessElementInvoker<\n     // on the output from \"checkpoint\".\n     private @Nullable Instant residualWatermark;\n     // A handle on the scheduled action to take a checkpoint.\n-    private Future<?> scheduledCheckpoint;\n+    private @Nullable Future<?> scheduledCheckpoint;\n     private @Nullable Instant lastReportedWatermark;\n \n     public ProcessContext(WindowedValue<InputT> element, TrackerT tracker) {\n       fn.super();\n       this.element = element;\n       this.tracker = tracker;\n+    }\n \n-      this.scheduledCheckpoint =\n-          executor.schedule(\n-              (Runnable) this::takeCheckpointNow, maxDuration.getMillis(), TimeUnit.MILLISECONDS);\n+    @Override\n+    public void onClaimed(PositionT position) {\n+      checkState(\n+          !hasClaimFailed,\n+          \"Must not call tryClaim() after it has previously returned false\");\n+      if (numClaimedBlocks == 0) {\n+        // Claiming first block: can schedule the checkpoint now.\n+        // We don't schedule it right away to prevent checkpointing before any blocks are claimed,\n+        // in a state where no work has been done yet - because such a checkpoint is equivalent to\n+        // the original restriction, i.e. pointless.\n+        this.scheduledCheckpoint =\n+            executor.schedule(\n+                (Runnable) this::takeCheckpointNow, maxDuration.getMillis(), TimeUnit.MILLISECONDS);\n+      }\n+      ++numClaimedBlocks;\n+    }\n+\n+    @Override\n+    public void onClaimFailed(PositionT position) {\n+      checkState(\n+          !hasClaimFailed,\n+          \"Must not call tryClaim() after it has previously returned false\");\n+      hasClaimFailed = true;\n     }\n \n     void cancelScheduledCheckpoint() {\n+      if (scheduledCheckpoint == null) {\n+        return;\n+      }\n       scheduledCheckpoint.cancel(true);\n       try {\n         Futures.getUnchecked(scheduledCheckpoint);\n@@ -275,9 +329,19 @@ public class OutputAndTimeBoundedSplittableProcessElementInvoker<\n \n     @Override\n     public synchronized void updateWatermark(Instant watermark) {\n+    ",
    "add sync - sundown script": "diff --git a/src/cpp/core/markdown/sundown/buffer.c b/src/cpp/core/markdown/sundown/buffer.c\nindex 5f44e0e63c..3807fb9595 100644\n--- a/src/cpp/core/markdown/sundown/buffer.c\n+++ b/src/cpp/core/markdown/sundown/buffer.c\n@@ -22,6 +22,7 @@\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>\n+#include <assert.h>\n \n /* MSVC compat */\n #if defined(_MSC_VER)\n@@ -34,6 +35,7 @@ int\n bufprefix(const struct buf *buf, const char *prefix)\n {\n \tsize_t i;\n+\tassert(buf && buf->unit);\n \n \tfor (i = 0; i < buf->size; ++i) {\n \t\tif (prefix[i] == 0)\n@@ -53,6 +55,8 @@ bufgrow(struct buf *buf, size_t neosz)\n \tsize_t neoasz;\n \tvoid *neodata;\n \n+\tassert(buf && buf->unit);\n+\n \tif (neosz > BUFFER_MAX_ALLOC_SIZE)\n \t\treturn BUF_ENOMEM;\n \n@@ -92,6 +96,8 @@ bufnew(size_t unit)\n const char *\n bufcstr(struct buf *buf)\n {\n+\tassert(buf && buf->unit);\n+\n \tif (buf->size < buf->asize && buf->data[buf->size] == 0)\n \t\treturn (char *)buf->data;\n \n@@ -110,6 +116,8 @@ bufprintf(struct buf *buf, const char *fmt, ...)\n \tva_list ap;\n \tint n;\n \n+\tassert(buf && buf->unit);\n+\n \tif (buf->size >= buf->asize && bufgrow(buf, buf->size + 1) < 0)\n \t\treturn;\n \t\n@@ -144,6 +152,8 @@ bufprintf(struct buf *buf, const char *fmt, ...)\n void\n bufput(struct buf *buf, const void *data, size_t len)\n {\n+\tassert(buf && buf->unit);\n+\n \tif (buf->size + len > buf->asize && bufgrow(buf, buf->size + len) < 0)\n \t\treturn;\n \n@@ -163,6 +173,8 @@ bufputs(struct buf *buf, const char *str)\n void\n bufputc(struct buf *buf, int c)\n {\n+\tassert(buf && buf->unit);\n+\n \tif (buf->size + 1 > buf->asize && bufgrow(buf, buf->size + 1) < 0)\n \t\treturn;\n \n@@ -198,6 +210,8 @@ bufreset(struct buf *buf)\n void\n bufslurp(struct buf *buf, size_t len)\n {\n+\tassert(buf && buf->unit);\n+\n \tif (len >= buf->size) {\n \t\tbuf->size = 0;\n \t\treturn;\ndiff --git a/src/cpp/core/markdown/sundown/houdini_href_e.c b/src/cpp/core/markdown/sundown/houdini_href_e.c\nindex f63b7663ea..981b3b17e4 100644\n--- a/src/cpp/core/markdown/sundown/houdini_href_e.c\n+++ b/src/cpp/core/markdown/sundown/houdini_href_e.c\n@@ -1,3 +1,4 @@\n+#include <assert.h>\n #include <stdio.h>\n #include <string.h>\n \ndiff --git a/src/cpp/core/markdown/sundown/houdini_html_e.c b/src/cpp/core/markdown/sundown/houdini_html_e.c\nindex 5250212c61..d9bbf187d8 100644\n--- a/src/cpp/core/markdown/sundown/houdini_html_e.c\n+++ b/src/cpp/core/markdown/sundown/houdini_html_e.c\n@@ -1,3 +1,4 @@\n+#include <assert.h>\n #include <stdio.h>\n #include <string.h>\n \ndiff --git a/src/cpp/core/markdown/sundown/markdown.c b/src/cpp/core/markdown/sundown/markdown.c\nindex 57ffc63fd8..9f5ef44f9a 100644\n--- a/src/cpp/core/markdown/sundown/markdown.c\n+++ b/src/cpp/core/markdown/sundown/markdown.c\n@@ -20,6 +20,7 @@\n #include \"markdown.h\"\n #include \"stack.h\"\n \n+#include <assert.h>\n #include <string.h>\n #include <ctype.h>\n #include <stdio.h>\n@@ -2350,6 +2351,8 @@ sd_markdown_new(\n {\n \tstruct sd_markdown *md = NULL;\n \n+\tassert(max_nesting > 0 && callbacks);\n+\n \tmd = malloc(sizeof(struct sd_markdown));\n \tif (!md)\n \t\treturn NULL;\n@@ -2469,6 +2472,9 @@ sd_markdown_render(struct buf *ob, const uint8_t *document, size_t doc_size, str\n \t/* clean-up */\n \tbufrelease(text);\n \tfree_link_refs(md->refs);\n+\n+\tassert(md->work_bufs[BUFFER_SPAN].size == 0);\n+\tassert(md->work_bufs[BUFFER_BLOCK].size == 0);\n }\n \n void\ndiff --git a/src/cpp/core/markdown/sundown/sundown_version.h b/src/cpp/core/markdown/sundown/sundown_version.h\nindex 5401997a02..2d728e2182 100644\n--- a/src/cpp/core/markdown/sundown/sundown_version.h\n+++ b/src/cpp/core/markdown/sundown/sundown_version.h\n@@ -1 +1 @@\n-#define RSTUDIO_SUNDOWN_VERSION f7557c5d3a177e9d2271c790a1e7446d57e047af\n+#define RSTUDIO_SUNDOWN_VERSION 6a9a1be67e6d8d75179bcef85f291702e225898a\ndiff --git a/src/cpp/tools/.gitignore b/src/cpp/tools/.gitignore\nnew file mode 100644\nindex 0000000000..c4c9130be2\n--- /dev/null\n+++ b/src/cpp/tools/.gitignore\n@@ -0,0 +1 @@\n+sundown/\ndiff --git a/src/cpp/tools/sync-sundown b/src/cpp/tools/sync-sundown\nnew file mode 100755\nindex 0000000000..0e7e7c828f\n--- /dev/null\n+++ b/src/cpp/tools/sync-sundown\n@@ -0,0 +1,32 @@\n+#!/bin/sh\n+\n+set -e\n+\n+if [ ! -d \"./sundown\" ]; then\n+    git clone git://github.com/rstudio/sundown.git sundown\n+    cd sundown\n+    git remote add upstream git://github.com/tanoku/sundown.git\n+    cd ..\n+fi\n+\n+cd sundown\n+git clean -dfx\n+\n+# Use the branch with rstudio-specific changes \n+git checkout rstudio\n+git pull\n+VERSION=`git rev-parse HEAD`\n+\n+# copy files\n+TARGET_DIR=../../core/markdown/sundown\n+echo \"#define RSTUDIO_SUNDOWN_VERSION $VERSION\" > $TARGET_DIR/sundown_version.h\n+cp src/autolink.h $TARGET_DIR\n+cp src/buffer.h $TARGET_DIR\n+cp src/markdown.h $TARGET_DIR\n+cp src/*.h $TARGET_DIR\n+cp src/*.c $TARGET_DIR\n+cp html/*.h $TARGET_DIR\n+cp html/*.c $TARGET_DIR\n+\n+# return to tools dir\n+cd ..",
    "Renamed DefaultReactiveGateways to ReactorGateways .": "diff --git a/messaging/src/main/java/org/axonframework/commandhandling/gateway/DefaultReactiveCommandGateway.java b/messaging/src/main/java/org/axonframework/commandhandling/gateway/ReactorCommandGateway.java\nsimilarity index 89%\nrename from messaging/src/main/java/org/axonframework/commandhandling/gateway/DefaultReactiveCommandGateway.java\nrename to messaging/src/main/java/org/axonframework/commandhandling/gateway/ReactorCommandGateway.java\nindex ccae733d9..74ef8ca22 100644\n--- a/messaging/src/main/java/org/axonframework/commandhandling/gateway/DefaultReactiveCommandGateway.java\n+++ b/messaging/src/main/java/org/axonframework/commandhandling/gateway/ReactorCommandGateway.java\n@@ -32,28 +32,28 @@\n import static org.axonframework.common.BuilderUtils.assertNonNull;\n \n /**\n- * Default implementation of the {@link ReactiveCommandGateway}.\n+ * Implementation of the {@link ReactiveCommandGateway} that uses Project Reactor to achieve reactiveness.\n  *\n  * @author Milan Savic\n  * @since 4.4\n  */\n-public class DefaultReactiveCommandGateway implements ReactiveCommandGateway {\n+public class ReactorCommandGateway implements ReactiveCommandGateway {\n \n     private final CommandBus commandBus;\n     private final RetryScheduler retryScheduler;\n     private final List<ReactiveMessageDispatchInterceptor<CommandMessage<?>>> dispatchInterceptors;\n \n     /**\n-     * Creates an instance of {@link DefaultReactiveCommandGateway} based on the fields contained in the {@link\n+     * Creates an instance of {@link ReactorCommandGateway} based on the fields contained in the {@link\n      * Builder}.\n      * <p>\n      * Will assert that the {@link CommandBus} is not {@code null} and throws an {@link AxonConfigurationException} if\n      * it is.\n      * </p>\n      *\n-     * @param builder the {@link Builder} used to instantiated a {@link DefaultReactiveCommandGateway} instance\n+     * @param builder the {@link Builder} used to instantiated a {@link ReactorCommandGateway} instance\n      */\n-    protected DefaultReactiveCommandGateway(Builder builder) {\n+    protected ReactorCommandGateway(Builder builder) {\n         builder.validate();\n         this.commandBus = builder.commandBus;\n         this.retryScheduler = builder.retryScheduler;\n@@ -61,13 +61,13 @@ protected DefaultReactiveCommandGateway(Builder builder) {\n     }\n \n     /**\n-     * Instantiate a Builder to be able to create a {@link DefaultReactiveCommandGateway}.\n+     * Instantiate a Builder to be able to create a {@link ReactorCommandGateway}.\n      * <p>\n      * The {@code dispatchInterceptors} are defaulted to an empty list.\n      * The {@link CommandBus} is a <b>hard requirements</b> and as such should be provided.\n      * </p>\n      *\n-     * @return a Builder to be able to create a {@link DefaultReactiveCommandGateway}\n+     * @return a Builder to be able to create a {@link ReactorCommandGateway}\n      */\n     public static Builder builder() {\n         return new Builder();\n@@ -115,7 +115,7 @@ private Mono<CommandMessage<?>> processInterceptors(Mono<CommandMessage<?>> comm\n     }\n \n     /**\n-     * Builder class to instantiate {@link DefaultReactiveCommandGateway}.\n+     * Builder class to instantiate {@link ReactorCommandGateway}.\n      * <p>\n      * The {@code dispatchInterceptors} are defaulted to an empty list.\n      * The {@link CommandBus} is a <b>hard requirement</b> and as such should be provided.\n@@ -190,12 +190,12 @@ protected void validate() {\n         }\n \n         /**\n-         * Initializes a {@link DefaultReactiveCommandGateway} as specified through this Builder.\n+         * Initializes a {@link ReactorCommandGateway} as specified through this Builder.\n          *\n-         * @return a {@link DefaultReactiveCommandGateway} as specified through this Builder\n+         * @return a {@link ReactorCommandGateway} as specified through this Builder\n          */\n-        public DefaultReactiveCommandGateway build() {\n-            return new DefaultReactiveCommandGateway(this);\n+        public ReactorCommandGateway build() {\n+            return new ReactorCommandGateway(this);\n         }\n     }\n }\ndiff --git a/messaging/src/main/java/org/axonframework/queryhandling/DefaultReactiveQueryGateway.java b/messaging/src/main/java/org/axonframework/queryhandling/ReactorQueryGateway.java\nsimilarity index 91%\nrename from messaging/src/main/java/org/axonframework/queryhandling/DefaultReactiveQueryGateway.java\nrename to messaging/src/main/java/org/axonframework/queryhandling/ReactorQueryGateway.java\nindex f71f9ac62..5fea41f1a 100644\n--- a/messaging/src/main/java/org/axonframework/queryhandling/DefaultReactiveQueryGateway.java\n+++ b/messaging/src/main/java/org/axonframework/queryhandling/ReactorQueryGateway.java\n@@ -34,41 +34,41 @@\n import static org.axonframework.common.BuilderUtils.assertNonNull;\n \n /**\n- * Default implementation of the {@link ReactiveQueryGateway}.\n+ * Implementation of the {@link ReactiveQueryGateway} that uses Project Reactor to achieve reactiveness.\n  *\n  * @author Milan Savic\n  * @since 4.4\n  */\n-public class DefaultReactiveQueryGateway implements ReactiveQueryGateway {\n+public class ReactorQueryGateway implements ReactiveQueryGateway {\n \n     private final List<ReactiveMessageDispatchInterceptor<QueryMessage<?, ?>>> dispatchInterceptors;\n \n     private final QueryBus queryBus;\n \n     /**\n-     * Creates an instance of {@link DefaultReactiveQueryGateway} based on the fields contained in the {@link\n+     * Creates an instance of {@link ReactorQueryGateway} based on the fields contained in the {@link\n      * Builder}.\n      * <p>\n      * Will assert that the {@link QueryBus} is not {@code null} and throws an {@link AxonConfigurationException} if\n      * it is.\n      * </p>\n      *\n-     * @param builder the {@link Builder} used to instantiated a {@link DefaultReactiveQueryGateway} instance\n+     * @param builder the {@link Builder} used to instantiated a {@link ReactorQueryGateway} instance\n      */\n-    protected DefaultReactiveQueryGateway(Builder builder) {\n+    protected ReactorQueryGateway(Builder builder) {\n         builder.validate();\n         this.queryBus = builder.queryBus;\n         this.dispatchInterceptors = builder.dispatchInterceptors;\n     }\n \n     /**\n-     * Instantiate a Builder to be able to create a {@link DefaultReactiveQueryGateway}.\n+     * Instantiate a Builder to be able to create a {@link ReactorQueryGateway}.\n      * <p>\n      * The {@code dispatchInterceptors} are defaulted to an empty list.\n      * The {@link QueryBus} is a <b>hard requirements</b> and as such should be provided.\n      * </p>\n      *\n-     * @return a Builder to be able to create a {@link DefaultReactiveQueryGateway}\n+     * @return a Builder to be able to create a {@link ReactorQueryGateway}\n      */\n     public static Builder builder() {\n         return new Builder();\n@@ -166,7 +166,7 @@ public <Q, I, U> Mono<SubscriptionQueryResult<I, U>> subscriptionQuery(String qu\n     }\n \n     /**\n-     * Builder class to instantiate {@link DefaultReactiveQueryGateway}.\n+     * Builder class to instantiate {@link ReactorQueryGateway}.\n      * <p>\n      * The {@code dispatchInterceptors} are defaulted to an empty list.\n      * The {@link QueryBus} is a <b>hard requirement</b> and as such should be provided.\n@@ -228,12 +228,12 @@ protected void validate() {\n         }\n \n         /**\n-         * Initializes a {@link DefaultReactiveQueryGateway} as specified through this Builder.\n+         * Initializes a {@link ReactorQueryGateway} as specified through this Builder.\n          *\n-         * @return a {@link DefaultReactiveQueryGateway} as specified through this Builder\n+         * @return a {@link ReactorQueryGateway} as specified through this Builder\n          */\n-        public DefaultReactiveQueryGateway build() {\n-            return new DefaultReactiveQueryGateway(this);\n+        public ReactorQueryGateway build() {\n+            return new ReactorQueryGateway(this);\n         }\n     }\n }\ndiff --git a/messaging/src/test/java/org/axonframework/commandhandling/gateway/DefaultReactiveCommandGatewayTest.java b/messaging/src/test/java/org/axonframework/commandhandling/gateway/ReactorCommandGatewayTest.java\nsimilarity index 93%\nrename from messaging/src/test/java/org/axonframework/commandhandling/gateway/DefaultReactiveCommandGatewayTest.java\nrename to messaging/src/test/java/org/axonframework/commandhandling/gateway/ReactorCommandGatewayTest.java\nindex 148e6a134..59cd82671 100644\n--- a/messaging/src/test/java/org/axonframework/commandhandling/gateway/DefaultReactiveCommandGatewayTest.java\n+++ b/messaging/src/test/java/org/axonframework/commandhandling/gateway/ReactorCommandGatewayTest.java\n@@ -42,9 +42,9 @@\n  *\n  * @author Milan Savic\n  */\n-class DefaultReactiveCommandGatewayTest {\n+class ReactorCommandGatewayTest {\n \n-    private DefaultReactiveCommandGateway reactiveCommandGateway;\n+    private ReactorCommandGateway reactiveCommandGateway;\n     private MessageHandler<CommandMessage<?>> commandMessageHandler;\n     private RetryScheduler mockRetryScheduler;\n \n@@ -71,10 +71,10 @@ public Object handle(CommandMessage<?> message) {\n         commandBus.subscribe(Boolean.class.getName(),\n                              message -> \"\" + message.getMetaData().getOrDefault(\"key1\", \"\")\n                                      + message.getMetaData().getOrDefault(\"key2\", \"\"));\n-        reactiveCommandGateway = DefaultReactiveCommandGateway.builder()\n-                                                              .commandBus(commandBus)\n-                                                              .retryScheduler(mockRetryScheduler)\n-                                                              .build();\n+        reactiveCommandGateway = ReactorCommandGateway.builder()\n+                                                      .commandBus(commandBus)\n+                                                      .retryScheduler(mockRetryScheduler)\n+                                                      .build();\n     }\n \n     @Test\ndiff --git a/messaging/src/test/java/org/axonframework/queryhandling/DefaultReactiveQueryGatewayTest.java b/messaging/src/test/java/org/axonframework/queryhandling/ReactorQueryGatewayTest.java\nsimilarity index 98%\nrename from messaging/src/test/java/org/axonframework/queryhandling/DefaultReactiveQueryGatewayTest.java\nrename to messaging/src/test/java/org/axonframework/queryhandling/ReactorQueryGatewayTest.java\nindex 34da0be5a..41ee65891 100644\n--- a/messaging/src/test/java/org/axonframework/queryhandling/DefaultReactiveQueryGatewayTest.java\n+++ b/messaging/src/test/java/org/axonframework/queryhandling/ReactorQueryGatewayTest.java\n@@ -37,13 +37,13 @@\n import static org.mockito.Mockito.*;\n \n /**\n- * Tests for {@link DefaultReactiveQueryGateway}.\n+ * Tests for {@link ReactorQueryGateway}.\n  *\n  * @author Milan Savic\n  */\n-public class DefaultReactiveQueryGatewayTest {\n+public class ReactorQueryGatewayTest {\n \n-    private DefaultReactiveQueryGateway reactiveQueryGateway;\n+    private ReactorQueryGateway reactiveQueryGateway;\n     private QueryUpdateEmitter queryUpdateEmitter;\n     private MessageHandler<QueryMessage<?, Object>> queryMessageHandler1;\n     private MessageHandler<QueryMessage<?, Object>> queryMessageHandler2;\n@@ -82,9 +82,9 @@ public Object handle(QueryMessage<?, Object> message) {\n                            message -> \"\" + message.getMetaData().getOrDefault(\"key1\", \"\")\n                                    + message.getMetaData().getOrDefault(\"key2\", \"\"));\n         queryBus.subscribe(Long.class.getName(), String.class, message -> null);\n-        reactiveQueryGateway = DefaultReactiveQueryGateway.builder()\n-                                                          .queryBus(queryBus)\n-                                                          .build();\n+        reactiveQueryGateway = ReactorQueryGateway.builder()\n+                                ",
    "Updated text": "diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml\nindex ed1ce7106f..1fd6da579a 100644\n--- a/app/src/main/res/values/strings.xml\n+++ b/app/src/main/res/values/strings.xml\n@@ -687,7 +687,7 @@\n     </integer-array>\n \n     <string-array name=\"sendDelayedNames\">\n-        <item>Never</item>\n+        <item>No</item>\n         <item>15 seconds</item>\n         <item>30 seconds</item>\n         <item>1 minute</item>",
    "changing the group id to com . github . javaparser": "diff --git a/build.gradle b/build.gradle\nindex 9ec0d38cf..113b3b656 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -21,7 +21,7 @@ allprojects  {\n   apply plugin: 'idea'\n   apply plugin: 'jacoco'\n \n-  group = 'me.tomassetti'\n+  group = 'com.github.javaparser'\n   version = '0.4.0-SNAPSHOT'\n \n   repositories {\ndiff --git a/java-symbol-solver-core/pom.xml b/java-symbol-solver-core/pom.xml\nindex 0ddc40792..697e8ef5f 100644\n--- a/java-symbol-solver-core/pom.xml\n+++ b/java-symbol-solver-core/pom.xml\n@@ -1,7 +1,7 @@\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n \n   <parent>\n-    <groupId>me.tomassetti</groupId>\n+    <groupId>com.github.javaparser</groupId>\n     <artifactId>java-symbol-solver-parent</artifactId>\n     <version>0.4-SNAPSHOT</version>\n   </parent>\n@@ -57,12 +57,12 @@\n           <version>18.0</version>\n       </dependency>\n       <dependency>\n-          <groupId>me.tomassetti</groupId>\n+          <groupId>com.github.javaparser</groupId>\n           <artifactId>java-symbol-solver-model</artifactId>\n           <version>0.4-SNAPSHOT</version>\n       </dependency>\n       <dependency>\n-          <groupId>me.tomassetti</groupId>\n+          <groupId>com.github.javaparser</groupId>\n           <artifactId>java-symbol-solver-logic</artifactId>\n           <version>0.4-SNAPSHOT</version>\n       </dependency>\ndiff --git a/java-symbol-solver-examples/pom.xml b/java-symbol-solver-examples/pom.xml\nindex 2d7ba8a35..e097829e6 100644\n--- a/java-symbol-solver-examples/pom.xml\n+++ b/java-symbol-solver-examples/pom.xml\n@@ -1,7 +1,7 @@\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n \n   <parent>\n-    <groupId>me.tomassetti</groupId>\n+    <groupId>com.github.javaparser</groupId>\n     <artifactId>java-symbol-solver-parent</artifactId>\n     <version>0.4-SNAPSHOT</version>\n   </parent>\n@@ -57,7 +57,7 @@\n           <version>18.0</version>\n      </dependency>\n      <dependency>\n-          <groupId>me.tomassetti</groupId>\n+          <groupId>com.github.javaparser</groupId>\n           <artifactId>java-symbol-solver-core</artifactId>\n           <version>0.4-SNAPSHOT</version>\n      </dependency>\ndiff --git a/java-symbol-solver-logic/pom.xml b/java-symbol-solver-logic/pom.xml\nindex 4a8b13fef..0743f1bdf 100644\n--- a/java-symbol-solver-logic/pom.xml\n+++ b/java-symbol-solver-logic/pom.xml\n@@ -1,7 +1,7 @@\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n \n   <parent>\n-    <groupId>me.tomassetti</groupId>\n+    <groupId>com.github.javaparser</groupId>\n     <artifactId>java-symbol-solver-parent</artifactId>\n     <version>0.4-SNAPSHOT</version>\n   </parent>\n@@ -57,7 +57,7 @@\n           <version>18.0</version>\n       </dependency>\n       <dependency>\n-          <groupId>me.tomassetti</groupId>\n+          <groupId>com.github.javaparser</groupId>\n           <artifactId>java-symbol-solver-model</artifactId>\n           <version>0.4-SNAPSHOT</version>\n       </dependency>\ndiff --git a/java-symbol-solver-model/pom.xml b/java-symbol-solver-model/pom.xml\nindex c607a7e3b..c58401183 100644\n--- a/java-symbol-solver-model/pom.xml\n+++ b/java-symbol-solver-model/pom.xml\n@@ -17,7 +17,7 @@\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n \n   <parent>\n-    <groupId>me.tomassetti</groupId>\n+    <groupId>com.github.javaparser</groupId>\n     <artifactId>java-symbol-solver-parent</artifactId>\n     <version>0.4-SNAPSHOT</version>\n   </parent>\ndiff --git a/pom.xml b/pom.xml\nindex 8b423c9e3..fcc7e947c 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -6,7 +6,7 @@\n     <module>java-symbol-solver-examples</module>\n   </modules>\n   <modelVersion>4.0.0</modelVersion>\n-  <groupId>me.tomassetti</groupId>\n+  <groupId>com.github.javaparser</groupId>\n   <artifactId>java-symbol-solver-parent</artifactId>\n   <packaging>pom</packaging>\n   <version>0.4-SNAPSHOT</version>",
    "Automated import from / / branches / master / . . . @ 141652 , 141652": "diff --git a/res/layout/create_shortcut_list.xml b/res/layout/create_shortcut_list.xml\ndeleted file mode 100644\nindex aa1673375..000000000\n--- a/res/layout/create_shortcut_list.xml\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!--\n-/*\n-**\n-** Copyright 2008, The Android Open Source Project\n-**\n-** Licensed under the Apache License, Version 2.0 (the \"License\");\n-** you may not use this file except in compliance with the License.\n-** You may obtain a copy of the License at\n-**\n-**     http://www.apache.org/licenses/LICENSE-2.0\n-**\n-** Unless required by applicable law or agreed to in writing, software\n-** distributed under the License is distributed on an \"AS IS\" BASIS,\n-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-** See the License for the specific language governing permissions and\n-** limitations under the License.\n-*/\n--->\n-<ListView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"fill_parent\"\n-    android:layout_marginTop=\"5dip\"\n-    android:cacheColorHint=\"@null\"\n-    android:divider=\"@android:drawable/divider_horizontal_bright\"\n-    android:scrollbars=\"vertical\" />\ndiff --git a/res/layout/create_shortcut_list_item.xml b/res/layout/create_shortcut_list_item.xml\ndeleted file mode 100644\nindex a6975f8fa..000000000\n--- a/res/layout/create_shortcut_list_item.xml\n+++ /dev/null\n@@ -1,30 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!--\n-/*\n-** Copyright 2008, The Android Open Source Project\n-**\n-** Licensed under the Apache License, Version 2.0 (the \"License\");\n-** you may not use this file except in compliance with the License.\n-** You may obtain a copy of the License at\n-**\n-**     http://www.apache.org/licenses/LICENSE-2.0\n-**\n-** Unless required by applicable law or agreed to in writing, software\n-** distributed under the License is distributed on an \"AS IS\" BASIS,\n-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-** See the License for the specific language governing permissions and\n-** limitations under the License.\n-*/\n--->\n-<TextView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:id=\"@+id/title\"\n-    android:layout_width=\"fill_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:minHeight=\"?android:attr/listPreferredItemHeight\"\n-    android:textAppearance=\"?android:attr/textAppearanceLargeInverse\"\n-    android:gravity=\"center_vertical\"\n-    android:drawablePadding=\"14dip\"\n-    android:paddingLeft=\"?android:attr/expandableListPreferredChildPaddingLeft\"\n-    android:paddingRight=\"15dip\" />\n-\n-\ndiff --git a/src/com/android/launcher/AddAdapter.java b/src/com/android/launcher/AddAdapter.java\nindex 245a7a0c5..a6c889e13 100644\n--- a/src/com/android/launcher/AddAdapter.java\n+++ b/src/com/android/launcher/AddAdapter.java\n@@ -36,13 +36,10 @@ public class AddAdapter extends BaseAdapter {\n     \n     private final ArrayList<ListItem> mItems = new ArrayList<ListItem>();\n     \n-    public static final int ITEM_APPLICATION = 0;\n-    public static final int ITEM_SHORTCUT = 1;\n-    public static final int ITEM_SEARCH = 2;\n-    public static final int ITEM_APPWIDGET = 3;\n-    public static final int ITEM_LIVE_FOLDER = 4;\n-    public static final int ITEM_FOLDER = 5;\n-    public static final int ITEM_WALLPAPER = 6;\n+    public static final int ITEM_SHORTCUT = 0;\n+    public static final int ITEM_APPWIDGET = 1;\n+    public static final int ITEM_LIVE_FOLDER = 2;\n+    public static final int ITEM_WALLPAPER = 3;\n     \n     /**\n      * Specific item in our list.\n@@ -71,9 +68,6 @@ public class AddAdapter extends BaseAdapter {\n         // Create default actions\n         Resources res = launcher.getResources();\n         \n-        mItems.add(new ListItem(res, R.string.group_applications,\n-                R.drawable.ic_launcher_application, ITEM_APPLICATION));\n-        \n         mItems.add(new ListItem(res, R.string.group_shortcuts,\n                 R.drawable.ic_launcher_shortcut, ITEM_SHORTCUT));\n \n@@ -83,9 +77,6 @@ public class AddAdapter extends BaseAdapter {\n         mItems.add(new ListItem(res, R.string.group_live_folders,\n                 R.drawable.ic_launcher_folder_live, ITEM_LIVE_FOLDER));\n         \n-        mItems.add(new ListItem(res, R.string.group_folder,\n-                R.drawable.ic_launcher_folder, ITEM_FOLDER));\n-        \n         mItems.add(new ListItem(res, R.string.group_wallpapers,\n                 R.drawable.ic_launcher_gallery, ITEM_WALLPAPER));\n \ndiff --git a/src/com/android/launcher/Launcher.java b/src/com/android/launcher/Launcher.java\nindex 205703236..d84e67da7 100644\n--- a/src/com/android/launcher/Launcher.java\n+++ b/src/com/android/launcher/Launcher.java\n@@ -31,6 +31,7 @@ import android.content.DialogInterface;\n import android.content.Intent;\n import android.content.IntentFilter;\n import android.content.SharedPreferences;\n+import android.content.Intent.ShortcutIconResource;\n import android.content.pm.ActivityInfo;\n import android.content.pm.PackageManager;\n import android.content.pm.PackageManager.NameNotFoundException;\n@@ -38,6 +39,7 @@ import android.content.res.Resources;\n import android.content.res.Configuration;\n import android.database.ContentObserver;\n import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n import android.graphics.Rect;\n import android.graphics.drawable.BitmapDrawable;\n import android.graphics.drawable.Drawable;\n@@ -313,6 +315,8 @@ public final class Launcher extends Activity implements View.OnClickListener, On\n         // For example, the user would PICK_SHORTCUT for \"Music playlist\", and we\n         // launch over to the Music app to actually CREATE_SHORTCUT.\n         \n+        Resources res = getResources();\n+        \n         if (resultCode == RESULT_OK && mAddItemCellInfo != null) {\n             switch (requestCode) {\n                 case REQUEST_PICK_APPLICATION:\n@@ -980,11 +984,32 @@ public final class Launcher extends Activity implements View.OnClickListener, On\n     }\n \n     void addShortcut(Intent intent) {\n-        startActivityForResult(intent, REQUEST_CREATE_SHORTCUT);\n+        // Handle case where user selected \"Applications\"\n+        String applicationName = getResources().getString(R.string.group_applications);\n+        String shortcutName = intent.getStringExtra(Intent.EXTRA_SHORTCUT_NAME);\n+        \n+        if (applicationName != null && applicationName.equals(shortcutName)) {\n+            Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);\n+            mainIntent.addCategory(Intent.CATEGORY_LAUNCHER);\n+            \n+            Intent pickIntent = new Intent(Intent.ACTION_PICK_ACTIVITY);\n+            pickIntent.putExtra(Intent.EXTRA_INTENT, mainIntent);\n+            startActivityForResult(pickIntent, REQUEST_PICK_APPLICATION);\n+        } else {\n+            startActivityForResult(intent, REQUEST_CREATE_SHORTCUT);\n+        }\n     }\n \n     void addLiveFolder(Intent intent) {\n-        startActivityForResult(intent, REQUEST_CREATE_LIVE_FOLDER);\n+        // Handle case where user selected \"Folder\"\n+        String folderName = getResources().getString(R.string.folder_name);\n+        String shortcutName = intent.getStringExtra(Intent.EXTRA_SHORTCUT_NAME);\n+        \n+        if (folderName != null && folderName.equals(shortcutName)) {\n+            addFolder(!mDesktopLocked);\n+        } else {\n+            startActivityForResult(intent, REQUEST_CREATE_LIVE_FOLDER);\n+        }\n     }\n \n     void addFolder(boolean insertAtFirst) {\n@@ -1670,7 +1695,7 @@ public final class Launcher extends Activity implements View.OnClickListener, On\n      * Displays the shortcut creation dialog and launches, if necessary, the\n      * appropriate activity.\n      */\n-    private class CreateShortcut implements AdapterView.OnItemClickListener,\n+    private class CreateShortcut implements DialogInterface.OnClickListener,\n             DialogInterface.OnCancelListener {\n         private AddAdapter mAdapter;\n         private ListView mList;\n@@ -1682,22 +1707,14 @@ public final class Launcher extends Activity implements View.OnClickListener, On\n             \n             final AlertDialog.Builder builder = new AlertDialog.Builder(Launcher.this);\n             builder.setTitle(getString(R.string.menu_item_add_item));\n-            builder.setIcon(0);\n-\n-            mList = (ListView)\n-                    View.inflate(Launcher.this, R.layout.create_shortcut_list, null);\n-            mList.setAdapter(mAdapter);\n-            mList.setOnItemClickListener(this);\n+            builder.setAdapter(mAdapter, this);\n+            \n             builder.setView(mList);\n             builder.setInverseBackgroundForced(true);\n \n             AlertDialog dialog = builder.create();\n             dialog.setOnCancelListener(this);\n \n-            WindowManager.LayoutParams attributes = dialog.getWindow().getAttributes();\n-            attributes.gravity = Gravity.TOP;\n-            dialog.onWindowAttributesChanged(attributes);\n-\n             return dialog;\n         }\n \n@@ -1711,91 +1728,94 @@ public final class Launcher extends Activity implements View.OnClickListener, On\n             dismissDialog(DIALOG_CREATE_SHORTCUT);\n         }\n \n-        public void onItemClick(AdapterView parent, View view, int position, long id) {\n-            // handle which item was clicked based on position\n-            // this will launch off pick intent\n+        /**\n+         * Handle the action clicked in the \"Add to home\" dialog.\n+         */\n+        public void onClick(DialogInterface dialog, int which) {\n+            Resources res = getResources();\n+            cleanup();\n             \n-            Object tag = view.getTag();\n-            if (tag instanceof AddAdapter.ListItem) {\n-                AddAdapter.ListItem item = (AddAdapter.ListItem) tag;\n-                cleanup();\n-                switch (item.actionTag) {\n-                    case AddAdapter.ITEM_APPLICATION: {\n-                        Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);\n-                        mainIntent.addCategory(Intent.CATEGORY_LAUNCHER);\n-\n-                        Intent pickIntent = new Intent(Intent.ACTION_PICK_ACTIVITY);\n-                        pickIntent.putExtra(Intent.EXTRA_INTENT, mainIntent);\n-                        startActivityForResult(pickIntent, REQUEST_PICK_APPLICATION);\n-                        break;\n-                    }\n-\n-                    case AddAdapter.ITEM_SHORTCUT: {\n-                        Intent shortcutIntent = new Intent(Intent.ACTION_CREATE_SHORTCUT);\n-\n-                        Intent pickIntent = new Intent(Intent.ACTION_PICK_ACTIVITY);\n-                        pickIntent.putExtra(Intent.EXTRA_INTENT, shortcutIntent);\n-                        pickIntent.putExtra(Intent.EXTRA_TITLE,\n-                                getText(R.string.title_select_shortcut));\n-                        startActivityForResult(pickIntent, REQUEST_PICK_SHORTCUT);\n-                        break;\n-                    }\n+            switch (which) {\n+                case AddAdapter.ITEM_SHORTCUT: {\n+                    // Insert extra item to handle picking application\n+                    Bundle bundle = new Bundle();\n                     \n-                    case AddAdapter.ITEM_SEARCH: {\n-                        addSearch();\n-                        break;\n-                    }\n+                    ArrayList<String> shortcutNames = new ArrayList<String>();\n+                    shortcutNames.add(res.getString(R.string.group_applications));\n+                    bundle.putStringArrayList(Intent.EXTRA_SHORTCUT_NAME, shortcutNames);\n                     \n-                    case AddAdapter.ITEM_APPWIDGET: {\n-                        int appWidgetId = Launcher.this.mAppWidgetHost.allocateAppWidgetId();\n-                        \n-                        Intent pickIntent = new Intent(AppWidgetManager.ACTION_APPWIDGET_PICK);\n-                        pickIntent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId);\n-                        // add the search widget\n-                        ArrayList<AppWidgetProviderInfo> customInfo =\n-                                new ArrayList<AppWidgetProviderInfo>();\n-                        AppWidgetProviderInfo info = new AppWidgetProviderInfo();\n-                        info.provider = new ComponentName(getPackageName(), \"XXX.YYY\");\n-                        info.label = getString(R.string.group_search);\n-                        info.icon = R.drawable.ic_search_widget;\n-                        customInfo.add(info);\n-                        pickIntent.putParcelableArrayListExtra(\n-                                AppWidgetManager.EXTRA_CUSTOM_INFO, customInfo);\n-                        ArrayList<Bundle> customExtras = new ArrayList<Bundle>();\n-                        Bundle b = new Bundle();\n-                        b.putString(EXTRA_CUSTOM_WIDGET, SEARCH_WIDGET);\n-                        customExtras.add(b);\n-                        pickIntent.putParcelableArrayListExtra(\n-                                AppWidgetManager.EXTRA_CUSTOM_EXTRAS, customExtras);\n-                        // start the pick activity\n-                        startActivityForResult(pickIntent, REQUEST_PICK_APPWIDGET);\n-                        break;\n-                    }\n+                    ArrayList<ShortcutIconResource> shortcutIcons =\n+                            new ArrayList<ShortcutIconResource>();\n+                    shortcutIcons.add(ShortcutIconResource.fromContext(Launcher.this,\n+                            R.drawable.ic_launcher_application));\n+                    bundle.putParcelableArrayList(Intent.EXTRA_SHORTCUT_ICON_RESOURCE, shortcutIcons);\n                    ",
    "Bump gradle to 2 . 14 .": "diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar\nindex b5166dad..2c6137b8 100644\nBinary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties\nindex 8e750524..080872c6 100644\n--- a/gradle/wrapper/gradle-wrapper.properties\n+++ b/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,6 @@\n-#Tue Mar 15 17:30:11 PDT 2016\n+#Tue Jun 14 05:18:23 PDT 2016\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.12-bin.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.14-bin.zip\ndiff --git a/gradlew b/gradlew\nindex 91a7e269..9d82f789 100755\n--- a/gradlew\n+++ b/gradlew\n@@ -42,11 +42,6 @@ case \"`uname`\" in\n     ;;\n esac\n \n-# For Cygwin, ensure paths are in UNIX format before anything is touched.\n-if $cygwin ; then\n-    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n-fi\n-\n # Attempt to set APP_HOME\n # Resolve links: $0 may be a link\n PRG=\"$0\"\n@@ -61,9 +56,9 @@ while [ -h \"$PRG\" ] ; do\n     fi\n done\n SAVED=\"`pwd`\"\n-cd \"`dirname \\\"$PRG\\\"`/\" >&-\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n APP_HOME=\"`pwd -P`\"\n-cd \"$SAVED\" >&-\n+cd \"$SAVED\" >/dev/null\n \n CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n \n@@ -114,6 +109,7 @@ fi\n if $cygwin ; then\n     APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n     CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n \n     # We build the pattern for arguments to be converted via cygpath\n     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\ndiff --git a/gradlew.bat b/gradlew.bat\nindex 8a0b282a..5f192121 100644\n--- a/gradlew.bat\n+++ b/gradlew.bat\n@@ -46,7 +46,7 @@ echo location of your Java installation.\n goto fail\n \n :init\n-@rem Get command-line arguments, handling Windowz variants\n+@rem Get command-line arguments, handling Windows variants\n \n if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n if \"%@eval[2+2]\" == \"4\" goto 4NT_args",
    "enable keepalive for XDS channel .": "diff --git a/xds/src/main/java/io/grpc/xds/XdsClient.java b/xds/src/main/java/io/grpc/xds/XdsClient.java\nindex a19fd301c..85d15f5bc 100644\n--- a/xds/src/main/java/io/grpc/xds/XdsClient.java\n+++ b/xds/src/main/java/io/grpc/xds/XdsClient.java\n@@ -40,6 +40,7 @@ import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Objects;\n+import java.util.concurrent.TimeUnit;\n import javax.annotation.Nullable;\n \n /**\n@@ -491,19 +492,22 @@ abstract class XdsClient {\n         ServerInfo serverInfo = servers.get(0);\n         String serverUri = serverInfo.getServerUri();\n         List<ChannelCreds> channelCredsList = serverInfo.getChannelCredentials();\n-        ManagedChannel ch = null;\n+        ManagedChannelBuilder<?> channelBuilder = null;\n         // Use the first supported channel credentials configuration.\n         // Currently, only \"google_default\" is supported.\n         for (ChannelCreds creds : channelCredsList) {\n           if (creds.getType().equals(\"google_default\")) {\n-            ch = GoogleDefaultChannelBuilder.forTarget(serverUri).build();\n+            channelBuilder = GoogleDefaultChannelBuilder.forTarget(serverUri);\n             break;\n           }\n         }\n-        if (ch == null) {\n-          ch = ManagedChannelBuilder.forTarget(serverUri).build();\n+        if (channelBuilder == null) {\n+          channelBuilder = ManagedChannelBuilder.forTarget(serverUri);\n         }\n-        return ch;\n+\n+        return channelBuilder\n+            .keepAliveTime(5, TimeUnit.MINUTES)\n+            .build();\n       }\n   ",
    "Make the indirect dependency message show the correct label for external deps .": "diff --git a/src/java_tools/buildjar/java/com/google/devtools/build/buildjar/javac/plugins/dependency/StrictJavaDepsPlugin.java b/src/java_tools/buildjar/java/com/google/devtools/build/buildjar/javac/plugins/dependency/StrictJavaDepsPlugin.java\nindex 7c6999b5d9..da57a8f970 100644\n--- a/src/java_tools/buildjar/java/com/google/devtools/build/buildjar/javac/plugins/dependency/StrictJavaDepsPlugin.java\n+++ b/src/java_tools/buildjar/java/com/google/devtools/build/buildjar/javac/plugins/dependency/StrictJavaDepsPlugin.java\n@@ -359,6 +359,12 @@ public final class StrictJavaDepsPlugin extends BlazeJavaCompilerPlugin {\n     if (replacement != null) {\n       return replacement;\n     }\n+    int atIndex = target.indexOf('@');\n+    if (atIndex != -1) {\n+      // target starts with @@repo ('@' is escaped for the params file parsing) so one @ needs to\n+      // be stripped.\n+      target = target.substring(1);\n+    }\n     int colonIndex = target.indexOf(':');\n     if (colonIndex == -1) {\n       // No ':' in target, nothing to do.\ndiff --git a/src/main/java/com/google/devtools/build/lib/rules/java/JavaCompileAction.java b/src/main/java/com/google/devtools/build/lib/rules/java/JavaCompileAction.java\nindex 28bc1c98a8..572fcc112f 100644\n--- a/src/main/java/com/google/devtools/build/lib/rules/java/JavaCompileAction.java\n+++ b/src/main/java/com/google/devtools/build/lib/rules/java/JavaCompileAction.java\n@@ -646,7 +646,8 @@ public class JavaCompileAction extends AbstractAction {\n       Label label = getTargetName(jar);\n       builder.add(label.getPackageIdentifier().getRepository().isDefault()\n           ? label.toString()\n-          : label.toPathFragment().toString());\n+          // Escape '@' prefix for .params file.\n+          : \"@\" + label.toString());\n     }\n     return builder.build();\n   }\ndiff --git a/src/test/shell/bazel/local_repository_test.sh b/src/test/shell/bazel/local_repository_test.sh\nindex 6e5091c1b7..6c77b5b689 100755\n--- a/src/test/shell/bazel/local_repository_test.sh\n+++ b/src/test/shell/bazel/local_repository_test.sh\n@@ -287,4 +287,83 @@ EOF\n   expect_log \"Hello\"\n }\n \n+# Creates an indirect dependency on X from A and make sure the error message\n+# refers to the correct label.\n+function test_indirect_dep_message() {\n+  local external_dir=$TEST_TMPDIR\n+  mkdir -p a b $external_dir/x\n+  cat > a/A.java <<EOF\n+package a;\n+\n+import x.X;\n+\n+public class A {\n+  public static void main(String args[]) {\n+    X.print();\n+  }\n+}\n+EOF\n+  cat > a/BUILD <<EOF\n+java_binary(\n+    name = \"a\",\n+    main_class = \"a.A\",\n+    srcs = [\"A.java\"],\n+    deps = [\"//b\"],\n+)\n+EOF\n+\n+\n+  cat > b/B.java <<EOF\n+package b;\n+\n+public class B {\n+  public static void print() {\n+     System.out.println(\"B\");\n+  }\n+}\n+EOF\n+  cat > b/BUILD <<EOF\n+java_library(\n+    name = \"b\",\n+    srcs = [\"B.java\"],\n+    deps = [\"//external:x\"],\n+    visibility = [\"//visibility:public\"],\n+)\n+EOF\n+\n+  touch $external_dir/WORKSPACE\n+  cat > $external_dir/x/X.java <<EOF\n+package x;\n+\n+public class X {\n+  public static void print() {\n+    System.out.println(\"X\");\n+  }\n+}\n+EOF\n+  cat > $external_dir/x/BUILD <<EOF\n+java_library(\n+    name = \"x\",\n+    srcs = [\"X.java\"],\n+    visibility = [\"//visibility:public\"],\n+)\n+EOF\n+\n+  cat > WORKSPACE <<EOF\n+local_repository(\n+    name = \"x-repo\",\n+    path = \"$external_dir\",\n+)\n+\n+bind(\n+    name = \"x\",\n+    actual = \"@x-repo//x\",\n+)\n+EOF\n+\n+  bazel build //a:a >& $TEST_log && fail \"Building //a:a should error out\"\n+  expect_log \"** Please add the following dependencies:\"\n+  expect_log \"@x-repo//x  to //a:a\"\n+}\n+\n run_suite \"local repository tests\"",
    "See bug 23039 : add default value parameter to __property ( ) function .": "diff --git a/src/functions/org/apache/jmeter/functions/Property.java b/src/functions/org/apache/jmeter/functions/Property.java\nindex 1e5d2071b5..0ba1c5fa55 100644\n--- a/src/functions/org/apache/jmeter/functions/Property.java\n+++ b/src/functions/org/apache/jmeter/functions/Property.java\n@@ -84,10 +84,11 @@ public class Property extends AbstractFunction implements Serializable\n \n     // Number of parameters expected - used to reject invalid calls\n     private static final int MIN_PARAMETER_COUNT = 1;\n-    private static final int MAX_PARAMETER_COUNT = 2;\n+    private static final int MAX_PARAMETER_COUNT = 3;\n     static {\n         desc.add(JMeterUtils.getResString(\"property_name_param\"));\n         desc.add(JMeterUtils.getResString(\"function_name_param\"));\n+        desc.add(JMeterUtils.getResString(\"property_default_param\"));\n     }\n \n     private Object[] values;\n@@ -106,14 +107,19 @@ public class Property extends AbstractFunction implements Serializable\n         Sampler currentSampler)\n         throws InvalidVariableException\n     {\n-\n         String propertyName = ((CompoundVariable) values[0]).execute();\n+\t\tString propertyDefault = propertyName;\n+        if (values.length > 2){ // We have a 3rd parameter\n+        \tpropertyDefault= ((CompoundVariable) values[2]).execute();\n+        }\n         String propertyValue =\n-            JMeterUtils.getPropDefault(propertyName, propertyName);\n+            JMeterUtils.getPropDefault(propertyName, propertyDefault);\n         if (values.length > 1)\n         {\n             String variableName = ((CompoundVariable) values[1]).execute();\n-            getVariables().put(variableName, propertyValue);\n+            if (variableName.length() > 0){// Allow for empty name\n+            \tgetVariables().put(variableName, propertyValue);\n+            }\n         }\n  ",
    "Add color to notifications": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/AnkiActivity.java b/AnkiDroid/src/main/java/com/ichi2/anki/AnkiActivity.java\nindex f8880093fb..b2bee6d6d5 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/AnkiActivity.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/AnkiActivity.java\n@@ -483,7 +483,9 @@ public class AnkiActivity extends AppCompatActivity implements LoaderManager.Loa\n                     .setSmallIcon(R.drawable.ic_stat_notify)\n                     .setContentTitle(title)\n                     .setContentText(message)\n+                    .setColor(getResources().getColor(R.color.theme_primary))\n                     .setStyle(new NotificationCompat.BigTextStyle().bigText(message))\n+                    .setVisibility(NotificationCompat.VISIBILITY_PUBLIC)\n                     .setTicker(ticker);\n             // Enable vibrate and blink if set in preferences\n             if (prefs.getBoolean(\"widgetVibrate\", false)) {\ndiff --git a/AnkiDroid/src/main/java/com/ichi2/anki/services/NotificationService.java b/AnkiDroid/src/main/java/com/ichi2/anki/services/NotificationService.java\nindex f5eb6e9d71..562d307097 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/services/NotificationService.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/services/NotificationService.java\n@@ -62,6 +62,7 @@ public class NotificationService extends Service {\n             String cardsDueText = getString(R.string.widget_minimum_cards_due_notification_ticker_text, dueCardsCount);\n             NotificationCompat.Builder builder = new NotificationCompat.Builder(this)\n                     .setSmallIcon(R.drawable.ic_stat_notify)\n+          ",
    "updated version info for final release": "diff --git a/AndroidManifest.xml b/AndroidManifest.xml\nindex a4724bd780..6947690423 100644\n--- a/AndroidManifest.xml\n+++ b/AndroidManifest.xml\n@@ -20,8 +20,8 @@\n -->\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     package=\"com.owncloud.android\"\n-    android:versionCode=\"10040104\"\n-    android:versionName=\"1.4.1 RC4\">\n+    android:versionCode=\"10040199\"\n+    android:versionName=\"1.4.1\">\n \n     <uses-sdk\n         android:minSdkVersion=\"14\"",
    "Allow PermittedStreams to load empty lists ( <issue_id> ) .": "diff --git a/graylog2-server/src/main/java/org/graylog/plugins/views/search/Search.java b/graylog2-server/src/main/java/org/graylog/plugins/views/search/Search.java\nindex e7b65ad592..9f30502d01 100644\n--- a/graylog2-server/src/main/java/org/graylog/plugins/views/search/Search.java\n+++ b/graylog2-server/src/main/java/org/graylog/plugins/views/search/Search.java\n@@ -29,6 +29,7 @@ import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.ImmutableSet;\n import com.google.common.collect.Maps;\n import com.google.common.collect.Sets;\n+import org.graylog.plugins.views.search.errors.PermissionException;\n import org.graylog.plugins.views.search.views.PluginMetadataSummary;\n import org.graylog2.contentpacks.ContentPackable;\n import org.graylog2.contentpacks.EntityDescriptorIds;\n@@ -129,6 +130,10 @@ public abstract class Search implements ContentPackable<SearchEntity> {\n         final Set<Query> withoutStreams = Sets.difference(queries(), withStreams);\n \n         final ImmutableSet<String> defaultStreams = defaultStreamsSupplier.get();\n+\n+        if (defaultStreams.isEmpty())\n+            throw new PermissionException(\"User doesn't have access to any streams\");\n+\n         final Set<Query> withDefaultStreams = withoutStreams.stream()\n                 .map(q -> q.addStreamsToFilter(defaultStreams))\n                 .collect(toSet());\ndiff --git a/graylog2-server/src/main/java/org/graylog/plugins/views/search/rest/PermittedStreams.java b/graylog2-server/src/main/java/org/graylog/plugins/views/search/rest/PermittedStreams.java\nindex a8c61af4e4..19b2d16d9b 100644\n--- a/graylog2-server/src/main/java/org/graylog/plugins/views/search/rest/PermittedStreams.java\n+++ b/graylog2-server/src/main/java/org/graylog/plugins/views/search/rest/PermittedStreams.java\n@@ -20,7 +20,6 @@ import com.google.common.collect.ImmutableSet;\n import org.graylog2.streams.StreamService;\n \n import javax.inject.Inject;\n-import javax.ws.rs.ForbiddenException;\n import java.util.Set;\n import java.util.function.Predicate;\n \n@@ -46,9 +45,6 @@ public class PermittedStreams {\n                 .filter(isStreamIdPermitted)\n                 .collect(toSet());\n \n-        if (result.isEmpty())\n-            throw new ForbiddenException(\"There are no streams you are permitted to use.\");\n-\n         return ImmutableSet.copyOf(result);\n     }\n }\ndiff --git a/graylog2-server/src/test/java/org/graylog/plugins/views/search/SearchTest.java b/graylog2-server/src/test/java/org/graylog/plugins/views/search/SearchTest.java\nindex f078f9a5ee..680c6de6ff 100644\n--- a/graylog2-server/src/test/java/org/graylog/plugins/views/search/SearchTest.java\n+++ b/graylog2-server/src/test/java/org/graylog/plugins/views/search/SearchTest.java\n@@ -20,6 +20,7 @@ import com.google.common.collect.HashMultimap;\n import com.google.common.collect.ImmutableSet;\n import com.google.common.collect.Multimap;\n import org.graylog.plugins.views.search.engine.BackendQuery;\n+import org.graylog.plugins.views.search.errors.PermissionException;\n import org.graylog.plugins.views.search.filter.StreamFilter;\n import org.graylog.plugins.views.search.searchtypes.MessageList;\n import org.graylog2.plugin.indexer.searches.timeranges.TimeRange;\n@@ -36,6 +37,7 @@ import java.util.UUID;\n import java.util.stream.Collectors;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatExceptionOfType;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n@@ -67,6 +69,14 @@ public class SearchTest {\n         assertThat(before).isEqualTo(after);\n     }\n \n+    @Test\n+    public void throwsExceptionIfQueryHasNoStreamsAndThereAreNoDefaultStreams() {\n+        Search search = searchWithQueriesWithStreams(\"a,b,c\", \"\");\n+\n+        assertThatExceptionOfType(PermissionException.class)\n+                .isThrownBy(() -> search.addStreamsToQueriesWithoutStreams(ImmutableSet::of));\n+    }\n+\n     @Test\n     public void usedStreamIdsReturnsStreamIdsOfSearchTypes() {\n         final Query query1 = queryWithStreams(\"a,b,d\").toBuilder()\ndiff --git a/graylog2-server/src/test/java/org/graylog/plugins/views/search/rest/PermittedStreamsTest.java b/graylog2-server/src/test/java/org/graylog/plugins/views/search/rest/PermittedStreamsTest.java\nindex 9398195ac6..1f3bf532be 100644\n--- a/graylog2-server/src/test/java/org/graylog/plugins/views/search/rest/PermittedStreamsTest.java\n+++ b/graylog2-server/src/test/java/org/graylog/plugins/views/search/rest/PermittedStreamsTest.java\n@@ -23,7 +23,6 @@ import org.graylog2.streams.StreamService;\n import org.junit.Before;\n import org.junit.Test;\n \n-import javax.ws.rs.ForbiddenException;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n@@ -31,7 +30,6 @@ import java.util.List;\n \n import static java.util.stream.Collectors.toList;\n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.assertj.core.api.Assertions.assertThatExceptionOfType;\n import static org.graylog2.plugin.streams.Stream.DEFAULT_EVENT_STREAM_IDS;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n@@ -67,11 +65,12 @@ public class PermittedStreamsTest {\n     }\n \n     @Test\n-    public void failsIfNoStreamsFound() {\n+    public void returnsEmptyListIfNoStreamsFound() {\n         stubStreams(\"oans\", \"zwoa\", \"gsuffa\");\n \n-        assertThatExceptionOfType(ForbiddenException.class)\n-                .isThrownBy(() -> sut.load(id -> false));\n+        ImmutableSet<String> result = sut.load(id -> false);\n+\n+        assertThat(result).isEmpty();\n     }\n \n     @Test",
    "removed DEBUG output .": "diff --git a/source/de/anomic/yacy/yacyVersion.java b/source/de/anomic/yacy/yacyVersion.java\nindex f04070605..6e3e3c590 100644\n--- a/source/de/anomic/yacy/yacyVersion.java\n+++ b/source/de/anomic/yacy/yacyVersion.java\n@@ -532,7 +532,6 @@ public final class yacyVersion implements Comparator<yacyVersion>, Comparable<ya\n         \r\n         // remove old files\r\n         long now = System.currentTimeMillis();\r\n-        System.out.println(\"+-+ DEBUG now is \"+ new Date(now));\r\n         final Iterator<yacyVersion> iter = downloadedreleases.descendingIterator();\r\n         while (iter.hasNext()) {\r\n             release = iter.next();\r\n@@ -544,7 +543,6 @@ public final class yacyVersion implements Comparator<yacyVersion>, Comparable<ya\n             }\r\n             \r\n             File downloadedFile = new File(filesPath + File.separator + release.name);\r\n-            System.out.println(\"+-+ DEBUG lastModified of \"+ downloadedFile.getName() +\" is \"+ new Date(downloadedFile.lastModified()) +\" delta=\"+ (now-downloadedFile.lastModified()) +\" > \"+ deleteAfterMillis);\r\n             if(now - downloadedFile.lastModified() > deleteAfterMillis) {\r\n                 if(!downloadedFile.delete()) {\r\n                     serverLog.logWarning(\"STARTUP\", \"cannot delete old release \"+ downloadedFile.getAbsolutePath());\r",
    "Publish version 1 . 2 . 2": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex f30e927..80163a1 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -1,4 +1,4 @@\n-## 1.2.2\n+## 1.2.2 (2018-01-13)\n * Use only the `support-compat` instead of the full `support-v4` library, see #326\n * Use a `ReadWriteLock` for synchronizing the database reads and writes, see #344\n * Update the last run time for daily jobs, see #332\ndiff --git a/README.md b/README.md\nindex 861737f..4ee38bd 100644\n--- a/README.md\n+++ b/README.md\n@@ -8,7 +8,7 @@ Download [the latest version](http://search.maven.org/#search|gav|1|g:\"com.evern\n \n ```groovy\n dependencies {\n-    compile 'com.evernote:android-job:1.2.1'\n+    compile 'com.evernote:android-job:1.2.2'\n }\n ```\n \ndiff --git a/gradle.properties b/gradle.properties\nindex cc94efe..d398fd2 100644\n--- a/gradle.properties\n+++ b/gradle.properties\n@@ -1,3 +1,3 @@\n-#VERSION_NAME=1.2.1\n-VERSION_NAME=1.2.1-SNAPSHOT\n+#VERSION_NAME=1.2.2\n+VERSION_NAME=1.2.2-SNAPSHOT\n VERSION_CODE=1\n\\ No newline at end of file",
    "Enforce optimal IndexedInts iteration ( <issue_id> ) .": "diff --git a/.idea/inspectionProfiles/Druid.xml b/.idea/inspectionProfiles/Druid.xml\nindex 830d8e7181..7864a1cea6 100644\n--- a/.idea/inspectionProfiles/Druid.xml\n+++ b/.idea/inspectionProfiles/Druid.xml\n@@ -103,6 +103,13 @@\n       <option name=\"m_reportCollectionMethods\" value=\"true\" />\n       <option name=\"m_ignorePrivateMethods\" value=\"false\" />\n     </inspection_tool>\n+    <inspection_tool class=\"SSBasedInspection\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\n+      <searchConfiguration name=\"Suboptimal IndexedInts iteration\" text=\"$x$ &lt; $y$.size()\" recursive=\"false\" caseInsensitive=\"true\" type=\"JAVA\">\n+        <constraint name=\"__context__\" target=\"true\" within=\"\" contains=\"\" />\n+        <constraint name=\"x\" within=\"\" contains=\"\" />\n+        <constraint name=\"y\" nameOfExprType=\"IndexedInts\" exprTypeWithinHierarchy=\"true\" within=\"\" contains=\"\" />\n+      </searchConfiguration>\n+    </inspection_tool>\n     <inspection_tool class=\"SpellCheckingInspection\" enabled=\"false\" level=\"TYPO\" enabled_by_default=\"false\">\n       <option name=\"processCode\" value=\"true\" />\n       <option name=\"processLiterals\" value=\"true\" />\ndiff --git a/benchmarks/src/main/java/io/druid/benchmark/CompressedVSizeColumnarMultiIntsBenchmark.java b/benchmarks/src/main/java/io/druid/benchmark/CompressedVSizeColumnarMultiIntsBenchmark.java\nindex 958f3aa7d1..5662ab7bf2 100644\n--- a/benchmarks/src/main/java/io/druid/benchmark/CompressedVSizeColumnarMultiIntsBenchmark.java\n+++ b/benchmarks/src/main/java/io/druid/benchmark/CompressedVSizeColumnarMultiIntsBenchmark.java\n@@ -152,7 +152,7 @@ public class CompressedVSizeColumnarMultiIntsBenchmark\n   {\n     for (int i = filter.nextSetBit(0); i >= 0; i = filter.nextSetBit(i + 1)) {\n       IndexedInts row = uncompressed.get(i);\n-      for (int j = 0; j < row.size(); j++) {\n+      for (int j = 0, rowSize = row.size(); j < rowSize; j++) {\n         blackhole.consume(row.get(j));\n       }\n     }\n@@ -165,7 +165,7 @@ public class CompressedVSizeColumnarMultiIntsBenchmark\n   {\n     for (int i = filter.nextSetBit(0); i >= 0; i = filter.nextSetBit(i + 1)) {\n       IndexedInts row = compressed.get(i);\n-      for (int j = 0; j < row.size(); j++) {\n+      for (int j = 0, rowSize = row.size(); j < rowSize; j++) {\n         blackhole.consume(row.get(j));\n       }\n     }\ndiff --git a/extensions-contrib/distinctcount/src/main/java/io/druid/query/aggregation/distinctcount/DistinctCountAggregator.java b/extensions-contrib/distinctcount/src/main/java/io/druid/query/aggregation/distinctcount/DistinctCountAggregator.java\nindex 0903209b1f..5a51a03a6b 100644\n--- a/extensions-contrib/distinctcount/src/main/java/io/druid/query/aggregation/distinctcount/DistinctCountAggregator.java\n+++ b/extensions-contrib/distinctcount/src/main/java/io/druid/query/aggregation/distinctcount/DistinctCountAggregator.java\n@@ -43,7 +43,7 @@ public class DistinctCountAggregator implements Aggregator\n   public void aggregate()\n   {\n     IndexedInts row = selector.getRow();\n-    for (int i = 0; i < row.size(); i++) {\n+    for (int i = 0, rowSize = row.size(); i < rowSize; i++) {\n       int index = row.get(i);\n       mutableBitmap.add(index);\n     }\ndiff --git a/extensions-contrib/distinctcount/src/main/java/io/druid/query/aggregation/distinctcount/DistinctCountBufferAggregator.java b/extensions-contrib/distinctcount/src/main/java/io/druid/query/aggregation/distinctcount/DistinctCountBufferAggregator.java\nindex 389e2c4187..377280d778 100644\n--- a/extensions-contrib/distinctcount/src/main/java/io/druid/query/aggregation/distinctcount/DistinctCountBufferAggregator.java\n+++ b/extensions-contrib/distinctcount/src/main/java/io/druid/query/aggregation/distinctcount/DistinctCountBufferAggregator.java\n@@ -53,7 +53,7 @@ public class DistinctCountBufferAggregator implements BufferAggregator\n   {\n     MutableBitmap mutableBitmap = getMutableBitmap(position);\n     IndexedInts row = selector.getRow();\n-    for (int i = 0; i < row.size(); i++) {\n+    for (int i = 0, rowSize = row.size(); i < rowSize; i++) {\n       int index = row.get(i);\n       mutableBitmap.add(index);\n     }\ndiff --git a/processing/src/main/java/io/druid/query/aggregation/cardinality/types/StringCardinalityAggregatorColumnSelectorStrategy.java b/processing/src/main/java/io/druid/query/aggregation/cardinality/types/StringCardinalityAggregatorColumnSelectorStrategy.java\nindex 71661abf91..390b44d7b2 100644\n--- a/processing/src/main/java/io/druid/query/aggregation/cardinality/types/StringCardinalityAggregatorColumnSelectorStrategy.java\n+++ b/processing/src/main/java/io/druid/query/aggregation/cardinality/types/StringCardinalityAggregatorColumnSelectorStrategy.java\n@@ -62,7 +62,7 @@ public class StringCardinalityAggregatorColumnSelectorStrategy implements Cardin\n   public void hashValues(DimensionSelector dimSelector, HyperLogLogCollector collector)\n   {\n     IndexedInts row = dimSelector.getRow();\n-    for (int i = 0; i < row.size(); i++) {\n+    for (int i = 0, rowSize = row.size(); i < rowSize; i++) {\n       int index = row.get(i);\n       final String value = dimSelector.lookupName(index);\n       collector.add(CardinalityAggregator.hashFn.hashUnencodedChars(nullToSpecial(value)).asBytes());\ndiff --git a/processing/src/main/java/io/druid/query/groupby/GroupByQueryEngine.java b/processing/src/main/java/io/druid/query/groupby/GroupByQueryEngine.java\nindex eb3a6cc626..5ddb45d102 100644\n--- a/processing/src/main/java/io/druid/query/groupby/GroupByQueryEngine.java\n+++ b/processing/src/main/java/io/druid/query/groupby/GroupByQueryEngine.java\n@@ -190,12 +190,13 @@ public class GroupByQueryEngine\n \n         final DimensionSelector dimSelector = dims.get(0);\n         final IndexedInts row = dimSelector.getRow();\n-        if (row == null || row.size() == 0) {\n+        final int rowSize = row.size();\n+        if (rowSize == 0) {\n           ByteBuffer newKey = key.duplicate();\n           newKey.putInt(MISSING_VALUE);\n           unaggregatedBuffers = updateValues(newKey, dims.subList(1, dims.size()));\n         } else {\n-          for (int i = 0; i < row.size(); i++) {\n+          for (int i = 0; i < rowSize; i++) {\n             ByteBuffer newKey = key.duplicate();\n             int dimValue = row.get(i);\n             newKey.putInt(dimValue);\ndiff --git a/processing/src/main/java/io/druid/query/groupby/epinephelinae/GroupByQueryEngineV2.java b/processing/src/main/java/io/druid/query/groupby/epinephelinae/GroupByQueryEngineV2.java\nindex 6db22e1efb..6720863bb5 100644\n--- a/processing/src/main/java/io/druid/query/groupby/epinephelinae/GroupByQueryEngineV2.java\n+++ b/processing/src/main/java/io/druid/query/groupby/epinephelinae/GroupByQueryEngineV2.java\n@@ -639,12 +639,13 @@ public class GroupByQueryEngineV2\n       }\n \n       while (!cursor.isDone()) {\n-        if (multiValues.size() == 0) {\n+        int multiValuesSize = multiValues.size();\n+        if (multiValuesSize == 0) {\n           if (!grouper.aggregate(GroupByColumnSelectorStrategy.GROUP_BY_MISSING_VALUE).isOk()) {\n             return;\n           }\n         } else {\n-          for (; nextValIndex < multiValues.size(); nextValIndex++) {\n+          for (; nextValIndex < multiValuesSize; nextValIndex++) {\n             if (!grouper.aggregate(multiValues.get(nextValIndex)).isOk()) {\n               return;\n             }\ndiff --git a/processing/src/main/java/io/druid/query/groupby/epinephelinae/column/DictionaryBuildingStringGroupByColumnSelectorStrategy.java b/processing/src/main/java/io/druid/query/groupby/epinephelinae/column/DictionaryBuildingStringGroupByColumnSelectorStrategy.java\nindex db58c36e05..2fd6fb93b3 100644\n--- a/processing/src/main/java/io/druid/query/groupby/epinephelinae/column/DictionaryBuildingStringGroupByColumnSelectorStrategy.java\n+++ b/processing/src/main/java/io/druid/query/groupby/epinephelinae/column/DictionaryBuildingStringGroupByColumnSelectorStrategy.java\n@@ -75,7 +75,7 @@ public class DictionaryBuildingStringGroupByColumnSelectorStrategy extends Strin\n     }\n     int rowSize = row.size();\n     newRow.ensureSize(rowSize);\n-    for (int i = 0; i < row.size(); i++) {\n+    for (int i = 0; i < rowSize; i++) {\n       final String value = dimSelector.lookupName(row.get(i));\n       final int dictId = reverseDictionary.getInt(value);\n       if (dictId < 0) {\ndiff --git a/processing/src/main/java/io/druid/query/metadata/SegmentAnalyzer.java b/processing/src/main/java/io/druid/query/metadata/SegmentAnalyzer.java\nindex 6f7b7f7a0c..196bb42cd3 100644\n--- a/processing/src/main/java/io/druid/query/metadata/SegmentAnalyzer.java\n+++ b/processing/src/main/java/io/druid/query/metadata/SegmentAnalyzer.java\n@@ -276,9 +276,9 @@ public class SegmentAnalyzer\n               }\n               long current = accumulated;\n               while (!cursor.isDone()) {\n-                final IndexedInts vals = selector.getRow();\n-                for (int i = 0; i < vals.size(); ++i) {\n-                  final String dimVal = selector.lookupName(vals.get(i));\n+                final IndexedInts row = selector.getRow();\n+                for (int i = 0, rowSize = row.size(); i < rowSize; ++i) {\n+                  final String dimVal = selector.lookupName(row.get(i));\n                   if (dimVal != null && !dimVal.isEmpty()) {\n                     current += StringUtils.estimatedBinaryLengthAsUTF8(dimVal);\n                   }\ndiff --git a/processing/src/main/java/io/druid/query/search/SearchQueryRunner.java b/processing/src/main/java/io/druid/query/search/SearchQueryRunner.java\nindex 7921d717b9..81d4cb1ff3 100644\n--- a/processing/src/main/java/io/druid/query/search/SearchQueryRunner.java\n+++ b/processing/src/main/java/io/druid/query/search/SearchQueryRunner.java\n@@ -127,9 +127,9 @@ public class SearchQueryRunner implements QueryRunner<Result<SearchResultValue>>\n     )\n     {\n       if (selector != null && !isNilSelector(selector)) {\n-        final IndexedInts vals = selector.getRow();\n-        for (int i = 0; i < vals.size(); ++i) {\n-          final String dimVal = selector.lookupName(vals.get(i));\n+        final IndexedInts row = selector.getRow();\n+        for (int i = 0, rowSize = row.size(); i < rowSize; ++i) {\n+          final String dimVal = selector.lookupName(row.get(i));\n           if (searchQuerySpec.accept(dimVal)) {\n             set.addTo(new SearchHit(outputName, Strings.nullToEmpty(dimVal)), 1);\n             if (set.size() >= limit) {\ndiff --git a/processing/src/main/java/io/druid/query/select/SelectQueryEngine.java b/processing/src/main/java/io/druid/query/select/SelectQueryEngine.java\nindex bd3268f003..029ea57493 100644\n--- a/processing/src/main/java/io/druid/query/select/SelectQueryEngine.java\n+++ b/processing/src/main/java/io/druid/query/select/SelectQueryEngine.java\n@@ -111,21 +111,19 @@ public class SelectQueryEngine\n     @Override\n     public void addRowValuesToSelectResult(String outputName, DimensionSelector selector, Map<String, Object> resultMap)\n     {\n-      if (selector == null) {\n+      final IndexedInts row = selector.getRow();\n+      int rowSize = row.size();\n+      if (rowSize == 0) {\n         resultMap.put(outputName, null);\n+      } else if (rowSize == 1) {\n+        final String dimVal = selector.lookupName(row.get(0));\n+        resultMap.put(outputName, dimVal);\n       } else {\n-        final IndexedInts vals = selector.getRow();\n-\n-        if (vals.size() == 1) {\n-          final String dimVal = selector.lookupName(vals.get(0));\n-          resultMap.put(outputName, dimVal);\n-        } else {\n-          List<String> dimVals = new ArrayList<>(vals.size());\n-          for (int i = 0; i < vals.size(); ++i) {\n-            dimVals.add(selector.lookupName(vals.get(i)));\n-          }\n-          resultMap.put(outputName, dimVals);\n+        List<String> dimVals = new ArrayList<>(rowSize);\n+        for (int i = 0; i < rowSize; ++i) {\n+          dimVals.add(selector.lookupName(row.get(i)));\n         }\n+        resultMap.put(outputName, dimVals);\n       }\n     }\n   }\n@@ -300,7 +298,9 @@ public class SelectQueryEngine\n     theEvent.put(timestampKey, DateTimes.utc(timestampColumnSelector.getLong()));\n \n     for (ColumnSelectorPlus<SelectColumnSelectorStrategy> selectorPlus : selectorPlusList) {\n-      selectorPlus.getColumnSelectorStrategy().addRowValuesToSelectResult(selectorPlus.getOutputName(), selectorPlus.getSelector(), theEvent);\n+      selectorPlus\n+          .getColumnSelectorStrategy()\n+          .addRowValuesToSelectResult(selectorPlus.getOutputName(), selectorPlus.getSelector(), theEvent);\n     }\n \n     for (Map.Entry<String, BaseObjectColumnValueSelector<?>> metSelector : metSelectors.entrySet()) {\ndiff --git a/processing/src/main/java/io/druid/query/topn/types/StringTopNColumnSelectorStrategy.java b/processing/src/main/java/io/druid/query/topn/types/StringTopNColumnSelectorStrategy.java\nindex 26bcfc05df..5208ad7cde 100644\n--- a/processing/src/main/java/io/druid/query/topn/types/StringTopNColumnSelectorStrategy.java\n+++ b/processing/src/main/java/io/druid/query/topn/types/StringTopNColumnSelectorStrategy.java\n@@ -132,7 +132,7 @@ public class StringTopNColumnSelectorStrategy\n     long processedRows = 0;\n     while (!cursor.isDone()) {\n       final IndexedInts dimValues = selector.getRow();\n-      for (int i = 0; i < dimValues.size(); ++i) {\n+      for (int i = 0, size = dimValues.size(); i < size; ++i) {\n         final int dimIndex = dimValues.get(i);\n         Aggregator[] theAggregators = rowSelector[dimIndex];\n         if (theAggregators == null) {\n@@ -165,7 +165,7 @@ public class StringTopNColumnSelectorStrategy\n     long processedRows = 0;\n     while (!cursor.isDone()) {\n       final IndexedInts dimValues = selector.getRow();\n-      for (int i = 0; i < dimValues.size(); ++i) {\n+      for (int i = 0, size = dimValues.size(); i < size; ++i) {\n         final int dimIndex = dimValues.get(i);\n         final String key = selector.lookupName(dimIndex);\n \ndiff --git a/processing/src/main/java/io/druid/segment/DimensionSelector.java b/processing/src/main/java/io/druid/segment/DimensionSelector.java\nindex 3180ddb388..7d6cded0ab 100644\n--- a/processing/src/main/java/io/druid/segment/DimensionSelector.java\n+++ b/processing/src/main/java/io/druid/segment/DimensionSelector.java\n@@ -167,16 +167,17 @@ public interface DimensionSelector extends ColumnValueSelector, HotLoopCallee\n   default Object defaultGetObject()\n   {\n     IndexedInts row = getRow();\n-    if (row.size() == 0) {\n+    int rowSize = row.size();\n+    if (rowSize == 0) {\n       return null;\n-    }\n-    if (row.size() == 1) {\n+    } else if (rowSize == 1) {\n       return lookupName(row.get(0));\n+    } else {\n+      final String[] strings = new String[rowSize];\n+      for (int i = 0; i < rowSize; i++) {\n+        strings[i] = lookupName(row.get(i));\n+      }\n+      return strings;\n     }\n-    final String[] strings = new String[row.size()];\n-    for (int i = 0; i < row.size(); i++) {\n-      strings[i] = lookupName(row.get(i));\n-    }\n-    return strings;\n   }\n }\ndiff --git a/processing/src/main/java/io/druid/segment/data/CompressedVSizeColumnarMultiIntsSupplier.java b/processing/src/main/java/io/druid/segment/data/CompressedVSizeColumnarMultiIntsSupplier.java\nindex 4d90ccaeac..7f0bebf1d7 100644\n--- a/processing/src/main/java/io/druid/segment/data/CompressedVSizeColumnarMultiIntsSupplier.java\n+++ b/processing/src/main/java/io/druid/segment/data/CompressedVSizeColumnarMultiIntsSupplier.java\n@@ -109,7 +109,7 @@ public class CompressedVSizeColumnarMultiIntsSupplier implements WritableSupplie\n     while (objects.hasNext()) {\n       IndexedInts next = objects.next();\n       offsetList.add(offset);\n-      for (int i = 0; i < next.size(); i++) {\n+      for (int i = 0, size = next.size(); i < size; i++) {\n         values.add(next.get(i));\n       }\n       offset += next.size();\ndiff --git a/processing/src/main/java/io/druid/segment/data/V3CompressedVSizeColumnarMultiIntsSupplier.java b/processing/src/main/java/io/druid/segment/data/V3CompressedVSizeColumnarMultiIntsSupplier.java\nindex bdc609f643..4b3cf3b7cb 100644\n--- a/processing/src/main/java/io/druid/segment/data/V3CompressedVSizeColumnarMultiIntsSupplier.java\n+++ b/processing/src/main/java/io/druid/segment/data/V3CompressedVSizeColumnarMultiIntsSupplier.java\n@@ -91,7 +91,7 @@ public class V3CompressedVSizeColumnarMultiIntsSupplier implements WritableSuppl\n     while (objects.hasNext()) {\n       IndexedInts next = objects.next();\n       offsetList.add(offset);\n-      for (int i = 0; i < next.size(); i++) {\n+      for (int i = 0, size = next.size(); i < size; i++) {\n         values.add(next.get(i));\n       }\n       offset += next.size();\ndiff --git a/processing/src/test/java/io/druid/segment/data/CompressedColumnarIntsSupplierTest.java b/processing/src/test/java/io/druid/segment/data/CompressedColumnarIntsSupplierTest.java\nindex 8b27949abf..efec50b9d7 100644\n--- a/processing/src/test/java/io/druid/segment/data/CompressedColumnarIntsSupplierTest.java\n+++ b/processing/src/test/java/io/druid/segment/data/CompressedColumnarIntsSupplierTest.java\n@@ -205,7 +205,7 @@ public class CompressedColumnarIntsSupplierTest extends CompressionStrategyTest\n \n         try {\n           for (int i = 0; i < numRuns; ++i) {\n-            for (int j = 0; j < columnarInts.size(); ++j) {\n+            for (int j = 0, size = columnarInts.size(); j < size; ++j) {\n               final long val = vals[j];\n               final long indexedVal = columnarInts.get(j);\n               if (Longs.compare(val, indexedVal) != 0) {\n@@ -285,7 +285,7 @@ public class CompressedColumnarIntsSupplierTest extends CompressionStrategyTest\n \n     // sequential access\n     int[] indices = new int[vals.length];\n-    for (int i = 0; i < columnarInts.size(); ++i) {\n+    for (int i = 0, size = columnarInts.size(); i < size; ++i) {\n       Assert.assertEquals(vals[i], columnarInts.get(i), 0.0);\n       indices[i] = i;\n     }\ndiff --git a/processing/src/test/java/io/druid/segment/data/CompressedVSizeColumnarIntsSupplierTest.java b/processing/src/test/java/io/druid/segment/data/CompressedVSizeColumnarIntsSupplierTest.java\nindex db2bdfd987..50d253df5c 100644\n--- a/processing/src/test/java/io/druid/segment/data/CompressedVSizeColumnarIntsSupplierTest.java\n+++ b/processing/src/test/java/io/druid/segment/data/CompressedVSizeColumnarIntsSupplierTest.java\n@@ -282,7 +282,7 @@ public class CompressedVSizeColumnarIntsSupplierTest extends CompressionStrategy\n \n         try {\n           for (int i = 0; i < numRuns; ++i) {\n-            for (int j = 0; j < columnarInts.size(); ++j) {\n+            for (int j = 0, size = columnarInts.size(); j < size; ++j) {\n               final long val = vals[j];\n               final long indexedVal = columnarInts.get(j);\n               if (Longs.compare(val, indexedVal) != 0) {\n@@ -362,7 +362,7 @@ public class CompressedVSizeColumnarIntsSupplierTest extends CompressionStrategy\n \n     // sequential access of every element\n     int[] indices = new int[vals.length];\n-    for (int i = 0; i < columnarInts.size(); ++i) {\n+    for (int i = 0, size = columnarInts.size(); i < size; ++i) {\n       final int expected = vals[i];\n       final int actual = columnarInts.get(i);\n       Assert.assertEquals(expected, actual);\ndiff --git a/processing/src/test/java/io/druid/segment/data/CompressedVSizeColumnarMultiIntsSupplierTest.java b/processing/src/test/java/io/druid/segment/data/CompressedVSizeColumnarMultiIntsSupplierTest.java\nindex addc2352d7..c6bebc76f9 100644\n--- a/processing/src/test/java/io/druid/segment/data/CompressedVSizeColumnarMultiIntsSupplierTest.java\n+++ b/processing/src/test/java/io/druid/segment/data/CompressedVSizeColumnarMultiIntsSupplierTest.java\n@@ -107,7 +107,7 @@ public class CompressedVSizeColumnarMultiIntsSupplierTest\n       final IndexedInts vSizeIndexedInts = iterator.next();\n \n       Assert.assertEquals(ints.length, vSizeIndexedInts.size());\n-      for (int i = 0; i < vSizeIndexedInts.size(); i++) {\n+      for (int i = 0, size = vSizeIndexedInts.size(); i < size; i++) {\n         Assert.assertEquals(ints[i], vSizeIndexedInts.get(i));\n       }\n       row++;\ndiff --git a/processing/src/test/java/io/druid/segment/data/V3CompressedVSizeColumnarMultiIntsSerializerTest.java b/processing/src/test/java/io/druid/segment/data/V3CompressedVSizeColumnarMultiIntsSerializerTest.java\nindex 805c837112..b2c1dc4054 100644\n--- a/processing/src/test/java/io/druid/segment/data/V3CompressedVSizeColumnarMultiIntsSerializerTest.java\n+++ b/processing/src/test/java/io/druid/segment/data/V3CompressedVSizeColumnarMultiIntsSerializerTest.java\n@@ -155,7 +155,7 @@ public class V3CompressedVSizeColumnarMultiIntsSerializerTest\n         for (int i = 0; i < vals.size(); ++i) {\n           IndexedInts subVals = columnarMultiInts.get(i);\n           assertEquals(subVals.size(), vals.get(i).length);\n-          for (int j = 0; j < subVals.size(); ++j) {\n+          for (int j = 0, size = subVals.size(); j < size; ++j) {\n             assertEquals(subVals.get(j), vals.get(i)[j]);\n           }\n         }\n@@ -278,7 +278,7 @@ public class V3CompressedVSizeColumnarMultiIntsSerializerTest\n       for (int i = 0; i < vals.size(); ++i) {\n         IndexedInts subVals = columnarMultiInts.get(i);\n         assertEquals(subVals.size(), vals.get(i).length);\n-        for (int j = 0; j < subVals.size(); ++j) {\n+        for (int j = 0, size = subVals.size(); j < size; ++j) {\n           assertEquals(subVals.get(j), vals.get(i)[j]);\n         }\n       }\ndiff --git a/server/src/main/java/io/druid/segment/realtime/firehose/IngestSegmentFirehose.java b/server/src/main/java/io/druid/segment/realtime/firehose/IngestSegmentFirehose.java\nindex de23fdd40c..4931961097 100644\n--- a/server/src/main/java/io/druid/segment/realtime/firehose/IngestSegmentFirehose.java\n+++ b/server/src/main/java/io/druid/segment/realtime/firehose/IngestSegmentFirehose.java\n@@ -21,7 +21,6 @@ package io.druid.segment.realtime.firehose;\n \n import com.google.common.base.Function;\n import com.google.common.collect.Iterables;\n-import com.google.common.collect.Lists;\n import com.google.common.collect.Maps;\n import io.druid.data.input.Firehose;\n import io.druid.data.input.InputRow;\n@@ -49,6 +48,7 @@ import io.druid.utils.Runnables;\n \n import javax.annotation.Nullable;\n import java.io.IOException;\n+import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n@@ -139,12 +139,13 @@ public class IngestSegmentFirehose implements Firehose\n                                           final DimensionSelector selector = dimSelector.getValue();\n                                           final IndexedInts vals = selector.getRow();\n \n-                                          if (vals.size() == 1) {\n+                                          int valsSize = vals.size();\n+                                          if (valsSize == 1) {\n                                             final String dimVal = selector.lookupName(vals.get(0));\n                                             theEvent.put(dim, dimVal);\n-                                          } else {\n-                                            List<String> dimVals = Lists.newArrayList();\n-                                            for (int i = 0; i < vals.size(); ++i) {\n+                                          } else if (valsSize > 1) {\n+                                            List<String> dimVals = new ArrayList<>(valsSize);\n+                                            for (int i = 0; i < valsSize; ++i) {\n                                               dimVals.add(selector.lookupName(vals.get(i)));\n                                             }\n                                             theEvent.put(dim, dimVals);",
    "Adding special handling of Item events , position being given when the parameter is an int .": "diff --git a/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemClick.java b/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemClick.java\nindex 274cfbd4..f46e9546 100644\n--- a/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemClick.java\n+++ b/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemClick.java\n@@ -27,6 +27,8 @@ import java.lang.annotation.Target;\n  * adapter, at the selected position. It may be of any type, so be careful about\n  * potential ClassCastException.\n  * \n+ * If the parameter is an int, it will be the position instead of the object from the adapter.\n+ * \n  * The annotation value should be one of R.id.* fields. If not set, the method\n  * name will be used as the R.id.* field name.\n  * \ndiff --git a/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemLongClick.java b/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemLongClick.java\nindex 35e5a958..05e6ea33 100644\n--- a/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemLongClick.java\n+++ b/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemLongClick.java\n@@ -27,6 +27,8 @@ import java.lang.annotation.Target;\n  * adapter, at the selected position. It may be of any type, so be careful about\n  * potential ClassCastException.\n  * \n+ * If the parameter is an int, it will be the position instead of the object from the adapter.\n+ * \n  * The annotation value should be one of R.id.* fields. If not set, the method\n  * name will be used as the R.id.* field name..\n  * \ndiff --git a/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemSelect.java b/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemSelect.java\nindex 8c1df751..5c8ca62a 100644\n--- a/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemSelect.java\n+++ b/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemSelect.java\n@@ -23,10 +23,12 @@ import java.lang.annotation.Target;\n /**\n  * Should be used on item selected listener methods for AdapterView classes\n  * \n- * The method may have 1 or 2 parameter. The first parameter must be a boolean,\n+ * The method may have 1 or 2 parameters. The first parameter must be a boolean,\n  * and the second is the object from the adapter, at the selected position. It\n  * may be of any type, so be careful about potential ClassCastException.\n  * \n+ * If the second parameter is an int, it will be the position instead of the object from the adapter.\n+ * \n  * The first boolean parameter indicates if something has been selected or not.\n  * If nothing was selected, the second parameter will be null.\n  * \ndiff --git a/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemClickProcessor.java b/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemClickProcessor.java\nindex d208adda..b86d8cd3 100644\n--- a/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemClickProcessor.java\n+++ b/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemClickProcessor.java\n@@ -21,6 +21,8 @@ import java.util.List;\n import javax.lang.model.element.Element;\n import javax.lang.model.element.ExecutableElement;\n import javax.lang.model.element.VariableElement;\n+import javax.lang.model.type.TypeKind;\n+import javax.lang.model.type.TypeMirror;\n \n import com.googlecode.androidannotations.annotations.ItemClick;\n import com.googlecode.androidannotations.rclass.IRClass;\n@@ -80,8 +82,14 @@ public class ItemClickProcessor extends MultipleResIdsBasedProcessor implements\n \n \t\tif (hasItemParameter) {\n \t\t\tVariableElement parameter = parameters.get(0);\n-\t\t\tString parameterQualifiedName = parameter.asType().toString();\n-\t\t\titemClickCall.arg(JExpr.cast(holder.refClass(parameterQualifiedName), JExpr.invoke(onItemClickParentParam, \"getAdapter\").invoke(\"getItem\").arg(onItemClickPositionParam)));\n+\t\t\t\n+\t\t\tTypeMirror parameterType = parameter.asType();\n+\t\t\tif (parameterType.getKind() == TypeKind.INT) {\n+\t\t\t\titemClickCall.arg(onItemClickPositionParam);\n+\t\t\t} else {\n+\t\t\t\tString parameterTypeQualifiedName = parameterType.toString();\n+\t\t\t\titemClickCall.arg(JExpr.cast(holder.refClass(parameterTypeQualifiedName), JExpr.invoke(onItemClickParentParam, \"getAdapter\").invoke(\"getItem\").arg(onItemClickPositionParam)));\n+\t\t\t}\n \t\t}\n \n \t\tfor (JFieldRef idRef : idsRefs) {\ndiff --git a/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemLongClickProcessor.java b/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemLongClickProcessor.java\nindex 5e0f9c60..7789416d 100644\n--- a/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemLongClickProcessor.java\n+++ b/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemLongClickProcessor.java\n@@ -93,8 +93,14 @@ public class ItemLongClickProcessor extends MultipleResIdsBasedProcessor impleme\n \n \t\tif (hasItemParameter) {\n \t\t\tVariableElement parameter = parameters.get(0);\n-\t\t\tString parameterQualifiedName = parameter.asType().toString();\n-\t\t\titemClickCall.arg(JExpr.cast(holder.refClass(parameterQualifiedName), JExpr.invoke(onItemClickParentParam, \"getAdapter\").invoke(\"getItem\").arg(onItemClickPositionParam)));\n+\t\t\t\n+\t\t\tTypeMirror parameterType = parameter.asType();\n+\t\t\tif (parameterType.getKind() == TypeKind.INT) {\n+\t\t\t\titemClickCall.arg(onItemClickPositionParam);\n+\t\t\t} else {\n+\t\t\t\tString parameterTypeQualifiedName = parameterType.toString();\n+\t\t\t\titemClickCall.arg(JExpr.cast(holder.refClass(parameterTypeQualifiedName), JExpr.invoke(onItemClickParentParam, \"getAdapter\").invoke(\"getItem\").arg(onItemClickPositionParam)));\n+\t\t\t}\n \t\t}\n \n \t\tfor (JFieldRef idRef : idsRefs) {\ndiff --git a/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemSelectedProcessor.java b/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemSelectedProcessor.java\nindex c9df17c2..89354639 100644\n--- a/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemSelectedProcessor.java\n+++ b/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemSelectedProcessor.java\n@@ -15,12 +15,17 @@\n  */\n package com.googlecode.androidannotations.processing;\n \n+import static com.sun.codemodel.JExpr._null;\n+import static com.sun.codemodel.JExpr.lit;\n+\n import java.lang.annotation.Annotation;\n import java.util.List;\n \n import javax.lang.model.element.Element;\n import javax.lang.model.element.ExecutableElement;\n import javax.lang.model.element.VariableElement;\n+import javax.lang.model.type.TypeKind;\n+import javax.lang.model.type.TypeMirror;\n \n import com.googlecode.androidannotations.annotations.ItemSelect;\n import com.googlecode.androidannotations.rclass.IRClass;\n@@ -79,10 +84,17 @@ public class ItemSelectedProcessor extends MultipleResIdsBasedProcessor implemen\n \n \t\titemSelectedCall.arg(JExpr.TRUE);\n \n+\t\tVariableElement secondParameter = parameters.get(1);\n+\t\tTypeMirror parameterType = secondParameter.asType();\n+\n \t\tif (hasItemParameter) {\n-\t\t\tVariableElement parameter = parameters.get(1);\n-\t\t\tString parameterQualifiedName = parameter.asType().toString();\n-\t\t\titemSelectedCall.arg(JExpr.cast(holder.refClass(parameterQualifiedName), JExpr.invoke(onItemClickParentParam, \"getAdapter\").invoke(\"getItem\").arg(onItemClickPositionParam)));\n+\n+\t\t\tif (parameterType.getKind() == TypeKind.INT) {\n+\t\t\t\titemSelectedCall.arg(onItemClickPositionParam);\n+\t\t\t} else {\n+\t\t\t\tString parameterTypeQualifiedName = parameterType.toString();\n+\t\t\t\titemSelectedCall.arg(JExpr.cast(holder.refClass(parameterTypeQualifiedName), JExpr.invoke(onItemClickParentParam, \"getAdapter\").invoke(\"getItem\").arg(onItemClickPositionParam)));\n+\t\t\t}\n \t\t}\n \n \t\tJMethod onNothingSelectedMethod = onItemSelectedListenerClass.method(JMod.PUBLIC, codeModel.VOID, \"onNothingSelected\");\n@@ -93,7 +105,11 @@ public class ItemSelectedProcessor extends MultipleResIdsBasedProcessor implemen\n \n \t\tnothingSelectedCall.arg(JExpr.FALSE);\n \t\tif (hasItemParameter) {\n-\t\t\tnothingSelectedCall.arg(JExpr._null());\n+\t\t\tif (parameterType.getKind() == TypeKind.INT) {\n+\t\t\t\tnothingSelectedCall.arg(lit(-1));\n+\t\t\t} else {\n+\t\t\t\tnothingSelectedCall.arg(_null());\n+\t\t\t}\n \t\t}\n \n \t\tfor (JFieldRef idRef : idsRefs) {\ndiff --git a/AndroidAnnotations/functional-test-1-5/res/layout/item_clicks_handled.xml b/AndroidAnnotations/functional-test-1-5/res/layout/item_clicks_handled.xml\nindex 721ab21c..bcd7ce70 100644\n--- a/AndroidAnnotations/functional-test-1-5/res/layout/item_clicks_handled.xml\n+++ b/AndroidAnnotations/functional-test-1-5/res/layout/item_clicks_handled.xml\n@@ -44,5 +44,11 @@\n \t    android:layout_width=\"fill_parent\"\n \t    android:layout_height=\"wrap_content\"\n \t/>\n+\t\n+\t<ListView \n+\t    android:id=\"@+id/listViewWithPosition\"\n+\t    android:layout_width=\"fill_parent\"\n+\t    android:layout_height=\"wrap_content\"\n+\t/>\t\n \n </LinearLayout>\ndiff --git a/AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ItemClicksHandledActivity.java b/AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ItemClicksHandledActivity.java\nindex 5cb4dea7..4b3fe579 100644\n--- a/AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ItemClicksHandledActivity.java\n+++ b/AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ItemClicksHandledActivity.java\n@@ -23,6 +23,8 @@ import android.widget.Spinner;\n import com.googlecode.androidannotations.annotations.AfterViews;\n import com.googlecode.androidannotations.annotations.EActivity;\n import com.googlecode.androidannotations.annotations.ItemClick;\n+import com.googlecode.androidannotations.annotations.ItemLongClick;\n+import com.googlecode.androidannotations.annotations.ItemSelect;\n import com.googlecode.androidannotations.annotations.ViewById;\n \n @EActivity(R.layout.item_clicks_handled)\n@@ -78,5 +80,20 @@ public class ItemClicksHandledActivity extends Activity {\n \tpublic void spinnerWithArgument(String selectedItem) {\n \t\tspinnerWithArgumentSelectedItem = selectedItem;\n \t}\n+\t\n+\t@ItemClick\n+\tvoid listViewWithPosition(int position) {\n+\t\t\n+\t}\n+\t\n+\t@ItemSelect\n+\tvoid listViewWithPositionItemSelected(boolean selected, int position) {\n+\t\t\n+\t}\n+\t\n+\t@ItemLongClick\n+\tvoid listViewWithPositionItemLongClicked(int position) {\n+\t\t\n+\t}\n \n }",
    "make system property uppercase if given lowercase in simple expression": "diff --git a/camel-core/src/main/java/org/apache/camel/builder/ExpressionBuilder.java b/camel-core/src/main/java/org/apache/camel/builder/ExpressionBuilder.java\nindex db91f214565..bab24bc8bce 100644\n--- a/camel-core/src/main/java/org/apache/camel/builder/ExpressionBuilder.java\n+++ b/camel-core/src/main/java/org/apache/camel/builder/ExpressionBuilder.java\n@@ -765,7 +765,7 @@ public final class ExpressionBuilder {\n         return new ExpressionAdapter() {\n             public Object evaluate(Exchange exchange) {\n                 String text = simpleExpression(propertyName).evaluate(exchange, String.class);\n-                String answer = System.getenv(text);\n+                String answer = System.getenv(text.toUpperCase());\n                 if (answer == null) {\n                     String text2 = simpleExpression(defaultValue).evaluate(exchange, String.class);\n                     answer = text2;\ndiff --git a/camel-core/src/test/java/org/apache/camel/language/simple/SimpleTest.java b/camel-core/src/test/java/org/apache/camel/language/simple/SimpleTest.java\nindex 57132652c8f..0f1e357777e 100644\n--- a/camel-core/src/test/java/org/apache/camel/language/simple/SimpleTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/language/simple/SimpleTest.java\n@@ -238,6 +238,13 @@ public class SimpleTest extends LanguageTestSupport {\n             assertExpression(\"sysenv.PATH\", path);\n         }\n     }\n+    \n+    public void testSimpleSystemEnvironmentExpressionsIfLowercase() throws Exception {\n+        String path = System.getenv(\"PATH\");\n+        if (path != null) {\n+            assertExpression(\"sysenv.path\", path);\n+        }\n+    }\n \n     public void testSimpleCamelId() throws Exception {\n         assertExpression(\"camelId\", context.getName());",
    "Remove WebServiceImportTest from flowable5 - cxf - test we have the same test in flowable - cxf .": "diff --git a/modules/flowable5-cxf-test/src/test/java/org/activiti/engine/impl/webservice/WebServiceImportTest.java b/modules/flowable5-cxf-test/src/test/java/org/activiti/engine/impl/webservice/WebServiceImportTest.java\ndeleted file mode 100644\nindex 4e4034f2c2..0000000000\n--- a/modules/flowable5-cxf-test/src/test/java/org/activiti/engine/impl/webservice/WebServiceImportTest.java\n+++ /dev/null\n@@ -1,37 +0,0 @@\n-/* Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.activiti.engine.impl.webservice;\n-\n-import org.flowable.engine.test.Deployment;\n-\n-/**\n- * An integration test for CXF based web services\n- *\n- * @author Christophe DENEUX\n- */\n-public class WebServiceImportTest extends AbstractWebServiceTaskTest {\n-\n-    @Deployment\n-    public void testImport() throws Exception {\n-        processEngine.getRuntimeService().startProcessInstanceByKey(\"webServiceInvocationImport\");\n-        waitForJobExecutorToProcessAllJobs(10000L, 250L);\n-\n-    }\n-\n-    @Deployment\n-    public void testImport_DifferentDirectories() throws Exception {\n-        processEngine.getRuntimeService().startProcessInstanceByKey(\"webServiceInvocationImport_DifferentDirectories\");\n-        waitForJobExecutorToProcessAllJobs(10000L, 250L);\n-    }\n-\n-}",
    "Changing the indentation to 4 spaces": "diff --git a/websocket/binary/src/test/java/org/javaee7/websocket/binary/test/WebsocketByteBufferEndpointTest.java b/websocket/binary/src/test/java/org/javaee7/websocket/binary/test/WebsocketByteBufferEndpointTest.java\nindex fd35c99b..a9bc942a 100644\n--- a/websocket/binary/src/test/java/org/javaee7/websocket/binary/test/WebsocketByteBufferEndpointTest.java\n+++ b/websocket/binary/src/test/java/org/javaee7/websocket/binary/test/WebsocketByteBufferEndpointTest.java\n@@ -1,5 +1,5 @@\n /**\n- * \n+ *\n  */\n package org.javaee7.websocket.binary.test;\n \n@@ -30,32 +30,37 @@ import org.junit.runner.RunWith;\n  */\n @RunWith(Arquillian.class)\n public class WebsocketByteBufferEndpointTest {\n-\tprivate static final String WEBAPP_SRC = \"src/main/webapp\";\n-\t\n-\t/**\n-\t * Arquillian specific method for creating a file which can be deployed while executing the test.\n-\t * @return a war file\n-\t */\n-\t@Deployment(testable = false) @TargetsContainer(\"wildfly-arquillian\")\n-\tpublic static WebArchive createDeployment(){\n-\t\tWebArchive war = ShrinkWrap.create(WebArchive.class).\n-\t\t\t\taddClass(MyEndpointByteBuffer.class).\n-\t\t\t\taddClass(MyEndpointByteArray.class).\n-\t\t\t\taddClass(MyEndpointInputStream.class).\n-\t\t\t\taddAsWebResource(new File(WEBAPP_SRC,\"index.jsp\")).\n-\t\t\t\taddAsWebResource(new File(WEBAPP_SRC,\"websocket.js\"));\n-\t\treturn war;\n-\t}\n-\t\n-\t/**\n-\t * The basic test method for the class {@link MyEndpointByteBuffer}\n-\t * @throws URISyntaxException\n-\t * @throws DeploymentException\n-\t * @throws IOException\n-\t */\n-\t@Test \n-\tpublic void testEndPointByteBuffer() throws URISyntaxException, DeploymentException,IOException{\n-\t\tWebSocketContainer wSocketContainer = ContainerProvider.getWebSocketContainer();\n-\t\twSocketContainer.connectToServer(MyEndpointClient.class, new URI(\"ws://localhost:8080/binary/websockeet\"));\n-\t}\n+\n+    private static final String WEBAPP_SRC = \"src/main/webapp\";\n+\n+    /**\n+     * Arquillian specific method for creating a file which can be deployed\n+     * while executing the test.\n+     *\n+     * @return a war file\n+     */\n+    @Deployment(testable = false)\n+    @TargetsContainer(\"wildfly-arquillian\")\n+    public static WebArchive createDeployment() {\n+        WebArchive war = ShrinkWrap.create(WebArchive.class).\n+                addClass(MyEndpointByteBuffer.class).\n+                addClass(MyEndpointByteArray.class).\n+                addClass(MyEndpointInputStream.class).\n+                addAsWebResource(new File(WEBAPP_SRC, \"index.jsp\")).\n+                addAsWebResource(new File(WEBAPP_SRC, \"websocket.js\"));\n+        return war;\n+    }\n+\n+    /**\n+     * The basic test method for the class {@link MyEndpointByteBuffer}\n+     *\n+     * @throws URISyntaxException\n+     * @throws DeploymentException\n+     * @throws IOException\n+     */\n+    @Test\n+    public void testEndPointByteBuffer() throws URISyntaxException, DeploymentException, IOException {\n+        WebSocketContainer wSocketContainer = ContainerProvider.getWebSocketContainer();\n+        wSocketContainer.connectToServer(MyEndpointClient.class, new URI(\"ws://localhost:8080/binary/websockeet\"));\n+    }\n }",
    "updated tests per <issue_id>": "diff --git a/modules/swagger-core/src/test/scala/CompositionTest.scala b/modules/swagger-core/src/test/scala/CompositionTest.scala\nindex 892eb1d2f..e10eeb9d1 100644\n--- a/modules/swagger-core/src/test/scala/CompositionTest.scala\n+++ b/modules/swagger-core/src/test/scala/CompositionTest.scala\n@@ -37,7 +37,7 @@ class CompositionTest extends FlatSpec with Matchers {\n   },\n   \"Pet\" : {\n     \"allOf\" : [ {\n-      \"$ref\" : \"Human\"\n+      \"$ref\" : \"#/definitions/Human\"\n     }, {\n       \"required\" : [ \"isDomestic\", \"name\", \"type\" ],\n       \"properties\" : {\n@@ -78,7 +78,7 @@ class CompositionTest extends FlatSpec with Matchers {\n   },\n   \"Human\" : {\n     \"allOf\" : [ {\n-      \"$ref\" : \"Animal\"\n+      \"$ref\" : \"#/definitions/Animal\"\n     }, {\n       \"properties\" : {\n         \"name\" : {\n@@ -98,7 +98,7 @@ class CompositionTest extends FlatSpec with Matchers {\n   },\n   \"Pet\" : {\n     \"allOf\" : [ {\n-      \"$ref\" : \"Animal\"\n+      \"$ref\" : \"#/definitions/Animal\"\n     }, {\n       \"required\" : [ \"isDomestic\", \"name\", \"type\" ],\n       \"properties\" : {\ndiff --git a/modules/swagger-core/src/test/scala/ModelConverterTest.scala b/modules/swagger-core/src/test/scala/ModelConverterTest.scala\nindex 6515cdbcd..57d0d2d86 100644\n--- a/modules/swagger-core/src/test/scala/ModelConverterTest.scala\n+++ b/modules/swagger-core/src/test/scala/ModelConverterTest.scala\n@@ -28,7 +28,7 @@ class ModelConverterTest extends FlatSpec with Matchers {\n         \"type\" : \"string\"\n       },\n       \"address\" : {\n-        \"$ref\" : \"Address\"\n+        \"$ref\" : \"#/definitions/Address\"\n       },\n       \"properties\" : {\n         \"type\" : \"object\",\n@@ -121,4 +121,9 @@ class ModelConverterTest extends FlatSpec with Matchers {\n     val model = schemas.keySet().iterator().next()\n     model should be (\"MyModel\")\n   }\n+\n+  it should \"maintain property names\" in {\n+    val schemas = ModelConverters.getInstance().readAll(classOf[ModelPropertyName])\n+    Json.prettyPrint(schemas)\n+  }\n }\n\\ No newline at end of file\ndiff --git a/modules/swagger-core/src/test/scala/ModelSerializerTest.scala b/modules/swagger-core/src/test/scala/ModelSerializerTest.scala\nindex deb79a699..e94e7c7e0 100644\n--- a/modules/swagger-core/src/test/scala/ModelSerializerTest.scala\n+++ b/modules/swagger-core/src/test/scala/ModelSerializerTest.scala\n@@ -40,11 +40,11 @@ class ModelSerializerTest extends FlatSpec with Matchers {\n     val model = new ArrayModel()\n     model.setItems(new RefProperty(\"Pet\"))\n \n-    m.writeValueAsString(model) should be (\"\"\"{\"type\":\"array\",\"items\":{\"$ref\":\"Pet\"}}\"\"\")\n+    m.writeValueAsString(model) should be (\"\"\"{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Pet\"}}\"\"\")\n   }\n \n   it should \"deserialize an array model\" in {\n-    val json = \"\"\"{\"type\":\"array\",\"items\":{\"$ref\":\"Pet\"}}\"\"\"\n+    val json = \"\"\"{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Pet\"}}\"\"\"\n     val p = m.readValue(json, classOf[Model])\n     p.isInstanceOf[ArrayModel] should be (true)\n     m.writeValueAsString(p) should equal (json)\ndiff --git a/modules/swagger-core/src/test/scala/ScalaModelTest.scala b/modules/swagger-core/src/test/scala/ScalaModelTest.scala\nindex 1be9c9bfd..b5f036c6a 100644\n--- a/modules/swagger-core/src/test/scala/ScalaModelTest.scala\n+++ b/modules/swagger-core/src/test/scala/ScalaModelTest.scala\n@@ -48,10 +48,10 @@ class ScalaModelTest extends FlatSpec with Matchers {\n     keys(3) should be (\"dateValue\")\n     keys(4) should be (\"booleanValue\")\n \n-    m.writeValueAsString(schemas) should equal (\"\"\"{\"CaseClassWithOptionLong\":{\"properties\":{\"intValue\":{\"type\":\"integer\",\"format\":\"int32\"},\"longValue\":{\"type\":\"array\",\"items\":{\"$ref\":\"Object\"}},\"setValue\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"dateValue\":{\"type\":\"string\",\"format\":\"date-time\"},\"booleanValue\":{\"type\":\"boolean\"}}}}\"\"\")\n+    m.writeValueAsString(schemas) should equal (\"\"\"{\"CaseClassWithOptionLong\":{\"properties\":{\"intValue\":{\"type\":\"integer\",\"format\":\"int32\"},\"longValue\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Object\"}},\"setValue\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"dateValue\":{\"type\":\"string\",\"format\":\"date-time\"},\"booleanValue\":{\"type\":\"boolean\"}}}}\"\"\")\n   }\n \n-  it should \"convert a scala case class with nexted models\" in {\n+  it should \"convert a scala case class with nested models\" in {\n     m.registerModule(DefaultScalaModule)\n     val schemas = ModelConverters.getInstance().readAll(classOf[NestedModel])\n \n@@ -71,7 +71,7 @@ class ScalaModelTest extends FlatSpec with Matchers {\n   \"NestedModel\" : {\n     \"properties\" : {\n       \"complexModel\" : {\n-        \"$ref\" : \"ComplexModel\"\n+        \"$ref\" : \"#/definitions/ComplexModel\"\n       },\n       \"localtime\" : {\n         \"type\" : \"string\",\ndiff --git a/modules/swagger-core/src/test/scala/models/ModelPropertyName.java b/modules/swagger-core/src/test/scala/models/ModelPropertyName.java\nnew file mode 100644\nindex 000000000..f3ba35688\n--- /dev/null\n+++ b/modules/swagger-core/src/test/scala/models/ModelPropertyName.java\n@@ -0,0 +1,7 @@\n+package models;\n+\n+public class ModelPropertyName {\n+  public boolean is_persistent() { return true; }\n+  public String isometric() { return null; }\n+  public String gettersAndHaters() { return null; }\n+}\n\\ No newline at end of file\ndiff --git a/modules/swagger-core/src/test/scala/parameter/ParameterSerializationTest.scala b/modules/swagger-core/src/test/scala/parameter/ParameterSerializationTest.scala\nindex 1e1517607..340a08879 100644\n--- a/modules/swagger-core/src/test/scala/parameter/ParameterSerializationTest.scala\n+++ b/modules/swagger-core/src/test/scala/parameter/ParameterSerializationTest.scala\n@@ -159,11 +159,11 @@ schema:\n   it should \"serialize a ref BodyParameter\" in {\n     val model = new RefModel(\"Cat\")\n     val p = new BodyParameter().schema(model)\n-    m.writeValueAsString(p) should be (\"\"\"{\"in\":\"body\",\"required\":false,\"schema\":{\"$ref\":\"Cat\"}}\"\"\")\n+    m.writeValueAsString(p) should be (\"\"\"{\"in\":\"body\",\"required\":false,\"schema\":{\"$ref\":\"#/definitions/Cat\"}}\"\"\")\n   }\n \n   it should \"deserialize a ref BodyParameter\" in {\n-    val json = \"\"\"{\"in\":\"body\",\"required\":false,\"schema\":{\"$ref\":\"Cat\"}}\"\"\"\n+    val json = \"\"\"{\"in\":\"body\",\"required\":false,\"schema\":{\"$ref\":\"#/definitions/Cat\"}}\"\"\"\n     val p = m.readValue(json, classOf[Parameter])\n     m.writeValueAsString(p) should equal (json)\n   }\n@@ -171,11 +171,11 @@ schema:\n   it should \"serialize an array BodyParameter\" in {\n     val model = new ArrayModel().items(new RefProperty(\"Cat\"))\n     val p = new BodyParameter().schema(model)\n-    m.writeValueAsString(p) should be (\"\"\"{\"in\":\"body\",\"required\":false,\"schema\":{\"type\":\"array\",\"items\":{\"$ref\":\"Cat\"}}}\"\"\")\n+    m.writeValueAsString(p) should be (\"\"\"{\"in\":\"body\",\"required\":false,\"schema\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Cat\"}}}\"\"\")\n   }\n \n   it should \"deserialize an array BodyParameter\" in {\n-    val json = \"\"\"{\"in\":\"body\",\"required\":false,\"schema\":{\"type\":\"array\",\"items\":{\"$ref\":\"Cat\"}}}\"\"\"\n+    val json = \"\"\"{\"in\":\"body\",\"required\":false,\"schema\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Cat\"}}}\"\"\"\n     val p = m.readValue(json, classOf[Parameter])\n     m.writeValueAsString(p) should equal (json)\n   }\ndiff --git a/modules/swagger-core/src/test/scala/properties/PropertySerializationTest.scala b/modules/swagger-core/src/test/scala/properties/PropertySerializationTest.scala\nindex aed42e664..4786e0b88 100644\n--- a/modules/swagger-core/src/test/scala/properties/PropertySerializationTest.scala\n+++ b/modules/swagger-core/src/test/scala/properties/PropertySerializationTest.scala\n@@ -152,11 +152,11 @@ class PropertySerializationTest extends FlatSpec with Matchers {\n \n   it should \"serialize a RefProperty\" in {\n     val p = new RefProperty(\"Dog\")\n-    m.writeValueAsString(p) should be (\"\"\"{\"$ref\":\"Dog\"}\"\"\")\n+    m.writeValueAsString(p) should be (\"\"\"{\"$ref\":\"#/definitions/Dog\"}\"\"\")\n   }\n \n   it should \"deserialize a RefProperty\" in {\n-    val json = \"\"\"{\"$ref\":\"Dog\"}\"\"\"\n+    val json = \"\"\"{\"$ref\":\"#/definitions/Dog\"}\"\"\"\n     val p = m.readValue(json, classOf[Property])\n     p.getClass should be (classOf[RefProperty])\n     m.writeValueAsString(p) should equal (json)",
    "set blue theme as standard": "diff --git a/res/xml/preferences.xml b/res/xml/preferences.xml\nindex 825f4425c2..de36d340c6 100644\n--- a/res/xml/preferences.xml\n+++ b/res/xml/preferences.xml\n@@ -71,12 +71,12 @@\n \t\t\t\tandroid:title=\"@string/select_theme\"\n \t\t\t\tandroid:key=\"theme\"\n \t\t\t\tandroid:summary=\"\"\n-\t\t\t\tandroid:defaultValue=\"0\"\n+\t\t\t\tandroid:defaultValue=\"2\"\n \t\t\t\tandroid:entries=\"@array/theme_labels\"\n \t\t\t\tandroid:entryValues=\"@array/theme_values\" />\n \t\t\t<CheckBoxPreference\n \t\t\t\tandroid:title=\"@string/theme_animations\"\n-\t\t\t\tandroid:defaultValue=\"false\"\n+\t\t\t\tandroid:defaultValue=\"true\"\n \t\t\t\tandroid:summary=\"@string/theme_animations_summ\"\n \t\t\t\tandroid:disableDependentsState=\"false\"\n \t\t\t\tandroid:key=\"themeAnimations\" />\ndiff --git a/src/com/ichi2/anki/Reviewer.java b/src/com/ichi2/anki/Reviewer.java\nindex db25d30097..696b5076c8 100644\n--- a/src/com/ichi2/anki/Reviewer.java\n+++ b/src/com/ichi2/anki/Reviewer.java\n@@ -1637,7 +1637,7 @@ public class Reviewer extends Activity implements IButtonListener{\n          \tmGestureTapTop = Integer.parseInt(preferences.getString(\"gestureTapTop\", \"0\"));\n          \tmGestureTapBottom = Integer.parseInt(preferences.getString(\"gestureTapBottom\", \"0\"));\n         }\n-        mShowAnimations = preferences.getBoolean(\"themeAnimations\", false);\n+        mShowAnimations = preferences.getBoolean(\"themeAnimations\", true);\n         if (mShowAnimations) {\n             int animationDuration = preferences.getInt(\"animationDuration\", 500);\n            \tmAnimationDurationTurn = animationDuration;\ndiff --git a/src/com/ichi2/anki/Themes.java b/src/com/ichi2/anki/Themes.java\nindex 5ab047ec7f..7db4f6c80c 100644\n--- a/src/com/ichi2/anki/Themes.java\n+++ b/src/com/ichi2/anki/Themes.java\n@@ -64,7 +64,7 @@ public class Themes {\n \tpublic static void applyTheme(Context context) {\n \t\tif (mCurrentTheme == -1) {\n \t\t\tSharedPreferences preferences = PrefSettings.getSharedPrefs(context);\n-\t\t\tmCurrentTheme = Integer.parseInt(preferences.getString(\"theme\", \"0\"));\n+\t\t\tmCurrentTheme = Integer.parseInt(preferences.getString(\"theme\", \"2\"));\n \t\t\tswitch (mCurrentTheme) {\n \t\t\tcase THEME_DEFAULT:\n \t\t\t\tmDeckpickerBackground = R.color.card_browser_background;",
    "Adding market search . . Change - Id : I <issue_id>": "diff --git a/res/drawable-hdpi/ic_arrow_back_grey.png b/res/drawable-hdpi/ic_arrow_back_grey.png\nindex ccd3900dd..c7c00886f 100755\nBinary files a/res/drawable-hdpi/ic_arrow_back_grey.png and b/res/drawable-hdpi/ic_arrow_back_grey.png differ\ndiff --git a/res/drawable-hdpi/ic_search_grey.png b/res/drawable-hdpi/ic_search_grey.png\nindex f4c5e27d2..bd20ba062 100755\nBinary files a/res/drawable-hdpi/ic_search_grey.png and b/res/drawable-hdpi/ic_search_grey.png differ\ndiff --git a/res/drawable-mdpi/ic_arrow_back_grey.png b/res/drawable-mdpi/ic_arrow_back_grey.png\nindex 11996efe3..5892c77d5 100755\nBinary files a/res/drawable-mdpi/ic_arrow_back_grey.png and b/res/drawable-mdpi/ic_arrow_back_grey.png differ\ndiff --git a/res/drawable-mdpi/ic_search_grey.png b/res/drawable-mdpi/ic_search_grey.png\nindex e83891c11..c386dbb38 100755\nBinary files a/res/drawable-mdpi/ic_search_grey.png and b/res/drawable-mdpi/ic_search_grey.png differ\ndiff --git a/res/drawable-v21/all_apps_search_market_bg.xml b/res/drawable-v21/all_apps_search_market_bg.xml\nnew file mode 100644\nindex 000000000..7bd2f8816\n--- /dev/null\n+++ b/res/drawable-v21/all_apps_search_market_bg.xml\n@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2015 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<ripple xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:color=\"@color/all_apps_search_market_button_focused_bg_color\">\n+    <item android:drawable=\"@color/quantum_panel_bg_color\" />\n+</ripple>\ndiff --git a/res/drawable-xhdpi/ic_arrow_back_grey.png b/res/drawable-xhdpi/ic_arrow_back_grey.png\nindex 79b9b486c..11996efe3 100755\nBinary files a/res/drawable-xhdpi/ic_arrow_back_grey.png and b/res/drawable-xhdpi/ic_arrow_back_grey.png differ\ndiff --git a/res/drawable-xhdpi/ic_search_grey.png b/res/drawable-xhdpi/ic_search_grey.png\nindex bd5fdf444..e83891c11 100755\nBinary files a/res/drawable-xhdpi/ic_search_grey.png and b/res/drawable-xhdpi/ic_search_grey.png differ\ndiff --git a/res/drawable-xxhdpi/ic_arrow_back_grey.png b/res/drawable-xxhdpi/ic_arrow_back_grey.png\nindex 8e42e091d..ccd3900dd 100755\nBinary files a/res/drawable-xxhdpi/ic_arrow_back_grey.png and b/res/drawable-xxhdpi/ic_arrow_back_grey.png differ\ndiff --git a/res/drawable-xxhdpi/ic_search_grey.png b/res/drawable-xxhdpi/ic_search_grey.png\nindex 1d5c91361..f4c5e27d2 100755\nBinary files a/res/drawable-xxhdpi/ic_search_grey.png and b/res/drawable-xxhdpi/ic_search_grey.png differ\ndiff --git a/res/drawable-xxxhdpi/ic_arrow_back_grey.png b/res/drawable-xxxhdpi/ic_arrow_back_grey.png\nindex 854a9bd1a..79b9b486c 100755\nBinary files a/res/drawable-xxxhdpi/ic_arrow_back_grey.png and b/res/drawable-xxxhdpi/ic_arrow_back_grey.png differ\ndiff --git a/res/drawable-xxxhdpi/ic_search_grey.png b/res/drawable-xxxhdpi/ic_search_grey.png\nindex 28519fda6..bd5fdf444 100755\nBinary files a/res/drawable-xxxhdpi/ic_search_grey.png and b/res/drawable-xxxhdpi/ic_search_grey.png differ\ndiff --git a/res/drawable/all_apps_search_market_bg.xml b/res/drawable/all_apps_search_market_bg.xml\nnew file mode 100644\nindex 000000000..5278e00a6\n--- /dev/null\n+++ b/res/drawable/all_apps_search_market_bg.xml\n@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2015 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_focused=\"true\" android:drawable=\"@color/all_apps_search_market_button_focused_bg_color\" />\n+    <item android:state_pressed=\"true\" android:drawable=\"@color/all_apps_search_market_button_focused_bg_color\" />\n+    <item android:drawable=\"@android:color/transparent\" />\n+</selector>\ndiff --git a/res/drawable/horizontal_line.xml b/res/drawable/horizontal_line.xml\nnew file mode 100644\nindex 000000000..3f3f17e35\n--- /dev/null\n+++ b/res/drawable/horizontal_line.xml\n@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+     Copyright (C) 2015 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:shape=\"rectangle\">\n+    <size android:height=\"1dp\" />\n+    <solid android:color=\"#ddd\" />\n+</shape>\ndiff --git a/res/layout/all_apps_empty_search.xml b/res/layout/all_apps_empty_search.xml\nindex f60c4a09a..b9b493eab 100644\n--- a/res/layout/all_apps_empty_search.xml\n+++ b/res/layout/all_apps_empty_search.xml\n@@ -18,11 +18,14 @@\n     android:id=\"@+id/empty_text\"\n     android:layout_width=\"wrap_content\"\n     android:layout_height=\"wrap_content\"\n-    android:gravity=\"center\"\n-    android:paddingTop=\"24dp\"\n-    android:paddingBottom=\"24dp\"\n-    android:paddingRight=\"@dimen/all_apps_grid_view_start_margin\"\n-    android:textSize=\"16sp\"\n-    android:textColor=\"#4c4c4c\"\n+    android:gravity=\"start\"\n+    android:paddingTop=\"20dp\"\n+    android:paddingBottom=\"8dp\"\n+    android:paddingLeft=\"16dp\"\n+    android:paddingRight=\"16dp\"\n+    android:fontFamily=\"sans-serif-medium\"\n+    android:textSize=\"14sp\"\n+    android:textColor=\"#212121\"\n+    android:alpha=\"0.56\"\n     android:focusable=\"false\" />\n \ndiff --git a/res/layout/all_apps_search_bar.xml b/res/layout/all_apps_search_bar.xml\nindex cf30eac36..4947203df 100644\n--- a/res/layout/all_apps_search_bar.xml\n+++ b/res/layout/all_apps_search_bar.xml\n@@ -32,11 +32,10 @@\n             android:id=\"@+id/dismiss_search_button\"\n             android:layout_width=\"wrap_content\"\n             android:layout_height=\"wrap_content\"\n-            android:layout_marginLeft=\"4dp\"\n-            android:layout_marginStart=\"4dp\"\n+            android:layout_gravity=\"center_vertical\"\n+            android:layout_marginLeft=\"16dp\"\n+            android:layout_marginStart=\"16dp\"\n             android:contentDescription=\"@string/all_apps_button_label\"\n-            android:paddingBottom=\"13dp\"\n-            android:paddingTop=\"13dp\"\n             android:src=\"@drawable/ic_arrow_back_grey\" />\n \n         <com.android.launcher3.allapps.AllAppsSearchEditView\n@@ -63,10 +62,8 @@\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"@dimen/all_apps_search_bar_height\"\n         android:layout_gravity=\"end|center_vertical\"\n-        android:layout_marginEnd=\"4dp\"\n-        android:layout_marginRight=\"4dp\"\n+        android:layout_marginEnd=\"16dp\"\n+        android:layout_marginRight=\"16dp\"\n         android:contentDescription=\"@string/all_apps_search_bar_hint\"\n-        android:paddingBottom=\"13dp\"\n-        android:paddingTop=\"13dp\"\n         android:src=\"@drawable/ic_search_grey\" />\n </FrameLayout>\n\\ No newline at end of file\ndiff --git a/res/layout/all_apps_search_market.xml b/res/layout/all_apps_search_market.xml\nnew file mode 100644\nindex 000000000..1282069c8\n--- /dev/null\n+++ b/res/layout/all_apps_search_market.xml\n@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2015 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<TextView\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/search_market_text\"\n+    android:layout_width=\"wrap_content\"\n+    android:layout_height=\"48dp\"\n+    android:gravity=\"start|center_vertical\"\n+    android:paddingLeft=\"16dp\"\n+    android:paddingRight=\"16dp\"\n+    android:fontFamily=\"sans-serif-medium\"\n+    android:textSize=\"14sp\"\n+    android:textColor=\"#009688\"\n+    android:textAllCaps=\"true\"\n+    android:focusable=\"false\"\n+    android:background=\"@drawable/all_apps_search_market_bg\" />\ndiff --git a/res/layout/all_apps_search_market_divider.xml b/res/layout/all_apps_search_market_divider.xml\nnew file mode 100644\nindex 000000000..39097818f\n--- /dev/null\n+++ b/res/layout/all_apps_search_market_divider.xml\n@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Copyright (C) 2015 The Android Open Source Project\n+\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+\n+          http://www.apache.org/licenses/LICENSE-2.0\n+\n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n+-->\n+<ImageView\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:gravity=\"center\"\n+    android:paddingTop=\"16dp\"\n+    android:paddingBottom=\"8dp\"\n+    android:paddingLeft=\"16dp\"\n+    android:paddingRight=\"16dp\"\n+    android:focusable=\"false\"\n+    android:scaleType=\"matrix\"\n+    android:src=\"@drawable/horizontal_line\" />\n\\ No newline at end of file\ndiff --git a/res/values/colors.xml b/res/values/colors.xml\nindex 51e4d40a5..0add48cd8 100644\n--- a/res/values/colors.xml\n+++ b/res/values/colors.xml\n@@ -44,6 +44,7 @@\n \n     <!-- All Apps -->\n     <color name=\"all_apps_grid_section_text_color\">#009688</color>\n+    <color name=\"all_apps_search_market_button_focused_bg_color\">#DDDDDD</color>\n \n     <!-- Widgets view -->\n     <color name=\"widgets_view_fastscroll_thumb_inactive_color\">#42FFFFFF</color>\ndiff --git a/res/values/strings.xml b/res/values/strings.xml\nindex 88f149bd0..fefadef28 100644\n--- a/res/values/strings.xml\n+++ b/res/values/strings.xml\n@@ -24,10 +24,10 @@\n     <!-- URI used to import old favorites. [DO NOT TRANSLATE] -->\n     <string name=\"old_launcher_provider_uri\" translatable=\"false\">content://com.android.launcher2.settings/favorites?notify=true</string>\n \n-    <!-- Permission to receive the com.android.launcher3.action.LAUNCH intent -->\n+    <!-- Permission to receive the com.android.launcher3.action.LAUNCH intent. [DO NOT TRANSLATE] -->\n     <string name=\"receive_launch_broadcasts_permission\" translatable=\"false\">com.android.launcher3.permission.RECEIVE_LAUNCH_BROADCASTS</string>\n \n-    <!-- Permission to receive the com.android.launcher3.action.FIRST_LOAD_COMPLETE intent -->\n+    <!-- Permission to receive the com.android.launcher3.action.FIRST_LOAD_COMPLETE intent. [DO NOT TRANSLATE] -->\n     <string name=\"receive_first_load_broadcast_permission\" translatable=\"false\">com.android.launcher3.permission.RECEIVE_FIRST_LOAD_BROADCAST</string>\n \n     <!-- Application name -->\n@@ -61,6 +61,9 @@\n     <string name=\"all_apps_loading_message\">Loading Apps&#8230;</string>\n     <!-- No-search-results text. [CHAR_LIMIT=50] -->\n     <string name=\"all_apps_no_search_results\">No Apps found matching \\\"<xliff:g id=\"query\" example=\"Android\">%1$s</xliff:g>\\\"</string>\n+    <!-- Search market text.  This is a format string where the first argument is the name of the activity\n+         handling the search.  The format string does not need to handle both of these arguments. [CHAR_LIMIT=50] -->\n+    <string name=\"all_apps_search_market_message\">Go to <xliff:g id=\"query\" example=\"Play Store\">%1$s</xliff:g></string>\n \n     <!-- Drag and drop -->\n     <skip />\ndiff --git a/src/com/android/launcher3/Launcher.java b/src/com/android/launcher3/Launcher.java\nindex 9d04770af..2d338e3d4 100644\n--- a/src/com/android/launcher3/Launcher.java\n+++ b/src/com/android/launcher3/Launcher.java\n@@ -2132,6 +2132,15 @@ public class Launcher extends Activity\n         }\n     }\n \n+    public void startSearchFromAllApps(View v, Intent searchIntent, String searchQuery) {\n+        if (mLauncherCallbacks != null && mLauncherCallbacks.startSearchFromAllApps(searchQuery)) {\n+            return;\n+        }\n+\n+        // If not handled, then just start the provided search intent\n+        startActivitySafely(v, searchIntent, null);\n+    }\n+\n     public boolean isOnCustomContent() {\n         return mWorkspace.isOnOrMovingToCustomContent();\n     }\n@@ -2533,6 +2542,10 @@ public class Launcher extends Activity\n         if (!isAppsViewVisible()) {\n             showAppsView(true /* animated */, false /* resetListToTop */,\n                     true /* updatePredictedApps */, false /* focusSearchBar */);\n+\n+            if (mLauncherCallbacks != null) {\n+                mLauncherCallbacks.onClickAllAppsButton(v);\n+            }\n         }\n     }\n \n@@ -2924,7 +2937,7 @@ public class Launcher extends Activity\n         return false;\n     }\n \n-    @Thunk boolean startActivitySafely(View v, Intent intent, Object tag) {\n+    public boolean startActivitySafely(View v, Intent intent, Object tag) {\n         boolean success = false;\n         if (mIsSafeModeEnabled && !Utilities.isSystemApp(this, intent)) {\n             Toast.makeText(this, R.string.safemode_shortcut_error, Toast.LENGTH_SHORT).show();\ndiff --git a/src/com/android/launcher3/LauncherCallbacks.java b/src/com/android/launcher3/LauncherCallbacks.java\nindex 6618cca78..e34bd57fd 100644\n--- a/src/com/android/launcher3/LauncherCallbacks.java\n+++ b/src/com/android/launcher3/LauncherCallbacks.java\n@@ -77,6 +77,7 @@ public interface LauncherCallbacks {\n     public boolean providesSearch();\n     public boolean startSearch(String initialQuery, boolean selectInitialQuery,\n             Bundle appSearchData, Rect sourceBounds);\n+    public boolean startSearchFromAllApps(String query);\n     @Deprecated\n     public void startVoice();\n     public boolean hasCustomContentToLeft();\ndiff --git a/src/com/android/launcher3/allapps/AllAppsContainerView.java b/src/com/android/launcher3/allapps/AllAppsContainerView.java\nindex 010b2cb48..e129dc6d3 100644\n--- a/src/com/android/launcher3/allapps/AllAppsContainerView.java\n+++ b/src/com/android/launcher3/allapps/AllAppsContainerView.java\n@@ -16,34 +16,26 @@\n package com.android.launcher3.allapps;\n \n import android.annotation.SuppressLint;\n-import android.annotation.TargetApi;\n import android.content.Context;\n+import android.content.Intent;\n import android.content.res.Resources;\n import android.graphics.Point;\n import android.graphics.Rect;\n import android.graphics.drawable.InsetDrawable;\n-import android.os.Build;\n-import android.os.Bundle;\n import android.support.v7.widget.RecyclerView;\n import android.text.Selection;\n import android.text.SpannableStringBuilder;\n import android.text.method.TextKeyListener;\n import android.util.AttributeSet;\n import android.view.KeyEvent;\n-import android.view.LayoutInflater;\n import android.view.MotionEvent;\n import android.view.View;\n import android.view.ViewConfiguration;\n import android.view.ViewGroup;\n-import android.view.ViewTreeObserver;\n-import android.widget.FrameLayout;\n import android.widget.LinearLayout;\n-\n import com.android.launcher3.AppInfo;\n import com.android.launcher3.BaseContainerView;\n-import com.android.launcher3.BubbleTextView;\n import com.android.launcher3.CellLayout;\n-import com.android.launcher3.CheckLongPressHelper;\n import com.android.launcher3.DeleteDropTarget;\n import com.android.launcher3.DeviceProfile;\n import com.android.launcher3.DragSource;\n@@ -53,7 +45,6 @@ import com.android.launcher3.ItemInfo;\n import com.android.launcher3.Launcher;\n import com.android.launcher3.LauncherTransitionable;\n import com.android.launcher3.R;\n-import com.android.launcher3.Stats;\n import com.android.launcher3.Utilities;\n import com.android.launcher3.Workspace;\n import com.android.launcher3.util.ComponentKey;\n@@ -155,6 +146,7 @@ public class AllAppsContainerView extends BaseContainerView implements DragSourc\n     @Thunk AllAppsSearchBarController mSearchBarController;\n     private ViewGroup mSearchBarContainerView;\n     private View mSearchBarView;\n+    private SpannableStringBuilder mSearchQueryBuilder = null;\n \n     private int mSectionNamesMargin;\n     private int mNumAppsPerRow;\n@@ -165,7 +157,13 @@ public class AllAppsContainerView extends BaseContainerView implements DragSourc\n     // This coordinate is relative to its parent\n     private final Point mIconLastTouchPos = new Point();\n \n-    private SpannableStringBuilder mSearchQueryBuilder = null;\n+    private View.OnClickListener mSearchClickListener = new View.OnClickListener() {\n+        @Override\n+        public void onClick(View v) {\n+            Intent searchIntent = (Intent) v.getTag();\n+            mLauncher.startActivitySafely(v, searchIntent, null);\n+        }\n+    };\n \n     public AllAppsContainerView(Context context) {\n         this(context, null);\n@@ -182,8 +180,7 @@ public class AllAppsContainerView extends BaseContainerView implements DragSourc\n         mLauncher = (Launcher) context;\n         mSectionNamesMargin = res.getDimensionPixelSize(R.dimen.all_apps_grid_view_start_margin);\n         mApps = new AlphabeticalAppsList(context);\n-        mAdapter = new AllAppsGridAdapter(context, mApps, this, mLauncher, this);\n-        mAdapter.setEmptySearchText(res.getString(R.string.all_apps_loading_message));\n+        mAdapter = new AllAppsGridAdapter(mLauncher, mApps, this, mLauncher, this);\n         mApps.setAdapter(mAdapter);\n         mLayoutManager = mAdapter.getLayoutManager();\n         mItemDecoration = mAdapter.getItemDecoration();\n@@ -615,13 +612,9 @@ public class AllAppsContainerView extends BaseContainerView implements DragSourc\n     @Override\n     public void onSearchResult(String query, ArrayList<ComponentKey> apps) {\n         if (apps != null) {\n-            if (apps.isEmpty()) {\n-                String formatStr = getResources().getString(R.string.all_apps_no_search_results);\n-                mAdapter.setEmptySearchText(String.format(formatStr, query));\n-            } else {\n-                mAppsRecyclerView.scrollToTop();\n-            }\n             mApps.setOrderedFilter(apps);\n+            mAdapter.setLastSearchQuery(query);\n+            mAppsRecyclerView.scrollToTop();\n         }\n     }\n \ndiff --git a/src/com/android/launcher3/allapps/AllAppsGridAdapter.java b/src/com/android/launcher3/allapps/AllAppsGridAdapter.java\nindex e96567c41..4acfc5ca6 100644\n--- a/src/com/android/launcher3/allapps/AllAppsGridAdapter.java\n+++ b/src/com/android/launcher3/allapps/AllAppsGridAdapter.java\n@@ -16,14 +16,17 @@\n package com.android.launcher3.allapps;\n \n import android.content.Context;\n+import android.content.Intent;\n+import android.content.pm.PackageManager;\n+import android.content.pm.ResolveInfo;\n import android.content.res.Resources;\n import android.graphics.Canvas;\n import android.graphics.Paint;\n import android.graphics.PointF;\n import android.graphics.Rect;\n-import android.os.Handler;\n import android.support.v4.view.accessibility.AccessibilityRecordCompat;\n import android.support.v4.view.accessibility.AccessibilityEventCompat;\n+import android.net.Uri;\n import android.support.v7.widget.GridLayoutManager;\n import android.support.v7.widget.RecyclerView;\n import android.view.LayoutInflater;\n@@ -34,6 +37,7 @@ import android.view.accessibility.AccessibilityEvent;\n import android.widget.TextView;\n import com.android.launcher3.AppInfo;\n import com.android.launcher3.BubbleTextView;\n+import com.android.launcher3.Launcher;\n import com.android.launcher3.R;\n import com.android.launcher3.Utilities;\n import com.android.launcher3.util.Thunk;\n@@ -58,6 +62,10 @@ class AllAppsGridAdapter extends RecyclerView.Adapter<AllAppsGridAdapter.ViewHol\n     public static final int PREDICTION_ICON_VIEW_TYPE = 2;\n     // The message shown when there are no filtered results\n     public static final int EMPTY_SEARCH_VIEW_TYPE = 3;\n+    // A divider that separates the apps list and the search market button\n+    public static final int SEARCH_MARKET_DIVIDER_VIEW_TYPE = 4;\n+    // The message to continue to a market search when there are no filtered results\n+    public static final int SEARCH_MARKET_VIEW_TYPE = 5;\n \n     /**\n      * ViewHolder for each icon.\n@@ -83,12 +91,12 @@ class AllAppsGridAdapter extends RecyclerView.Adapter<AllAppsGridAdapter.ViewHol\n         @Override\n         public void onInitializeAccessibilityEvent(AccessibilityEvent event) {\n             super.onInitializeAccessibilityEvent(event);\n-            if (mApps.hasNoFilteredResults()) {\n-                // Disregard the no-search-results text as a list item for accessibility\n-                final AccessibilityRecordCompat record = AccessibilityEventCompat\n-                        .asRecord(event);\n-                record.setItemCount(0);\n-            }\n+\n+            // Ensure that we only report the number apps for accessibility not including other\n+            // adapter views\n+            final AccessibilityRecordCompat record = AccessibilityEventCompat\n+                    .asRecord(event);\n+            record.setItemCount(mApps.getNumFilteredApps());\n         }\n \n         @Override\n@@ -115,11 +123,6 @@ class AllAppsGridAdapter extends RecyclerView.Adapter<AllAppsGridAdapter.ViewHol\n \n         @Override\n         public int getSpanSize(int position) {\n-            if (mApps.hasNoFilteredResults()) {\n-                // Empty view spans full width\n-                return mAppsPerRow;\n-            }\n-\n             switch (mApps.getAdapterItems().get(position).viewType) {\n                 case AllAppsGridAdapter.ICON_VIEW_TYPE:\n                 case AllAppsGridAdapter.PREDICTION_ICON_VIEW_TYPE:\n@@ -314,6 +317,7 @@ class AllAppsGridAdapter extends RecyclerView.Adapter<AllAppsGridAdapter.ViewHol\n         }\n     }\n \n+    private Launcher mLauncher;\n     private LayoutInflater mLayoutInflater;\n     @Thunk AlphabeticalAppsList mApps;\n     private GridLayoutManager mGridLayoutMgr;\n@@ -326,7 +330,19 @@ class AllAppsGridAdapter extends RecyclerView.Adapter<AllAppsGridAdapter.ViewHol\n     @Thunk int mPredictionBarDividerOffset;\n     @Thunk int mAppsPerRow;\n     @Thunk boolean mIsRtl;\n-    private String mEmptySearchText;\n+\n+    // The text to show when there are no search results and no market search handler.\n+    private String mEmptySearchMessage;\n+    // The name of the market app which handles searches, to be used in the format str\n+    // below when updating the search-market view.  Only needs to be loaded once.\n+    private String mMarketAppName;\n+    // The text to show when there is a market app which can handle a specific query, updated\n+    // each time the search query changes.\n+    private String mMarketSearchMessage;\n+    // The intent to send off to the market app, updated each time the search query changes.\n+    private Intent mMarketSearchIntent;\n+    // The last query that the user entered into the search field\n+    private String mLastSearchQuery;\n \n     // Section drawing\n     @Thunk int mSectionNamesMargin;\n@@ -334,16 +350,18 @@ class AllAppsGridAdapter extends RecyclerView.Adapter<AllAppsGridAdapter.ViewHol\n     @Thunk Paint mSectionTextPaint;\n     @Thunk Paint mPredictedAppsDividerPaint;\n \n-    public AllAppsGridAdapter(Context context, AlphabeticalAppsList apps,\n+    public AllAppsGridAdapter(Launcher launcher, AlphabeticalAppsList apps,\n             View.OnTouchListener touchListener, View.OnClickListener iconClickListener,\n             View.OnLongClickListener iconLongClickListener) {\n-        Resources res = context.getResources();\n+        Resources res = launcher.getResources();\n+        mLauncher = launcher;\n         mApps = apps;\n+        mEmptySearchMessage = res.getString(R.string.all_apps_loading_message);\n         mGridSizer = new GridSpanSizer();\n-        mGridLayoutMgr = new AppsGridLayoutManager(context);\n+        mGridLayoutMgr = new AppsGridLayoutManager(launcher);\n         mGridLayoutMgr.setSpanSizeLookup(mGridSizer);\n         mItemDecoration = new GridItemDecoration();\n-        mLayoutInflater = LayoutInflater.from(context);\n+        mLayoutInflater = LayoutInflater.from(launcher);\n         mTouchListener = touchListener;\n         mIconClickListener = iconClickListener;\n         mIconLongClickListener = iconLongClickListener;\n@@ -363,6 +381,14 @@ class AllAppsGridAdapter extends RecyclerView.Adapter<AllAppsGridAdapter.ViewHol\n         mPredictionBarDividerOffset =\n                 (-res.getDimensionPixelSize(R.dimen.all_apps_prediction_icon_bottom_padding) +\n                         res.getDimensionPixelSize(R.dimen.all_apps_icon_top_bottom_padding)) / 2;\n+\n+        // Resolve the market app handling additional searches\n+        PackageManager pm = launcher.getPackageManager();\n+        ResolveInfo marketInfo = pm.resolveActivity(createMarketSearchIntent(\"\"),\n+                PackageManager.MATCH_DEFAULT_ONLY);\n+        if (marketInfo != null) {\n+            mMarketAppName = marketInfo.loadLabel(pm).toString();\n+        }\n     }\n \n     /**\n@@ -381,10 +407,19 @@ class AllAppsGridAdapter extends RecyclerView.Adapter<AllAppsGridAdapter.ViewHol\n     }\n \n     /**\n-     * Sets the text to show when there are no apps.\n+     * Sets the last search query that was made, used to show when there are no results and to also\n+     * seed the intent for searching the market.\n      */\n-    public void setEmptySearchText(String query) {\n-        mEmptySearchText = query;\n+    public void setLastSearchQuery(String query) {\n+        Resources res = mLauncher.getResources();\n+        String formatStr = res.getString(R.string.all_apps_no_search_results);\n+        mLastSearchQuery = query;\n+        mEmptySearchMessage = String.format(formatStr, query);\n+        if (mMarketAppName != null) {\n+            mMarketSearchMessage = String.format(res.getString(R.string.all_apps_search_market_message),\n+                    mMarketAppName);\n+            mMarketSearchIntent = createMarketSearchIntent(query);\n+        }\n     }\n \n     /**\n@@ -413,9 +448,6 @@ class AllAppsGridAdapter extends RecyclerView.Adapter<AllAppsGridAdapter.ViewHol\n     @Override\n     public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n         switch (viewType) {\n-            case EMPTY_SEARCH_VIEW_TYPE:\n-                return new ViewHolder(mLayoutInflater.inflate(R.layout.all_apps_empty_search, parent,\n-                        false));\n             case SECTION_BREAK_VIEW_TYPE:\n                 return new ViewHolder(new View(parent.getContext()));\n             case ICON_VIEW_TYPE: {\n@@ -440,6 +472,22 @@ class AllAppsGridAdapter extends RecyclerView.Adapter<AllAppsGridAdapter.ViewHol\n                 icon.setFocusable(true);\n                 return new ViewHolder(icon);\n             }\n+            case EMPTY_SEARCH_VIEW_TYPE:\n+                return new ViewHolder(mLayoutInflater.inflate(R.layout.all_apps_empty_search,\n+                        parent, false));\n+            case SEARCH_MARKET_DIVIDER_VIEW_TYPE:\n+                return new ViewHolder(mLayoutInflater.inflate(R.layout.all_apps_search_market_divider,\n+                        parent, false));\n+            case SEARCH_MARKET_VIEW_TYPE:\n+                View searchMarketView = mLayoutInflater.inflate(R.layout.all_apps_search_market,\n+                        parent, false);\n+                searchMarketView.setOnClickListener(new View.OnClickListener() {\n+                    @Override\n+                    public void onClick(View v) {\n+                        mLauncher.startSearchFromAllApps(v, mMarketSearchIntent, mLastSearchQuery);\n+                    }\n+             ",
    "Updated changelog .": "diff --git a/changelog.txt b/changelog.txt\nindex 3042ddf7a..6634c2c07 100644\n--- a/changelog.txt\n+++ b/changelog.txt\n@@ -1,3 +1,6 @@\n+0.79.1\n+ * copyToRealm() no longer crashes on cyclic data structures.\n+\n 0.79\n  * Added support for ARM64.\n  * Added RealmQuery.not() to negate a query condition.",
    "implemented insert on partitioned tables": "diff --git a/core/build.gradle b/core/build.gradle\nindex f904b46fb5..c1a4a3d796 100644\n--- a/core/build.gradle\n+++ b/core/build.gradle\n@@ -9,6 +9,7 @@ configurations {\n \n dependencies {\n     compile project(':es')\n+    compile 'commons-codec:commons-codec:1.9'\n     testCompile project(':testing')\n }\n \ndiff --git a/core/src/main/java/io/crate/PartitionName.java b/core/src/main/java/io/crate/PartitionName.java\nindex 5b5376f0dc..2f1568780a 100644\n--- a/core/src/main/java/io/crate/PartitionName.java\n+++ b/core/src/main/java/io/crate/PartitionName.java\n@@ -23,8 +23,8 @@ package io.crate;\n \n import com.google.common.base.Joiner;\n import com.google.common.base.Splitter;\n+import org.apache.commons.codec.binary.Base32;\n import org.apache.lucene.util.BytesRef;\n-import org.elasticsearch.common.Base64;\n import org.elasticsearch.common.Nullable;\n import org.elasticsearch.common.bytes.BytesReference;\n import org.elasticsearch.common.io.stream.*;\n@@ -32,11 +32,13 @@ import org.elasticsearch.common.io.stream.*;\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Locale;\n \n public class PartitionName implements Streamable {\n \n     public static final String NULL_MARKER = \"N\";\n     public static final String NOT_NULL_MARKER = \"_\";\n+    private static final Base32 BASE32 = new Base32(true);\n \n     private final List<String> values = new ArrayList<>();\n     private final String tableName;\n@@ -120,9 +122,12 @@ public class PartitionName implements Streamable {\n         if (bytes() == null) {\n             return null;\n         }\n-        return Joiner.on(\".\").join(Constants.PARTITIONED_TABLE_PREFIX, tableName, Base64.encodeBytes(bytesReference.toBytes()));\n+        return Joiner.on(\".\").join(Constants.PARTITIONED_TABLE_PREFIX, tableName,\n+                BASE32.encodeAsString(bytesReference.toBytes()).toLowerCase(Locale.ROOT));\n     }\n \n+\n+\n     @Nullable\n     public String toString() {\n         return stringValue();\n@@ -142,7 +147,7 @@ public class PartitionName implements Streamable {\n \n         PartitionName partitionName = new PartitionName(tableName);\n         if (columnCount > 1) {\n-            byte[] inputBytes = Base64.decode(valuesString);\n+            byte[] inputBytes = BASE32.decode(valuesString.toUpperCase(Locale.ROOT));\n             BytesStreamInput in = new BytesStreamInput(inputBytes, true);\n             partitionName.readFrom(in);\n         } else {\ndiff --git a/docs/sql/information_schema.txt b/docs/sql/information_schema.txt\nindex 81a3bcc27f..9c3d076d3e 100644\n--- a/docs/sql/information_schema.txt\n+++ b/docs/sql/information_schema.txt\n@@ -25,6 +25,7 @@ settings like the number of shards or number of replicas::\n     | blob               | myblobs           | 3                | 1                  | digest       |\n     | doc                | documents         | 5                | 1                  | _id          |\n     | doc                | locations         | 2                | 0                  | id           |\n+    | doc                | partitioned_table | 5                | 1                  | _id          |\n     | doc                | quotes            | 2                | 0                  | id           |\n     | information_schema | columns           | 1                | 0                  | NULL         |\n     | information_schema | routines          | 1                | 0                  | NULL         |\n@@ -34,7 +35,7 @@ settings like the number of shards or number of replicas::\n     | sys                | nodes             | 1                | 0                  | NULL         |\n     | sys                | shards            | 1                | 0                  | NULL         |\n     +--------------------+-------------------+------------------+--------------------+--------------+\n-    SELECT 11 rows in set (... sec)\n+    SELECT 12 rows in set (... sec)\n \n \n Columns\n@@ -46,25 +47,28 @@ definition like data type and ordinal position inside the table::\n     cr> select * from information_schema.columns\n     ... where schema_name='doc' and table_name not like 'my_table%'\n     ... order by table_name asc, column_name asc;\n-    +-------------+------------+------------------+------------------+--------------+\n-    | schema_name | table_name | column_name      | ordinal_position | data_type    |\n-    +-------------+------------+------------------+------------------+--------------+\n-    | doc         | documents  | body             | 1                | string       |\n-    | doc         | documents  | title            | 2                | string       |\n-    | doc         | locations  | date             | 1                | timestamp    |\n-    | doc         | locations  | description      | 2                | string       |\n-    | doc         | locations  | id               | 3                | string       |\n-    | doc         | locations  | kind             | 4                | string       |\n-    | doc         | locations  | name             | 5                | string       |\n-    | doc         | locations  | position         | 6                | integer      |\n-    | doc         | locations  | race             | 7                | object       |\n-    | doc         | locations  | race.description | 8                | string       |\n-    | doc         | locations  | race.interests   | 9                | string_array |\n-    | doc         | locations  | race.name        | 10               | string       |\n-    | doc         | quotes     | id               | 1                | integer      |\n-    | doc         | quotes     | quote            | 2                | string       |\n-    +-------------+------------+------------------+------------------+--------------+\n-    SELECT 14 rows in set (... sec)\n+    +-------------+-------------------+------------------+------------------+--------------+\n+    | schema_name | table_name        | column_name      | ordinal_position | data_type    |\n+    +-------------+-------------------+------------------+------------------+--------------+\n+    | doc         | documents         | body             | 1                | string       |\n+    | doc         | documents         | title            | 2                | string       |\n+    | doc         | locations         | date             | 1                | timestamp    |\n+    | doc         | locations         | description      | 2                | string       |\n+    | doc         | locations         | id               | 3                | string       |\n+    | doc         | locations         | kind             | 4                | string       |\n+    | doc         | locations         | name             | 5                | string       |\n+    | doc         | locations         | position         | 6                | integer      |\n+    | doc         | locations         | race             | 7                | object       |\n+    | doc         | locations         | race.description | 8                | string       |\n+    | doc         | locations         | race.interests   | 9                | string_array |\n+    | doc         | locations         | race.name        | 10               | string       |\n+    | doc         | partitioned_table | date             | 1                | timestamp    |\n+    | doc         | partitioned_table | id               | 2                | long         |\n+    | doc         | partitioned_table | title            | 3                | string       |\n+    | doc         | quotes            | id               | 1                | integer      |\n+    | doc         | quotes            | quote            | 2                | string       |\n+    +-------------+-------------------+------------------+------------------+--------------+\n+    SELECT 17 rows in set (... sec)\n \n \n You can even query this tables' own columns (attention: this might lead to infinite recursion of your mind, beware!)::\n@@ -104,19 +108,20 @@ their type, name and which table they are defined in.\n     cr> select * from information_schema.table_constraints\n     ... where table_name not like 'my_table%'\n     ... order by schema_name desc, table_name desc limit 10;\n-    +--------------------+------------+-------------------------------------------------+-----------------+\n-    | schema_name        | table_name | constraint_name                                 | constraint_type |\n-    +--------------------+------------+-------------------------------------------------+-----------------+\n-    | sys                | shards     | [u'schema_name', u'table_name', u'id']          | PRIMARY_KEY     |\n-    | sys                | nodes      | [u'id']                                         | PRIMARY_KEY     |\n-    | information_schema | tables     | [u'schema_name', u'table_name']                 | PRIMARY_KEY     |\n-    | information_schema | columns    | [u'schema_name', u'table_name', u'column_name'] | PRIMARY_KEY     |\n-    | doc                | quotes     | [u'id']                                         | PRIMARY_KEY     |\n-    | doc                | locations  | [u'id']                                         | PRIMARY_KEY     |\n-    | doc                | documents  | [u'_id']                                        | PRIMARY_KEY     |\n-    | blob               | myblobs    | [u'digest']                                     | PRIMARY_KEY     |\n-    +--------------------+------------+-------------------------------------------------+-----------------+\n-    SELECT 8 rows in set (... sec)\n+    +--------------------+-------------------+-------------------------------------------------+-----------------+\n+    | schema_name        | table_name        | constraint_name                                 | constraint_type |\n+    +--------------------+-------------------+-------------------------------------------------+-----------------+\n+    | sys                | shards            | [u'schema_name', u'table_name', u'id']          | PRIMARY_KEY     |\n+    | sys                | nodes             | [u'id']                                         | PRIMARY_KEY     |\n+    | information_schema | tables            | [u'schema_name', u'table_name']                 | PRIMARY_KEY     |\n+    | information_schema | columns           | [u'schema_name', u'table_name', u'column_name'] | PRIMARY_KEY     |\n+    | doc                | quotes            | [u'id']                                         | PRIMARY_KEY     |\n+    | doc                | partitioned_table | [u'_id']                                        | PRIMARY_KEY     |\n+    | doc                | locations         | [u'id']                                         | PRIMARY_KEY     |\n+    | doc                | documents         | [u'_id']                                        | PRIMARY_KEY     |\n+    | blob               | myblobs           | [u'digest']                                     | PRIMARY_KEY     |\n+    +--------------------+-------------------+-------------------------------------------------+-----------------+\n+    SELECT 9 rows in set (... sec)\n \n \n Indices\ndiff --git a/docs/sql/rest.txt b/docs/sql/rest.txt\nindex 572704dcdf..2f81d6e611 100644\n--- a/docs/sql/rest.txt\n+++ b/docs/sql/rest.txt\n@@ -151,4 +151,6 @@ Currently the defined error codes are:\n     4093  A table with the same name exists already.\n     ----- ---------------------------------------------------------------------\n     4094  The used table alias contains tables with different schema.\n+    ----- ---------------------------------------------------------------------\n+    5001  The execution of one or more tasks failed.\n     ===== =====================================================================\ndiff --git a/sql/src/main/java/io/crate/analyze/AbstractDataAnalysis.java b/sql/src/main/java/io/crate/analyze/AbstractDataAnalysis.java\nindex ea5a1a0d5a..b6fe7b6063 100644\n--- a/sql/src/main/java/io/crate/analyze/AbstractDataAnalysis.java\n+++ b/sql/src/main/java/io/crate/analyze/AbstractDataAnalysis.java\n@@ -106,7 +106,7 @@ public abstract class AbstractDataAnalysis extends Analysis {\n         TableInfo tableInfo = schemaInfo.getTableInfo(tableIdent.name());\n         if (tableInfo == null) {\n             throw new TableUnknownException(tableIdent.name());\n-        } else if (tableInfo.isAlias()) {\n+        } else if (tableInfo.isAlias() && !tableInfo.isPartitioned()) {\n             throw new UnsupportedOperationException(\n                     String.format(\"aliases are read only cannot modify \\\"%s\\\"\", tableIdent.name()));\n         }\ndiff --git a/sql/src/main/java/io/crate/analyze/InsertAnalysis.java b/sql/src/main/java/io/crate/analyze/InsertAnalysis.java\nindex 09e927daa9..73ec9bb93d 100644\n--- a/sql/src/main/java/io/crate/analyze/InsertAnalysis.java\n+++ b/sql/src/main/java/io/crate/analyze/InsertAnalysis.java\n@@ -23,27 +23,25 @@ package io.crate.analyze;\n \n import com.carrotsearch.hppc.IntOpenHashSet;\n import com.carrotsearch.hppc.IntSet;\n-import io.crate.metadata.Functions;\n-import io.crate.metadata.ReferenceInfos;\n-import io.crate.metadata.ReferenceResolver;\n+import io.crate.PartitionName;\n+import io.crate.metadata.*;\n import io.crate.planner.symbol.Reference;\n-import io.crate.planner.symbol.Symbol;\n",
    "add more unit tests for verifyProof PrecompiledContract": "diff --git a/actuator/src/main/java/org/tron/core/vm/PrecompiledContracts.java b/actuator/src/main/java/org/tron/core/vm/PrecompiledContracts.java\nindex 71b1219ed..c956c84f1 100644\n--- a/actuator/src/main/java/org/tron/core/vm/PrecompiledContracts.java\n+++ b/actuator/src/main/java/org/tron/core/vm/PrecompiledContracts.java\n@@ -34,6 +34,7 @@ import static org.tron.core.vm.utils.MUtil.convertToTronAddress;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.concurrent.Callable;\n import java.util.concurrent.CountDownLatch;\n@@ -1070,7 +1071,7 @@ public class PrecompiledContracts {\n       }\n       long leafCount = parseLong(data, 1472);\n       if (leafCount >= TREE_WIDTH) {\n-        return Pair.of(false, EMPTY_BYTE_ARRAY);\n+        return Pair.of(false, DataWord.ZERO().getData());\n       }\n \n       boolean result;\n@@ -1080,7 +1081,7 @@ public class PrecompiledContracts {\n         result = JLibrustzcash.librustzcashSaplingCheckOutput(\n             new LibrustzcashParam.CheckOutputParams(ctx, cv, cm, epk, proof));\n         long valueBalance = -value;\n-        result &= JLibrustzcash.librustzcashSaplingFinalCheck(\n+        result = result && JLibrustzcash.librustzcashSaplingFinalCheck(\n             new LibrustzcashParam.FinalCheckParams(ctx, valueBalance, bindingSig, signHash));\n       } catch (Throwable any) {\n         result = false;\n@@ -1183,6 +1184,22 @@ public class PrecompiledContracts {\n       for (int i = 0; i < receiveCount; i++) {\n         System.arraycopy(receiveCv[i], 0, receiveCvs, 32 * i, 32);\n       }\n+      //check duplicate nullifiers\n+      HashSet<String> nfSet = new HashSet<>();\n+      for (byte[] nf : nullifier) {\n+        if (nfSet.contains(ByteArray.toHexString(nf))) {\n+          return Pair.of(true, DataWord.ZERO().getData());\n+        }\n+        nfSet.add(ByteArray.toHexString(nf));\n+      }\n+      //check duplicate output note\n+      HashSet<String> cmSet = new HashSet<>();\n+      for (byte[] cm : receiveCm) {\n+        if (cmSet.contains(ByteArray.toHexString(cm))) {\n+          return Pair.of(true, DataWord.ZERO().getData());\n+        }\n+        cmSet.add(ByteArray.toHexString(cm));\n+      }\n \n       int threadCount = spendCount + receiveCount + 1;\n       CountDownLatch countDownLatch = new CountDownLatch(threadCount);\n@@ -1219,7 +1236,7 @@ public class PrecompiledContracts {\n         countDownLatch.await(getCPUTimeLeftInNanoSecond(), TimeUnit.NANOSECONDS);\n         for (Future<Boolean> future : futures) {\n           boolean eachTaskResult = future.get();\n-          checkResult &= eachTaskResult;\n+          checkResult = checkResult && eachTaskResult;\n         }\n       } catch (Throwable any) {\n         checkResult = false;\n@@ -1396,7 +1413,7 @@ public class PrecompiledContracts {\n         result = JLibrustzcash.librustzcashSaplingCheckSpend(\n             new LibrustzcashParam.CheckSpendParams(\n                 ctx, cv, anchor, nullifier, rk, proof, spendAuthSig, signHash));\n-        result &= JLibrustzcash.librustzcashSaplingFinalCheck(\n+        result = result && JLibrustzcash.librustzcashSaplingFinalCheck(\n             new LibrustzcashParam.FinalCheckParams(ctx, value, bindingSig, signHash));\n       } catch (Throwable any) {\n         result = false;\ndiff --git a/framework/src/test/java/org/tron/common/runtime/vm/PrecompiledContractsVerifyProofTest.java b/framework/src/test/java/org/tron/common/runtime/vm/PrecompiledContractsVerifyProofTest.java\nindex 11d9f2fb0..61f35bfa8 100644\n--- a/framework/src/test/java/org/tron/common/runtime/vm/PrecompiledContractsVerifyProofTest.java\n+++ b/framework/src/test/java/org/tron/common/runtime/vm/PrecompiledContractsVerifyProofTest.java\n@@ -4,6 +4,7 @@ import com.google.protobuf.ByteString;\n import java.io.File;\n import java.util.Arrays;\n import java.util.List;\n+import java.util.Random;\n import lombok.extern.slf4j.Slf4j;\n import org.apache.commons.lang3.tuple.Pair;\n import org.junit.AfterClass;\n@@ -18,6 +19,7 @@ import org.tron.common.utils.FileUtil;\n import org.tron.common.zksnark.IncrementalMerkleTreeContainer;\n import org.tron.common.zksnark.IncrementalMerkleVoucherContainer;\n import org.tron.common.zksnark.JLibrustzcash;\n+import org.tron.common.zksnark.LibrustzcashParam;\n import org.tron.core.capsule.IncrementalMerkleTreeCapsule;\n import org.tron.core.capsule.PedersenHashCapsule;\n import org.tron.core.config.DefaultConfig;\n@@ -29,6 +31,7 @@ import org.tron.core.vm.PrecompiledContracts;\n import org.tron.core.vm.PrecompiledContracts.VerifyBurnProof;\n import org.tron.core.vm.PrecompiledContracts.VerifyMintProof;\n import org.tron.core.vm.PrecompiledContracts.VerifyTransferProof;\n+import org.tron.core.vm.PrecompiledContracts.MerkleHash;\n import org.tron.core.zen.ShieldedTRC20ParametersBuilder;\n import org.tron.core.zen.ShieldedTRC20ParametersBuilder.ShieldedTRC20ParametersType;\n import org.tron.core.zen.address.DiversifierT;\n@@ -63,9 +66,10 @@ public class PrecompiledContractsVerifyProofTest {\n     FullNodeHttpApiService.librustzcashInitZksnarkParams();\n   }\n \n-  PrecompiledContracts.VerifyMintProof mintContract = new VerifyMintProof();\n-  PrecompiledContracts.VerifyTransferProof transferContract = new VerifyTransferProof();\n-  PrecompiledContracts.VerifyBurnProof burnContract = new VerifyBurnProof();\n+  VerifyMintProof mintContract = new VerifyMintProof();\n+  VerifyTransferProof transferContract = new VerifyTransferProof();\n+  VerifyBurnProof burnContract = new VerifyBurnProof();\n+  MerkleHash merkleHash = new MerkleHash();\n \n   /**\n    * Init data.\n@@ -111,8 +115,8 @@ public class PrecompiledContractsVerifyProofTest {\n       ShieldedTRC20Parameters params = builder.build(false);\n \n       byte[] inputData = abiEncodeForMint(params, value, frontier, leafCount);\n-      Pair<Boolean, byte[]> contarctResult = mintContract.execute(inputData);\n-      byte[] result = contarctResult.getRight();\n+      Pair<Boolean, byte[]> contractResult = mintContract.execute(inputData);\n+      byte[] result = contractResult.getRight();\n \n       Assert.assertEquals(1, result[31]);\n \n@@ -137,7 +141,6 @@ public class PrecompiledContractsVerifyProofTest {\n \n     IncrementalMerkleTreeContainer tree = new IncrementalMerkleTreeContainer(\n         new IncrementalMerkleTreeCapsule());\n-\n     for (int countNum = 0; countNum < totalCountNum; countNum++) {\n       SpendingKey senderSk = SpendingKey.random();\n       ExpandedSpendingKey senderExpsk = senderSk.expandedSpendingKey();\n@@ -283,9 +286,9 @@ public class PrecompiledContractsVerifyProofTest {\n     }\n   }\n \n-  Pair<Boolean, byte[]> verifyTransfer(byte[] input) {\n+  private Pair<Boolean, byte[]> verifyTransfer(byte[] input) {\n     transferContract.getEnergyForData(input);\n-    transferContract.setVmShouldEndInUs(System.nanoTime() / 1000 + 500 * 1000);\n+    transferContract.setVmShouldEndInUs(System.nanoTime() / 1000 + 500000 * 1000);\n     Pair<Boolean, byte[]> ret = transferContract.execute(input);\n     return ret;\n   }\n@@ -299,7 +302,6 @@ public class PrecompiledContractsVerifyProofTest {\n \n     IncrementalMerkleTreeContainer tree = new IncrementalMerkleTreeContainer(\n         new IncrementalMerkleTreeCapsule());\n-\n     for (int countNum = 0; countNum < totalCountNum; countNum++) {\n       SpendingKey senderSk = SpendingKey.random();\n       ExpandedSpendingKey senderExpsk = senderSk.expandedSpendingKey();\n@@ -362,7 +364,474 @@ public class PrecompiledContractsVerifyProofTest {\n     }\n   }\n \n-  public IncrementalMerkleVoucherContainer addSimpleMerkleVoucherContainer(\n+  @Test\n+  public void merkleHashCorrectTest() throws ZksnarkException {\n+    int totalCountNum = 10;\n+    byte[][] uncommitted = new byte[32][32];\n+    //initialize uncommitted\n+    uncommitted[0] = ByteArray.fromHexString(\n+        \"0100000000000000000000000000000000000000000000000000000000000000\");\n+    try {\n+      for (int i = 0; i < 31; i++) {\n+        JLibrustzcash.librustzcashMerkleHash(\n+            new LibrustzcashParam.MerkleHashParams(\n+                i, uncommitted[i], uncommitted[i], uncommitted[i + 1]));\n+      }\n+    } catch (Throwable any) {\n+    }\n+    for (int cnt = 0; cnt < totalCountNum; cnt++) {\n+      SpendingKey sk = SpendingKey.random();\n+      FullViewingKey fvk = sk.fullViewingKey();\n+      IncomingViewingKey ivk = fvk.inViewingKey();\n+      byte[] rcm = new byte[32];\n+      JLibrustzcash.librustzcashSaplingGenerateR(rcm);\n+      PaymentAddress paymentAddress = ivk.address(DiversifierT.random()).get();\n+      Note note = new Note(paymentAddress.getD(), paymentAddress.getPkD(),\n+          randomLong(), rcm, new byte[512]);\n+      byte[] node = note.cm();\n+\n+\n+      for (int i = 0; i < 32; i++) {\n+        byte[] input = ByteUtil.merge(longTo32Bytes(i), node, uncommitted[i]);\n+        node = merkleHash.execute(input).getRight();\n+      }\n+\n+      IncrementalMerkleTreeContainer tree = new IncrementalMerkleTreeContainer(\n+          new IncrementalMerkleTreeCapsule());\n+      byte[][] noteCommitment = new byte[1][32];\n+      System.arraycopy(note.cm(), 0, noteCommitment[0], 0, 32);\n+      IncrementalMerkleVoucherContainer voucher =\n+          addSimpleMerkleVoucherContainer(tree, noteCommitment);\n+      byte[] anchor = voucher.root().getContent().toByteArray();\n+\n+      Assert.assertArrayEquals(anchor, node);\n+    }\n+  }\n+\n+  @Test\n+  public void verifyMintWrongDataLength() throws ZksnarkException {\n+    long leafCount = 0;\n+    long value = 100L;\n+    byte[] frontier = new byte[32 * 33];\n+\n+    ShieldedTRC20ParametersBuilder builder = new ShieldedTRC20ParametersBuilder();\n+    builder.setTransparentToAmount(value);\n+    builder.setShieldedTRC20Address(SHIELDED_CONTRACT_ADDRESS);\n+    builder.setShieldedTRC20ParametersType(ShieldedTRC20ParametersType.MINT);\n+\n+    //ReceiveNote\n+    SpendingKey recvSk = SpendingKey.random();\n+    FullViewingKey fullViewingKey = recvSk.fullViewingKey();\n+    IncomingViewingKey incomingViewingKey = fullViewingKey.inViewingKey();\n+    PaymentAddress paymentAddress = incomingViewingKey.address(DiversifierT.random()).get();\n+    builder.addOutput(DEFAULT_OVK, paymentAddress, value, new byte[512]);\n+    ShieldedTRC20Parameters params = builder.build(false);\n+\n+    byte[] inputData = abiEncodeForMint(params, value, frontier, leafCount);\n+    byte[] mergedBytes = ByteUtil.merge(inputData, new byte[1]);\n+    Pair<Boolean, byte[]> contractResult = mintContract.execute(mergedBytes);\n+    byte[] result = contractResult.getRight();\n+\n+    Assert.assertEquals(0, result[31]);\n+  }\n+\n+  @Test\n+  public void verifyTransferWrongDataLength() throws ZksnarkException {\n+    long leafCount = 0;\n+    byte[] frontier = new byte[32 * 33];\n+\n+    SpendingKey senderSk = SpendingKey.random();\n+    ExpandedSpendingKey senderExpsk = senderSk.expandedSpendingKey();\n+    FullViewingKey senderFvk = senderSk.fullViewingKey();\n+    byte[] senderOvk = senderFvk.getOvk();\n+    IncomingViewingKey senderIvk = senderFvk.inViewingKey();\n+    byte[] rcm1 = new byte[32];\n+    JLibrustzcash.librustzcashSaplingGenerateR(rcm1);\n+    byte[] rcm2 = new byte[32];\n+    JLibrustzcash.librustzcashSaplingGenerateR(rcm2);\n+    PaymentAddress senderPaymentAddress1 = senderIvk.address(DiversifierT.random()).get();\n+    PaymentAddress senderPaymentAddress2 = senderIvk.address(DiversifierT.random()).get();\n+\n+    ShieldedTRC20ParametersBuilder builder = new ShieldedTRC20ParametersBuilder();\n+    builder.setShieldedTRC20ParametersType(ShieldedTRC20ParametersType.TRANSFER);\n+    builder.setShieldedTRC20Address(SHIELDED_CONTRACT_ADDRESS);\n+    builder.setTransparentFromAmount(0);\n+    builder.setTransparentToAmount(0);\n+\n+    IncrementalMerkleTreeContainer tree = new IncrementalMerkleTreeContainer(\n+        new IncrementalMerkleTreeCapsule());\n+    //spendNote1\n+    Note senderNote1 = new Note(senderPaymentAddress1.getD(), senderPaymentAddress1.getPkD(),\n+        30, rcm1, new byte[512]);\n+    byte[][] cm1 = new byte[1][32];\n+    System.arraycopy(senderNote1.cm(), 0, cm1[0], 0, 32);\n+    IncrementalMerkleVoucherContainer voucher1 = addSimpleMerkleVoucherContainer(tree, cm1);\n+    byte[] path1 = decodePath(voucher1.path().encode());\n+    byte[] anchor1 = voucher1.root().getContent().toByteArray();\n+    long position1 = voucher1.position();\n+    builder.addSpend(senderExpsk, senderNote1, anchor1, path1, position1);\n+\n+    //spendNote2\n+    Note senderNote2 = new Note(senderPaymentAddress2.getD(), senderPaymentAddress2.getPkD(),\n+        70, rcm2, new byte[512]);\n+    byte[][] cm2 = new byte[1][32];\n+    System.arraycopy(senderNote2.cm(), 0, cm2[0], 0, 32);\n+    IncrementalMerkleVoucherContainer voucher2 = addSimpleMerkleVoucherContainer(tree, cm2);\n+    byte[] path2 = decodePath(voucher2.path().encode());\n+    byte[] anchor2 = voucher2.root().getContent().toByteArray();\n+    long position2 = voucher2.position();\n+    builder.addSpend(senderExpsk, senderNote2, anchor2, path2, position2);\n+\n+    //receiveNote1\n+    SpendingKey receiveSk1 = SpendingKey.random();\n+    FullViewingKey receiveFvk1 = receiveSk1.fullViewingKey();\n+    IncomingViewingKey receiveIvk1 = receiveFvk1.inViewingKey();\n+    PaymentAddress receivePaymentAddress1 = receiveIvk1.address(new DiversifierT()).get();\n+    builder.addOutput(senderOvk, receivePaymentAddress1, 40, new byte[512]);\n+\n+    //receiveNote2\n+    SpendingKey receiveSk2 = SpendingKey.random();\n+    FullViewingKey receiveFvk2 = receiveSk2.fullViewingKey();\n+    IncomingViewingKey receiveIvk2 = receiveFvk2.inViewingKey();\n+    PaymentAddress receivePaymentAddress2 = receiveIvk2.address(new DiversifierT()).get();\n+    builder.addOutput(senderOvk, receivePaymentAddress2, 60, new byte[512]);\n+    ShieldedTRC20Parameters params = builder.build(true);\n+\n+    byte[] inputData = abiEncodeForTransfer(params, frontier, leafCount);\n+    byte[] mergedBytes = ByteUtil.merge(inputData, new byte[1]);\n+    Pair<Boolean, byte[]> contractResult = verifyTransfer(mergedBytes);\n+    byte[] result = contractResult.getRight();\n+\n+    Assert.assertEquals(0, result[31]);\n+  }\n+\n+  @Test\n+  public void verifyBurnWrongDataLength() throws ZksnarkException {\n+    long value = 100L;\n+    SpendingKey senderSk = SpendingKey.random();\n+    ExpandedSpendingKey senderExpsk = senderSk.expandedSpendingKey();\n+    FullViewingKey senderFvk = senderSk.fullViewingKey();\n+    IncomingViewingKey senderIvk = senderFvk.inViewingKey();\n+    byte[] rcm = new byte[32];\n+    JLibrustzcash.librustzcashSaplingGenerateR(rcm);\n+    PaymentAddress senderPaymentAddress = senderIvk.address(DiversifierT.random()).get();\n+\n+    ShieldedTRC20ParametersBuilder builder = new ShieldedTRC20ParametersBuilder();\n+    builder.setShieldedTRC20ParametersType(ShieldedTRC20ParametersType.BURN);\n+    builder.setShieldedTRC20Address(SHIELDED_CONTRACT_ADDRESS);\n+    builder.setTransparentToAmount(value);\n+    builder.setTransparentToAddress(PUBLIC_TO_ADDRESS);\n+    //spendNote\n+    Note senderNote = new Note(senderPaymentAddress.getD(), senderPaymentAddress.getPkD(),\n+        value, rcm, new byte[512]);\n+    byte[][] cm = new byte[1][32];\n+    System.arraycopy(senderNote.cm(), 0, cm[0], 0, 32);\n+    IncrementalMerkleTreeContainer tree = new IncrementalMerkleTreeContainer(\n+        new IncrementalMerkleTreeCapsule());\n+    IncrementalMerkleVoucherContainer voucher = addSimpleMerkleVoucherContainer(tree, cm);\n+    byte[] path = decodePath(voucher.path().encode());\n+    byte[] anchor = voucher.root().getContent().toByteArray();\n+    long position = voucher.position();\n+    builder.addSpend(senderExpsk, senderNote, anchor, path, position);\n+    ShieldedTRC20Parameters params = builder.build(true);\n+\n+    byte[] inputData = abiEncodeForBurn(params, value);\n+    byte[] data = ByteUtil.merge(inputData, new byte[1]);\n+    Pair<Boolean, byte[]> contractResult = burnContract.execute(data);\n+    byte[] result = contractResult.getRight();\n+\n+    Assert.assertEquals(0, result[31]);\n+  }\n+\n+  @Test\n+  public void verifyMintWrongLeafcount() throws ZksnarkException {\n+    long value = 100L;\n+    byte[] frontier = new byte[32 * 33];\n+    long[] leafCountList = {-1, 1L << 32};\n+\n+    for (long leafCount : leafCountList) {\n+      ShieldedTRC20ParametersBuilder builder = new ShieldedTRC20ParametersBuilder();\n+      builder.setTransparentToAmount(value);\n+      builder.setShieldedTRC20Address(SHIELDED_CONTRACT_ADDRESS);\n+      builder.setShieldedTRC20ParametersType(ShieldedTRC20ParametersType.MINT);\n+\n+      //ReceiveNote\n+      SpendingKey recvSk = SpendingKey.random();\n+      FullViewingKey fullViewingKey = recvSk.fullViewingKey();\n+      IncomingViewingKey incomingViewingKey = fullViewingKey.inViewingKey();\n+      PaymentAddress paymentAddress = incomingViewingKey.address(DiversifierT.random()).get();\n+      builder.addOutput(DEFAULT_OVK, paymentAddress, value, new byte[512]);\n+      ShieldedTRC20Parameters params = builder.build(false);\n+\n+      byte[] inputData = abiEncodeForMint(params, value, frontier, leafCount);\n+      Pair<Boolean, byte[]> contractResult = mintContract.execute(inputData);\n+      byte[] result = contractResult.getRight();\n+\n+      Assert.assertEquals(0, result[31]);\n+    }\n+  }\n+\n+  @Test\n+  public void verifyTransferWrongLeafcount() throws ZksnarkException {\n+    byte[] frontier = new byte[32 * 33];\n+    long[] leafCountList = {-1, (1L << 32) - 1};\n+\n+    SpendingKey senderSk = SpendingKey.random();\n+    ExpandedSpendingKey senderExpsk = senderSk.expandedSpendingKey();\n+    FullViewingKey senderFvk = senderSk.fullViewingKey();\n+    byte[] senderOvk = senderFvk.getOvk();\n+    IncomingViewingKey senderIvk = senderFvk.inViewingKey();\n+    byte[] rcm1 = new byte[32];\n+    JLibrustzcash.librustzcashSaplingGenerateR(rcm1);\n+    byte[] rcm2 = new byte[32];\n+    JLibrustzcash.librustzcashSaplingGenerateR(rcm2);\n+    PaymentAddress senderPaymentAddress1 = senderIvk.address(DiversifierT.random()).get();\n+    PaymentAddress senderPaymentAddress2 = senderIvk.address(DiversifierT.random()).get();\n+\n+    for (long leafCount : leafCountList) {\n+      ShieldedTRC20ParametersBuilder builder = new ShieldedTRC20ParametersBuilder();\n+      builder.setShieldedTRC20ParametersType(ShieldedTRC20ParametersType.TRANSFER);\n+      builder.setShieldedTRC20Address(SHIELDED_CONTRACT_ADDRESS);\n+      builder.setTransparentFromAmount(0);\n+      builder.setTransparentToAmount(0);\n+      IncrementalMerkleTreeContainer tree = new IncrementalMerkleTreeContainer(\n+          new IncrementalMerkleTreeCapsule());\n+      //spendNote1\n+      Note senderNote1 = new Note(senderPaymentAddress1.getD(), senderPaymentAddress1.getPkD(),\n+          30, rcm1, new byte[512]);\n+      byte[][] cm1 = new byte[1][32];\n+      System.arraycopy(senderNote1.cm(), 0, cm1[0], 0, 32);\n+      IncrementalMerkleVoucherContainer voucher1 = addSimpleMerkleVoucherContainer(tree, cm1);\n+      byte[] path1 = decodePath(voucher1.path().encode());\n+      byte[] anchor1 = voucher1.root().getContent().toByteArray();\n+      long position1 = voucher1.position();\n+      builder.addSpend(senderExpsk, senderNote1, anchor1, path1, position1);\n+\n+      //spendNote2\n+      Note senderNote2 = new Note(senderPaymentAddress2.getD(), senderPaymentAddress2.getPkD(),\n+          70, rcm2, new byte[512]);\n+      byte[][] cm2 = new byte[1][32];\n+      System.arraycopy(senderNote2.cm(), 0, cm2[0], 0, 32);\n+      IncrementalMerkleVoucherContainer voucher2 = addSimpleMerkleVoucherContainer(tree, cm2);\n+      byte[] path2 = decodePath(voucher2.path().encode());\n+      byte[] anchor2 = voucher2.root().getContent().toByteArray();\n+      long position2 = voucher2.position();\n+      builder.addSpend(senderExpsk, senderNote2, anchor2, path2, position2);\n+\n+      //receiveNote1\n+      SpendingKey receiveSk1 = SpendingKey.random();\n+      FullViewingKey receiveFvk1 = receiveSk1.fullViewingKey();\n+      IncomingViewingKey receiveIvk1 = receiveFvk1.inViewingKey();\n+      PaymentAddress receivePaymentAddress1 = receiveIvk1.address(new DiversifierT()).get();\n+      builder.addOutput(senderOvk, receivePaymentAddress1, 40, new byte[512]);\n+\n+      //receiveNote2\n+      SpendingKey receiveSk2 = SpendingKey.random();\n+      FullViewingKey receiveFvk2 = receiveSk2.fullViewingKey();\n+      IncomingViewingKey receiveIvk2 = receiveFvk2.inViewingKey();\n+      PaymentAddress receivePaymentAddress2 = receiveIvk2.address(new DiversifierT()).get();\n+      builder.addOutput(senderOvk, receivePaymentAddress2, 60, new byte[512]);\n+      ShieldedTRC20Parameters params = builder.build(true);\n+\n+      byte[] inputData = abiEncodeForTransfer(params, frontier, leafCount);\n+      Pair<Boolean, byte[]> contractResult = verifyTransfer(inputData);\n+      byte[] result = contractResult.getRight();\n+\n+      Assert.assertEquals(0, result[31]);\n+    }\n+  }\n+\n+  @Test\n+  public void verifyTransferDuplicateNf() throws ZksnarkException {\n+    byte[] frontier = new byte[32 * 33];\n+    long leafCount = 0;\n+\n+    SpendingKey senderSk = SpendingKey.random();\n+    ExpandedSpendingKey senderExpsk = senderSk.expandedSpendingKey();\n+    FullViewingKey senderFvk = senderSk.fullViewingKey();\n+    byte[] senderOvk = senderFvk.getOvk();\n+    IncomingViewingKey senderIvk = senderFvk.inViewingKey();\n+    byte[] rcm = new byte[32];\n+    JLibrustzcash.librustzcashSaplingGenerateR(rcm);\n+    PaymentAddress senderPaymentAddress = senderIvk.address(DiversifierT.random()).get();\n+\n+    ShieldedTRC20ParametersBuilder builder = new ShieldedTRC20ParametersBuilder();\n+    builder.setShieldedTRC20ParametersType(ShieldedTRC20ParametersType.TRANSFER);\n+    builder.setShieldedTRC20Address(SHIELDED_CONTRACT_ADDRESS);\n+    builder.setTransparentFromAmount(0);\n+    builder.setTransparentToAmount(0);\n+\n+    IncrementalMerkleTreeContainer tree = new IncrementalMerkleTreeContainer(\n+        new IncrementalMerkleTreeCapsule());\n+    //spendNote1\n+    Note senderNote = new Note(senderPaymentAddress.getD(), senderPaymentAddress.getPkD(),\n+        50, rcm, new byte[512]);\n+    byte[][] cm = new byte[1][32];\n+    System.arraycopy(senderNote.cm(), 0, cm[0], 0, 32);\n+    IncrementalMerkleVoucherContainer voucher = addSimpleMerkleVoucherContainer(tree, cm);\n+    byte[] path = decodePath(voucher.path().encode());\n+    byte[] anchor = voucher.root().getContent().toByteArray();\n+    long position = voucher.position();\n+    builder.addSpend(senderExpsk, senderNote, anchor, path, position);\n+    builder.addSpend(senderExpsk, senderNote, anchor, path, position);\n+\n+    //receiveNote1\n+    SpendingKey receiveSk1 = SpendingKey.random();\n+    FullViewingKey receiveFvk1 = receiveSk1.fullViewingKey();\n+    IncomingViewingKey receiveIvk1 = receiveFvk1.inViewingKey();\n+    PaymentAddress receivePaymentAddress1 = receiveIvk1.address(new DiversifierT()).get();\n+    builder.addOutput(senderOvk, receivePaymentAddress1, 40, new byte[512]);\n+\n+    //receiveNote2\n+    SpendingKey receiveSk2 = SpendingKey.random();\n+    FullViewingKey receiveFvk2 = receiveSk2.fullViewingKey();\n+    IncomingViewingKey receiveIvk2 = receiveFvk2.inViewingKey();\n+    PaymentAddress receivePaymentAddress2 = receiveIvk2.address(new DiversifierT()).get();\n+    builder.addOutput(senderOvk, receivePaymentAddress2, 60, new byte[512]);\n+    ShieldedTRC20Parameters params = builder.build(true);\n+\n+    byte[] inputData = abiEncodeForTransfer(params, frontier, leafCount);\n+    Pair<Boolean, byte[]> contractResult = verifyTransfer(inputData);\n+    byte[] result = contractResult.getRight();\n+\n+    Assert.assertEquals(0, result[31]);\n+  }\n+\n+  @Test\n+  public void verifyTransferDuplicateReceiveNotes() throws ZksnarkException {\n+    byte[] frontier = new byte[32 * 33];\n+    long leafCount = 0;\n+\n+    SpendingKey senderSk = SpendingKey.random();\n+    ExpandedSpendingKey senderExpsk = senderSk.expandedSpendingKey();\n+    FullViewingKey senderFvk = senderSk.fullViewingKey();\n+    byte[] senderOvk = senderFvk.getOvk();\n+    IncomingViewingKey senderIvk = senderFvk.inViewingKey();\n+    byte[] rcm1 = new byte[32];\n+    JLibrustzcash.librustzcashSaplingGenerateR(rcm1);\n+    byte[] rcm2 = new byte[32];\n+    JLibrustzcash.librustzcashSaplingGenerateR(rcm2);\n+    PaymentAddress senderPaymentAddress1 = senderIvk.address(DiversifierT.random()).get();\n+    PaymentAddress senderPaymentAddress2 = senderIvk.address(DiversifierT.random()).get();\n+\n+    ShieldedTRC20ParametersBuilder builder = new ShieldedTRC20ParametersBuilder();\n+    builder.setShieldedTRC20ParametersType(ShieldedTRC20ParametersType.TRANSFER);\n+    builder.setShieldedTRC20Address(SHIELDED_CONTRACT_ADDRESS);\n+    builder.setTransparentFromAmount(0);\n+    builder.setTransparentToAmount(0);\n+\n+    IncrementalMerkleTreeContainer tree = new IncrementalMerkleTreeContainer(\n+        new IncrementalMerkleTreeCapsule());\n+    //spendNote1\n+    Note senderNote1 = new Note(senderPaymentAddress1.getD(), senderPaymentAddress1.getPkD(),\n+        30, rcm1, new byte[512]);\n+    byte[][] cm1 = new byte[1][32];\n+    System.arraycopy(senderNote1.cm(), 0, cm1[0], 0, 32);\n+    IncrementalMerkleVoucherContainer voucher1 = addSimpleMerkleVoucherContainer(tree, cm1);\n+    byte[] path1 = decodePath(voucher1.path().encode());\n+    byte[] anchor1 = voucher1.root().getContent().toByteArray();\n+    long position1 = voucher1.position();\n+    builder.addSpend(senderExpsk, senderNote1, anchor1, path1, position1);\n+\n+    //spendNote2\n+    Note senderNote2 = new Note(senderPaymentAddress2.getD(), senderPaymentAddress2.getPkD(),\n+        70, rcm2, new byte[512]);\n+    byte[][] cm2 = new byte[1][32];\n+    System.arraycopy(senderNote2.cm(), 0, cm2[0], 0, 32);\n+    IncrementalMerkleVoucherContainer voucher2 = addSimpleMerkleVoucherContainer(tree, cm2);\n+    byte[] path2 = decodePath(voucher2.path().encode());\n+    byte[] anchor2 = voucher2.root().getContent().toByteArray();\n+    long position2 = voucher2.position();\n+    builder.addSpend(senderExpsk, senderNote2, anchor2, path2, position2);\n+\n+    //receiveNote1\n+    SpendingKey receiveSk = SpendingKey.random();\n+    FullViewingKey receiveFvk = receiveSk.fullViewingKey();\n+    IncomingViewingKey receiveIvk = receiveFvk.inViewingKey();\n+    PaymentAddress receivePaymentAddress = receiveIvk.address(new DiversifierT()).get();\n+    byte[] r = new byte[32];\n+    JLibrustzcash.librustzcashSaplingGenerateR(r);\n+    builder.addOutput(senderOvk, receivePaymentAddress.getD(), receivePaymentAddress.getPkD(),\n+        50, r, new byte[512]);\n+    builder.addOutput(senderOvk, receivePaymentAddress.getD(), receivePaymentAddress.getPkD(),\n+        50, r, new byte[512]);\n+    ShieldedTRC20Parameters params = builder.build(true);\n+\n+    byte[] inputData = abiEncodeForTransfer(params, frontier, leafCount);\n+    Pair<Boolean, byte[]> contractResult = verifyTransfer(inputData);\n+    byte[] result = contractResult.getRight();\n+\n+    Assert.assertEquals(0, result[31]);\n+  }\n+\n+  @Test\n+  public void verifyMintWrongValue() throws ZksnarkException {\n+    long leafCount = 0;\n+    byte[] frontier = new byte[32 * 33];\n+    long[] valueList = {0, 1000, -1};\n+\n+    for (long value : valueList) {\n+      ShieldedTRC20ParametersBuilder builder = new ShieldedTRC20ParametersBuilder();\n+      builder.setTransparentToAmount(value);\n+      builder.setShieldedTRC20Address(SHIELDED_CONTRACT_ADDRESS);\n+      builder.setShieldedTRC20ParametersType(ShieldedTRC20ParametersType.MINT);\n+\n+      //ReceiveNote\n+      SpendingKey recvSk = SpendingKey.random();\n+      FullViewingKey fullViewingKey = recvSk.fullViewingKey();\n+      IncomingViewingKey incomingViewingKey = fullViewingKey.inViewingKey();\n+      PaymentAddress paymentAddress = incomingViewingKey.address(DiversifierT.random()).get();\n+      builder.addOutput(DEFAULT_OVK, paymentAddress, 50, new byte[512]);\n+      ShieldedTRC20Parameters params = builder.build(false);\n+\n+      byte[] inputData = abiEncodeForMint(params, value, frontier, leafCount);\n+      byte[] mergedBytes = ByteUtil.merge(inputData, new byte[1]);\n+      Pair<Boolean, byte[]> contractResult = mintContract.execute(mergedBytes);\n+      byte[] result = contractResult.getRight();\n+\n+      Assert.assertEquals(0, result[31]);\n+    }\n+  }\n+\n+  @Test\n+  public void verifyBurnWrongValue() throws ZksnarkException {\n+    long value = 100L;\n+    SpendingKey senderSk = SpendingKey.random();\n+    ExpandedSpendingKey senderExpsk = senderSk.expandedSpendingKey();\n+    FullViewingKey senderFvk = senderSk.fullViewingKey();\n+    byte[] senderOvk = senderFvk.getOvk();\n+    IncomingViewingKey senderIvk = senderFvk.inViewingKey();\n+    byte[] rcm = new byte[32];\n+    JLibrustzcash.librustzcashSaplingGenerateR(rcm);\n+    PaymentAddress senderPaymentAddress = senderIvk.address(DiversifierT.random()).get();\n+\n+    ShieldedTRC20ParametersBuilder builder = new ShieldedTRC20ParametersBuilder();\n+    builder.setShieldedTRC20ParametersType(ShieldedTRC20ParametersType.BURN);\n+    builder.setShieldedTRC20Address(SHIELDED_CONTRACT_ADDRESS);\n+    builder.setTransparentToAmount(value);\n+    builder.setTransparentToAddress(PUBLIC_TO_ADDRESS);\n+    //spendNote\n+    Note senderNote = new Note(senderPaymentAddress.getD(), senderPaymentAddress.getPkD(),\n+        50, rcm, new byte[512]);\n+    byte[][] cm = new byte[1][32];\n+    System.arraycopy(senderNote.cm(), 0, cm[0], 0, 32);\n+    IncrementalMerkleTreeContainer tree = new IncrementalMerkleTreeContainer(\n+        new IncrementalMerkleTreeCapsule());\n+    IncrementalMerkleVoucherContainer voucher = addSimpleMerkleVoucherContainer(tree, cm);\n+    byte[] path = decodePath(voucher.path().encode());\n+    byte[] anchor = voucher.root().getContent().toByteArray();\n+    long position = voucher.position();\n+    builder.addSpend(senderExpsk, senderNote, anchor, path, position);\n+    ShieldedTRC20Parameters params = builder.build(true);\n+\n+    byte[] inputData = abiEncodeForBurn(params, value);\n+    Pair<Boolean, byte[]> contractResult = burnContract.execute(new byte[512]);\n+    byte[] result = contractResult.getRight();\n+\n+    Assert.assertEquals(0, result[31]);\n+  }\n+\n+  private IncrementalMerkleVoucherContainer addSimpleMerkleVoucherContainer(\n       IncrementalMerkleTreeContainer tree, byte[][] cm)\n       throws ZksnarkException {\n     for (int i = 0; i < cm.length; i++) {\n@@ -375,7 +844,7 @@ public class PrecompiledContractsVerifyProofTest {\n     return voucher;\n   }\n \n-  public byte[] decodePath(byte[] encodedPath) {\n+  private byte[] decodePath(byte[] encodedPath) {\n     Assert.assertEquals(1065, encodedPath.length);\n     byte[] path = new byte[32 * 32];\n     for (int i = 0; i < 32; i++) {\n@@ -384,8 +853,8 @@ public class PrecompiledContractsVerifyProofTest {\n     return path;\n   }\n \n-  public byte[] abiEncodeForMint(ShieldedTRC20Parameters params, long value,\n-                                 byte[] frontier, long leafCount) {\n+  private byte[] abiEncodeForMint(ShieldedTRC20Parameters params, long value,\n+                                  byte[] frontier, long leafCount) {\n     byte[] mergedBytes;\n     ShieldContract.ReceiveDescription revDesc = params.getReceiveDescription(0);\n     mergedBytes = ByteUtil.merge(\n@@ -450,11 +919,10 @@ public class PrecompiledContractsVerifyProofTest {\n         recvCountBytes,\n         output\n     );\n-    //logger.info(ByteArray.toHexString(mergedBytes));\n     return mergedBytes;\n   }\n \n-  public byte[] abiEncodeForBurn(ShieldedTRC20Parameters params, long value) {\n+  private byte[] abiEncodeForBurn(ShieldedTRC20Parameters params, long value) {\n     byte[] mergedBytes;\n     ShieldContract.SpendDescription spendDesc = params.getSpendDescription(0);\n     mergedBytes = ByteUtil.merge(\n@@ -471,10 +939,14 @@ public class PrecompiledContractsVerifyProofTest {\n     return mergedBytes;\n   }\n \n-  public byte[] longTo32Bytes(long value) {\n+  private byte[] longTo32Bytes(long value) {\n     byte[] longBytes = ByteArray.fromLong(value);\n     byte[] zeroBytes = new byte[24];\n     return ByteUtil.merge(zeroBytes, longBytes);\n   }\n \n+  private long randomLong() {\n+    return (long) Math.round(Math.random() * Long.MAX_VALUE / 2);\n+  }\n+\n }",
    "Reduce logging level of EventListenerMethodProcessor .": "diff --git a/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java b/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java\nindex 7ecd0985b8..d80189fe10 100644\n--- a/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java\n+++ b/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java\n@@ -128,8 +128,8 @@ public class EventListenerMethodProcessor implements SmartInitializingSingleton,\n \t\t\t}\n \t\t\tif (annotatedMethods.isEmpty()) {\n \t\t\t\tthis.nonAnnotatedClasses.add(type);\n-\t\t\t\tif (logger.isDebugEnabled()) {\n-\t\t\t\t\tlogger.debug(\"No @EventListener annotations found on bean class: \" + type);\n+\t\t\t\tif (logger.isTraceEnabled()) {\n+\t\t\t\t\tlogger.trace(\"No @EventListener annotations found on bean class: \" + type);\n \t\t\t\t}\n \t\t\t}\n \t\t\telse {\ndiff --git a/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java b/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java\nindex 608e4c964f..3eb3a9a819 100644\n--- a/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java\n+++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java\n@@ -231,8 +231,8 @@ public class ScheduledAnnotationBeanPostProcessor implements BeanPostProcessor,\n \t\t\t});\n \t\t\tif (annotatedMethods.isEmpty()) {\n \t\t\t\tthis.nonAnnotatedClasses.add(targetClass);\n-\t\t\t\tif (logger.isDebugEnabled()) {\n-\t\t\t\t\tlogger.debug(\"No @Scheduled annotations found on bean class: \" + bean.getClass());\n+\t\t\t\tif (logger.isTraceEnabled()) {\n+\t\t\t\t\tlogger.trace(\"No @Scheduled annotations found on bean class: \" + bean.getClass());\n \t\t\t\t}\n \t\t\t}\n \t\t\telse {\ndiff --git a/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java\nindex edf6c97634..54b8e98f80 100644\n--- a/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java\n+++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java\n@@ -208,8 +208,8 @@ public class JmsListenerAnnotationBeanPostProcessor\n \t\t\t});\n \t\t\tif (annotatedMethods.isEmpty()) {\n \t\t\t\tthis.nonAnnotatedClasses.add(bean.getClass());\n-\t\t\t\tif (logger.isDebugEnabled()) {\n-\t\t\t\t\tlogger.debug(\"No @JmsListener annotations found on bean class: \" + bean.getClass());\n+\t\t\t\tif (logger.isTraceEnabled()) {\n+\t\t\t\t\tlogger.trace(\"No @JmsListener annotations found on bean class: \" + bean.getClass());\n \t\t\t\t}\n \t\t\t}\n \t\t\telse {",
    "Automated merge with http : / / hg . netbeans . org / main": "diff --git a/lib.profiler/src/org/netbeans/lib/profiler/server/ThreadInfo.java b/lib.profiler/src/org/netbeans/lib/profiler/server/ThreadInfo.java\nindex fc5618c56..94ff3ba2f 100644\n--- a/lib.profiler/src/org/netbeans/lib/profiler/server/ThreadInfo.java\n+++ b/lib.profiler/src/org/netbeans/lib/profiler/server/ThreadInfo.java\n@@ -312,7 +312,6 @@ public class ThreadInfo {\n                 }\n \n                 ti.initialized = false;\n-                ti.resetInternalState();\n             }\n         }\n     }\ndiff --git a/profiler/src/org/netbeans/modules/profiler/Bundle.properties b/profiler/src/org/netbeans/modules/profiler/Bundle.properties\nindex 26def7cb6..5669c3ca6 100644\n--- a/profiler/src/org/netbeans/modules/profiler/Bundle.properties\n+++ b/profiler/src/org/netbeans/modules/profiler/Bundle.properties\n@@ -281,8 +281,6 @@ SaveViewAction_SaveDialogPreview=Saved view preview\\:\n SaveViewAction_SaveDialogVisible=Save only visible area\n SaveViewAction_OomeSavingMsg=<html><b>Not enough memory to save the image.</b><br><br>To avoid this error, either save smaller image or increase the -Xmx<br>value in the etc/netbeans.conf file in NetBeans IDE installation.</html>\n \n-SnapshotDataLoader_DisplayName=Profiler Snapshot Loader\n-\n SnapshotDiffWindow_AllocCaption=Allocations Comparison\n SnapshotDiffWindow_LivenessCaption=Liveness Comparison\n SnapshotDiffWindow_AllocAccessDescr=Comparison of two memory allocations snapshots\n@@ -392,4 +390,4 @@ UI_PROFILER_MODIFY_ICON_BASE=org/netbeans/modules/profiler/actions/resources/mod\n UI_PROFILER_PROFILE_APP=Profile Application\n UI_PROFILER_PROFILE_APP_ICON_BASE=org/netbeans/modules/profiler/actions/resources/profile.png\n UI_PROFILER_PROFILE_CLASS=Profile Single Class\n-UI_PROFILER_PROFILE_PROFILE_CLASS_ICON_BASE=org/netbeans/modules/profiler/actions/resources/profile.png\n\\ No newline at end of file\n+UI_PROFILER_PROFILE_PROFILE_CLASS_ICON_BASE=org/netbeans/modules/profiler/actions/resources/profile.png\ndiff --git a/profiler/src/org/netbeans/modules/profiler/MemorySnapshotPanel.java b/profiler/src/org/netbeans/modules/profiler/MemorySnapshotPanel.java\nindex 25cb39691..410a719a9 100644\n--- a/profiler/src/org/netbeans/modules/profiler/MemorySnapshotPanel.java\n+++ b/profiler/src/org/netbeans/modules/profiler/MemorySnapshotPanel.java\n@@ -339,7 +339,7 @@ public class MemorySnapshotPanel extends SnapshotPanel implements ChangeListener\n             }\n \n             memoryPanel.setFindString(findString);\n-            reversePanel.setFindString(findString);\n+            if (reversePanel != null) reversePanel.setFindString(findString);\n \n             if (!memoryPanel.findFirst()) {\n                 NetBeansProfiler.getDefaultNB().displayInfoAndWait(STRING_NOT_FOUND_MSG);\n@@ -370,7 +370,7 @@ public class MemorySnapshotPanel extends SnapshotPanel implements ChangeListener\n                 }\n \n                 memoryPanel.setFindString(findString);\n-                reversePanel.setFindString(findString);\n+                if (reversePanel != null) reversePanel.setFindString(findString);\n             }\n \n             if (!memoryPanel.findNext()) {\n@@ -404,7 +404,7 @@ public class MemorySnapshotPanel extends SnapshotPanel implements ChangeListener\n                 }\n \n                 memoryPanel.setFindString(findString);\n-                reversePanel.setFindString(findString);\n+                if (reversePanel != null) reversePanel.setFindString(findString);\n             }\n \n             if (!memoryPanel.findPrevious()) {\ndiff --git a/profiler/src/org/netbeans/modules/profiler/SnapshotDataLoader.java b/profiler/src/org/netbeans/modules/profiler/SnapshotDataLoader.java\ndeleted file mode 100644\nindex 22e8da84f..000000000\n--- a/profiler/src/org/netbeans/modules/profiler/SnapshotDataLoader.java\n+++ /dev/null\n@@ -1,128 +0,0 @@\n-/*\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n- *\n- * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.\n- *\n- * The contents of this file are subject to the terms of either the GNU\n- * General Public License Version 2 only (\"GPL\") or the Common\n- * Development and Distribution License(\"CDDL\") (collectively, the\n- * \"License\"). You may not use this file except in compliance with the\n- * License. You can obtain a copy of the License at\n- * http://www.netbeans.org/cddl-gplv2.html\n- * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the\n- * specific language governing permissions and limitations under the\n- * License.  When distributing the software, include this License Header\n- * Notice in each file and include the License file at\n- * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Sun in the GPL Version 2 section of the License file that\n- * accompanied this code. If applicable, add the following below the\n- * License Header, with the fields enclosed by brackets [] replaced by\n- * your own identifying information:\n- * \"Portions Copyrighted [year] [name of copyright owner]\"\n- *\n- * Contributor(s):\n- * The Original Software is NetBeans. The Initial Developer of the Original\n- * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun\n- * Microsystems, Inc. All Rights Reserved.\n- *\n- * If you wish your version of this file to be governed by only the CDDL\n- * or only the GPL Version 2, indicate your decision by adding\n- * \"[Contributor] elects to include this software in this distribution\n- * under the [CDDL or GPL Version 2] license.\" If you do not indicate a\n- * single choice of license, a recipient has the option to distribute\n- * your version of this file under either the CDDL, the GPL Version 2 or\n- * to extend the choice of license to its licensees as provided above.\n- * However, if you add GPL Version 2 code and therefore, elected the GPL\n- * Version 2 license, then the option applies only if the new code is\n- * made subject to such option by the copyright holder.\n- */\n-\n-package org.netbeans.modules.profiler;\n-\n-import org.openide.actions.*;\n-import org.openide.filesystems.FileObject;\n-import org.openide.loaders.DataObjectExistsException;\n-import org.openide.loaders.MultiDataObject;\n-import org.openide.loaders.UniFileLoader;\n-import org.openide.util.NbBundle;\n-import org.openide.util.actions.SystemAction;\n-\n-\n-/**\n- * Data loader which recognizes profiler snapshot files.\n- *\n- * @author Tomas Hurka\n- * @author Ian Formanek\n- */\n-public class SnapshotDataLoader extends UniFileLoader {\n-    //~ Static fields/initializers -----------------------------------------------------------------------------------------------\n-\n-    // -----\n-    // I18N String constants\n-    private static final String DISPLAY_NAME = NbBundle.getMessage(SnapshotDataLoader.class, \"SnapshotDataLoader_DisplayName\"); // NOI18N\n-                                                                                                                                // -----\n-\n-    /**\n-     * Generated serial version UID.\n-     */\n-    static final long serialVersionUID = -8188437526246245429L;\n-\n-    //~ Constructors -------------------------------------------------------------------------------------------------------------\n-\n-    /**\n-     * Creates new image loader.\n-     */\n-    public SnapshotDataLoader() {\n-        // Set the representation class.\n-        super(\"org.netbeans.modules.profiler.SnapshotDataObject\"); // NOI18N\n-    }\n-\n-    //~ Methods ------------------------------------------------------------------------------------------------------------------\n-\n-    /**\n-     * Create the image data object.\n-     *\n-     * @param primaryFile the primary file (e.g. <code>*.gif</code>)\n-     * @return the data object for this file\n-     * @throws DataObjectExistsException if the primary file already has a data object\n-     * @throws java.io.IOException       should not be thrown\n-     */\n-    protected MultiDataObject createMultiObject(FileObject primaryFile)\n-                                         throws DataObjectExistsException, java.io.IOException {\n-        return new SnapshotDataObject(primaryFile, this);\n-    }\n-\n-    /**\n-     * Gets default system actions. Overrides superclass method.\n-     */\n-    protected SystemAction[] defaultActions() {\n-        return new SystemAction[] {\n-                   SystemAction.get(OpenAction.class), SystemAction.get(FileSystemAction.class), null,\n-                   SystemAction.get(CutAction.class), SystemAction.get(CopyAction.class), SystemAction.get(PasteAction.class),\n-                   null, SystemAction.get(DeleteAction.class), SystemAction.get(RenameAction.class), null,\n-                   SystemAction.get(ToolsAction.class), SystemAction.get(PropertiesAction.class)\n-               };\n-    }\n-\n-    /**\n-     * Gets default display name. Overrides superclass method.\n-     */\n-    protected String defaultDisplayName() {\n-        return DISPLAY_NAME;\n-    }\n-\n-    protected FileObject findPrimaryFile(FileObject fo) {\n-        if (fo.isFolder()) {\n-            return null;\n-        } else {\n-            String ext = fo.getExt();\n-\n-            if (ext.equals(ResultsManager.SNAPSHOT_EXTENSION)) {\n-                return fo;\n-            } else {\n-                return null;\n-            }\n-        }\n-    }\n-}\ndiff --git a/profiler/src/org/netbeans/modules/profiler/SnapshotDataLoaderBeanInfo.java b/profiler/src/org/netbeans/modules/profiler/SnapshotDataLoaderBeanInfo.java\ndeleted file mode 100644\nindex 9c536f47b..000000000\n--- a/profiler/src/org/netbeans/modules/profiler/SnapshotDataLoaderBeanInfo.java\n+++ /dev/null\n@@ -1,76 +0,0 @@\n-/*\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n- *\n- * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.\n- *\n- * The contents of this file are subject to the terms of either the GNU\n- * General Public License Version 2 only (\"GPL\") or the Common\n- * Development and Distribution License(\"CDDL\") (collectively, the\n- * \"License\"). You may not use this file except in compliance with the\n- * License. You can obtain a copy of the License at\n- * http://www.netbeans.org/cddl-gplv2.html\n- * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the\n- * specific language governing permissions and limitations under the\n- * License.  When distributing the software, include this License Header\n- * Notice in each file and include the License file at\n- * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Sun in the GPL Version 2 section of the License file that\n- * accompanied this code. If applicable, add the following below the\n- * License Header, with the fields enclosed by brackets [] replaced by\n- * your own identifying information:\n- * \"Portions Copyrighted [year] [name of copyright owner]\"\n- *\n- * Contributor(s):\n- * The Original Software is NetBeans. The Initial Developer of the Original\n- * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun\n- * Microsystems, Inc. All Rights Reserved.\n- *\n- * If you wish your version of this file to be governed by only the CDDL\n- * or only the GPL Version 2, indicate your decision by adding\n- * \"[Contributor] elects to include this software in this distribution\n- * under the [CDDL or GPL Version 2] license.\" If you do not indicate a\n- * single choice of license, a recipient has the option to distribute\n- * your version of this file under either the CDDL, the GPL Version 2 or\n- * to extend the choice of license to its licensees as provided above.\n- * However, if you add GPL Version 2 code and therefore, elected the GPL\n- * Version 2 license, then the option applies only if the new code is\n- * made subject to such option by the copyright holder.\n- */\n-\n-package org.netbeans.modules.profiler;\n-\n-import org.openide.ErrorManager;\n-import org.openide.loaders.UniFileLoader;\n-import org.openide.util.Utilities;\n-import java.awt.Image;\n-import java.beans.*;\n-\n-\n-/**\n- * Snapshot data loader bean info.\n- *\n- * @author Tomas Hurka\n- * @author Ian Formanek\n- */\n-public class SnapshotDataLoaderBeanInfo extends SimpleBeanInfo {\n-    //~ Methods ------------------------------------------------------------------------------------------------------------------\n-\n-    public BeanInfo[] getAdditionalBeanInfo() {\n-        try {\n-            return new BeanInfo[] { Introspector.getBeanInfo(UniFileLoader.class) };\n-        } catch (IntrospectionException ie) {\n-            ErrorManager.getDefault().notify(ie);\n-\n-            return null;\n-        }\n-    }\n-\n-    public Image getIcon(final int type) {\n-        if ((type == java.beans.BeanInfo.ICON_COLOR_16x16) || (type == java.beans.BeanInfo.ICON_MONO_16x16)) {\n-            return Utilities.loadImage(\"org/netbeans/modules/profiler/resources/snapshotDataObjectCPU.gif\"); // NOI18N\n-        } else {\n-            return Utilities.loadImage(\"org/netbeans/modules/profiler/resources/snapshotDataObjectCPU32.gif\"); // NOI18N\n-        }\n-    }\n-}\ndiff --git a/profiler/src/org/netbeans/modules/profiler/SnapshotDataObject.java b/profiler/src/org/netbeans/modules/profiler/SnapshotDataObject.java\ndeleted file mode 100644\nindex 3367bdbab..000000000\n--- a/profiler/src/org/netbeans/modules/profiler/SnapshotDataObject.java\n+++ /dev/null\n@@ -1,175 +0,0 @@\n-/*\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n- *\n- * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.\n- *\n- * The contents of this file are subject to the terms of either the GNU\n- * General Public License Version 2 only (\"GPL\") or the Common\n- * Development and Distribution License(\"CDDL\") (collectively, the\n- * \"License\"). You may not use this file except in compliance with the\n- * License. You can obtain a copy of the License at\n- * http://www.netbeans.org/cddl-gplv2.html\n- * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the\n- * specific language governing permissions and limitations under the\n- * License.  When distributing the software, include this License Header\n- * Notice in each file and include the License file at\n- * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Sun in the GPL Version 2 section of the License file that\n- * accompanied this code. If applicable, add the following below the\n- * License Header, with the fields enclosed by brackets [] replaced by\n- * your own identifying information:\n- * \"Portions Copyrighted [year] [name of copyright owner]\"\n- *\n- * Contributor(s):\n- * The Original Software is NetBeans. The Initial Developer of the Original\n- * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun\n- * Microsystems, Inc. All Rights Reserved.\n- *\n- * If you wish your version of this file to be governed by only the CDDL\n- * or only the GPL Version 2, indicate your decision by adding\n- * \"[Contributor] elects to include this software in this distribution\n- * under the [CDDL or GPL Version 2] license.\" If you do not indicate a\n- * single choice of license, a recipient has the option to distribute\n- * your version of this file under either the CDDL, the GPL Version 2 or\n- * to extend the choice of license to its licensees as provided above.\n- * However, if you add GPL Version 2 code and therefore, elected the GPL\n- * Version 2 license, then the option applies only if the new code is\n- * made subject to such option by the copyright holder.\n- */\n-\n-package org.netbeans.modules.profiler;\n-\n-import org.openide.actions.OpenAction;\n-import org.openide.cookies.OpenCookie;\n-import org.openide.filesystems.FileObject;\n-import org.openide.loaders.DataNode;\n-import org.openide.loaders.DataObjectExistsException;\n-import org.openide.loaders.MultiDataObject;\n-import org.openide.loaders.MultiFileLoader;\n-import org.openide.nodes.Children;\n-import org.openide.nodes.CookieSet;\n-import org.openide.nodes.Node;\n-import org.openide.util.HelpCtx;\n-import org.openide.util.actions.SystemAction;\n-import java.awt.*;\n-import javax.swing.*;\n-\n-\n-/**\n- * Object that represents one snapshot file.\n- *\n- * @author Tomas Hurka\n- * @author Ian Formanek\n- */\n-public class SnapshotDataObject extends MultiDataObject implements CookieSet.Factory, OpenCookie {\n-    //~ Inner Classes ------------------------------------------------------------------------------------------------------------\n-\n-    /**\n-     * Node representing <code>SnapshotDataObject</code>.\n-     */\n-    private static final class SnapshotNode extends DataNode {\n-        //~ Constructors ---------------------------------------------------------------------------------------------------------\n-\n-        /**\n-         * Constructs snapshot node.\n-         */\n-        public SnapshotNode(SnapshotDataObject obj) {\n-            super(obj, Children.LEAF);\n-\n-            int type = ResultsManager.getDefault().getSnapshotType(obj.getPrimaryFile());\n-\n-            switch (type) {\n-                case LoadedSnapshot.SNAPSHOT_TYPE_CPU:\n-                    setIconBaseWithExtension(SNAPSHOT_ICON_BASE_CPU);\n-\n-                    break;\n-                case LoadedSnapshot.SNAPSHOT_TYPE_CODEFRAGMENT:\n-                    setIconBaseWithExtension(SNAPSHOT_ICON_BASE_FRAGMENT);\n-\n-                    break;\n-                case LoadedSnapshot.SNAPSHOT_TYPE_MEMORY_ALLOCATIONS:\n-                case LoadedSnapshot.SNAPSHOT_TYPE_MEMORY_LIVENESS:\n-                    setIconBaseWithExtension(SNAPSHOT_ICON_BASE_MEMORY);\n-\n-                    break;\n-            }\n-        }\n-\n-        //~ Methods --------------------------------------------------------------------------------------------------------------\n-\n-        public Image getIcon(int i) {\n-            return super.getIcon(i); //To change body of overridden methods use File | Settings | File Templates.\n-        }\n-\n-        public Action getPreferredAction() {\n-            return SystemAction.get(OpenAction.class);\n-        }\n-    }\n-\n-    //~ Static fields/initializers -----------------------------------------------------------------------------------------------\n-\n-    /**\n-     * Generated serialized version UID.\n-     */\n-    static final long serialVersionUID = -6037463545669336965L;\n-\n-    /**\n-     * Base for image resource.\n-     */\n-    private static final String SNAPSHOT_ICON_BASE_CPU = \"org/netbeans/modules/profiler/resources/snapshotDataObjectCPU.png\"; // NOI18N\n-    private static final String SNAPSHOT_ICON_BASE_MEMORY = \"org/netbeans/modules/profiler/resources/snapshotDataObjectMemory.png\"; // NOI18N\n-    private static final String SNAPSHOT_ICON_BASE_FRAGMENT = \"org/netbeans/modules/profiler/resources/snapshotDataObjectFragment.png\"; // NOI18N\n-\n-    //~ Constructors -------------------------------------------------------------------------------------------------------------\n-\n-    /**\n-     * Constructor.\n-     *\n-     * @param pf     primary file object for this data object\n-     * @param loader the data loader creating it\n-     * @throws DataObjectExistsException if there was already a data object for it\n-     */\n-    public SnapshotDataObject(FileObject pf, MultiFileLoader loader)\n-                       throws DataObjectExistsException {\n-        super(pf, loader);\n-\n-        getCookieSet().add(OpenCookie.class, this);\n-    }\n-\n-    //~ Methods ------------------------------------------------------------------------------------------------------------------\n-\n-    /**\n-     * Help context for this object.\n-     *\n-     * @return the help context\n-     */\n-    public HelpCtx getHelpCtx() {\n-        return HelpCtx.DEFAULT_HELP;\n-    }\n-\n-    /**\n-     * Implements <code>CookieSet.Factory</code> interface.\n-     */\n-    public Node.Cookie createCookie(Class clazz) {\n-        if (clazz.isAssignableFrom(OpenCookie.class)) {\n-            return this;\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    public void open() {\n-        LoadedSnapshot[] loaded = ResultsManager.getDefault().loadSnapshots(new FileObject[] { getPrimaryFile() });\n-        ResultsManager.getDefault().openSnapshots(loaded);\n-    }\n-\n-    /**\n-     * Create a node to represent the image. Overrides superclass method.\n-     *\n-     * @return node delegate\n-     */\n-    protected Node createNodeDelegate() {\n-        return new SnapshotNode(this);\n-    }\n-}\ndiff --git a/profiler/src/org/netbeans/modules/profiler/mf-layer.xml b/profiler/src/org/netbeans/modules/profiler/mf-layer.xml\nindex 1202663a7..e9f3acf26 100644\n--- a/profiler/src/org/netbeans/modules/profiler/mf-layer.xml\n+++ b/profiler/src/org/netbeans/modules/profiler/mf-layer.xml\n@@ -85,15 +85,6 @@ made subject to such option by the copyright holder.\n           </folder>\n       </folder>\n     </folder>\n-    <folder name=\"content\">\n-        <folder name=\"unknown\">\n-            <folder name=\"Factories\">\n-                <file name=\"org-netbeans-modules-profiler-SnapshotDataLoader.instance\">\n-                    <attr name=\"position\" intvalue=\"98312\"/>\n-                </file>\n-            </folder>\n-        </folder>\n-    </folder>\n   </folder>\n \n   <folder name=\"Menu\">",
    "reverting packaging changes .": "diff --git a/community/pom.xml b/community/pom.xml\nindex 7728033e90a..dafded820b5 100644\n--- a/community/pom.xml\n+++ b/community/pom.xml\n@@ -43,13 +43,7 @@\n     <org.neo4j.webservice.packages>org.neo4j.rest.web,org.neo4j.webadmin,org.neo4j.webadmin.backup,org.neo4j.webadmin.console,org.neo4j.webadmin.domain,org.neo4j.webadmin.parser,org.neo4j.webadmin.properties,org.neo4j.webadmin.resources,org.neo4j.webadmin.rest,org.neo4j.webadmin.rrd,org.neo4j.webadmin.task,org.neo4j.webadmin.utils</org.neo4j.webservice.packages>\n     <org.neo4j.server.bundledir>../system/lib</org.neo4j.server.bundledir>\n \n-    <!-- \n-         Runtime properties. These are used to bootstrap\n-         the server. All other configuration should happen\n-         through a configuration file. \n-         Each of these should have a sensible default, so\n-         that the server can operate without them defined.\n-         -->\n+    <!-- Runtime properties. These are used to bootstrap the server. All other configuration should happen through a configuration file. Each of these should have a sensible default, so that the server can operate without them defined. -->\n     <neo4j.home>${project.build.directory}/neo4j</neo4j.home>\n     <neo4j.confdir>${neo4j.home}/conf</neo4j.confdir> <!-- needed? -->\n     <neo4j.datadir>${neo4j.home}/data</neo4j.datadir> <!-- needed? -->\n@@ -169,6 +163,12 @@\n       <artifactId>neo4j-server</artifactId>\n       <version>${neo4j-server.version}</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.neo4j.app</groupId>\n+      <artifactId>neo4j-server</artifactId>\n+      <version>${neo4j-server.version}</version>\n+      <classifier>static-web</classifier> \n+    </dependency>\n     <dependency>\n       <groupId>org.neo4j.examples</groupId>\n       <artifactId>neo4j-examples</artifactId>\n@@ -192,12 +192,7 @@\n       <version>${neo4j-examples.version}</version>\n       <classifier>site</classifier>\n     </dependency>\n-    <!--dependency>\n-      <groupId>org.neo4j.app</groupId>\n-      <artifactId>neo4j-server</artifactId>\n-      <version>${neo4j-server.version}</version>\n-      <classifier>static-web</classifier>\n-    </dependency-->\n+    <!--dependency> <groupId>org.neo4j.app</groupId> <artifactId>neo4j-server</artifactId> <version>${neo4j-server.version}</version> <classifier>static-web</classifier> </dependency -->\n \n     <!-- OSGi Bundles -->\n     <dependency>\n@@ -205,7 +200,7 @@\n       <artifactId>org.apache.felix.fileinstall</artifactId>\n       <version>${felix-fileinstall.version}</version>\n     </dependency>\n-    \n+\n     <dependency>\n       <groupId>org.ops4j.pax.logging</groupId>\n       <artifactId>pax-logging-api</artifactId>\n@@ -216,7 +211,7 @@\n       <artifactId>pax-logging-service</artifactId>\n       <version>${pax-logging.version}</version>\n     </dependency>\n-    \n+\n   </dependencies>\n \n   <developers>",
    "Rename concat test": "diff --git a/rxjava-core/src/test/java/rx/operators/OperationConcatTest.java b/rxjava-core/src/test/java/rx/operators/OperatorConcatTest.java\nsimilarity index 99%\nrename from rxjava-core/src/test/java/rx/operators/OperationConcatTest.java\nrename to rxjava-core/src/test/java/rx/operators/OperatorConcatTest.java\nindex 2a56cea35..122610bba 100644\n--- a/rxjava-core/src/test/java/rx/operators/OperationConcatTest.java\n+++ b/rxjava-core/src/test/java/rx/operators/OperatorConcatTest.java\n@@ -43,7 +43,7 @@ import rx.schedulers.TestScheduler;\n import rx.subscriptions.BooleanSubscription;\n import rx.subscriptions.Subscriptions;\n \n-public class OperationConcatTest {\n+public class OperatorConcatTest {\n \n     @Test\n     public void testConcat() {",
    "Add a comment about 18h limit in ValueTimestampTimeZone": "diff --git a/h2/src/main/org/h2/value/ValueTimestampTimeZone.java b/h2/src/main/org/h2/value/ValueTimestampTimeZone.java\nindex ef5815d1d..c14d356cf 100644\n--- a/h2/src/main/org/h2/value/ValueTimestampTimeZone.java\n+++ b/h2/src/main/org/h2/value/ValueTimestampTimeZone.java\n@@ -61,6 +61,11 @@ private ValueTimestampTimeZone(long dateValue, long timeNanos,\n             throw new IllegalArgumentException(\n                     \"timeNanos out of range \" + timeNanos);\n         }\n+        /*\n+         * Some current and historic time zones have offsets larger than 12 hours.\n+         * JSR-310 determines 18 hours as maximum possible offset in both directions, so\n+         * we use this limit too for compatibility.\n+         */\n    ",
    "Remove the useless flag \\\" iossim \\\" for the / / tools / objc / ios_test . sh . bazel_template .": "diff --git a/src/main/java/com/google/devtools/build/lib/rules/objc/TestSupport.java b/src/main/java/com/google/devtools/build/lib/rules/objc/TestSupport.java\nindex e813e19319..50ad82d419 100644\n--- a/src/main/java/com/google/devtools/build/lib/rules/objc/TestSupport.java\n+++ b/src/main/java/com/google/devtools/build/lib/rules/objc/TestSupport.java\n@@ -127,7 +127,6 @@ public class TestSupport {\n    */\n   private ImmutableList<Substitution> substitutionsForSimulator() {\n     ImmutableList.Builder<Substitution> substitutions = new ImmutableList.Builder<Substitution>()\n-        .add(Substitution.of(\"%(iossim_path)s\", iossim().getRunfilesPathString()))\n         .add(Substitution.of(\"%(std_redirect_dylib_path)s\",\n             stdRedirectDylib().getRunfilesPathString()))\n         .addAll(deviceSubstitutions().getSubstitutionsForTestRunnerScript());\n@@ -173,10 +172,6 @@ public class TestSupport {\n     }\n   }\n \n-  private Artifact iossim() {\n-    return ruleContext.getPrerequisiteArtifact(SimulatorRule.IOSSIM_ATTR, Mode.HOST);\n-  }\n-\n   private Artifact stdRedirectDylib() {\n     return ruleContext.getPrerequisiteArtifact(SimulatorRule.STD_REDIRECT_DYLIB_ATTR, Mode.HOST);\n   }\n@@ -231,7 +226,6 @@ public class TestSupport {\n         .addTransitiveArtifacts(plugins());\n     if (!runWithLabDevice()) {\n       runfilesBuilder\n-          .addArtifact(iossim())\n           .addArtifact(stdRedirectDylib())\n           .addTransitiveArtifacts(deviceRunfiles())\n           .addArtifacts(testRunner().asSet());",
    "Bump version to 4 . 0 - beta - 3 .": "diff --git a/gradle.properties b/gradle.properties\nindex 942e73519..cee8aa37e 100644\n--- a/gradle.properties\n+++ b/gradle.properties\n@@ -1,4 +1,4 @@\n-thisVersion=4.0-beta-3-SNAPSHOT\n+thisVersion=4.0-beta-3\n \n apiCompatVersion=3.8\n ",
    "adding a test case": "diff --git a/test/org/opensolaris/opengrok/web/ScriptsTest.java b/test/org/opensolaris/opengrok/web/ScriptsTest.java\nnew file mode 100644\nindex 00000000000..a6451d97d72\n--- /dev/null\n+++ b/test/org/opensolaris/opengrok/web/ScriptsTest.java\n@@ -0,0 +1,138 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+ /*\n+ * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.\n+ */\n+package org.opensolaris.opengrok.web;\n+\n+import java.util.Map.Entry;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.opensolaris.opengrok.web.Scripts.Script;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+/**\n+ *\n+ * @author Krystof Tulinger\n+ */\n+public class ScriptsTest {\n+\n+    private Scripts scripts;\n+\n+    @Before\n+    public void setUp() {\n+        scripts = new Scripts();\n+    }\n+\n+    @Test\n+    public void testInstance() {\n+        scripts.addScript(new Scripts.FileScript(\"http://example.com/main1.js\", 0));\n+        scripts.addScript(new Scripts.FileScript(\"http://example.com/main2.js\", 0));\n+        scripts.addScript(new Scripts.FileScript(\"http://example.com/main3.js\", 0));\n+\n+        assertEquals(3, scripts.size());\n+        scripts.sort();\n+\n+        assertEquals(scripts.get(0).getScript(), \"http://example.com/main1.js\");\n+        assertEquals(scripts.get(0).getPriority(), 0);\n+        assertEquals(scripts.get(1).getScript(), \"http://example.com/main2.js\");\n+        assertEquals(scripts.get(1).getPriority(), 0);\n+        assertEquals(scripts.get(2).getScript(), \"http://example.com/main3.js\");\n+        assertEquals(scripts.get(2).getPriority(), 0);\n+    }\n+\n+    @Test\n+    public void testSorted() {\n+        scripts.addScript(new Scripts.FileScript(\"http://example.com/main1.js\", 3));\n+        scripts.addScript(new Scripts.FileScript(\"http://example.com/main2.js\", 1));\n+        scripts.addScript(new Scripts.FileScript(\"http://example.com/main3.js\", 2));\n+\n+        assertEquals(3, scripts.size());\n+\n+        scripts.sort();\n+\n+        assertEquals(scripts.get(0).getScript(), \"http://example.com/main2.js\");\n+        assertEquals(scripts.get(0).getPriority(), 1);\n+        assertEquals(scripts.get(1).getScript(), \"http://example.com/main3.js\");\n+        assertEquals(scripts.get(1).getPriority(), 2);\n+        assertEquals(scripts.get(2).getScript(), \"http://example.com/main1.js\");\n+        assertEquals(scripts.get(2).getPriority(), 3);\n+    }\n+\n+    @Test\n+    public void testContent() {\n+        scripts.addScript(new Scripts.FileScript(\"http://example.com/main1.js\", 0));\n+        scripts.addScript(new Scripts.FileScript(\"http://example.com/main2.js\", 0));\n+        scripts.addScript(new Scripts.FileScript(\"http://example.com/main3.js\", 0));\n+\n+        assertEquals(3, scripts.size());\n+        scripts.sort();\n+\n+        assertTrue(scripts.toHtml()\n+                .contains(\"<script type=\\\"text/javascript\\\"\"\n+                        + \" src=\\\"http://example.com/main1.js\\\"\"\n+                        + \" data-priority=\\\"0\\\"></script>\"));\n+        assertTrue(scripts.toHtml()\n+                .contains(\"<script type=\\\"text/javascript\\\"\"\n+                        + \" src=\\\"http://example.com/main2.js\\\"\"\n+                        + \" data-priority=\\\"0\\\"></script>\"));\n+        assertTrue(scripts.toHtml()\n+                .contains(\"<script type=\\\"text/javascript\\\"\"\n+                        + \" src=\\\"http://example.com/main3.js\\\"\"\n+                        + \" data-priority=\\\"0\\\"></script>\"));\n+    }\n+\n+    @Test\n+    public void testLookup() {\n+        scripts.addScript(\"\", \"utils\");\n+        scripts.addScript(\"\", \"jquery\");\n+        scripts.addScript(\"\", \"diff\");\n+        scripts.addScript(\"\", \"jquery-tablesorter\");\n+\n+        assertEquals(4, scripts.size());\n+        scripts.sort();\n+\n+        int prev = -1;\n+        for (Script s : scripts) {\n+            if (prev > s.getPriority()) {\n+                fail(\"The scripts must be sorted in ascending order by the priority, \" + prev + \" > \" + s.getPriority());\n+            }\n+            prev = s.getPriority();\n+        }\n+\n+        for (Entry<String, Script> s : Scripts.SCRIPTS.entrySet()) {\n+            if (!s.getKey().equals(\"utils\")\n+                    && !s.getKey().equals(\"jquery\")\n+                    && !s.getKey().equals(\"jquery-tablesorter\")\n+                    && !s.getKey().equals(\"diff\")) {\n+                continue;\n+            }\n+            assertTrue(scripts.toHtml() + \" must contain <script type=\\\"text/javascript\\\"\"\n+                    + \" src=\\\"\" + s.getValue().getScript() + \"\\\"\"\n+                    + \" data-priority=\\\"\" + s.getValue().getPriority() + \"\\\"></script>\", scripts.toHtml()\n+                    .contains(\"<script type=\\\"text/javascript\\\"\"\n+                            + \" src=\\\"\" + s.getValue().getScript() + \"\\\"\"\n+                            + \" data-priority=\\\"\" + s.getValue().getPriority() + \"\\\"></script>\"));\n+        }\n+    }\n+}",
    "Disable DebugTest , feature is on hold": "diff --git a/src/test/java/me/coley/recaf/DebugTest.java b/src/test/java/me/coley/recaf/DebugTest.java\nindex edb5f8aa..af361b04 100644\n--- a/src/test/java/me/coley/recaf/DebugTest.java\n+++ b/src/test/java/me/coley/recaf/DebugTest.java\n@@ -21,6 +21,8 @@ import static org.junit.jupiter.api.Assertions.*;\n  *\n  * @author Matt\n  */\n+@Disabled\n+// TODO: These tests are flaky and can fail intermittently\n public class DebugTest extends Base {\n \tprivate static final long FAIL_TIMEOUT_SECONDS = 4;\n \tprivate DebuggerResource resource;",
    "Added several new Kotlin extension methods": "diff --git a/awaitility-kotlin/src/main/kotlin/org/awaitility/kotlin/AwaitilityKt.kt b/awaitility-kotlin/src/main/kotlin/org/awaitility/kotlin/AwaitilityKt.kt\nindex f1555f0..ca3d7b2 100644\n--- a/awaitility-kotlin/src/main/kotlin/org/awaitility/kotlin/AwaitilityKt.kt\n+++ b/awaitility-kotlin/src/main/kotlin/org/awaitility/kotlin/AwaitilityKt.kt\n@@ -5,7 +5,29 @@\n  */\n package org.awaitility.kotlin\n \n+import org.awaitility.Awaitility\n+import org.awaitility.Duration\n import org.awaitility.core.ConditionFactory\n+import org.awaitility.pollinterval.PollInterval\n+import org.hamcrest.Matcher\n+import java.util.concurrent.ExecutorService\n+import java.util.concurrent.atomic.AtomicBoolean\n+import kotlin.reflect.KClass\n+\n+/**\n+ * This is typically the starting point of the Kotlin \"DSL\". Allows you to write `await` instead of `await()`. For example:\n+ *\n+ * ```\n+ * await until { myRepository.count() == 2 }\n+ * ```\n+ * @since 3.1.2\n+ */\n+val await: ConditionFactory\n+    /**\n+     * @return A new [ConditionFactory] instance\n+     * @see [Awaitility.await]\n+     */\n+    get() = Awaitility.await()\n \n /**\n  * An intermediary data type that stores the [ConditionFactory] and [fn] for later use.\n@@ -16,7 +38,7 @@ import org.awaitility.core.ConditionFactory\n  * @param fn The function to call in order to extract the value used by the predicate\n  * @see untilCallTo\n  */\n-data class AwaitilityKtUntilFunCondition<T> internal constructor(val factory: ConditionFactory, val fn: () -> T?)\n+data class AwaitilityKtUntilFunCondition<T> internal constructor(internal val factory: ConditionFactory, internal val fn: () -> T?)\n \n /**\n  * Infix function which is what allows us to write the predicate on right-hand side of [matches] without using a dot.\n@@ -29,13 +51,192 @@ infix fun <T> AwaitilityKtUntilFunCondition<T>.matches(pred: (T?) -> Boolean) =\n  * An extension function to `ConditionFactory` that allows you do write conditions such as:\n  *\n  * ```\n- * await().untilCallTo { myRepository.count() } matches { count -> count == 1 }\n+ * await untilCallTo { myRepository.count() } matches { count -> count == 1 }\n  * ```\n  *\n- * Note that the reason why we can't name this function [untilCallTo] is because it clashes with\n- * `org.awaitility.core.ConditionFactory#until(java.util.concurrent.Callable<java.lang.Boolean>)`.\n+ * Note that [await] is a getter that needs to imported from `org.awaitility.kotlin`.\n  *\n  * @param fn A function that returns the value that will be evaluated by the predicate in [matches].\n  * @since 3.1.1\n  */\n-fun <T> ConditionFactory.untilCallTo(fn: () -> T?) = AwaitilityKtUntilFunCondition(this, fn)\n\\ No newline at end of file\n+infix fun <T> ConditionFactory.untilCallTo(fn: () -> T?) = AwaitilityKtUntilFunCondition(this, fn)\n+\n+/**\n+ * An extension function to `ConditionFactory` that allows you do write conditions such as:\n+ *\n+ * ```\n+ * await until { myRepository.count() == 1 }\n+ * ```\n+ *\n+ * Note that [await] is a getter that needs to imported from `org.awaitility.kotlin`.\n+ *\n+ * @param fn The function to evaluate\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.until(fn: () -> Boolean) = until(fn)\n+\n+/**\n+ * An extension function to `ConditionFactory` that allows you do write conditions such as:\n+ *\n+ * ```\n+ * await withPollInterval ONE_HUNDRED_MILLISECONDS ignoreException IllegalArgumentException::class untilAsserted  {\n+ *     assertThat(fakeRepository.value).isEqualTo(1)\n+ *}\n+ * ```\n+ *\n+ * I.e. you can use [untilAsserted] to integrate Awaitility with an assertion library of choice.\n+ * Note that [await] is a getter that needs to imported from `org.awaitility.kotlin`\n+ *\n+ * @param fn A function that returns the value that will be evaluated by the predicate in [matches].\n+ * @return the condition factory\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.untilAsserted(fn: () -> Unit): Unit = untilAsserted(fn)\n+\n+/**\n+ * Await at most `timeout` before throwing a timeout exception.\n+ *\n+ * @param duration the duration\n+ * @return the condition factory\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.atMost(duration: Duration): ConditionFactory = atMost(duration)\n+\n+/**\n+ * Condition has to be evaluated not earlier than `timeout` before throwing a timeout exception.\n+ *\n+ * @param timeout the timeout\n+ * @return the condition factory\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.atLeast(timeout: Duration): ConditionFactory = atLeast(timeout)\n+\n+/**\n+ * Start building a named await statement. This is useful is cases when you\n+ * have several awaits in your test and you need to tell them apart. If a\n+ * named await timeout's the <code>alias</code> will be displayed indicating\n+ * which await statement that failed.\n+ *\n+ * @param alias the alias that will be shown if the await timeouts.\n+ * @return the condition factory\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.withAlias(alias: String): ConditionFactory = alias(alias)\n+\n+/**\n+ * Specify the delay that will be used before Awaitility starts polling for\n+ * the result the first time. If you don't specify a poll delay explicitly\n+ * it'll be the same as the poll interval.\n+ *\n+ * @param pollDelay the poll delay\n+ * @return the condition factory\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.withPollDelay(pollDelay: Duration): ConditionFactory = pollDelay(pollDelay)\n+\n+/**\n+ * Specify the polling interval Awaitility will use for this await\n+ * statement. This means the frequency in which the condition is checked for\n+ * completion.\n+ *\n+ * @param pollInterval the poll interval\n+ * @return the condition factory\n+ * @since 3.1.2\n+ * @see [ConditionFactory.pollInterval]\n+ */\n+infix fun ConditionFactory.withPollInterval(pollInterval: Duration): ConditionFactory = pollInterval(pollInterval)\n+\n+/**\n+ * Specify the polling interval Awaitility will use for this await\n+ * statement. For example [org.awaitility.pollinterval.FibonacciPollInterval.fibonacci].\n+ *\n+ * @param pollInterval the poll interval\n+ * @return the condition factory\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.withPollInterval(pollInterval: PollInterval): ConditionFactory = pollInterval(pollInterval)\n+\n+/**\n+ * Instruct Awaitility to ignore exceptions instance of the supplied exceptionType type.\n+ * Exceptions will be treated as evaluating to <code>false</code>.\n+ * This is useful in situations where the evaluated conditions may temporarily throw exceptions.\n+ *\n+ * @param exceptionType The exception type (hierarchy) to ignore\n+ * @return the condition factory\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.ignoreExceptionsInstanceOf(exceptionType: KClass<out Throwable>): ConditionFactory = ignoreExceptionsInstanceOf(exceptionType.javaObjectType)\n+\n+/**\n+ * Instruct Awaitility to ignore a specific exception and <i>no</i> subclasses of this exception.\n+ * Exceptions will be treated as evaluating to <code>false</code>.\n+ * This is useful in situations where the evaluated conditions may temporarily throw exceptions.\n+ *\n+ * @param exceptionType The exception type to ignore\n+ * @return the condition factory\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.ignoreException(exceptionType: KClass<out Throwable>): ConditionFactory = ignoreException(exceptionType.javaObjectType)\n+\n+/**\n+ * Instruct Awaitility to ignore exceptions that occur during evaluation and matches the supplied Hamcrest matcher.\n+ * Exceptions will be treated as evaluating to `false`. This is useful in situations where the evaluated\n+ * conditions may temporarily throw exceptions.\n+ *\n+ * @param matcher The Hamcrest matcher\n+ * @return the condition factory.\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.ignoreExceptionsMatching(matcher: Matcher<in Throwable>): ConditionFactory = ignoreExceptionsMatching(matcher)\n+\n+/**\n+ * Instruct Awaitility to ignore exceptions that occur during evaluation and matches the supplied Hamcrest matcher.\n+ * Exceptions will be treated as evaluating to `false`. This is useful in situations where the evaluated\n+ * conditions may temporarily throw exceptions.\n+ *\n+ * @param matcher The predicate\n+ * @return the condition factory.\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.ignoreExceptionsMatching(matcher: (Throwable) -> Boolean): ConditionFactory = ignoreExceptionsMatching(matcher)\n+\n+/**\n+ * Specify the executor service whose threads will be used to evaluate the poll condition in Awaitility.\n+ * Note that the executor service must be shutdown manually!\n+ *\n+ * This is an advanced feature and it should only be used sparingly.\n+ *\n+ * @param executorService The executor service that Awaitility will use when polling condition evaluations\n+ * @return the condition factory\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.pollExecutorService(executorService: ExecutorService): ConditionFactory = pollExecutorService(executorService)\n+\n+/**\n+ * Specify a thread supplier whose thread will be used to evaluate the poll condition in Awaitility.\n+ * The supplier will be called only once and the thread it returns will be reused during all condition evaluations.\n+ * This is an advanced feature and it should only be used sparingly.\n+ *\n+ * @param threadSupplier A supplier of the thread that Awaitility will use when polling\n+ * @return the condition factory\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.pollThread(threadSupplier: (Runnable) -> Thread): ConditionFactory = pollThread(threadSupplier)\n+\n+/**\n+ * Await until a Atomic boolean becomes true.\n+ *\n+ * @param atomicBoolean the atomic variable\n+ * @return the condition factory\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.untilTrue(atomicBoolean: AtomicBoolean) = untilTrue(atomicBoolean)\n+\n+/**\n+ * Await until a Atomic boolean becomes false.\n+ *\n+ * @param atomicBoolean the atomic variable\n+ * @return the condition factory\n+ * @since 3.1.2\n+ */\n+infix fun ConditionFactory.untilFalse(atomicBoolean: AtomicBoolean) = untilFalse(atomicBoolean)\n\\ No newline at end of file\ndiff --git a/awaitility-kotlin/src/test/kotlin/org/awaitility/kotlin/KotlinTest.kt b/awaitility-kotlin/src/test/kotlin/org/awaitility/kotlin/KotlinTest.kt\nindex 9cc77c1..91cf997 100644\n--- a/awaitility-kotlin/src/test/kotlin/org/awaitility/kotlin/KotlinTest.kt\n+++ b/awaitility-kotlin/src/test/kotlin/org/awaitility/kotlin/KotlinTest.kt\n@@ -16,19 +16,21 @@\n \n package org.awaitility.kotlin\n \n-import org.assertj.core.api.Assertions\n import org.assertj.core.api.Assertions.assertThat\n import org.assertj.core.api.Assertions.catchThrowable\n import org.awaitility.Awaitility.await\n+import org.awaitility.Duration.*\n import org.awaitility.classes.Asynch\n import org.awaitility.classes.FakeRepository\n import org.awaitility.classes.FakeRepositoryImpl\n import org.awaitility.core.ConditionTimeoutException\n+import org.awaitility.pollinterval.FibonacciPollInterval.fibonacci\n import org.hamcrest.Matchers.*\n import org.junit.Before\n import org.junit.Rule\n import org.junit.Test\n import org.junit.rules.ExpectedException\n+import java.util.concurrent.TimeUnit.MILLISECONDS\n import java.util.concurrent.TimeUnit.SECONDS\n import kotlin.test.assertEquals\n \n@@ -84,12 +86,39 @@ class KotlinTest {\n         await().untilCallTo { fakeRepository.value } matches { it == 1 }\n     }\n \n+    @Test\n+    fun simpleAwaitUntilWithKotlin() {\n+        Asynch(fakeRepository).perform()\n+\n+        await until { fakeRepository.value == 1 }\n+    }\n+\n+    @Test\n+    fun usingLotsOfMethodsInDsl() {\n+        Asynch(fakeRepository).perform()\n+\n+        await withAlias \"Kotlin Test\" ignoreExceptionsInstanceOf\n+                IllegalArgumentException::class withPollDelay ONE_HUNDRED_MILLISECONDS withPollInterval\n+                fibonacci().with().offset(1).and().timeUnit(MILLISECONDS) atLeast TWO_HUNDRED_MILLISECONDS atMost\n+                ONE_MINUTE untilCallTo { fakeRepository.value } matches { it == 1 }\n+\n+    }\n+\n+    @Test\n+    fun untilAsserted() {\n+        Asynch(fakeRepository).perform()\n+\n+        await withPollInterval ONE_HUNDRED_MILLISECONDS ignoreException IllegalArgumentException::class untilAsserted  {\n+            assertThat(fakeRepository.value).isEqualTo(1)\n+        }\n+    }\n+\n     @Test\n     fun untilCallToExtensionFnHasADecentErrorMessage() {\n         Asynch(fakeRepository).perform()\n \n         val throwable = catchThrowable {\n-            await().atMost(1, SECONDS).untilCallTo { fakeRepository.value } matches { it == 2 }\n+            await() atMost (ONE_SECOND) untilCallTo { fakeRepository.value } matches { it == 2 }\n         }\n \n         assertThat(throwable).isExactlyInstanceOf(ConditionTimeoutException::class.java).hasMessageEndingWith(\"expected the predicate to return <true> but it returned <false> for input of <1> within 1 seconds.\")\ndiff --git a/changelog.txt b/changelog.txt\nindex 59ac1a1..847bade 100644\n--- a/changelog.txt\n+++ b/changelog.txt\n@@ -2,6 +2,20 @@ Changelog next version\n ----------------------\n * Added \"alias\" method to awaitility which allows one to set the alias using a more english-like DSL:\n     await().with().alias(\"my alias\"). ..\n+* Added several new Kotlin extension methods. For example you can now do:\n+\n+    await withPollInterval ONE_HUNDRED_MILLISECONDS ignoreException IllegalArgumentException::class untilAsserted  {\n+        assertThat(fakeRepository.value).isEqualTo(1)\n+    }\n+\n+  or:\n+\n+     await withAlias \"Kotlin Test\" ignoreExceptionsInstanceOf\n+            IllegalArgumentException::class withPollDelay ONE_HUNDRED_MILLISECONDS withPollInterval\n+            fibonacci().with().offset(1).and().timeUnit(MILLISECONDS) atLeast TWO_HUNDRED_MILLISECONDS atMost\n+            ONE_MINUTE untilCallTo { fakeRepository.value } matches { it == 1 }\n+\n+  All extension functions can be imported from the \"org.awaitility.kotlin\" package (e.g. 'import org.awaitility.kotlin.*')\n \n Changelog 3.1.1 (2018-06-29)\n ----------------------------",
    "Adapt flink 1 . 12 .": "diff --git a/connectors/pom.xml b/connectors/pom.xml\nindex 82bcf47e..62132a4d 100644\n--- a/connectors/pom.xml\n+++ b/connectors/pom.xml\n@@ -15,12 +15,12 @@\n     <packaging>pom</packaging>\n \n     <modules>\n-        <module>connector-kafka-base</module>\n-        <module>connector-kafka-0.10</module>\n-        <module>connector-kafka-0.11</module>\n-        <module>connector-kafka</module>\n-        <module>connector-jdbc</module>\n-        <module>connector-hive</module>\n+<!--        <module>connector-kafka-base</module>-->\n+<!--        <module>connector-kafka-0.10</module>-->\n+<!--        <module>connector-kafka-0.11</module>-->\n+<!--        <module>connector-kafka</module>-->\n+<!--        <module>connector-jdbc</module>-->\n+<!--        <module>connector-hive</module>-->\n         <module>filesystem</module>\n     </modules>\n \ndiff --git a/core/pom.xml b/core/pom.xml\nindex a2d2eb41..ddf5701b 100644\n--- a/core/pom.xml\n+++ b/core/pom.xml\n@@ -202,12 +202,6 @@\n             <type>jar</type>\n             <scope>test</scope>\n         </dependency>\n-        <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.12</version>\n-            <scope>test</scope>\n-        </dependency>\n     </dependencies>\n \n </project>\ndiff --git a/core/src/main/java/com/alibaba/alink/common/io/catalog/HiveCatalog.java b/core/src/main/java/com/alibaba/alink/common/io/catalog/HiveCatalog.java\nindex e96ff80a..f6fe5c84 100644\n--- a/core/src/main/java/com/alibaba/alink/common/io/catalog/HiveCatalog.java\n+++ b/core/src/main/java/com/alibaba/alink/common/io/catalog/HiveCatalog.java\n@@ -609,7 +609,9 @@ public class HiveCatalog extends BaseCatalog {\n \t\t\t\tif (baseRow.isNullAt(i)) {\n \t\t\t\t\trow.setField(i, null);\n \t\t\t\t} else {\n-\t\t\t\t\tObject o = RowData.get(baseRow, i, dataTypes[i].getLogicalType());\n+\t\t\t\t\tObject o = RowData\n+\t\t\t\t\t\t.createFieldGetter(dataTypes[i].getLogicalType(), i)\n+\t\t\t\t\t\t.getFieldOrNull(baseRow);\n \n \t\t\t\t\tif (o instanceof BinaryStringData) {\n \t\t\t\t\t\to = o.toString();\n@@ -887,7 +889,8 @@ public class HiveCatalog extends BaseCatalog {\n \t\t\t\tobjectPath.getObjectName()\n \t\t\t),\n \t\t\tgetCatalogTable(objectPath, catalog, factory),\n-\t\t\tconfig\n+\t\t\tconfig,\n+\t\t\tfalse\n \t\t);\n \n \t\treturn factory.doAsThrowRuntime(() -> {\n@@ -925,7 +928,7 @@ public class HiveCatalog extends BaseCatalog {\n \t\t\t\tobjectPath.getObjectName()\n \t\t\t),\n \t\t\tgetCatalogTable(objectPath, catalog, factory),\n-\t\t\tconfig, !isStream\n+\t\t\tconfig, !isStream, false\n \t\t);\n \n \t\treturn factory.doAsThrowRuntime(() -> {\ndiff --git a/core/src/main/java/com/alibaba/alink/operator/batch/BatchOperator.java b/core/src/main/java/com/alibaba/alink/operator/batch/BatchOperator.java\nindex ca7d2d24..1e8e8ed1 100644\n--- a/core/src/main/java/com/alibaba/alink/operator/batch/BatchOperator.java\n+++ b/core/src/main/java/com/alibaba/alink/operator/batch/BatchOperator.java\n@@ -268,7 +268,7 @@ public abstract class BatchOperator<T extends BatchOperator <T>> extends AlgoOpe\n \n \t@Deprecated\n \tpublic static void disableLogging() {\n-\t\tMLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n+\t\t// pass\n \t}\n \n \tpublic long count() throws Exception {\ndiff --git a/core/src/main/java/com/alibaba/alink/operator/common/evaluation/BaseEvalClassStreamOp.java b/core/src/main/java/com/alibaba/alink/operator/common/evaluation/BaseEvalClassStreamOp.java\nindex ca62eb15..0161a38f 100644\n--- a/core/src/main/java/com/alibaba/alink/operator/common/evaluation/BaseEvalClassStreamOp.java\n+++ b/core/src/main/java/com/alibaba/alink/operator/common/evaluation/BaseEvalClassStreamOp.java\n@@ -5,6 +5,7 @@ import org.apache.flink.api.common.typeinfo.Types;\n import org.apache.flink.ml.api.misc.param.Params;\n import org.apache.flink.streaming.api.datastream.DataStream;\n import org.apache.flink.streaming.api.functions.windowing.AllWindowFunction;\n+import org.apache.flink.streaming.api.windowing.assigners.TumblingProcessingTimeWindows;\n import org.apache.flink.streaming.api.windowing.windows.TimeWindow;\n import org.apache.flink.types.Row;\n import org.apache.flink.util.Collector;\n@@ -45,7 +46,7 @@ public class BaseEvalClassStreamOp<T extends BaseEvalClassStreamOp <T>> extends\n \tpublic T linkFrom(StreamOperator <?>... inputs) {\n \t\tStreamOperator <?> in = checkAndGetFirst(inputs);\n \t\tString labelColName = this.get(EvalMultiClassStreamParams.LABEL_COL);\n-\t\tTypeInformation labelType = TableUtil.findColTypeWithAssertAndHint(in.getSchema(), labelColName);\n+\t\tTypeInformation<?> labelType = TableUtil.findColTypeWithAssertAndHint(in.getSchema(), labelColName);\n \t\tString positiveValue = this.get(EvalBinaryClassStreamParams.POS_LABEL_VAL_STR);\n \t\tdouble timeInterval = this.get(EvalMultiClassStreamParams.TIME_INTERVAL);\n \n@@ -65,9 +66,10 @@ public class BaseEvalClassStreamOp<T extends BaseEvalClassStreamOp <T>> extends\n \n \t\t\t\tLabelPredictionWindow predMultiWindowFunction = new LabelPredictionWindow(binary, positiveValue,\n \t\t\t\t\tlabelType);\n-\t\t\t\tstatistics = in.select(new String[] {labelColName, predResultColName})\n+\t\t\t\tstatistics = in\n+\t\t\t\t\t.select(new String[] {labelColName, predResultColName})\n \t\t\t\t\t.getDataStream()\n-\t\t\t\t\t.timeWindowAll(TimeUtil.convertTime(timeInterval))\n+\t\t\t\t\t.windowAll(TumblingProcessingTimeWindows.of(TimeUtil.convertTime(timeInterval)))\n \t\t\t\t\t.apply(predMultiWindowFunction);\n \t\t\t\tbreak;\n \t\t\t}\n@@ -79,7 +81,7 @@ public class BaseEvalClassStreamOp<T extends BaseEvalClassStreamOp <T>> extends\n \n \t\t\t\tstatistics = in.select(new String[] {labelColName, predDetailColName})\n \t\t\t\t\t.getDataStream()\n-\t\t\t\t\t.timeWindowAll(TimeUtil.convertTime(timeInterval))\n+\t\t\t\t\t.windowAll(TumblingProcessingTimeWindows.of(TimeUtil.convertTime(timeInterval)))\n \t\t\t\t\t.apply(eval);\n \t\t\t\tbreak;\n \t\t\t}\ndiff --git a/core/src/main/java/com/alibaba/alink/operator/stream/dataproc/SplitStreamOp.java b/core/src/main/java/com/alibaba/alink/operator/stream/dataproc/SplitStreamOp.java\nindex d7894d11..7e71914e 100644\n--- a/core/src/main/java/com/alibaba/alink/operator/stream/dataproc/SplitStreamOp.java\n+++ b/core/src/main/java/com/alibaba/alink/operator/stream/dataproc/SplitStreamOp.java\n@@ -1,72 +1,79 @@\n package com.alibaba.alink.operator.stream.dataproc;\n \n import org.apache.flink.ml.api.misc.param.Params;\n-import org.apache.flink.streaming.api.collector.selector.OutputSelector;\n import org.apache.flink.streaming.api.datastream.DataStream;\n-import org.apache.flink.streaming.api.datastream.SplitStream;\n+import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;\n+import org.apache.flink.streaming.api.functions.ProcessFunction;\n import org.apache.flink.table.api.Table;\n import org.apache.flink.types.Row;\n+import org.apache.flink.util.Collector;\n+import org.apache.flink.util.OutputTag;\n \n import com.alibaba.alink.common.utils.DataStreamConversionUtil;\n import com.alibaba.alink.operator.stream.StreamOperator;\n import com.alibaba.alink.params.dataproc.SplitParams;\n \n-import java.util.ArrayList;\n-import java.util.List;\n import java.util.Random;\n \n /**\n  * Split a stream data into two parts.\n  */\n-public final class SplitStreamOp extends StreamOperator <SplitStreamOp>\n-\timplements SplitParams <SplitStreamOp> {\n-\n-\tprivate static final long serialVersionUID = 9032637631974546738L;\n-\n-\tpublic SplitStreamOp() {\n-\t\tthis(new Params());\n-\t}\n-\n-\tpublic SplitStreamOp(Params params) {\n-\t\tsuper(params);\n-\t}\n-\n-\tpublic SplitStreamOp(double fraction) {\n-\t\tthis(new Params().set(FRACTION, fraction));\n-\t}\n-\n-\t@Override\n-\tpublic SplitStreamOp linkFrom(StreamOperator <?>... inputs) {\n-\t\tStreamOperator <?> in = checkAndGetFirst(inputs);\n-\t\tclass RandomSelectorOp implements OutputSelector <Row> {\n-\t\t\tprivate static final long serialVersionUID = 4734733374541426092L;\n-\t\t\tprivate double fraction;\n-\t\t\tprivate Random random = null;\n-\n-\t\t\tpublic RandomSelectorOp(double fraction) {\n-\t\t\t\tthis.fraction = fraction;\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic Iterable <String> select(Row value) {\n-\t\t\t\tif (null == random) {\n-\t\t\t\t\trandom = new Random(System.currentTimeMillis());\n-\t\t\t\t}\n-\t\t\t\tList <String> output = new ArrayList <String>(1);\n-\t\t\t\toutput.add((random.nextDouble() < fraction ? \"a\" : \"b\"));\n-\t\t\t\treturn output;\n-\t\t\t}\n-\t\t}\n-\n-\t\tSplitStream <Row> splited = in.getDataStream().split(new RandomSelectorOp(getFraction()));\n-\t\tDataStream <Row> partA = splited.select(\"a\");\n-\t\tDataStream <Row> partB = splited.select(\"b\");\n-\n-\t\tthis.setOutput(partA, in.getSchema());\n-\t\tthis.setSideOutputTables(new Table[] {\n-\t\t\tDataStreamConversionUtil.toTable(getMLEnvironmentId(), partB, in.getSchema())});\n-\n-\t\treturn this;\n-\t}\n+public final class SplitStreamOp extends StreamOperator<SplitStreamOp>\n+    implements SplitParams<SplitStreamOp> {\n \n+    private static final long serialVersionUID = 9032637631974546738L;\n+\n+    public SplitStreamOp() {\n+        this(new Params());\n+    }\n+\n+    public SplitStreamOp(Params params) {\n+        super(params);\n+    }\n+\n+    public SplitStreamOp(double fraction) {\n+        this(new Params().set(FRACTION, fraction));\n+    }\n+\n+    @Override\n+    public SplitStreamOp linkFrom(StreamOperator<?>... inputs) {\n+        StreamOperator<?> in = checkAndGetFirst(inputs);\n+\n+        SingleOutputStreamOperator<Row> split = in\n+            .getDataStream().process(new RandomSplit(getFraction()));\n+\n+        DataStream<Row> partB = split.getSideOutput(RandomSplit.B_TAG);\n+\n+        this.setOutput(split, in.getSchema());\n+\n+        this.setSideOutputTables(new Table[]{\n+            DataStreamConversionUtil.toTable(getMLEnvironmentId(), partB, in.getSchema())});\n+\n+        return this;\n+    }\n+\n+    private static final class RandomSplit extends ProcessFunction<Row, Row> {\n+        public static final OutputTag<Row> B_TAG = new OutputTag<Row>(\"b\") {\n+        };\n+\n+        private double fraction;\n+        private Random random = null;\n+\n+        public RandomSplit(double fraction) {\n+            this.fraction = fraction;\n+        }\n+\n+        @Override\n+        public void processElement(Row row, Context context, Collector<Row> collector) throws Exception {\n+            if (null == random) {\n+                random = new Random(System.currentTimeMillis());\n+            }\n+\n+            if (random.nextDouble() < fraction) {\n+                collector.collect(row);\n+            } else {\n+                context.output(B_TAG, row);\n+            }\n+        }\n+    }\n }\ndiff --git a/core/src/main/java/com/alibaba/alink/operator/stream/source/MemSourceStreamOp.java b/core/src/main/java/com/alibaba/alink/operator/stream/source/MemSourceStreamOp.java\nindex 10109300..0fb7333c 100644\n--- a/core/src/main/java/com/alibaba/alink/operator/stream/source/MemSourceStreamOp.java\n+++ b/core/src/main/java/com/alibaba/alink/operator/stream/source/MemSourceStreamOp.java\n@@ -1,5 +1,6 @@\n package com.alibaba.alink.operator.stream.source;\n \n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n import org.apache.flink.api.common.typeinfo.TypeInformation;\n import org.apache.flink.api.java.typeutils.RowTypeInfo;\n import org.apache.flink.api.java.typeutils.TypeExtractor;\n@@ -95,7 +96,8 @@ public final class MemSourceStreamOp extends BaseSourceStreamOp <MemSourceStream\n \t\tLong mlEnvironmentId = getMLEnvironmentId();\n \t\tDataStream <Row> dataStream = MLEnvironmentFactory.get(mlEnvironmentId)\n \t\t\t.getStreamExecutionEnvironment()\n-\t\t\t.fromCollection(rows, new RowTypeInfo(colTypes));\n+\t\t\t.fromCollection(rows, new RowTypeInfo(colTypes))\n+\t\t\t.assignTimestampsAndWatermarks(WatermarkStrategy.forMonotonousTimestamps());\n \t\treturn DataStreamConversionUtil.toTable(mlEnvironmentId, dataStream, colNames, colTypes);\n \t}\n \ndiff --git a/core/src/test/java/com/alibaba/alink/common/MLEnvironmentTest.java b/core/src/test/java/com/alibaba/alink/common/MLEnvironmentTest.java\nindex bcf80139..a427f48a 100644\n--- a/core/src/test/java/com/alibaba/alink/common/MLEnvironmentTest.java\n+++ b/core/src/test/java/com/alibaba/alink/common/MLEnvironmentTest.java\n@@ -2,6 +2,7 @@ package com.alibaba.alink.common;\n \n import org.apache.flink.api.java.ExecutionEnvironment;\n import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+import org.apache.flink.table.api.EnvironmentSettings;\n import org.apache.flink.table.api.bridge.java.BatchTableEnvironment;\n import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;\n \n@@ -35,7 +36,14 @@ public class MLEnvironmentTest {\n \t@Test\n \tpublic void testConstructWithStreamEnv() {\n \t\tStreamExecutionEnvironment streamExecutionEnvironment = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\tStreamTableEnvironment streamTableEnvironment = StreamTableEnvironment.create(streamExecutionEnvironment);\n+\t\tStreamTableEnvironment streamTableEnvironment = StreamTableEnvironment\n+\t\t\t.create(\n+\t\t\t\tstreamExecutionEnvironment,\n+\t\t\t\tEnvironmentSettings\n+\t\t\t\t\t.newInstance()\n+\t\t\t\t\t.useOldPlanner()\n+\t\t\t\t\t.build()\n+\t\t\t);\n \n \t\tMLEnvironment mlEnvironment = new MLEnvironment(streamExecutionEnvironment, streamTableEnvironment);\n \ndiff --git a/core/src/test/java/com/alibaba/alink/operator/batch/classification/FmClassifierTest.java b/core/src/test/java/com/alibaba/alink/operator/batch/classification/FmClassifierTest.java\nindex a739e7ca..c9933962 100644\n--- a/core/src/test/java/com/alibaba/alink/operator/batch/classification/FmClassifierTest.java\n+++ b/core/src/test/java/com/alibaba/alink/operator/batch/classification/FmClassifierTest.java\n@@ -17,7 +17,6 @@ import java.util.function.Consumer;\n public class FmClassifierTest extends AlinkTestBase {\n \t@Test\n \tpublic void testFm() throws Exception {\n-\t\t//MLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n \t\tAlinkGlobalConfiguration.setPrintProcessInfo(true);\n \t\tBatchOperator trainData = new MemSourceBatchOp(\n \t\t\tnew Object[][] {\n@@ -56,7 +55,6 @@ public class FmClassifierTest extends AlinkTestBase {\n \n \t@Test\n \tpublic void testFmSparse() throws Exception {\n-\t\t//MLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n \t\tBatchOperator trainData = new MemSourceBatchOp(\n \t\t\tnew Object[][] {\n \t\t\t\t{\"1:1.1 3:2.0\", 1.0},\n@@ -106,7 +104,6 @@ public class FmClassifierTest extends AlinkTestBase {\n \n \t@Test\n \tpublic void testPipelineFmSparse() throws Exception {\n-\t\t//MLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n \t\tBatchOperator trainData = new MemSourceBatchOp(\n \t\t\tnew Object[][] {\n \t\t\t\t{\"0:1.1 1:2.0\", 1.0},\ndiff --git a/core/src/test/java/com/alibaba/alink/operator/batch/classification/LogisticRegressionTest.java b/core/src/test/java/com/alibaba/alink/operator/batch/classification/LogisticRegressionTest.java\nindex e0bc328e..f2a929eb 100755\n--- a/core/src/test/java/com/alibaba/alink/operator/batch/classification/LogisticRegressionTest.java\n+++ b/core/src/test/java/com/alibaba/alink/operator/batch/classification/LogisticRegressionTest.java\n@@ -40,8 +40,6 @@ public class LogisticRegressionTest extends AlinkTestBase {\n \n \t@Test\n \tpublic void batchTest() throws Exception {\n-\t\tMLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n-\n \t\tString[] xVars = new String[] {\"f0\", \"f1\", \"f2\", \"f3\"};\n \t\tString yVar = \"labels\";\n \t\tString vectorName = \"vec\";\ndiff --git a/core/src/test/java/com/alibaba/alink/operator/batch/classification/NaiveBayesTextTrainBatchOpTest.java b/core/src/test/java/com/alibaba/alink/operator/batch/classification/NaiveBayesTextTrainBatchOpTest.java\nindex 44b81606..0403d944 100644\n--- a/core/src/test/java/com/alibaba/alink/operator/batch/classification/NaiveBayesTextTrainBatchOpTest.java\n+++ b/core/src/test/java/com/alibaba/alink/operator/batch/classification/NaiveBayesTextTrainBatchOpTest.java\n@@ -14,8 +14,6 @@ import java.util.List;\n public class NaiveBayesTextTrainBatchOpTest extends AlinkTestBase {\n \t@Test\n \tpublic void test() throws Exception {\n-\t\tMLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n-\n \t\tRow[] array = new Row[] {\n \t\t\tRow.of(\"1.0 1.0 1.0 1.0\", \"pos\"),\n \t\t\tRow.of(\"1.0 1.0 0.0 1.0\", \"pos\"),\ndiff --git a/core/src/test/java/com/alibaba/alink/operator/batch/classification/RandomForestTrainBatchOpTest.java b/core/src/test/java/com/alibaba/alink/operator/batch/classification/RandomForestTrainBatchOpTest.java\nindex 56f29e21..3af28769 100644\n--- a/core/src/test/java/com/alibaba/alink/operator/batch/classification/RandomForestTrainBatchOpTest.java\n+++ b/core/src/test/java/com/alibaba/alink/operator/batch/classification/RandomForestTrainBatchOpTest.java\n@@ -1,5 +1,6 @@\n package com.alibaba.alink.operator.batch.classification;\n \n+import org.apache.flink.streaming.api.TimeCharacteristic;\n import org.apache.flink.types.Row;\n \n import com.alibaba.alink.common.MLEnvironmentFactory;\n@@ -563,7 +564,6 @@ public class RandomForestTrainBatchOpTest extends AlinkTestBase {\n \t\tBatchOperator<?> evalResult = evalClassificationBatchOp.linkFrom(c45Pred);\n \n \t\tevalResult.collect();\n-\n \t\tc45PredictStreamOp.linkFrom(inputStream);\n \n \t\tEvalMultiClassStreamOp evalClassStreamOp = new EvalMultiClassStreamOp()\ndiff --git a/core/src/test/java/com/alibaba/alink/operator/batch/regression/FmRegressionTest.java b/core/src/test/java/com/alibaba/alink/operator/batch/regression/FmRegressionTest.java\nindex 34d3cccb..eb0ef745 100644\n--- a/core/src/test/java/com/alibaba/alink/operator/batch/regression/FmRegressionTest.java\n+++ b/core/src/test/java/com/alibaba/alink/operator/batch/regression/FmRegressionTest.java\n@@ -15,7 +15,6 @@ import java.util.function.Consumer;\n public class FmRegressionTest extends AlinkTestBase {\n \t@Test\n \tpublic void testFm() throws Exception {\n-\t\t//MLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n \t\tAlinkGlobalConfiguration.setPrintProcessInfo(true);\n \t\tBatchOperator trainData = new MemSourceBatchOp(\n \t\t\tnew Object[][] {\n@@ -43,7 +42,6 @@ public class FmRegressionTest extends AlinkTestBase {\n \n \t@Test\n \tpublic void testFmSparse() throws Exception {\n-\t\t//MLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n \t\tBatchOperator trainData = new MemSourceBatchOp(\n \t\t\tnew Object[][] {\n \t\t\t\t{\"1:1.1 3:2.0\", 1.0},\n@@ -82,7 +80,6 @@ public class FmRegressionTest extends AlinkTestBase {\n \n \t@Test\n \tpublic void testPipelineFmSparse() throws Exception {\n-\t\t//MLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n \t\tBatchOperator trainData = new MemSourceBatchOp(\n \t\t\tnew Object[][] {\n \t\t\t\t{\"0:1.1 1:2.0\", 1.0},\ndiff --git a/core/src/test/java/com/alibaba/alink/operator/stream/onlinelearning/OnlineLearningTest.java b/core/src/test/java/com/alibaba/alink/operator/stream/onlinelearning/OnlineLearningTest.java\nindex 6ed8f6ff..ac45f72e 100755\n--- a/core/src/test/java/com/alibaba/alink/operator/stream/onlinelearning/OnlineLearningTest.java\n+++ b/core/src/test/java/com/alibaba/alink/operator/stream/onlinelearning/OnlineLearningTest.java\n@@ -43,8 +43,6 @@ public class OnlineLearningTest extends AlinkTestBase {\n \n \t@Test\n \tpublic void Test() throws Exception {\n-\t\tMLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n-\n \t\tString[] xVars = new String[] {\"f0\", \"f1\", \"f2\", \"f3\"};\n \t\tString yVar = \"labels\";\n \ndiff --git a/core/src/test/java/com/alibaba/alink/pipeline/classification/LogisticRegTest.java b/core/src/test/java/com/alibaba/alink/pipeline/classification/LogisticRegTest.java\nindex 30f2e5a6..d0caea5b 100755\n--- a/core/src/test/java/com/alibaba/alink/pipeline/classification/LogisticRegTest.java\n+++ b/core/src/test/java/com/alibaba/alink/pipeline/classification/LogisticRegTest.java\n@@ -41,8 +41,6 @@ public class LogisticRegTest extends AlinkTestBase {\n \n \t@Test\n \tpublic void pipelineTestBatch() throws Exception {\n-\t\tMLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n-\n \t\tString[] xVars = new String[] {\"f0\", \"f1\", \"f2\", \"f3\"};\n \t\tString yVar = \"labels\";\n \t\tString vectorName = \"vec\";\ndiff --git a/core/src/test/java/com/alibaba/alink/pipeline/classification/NaiveBayesTextTest.java b/core/src/test/java/com/alibaba/alink/pipeline/classification/NaiveBayesTextTest.java\nindex 121f4a03..2c5aa508 100644\n--- a/core/src/test/java/com/alibaba/alink/pipeline/classification/NaiveBayesTextTest.java\n+++ b/core/src/test/java/com/alibaba/alink/pipeline/classification/NaiveBayesTextTest.java\n@@ -43,8 +43,6 @@ public class NaiveBayesTextTest extends AlinkTestBase {\n \n \t@Test\n \tpublic void testPipelineBatch() throws Exception {\n-\t\tMLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n-\n \t\tString labelName = \"labels\";\n \n \t\tNaiveBayesTextClassifier vnb\ndiff --git a/core/src/test/java/com/alibaba/alink/pipeline/classification/SvmTest.java b/core/src/test/java/com/alibaba/alink/pipeline/classification/SvmTest.java\nindex 278f70c8..4a3cd979 100755\n--- a/core/src/test/java/com/alibaba/alink/pipeline/classification/SvmTest.java\n+++ b/core/src/test/java/com/alibaba/alink/pipeline/classification/SvmTest.java\n@@ -43,8 +43,6 @@ public class SvmTest extends AlinkTestBase {\n \n \t@Test\n \tpublic void pipelineTest() throws Exception {\n-\t\tMLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n-\n \t\tString[] xVars = new String[] {\"f0\", \"f1\", \"f2\", \"f3\"};\n \t\tString yVar = \"labels\";\n \t\tString vectorName = \"vec\";\ndiff --git a/core/src/test/java/com/alibaba/alink/pipeline/regression/LassoRegressionTest.java b/core/src/test/java/com/alibaba/alink/pipeline/regression/LassoRegressionTest.java\nindex 5f46bd96..8d1c76c3 100755\n--- a/core/src/test/java/com/alibaba/alink/pipeline/regression/LassoRegressionTest.java\n+++ b/core/src/test/java/com/alibaba/alink/pipeline/regression/LassoRegressionTest.java\n@@ -27,8 +27,6 @@ public class LassoRegressionTest extends AlinkTestBase {\n \t\tBatchOperator vecdata = new MemSourceBatchOp(Arrays.asList(vecrows), veccolNames);\n \t\t//StreamOperator svecdata = new MemSourceStreamOp(Arrays.asList(vecrows), veccolNames);\n \n-\t\t//        MLEnvironmentFactory.getDefault().getExecutionEnvironment().getConfig().disableSysoutLogging();\n-\n \t\tString[] xVars = new String[] {\"f0\", \"f1\", \"f2\"};\n \t\tString yVar = \"label\";\n \t\tString vec = \"vec\";\ndiff --git a/core/src/test/resources/log4j-test.properties b/core/src/test/resources/log4j-test.properties\ndeleted file mode 100644\nindex fff68f90..00000000\n--- a/core/src/test/resources/log4j-test.properties\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-################################################################################\n-#  Licensed to the Apache Software Foundation (ASF) under one\n-#  or more contributor license agreements.  See the NOTICE file\n-#  distributed with this work for additional information\n-#  regarding copyright ownership.  The ASF licenses this file\n-#  to you under the Apache License, Version 2.0 (the\n-#  \"License\"); you may not use this file except in compliance\n-#  with the License.  You may obtain a copy of the License at\n-#\n-#      http://www.apache.org/licenses/LICENSE-2.0\n-#\n-#  Unless required by applicable law or agreed to in writing, software\n-#  distributed under the License is distributed on an \"AS IS\" BASIS,\n-#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-#  See the License for the specific language governing permissions and\n-# limitations under the License.\n-################################################################################\n-\n-# Set root logger level to OFF to not flood build logs\n-# set manually to INFO for debugging purposes\n-log4j.rootLogger=OFF, testlogger\n-\n-# testlogger is set to be a ConsoleAppender.\n-log4j.appender.testlogger=org.apache.log4j.ConsoleAppender\n-log4j.appender.testlogger.target = System.err\n-log4j.appender.testlogger.layout=org.apache.log4j.PatternLayout\n-log4j.appender.testlogger.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n\n\\ No newline at end of file\ndiff --git a/pom.xml b/pom.xml\nindex 3d7fdb47..bd480452 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -91,8 +91,8 @@\n         <maven.compiler.source>${java.version}</maven.compiler.source>\n         <maven.compiler.target>${java.version}</maven.compiler.target>\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n-        <alink.flink.major.version>1.11</alink.flink.major.version>\n-        <flink.version>1.11.0</flink.version>\n+        <alink.flink.major.version>1.12</alink.flink.major.version>\n+        <flink.version>1.12.0</flink.version>\n         <alink.scala.major.version>2.11</alink.scala.major.version>\n         <scala.version>2.11.11</scala.version>\n         <alink.mvn.apache-httpclient.version>4.5.3</alink.mvn.apache-httpclient.version>\ndiff --git a/test_utils/src/main/java/com/alibaba/alink/testutil/envfactory/impl/RemoteEnvFactoryImpl.java b/test_utils/src/main/java/com/alibaba/alink/testutil/envfactory/impl/RemoteEnvFactoryImpl.java\nindex 9a9f9298..fe9df0be 100644\n--- a/test_utils/src/main/java/com/alibaba/alink/testutil/envfactory/impl/RemoteEnvFactoryImpl.java\n+++ b/test_utils/src/main/java/com/alibaba/alink/testutil/envfactory/impl/RemoteEnvFactoryImpl.java\n@@ -19,20 +19,21 @@ import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;\n public class RemoteEnvFactoryImpl implements BaseEnvFactory {\n     private ExecutionEnvironmentFactory executionEnvironmentFactory;\n     private StreamExecutionEnvironmentFactory streamExecutionEnvironmentFactory;\n+    private Configuration configuration;\n \n     @Override\n     public void initialize(Properties properties) {\n         final String host = properties.getProperty(\"host\");\n         final int port = Integer.parseInt(properties.getProperty(\"port\"));\n         final int parallelism = Integer.parseInt(properties.getProperty(\"parallelism\", \"2\"));\n-        final Configuration configuration = createConfiguration(properties);\n+        this.configuration = createConfiguration(properties);\n \n         executionEnvironmentFactory = () -> {\n             RemoteEnvironment remoteEnvironment = new RemoteEnvironment(host, port, configuration, null);\n             remoteEnvironment.setParallelism(parallelism);\n             return remoteEnvironment;\n         };\n-        streamExecutionEnvironmentFactory = () -> {\n+        streamExecutionEnvironmentFactory = (Configuration configuration) -> {\n             RemoteStreamEnvironment remoteStreamEnvironment = new RemoteStreamEnvironment(host, port, configuration);\n             remoteStreamEnvironment.setParallelism(parallelism);\n             return remoteStreamEnvironment;\n@@ -42,7 +43,7 @@ public class RemoteEnvFactoryImpl implements BaseEnvFactory {\n     @Override\n     public Object getMlEnv() {\n         ExecutionEnvironment benv = executionEnvironmentFactory.createExecutionEnvironment();\n-        StreamExecutionEnvironment senv = streamExecutionEnvironmentFactory.createExecutionEnvironment();\n+        StreamExecutionEnvironment senv = streamExecutionEnvironmentFactory.createExecutionEnvironment(configuration);\n         BatchTableEnvironment btenv = BatchTableEnvironment.create(benv);\n         StreamTableEnvironment stenv = StreamTableEnvironment.create(senv);\n         return makeMlEnv(benv, btenv, senv, stenv);",
    "Added headset unplugged listener , fixed minor bug and UI changes": "diff --git a/app/src/main/java/com/sdsmdg/harjot/MusicDNA/HeadsetHandler/HeadSetReceiver.java b/app/src/main/java/com/sdsmdg/harjot/MusicDNA/HeadsetHandler/HeadSetReceiver.java\nnew file mode 100644\nindex 0000000..0bff575\n--- /dev/null\n+++ b/app/src/main/java/com/sdsmdg/harjot/MusicDNA/HeadsetHandler/HeadSetReceiver.java\n@@ -0,0 +1,36 @@\n+package com.sdsmdg.harjot.MusicDNA.HeadsetHandler;\r\n+\r\n+import android.content.BroadcastReceiver;\r\n+import android.content.Context;\r\n+import android.content.Intent;\r\n+import android.util.Log;\r\n+\r\n+/**\r\n+ * Created by Harjot on 06-Oct-16.\r\n+ */\r\n+public class HeadSetReceiver extends BroadcastReceiver {\r\n+\r\n+    onHeadsetRemovedListener mCallback;\r\n+\r\n+    public interface onHeadsetRemovedListener {\r\n+        public void onHeadsetRemoved();\r\n+    }\r\n+\r\n+\r\n+    @Override\r\n+    public void onReceive(Context context, Intent intent) {\r\n+\r\n+        mCallback = (onHeadsetRemovedListener) context;\r\n+\r\n+        if (intent.getAction().equals(Intent.ACTION_HEADSET_PLUG)) {\r\n+            int state = intent.getIntExtra(\"state\", -1);\r\n+            switch (state) {\r\n+                case 0:\r\n+                    mCallback.onHeadsetRemoved();\r\n+                    break;\r\n+                case 1:\r\n+                    break;\r\n+            }\r\n+        }\r\n+    }\r\n+}\r\ndiff --git a/app/src/main/java/com/sdsmdg/harjot/MusicDNA/HomeActivity.java b/app/src/main/java/com/sdsmdg/harjot/MusicDNA/HomeActivity.java\nindex ba4a0e4..8f4af2a 100644\n--- a/app/src/main/java/com/sdsmdg/harjot/MusicDNA/HomeActivity.java\n+++ b/app/src/main/java/com/sdsmdg/harjot/MusicDNA/HomeActivity.java\n@@ -8,6 +8,7 @@ import android.app.PendingIntent;\n import android.content.ContentResolver;\r\n import android.content.Context;\r\n import android.content.Intent;\r\n+import android.content.IntentFilter;\r\n import android.content.SharedPreferences;\r\n import android.content.pm.PackageInfo;\r\n import android.content.pm.PackageManager;\r\n@@ -73,6 +74,7 @@ import android.widget.Toast;\n import com.github.amlcurran.showcaseview.ShowcaseView;\r\n import com.github.amlcurran.showcaseview.targets.ViewTarget;\r\n import com.google.gson.Gson;\r\n+import com.sdsmdg.harjot.MusicDNA.HeadsetHandler.HeadSetReceiver;\r\n import com.sdsmdg.harjot.MusicDNA.Interfaces.StreamService;\r\n import com.sdsmdg.harjot.MusicDNA.LocalMusicFragments.AlbumFragment;\r\n import com.sdsmdg.harjot.MusicDNA.LocalMusicFragments.ArtistFragment;\r\n@@ -158,7 +160,8 @@ public class HomeActivity extends AppCompatActivity\n         MediaPlayerService.onCallbackListener,\r\n         SettingsFragment.onColorChangedListener,\r\n         SettingsFragment.onAlbumArtBackgroundToggled,\r\n-        AddToPlaylistFragment.newPlaylistListener {\r\n+        AddToPlaylistFragment.newPlaylistListener,\r\n+        HeadSetReceiver.onHeadsetRemovedListener {\r\n \r\n \r\n     ScrollView container;\r\n@@ -314,6 +317,8 @@ public class HomeActivity extends AppCompatActivity\n \r\n     static byte[] mBytes;\r\n \r\n+    HeadSetReceiver headSetReceiver;\r\n+\r\n     ShowcaseView showCase;\r\n \r\n     View playerContainer;\r\n@@ -634,6 +639,8 @@ public class HomeActivity extends AppCompatActivity\n \r\n         setContentView(R.layout.activity_home);\r\n \r\n+        headSetReceiver = new HeadSetReceiver();\r\n+\r\n         PackageInfo pInfo = null;\r\n         try {\r\n             pInfo = getPackageManager().getPackageInfo(getPackageName(), 0);\r\n@@ -1006,6 +1013,7 @@ public class HomeActivity extends AppCompatActivity\n \r\n     }\r\n \r\n+\r\n     private void getSavedData() {\r\n         try {\r\n             Gson gson = new Gson();\r\n@@ -1281,6 +1289,13 @@ public class HomeActivity extends AppCompatActivity\n         }\r\n     }\r\n \r\n+    @Override\r\n+    protected void onResume() {\r\n+        IntentFilter filter = new IntentFilter(Intent.ACTION_HEADSET_PLUG);\r\n+        registerReceiver(headSetReceiver, filter);\r\n+        super.onResume();\r\n+    }\r\n+\r\n     @Override\r\n     public boolean onCreateOptionsMenu(Menu menu) {\r\n         // Inflate the menu; this adds items to the action bar if it is present.\r\n@@ -1586,7 +1601,7 @@ public class HomeActivity extends AppCompatActivity\n             Window window = ((Activity) (ctx)).getWindow();\r\n             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\r\n             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\r\n-            window.setStatusBarColor(themeColor);\r\n+            window.setStatusBarColor(getDarkColor(themeColor));\r\n         }\r\n \r\n         isPlayerVisible = false;\r\n@@ -1844,18 +1859,22 @@ public class HomeActivity extends AppCompatActivity\n \r\n     public static void updatePoints3() {\r\n \r\n-        PlayerFragment.mVisualizerView.outerRadius = (float) (Math.min(PlayerFragment.mVisualizerView.width, PlayerFragment.mVisualizerView.height) * 0.42);\r\n-        PlayerFragment.mVisualizerView.normalizedPosition = ((float) (PlayerFragment.mMediaPlayer.getCurrentPosition()) / (float) (PlayerFragment.durationInMilliSec));\r\n-        if (mBytes == null) {\r\n-            return;\r\n+        try {\r\n+            PlayerFragment.mVisualizerView.outerRadius = (float) (Math.min(PlayerFragment.mVisualizerView.width, PlayerFragment.mVisualizerView.height) * 0.42);\r\n+            PlayerFragment.mVisualizerView.normalizedPosition = ((float) (PlayerFragment.mMediaPlayer.getCurrentPosition()) / (float) (PlayerFragment.durationInMilliSec));\r\n+            if (mBytes == null) {\r\n+                return;\r\n+            }\r\n+            PlayerFragment.mVisualizerView.angle = (float) (Math.PI - PlayerFragment.mVisualizerView.normalizedPosition * PlayerFragment.mVisualizerView.TAU);\r\n+            PlayerFragment.mVisualizerView.color = 0;\r\n+            PlayerFragment.mVisualizerView.lnDataDistance = 0;\r\n+            PlayerFragment.mVisualizerView.distance = 0;\r\n+            PlayerFragment.mVisualizerView.size = 0;\r\n+            PlayerFragment.mVisualizerView.volume = 0;\r\n+            PlayerFragment.mVisualizerView.power = 0;\r\n+        } catch (Exception e) {\r\n+\r\n         }\r\n-        PlayerFragment.mVisualizerView.angle = (float) (Math.PI - PlayerFragment.mVisualizerView.normalizedPosition * PlayerFragment.mVisualizerView.TAU);\r\n-        PlayerFragment.mVisualizerView.color = 0;\r\n-        PlayerFragment.mVisualizerView.lnDataDistance = 0;\r\n-        PlayerFragment.mVisualizerView.distance = 0;\r\n-        PlayerFragment.mVisualizerView.size = 0;\r\n-        PlayerFragment.mVisualizerView.volume = 0;\r\n-        PlayerFragment.mVisualizerView.power = 0;\r\n \r\n         float x, y;\r\n \r\n@@ -1957,18 +1976,22 @@ public class HomeActivity extends AppCompatActivity\n \r\n     public static void updatePoints() {\r\n \r\n-        PlayerFragment.mVisualizerView.outerRadius = (float) (Math.min(PlayerFragment.mVisualizerView.width, PlayerFragment.mVisualizerView.height) * 0.42);\r\n-        PlayerFragment.mVisualizerView.normalizedPosition = ((float) (PlayerFragment.mMediaPlayer.getCurrentPosition()) / (float) (PlayerFragment.durationInMilliSec));\r\n-        if (mBytes == null) {\r\n-            return;\r\n+        try {\r\n+            PlayerFragment.mVisualizerView.outerRadius = (float) (Math.min(PlayerFragment.mVisualizerView.width, PlayerFragment.mVisualizerView.height) * 0.42);\r\n+            PlayerFragment.mVisualizerView.normalizedPosition = ((float) (PlayerFragment.mMediaPlayer.getCurrentPosition()) / (float) (PlayerFragment.durationInMilliSec));\r\n+            if (mBytes == null) {\r\n+                return;\r\n+            }\r\n+            PlayerFragment.mVisualizerView.angle = (float) (Math.PI - PlayerFragment.mVisualizerView.normalizedPosition * PlayerFragment.mVisualizerView.TAU);\r\n+            PlayerFragment.mVisualizerView.color = 0;\r\n+            PlayerFragment.mVisualizerView.lnDataDistance = 0;\r\n+            PlayerFragment.mVisualizerView.distance = 0;\r\n+            PlayerFragment.mVisualizerView.size = 0;\r\n+            PlayerFragment.mVisualizerView.volume = 0;\r\n+            PlayerFragment.mVisualizerView.power = 0;\r\n+        } catch (Exception e) {\r\n+\r\n         }\r\n-        PlayerFragment.mVisualizerView.angle = (float) (Math.PI - PlayerFragment.mVisualizerView.normalizedPosition * PlayerFragment.mVisualizerView.TAU);\r\n-        PlayerFragment.mVisualizerView.color = 0;\r\n-        PlayerFragment.mVisualizerView.lnDataDistance = 0;\r\n-        PlayerFragment.mVisualizerView.distance = 0;\r\n-        PlayerFragment.mVisualizerView.size = 0;\r\n-        PlayerFragment.mVisualizerView.volume = 0;\r\n-        PlayerFragment.mVisualizerView.power = 0;\r\n \r\n         float x, y;\r\n \r\n@@ -2619,6 +2642,19 @@ public class HomeActivity extends AppCompatActivity\n         }\r\n     }\r\n \r\n+    @Override\r\n+    public void onHeadsetRemoved() {\r\n+        PlayerFragment pFrag = getPlayerFragment();\r\n+        if (pFrag != null) {\r\n+            if (pFrag.mMediaPlayer != null && pFrag.mMediaPlayer.isPlaying()) {\r\n+                if (!pFrag.pauseClicked) {\r\n+                    pFrag.pauseClicked = true;\r\n+                }\r\n+                pFrag.togglePlayPause();\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n     public static class MyAsyncTask extends AsyncTask<Void, Void, Void> {\r\n \r\n         @Override\r\n@@ -2643,6 +2679,8 @@ public class HomeActivity extends AppCompatActivity\n     protected void onPause() {\r\n         super.onPause();\r\n \r\n+        unregisterReceiver(headSetReceiver);\r\n+\r\n         new SaveSettings().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);\r\n         new SaveData().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);\r\n         new SaveQueue().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);\r\n@@ -2925,7 +2963,7 @@ public class HomeActivity extends AppCompatActivity\n \r\n     public void showFragment(String type) {\r\n \r\n-        if (!type.equals(\"viewAlbum\") && !type.equals(\"folderContent\") && !type.equals(\"viewArtist\"))\r\n+        if (!type.equals(\"viewAlbum\") && !type.equals(\"folderContent\") && !type.equals(\"viewArtist\") && !type.equals(\"playlist\") && !type.equals(\"newPlaylist\"))\r\n             hideAllFrags();\r\n \r\n         if (!searchView.isIconified()) {\r\n@@ -2988,7 +3026,8 @@ public class HomeActivity extends AppCompatActivity\n         } else if (type.equals(\"playlist\") && !isPlaylistVisible) {\r\n             setTitle(tempPlaylist.getPlaylistName());\r\n             setUpFragmentToolbar(themeColor, (String) getTitle());\r\n-            switchToolbar(toolbar, fragmentToolbar, \"left\");\r\n+            if (!isAllPlaylistVisible)\r\n+                switchToolbar(toolbar, fragmentToolbar, \"left\");\r\n             isPlaylistVisible = true;\r\n             android.support.v4.app.FragmentManager fm = getSupportFragmentManager();\r\n             ViewPlaylistFragment newFragment = (ViewPlaylistFragment) fm.findFragmentByTag(\"playlist\");\r\n@@ -3039,7 +3078,8 @@ public class HomeActivity extends AppCompatActivity\n         } else if (type.equals(\"newPlaylist\") && !isNewPlaylistVisible) {\r\n             setTitle(\"Add to Playlist\");\r\n             setUpFragmentToolbar(themeColor, (String) getTitle());\r\n-            switchToolbar(toolbar, fragmentToolbar, \"left\");\r\n+            if (!isAllPlaylistVisible)\r\n+                switchToolbar(toolbar, fragmentToolbar, \"left\");\r\n             navigationView.setCheckedItem(R.id.nav_playlists);\r\n             isNewPlaylistVisible = true;\r\n             android.support.v4.app.FragmentManager fm = getSupportFragmentManager();\r\n@@ -3674,7 +3714,7 @@ public class HomeActivity extends AppCompatActivity\n                         Window window = ((Activity) ctx).getWindow();\r\n                         window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\r\n                         window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\r\n-                        window.setStatusBarColor(themeColor);\r\n+                        window.setStatusBarColor(getDarkColor(themeColor));\r\n                     }\r\n \r\n                     if (allPlaylists == null) {\r\n@@ -4521,4 +4561,17 @@ public class HomeActivity extends AppCompatActivity\n         Pair<String, String> pair = Pair.create(minS, secS);\r\n         return pair;\r\n     }\r\n+\r\n+    public int getDarkColor(int color) {\r\n+        int darkColor = 0;\r\n+\r\n+        int r = (int) (Color.red(color) * 0.823);\r\n+        int g = (int) (Color.green(color) * 0.823);\r\n+        int b = (int) (Color.green(color) * 0.823);\r\n+\r\n+        darkColor = Color.rgb(r, g, b);\r\n+\r\n+        return darkColor;\r\n+    }\r\n+\r\n }\r\ndiff --git a/app/src/main/java/com/sdsmdg/harjot/MusicDNA/NotificationManager/MediaPlayerService.java b/app/src/main/java/com/sdsmdg/harjot/MusicDNA/NotificationManager/MediaPlayerService.java\nindex c174e0e..c96d1c0 100644\n--- a/app/src/main/java/com/sdsmdg/harjot/MusicDNA/NotificationManager/MediaPlayerService.java\n+++ b/app/src/main/java/com/sdsmdg/harjot/MusicDNA/NotificationManager/MediaPlayerService.java\n@@ -281,7 +281,7 @@ public class MediaPlayerService extends Service implements PlayerFragment.onPlay\n                     pFrag.isStart = false;\r\n                     buildNotification(generateAction(android.R.drawable.ic_media_pause, \"Pause\", Constants.ACTION_PAUSE));\r\n                 } catch (Exception e) {\r\n-                    notificationManager.cancel(1);\r\n+\r\n                 }\r\n             }\r\n \r\ndiff --git a/app/src/main/java/com/sdsmdg/harjot/MusicDNA/PlayerFragment.java b/app/src/main/java/com/sdsmdg/harjot/MusicDNA/PlayerFragment.java\nindex 8d704cc..b3163fb 100644\n--- a/app/src/main/java/com/sdsmdg/harjot/MusicDNA/PlayerFragment.java\n+++ b/app/src/main/java/com/sdsmdg/harjot/MusicDNA/PlayerFragment.java\n@@ -157,26 +157,30 @@ public class PlayerFragment extends Fragment implements\n         }\r\n \r\n         if (HomeActivity.isEqualizerEnabled) {\r\n-            bassBoost = new BassBoost(0, mMediaPlayer.getAudioSessionId());\r\n-            bassBoost.setEnabled(true);\r\n-            BassBoost.Settings bassBoostSettingTemp = bassBoost.getProperties();\r\n-            BassBoost.Settings bassBoostSetting = new BassBoost.Settings(bassBoostSettingTemp.toString());\r\n-            if (HomeActivity.bassStrength == -1) {\r\n-                bassBoostSetting.strength = (1000 / 19);\r\n-            } else {\r\n-                bassBoostSetting.strength = HomeActivity.bassStrength;\r\n-            }\r\n-            bassBoost.setProperties(bassBoostSetting);\r\n-            mMediaPlayer.setAuxEffectSendLevel(1.0f);\r\n+            try {\r\n+                bassBoost = new BassBoost(0, mMediaPlayer.getAudioSessionId());\r\n+                bassBoost.setEnabled(true);\r\n+                BassBoost.Settings bassBoostSettingTemp = bassBoost.getProperties();\r\n+                BassBoost.Settings bassBoostSetting = new BassBoost.Settings(bassBoostSettingTemp.toString());\r\n+                if (HomeActivity.bassStrength == -1) {\r\n+                    bassBoostSetting.strength = (1000 / 19);\r\n+                } else {\r\n+                    bassBoostSetting.strength = HomeActivity.bassStrength;\r\n+                }\r\n+                bassBoost.setProperties(bassBoostSetting);\r\n+                mMediaPlayer.setAuxEffectSendLevel(1.0f);\r\n+\r\n+                presetReverb = new PresetReverb(0, mMediaPlayer.getAudioSessionId());\r\n+                if (HomeActivity.reverbPreset == -1) {\r\n+                    presetReverb.setPreset(PresetReverb.PRESET_NONE);\r\n+                } else {\r\n+                    presetReverb.setPreset(HomeActivity.reverbPreset);\r\n+                }\r\n+                presetReverb.setEnabled(true);\r\n+                mMediaPlayer.setAuxEffectSendLevel(1.0f);\r\n+            } catch (Exception e) {\r\n \r\n-            presetReverb = new PresetReverb(0, mMediaPlayer.getAudioSessionId());\r\n-            if (HomeActivity.reverbPreset == -1) {\r\n-                presetReverb.setPreset(PresetReverb.PRESET_NONE);\r\n-            } else {\r\n-                presetReverb.setPreset(HomeActivity.reverbPreset);\r\n             }\r\n-            presetReverb.setEnabled(true);\r\n-            mMediaPlayer.setAuxEffectSendLevel(1.0f);\r\n         }\r\n \r\n \r\n@@ -371,7 +375,7 @@ public class PlayerFragment extends Fragment implements\n \r\n         currentAlbumArtHolder = (ImageView) view.findViewById(R.id.current_album_art_holder);\r\n \r\n-        if(HomeActivity.settings.isAlbumArtBackgroundEnabled() && (currentAlbumArtHolder.getVisibility() == View.GONE || currentAlbumArtHolder.getVisibility() == View.INVISIBLE)){\r\n+        if (HomeActivity.settings != null && HomeActivity.settings.isAlbumArtBackgroundEnabled() && (currentAlbumArtHolder.getVisibility() == View.GONE || currentAlbumArtHolder.getVisibility() == View.INVISIBLE)) {\r\n             currentAlbumArtHolder.setVisibility(View.VISIBLE);\r\n         }\r\n \r\n@@ -704,8 +708,12 @@ public class PlayerFragment extends Fragment implements\n             } catch (Exception e) {\r\n \r\n             }\r\n-            HomeActivity.spTitleAB.setText(localTrack.getTitle());\r\n-            selected_track_title.setText(localTrack.getTitle());\r\n+            try {\r\n+                HomeActivity.spTitleAB.setText(localTrack.getTitle());\r\n+                selected_track_title.setText(localTrack.getTitle());\r\n+            } catch (Exception e) {\r\n+\r\n+            }\r\n         }\r\n \r\n         temp = getTime(durationInMilliSec);\r\n@@ -1062,12 +1070,24 @@ public class PlayerFragment extends Fragment implements\n             HomeActivity.spTitleAB.setText(track.getTitle());\r\n             selected_track_title.setText(track.getTitle());\r\n         } else {\r\n-            durationInMilliSec = (int) localTrack.getDuration();\r\n-            imgLoader.DisplayImage(localTrack.getPath(), HomeActivity.spImgAB);\r\n-            imgLoader.DisplayImage(localTrack.getPath(), currentAlbumArtHolder);\r\n-            imgLoader.DisplayImage(localTrack.getPath(), selected_track_image);\r\n-            HomeActivity.spTitleAB.setText(localTrack.getTitle());\r\n-            selected_track_title.setText(localTrack.getTitle());\r\n+            try {\r\n+                durationInMilliSec = (int) localTrack.getDuration();\r\n+            } catch (Exception e) {\r\n+\r\n+            }\r\n+            try {\r\n+                imgLoader.DisplayImage(localTrack.getPath(), HomeActivity.spImgAB);\r\n+                imgLoader.DisplayImage(localTrack.getPath(), selected_track_image);\r\n+                imgLoader.DisplayImage(localTrack.getPath(), currentAlbumArtHolder);\r\n+            } catch (Exception e) {\r\n+\r\n+            }\r\n+            try {\r\n+                HomeActivity.spTitleAB.setText(localTrack.getTitle());\r\n+                selected_track_title.setText(localTrack.getTitle());\r\n+            } catch (Exception e) {\r\n+\r\n+            }\r\n         }\r\n \r\n         temp = getTime(durationInMilliSec);\r\ndiff --git a/app/src/main/java/com/sdsmdg/harjot/MusicDNA/SettingsFragment.java b/app/src/main/java/com/sdsmdg/harjot/MusicDNA/SettingsFragment.java\nindex 29f10ea..3d8bbc8 100644\n--- a/app/src/main/java/com/sdsmdg/harjot/MusicDNA/SettingsFragment.java\n+++ b/app/src/main/java/com/sdsmdg/harjot/MusicDNA/SettingsFragment.java\n@@ -147,7 +147,7 @@ public class SettingsFragment extends Fragment {\n                                     Window window = ((Activity) (getContext())).getWindow();\r\n                                     window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\r\n                                     window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\r\n-                                    window.setStatusBarColor(color);\r\n+                                    window.setStatusBarColor(getDarkColor(color));\r\n                                 }\r\n                             }\r\n                         })\r\n@@ -210,4 +210,16 @@ public class SettingsFragment extends Fragment {\n         RefWatcher refWatcher = MusicDNAApplication.getRefWatcher(getContext());\r\n         refWatcher.watch(this);\r\n     }\r\n+\r\n+    public int getDarkColor(int color) {\r\n+        int darkColor = 0;\r\n+\r\n+        int r = (int) (Color.red(color) * 0.823);\r\n+        int g = (int) (Color.green(color) * 0.823);\r\n+        int b = (int) (Color.green(color) * 0.823);\r\n+\r\n+        darkColor = Color.rgb(r, g, b);\r\n+\r\n+        return darkColor;\r\n+    }\r\n }\r\ndiff --git a/app/src/main/res/layout/app_bar_home.xml b/app/src/main/res/layout/app_bar_home.xml\nindex 7177537..e3322a9 100644\n--- a/app/src/main/res/layout/app_bar_home.xml\n+++ b/app/src/main/res/layout/app_bar_home.xml\n@@ -138,8 +138,10 @@\n \r\n                     <ImageView\r\n                         android:id=\"@+id/queue_toolbar_back_button_img\"\r\n-                        android:layout_width=\"24dp\"\r\n-                        android:layout_height=\"48dp\"\r\n+                        android:layout_width=\"50dp\"\r\n+                        android:layout_height=\"50dp\"\r\n+                        android:layout_marginLeft=\"-11dp\"\r\n+                        android:padding=\"12dp\"\r\n                         android:layout_centerVertical=\"true\"\r\n                         android:background=\"?attr/selectableItemBackgroundBorderless\"\r\n         ",
    "Add Access - Control - Request - Headers to HeaderNames": "diff --git a/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpHeaderNames.java b/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpHeaderNames.java\nindex cdd665d8..f50b1946 100644\n--- a/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpHeaderNames.java\n+++ b/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpHeaderNames.java\n@@ -87,6 +87,7 @@ public class HttpHeaderNames\n     public static final HeaderName ACCESS_CONTROL_ALLOW_CREDENTIALS = HEADER_NAME_CACHE.get(\"Access-Control-Allow-Credentials\");\n     public static final HeaderName ACCESS_CONTROL_ALLOW_HEADERS = HEADER_NAME_CACHE.get(\"Access-Control-Allow-Headers\");\n     public static final HeaderName ACCESS_CONTROL_ALLOW_METHODS = HEADER_NAME_CACHE.get(\"Access-Control-Allow-Methods\");\n+    public static final HeaderName ACCESS_CONTROL_REQUEST_HEADERS = HEADER_NAME_CACHE.get(\"Access-Control-Request-Headers\");\n     public static final HeaderName STRICT_TRANSPORT_SECURITY = HEADER_NAME_CACHE.get(\"Strict-Transport-Security\");\n     public static final HeaderName LINK = HEADER_NAME_CACHE.get(\"Link\");\n ",
    "include minimal header on page load ( <issue_id> ) .": "diff --git a/zipkin-ui/index.ejs b/zipkin-ui/index.ejs\nindex 601fe4164..1011261c3 100644\n--- a/zipkin-ui/index.ejs\n+++ b/zipkin-ui/index.ejs\n@@ -13,5 +13,19 @@\n     <title><%= htmlWebpackPlugin.options.title %></title>\n   </head>\n   <body>\n+\n+    <!-- we include a reduced header on page load, as this makes the page load feel much smoother -->\n+\n+    <div class='navbar navbar-inverse' role='navigation'>\n+      <div class='container'>\n+        <div class='navbar-header'>\n+          <a class='navbar-brand' href='#'>\n+            Zipkin<span class='muted' style='font-size: .75em; padding-left: 10px;' data-i18n=\"nav.inves\">Investigate system behavior</span>\n+          </a>\n+        </div>\n+        </div><!--/.nav-collapse -->\n+      </div>\n+    </div>\n+\n   </body>\n </html>",
    "added type witness to make make GWT compiler happy ( <issue_id> )": "diff --git a/vavr/src/main/java/io/vavr/concurrent/Future.java b/vavr/src/main/java/io/vavr/concurrent/Future.java\nindex 4e954fd08..56ed7c3ab 100644\n--- a/vavr/src/main/java/io/vavr/concurrent/Future.java\n+++ b/vavr/src/main/java/io/vavr/concurrent/Future.java\n@@ -483,7 +483,7 @@ public interface Future<T> extends Value<T> {\n         if (!futures.iterator().hasNext()) {\n             throw new NoSuchElementException(\"Future.reduce on empty futures\");\n         } else {\n-            return Future.sequence(futures).map(seq -> seq.reduceLeft(f));\n+            return Future.<T> sequence(futures).map(seq -> seq.reduceLeft(f));\n         }\n     }\n ",
    "reduce data multiplication": "diff --git a/slobrok/src/vespa/slobrok/server/exchange_manager.cpp b/slobrok/src/vespa/slobrok/server/exchange_manager.cpp\nindex 9b2f0fd5a72..e941889ffa3 100644\n--- a/slobrok/src/vespa/slobrok/server/exchange_manager.cpp\n+++ b/slobrok/src/vespa/slobrok/server/exchange_manager.cpp\n@@ -175,11 +175,9 @@ ExchangeManager::WorkPackage::WorkPackage(op_type op,\n     : _work(),\n       _doneCnt(0),\n       _numDenied(0),\n-      _donehandler(std::move(script)),\n+      _script(std::move(script)),\n       _exchanger(exchanger),\n-      _optype(op),\n-      _name(_donehandler.name()),\n-      _spec(_donehandler.spec())\n+      _optype(op)\n {\n }\n \n@@ -196,9 +194,9 @@ ExchangeManager::WorkPackage::doneItem(bool denied)\n         (int)_doneCnt, (int)_work.size(), (int)_numDenied);\n     if (_doneCnt == _work.size()) {\n         if (_numDenied > 0) {\n-            _donehandler.doneHandler(OkState(_numDenied, \"denied by remote\"));\n+            _script.doneHandler(OkState(_numDenied, \"denied by remote\"));\n         } else {\n-            _donehandler.doneHandler(OkState());\n+            _script.doneHandler(OkState());\n         }\n         delete this;\n     }\n@@ -211,6 +209,9 @@ ExchangeManager::WorkPackage::addItem(RemoteSlobrok *partner)\n     if (! partner->isConnected()) {\n         return;\n     }\n+    const char *name_p = _script.name().c_str();\n+    const char *spec_p = _script.spec().c_str();\n+\n     FRT_RPCRequest *r = _exchanger._env.getSupervisor()->AllocRPCRequest();\n     // XXX should recheck rpcsrvmap again\n     if (_optype == OP_REMOVE) {\n@@ -221,13 +222,13 @@ ExchangeManager::WorkPackage::addItem(RemoteSlobrok *partner)\n         r->SetMethodName(\"slobrok.internal.doAdd\");\n     }\n     r->GetParams()->AddString(_exchanger._env.mySpec().c_str());\n-    r->GetParams()->AddString(_name.c_str());\n-    r->GetParams()->AddString(_spec.c_str());\n+    r->GetParams()->AddString(name_p);\n+    r->GetParams()->AddString(spec_p);\n \n     _work.push_back(std::make_unique<WorkItem>(*this, partner, r));\n     LOG(spam, \"added %s(%s,%s,%s) for %s to workpackage\",\n         r->GetMethodName(), _exchanger._env.mySpec().c_str(),\n-        _name.c_str(), _spec.c_str(), partner->getName().c_str());\n+        name_p, spec_p, partner->getName().c_str());\n }\n \n \n@@ -237,7 +238,7 @@ ExchangeManager::WorkPackage::expedite()\n     size_t sz = _work.size();\n     if (sz == 0) {\n         // no remotes need doing.\n-        _donehandler.doneHandler(OkState());\n+        _script.doneHandler(OkState());\n         delete this;\n         return;\n     }\ndiff --git a/slobrok/src/vespa/slobrok/server/exchange_manager.h b/slobrok/src/vespa/slobrok/server/exchange_manager.h\nindex f86807a6f68..85f5996e3d2 100644\n--- a/slobrok/src/vespa/slobrok/server/exchange_manager.h\n+++ b/slobrok/src/vespa/slobrok/server/exchange_manager.h\n@@ -62,13 +62,11 @@ private:\n         std::vector<std::unique_ptr<WorkItem>> _work;\n         size_t        _doneCnt;\n         size_t        _numDenied;\n-        ScriptCommand _donehandler;\n+        ScriptCommand _script;\n     public:\n         ExchangeManager &_exchanger;\n         enum op_type { OP_NOP, OP_WANTADD, OP_DOADD, OP_REMOVE };\n         op_type _optype;\n-        const std::string _name;\n-        const std::string _spec;\n         void addItem(RemoteSlobrok *partner);\n         void doneItem(bool denied);\n         void expedite();",
    "send count of Golang clients to PhoneHome app ( <issue_id> ) .": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/ConnectedClientOperationTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/ConnectedClientOperationTest.java\nindex d5c2c6b57a..3d4bbafe0a 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/ConnectedClientOperationTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/ConnectedClientOperationTest.java\n@@ -69,6 +69,7 @@ public class ConnectedClientOperationTest extends HazelcastTestSupport {\n         assertEquals(0, clientStats.get(ClientType.CSHARP).intValue());\n         assertEquals(0, clientStats.get(ClientType.NODEJS).intValue());\n         assertEquals(0, clientStats.get(ClientType.PYTHON).intValue());\n+        assertEquals(0, clientStats.get(ClientType.GO).intValue());\n         assertEquals(0, clientStats.get(ClientType.OTHER).intValue());\n     }\n \ndiff --git a/hazelcast/src/main/java/com/hazelcast/client/ClientTypes.java b/hazelcast/src/main/java/com/hazelcast/client/ClientTypes.java\nindex 8210ae6d9e..e12f47c6e8 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/ClientTypes.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/ClientTypes.java\n@@ -59,6 +59,11 @@ public final class ClientTypes {\n      */\n     public static final String NODEJS = \"NJS\";\n \n+    /**\n+     * Go client protocol ID\n+     */\n+    public static final String GO = \"GOO\";\n+\n     private ClientTypes() {\n     }\n }\ndiff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java b/hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java\nindex d7240f21ed..a1b75e8d9f 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointImpl.java\n@@ -178,6 +178,9 @@ public final class ClientEndpointImpl implements ClientEndpoint {\n             case NODEJS_CLIENT:\n                 type = ClientType.NODEJS;\n                 break;\n+            case GO_CLIENT:\n+                type = ClientType.GO;\n+                break;\n             case BINARY_CLIENT:\n                 type = ClientType.OTHER;\n                 break;\ndiff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/ClientEngineImpl.java b/hazelcast/src/main/java/com/hazelcast/client/impl/ClientEngineImpl.java\nindex 1c325e37c2..ba8f236334 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/ClientEngineImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/ClientEngineImpl.java\n@@ -545,6 +545,7 @@ public class ClientEngineImpl implements ClientEngine, CoreService, PreJoinAware\n         return liveMappings.isEmpty() ? null : new OnJoinClientOperation(liveMappings);\n     }\n \n+    @SuppressWarnings(\"checkstyle:methodlength\")\n     @Override\n     public Map<ClientType, Integer> getConnectedClientStats() {\n \n@@ -553,6 +554,7 @@ public class ClientEngineImpl implements ClientEngine, CoreService, PreJoinAware\n         int numberOfJavaClients = 0;\n         int numberOfNodeJSClients = 0;\n         int numberOfPythonClients = 0;\n+        int numberOfGoClients = 0;\n         int numberOfOtherClients = 0;\n \n         OperationService operationService = node.nodeEngine.getOperationService();\n@@ -596,6 +598,9 @@ public class ClientEngineImpl implements ClientEngine, CoreService, PreJoinAware\n                 case PYTHON:\n                     numberOfPythonClients++;\n                     break;\n+                case GO:\n+                    numberOfGoClients++;\n+                    break;\n                 default:\n                     numberOfOtherClients++;\n             }\n@@ -606,6 +611,7 @@ public class ClientEngineImpl implements ClientEngine, CoreService, PreJoinAware\n         resultMap.put(ClientType.JAVA, numberOfJavaClients);\n         resultMap.put(ClientType.NODEJS, numberOfNodeJSClients);\n         resultMap.put(ClientType.PYTHON, numberOfPythonClients);\n+        resultMap.put(ClientType.GO, numberOfGoClients);\n         resultMap.put(ClientType.OTHER, numberOfOtherClients);\n \n         return resultMap;\ndiff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/task/AuthenticationBaseMessageTask.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/task/AuthenticationBaseMessageTask.java\nindex 795583f79e..11aa8b9b6e 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/task/AuthenticationBaseMessageTask.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/task/AuthenticationBaseMessageTask.java\n@@ -223,6 +223,8 @@ public abstract class AuthenticationBaseMessageTask<P> extends AbstractStableClu\n             connection.setType(ConnectionType.RUBY_CLIENT);\n         } else if (ClientTypes.NODEJS.equals(type)) {\n             connection.setType(ConnectionType.NODEJS_CLIENT);\n+        } else if (ClientTypes.GO.equals(type)) {\n+            connection.setType(ConnectionType.GO_CLIENT);\n         } else {\n             clientEngine.getLogger(getClass()).info(\"Unknown client type: \" + type);\n             connection.setType(ConnectionType.BINARY_CLIENT);\ndiff --git a/hazelcast/src/main/java/com/hazelcast/core/ClientType.java b/hazelcast/src/main/java/com/hazelcast/core/ClientType.java\nindex 33068a69ac..a286e792bb 100644\n--- a/hazelcast/src/main/java/com/hazelcast/core/ClientType.java\n+++ b/hazelcast/src/main/java/com/hazelcast/core/ClientType.java\n@@ -26,5 +26,6 @@ public enum ClientType {\n     PYTHON,\n     RUBY,\n     NODEJS,\n+    GO,\n     OTHER\n }\ndiff --git a/hazelcast/src/main/java/com/hazelcast/nio/ConnectionType.java b/hazelcast/src/main/java/com/hazelcast/nio/ConnectionType.java\nindex 3937e28b93..01243c2c28 100644\n--- a/hazelcast/src/main/java/com/hazelcast/nio/ConnectionType.java\n+++ b/hazelcast/src/main/java/com/hazelcast/nio/ConnectionType.java\n@@ -32,6 +32,7 @@ public enum ConnectionType {\n     PYTHON_CLIENT(false, true),\n     RUBY_CLIENT(false, true),\n     NODEJS_CLIENT(false, true),\n+    GO_CLIENT(false, true),\n     BINARY_CLIENT(false, true),\n     REST_CLIENT(false, false),\n     MEMCACHE_CLIENT(false, false);\ndiff --git a/hazelcast/src/main/java/com/hazelcast/util/PhoneHome.java b/hazelcast/src/main/java/com/hazelcast/util/PhoneHome.java\nindex 4a63439aab..02a596ffaa 100644\n--- a/hazelcast/src/main/java/com/hazelcast/util/PhoneHome.java\n+++ b/hazelcast/src/main/java/com/hazelcast/util/PhoneHome.java\n@@ -166,6 +166,7 @@ public final class PhoneHome {\n         parameterCreator.addParam(\"cjv\", Integer.toString(clusterClientStats.get(ClientType.JAVA)));\n         parameterCreator.addParam(\"cnjs\", Integer.toString(clusterClientStats.get(ClientType.NODEJS)));\n         parameterCreator.addParam(\"cpy\", Integer.toString(clusterClientStats.get(ClientType.PYTHON)));\n+        parameterCreator.addParam(\"cgo\", Integer.toString(clusterClientStats.get(ClientType.GO)));\n         parameterCreator.addParam(\"cuptm\", Long.toString(clusterUpTime));\n         parameterCreator.addParam(\"nuptm\", Long.toString(runtimeMxBean.getUptime()));\n         parameterCreator.addParam(\"jvmn\", runtimeMxBean.getVmName());\ndiff --git a/hazelcast/src/test/java/com/hazelcast/util/PhoneHomeTest.java b/hazelcast/src/test/java/com/hazelcast/util/PhoneHomeTest.java\nindex f2bd08e777..49fcc43bd9 100644\n--- a/hazelcast/src/test/java/com/hazelcast/util/PhoneHomeTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/util/PhoneHomeTest.java\n@@ -78,6 +78,7 @@ public class PhoneHomeTest extends HazelcastTestSupport {\n         assertEquals(parameters.get(\"cjv\"), \"0\");\n         assertEquals(parameters.get(\"cnjs\"), \"0\");\n         assertEquals(parameters.get(\"cpy\"), \"0\");\n+        assertEquals(parameters.get(\"cgo\"), \"0\");\n         assertEquals(parameters.get(\"jetv\"), \"\");\n         assertFalse(Integer.parseInt(parameters.get(\"cuptm\")) < 0);\n         assertNotEquals(parameters.get(\"nuptm\"), \"0\");",
    "rollback the release of byte - buddy - 1 . 6 . 2": "diff --git a/byte-buddy-agent/pom.xml b/byte-buddy-agent/pom.xml\nindex 1afe933685..93bb4a08bd 100644\n--- a/byte-buddy-agent/pom.xml\n+++ b/byte-buddy-agent/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <artifactId>byte-buddy-parent</artifactId>\n         <groupId>net.bytebuddy</groupId>\n-        <version>1.6.3-SNAPSHOT</version>\n+        <version>1.6.2-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>byte-buddy-agent</artifactId>\ndiff --git a/byte-buddy-android/pom.xml b/byte-buddy-android/pom.xml\nindex 67ebfc9f45..7f771f47cb 100644\n--- a/byte-buddy-android/pom.xml\n+++ b/byte-buddy-android/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <artifactId>byte-buddy-parent</artifactId>\n         <groupId>net.bytebuddy</groupId>\n-        <version>1.6.3-SNAPSHOT</version>\n+        <version>1.6.2-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>byte-buddy-android</artifactId>\ndiff --git a/byte-buddy-benchmark/pom.xml b/byte-buddy-benchmark/pom.xml\nindex 451fef8193..180dc5e5c1 100644\n--- a/byte-buddy-benchmark/pom.xml\n+++ b/byte-buddy-benchmark/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <artifactId>byte-buddy-parent</artifactId>\n         <groupId>net.bytebuddy</groupId>\n-        <version>1.6.3-SNAPSHOT</version>\n+        <version>1.6.2-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>byte-buddy-benchmark</artifactId>\ndiff --git a/byte-buddy-dep/pom.xml b/byte-buddy-dep/pom.xml\nindex 794db5b4b2..82c74661bd 100644\n--- a/byte-buddy-dep/pom.xml\n+++ b/byte-buddy-dep/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>net.bytebuddy</groupId>\n         <artifactId>byte-buddy-parent</artifactId>\n-        <version>1.6.3-SNAPSHOT</version>\n+        <version>1.6.2-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>byte-buddy-dep</artifactId>\ndiff --git a/byte-buddy-gradle-plugin/pom.xml b/byte-buddy-gradle-plugin/pom.xml\nindex 393a79e54a..f9f44d0548 100644\n--- a/byte-buddy-gradle-plugin/pom.xml\n+++ b/byte-buddy-gradle-plugin/pom.xml\n@@ -3,7 +3,7 @@\n     <parent>\n         <artifactId>byte-buddy-parent</artifactId>\n         <groupId>net.bytebuddy</groupId>\n-        <version>1.6.3-SNAPSHOT</version>\n+        <version>1.6.2-SNAPSHOT</version>\n     </parent>\n     <modelVersion>4.0.0</modelVersion>\n \ndiff --git a/byte-buddy-maven-plugin/pom.xml b/byte-buddy-maven-plugin/pom.xml\nindex 9ef9210c46..cc80b4a93e 100644\n--- a/byte-buddy-maven-plugin/pom.xml\n+++ b/byte-buddy-maven-plugin/pom.xml\n@@ -3,7 +3,7 @@\n     <parent>\n         <artifactId>byte-buddy-parent</artifactId>\n         <groupId>net.bytebuddy</groupId>\n-        <version>1.6.3-SNAPSHOT</version>\n+        <version>1.6.2-SNAPSHOT</version>\n     </parent>\n     <modelVersion>4.0.0</modelVersion>\n \ndiff --git a/byte-buddy/pom.xml b/byte-buddy/pom.xml\nindex 22e14e43a1..0b54a7e1fd 100644\n--- a/byte-buddy/pom.xml\n+++ b/byte-buddy/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>net.bytebuddy</groupId>\n         <artifactId>byte-buddy-parent</artifactId>\n-        <version>1.6.3-SNAPSHOT</version>\n+        <version>1.6.2-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>byte-buddy</artifactId>\ndiff --git a/pom.xml b/pom.xml\nindex e146bcdebe..bf2ecde7da 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -4,7 +4,7 @@\n \n     <groupId>net.bytebuddy</groupId>\n     <artifactId>byte-buddy-parent</artifactId>\n-    <version>1.6.3-SNAPSHOT</version>\n+    <version>1.6.2-SNAPSHOT</version>\n     <packaging>pom</packaging>\n \n     <inceptionYear>2014</inceptionYear>",
    "Rename BambooStorageDb to StorIODb": "diff --git a/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/BaseTest.java b/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/BaseTest.java\nindex 753c9844..8aaf510b 100644\n--- a/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/BaseTest.java\n+++ b/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/BaseTest.java\n@@ -4,26 +4,26 @@ import android.database.sqlite.SQLiteDatabase;\n import android.support.annotation.NonNull;\n import android.support.test.InstrumentationRegistry;\n \n-import com.pushtorefresh.storio.db.BambooStorageDb;\n-import com.pushtorefresh.storio.db.impl.BambooStorageSQLiteDb;\n+import com.pushtorefresh.storio.db.StorIODb;\n+import com.pushtorefresh.storio.db.impl.StorIOSQLiteDb;\n \n import org.junit.Before;\n \n public abstract class BaseTest {\n \n-    @NonNull protected BambooStorageDb bambooStorageDb;\n+    @NonNull protected StorIODb storIODb;\n     @NonNull protected SQLiteDatabase db;\n \n     @Before public void setUp() throws Exception {\n         db = new TestSQLiteOpenHelper(InstrumentationRegistry.getContext())\n                 .getWritableDatabase();\n \n-        bambooStorageDb = new BambooStorageSQLiteDb.Builder()\n+        storIODb = new StorIOSQLiteDb.Builder()\n                 .db(db)\n                 .build();\n \n         // clearing db before each test case\n-        bambooStorageDb\n+        storIODb\n                 .delete()\n                 .byQuery(User.DELETE_ALL)\n                 .prepare()\ndiff --git a/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/DeleteTest.java b/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/DeleteTest.java\nindex e6b2951b..e5093f0f 100644\n--- a/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/DeleteTest.java\n+++ b/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/DeleteTest.java\n@@ -18,7 +18,7 @@ public class DeleteTest extends BaseTest {\n     @Test public void deleteOne() {\n         final User user = TestFactory.newUser();\n \n-        final PutResult putResult = bambooStorageDb\n+        final PutResult putResult = storIODb\n                 .put()\n                 .object(user)\n                 .withMapFunc(User.MAP_TO_CONTENT_VALUES)\n@@ -32,7 +32,7 @@ public class DeleteTest extends BaseTest {\n         assertEquals(1, cursorAfterInsert.getCount());\n         cursorAfterInsert.close();\n \n-        final DeleteResult deleteResult = bambooStorageDb\n+        final DeleteResult deleteResult = storIODb\n                 .delete()\n                 .object(user)\n                 .withMapFunc(User.MAP_TO_DELETE_QUERY)\ndiff --git a/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/InsertTest.java b/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/InsertTest.java\nindex 824e69bf..177fb4c3 100644\n--- a/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/InsertTest.java\n+++ b/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/InsertTest.java\n@@ -21,7 +21,7 @@ public class InsertTest extends BaseTest {\n     @Test public void insertOne() {\n         final User user = TestFactory.newUser();\n \n-        final PutResult putResult = bambooStorageDb\n+        final PutResult putResult = storIODb\n                 .put()\n                 .object(user)\n                 .withMapFunc(User.MAP_TO_CONTENT_VALUES)\n@@ -31,7 +31,7 @@ public class InsertTest extends BaseTest {\n \n         assertTrue(putResult.wasInserted());\n \n-        // why we created BambooStorage: nobody loves nulls\n+        // why we created StorIODb: nobody loves nulls\n         final Cursor cursor = db.query(User.TABLE, null, null, null, null, null, null);\n \n         // asserting that values was really inserted to db\n@@ -49,7 +49,7 @@ public class InsertTest extends BaseTest {\n     @Test public void insertCollection() {\n         final List<User> users = TestFactory.newUsers(3);\n \n-        final PutCollectionResult<User> putResult = bambooStorageDb\n+        final PutCollectionResult<User> putResult = storIODb\n                 .put()\n                 .objects(users)\n                 .withMapFunc(User.MAP_TO_CONTENT_VALUES)\ndiff --git a/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/QueryTest.java b/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/QueryTest.java\nindex c8189211..c08427e9 100644\n--- a/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/QueryTest.java\n+++ b/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/QueryTest.java\n@@ -19,7 +19,7 @@ public class QueryTest extends BaseTest {\n     @Test public void queryAll() {\n         final List<User> users = TestFactory.newUsers(3);\n \n-        final PutCollectionResult<User> putResult = bambooStorageDb\n+        final PutCollectionResult<User> putResult = storIODb\n                 .put()\n                 .objects(users)\n                 .withMapFunc(User.MAP_TO_CONTENT_VALUES)\n@@ -29,7 +29,7 @@ public class QueryTest extends BaseTest {\n \n         assertEquals(users.size(), putResult.numberOfInserts());\n \n-        final List<User> usersFromQuery = bambooStorageDb\n+        final List<User> usersFromQuery = storIODb\n                 .get()\n                 .listOfObjects(User.class)\n                 .withMapFunc(User.MAP_FROM_CURSOR)\ndiff --git a/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/UpdateTest.java b/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/UpdateTest.java\nindex e9e5b56a..59fbca53 100644\n--- a/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/UpdateTest.java\n+++ b/bamboo-storage/src/androidTest/java/com/pushtorefresh/storio/db/integration_test/impl/UpdateTest.java\n@@ -21,7 +21,7 @@ public class UpdateTest extends BaseTest {\n     @Test public void updateOne() {\n         final User userForInsert = TestFactory.newUser();\n \n-        final PutResult insertResult = bambooStorageDb\n+        final PutResult insertResult = storIODb\n                 .put()\n                 .object(userForInsert)\n                 .withMapFunc(User.MAP_TO_CONTENT_VALUES)\n@@ -36,7 +36,7 @@ public class UpdateTest extends BaseTest {\n                 \"new@email.com\" // new value\n         );\n \n-        final PutResult updateResult = bambooStorageDb\n+        final PutResult updateResult = storIODb\n                 .put()\n                 .object(userForUpdate)\n                 .withMapFunc(User.MAP_TO_CONTENT_VALUES)\n@@ -60,7 +60,7 @@ public class UpdateTest extends BaseTest {\n     @Test public void updateCollection() {\n         final List<User> usersForInsert = TestFactory.newUsers(3);\n \n-        final PutCollectionResult<User> insertResult = bambooStorageDb\n+        final PutCollectionResult<User> insertResult = storIODb\n                 .put()\n                 .objects(usersForInsert)\n                 .withMapFunc(User.MAP_TO_CONTENT_VALUES)\n@@ -76,7 +76,7 @@ public class UpdateTest extends BaseTest {\n             usersForUpdate.add(new User(usersForInsert.get(i).getId(), \"new\" + i + \"@email.com\" + i));\n         }\n \n-        final PutCollectionResult<User> updateResult = bambooStorageDb\n+        final PutCollectionResult<User> updateResult = storIODb\n                 .put()\n                 .objects(usersForUpdate)\n                 .withMapFunc(User.MAP_TO_CONTENT_VALUES)\ndiff --git a/bamboo-storage/src/main/AndroidManifest.xml b/bamboo-storage/src/main/AndroidManifest.xml\nindex 154224ec..002f1043 100644\n--- a/bamboo-storage/src/main/AndroidManifest.xml\n+++ b/bamboo-storage/src/main/AndroidManifest.xml\n@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest\n-    package=\"com.pushtorefresh.android.bamboostorage\"\n+    package=\"com.pushtorefresh.storio\"\n     xmlns:android=\"http://schemas.android.com/apk/res/android\">\n \n </manifest>\n\\ No newline at end of file\ndiff --git a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/BambooStorageDb.java b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/StorIODb.java\nsimilarity index 85%\nrename from bamboo-storage/src/main/java/com/pushtorefresh/storio/db/BambooStorageDb.java\nrename to bamboo-storage/src/main/java/com/pushtorefresh/storio/db/StorIODb.java\nindex 05527445..dd0032fc 100644\n--- a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/BambooStorageDb.java\n+++ b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/StorIODb.java\n@@ -26,10 +26,10 @@ import rx.Observable;\n  * It's an abstract class instead of interface because we want to have ability to add some\n  * changes without breaking existing implementations\n  */\n-public abstract class BambooStorageDb {\n+public abstract class StorIODb {\n \n     /**\n-     * Prepares \"execute sql\" operation for BambooStorage\n+     * Prepares \"execute sql\" operation for {@link StorIODb}\n      * Allows to execute a single SQL statement that is NOT a SELECT/INSERT/UPDATE/DELETE.\n      *\n      * @return builder for PreparedExecSql\n@@ -37,24 +37,24 @@ public abstract class BambooStorageDb {\n     @NonNull public abstract PreparedExecSql.Builder execSql();\n \n     /**\n-     * Prepares \"get\" operation for BambooStorage\n-     * Allows to get information from BambooStorage\n+     * Prepares \"get\" operation for {@link StorIODb}\n+     * Allows to get information from {@link StorIODb}\n      *\n      * @return builder for PreparedGet\n      */\n     @NonNull public abstract PreparedGet.Builder get();\n \n     /**\n-     * Prepares \"put\" operation for BambooStorage\n-     * Allows to insert/update information in BambooStorage\n+     * Prepares \"put\" operation for {@link StorIODb}\n+     * Allows to insert/update information in {@link StorIODb}\n      *\n      * @return builder for PreparedPut\n      */\n     @NonNull public abstract PreparedPut.Builder put();\n \n     /**\n-     * Prepares \"delete\" operation for BambooStorage\n-     * Allows to delete information from BambooStorage\n+     * Prepares \"delete\" operation for {@link StorIODb}\n+     * Allows to delete information from {@link StorIODb}\n      *\n      * @return builder for PreparedDelete\n      */\n@@ -81,15 +81,15 @@ public abstract class BambooStorageDb {\n     }\n \n     /**\n-     * Hides some internal operations for BambooStorage to make API of BambooStorage clean and easy to understand\n+     * Hides some internal operations for {@link StorIODb} to make API of {@link StorIODb} clean and easy to understand\n      *\n-     * @return implementation of Internal operations for BambooStorage\n+     * @return implementation of Internal operations for {@link StorIODb}\n      */\n     @NonNull public abstract Internal internal();\n \n     /**\n-     * Hides some internal operations for BambooStorage\n-     * to make API of BambooStorage clean and easy to understand\n+     * Hides some internal operations of {@link StorIODb}\n+     * to make {@link StorIODb} API clean and easy to understand\n      */\n     public static abstract class Internal {\n \n@@ -143,16 +143,16 @@ public abstract class BambooStorageDb {\n         public abstract int delete(@NonNull DeleteQuery deleteQuery);\n \n         /**\n-         * Notifies subscribers about changes happened in {@link BambooStorageDb}\n+         * Notifies subscribers about changes happened in {@link StorIODb}\n          * Operations can be executed in transaction or one operation can affect multiple tables, so to reduce number of notifications\n          * you can call this method once and provide Changes object\n          *\n-         * @param changes changes happened in {@link BambooStorageDb}\n+         * @param changes changes happened in {@link StorIODb}\n          */\n         public abstract void notifyAboutChanges(@NonNull Changes changes);\n \n         /**\n-         * BambooStorage implementation could not provide support for transactions\n+         * {@link StorIODb} implementation could not provide support for transactions\n          *\n          * @return true if transactions are supported, false otherwise\n          */\ndiff --git a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/impl/BambooStorageSQLiteDb.java b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/impl/StorIOSQLiteDb.java\nsimilarity index 92%\nrename from bamboo-storage/src/main/java/com/pushtorefresh/storio/db/impl/BambooStorageSQLiteDb.java\nrename to bamboo-storage/src/main/java/com/pushtorefresh/storio/db/impl/StorIOSQLiteDb.java\nindex a4d22444..ed9931d2 100644\n--- a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/impl/BambooStorageSQLiteDb.java\n+++ b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/impl/StorIOSQLiteDb.java\n@@ -6,7 +6,7 @@ import android.database.sqlite.SQLiteDatabase;\n import android.database.sqlite.SQLiteOpenHelper;\n import android.support.annotation.NonNull;\n \n-import com.pushtorefresh.storio.db.BambooStorageDb;\n+import com.pushtorefresh.storio.db.StorIODb;\n import com.pushtorefresh.storio.db.operation.Changes;\n import com.pushtorefresh.storio.db.operation.delete.PreparedDelete;\n import com.pushtorefresh.storio.db.operation.exec_sql.PreparedExecSql;\n@@ -24,7 +24,7 @@ import rx.Observable;\n import rx.functions.Func1;\n import rx.subjects.PublishSubject;\n \n-public class BambooStorageSQLiteDb extends BambooStorageDb {\n+public class StorIOSQLiteDb extends StorIODb {\n \n     /**\n      * Real db\n@@ -32,17 +32,17 @@ public class BambooStorageSQLiteDb extends BambooStorageDb {\n     @NonNull private final SQLiteDatabase db;\n \n     /**\n-     * Reactive bus for notifying observers about changes in BambooStorageDb\n+     * Reactive bus for notifying observers about changes in StorIODb\n      * One change can affect several tables, so we use Set<String> as set of changed tables per event\n      */\n     @NonNull private final PublishSubject<Changes> changesBus = PublishSubject.create();\n \n     /**\n-     * Implementation of {@link BambooStorageDb.Internal}\n+     * Implementation of {@link StorIODb.Internal}\n      */\n     @NonNull private final Internal internal = new InternalImpl();\n \n-    protected BambooStorageSQLiteDb(@NonNull SQLiteDatabase db) {\n+    protected StorIOSQLiteDb(@NonNull SQLiteDatabase db) {\n         this.db = db;\n     }\n \n@@ -172,12 +172,12 @@ public class BambooStorageSQLiteDb extends BambooStorageDb {\n             return this;\n         }\n \n-        @NonNull public BambooStorageSQLiteDb build() {\n+        @NonNull public StorIOSQLiteDb build() {\n             if (db == null) {\n                 throw new IllegalStateException(\"Please specify SQLiteDatabase instance\");\n             }\n \n-            return new BambooStorageSQLiteDb(db);\n+            return new StorIOSQLiteDb(db);\n         }\n     }\n }\ndiff --git a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/Changes.java b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/Changes.java\nindex 8aca0961..4e1c8460 100644\n--- a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/Changes.java\n+++ b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/Changes.java\n@@ -2,11 +2,13 @@ package com.pushtorefresh.storio.db.operation;\n \n import android.support.annotation.NonNull;\n \n+import com.pushtorefresh.storio.db.StorIODb;\n+\n import java.util.Collections;\n import java.util.Set;\n \n /**\n- * Contains information about one or more changed tables in {@link com.pushtorefresh.storio.db.BambooStorageDb}\n+ * Contains information about one or more changed tables in {@link StorIODb}\n  */\n public class Changes {\n \ndiff --git a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDelete.java b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDelete.java\nindex d14b9e9c..bbad0d57 100644\n--- a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDelete.java\n+++ b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDelete.java\n@@ -2,7 +2,7 @@ package com.pushtorefresh.storio.db.operation.delete;\n \n import android.support.annotation.NonNull;\n \n-import com.pushtorefresh.storio.db.BambooStorageDb;\n+import com.pushtorefresh.storio.db.StorIODb;\n import com.pushtorefresh.storio.db.operation.PreparedOperation;\n import com.pushtorefresh.storio.db.query.DeleteQuery;\n \n@@ -10,30 +10,30 @@ import java.util.Collection;\n \n public abstract class PreparedDelete<T> implements PreparedOperation<T>{\n \n-    @NonNull protected BambooStorageDb bambooStorageDb;\n+    @NonNull protected StorIODb storIODb;\n \n-    protected PreparedDelete(@NonNull BambooStorageDb bambooStorageDb) {\n-        this.bambooStorageDb = bambooStorageDb;\n+    protected PreparedDelete(@NonNull StorIODb storIODb) {\n+        this.storIODb = storIODb;\n     }\n \n     public static class Builder {\n \n-        @NonNull private final BambooStorageDb bambooStorageDb;\n+        @NonNull private final StorIODb storIODb;\n \n-        public Builder(@NonNull BambooStorageDb bambooStorageDb) {\n-            this.bambooStorageDb = bambooStorageDb;\n+        public Builder(@NonNull StorIODb storIODb) {\n+            this.storIODb = storIODb;\n         }\n \n         @NonNull public PreparedDeleteByQuery.Builder byQuery(@NonNull DeleteQuery deleteQuery) {\n-            return new PreparedDeleteByQuery.Builder(bambooStorageDb, deleteQuery);\n+            return new PreparedDeleteByQuery.Builder(storIODb, deleteQuery);\n         }\n \n         @NonNull public <T> PreparedDeleteObject.Builder<T> object(@NonNull T object) {\n-            return new PreparedDeleteObject.Builder<>(bambooStorageDb, object);\n+            return new PreparedDeleteObject.Builder<>(storIODb, object);\n         }\n \n         @NonNull public <T> PreparedDeleteCollectionOfObjects.Builder<T> objects(@NonNull Collection<T> objects) {\n-            return new PreparedDeleteCollectionOfObjects.Builder<>(bambooStorageDb, objects);\n+            return new PreparedDeleteCollectionOfObjects.Builder<>(storIODb, objects);\n         }\n     }\n }\ndiff --git a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDeleteByQuery.java b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDeleteByQuery.java\nindex f2093295..893a967e 100644\n--- a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDeleteByQuery.java\n+++ b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDeleteByQuery.java\n@@ -2,7 +2,7 @@ package com.pushtorefresh.storio.db.operation.delete;\n \n import android.support.annotation.NonNull;\n \n-import com.pushtorefresh.storio.db.BambooStorageDb;\n+import com.pushtorefresh.storio.db.StorIODb;\n import com.pushtorefresh.storio.db.operation.Changes;\n import com.pushtorefresh.storio.db.query.DeleteQuery;\n \n@@ -15,13 +15,13 @@ public class PreparedDeleteByQuery extends PreparedDelete<DeleteResult> {\n \n     @NonNull private final DeleteQuery deleteQuery;\n \n-    protected PreparedDeleteByQuery(@NonNull BambooStorageDb bambooStorageDb, @NonNull DeleteQuery deleteQuery) {\n-        super(bambooStorageDb);\n+    protected PreparedDeleteByQuery(@NonNull StorIODb storIODb, @NonNull DeleteQuery deleteQuery) {\n+        super(storIODb);\n         this.deleteQuery = deleteQuery;\n     }\n \n     @NonNull @Override public DeleteResult executeAsBlocking() {\n-        final BambooStorageDb.Internal internal = bambooStorageDb.internal();\n+        final StorIODb.Internal internal = storIODb.internal();\n \n         final int countOfDeletedRows = internal.delete(deleteQuery);\n         internal.notifyAboutChanges(new Changes(deleteQuery.table));\n@@ -44,16 +44,16 @@ public class PreparedDeleteByQuery extends PreparedDelete<DeleteResult> {\n \n     public static class Builder {\n \n-        @NonNull private final BambooStorageDb bambooStorageDb;\n+        @NonNull private final StorIODb storIODb;\n         @NonNull private final DeleteQuery deleteQuery;\n \n-        public Builder(@NonNull BambooStorageDb bambooStorageDb, @NonNull DeleteQuery deleteQuery) {\n-            this.bambooStorageDb = bambooStorageDb;\n+        public Builder(@NonNull StorIODb storIODb, @NonNull DeleteQuery deleteQuery) {\n+            this.storIODb = storIODb;\n             this.deleteQuery = deleteQuery;\n         }\n \n         @NonNull public PreparedDeleteByQuery prepare() {\n-            return new PreparedDeleteByQuery(bambooStorageDb, deleteQuery);\n+            return new PreparedDeleteByQuery(storIODb, deleteQuery);\n         }\n     }\n }\ndiff --git a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDeleteCollectionOfObjects.java b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDeleteCollectionOfObjects.java\nindex 1cff8098..999fa174 100644\n--- a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDeleteCollectionOfObjects.java\n+++ b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDeleteCollectionOfObjects.java\n@@ -2,7 +2,7 @@ package com.pushtorefresh.storio.db.operation.delete;\n \n import android.support.annotation.NonNull;\n \n-import com.pushtorefresh.storio.db.BambooStorageDb;\n+import com.pushtorefresh.storio.db.StorIODb;\n import com.pushtorefresh.storio.db.operation.Changes;\n import com.pushtorefresh.storio.db.operation.MapFunc;\n import com.pushtorefresh.storio.db.query.DeleteQuery;\n@@ -23,15 +23,15 @@ public class PreparedDeleteCollectionOfObjects<T> extends PreparedDelete<DeleteC\n     @NonNull private final MapFunc<T, DeleteQuery> mapFunc;\n     private final boolean useTransactionIfPossible;\n \n-    protected PreparedDeleteCollectionOfObjects(@NonNull BambooStorageDb bambooStorageDb, @NonNull Collection<T> objects, @NonNull MapFunc<T, DeleteQuery> mapFunc, boolean useTransactionIfPossible) {\n-        super(bambooStorageDb);\n+    protected PreparedDeleteCollectionOfObjects(@NonNull StorIODb storIODb, @NonNull Collection<T> objects, @NonNull MapFunc<T, DeleteQuery> mapFunc, boolean useTransactionIfPossible) {\n+        super(storIODb);\n         this.objects = objects;\n         this.mapFunc = mapFunc;\n         this.useTransactionIfPossible = useTransactionIfPossible;\n     }\n \n     @NonNull @Override public DeleteCollectionOfObjectsResult<T> executeAsBlocking() {\n-        final BambooStorageDb.Internal internal = bambooStorageDb.internal();\n+        final StorIODb.Internal internal = storIODb.internal();\n \n         final Map<T, DeleteResult> results = new HashMap<>();\n \n@@ -102,14 +102,14 @@ public class PreparedDeleteCollectionOfObjects<T> extends PreparedDelete<DeleteC\n \n     public static class Builder<T> {\n \n-        @NonNull private final BambooStorageDb bambooStorageDb;\n+        @NonNull private final StorIODb storIODb;\n         @NonNull private final Collection<T> objects;\n \n         private MapFunc<T, DeleteQuery> mapFunc;\n         private boolean useTransactionIfPossible = true;\n \n-        public Builder(@NonNull BambooStorageDb bambooStorageDb, @NonNull Collection<T> objects) {\n-            this.bambooStorageDb = bambooStorageDb;\n+        public Builder(@NonNull StorIODb storIODb, @NonNull Collection<T> objects) {\n+            this.storIODb = storIODb;\n             this.objects = objects;\n         }\n \n@@ -130,7 +130,7 @@ public class PreparedDeleteCollectionOfObjects<T> extends PreparedDelete<DeleteC\n \n         @NonNull public PreparedDeleteCollectionOfObjects<T> prepare() {\n             return new PreparedDeleteCollectionOfObjects<>(\n-                    bambooStorageDb,\n+                    storIODb,\n                     objects,\n                     mapFunc,\n                     useTransactionIfPossible\ndiff --git a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDeleteObject.java b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDeleteObject.java\nindex f75a429d..6f7f197a 100644\n--- a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDeleteObject.java\n+++ b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/delete/PreparedDeleteObject.java\n@@ -2,7 +2,7 @@ package com.pushtorefresh.storio.db.operation.delete;\n \n import android.support.annotation.NonNull;\n \n-import com.pushtorefresh.storio.db.BambooStorageDb;\n+import com.pushtorefresh.storio.db.StorIODb;\n import com.pushtorefresh.storio.db.operation.Changes;\n import com.pushtorefresh.storio.db.operation.MapFunc;\n import com.pushtorefresh.storio.db.query.DeleteQuery;\n@@ -17,14 +17,14 @@ public class PreparedDeleteObject<T> extends PreparedDelete<DeleteResult> {\n     @NonNull private final T object;\n     @NonNull private final MapFunc<T, DeleteQuery> mapFunc;\n \n-    protected PreparedDeleteObject(@NonNull BambooStorageDb bambooStorageDb, @NonNull T object, @NonNull MapFunc<T, DeleteQuery> mapFunc) {\n-        super(bambooStorageDb);\n+    protected PreparedDeleteObject(@NonNull StorIODb storIODb, @NonNull T object, @NonNull MapFunc<T, DeleteQuery> mapFunc) {\n+        super(storIODb);\n         this.object = object;\n         this.mapFunc = mapFunc;\n     }\n \n     @NonNull @Override public DeleteResult executeAsBlocking() {\n-        final BambooStorageDb.Internal internal = bambooStorageDb.internal();\n+        final StorIODb.Internal internal = storIODb.internal();\n         final DeleteQuery deleteQuery = mapFunc.map(object);\n \n         final int countOfDeletedRows = internal.delete(deleteQuery);\n@@ -49,13 +49,13 @@ public class PreparedDeleteObject<T> extends PreparedDelete<DeleteResult> {\n \n     public static class Builder<T> {\n \n-        @NonNull private final BambooStorageDb bambooStorageDb;\n+        @NonNull private final StorIODb storIODb;\n         @NonNull private final T object;\n \n         private MapFunc<T, DeleteQuery> mapFunc;\n \n-        public Builder(@NonNull BambooStorageDb bambooStorageDb, @NonNull T object) {\n-            this.bambooStorageDb = bambooStorageDb;\n+        public Builder(@NonNull StorIODb storIODb, @NonNull T object) {\n+            this.storIODb = storIODb;\n             this.object = object;\n         }\n \n@@ -65,7 +65,7 @@ public class PreparedDeleteObject<T> extends PreparedDelete<DeleteResult> {\n         }\n \n         @NonNull public PreparedDeleteObject<T> prepare() {\n-            return new PreparedDeleteObject<>(bambooStorageDb, object, mapFunc);\n+            return new PreparedDeleteObject<>(storIODb, object, mapFunc);\n         }\n     }\n }\ndiff --git a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/exec_sql/PreparedExecSql.java b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/exec_sql/PreparedExecSql.java\nindex 2c37afd8..a52f6268 100644\n--- a/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/exec_sql/PreparedExecSql.java\n+++ b/bamboo-storage/src/main/java/com/pushtorefresh/storio/db/operation/exec_sql/PreparedExecSql.java\n@@ -2,7 +2,7 @@ package com.pushtorefresh.storio.db.operation.exec_sql;\n \n import android.support.annotation.NonNull;\n \n-import com.pushtorefresh.storio.db.BambooStorageDb;\n+import com.pushtorefresh.storio.db.StorIODb;\n import com.pushtorefresh.storio.db.operation.PreparedOperation;\n import com.pushtorefresh.storio.db.query.RawQuery;\n \n@@ -11,16 +11,16 @@ import rx.Subscriber;\n \n public class PreparedExecSql implements PreparedOperation<Void> {\n \n-    @NonNull private final BambooStorageDb bambooStorageDb;\n+    @NonNull private final StorIODb storIODb;\n     @NonNull private final RawQuery rawQuery;\n \n-    public PreparedExecSql(@NonNull BambooStorageDb bambooStorageDb, @NonNull RawQuery rawQuery) {\n-        this.bambooStorageDb = bambooStorageDb;\n+    public PreparedExecSql(@NonNull StorIODb storIODb, @NonNull RawQuery rawQuery) {\n+        this.storIODb = storIODb;\n         this.rawQuery = rawQuery;\n     }\n \n     @NonNull @Override public Void executeAsBlocking() {\n-        bambooStorageDb.internal().execSql(rawQuery);\n+        storIODb.internal().execSql(rawQuery);\n      ",
    "Handle the possibility of HTTP / 0 . 9 with a better error message .": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java b/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java\nindex 806a1b7fde..352ea848c5 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java\n@@ -60,7 +60,7 @@ public class HttpVersion implements Comparable<HttpVersion> {\n         text = text.trim();\n \n         if (text.isEmpty()) {\n-            throw new IllegalArgumentException(\"text is empty\");\n+            throw new IllegalArgumentException(\"text is empty (possibly HTTP/0.9)\");\n         }\n \n         // Try to match without convert to uppercase first as this is what 99% of all clients",
    "Add a non - modeling column type , the UUID .": "diff --git a/prj.el b/prj.el\nindex b7c7d16ab..e4f28ec44 100644\n--- a/prj.el\n+++ b/prj.el\n@@ -7,7 +7,7 @@\n  '(jde-run-option-debug nil)\n  '(jde-run-option-vm-args (quote (\"-XX:+PrintGC\")))\n  '(jde-compile-option-directory \"./target/classes\")\n- '(jde-run-option-application-args (quote (\"-beta\" \"-mainClass\" \"org.junit.runner.JUnitCore\" \"hex.gbm.GBMTest\")))\n+ '(jde-run-option-application-args (quote (\"-beta\" \"-mainClass\" \"org.junit.runner.JUnitCore\" \"water.fvec.ParseTimeTest\")))\n  '(jde-debugger (quote (\"JDEbug\")))\n  '(jde-compile-option-source (quote (\"1.6\")))\n  '(jde-compile-option-classpath (quote (\"./target/classes\" \"./lib/javassist.jar\" \"./lib/hadoop/cdh4/hadoop-common.jar\" \"./lib/hadoop/cdh4/hadoop-auth.jar\" \"./lib/hadoop/cdh4/slf4j-api-1.6.1.jar\" \"./lib/hadoop/cdh4/slf4j-nop-1.6.1.jar\" \"./lib/hadoop/cdh4/hadoop-hdfs.jar\" \"./lib/hadoop/cdh4/protobuf-java-2.4.0a.jar\" \"./lib/apache/commons-codec-1.4.jar\" \"./lib/apache/commons-configuration-1.6.jar\" \"./lib/apache/commons-lang-2.4.jar\" \"./lib/apache/commons-logging-1.1.1.jar\" \"./lib/apache/httpclient-4.1.1.jar\" \"./lib/apache/httpcore-4.1.jar\" \"./lib/junit/junit-4.11.jar\" \"./lib/apache/guava-12.0.1.jar\" \"./lib/gson/gson-2.2.2.jar\" \"./lib/poi/poi-3.8-20120326.jar\" \"./lib/poi/poi-ooxml-3.8-20120326.jar\" \"./lib/poi/poi-ooxml-schemas-3.8-20120326.jar\" \"./lib/poi/dom4j-1.6.1.jar\" \"./lib/Jama/Jama.jar\" \"./lib/s3/aws-java-sdk-1.3.27.jar\" \"./lib/log4j/log4j-1.2.15.jar\" \"./lib/joda/joda-time-2.3.jar\")))\ndiff --git a/smalldata/test/test_uuid.csv b/smalldata/test/test_uuid.csv\nindex 13a4da649..252b63a9f 100644\n--- a/smalldata/test/test_uuid.csv\n+++ b/smalldata/test/test_uuid.csv\n@@ -1,16 +1,20 @@\n-         1,9ff4ed3a-6b00-4130-9aca-2ed897305fd1\n-         2,ac1e1ca3-5ca8-438a-85a4-8175ed5bb7ec\n-         3,6870f256-e145-4d75-adb0-99ccb77d5d3a\n-         4,d8da52c1-d145-4dff-b3d1-127c6eb75d40\n-         5,25ce1456-546d-4e35-bddc-d571b26581ea\n-         6,2e1d193f-d1da-4664-8a2b-ffdfe0aa7be3 \n-1000010407,89e68530-422e-43ba-bd00-aa3d8f2cfcaa\n-1000024046,4055a53b-411f-46f0-9d2e-cf03bc95c080\n-1000054511,49d14d8e-5c42-439d-b4a8-995e25b1602f\n-1000065922,4e31b8aa-4aa9-4e8b-be8f-5cc6323235b4\n-1000066478,2e1d193f-d1da-4664-8a2b-ffdfe0aa7be3\n-1000067268,25ce1456-546d-4e35-bddc-d571b26581ea\n- 100007536,d8da52c1-d145-4dff-b3d1-127c6eb75d40\n-1000079839,6870f256-e145-4d75-adb0-99ccb77d5d3a\n-  10000913,ac1e1ca3-5ca8-438a-85a4-8175ed5bb7ec\n-1000104538,9ff4ed3a-6b00-4130-9aca-2ed897305fd1 \n\\ No newline at end of file\n+         1,9ff4ed3a-6b00-4130-9aca-2ed897305fd1,1\n+         2,ac1e1ca3-5ca8-438a-85a4-8175ed5bb7ec,1\n+         3,6870f256-e145-4d75-adb0-99ccb77d5d3a,0\n+         4,d8da52c1-d145-4dff-b3d1-127c6eb75d40,1\n+         5,25ce1456-546d-4e35-bddc-d571b26581ea,0\n+         6,2e1d193f-d1da-4664-8a2b-ffdfe0aa7be3,0 \n+1000010407,89e68530-422e-43ba-bd00-aa3d8f2cfcaa,1\n+1000024046,4055a53b-411f-46f0-9d2e-cf03bc95c080,0\n+1000054511,49d14d8e-5c42-439d-b4a8-995e25b1602f,0\n+1000065922,4e31b8aa-4aa9-4e8b-be8f-5cc6323235b4,0\n+1000066478,2e1d193f-d1da-4664-8a2b-ffdfe0aa7be3,0\n+1000067268,25ce1456-546d-4e35-bddc-d571b26581ea,0\n+ 100007536,d8da52c1-d145-4dff-b3d1-127c6eb75d40,1\n+1000079839,6870f256-e145-4d75-adb0-99ccb77d5d3a,0\n+  10000913,ac1e1ca3-5ca8-438a-85a4-8175ed5bb7ec,0\n+1000104538,9ff4ed3a-6b00-4130-9aca-2ed897305fd1,1 \n+         7,00000000-0000-0000-0000-000000000000,0\n+         8,80000000-0000-0000-0000-000000000000,0\n+         9,FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF,1\n+\ndiff --git a/src/main/java/hex/FrameExtractor.java b/src/main/java/hex/FrameExtractor.java\nindex b95e6bdad..f06859dc9 100644\n--- a/src/main/java/hex/FrameExtractor.java\n+++ b/src/main/java/hex/FrameExtractor.java\n@@ -106,10 +106,12 @@ public abstract class FrameExtractor extends H2OCountedCompleter {\n     final int num = dataset.numCols(); // number of columns in input frame\n     final int nsplits = espcPerSplit.length; // number of splits\n     final String[][] domains = dataset.domains(); // domains\n+    final boolean[] uuids = dataset.uuids();\n+    final byte[] times = dataset.times();\n     Vec[][] t = new Vec[nsplits][/*num*/]; // resulting vectors for all\n     for (int i=0; i<nsplits; i++) {\n       // vectors for j-th split\n-      t[i] = new Vec(Vec.newKey(),espcPerSplit[i/*-th split*/]).makeZeros(num, domains);\n+      t[i] = new Vec(Vec.newKey(),espcPerSplit[i/*-th split*/]).makeZeros(num, domains, uuids, times);\n     }\n     return t;\n   }\ndiff --git a/src/main/java/hex/FrameSplitter.java b/src/main/java/hex/FrameSplitter.java\nindex 4b94ea3e1..a4143d248 100644\n--- a/src/main/java/hex/FrameSplitter.java\n+++ b/src/main/java/hex/FrameSplitter.java\n@@ -128,10 +128,12 @@ public class FrameSplitter extends H2OCountedCompleter {\n     final int num = dataset.numCols(); // number of columns in input frame\n     final int nsplits = espcPerSplit.length; // number of splits\n     final String[][] domains = dataset.domains(); // domains\n+    final boolean[] uuids = dataset.uuids();\n+    final byte   [] times = dataset.times();\n     Vec[][] t = new Vec[nsplits][/*num*/]; // resulting vectors for all\n     for (int i=0; i<nsplits; i++) {\n       // vectors for j-th split\n-      t[i] = new Vec(Vec.newKey(),espcPerSplit[i/*-th split*/]).makeZeros(num, domains);\n+      t[i] = new Vec(Vec.newKey(),espcPerSplit[i/*-th split*/]).makeZeros(num, domains, uuids, times);\n     }\n     return t;\n   }\n@@ -191,7 +193,7 @@ public class FrameSplitter extends H2OCountedCompleter {\n       int nrows = cs[0]._len;\n       // For each output chunk extract appropriate rows for partIdx-th part\n       for (int i=0; i<cs.length; i++) {\n-        // WARNING: this implementation does not preserver co-location of chunks so we are forcing here network transfer!\n+        // WARNING: this implementation does not preserve co-location of chunks so we are forcing here network transfer!\n         ChunkSplitter.extractChunkPart(_srcVecs[i].chunkForChunkIdx(cinidx), cs[i], startRow, nrows, _fs);\n       }\n     }\ndiff --git a/src/main/java/hex/Summary2.java b/src/main/java/hex/Summary2.java\nindex fc4e2dadf..c69caef23 100644\n--- a/src/main/java/hex/Summary2.java\n+++ b/src/main/java/hex/Summary2.java\n@@ -5,12 +5,10 @@ import water.api.*;\n import water.api.Request.API;\n import water.fvec.*;\n import water.exec.Flow;\n-import water.parser.*;\n import water.util.Utils;\n import water.util.Log;\n \n import java.util.Arrays;\n-import java.util.Random;\n \n /**\n  * Summary of a column.\n@@ -131,6 +129,7 @@ public class Summary2 extends Iced {\n       for(int i = 0; i < chk._len; i++) {\n         double val;\n         if (chk.isNA0(i)) { _nas++; continue; }\n+        if( chk._vec.isUUID() ) continue;\n         if (Double.isNaN(val = chk.at0(i))) { _nans++; continue; }\n         if      (val == Double.POSITIVE_INFINITY) _pinfs++;\n         else if (val == Double.NEGATIVE_INFINITY) _ninfs++;\n@@ -167,21 +166,6 @@ public class Summary2 extends Iced {\n       return this;\n     }\n \n-    /**\n-     * @return number of filled elements, excluding NaN's as well.\n-     */\n-    public long len1() {\n-      return _len - _nas - _nans;\n-    }\n-    /**\n-     * Returns whether the fill density is less than the given percent.\n-     * @param pct target percent.\n-     * @param nan if true then NaN is counted as missing.\n-     * @return true if less than {@code pct} of rows are filled. */\n-    public boolean isSparse(double pct, boolean nan) {\n-      assert 0 < pct && pct <= 1;\n-      return (double)(_len - _nas - (nan?_nans:0)) / _len < pct;\n-    }\n   }\n \n   public static class PrePass extends MRTask2<PrePass> {\n@@ -312,7 +296,7 @@ public class Summary2 extends Iced {\n   public Summary2(Vec vec, String name, BasicStat stat0, int max_qbins) {\n     colname = name;\n     _stat0 = stat0;\n-    _type = vec.isEnum()?2:vec.isInt()?1:0;\n+    _type = vec.isEnum()?T_ENUM:vec.isInt()?T_INT:T_REAL;\n     _domain = vec.isEnum() ? vec.domain() : null;\n     _gprows = 0;\n     double sigma = Double.isNaN(vec.sigma()) ? 0 : vec.sigma();\n@@ -469,6 +453,7 @@ public class Summary2 extends Iced {\n   }\n \n   public Summary2 add(Chunk chk) {\n+    if( chk._vec.isUUID() ) return this;\n     for (int i = 0; i < chk._len; i++)\n       add(chk.at0(i));\n     return this;\ndiff --git a/src/main/java/water/Job.java b/src/main/java/water/Job.java\nindex 6ff327f54..99b7e63b9 100644\n--- a/src/main/java/water/Job.java\n+++ b/src/main/java/water/Job.java\n@@ -201,11 +201,6 @@ public abstract class Job extends Func {\n     return state == JobState.CANCELLED || state == JobState.FAILED;\n   }\n \n-  /** Returns true if the job was cancelled by the user.\n-   * @return true if the job is in state {@link JobState#CANCELLED}.\n-   */\n-  public boolean isCancelledXX() { return state == JobState.CANCELLED; }\n-\n   /** Returns true if the job was terminated by unexpected exception.\n    * @return true, if the job was terminated by unexpected exception.\n    */\n@@ -273,13 +268,10 @@ public abstract class Job extends Func {\n    * @param jobkey job key\n    * @return returns a job with given job key or null if a job is not found.\n    */\n-  public static final Job findJob(final Key jobkey) {\n-    Job job = UKV.get(jobkey);\n-    return job;\n-  }\n+  public static Job findJob(final Key jobkey) { return UKV.get(jobkey); }\n \n   /** Finds a job with given dest key or returns null */\n-  public static final Job findJobByDest(final Key destKey) {\n+  public static Job findJobByDest(final Key destKey) {\n     Job job = null;\n     for( Job current : Job.all() ) {\n       if( current.dest().equals(destKey) ) {\n@@ -372,7 +364,7 @@ public abstract class Job extends Func {\n         return;\n       }\n \n-      try { Thread.sleep (pollingIntervalMillis); } catch (Exception xe) {}\n+      try { Thread.sleep (pollingIntervalMillis); } catch (Exception ignore) {}\n     }\n   }\n \n@@ -390,8 +382,7 @@ public abstract class Job extends Func {\n     final long _count;\n     private final Status _status;\n     final String _error;\n-    protected DException _ex;\n-    public enum Status { Computing, Done, Cancelled, Error };\n+    public enum Status { Computing, Done, Cancelled, Error }\n \n     public Status status() { return _status; }\n \n@@ -587,6 +578,14 @@ public abstract class Job extends Func {\n       if (!isEmpty(ignored_cols_by_name)) { specified++; }\n       if (specified > 1) throw new IllegalArgumentException(\"Arguments 'cols', 'ignored_cols_by_name', and 'ignored_cols' are exclusive\");\n \n+      Vec[] vecs = source.vecs();\n+      for( int i = 0; i < vecs.length; i++ )\n+        if( vecs[i].isUUID() ) {\n+          if( ignored_cols==null ) ignored_cols = new int[0];\n+          ignored_cols = Arrays.copyOf(ignored_cols,ignored_cols.length+1);\n+          ignored_cols[ignored_cols.length-1] = i;\n+       }\n+\n       // If the column are not specified, then select everything.\n       if (isEmpty(cols)) {\n         cols = new int[source.vecs().length];\n@@ -884,7 +883,7 @@ public abstract class Job extends Func {\n     protected String[] getVectorDomain(final Vec v) {\n       assert v==null || v.isInt() || v.isEnum() : \"Cannot get vector domain!\";\n       if (v==null) return null;\n-      String[] r = null;\n+      String[] r;\n       if (v.isEnum()) {\n         r = v.domain();\n       } else {\ndiff --git a/src/main/java/water/PrettyPrint.java b/src/main/java/water/PrettyPrint.java\nindex dba3212da..b98da846c 100644\n--- a/src/main/java/water/PrettyPrint.java\n+++ b/src/main/java/water/PrettyPrint.java\n@@ -32,4 +32,15 @@ public class PrettyPrint {\n     if( bytes < 0 ) return \"N/A\";\n     return bytes(bytes)+\"/S\";\n   }\n+\n+  // About as clumsy and random as a blaster...\n+  public static String UUID( long lo, long hi ) {\n+    long lo0 = (lo>>32)&0xFFFFFFFFL;\n+    long lo1 = (lo>>16)&0xFFFFL;\n+    long lo2 = (lo>> 0)&0xFFFFL;\n+    long hi0 = (hi>>48)&0xFFFFL;\n+    long hi1 = (hi>> 0)&0xFFFFFFFFFFFFL;\n+    return String.format(\"%08X-%04X-%04X-%04X-%012X\",lo0,lo1,lo2,hi0,hi1);\n+  }\n+\n }\ndiff --git a/src/main/java/water/api/Inspect2.java b/src/main/java/water/api/Inspect2.java\nindex 0ed301d70..6065d3ac9 100644\n--- a/src/main/java/water/api/Inspect2.java\n+++ b/src/main/java/water/api/Inspect2.java\n@@ -36,12 +36,13 @@ public class Inspect2 extends Request2 {\n \n   // An internal JSON-output-only class\n   static class ColSummary extends Iced {\n-    public static enum ColType { Enum, Int, Real, Time };\n+    public static enum ColType { Enum, Int, Real, Time, UUID };\n     static final int API_WEAVER=1; // This file has auto-gen'd doc & json fields\n     static public DocGen.FieldDoc[] DOC_FIELDS; // Initialized from Auto-Gen code.\n     public ColSummary( String name, Vec vec ) {\n       this.name = name;\n-      this.type = vec.isEnum() ? ColType.Enum : vec.isInt() ? (vec.isTime() ? ColType.Time : ColType.Int) : ColType.Real;\n+      this.type = vec.isEnum() ? ColType.Enum : vec.isUUID() ? ColType.UUID : (vec.isInt() ? (vec.isTime() ? ColType.Time : ColType.Int) : ColType.Real);\n+      boolean numeric = !vec.isEnum() && !vec.isUUID();\n       this.min  = vec.isEnum() ? Double.NaN : vec.min();\n       this.max  = vec.isEnum() ? Double.NaN : vec.max();\n       this.mean = vec.isEnum() ? Double.NaN : vec.mean();\n@@ -194,7 +195,10 @@ public class Inspect2 extends Request2 {\n     sb.append(\"<tr class='warning'>\");\n     sb.append(\"<td>\").append(\"Mean\").append(\"</td>\");\n     for( int i=0; i<cols.length; i++ )\n-      sb.append(\"<td>\").append(cols[i].type == ColType.Enum ? NA : mean_dformat.format(cols[i].mean)).append(\"</td>\");\n+      sb.append(\"<td>\").append((cols[i].type == ColType.Enum) ||\n+                               (cols[i].type == ColType.UUID) \n+                               ? NA \n+                               : mean_dformat.format(cols[i].mean)).append(\"</td>\");\n     sb.append(\"</tr>\");\n \n     // Cardinality row is shown only if dataset contains enum-column\n@@ -259,8 +263,13 @@ public class Inspect2 extends Request2 {\n   }\n \n   // ---\n-  // Return a well-formated string for this kind of Vec\n-  public static String x0( Vec v, long row ) { return x1(v,row,v.at(row)); }\n+  // Return a well-formatted string for this kind of Vec\n+  public static String x0( Vec v, long row ) { \n+    if( !v.isUUID() ) return x1(v,row,v.at(row));\n+    // UUID handling\n+    if( v.isNA(row) ) return x1(v,row,Double.NaN);\n+    return \"<b style=\\\"font-family:monospace;\\\">\"+PrettyPrint.UUID(v.at16l(row),v.at16h(row))+\"</b>\";\n+  }\n \n   // Format a row, OR the min/max\n   public static String x1( Vec v, long row, double d ) {\ndiff --git a/src/main/java/water/api/RequestArguments.java b/src/main/java/water/api/RequestArguments.java\nindex 35badf86f..8552b806c 100644\n--- a/src/main/java/water/api/RequestArguments.java\n+++ b/src/main/java/water/api/RequestArguments.java\n@@ -2617,6 +2617,18 @@ public class RequestArguments extends RequestStatics {\n   /** A Class Vec/Column within a Frame.  Limited to 1000 classes, just to prevent madness. */\n   public class FrameClassVec extends FrameKeyVec {\n     public FrameClassVec(String name, TypeaheadKey key ) { super(name, key); }\n+    @Override protected String[] selectValues() {\n+      final Vec [] vecs = fr().vecs();\n+      String[] names = new String[vecs.length];\n+      int j = 0;\n+      for( int i = 0; i < vecs.length; ++i) {\n+        if( vecs[i].min() < vecs[i].max() &&\n+            ((double)vecs[i].naCnt())/vecs[i].length() <= 0.1 &&\n+            !vecs[i].isUUID() ) // No math on strings or UUIDs\n+          names[j++] = fr()._names[i]; // ignore constant columns and columns with too many NAs\n+      }\n+      return Arrays.copyOf(names, j);\n+    }\n     @Override protected Vec defaultValue() {\n       Frame fr = fr();\n       return fr != null ? fr.vecs()[fr.vecs().length - 1] : null;\n@@ -2649,7 +2661,8 @@ public class RequestArguments extends RequestStatics {\n       addPrerequisite(response);\n     }\n     public boolean shouldIgnore(int i, Frame fr ) {\n-      return _response != null && _response.value() == fr.vecs()[i];\n+      return (_response != null && _response.value() == fr.vecs()[i]) ||\n+        fr.vecs()[i].isUUID();\n     }\n     public void checkLegality(Vec v) throws IllegalArgumentException { }\n     protected Comparator<Integer> colComp(final ValueArray ary){\n@@ -2713,9 +2726,10 @@ public class RequestArguments extends RequestStatics {\n       final Vec [] vecs = fr().vecs();\n       int [] res = new int[vecs.length];\n       int j = 0;\n-      for(int i = 0; i < vecs.length; ++i){\n+      for( int i = 0; i < vecs.length; ++i) {\n         if(!(vecs[i].min() < vecs[i].max()) ||\n-          (_filterNAs && ((double)vecs[i].naCnt())/vecs[i].length() > 0.1))\n+          (_filterNAs && ((double)vecs[i].naCnt())/vecs[i].length() > 0.1) ||\n+           vecs[i].isUUID() ) // No math on strings or UUIDs\n           res[j++] = i; // ignore constant columns and columns with too many NAs\n       }\n       return Arrays.copyOf(res, j);\ndiff --git a/src/main/java/water/fvec/AppendableVec.java b/src/main/java/water/fvec/AppendableVec.java\nindex c51efcfad..dffa46238 100644\n--- a/src/main/java/water/fvec/AppendableVec.java\n+++ b/src/main/java/water/fvec/AppendableVec.java\n@@ -22,6 +22,7 @@ public class AppendableVec extends Vec {\n   public static final byte ENUM   = 2;\n   public static final byte NUMBER = 4;\n   public static final byte TIME   = 8;\n+  public static final byte UUID   =16;\n   byte [] _chunkTypes;\n   long _naCnt;\n   long _strCnt;\n@@ -97,11 +98,12 @@ public class AppendableVec extends Vec {\n     int nchunk = _espc.length;\n     while( nchunk > 0 && _espc[nchunk-1] == 0 ) nchunk--;\n     DKV.remove(chunkKey(nchunk)); // remove potential trailing key\n-    boolean hasNumber = false, hasEnum = false, hasTime=false;\n+    boolean hasNumber = false, hasEnum = false, hasTime=false, hasUUID=false;\n     for( int i = 0; i < nchunk; ++i ) {\n       if( (_chunkTypes[i] & TIME  ) != 0 ) { hasNumber = true; hasTime=true; }\n       if( (_chunkTypes[i] & NUMBER) != 0 )   hasNumber = true;\n       if( (_chunkTypes[i] & ENUM  ) != 0 )   hasEnum   = true;\n+      if( (_chunkTypes[i] & UUID  ) != 0 )   hasUUID   = true;\n     }\n     // number wins, we need to go through the enum chunks and declare them all\n     // NAs (chunk is considered enum iff it has only enums + possibly some nas)\n@@ -110,6 +112,14 @@ public class AppendableVec extends Vec {\n         if(_chunkTypes[i] == ENUM)\n           DKV.put(chunkKey(i), new C0DChunk(Double.NaN, (int)_espc[i]),fs);\n     }\n+    // enum wins over UUID\n+    if( hasUUID && hasEnum ) {\n+      hasUUID=false;\n+      for(int i = 0; i < nchunk; ++i)\n+        if(_chunkTypes[i] == UUID)\n+          DKV.put(chunkKey(i), new C0DChunk(Double.NaN, (int)_espc[i]),fs);\n+    }\n+\n     // Make sure time is consistent\n     int t = -1;\n     if( hasTime ) {\n@@ -138,8 +148,7 @@ public class AppendableVec extends Vec {\n     }\n     espc[nchunk]=x;             // Total element count in last\n     // Replacement plain Vec for AppendableVec.\n-    Vec vec = new Vec(_key, espc, _domain);\n-    vec._time = (byte)t;        // Time parse, if any\n+    Vec vec = new Vec(_key, espc, _domain, hasUUID, (byte)t);\n     DKV.put(_key,vec,fs);       // Inject the header\n     return vec;\n   }\ndiff --git a/src/main/java/water/fvec/C16Chunk.java b/src/main/java/water/fvec/C16Chunk.java\nnew file mode 100644\nindex 000000000..20274c3bf\n--- /dev/null\n+++ b/src/main/java/water/fvec/C16Chunk.java\n@@ -0,0 +1,52 @@\n+package water.fvec;\n+\n+import water.*;\n+\n+/**\n+ * The empty-compression function, where data is in long-pairs for UUIDs\n+ */\n+public class C16Chunk extends Chunk {\n+  protected static final long _LO_NA = Long.MIN_VALUE;\n+  protected static final long _HI_NA = 0;\n+  C16Chunk( byte[] bs ) { _mem=bs; _start = -1; _len = _mem.length>>4; }\n+  @Override protected final long   at8_impl( int i ) { throw new IllegalArgumentException(\"at8 but 16-bit UUID\");  }\n+  @Override protected final double atd_impl( int i ) { throw new IllegalArgumentException(\"atd but 16-bit UUID\");  }\n+  @Override protected final boolean isNA_impl( int i ) { return UDP.get8(_mem,(i<<4))==_LO_NA && UDP.get8(_mem,(i<<4)+8)==_HI_NA; }\n+  @Override protected long at16l_impl(int idx) { \n+    long lo = UDP.get8(_mem,(idx<<4)  );\n+    long hi = UDP.get8(_mem,(idx<<4)+8);\n+    if( lo==_LO_NA && hi==_HI_NA ) throw new IllegalArgumentException(\"at16 but value is missing\");\n+    return lo;\n+  }\n+  @Override protected long at16h_impl(int idx) { \n+    long lo = UDP.get8(_mem,(idx<<4)  );\n+    long hi = UDP.get8(_mem,(idx<<4)+8);\n+    if( lo==_LO_NA && hi==_HI_NA ) throw new IllegalArgumentException(\"at16 but value is missing\");\n+    return hi;\n+  }\n+  @Override boolean set_impl(int idx, long l) { return false; }\n+  @Override boolean set_impl(int i, double d) { return false; }\n+  @Override boolean set_impl(int i, float f ) { return false; }\n+  @Override boolean setNA_impl(int idx) { UDP.set8(_mem,(idx<<4),_LO_NA); UDP.set8(_mem,(idx<<4),_HI_NA); return true; }\n+  @Override boolean hasFloat() { return false; }\n+  @Override public AutoBuffer write(AutoBuffer bb) { return bb.putA1(_mem,_mem.length); }\n+  @Override public C16Chunk read(AutoBuffer bb) {\n+    _mem = bb.bufClose();\n+    _start = -1;\n+    _len = _mem.length>>4;\n+    assert _mem.length == _len<<4;\n+    return this;\n+  }\n+  @Override NewChunk inflate_impl(NewChunk nc) {\n+    //nothing to inflate - just copy\n+    nc._ls = MemoryManager.malloc8 (_len);\n+    nc._ds = MemoryManager.malloc8d(_len);\n+    nc._len = _len;\n+    nc._len2 = _len;\n+    for( int i=0; i<_len; i++ ) { //use unsafe?\n+      nc._ls[i] =                         UDP.get8(_mem,(i<<4)  );\n+      nc._ds[i] = Double.longBitsToDouble(UDP.get8(_mem,(i<<4)+8));\n+    }\n+    return nc;\n+  }\n+}\ndiff --git a/src/main/java/water/fvec/Chunk.java b/src/main/java/water/fvec/Chunk.java\nindex 8508a28dd..93483437e 100644\n--- a/src/main/java/water/fvec/Chunk.java\n+++ b/src/main/java/water/fvec/Chunk.java\n@@ -56,6 +56,16 @@ public abstract class Chunk extends Iced implements Cloneable {\n     throw new ArrayIndexOutOfBoundsException(\"\"+_start+\" <= \"+i+\" < \"+(_start+_len));\n   }\n \n+  public final long at16l( long i ) {\n+    long x = i-_start;\n+    if( 0 <= x && x < _len ) return at16l0((int)x);\n+    throw new ArrayIndexOutOfBoundsException(\"\"+_start+\" <= \"+i+\" < \"+(_start+_len));\n+  }\n+  public final long at16h( long i ) {\n+    long x = i-_start;\n+    if( 0 <= x && x < _len ) return at16h0((int)x);\n+    throw new ArrayIndexOutOfBoundsException(\"\"+_start+\" <= \"+i+\" < \"+(_start+_len));\n+  }\n \n   /** The zero-based API.  Somewhere between 10% to 30% faster in a tight-loop\n    *  over the data than the generic at() API.  Probably no gain on larger\n@@ -64,6 +74,8 @@ public abstract class Chunk extends Iced implements Cloneable {\n   public final double  at0  ( int i ) { return _chk2 == null ? atd_impl(i) : _chk2. atd_impl(i); }\n   public final long    at80 ( int i ) { return _chk2 == null ? at8_impl(i) : _chk2. at8_impl(i); }\n   public final boolean isNA0( int i ) { return _chk2 == null ?isNA_impl(i) : _chk2.isNA_impl(i); }\n+  public final long   at16l0( int i ) { return _chk2 == null ? at16l_impl(i) : _chk2.at16l_impl(i); }\n+  public final long   at16h0( int i ) { return _chk2 == null ? at16h_impl(i) : _chk2.at16h_impl(i); }\n \n \n   /** Slightly slower than 'at0' inside a chunk; goes (very) slow outside the\n@@ -153,6 +165,8 @@ public abstract class Chunk extends Iced implements Cloneable {\n   abstract protected double   atd_impl(int idx);\n   abstract protected long     at8_impl(int idx);\n   abstract protected boolean isNA_impl(int idx);\n+  protected long at16l_impl(int idx) { throw new IllegalArgumentException(\"Not a UUID\"); }\n+  protected long at16h_impl(int idx) { throw new IllegalArgumentException(\"Not a UUID\"); }\n \n   /** Chunk-specific writer.  Returns false if the value does not fit in the\n    *  current compression scheme.  */\ndiff --git a/src/main/java/water/fvec/Frame.java b/src/main/java/water/fvec/Frame.java\nindex 7a280f363..9d4b670c7 100644\n--- a/src/main/java/water/fvec/Frame.java\n+++ b/src/main/java/water/fvec/Frame.java\n@@ -3,7 +3,6 @@ package water.fvec;\n import water.*;\n import water.H2O.H2OCountedCompleter;\n import water.exec.Flow;\n-import water.fvec.Vec.VectorGroup;\n import water.util.Log;\n \n import java.io.IOException;\n@@ -374,6 +373,22 @@ public class Frame extends Lockable<Frame> {\n     return ds;\n   }\n \n+  /** true/false every Vec is a UUID */\n+  public boolean[] uuids() {\n+    boolean bs[] = new boolean[vecs().length];\n+    for( int i=0; i<vecs().length; i++ )\n+      bs[i] = vecs()[i].isUUID();\n+    return bs;\n+  }\n+\n+  /** Time status for every Vec */\n+  public byte[] times() {\n+    byte bs[] = new byte[vecs().length];\n+    for( int i=0; i<vecs().length; i++ )\n+      bs[i] = vecs()[i]._time;\n+    return bs;\n+  }\n+\n   private String[][] domains(int [] cols){\n     Vec [] vecs = vecs();\n     String [][] res = new String[cols.length][];\n@@ -638,8 +653,9 @@ public class Frame extends Lockable<Frame> {\n         for( int i = 0; i < vs.length; i++ ) {\n           if(i > 0) sb.append(',');\n           if(!vs[i].isNA(_row)) {\n-            if(vs[i].isEnum()) sb.append('\"' + vs[i]._domain[(int) vs[i].at8(_row)] + '\"');\n-            else if(vs[i].isInt()) sb.append(vs[i].at8(_row));\n+            if( vs[i].isEnum() ) sb.append('\"' + vs[i]._domain[(int) vs[i].at8(_row)] + '\"');\n+            else if( vs[i].isUUID() ) sb.append(PrettyPrint.UUID(vs[i].at16l(_row),vs[i].at16h(_row)));\n+            else if( vs[i].isInt() ) sb.append(vs[i].at8(_row));\n             else {\n               // R 3.1 unfortunately changed the behavior of read.csv().\n               // (Really type.convert()).\ndiff --git a/src/main/java/water/fvec/NewChunk.java b/src/main/java/water/fvec/NewChunk.java\nindex d94312448..5887a1599 100644\n--- a/src/main/java/water/fvec/NewChunk.java\n+++ b/src/main/java/water/fvec/NewChunk.java\n@@ -26,6 +26,7 @@ public class NewChunk extends Chunk {\n   int _naCnt=-1;  ",
    "add a new Maven module for the Personalization plugin , with a simple test EP component": "diff --git a/blueocean-personalization/.babelrc b/blueocean-personalization/.babelrc\nnew file mode 100644\nindex 000000000..3d7749049\n--- /dev/null\n+++ b/blueocean-personalization/.babelrc\n@@ -0,0 +1,3 @@\n+{\n+ \"presets\": [\"es2015\", \"stage-0\", \"react\"]\n+}\ndiff --git a/blueocean-personalization/.eslintrc b/blueocean-personalization/.eslintrc\nnew file mode 100644\nindex 000000000..0f119252a\n--- /dev/null\n+++ b/blueocean-personalization/.eslintrc\n@@ -0,0 +1,8 @@\n+{\n+  \"extends\": \"@jenkins-cd/jenkins/react\",\n+  \"rules\": {\n+    \"react/jsx-no-bind\": 0,\n+    \"no-unused-vars\": [2, {\"varsIgnorePattern\": \"^React$\"}],\n+    \"max-len\": [1, 160, 4]\n+  }\n+}\ndiff --git a/blueocean-personalization/LICENSE.txt b/blueocean-personalization/LICENSE.txt\nnew file mode 100644\nindex 000000000..26cfa52a0\n--- /dev/null\n+++ b/blueocean-personalization/LICENSE.txt\n@@ -0,0 +1,21 @@\n+The MIT License\n+\n+Copyright (c) 2016 CloudBees Inc and a number of other of contributors\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE.\ndiff --git a/blueocean-personalization/README.md b/blueocean-personalization/README.md\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/blueocean-personalization/gulpfile.js b/blueocean-personalization/gulpfile.js\nnew file mode 100644\nindex 000000000..93509ff65\n--- /dev/null\n+++ b/blueocean-personalization/gulpfile.js\n@@ -0,0 +1,34 @@\n+//\n+// See https://github.com/jenkinsci/js-builder\n+//\n+var builder = require('@jenkins-cd/js-builder')\n+    .withExternalModuleMapping('react-router', 'react:react-router');\n+\n+//\n+// Redefine the \"test\" task to use mocha and support es6.\n+// We might build this into js-builder, but is ok here\n+// for now.\n+//\n+builder.defineTask('test', function() {\n+    var mocha = require('gulp-mocha');\n+    var babel = require('babel-core/register');\n+\n+    // Allow running of a specific test\n+    // e.g.  gulp test --test pipelines\n+    // will run the pipelines-spec.js\n+    var filter = builder.args.argvValue('--test', '*');\n+\n+    builder.gulp.src('src/test/js/' + filter + '-spec.js')\n+        .pipe(mocha({\n+            compilers: {js: babel}\n+        })).on('error', function(e) {\n+            if (builder.isRetest()) {\n+                // ignore test failures if we are running retest.\n+                return;\n+            }\n+            throw e;\n+        });\n+});\n+builder.gulp.task('lint:watch', function () {\n+    builder.gulp.watch(['src/main/js/**/*.js', 'src/main/js/**/*.jsx'], ['lint']);\n+});\ndiff --git a/blueocean-personalization/package.json b/blueocean-personalization/package.json\nnew file mode 100644\nindex 000000000..5ba4eceaf\n--- /dev/null\n+++ b/blueocean-personalization/package.json\n@@ -0,0 +1,66 @@\n+{\n+  \"name\": \"blueocean-personalization\",\n+  \"version\": \"0.0.1\",\n+  \"scripts\": {\n+    \"lint\": \"gulp lint\",\n+    \"lint:fix\": \"gulp lint --fixLint\",\n+    \"lint:watch\": \"gulp lint:watch --continueOnLint\",\n+    \"test\": \"gulp test\",\n+    \"test:watch\": \"gulp test:watch\",\n+    \"bundle\": \"gulp bundle\",\n+    \"bundle:watch\": \"gulp bundle:watch\"\n+  },\n+  \"devDependencies\": {\n+    \"@jenkins-cd/eslint-config-jenkins\": \"0.0.2\",\n+    \"@jenkins-cd/js-builder\": \"0.0.34\",\n+    \"@jenkins-cd/js-test\": \"1.1.1\",\n+    \"babel\": \"^6.5.2\",\n+    \"babel-core\": \"^6.7.6\",\n+    \"babel-eslint\": \"^6.0.2\",\n+    \"babel-preset-es2015\": \"^6.6.0\",\n+    \"babel-preset-react\": \"^6.5.0\",\n+    \"babel-preset-stage-0\": \"^6.5.0\",\n+    \"chai\": \"^3.5.0\",\n+    \"enzyme\": \"^2.2.0\",\n+    \"eslint\": \"2.8.0\",\n+    \"eslint-plugin-react\": \"^5.0.1\",\n+    \"gulp\": \"^3.9.1\",\n+    \"gulp-mocha\": \"^2.2.0\",\n+    \"mocha\": \"^2.4.5\",\n+    \"nock\": \"^8.0.0\"\n+  },\n+  \"dependencies\": {\n+    \"@jenkins-cd/design-language\": \"0.0.58\",\n+    \"@jenkins-cd/js-extensions\": \"0.0.15\",\n+    \"@jenkins-cd/js-modules\": \"0.0.5\",\n+    \"@jenkins-cd/sse-gateway\": \"0.0.5\",\n+    \"immutable\": \"3.8.1\",\n+    \"isomorphic-fetch\": \"2.2.1\",\n+    \"keymirror\": \"0.1.1\",\n+    \"moment\": \"2.13.0\",\n+    \"moment-duration-format\": \"1.3.0\",\n+    \"react\": \"15.0.1\",\n+    \"react-dom\": \"15.0.1\",\n+    \"react-material-icons-blue\": \"1.0.4\",\n+    \"react-redux\": \"4.4.5\",\n+    \"react-router\": \"2.3.0\",\n+    \"redux\": \"3.5.2\",\n+    \"redux-thunk\": \"2.0.1\",\n+    \"reselect\": \"2.5.1\",\n+    \"window-handle\": \"1.0.0\"\n+  },\n+  \"jenkinscd\": {\n+    \"extDependencies\": [\n+      \"@jenkins-cd/sse-gateway\",\n+      \"immutable\",\n+      \"isomorphic-fetch\",\n+      \"react-router\",\n+      \"keymirror\",\n+      \"react-redux\",\n+      \"react-router\",\n+      \"redux\",\n+      \"redux-thunk\",\n+      \"reselect\"\n+    ]\n+  }\n+}\ndiff --git a/blueocean-personalization/pom.xml b/blueocean-personalization/pom.xml\nnew file mode 100644\nindex 000000000..b54957c51\n--- /dev/null\n+++ b/blueocean-personalization/pom.xml\n@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>blueocean-parent</artifactId>\n+        <groupId>io.jenkins.blueocean</groupId>\n+        <version>1.0-alpha-1-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <name>BlueOcean :: Personalization</name>\n+    <artifactId>blueocean-personalization</artifactId>\n+    <packaging>hpi</packaging>\n+\n+    <dependencies>\n+    </dependencies>\n+\n+</project>\ndiff --git a/blueocean-personalization/src/main/js/components/ActionLink.jsx b/blueocean-personalization/src/main/js/components/ActionLink.jsx\nnew file mode 100644\nindex 000000000..53262bf2b\n--- /dev/null\n+++ b/blueocean-personalization/src/main/js/components/ActionLink.jsx\n@@ -0,0 +1,7 @@\n+import React, { Component } from 'react';\n+\n+export default class ActionLink extends Component {\n+    render() {\n+        return <div>Action!</div>;\n+    }\n+}\ndiff --git a/blueocean-personalization/src/main/js/jenkins-js-extension.yaml b/blueocean-personalization/src/main/js/jenkins-js-extension.yaml\nnew file mode 100644\nindex 000000000..f97a2c91e\n--- /dev/null\n+++ b/blueocean-personalization/src/main/js/jenkins-js-extension.yaml\n@@ -0,0 +1,6 @@\n+# Extensions in this plugin\n+# NB: \"component\" currently maps to modules, not \"symbols\" so make sure to \"export default\"\n+# WARNING: If you change this you'll have to change io.jenkins.blueocean.jsextensions.JenkinsJSExtensionsTest as well :(\n+extensions:\n+  - component: components/ActionLink\n+    extensionPoint: jenkins.dashboard.item.action\ndiff --git a/blueocean-personalization/src/main/less/extensions.less b/blueocean-personalization/src/main/less/extensions.less\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/blueocean-personalization/src/main/resources/index.jelly b/blueocean-personalization/src/main/resources/index.jelly\nnew file mode 100644\nindex 000000000..c2412efc5\n--- /dev/null\n+++ b/blueocean-personalization/src/main/resources/index.jelly\n@@ -0,0 +1,4 @@\n+<?jelly escape-by-default='true'?>\n+<div>\n+  Blue Ocean Personalization\n+</div>",
    "remove todo": "diff --git a/tests/com/goide/runconfig/testing/GoUnitTestEventsConverterTest.java b/tests/com/goide/runconfig/testing/GoUnitTestEventsConverterTest.java\nindex 6602683d7..fb201b80d 100644\n--- a/tests/com/goide/runconfig/testing/GoUnitTestEventsConverterTest.java\n+++ b/tests/com/goide/runconfig/testing/GoUnitTestEventsConverterTest.java\n@@ -6,6 +6,7 @@ import com.intellij.execution.executors.DefaultRunExecutor;\n import com.intellij.execution.process.ProcessOutputTypes;\n import com.intellij.openapi.util.io.FileUtil;\n import com.intellij.openapi.util.text.StringUtil;\n+import com.intellij.util.SystemProperties;\n import jetbrains.buildServer.messages.serviceMessages.*;\n import org.jetbrains.annotations.NotNull;\n \n@@ -43,9 +44,8 @@ public class GoUnitTestEventsConverterTest extends GoCodeInsightFixtureTestCase\n \n     String inputDataFilename = getTestName(true) + \".txt\";\n     LoggingServiceMessageVisitor serviceMessageVisitor = new LoggingServiceMessageVisitor();\n-    String lineSeparator = System.getProperty(\"line.separator\");\n-    // todo: replace with FileUtil.loadLines(String) in 13.1\n-    for (String line : StringUtil.splitByLines(FileUtil.loadFile(new File(getTestDataPath() + \"/\" + inputDataFilename)))) {\n+    String lineSeparator = SystemProperties.getLineSeparator();\n+    for (String line : FileUtil.loadLines(new File(getTestDataPath() + \"/\" + inputDataFilename))) {\n       converter.processServiceMessages(line + lineSeparator, ProcessOutputTypes.STDOUT, serviceMessageVisitor);\n     }\n     assertSameLinesWithFile(getTestDataPath() + \"/\" + getTestName(true) + \"-expected.txt\", serviceMessageVisitor.getLog());",
    "Remove heron core fetching for MarathonScheduler .": "diff --git a/heron/schedulers/src/java/com/twitter/heron/scheduler/marathon/MarathonScheduler.java b/heron/schedulers/src/java/com/twitter/heron/scheduler/marathon/MarathonScheduler.java\nindex e51679c50..ae0cd3bb5 100644\n--- a/heron/schedulers/src/java/com/twitter/heron/scheduler/marathon/MarathonScheduler.java\n+++ b/heron/schedulers/src/java/com/twitter/heron/scheduler/marathon/MarathonScheduler.java\n@@ -177,12 +177,11 @@ public class MarathonScheduler implements IScheduler {\n   }\n \n   protected ArrayNode getFetchList(ObjectMapper mapper) {\n-    String heronCoreURI = Context.corePackageUri(config);\n-    String topologyURI = Runtime.topologyPackageUri(runtime).toString();\n+    final String topologyURI = Runtime.topologyPackageUri(runtime).toString();\n \n-    String[] uris = new String[]{heronCoreURI, topologyURI};\n+    final String[] uris = new String[]{topologyURI};\n \n-    ArrayNode urisNode = mapper.createArrayNode();\n+    final ArrayNode urisNode = mapper.createArrayNode();\n     for (String uri : uris) {\n       ObjectNode uriObject = mapper.createObjectNode();\n       uriObject.put(MarathonConstants.URI, uri);\ndiff --git a/website/content/docs/operators/deployment/schedulers/dcos.md b/website/content/docs/operators/deployment/schedulers/dcos.md\nindex bde49f45d..bf64cc917 100644\n--- a/website/content/docs/operators/deployment/schedulers/dcos.md\n+++ b/website/content/docs/operators/deployment/schedulers/dcos.md\n@@ -93,7 +93,8 @@ heron.class.launcher:                        com.twitter.heron.scheduler.maratho\n # location of java - pick it up from shell environment\n heron.directory.sandbox.java.home:          $JAVA_HOME\n \n-heron.directory.home:                       \"./heron-core/\"\n+# location of heron - pick it up from shell environment\n+heron.directory.home:                       $HERON_HOME\n \n heron.directory.conf:                       \"./heron-conf/\"\n \n@@ -106,11 +107,8 @@ heron.marathon.scheduler.auth.token: \"<auth_token>\"\n # Invoke the IScheduler as a library directly\n heron.scheduler.is.service:                  False\n \n-# location of the core package\n-heron.package.core.uri:  https://github.com/twitter/heron/releases/download/0.14.7/heron-core-0.14.7-ubuntu.tar.gz\n-\n-# docker repo for executor\n-heron.executor.docker.image: 'ndustrialio/heron-executor:jre8'\n+# docker repo for heron with core packages installed\n+heron.executor.docker.image: 'streamlio/heron:latest-ubuntu14.04'\n ```\n \n ",
    "Add trace check before logging .": "diff --git a/src/java/org/apache/cassandra/utils/BloomFilter.java b/src/java/org/apache/cassandra/utils/BloomFilter.java\nindex 19cff63ef4..0cc78ed06c 100644\n--- a/src/java/org/apache/cassandra/utils/BloomFilter.java\n+++ b/src/java/org/apache/cassandra/utils/BloomFilter.java\n@@ -70,7 +70,8 @@ public class BloomFilter extends Filter\n                                       numElements, bucketsPerElement, targetBucketsPerElem));\n         }\n         BloomCalculations.BloomSpecification spec = BloomCalculations.computeBloomSpec(bucketsPerElement);\n-        logger.trace(\"Creating bloom filter for {} elements and spec {}\", numElements, spec);\n+        if (logger.isTraceEnabled())\n+            logger.trace(\"Creating bloom filter for {} elements and spec {}\", numElements, spec);\n         return new BloomFilter(spec.K, bucketsFor(numElements, spec.bucketsPerElement));\n     }\n ",
    "Enhance StarTreeIndexOperator to support all predicate ( <issue_id> ) .": "diff --git a/pinot-core/src/main/java/com/linkedin/pinot/core/operator/filter/StarTreeIndexOperator.java b/pinot-core/src/main/java/com/linkedin/pinot/core/operator/filter/StarTreeIndexOperator.java\nindex a2e6657f76..da4e6be5c8 100644\n--- a/pinot-core/src/main/java/com/linkedin/pinot/core/operator/filter/StarTreeIndexOperator.java\n+++ b/pinot-core/src/main/java/com/linkedin/pinot/core/operator/filter/StarTreeIndexOperator.java\n@@ -33,7 +33,6 @@ import org.slf4j.LoggerFactory;\n \n import com.google.common.collect.HashBiMap;\n import com.linkedin.pinot.common.request.BrokerRequest;\n-import com.linkedin.pinot.common.request.FilterOperator;\n import com.linkedin.pinot.common.request.GroupBy;\n import com.linkedin.pinot.common.utils.request.FilterQueryTree;\n import com.linkedin.pinot.common.utils.request.RequestUtils;\n@@ -43,7 +42,6 @@ import com.linkedin.pinot.core.common.DataSource;\n import com.linkedin.pinot.core.common.DataSourceMetadata;\n import com.linkedin.pinot.core.common.Operator;\n import com.linkedin.pinot.core.common.Predicate;\n-import com.linkedin.pinot.core.common.predicate.EqPredicate;\n import com.linkedin.pinot.core.indexsegment.IndexSegment;\n import com.linkedin.pinot.core.operator.blocks.BaseFilterBlock;\n import com.linkedin.pinot.core.operator.dociditerators.BitmapDocIdIterator;\n@@ -54,13 +52,14 @@ public class StarTreeIndexOperator extends BaseFilterOperator {\n   private static final Logger LOGGER = LoggerFactory.getLogger(StarTreeIndexOperator.class);\n   private IndexSegment segment;\n \n-  // predicates map\n+  // Predicates map\n   Map<String, PredicateEntry> predicatesMap;\n \n-  // group by columns\n+  // Group by columns\n   Set<String> groupByColumns;\n \n-  Set<String> equalityPredicateColumns;\n+  // Columns with predicate on them\n+  Set<String> predicateColumns;\n \n   boolean emptyResult = false;\n   private BrokerRequest brokerRequest;\n@@ -68,7 +67,7 @@ public class StarTreeIndexOperator extends BaseFilterOperator {\n   public StarTreeIndexOperator(IndexSegment segment, BrokerRequest brokerRequest) {\n     this.segment = segment;\n     this.brokerRequest = brokerRequest;\n-    equalityPredicateColumns = new HashSet<>();\n+    predicateColumns = new HashSet<>();\n     groupByColumns = new HashSet<>();\n     predicatesMap = new HashMap<>();\n     initPredicatesToEvaluate();\n@@ -101,28 +100,19 @@ public class StarTreeIndexOperator extends BaseFilterOperator {\n     Predicate predicate = Predicate.newPredicate(childFilter);\n     Dictionary dictionary = segment.getDataSource(column).getDictionary();\n     PredicateEntry predicateEntry = null;\n-    if (childFilter.getOperator() == FilterOperator.EQUALITY) {\n-      EqPredicate eqPredicate = (EqPredicate) predicate;\n-      // Computing dictionaryId allows us early termination and avoids multiple looks up during tree\n-      // traversal\n-      int dictId = dictionary.indexOf(eqPredicate.getEqualsValue());\n-      if (dictId < 0) {\n-        // Empty result\n-        emptyResult = true;\n-      }\n-      predicateEntry = new PredicateEntry(predicate, dictId);\n-      equalityPredicateColumns.add(column);\n-    } else {\n-      // If dictionary does not have any values that satisfy the predicate, set emptyResults to\n-      // true.\n-      PredicateEvaluator predicateEvaluator =\n-          PredicateEvaluatorProvider.getPredicateFunctionFor(predicate, dictionary);\n-      if (predicateEvaluator.alwaysFalse()) {\n-        emptyResult = true;\n-      }\n-      // Store this predicate, we will have to apply it later\n-      predicateEntry = new PredicateEntry(predicate, -1);\n+\n+    PredicateEvaluator predicateEvaluator =\n+        PredicateEvaluatorProvider.getPredicateFunctionFor(predicate, dictionary);\n+\n+    // If dictionary does not have any values that satisfy the predicate, set emptyResults to\n+    // true.\n+    if (predicateEvaluator.alwaysFalse()) {\n+      emptyResult = true;\n     }\n+\n+    // Store this predicate, we will have to apply it later\n+    predicateEntry = new PredicateEntry(predicate, predicateEvaluator);\n+    predicateColumns.add(column);\n     predicatesMap.put(column, predicateEntry);\n   }\n \n@@ -408,16 +398,19 @@ public class StarTreeIndexOperator extends BaseFilterOperator {\n       HashSet<String> remainingGroupByColumns) {\n     Map<Integer, StarTreeIndexNode> children = node.getChildren();\n \n-    if (equalityPredicateColumns.contains(column)) {\n+    if (predicateColumns.contains(column)) {\n       // Check if there is exact match filter on this column\n-      int nextValueId;\n       PredicateEntry predicateEntry = predicatesMap.get(column);\n-      nextValueId = predicateEntry.dictionaryId;\n+\n       remainingPredicateColumns.remove(column);\n       remainingGroupByColumns.remove(column);\n-      if (children.containsKey(nextValueId)) {\n-        addNodeToSearchQueue(searchQueue, children.get(nextValueId), remainingPredicateColumns,\n-            remainingGroupByColumns);\n+\n+      int[] matchingDictionaryIds = predicateEntry.predicateEvaluator.getMatchingDictionaryIds();\n+      for (int matchingDictionaryId : matchingDictionaryIds) {\n+        if (children.containsKey(matchingDictionaryId)) {\n+          addNodeToSearchQueue(searchQueue, children.get(matchingDictionaryId), remainingPredicateColumns,\n+              remainingGroupByColumns);\n+        }\n       }\n     } else {\n       int nextValueId;\n@@ -473,11 +466,11 @@ public class StarTreeIndexOperator extends BaseFilterOperator {\n \n   class PredicateEntry {\n     Predicate predicate;\n-    int dictionaryId;\n+    private PredicateEvaluator predicateEvaluator;\n \n-    public PredicateEntry(Predicate predicate, int dictionaryId) {\n+    public PredicateEntry(Predicate predicate, PredicateEvaluator predicateEvaluator) {\n       this.predicate = predicate;\n-      this.dictionaryId = dictionaryId;\n+      this.predicateEvaluator = predicateEvaluator;\n     }\n   }\n }\ndiff --git a/pinot-integration-tests/src/test/java/com/linkedin/pinot/integration/tests/StarTreeClusterIntegrationTest.java b/pinot-integration-tests/src/test/java/com/linkedin/pinot/integration/tests/StarTreeClusterIntegrationTest.java\nindex f9c6681fb7..23e709e7ee 100644\n--- a/pinot-integration-tests/src/test/java/com/linkedin/pinot/integration/tests/StarTreeClusterIntegrationTest.java\n+++ b/pinot-integration-tests/src/test/java/com/linkedin/pinot/integration/tests/StarTreeClusterIntegrationTest.java\n@@ -339,4 +339,28 @@ public class StarTreeClusterIntegrationTest extends ClusterTest {\n     query = \"SELECT SUM(DepDelayMinutes) FROM myStarTable WHERE DepDelay > 0 AND ArrDelay > 0 AND OriginStateName = 'Massachusetts'\\n\";\n     testOneQuery(query, false);\n   }\n+\n+  /**\n+   * Tests queries with non-equality predicates\n+   */\n+  @Test\n+  public void testNonEqualityPredicates() {\n+    String query;\n+\n+    // 'Range' query\n+    query = \"SELECT SUM(DepDelayMinutes) FROM myStarTable WHERE DepDelay between 0 and 10000\\n\";\n+    testOneQuery(query, false);\n+\n+    // 'IN' query\n+    query = \"SELECT SUM(DepDelayMinutes) FROM myStarTable WHERE Origin IN ('JFK', 'LAX', 'DCW')\\n\";\n+    testOneQuery(query, false);\n+\n+    // 'NOT IN' Query\n+    query = \"SELECT SUM(DepDelayMinutes) FROM myStarTable WHERE Origin NOT IN ('JFK', 'LAX', 'DCW')\\n\";\n+    testOneQuery(query, false);\n+\n+    // 'NOT EQ' Query\n+    query = \"SELECT SUM(DepDelayMinutes) FROM myStarTable WHERE Origin <> 'JFK'\\n\";\n+    testOneQuery(query, false);\n+  }\n }",
    "Allow terms agg to default to depth first ( <issue_id> ) ( <issue_id> ) .": "diff --git a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java\nindex 1118d6e9bb8..5195fd11978 100644\n--- a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java\n+++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java\n@@ -137,10 +137,10 @@ public class TermsAggregatorFactory extends ValuesSourceAggregatorFactory<Values\n             if (valuesSource instanceof ValuesSource.Bytes.WithOrdinals == false) {\n                 execution = ExecutionMode.MAP;\n             }\n-            final long maxOrd = execution == ExecutionMode.GLOBAL_ORDINALS ? getMaxOrd(valuesSource, searchContext.searcher()) : -1;\n             if (execution == null) {\n                 execution = ExecutionMode.GLOBAL_ORDINALS;\n             }\n+            final long maxOrd = execution == ExecutionMode.GLOBAL_ORDINALS ? getMaxOrd(valuesSource, searchContext.searcher()) : -1;\n             SubAggCollectionMode cm = collectMode;\n             if (cm == null) {\n                 cm = SubAggCollectionMode.DEPTH_FIRST;\ndiff --git a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java\nindex 57b255a1573..3ea22e456e8 100644\n--- a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java\n+++ b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java\n@@ -137,7 +137,7 @@ public class TermsAggregatorTests extends AggregatorTestCase {\n             CoreValuesSourceType.BYTES));\n     }\n \n-    public void testGlobalOrdinalsExecutionHint() throws Exception {\n+    public void testUsesGlobalOrdinalsByDefault() throws Exception {\n         randomizeAggregatorImpl = false;\n \n         Directory directory = newDirectory();\n@@ -148,8 +148,7 @@ public class TermsAggregatorTests extends AggregatorTestCase {\n         IndexSearcher indexSearcher = new IndexSearcher(indexReader);\n \n         TermsAggregationBuilder aggregationBuilder = new TermsAggregationBuilder(\"_name\", ValueType.STRING)\n-            .field(\"string\")\n-            .collectMode(Aggregator.SubAggCollectionMode.BREADTH_FIRST);\n+            .field(\"string\");\n         MappedFieldType fieldType = new KeywordFieldMapper.KeywordFieldType();\n         fieldType.setName(\"string\");\n         fieldType.setHasDocValues(true);\n@@ -159,11 +158,29 @@ public class TermsAggregatorTests extends AggregatorTestCase {\n         GlobalOrdinalsStringTermsAggregator globalAgg = (GlobalOrdinalsStringTermsAggregator) aggregator;\n         assertFalse(globalAgg.remapGlobalOrds());\n \n+        // Infers depth_first because the maxOrd is 0 which is less than the size\n         aggregationBuilder\n             .subAggregation(AggregationBuilders.cardinality(\"card\").field(\"string\"));\n         aggregator = createAggregator(aggregationBuilder, indexSearcher, fieldType);\n         assertThat(aggregator, instanceOf(GlobalOrdinalsStringTermsAggregator.class));\n         globalAgg = (GlobalOrdinalsStringTermsAggregator) aggregator;\n+        assertThat(globalAgg.collectMode, equalTo(Aggregator.SubAggCollectionMode.DEPTH_FIRST));\n+        assertTrue(globalAgg.remapGlobalOrds());\n+\n+        aggregationBuilder\n+            .collectMode(Aggregator.SubAggCollectionMode.DEPTH_FIRST);\n+        aggregator = createAggregator(aggregationBuilder, indexSearcher, fieldType);\n+        assertThat(aggregator, instanceOf(GlobalOrdinalsStringTermsAggregator.class));\n+        globalAgg = (GlobalOrdinalsStringTermsAggregator) aggregator;\n+        assertThat(globalAgg.collectMode, equalTo(Aggregator.SubAggCollectionMode.DEPTH_FIRST));\n+        assertTrue(globalAgg.remapGlobalOrds());\n+\n+        aggregationBuilder\n+            .collectMode(Aggregator.SubAggCollectionMode.BREADTH_FIRST);\n+        aggregator = createAggregator(aggregationBuilder, indexSearcher, fieldType);\n+        assertThat(aggregator, instanceOf(GlobalOrdinalsStringTermsAggregator.class));\n+        globalAgg = (GlobalOrdinalsStringTermsAggregator) aggregator;\n+        assertThat(globalAgg.collectMode, equalTo(Aggregator.SubAggCollectionMode.BREADTH_FIRST));\n         assertFalse(globalAgg.remapGlobalOrds());\n \n         aggregationBuilder",
    "Fix some Makefiles issues with seding Helm Chart files during release process - between RCs etc .": "diff --git a/Makefile b/Makefile\nindex 9ffa9685b..e88187656 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -42,9 +42,9 @@ release_pkg: helm_pkg\n release_helm_version:\n \techo \"Updating default image tags in Helm Chart to $(RELEASE_VERSION)\"\n \t# Update default image tag in chart values.yaml to RELEASE_VERSION\n-\tsed -i 's/\\(tag: \\)latest/\\1$(RELEASE_VERSION)/g' $(CHART_PATH)values.yaml\n+\tsed -i 's/\\(tag: \\).*/\\1$(RELEASE_VERSION)/g' $(CHART_PATH)values.yaml\n \t# Update default image tag in chart README.md config grid with RELEASE_VERSION\n-\tsed -i 's/\\(image\\.tag[^\\n]*\\| \\)`latest`/\\1`$(RELEASE_VERSION)`/g' $(CHART_PATH)README.md\n+\tsed -i 's/\\(image\\.tag[^\\n]*| \\)`.*`/\\1`$(RELEASE_VERSION)`/g' $(CHART_PATH)README.md\n \n helm_pkg:\n \t# Copying unarchived Helm Chart to release directory",
    "Added some unit tests on FileUtils .": "diff --git a/test/java/net/yacy/kelondro/util/FileUtilsTest.java b/test/java/net/yacy/kelondro/util/FileUtilsTest.java\nindex a01341f1b..7d6ced99e 100644\n--- a/test/java/net/yacy/kelondro/util/FileUtilsTest.java\n+++ b/test/java/net/yacy/kelondro/util/FileUtilsTest.java\n@@ -26,6 +26,8 @@ import java.io.ByteArrayOutputStream;\n import java.io.FilterInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.io.StringReader;\n+import java.io.StringWriter;\n import java.nio.charset.StandardCharsets;\n \n import org.junit.Assert;\n@@ -152,6 +154,60 @@ public class FileUtilsTest {\n \t\t}\n \t}\n \t\n+\t/**\n+\t * Copy reader : normal case\n+\t * @throws IOException when a read/write error occurred\n+\t */\n+\t@Test\n+\tpublic void testCopyReaderWriter() throws IOException {\n+\t\tStringReader source = new StringReader(\"A test string\");\n+\t\tStringWriter dest = new StringWriter();\n+\t\t\n+\t\ttry {\n+\t\t\tFileUtils.copy(source, dest);\n+\t\t} finally {\n+\t\t\tsource.close();\n+\t\t\tdest.close();\n+\t\t}\n+\t\tAssert.assertEquals(\"A test string\", dest.toString());\n+\t}\n+\t\n+\t/**\n+\t * Copy reader : empty input\n+\t * @throws IOException when a read/write error occurred\n+\t */\n+\t@Test\n+\tpublic void testCopyEmptyReaderWriter() throws IOException {\n+\t\tStringReader source = new StringReader(\"\");\n+\t\tStringWriter dest = new StringWriter();\n+\t\ttry {\n+\t\t\tFileUtils.copy(source, dest);\n+\t\t} finally {\n+\t\t\tsource.close();\n+\t\t\tdest.close();\n+\t\t}\n+\t\tAssert.assertEquals(\"\", dest.toString());\n+\t}\n+\t\n+\t/**\n+\t * Copy reader : writer with existing content\n+\t * @throws IOException when a read/write error occurred\n+\t */\n+\t@Test\n+\tpublic void testCopyReaderWriterNotEmpty() throws IOException {\n+\t\tStringReader source = new StringReader(\"An input String\");\n+\t\tStringWriter dest = new StringWriter();\n+\t\t\n+\t\ttry {\n+\t\t\tdest.write(\"Non empty out stream.\");\n+\t\t\tFileUtils.copy(source, dest);\n+\t\t} finally {\n+\t\t\tsource.close();\n+\t\t\tdest.close();\n+\t\t}\n+\t\tAssert.assertEquals(\"Non empty out stream.An input String\", dest.toString());\n+\t}\n+\t\t\n \t/**\n \t * Test reading n bytes in a stream\n \t * @throws IOException when a read/write error occurred",
    "add bytecodeexecution exception to transaction": "diff --git a/src/main/java/org/tron/core/capsule/TransactionCapsule.java b/src/main/java/org/tron/core/capsule/TransactionCapsule.java\nindex 5fdebe6b1..d5c3c377b 100755\n--- a/src/main/java/org/tron/core/capsule/TransactionCapsule.java\n+++ b/src/main/java/org/tron/core/capsule/TransactionCapsule.java\n@@ -38,6 +38,7 @@ import org.tron.common.crypto.ECKey;\n import org.tron.common.crypto.ECKey.ECDSASignature;\n import org.tron.common.runtime.Runtime;\n import org.tron.common.runtime.vm.program.Program.BadJumpDestinationException;\n+import org.tron.common.runtime.vm.program.Program.BytecodeExecutionException;\n import org.tron.common.runtime.vm.program.Program.IllegalOperationException;\n import org.tron.common.runtime.vm.program.Program.JVMStackOverFlowException;\n import org.tron.common.runtime.vm.program.Program.OutOfEnergyException;\n@@ -47,8 +48,10 @@ import org.tron.common.runtime.vm.program.Program.PrecompiledContractException;\n import org.tron.common.runtime.vm.program.Program.StackTooLargeException;\n import org.tron.common.runtime.vm.program.Program.StackTooSmallException;\n import org.tron.common.utils.ByteArray;\n+import org.tron.common.utils.ForkController;\n import org.tron.common.utils.Sha256Hash;\n import org.tron.core.Wallet;\n+import org.tron.core.config.Parameter.ForkBlockVersionEnum;\n import org.tron.core.db.AccountStore;\n import org.tron.core.db.Manager;\n import org.tron.core.db.TransactionTrace;\n@@ -772,6 +775,12 @@ public class TransactionCapsule implements ProtoCapsule<Transaction> {\n       this.setResultCode(contractResult.JVM_STACK_OVER_FLOW);\n       return;\n     }\n+    if (ForkController.instance().pass(ForkBlockVersionEnum.VERSION_3_5)){\n+      if (exception instanceof BytecodeExecutionException) {\n+        this.setResultCode(contractResult.BYTECODE_EXECUTION_EXCEPTION);\n+        return;\n+      }\n+    }\n     this.setResultCode(contractResult.UNKNOWN);\n     return;\n   }\ndiff --git a/src/main/java/org/tron/core/db/TransactionTrace.java b/src/main/java/org/tron/core/db/TransactionTrace.java\nindex 229c80448..6ebea5e0c 100644\n--- a/src/main/java/org/tron/core/db/TransactionTrace.java\n+++ b/src/main/java/org/tron/core/db/TransactionTrace.java\n@@ -13,6 +13,7 @@ import org.tron.common.runtime.Runtime;\n import org.tron.common.runtime.RuntimeImpl;\n import org.tron.common.runtime.vm.program.InternalTransaction;\n import org.tron.common.runtime.vm.program.Program.BadJumpDestinationException;\n+import org.tron.common.runtime.vm.program.Program.BytecodeExecutionException;\n import org.tron.common.runtime.vm.program.Program.IllegalOperationException;\n import org.tron.common.runtime.vm.program.Program.JVMStackOverFlowException;\n import org.tron.common.runtime.vm.program.Program.OutOfEnergyException;\n@@ -24,6 +25,7 @@ import org.tron.common.runtime.vm.program.Program.StackTooSmallException;\n import org.tron.common.runtime.vm.program.ProgramResult;\n import org.tron.common.runtime.vm.program.invoke.ProgramInvokeFactoryImpl;\n import org.tron.common.storage.DepositImpl;\n+import org.tron.common.utils.ForkController;\n import org.tron.common.utils.Sha256Hash;\n import org.tron.core.Constant;\n import org.tron.core.capsule.AccountCapsule;\n@@ -31,6 +33,7 @@ import org.tron.core.capsule.BlockCapsule;\n import org.tron.core.capsule.ContractCapsule;\n import org.tron.core.capsule.ReceiptCapsule;\n import org.tron.core.capsule.TransactionCapsule;\n+import org.tron.core.config.Parameter.ForkBlockVersionEnum;\n import org.tron.core.config.args.Args;\n import org.tron.core.exception.BalanceInsufficientException;\n import org.tron.core.exception.ContractExeException;\n@@ -277,6 +280,12 @@ public class TransactionTrace {\n       receipt.setResult(contractResult.JVM_STACK_OVER_FLOW);\n       return;\n     }\n+    if (ForkController.instance().pass(ForkBlockVersionEnum.VERSION_3_5)){\n+      if (exception instanceof BytecodeExecutionException) {\n+        receipt.setResult(contractResult.BYTECODE_EXECUTION_EXCEPTION);\n+        return;\n+      }\n+    }\n     receipt.setResult(contractResult.UNKNOWN);\n   }\n \ndiff --git a/src/main/protos/core/Tron.proto b/src/main/protos/core/Tron.proto\nindex 67d7405df..98b36225f 100644\n--- a/src/main/protos/core/Tron.proto\n+++ b/src/main/protos/core/Tron.proto\n@@ -292,6 +292,7 @@ message Transaction {\n       OUT_OF_TIME = 11;\n       JVM_STACK_OVER_FLOW = 12;\n       UNKNOWN = 13;\n+      BYTECODE_EXECUTION_EXCEPTION = 14;\n     }\n     int64 fee = 1;\n     code ret = 2;",
    "simplified code , allow old QTEKeys to be GCed": "diff --git a/samples/s14gameplay/QTESample.java b/samples/s14gameplay/QTESample.java\nindex 58f2a97cf..90d71e7f0 100644\n--- a/samples/s14gameplay/QTESample.java\n+++ b/samples/s14gameplay/QTESample.java\n@@ -30,6 +30,8 @@ import com.almasb.fxgl.app.GameApplication;\n import com.almasb.fxgl.gameplay.qte.QTE;\n import com.almasb.fxgl.settings.GameSettings;\n import javafx.scene.input.KeyCode;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Text;\n import javafx.util.Duration;\n \n /**\n@@ -60,7 +62,7 @@ public class QTESample extends GameApplication {\n     protected void initGame() {\n \n         // when app runs, after 2 seconds a QTE event will occur\n-        getMasterTimer().runOnceAfter(() -> {\n+        getMasterTimer().runAtInterval(() -> {\n \n             // 1. get QTE service\n             QTE qte = getQTE();\n@@ -72,14 +74,19 @@ public class QTESample extends GameApplication {\n \n             }, Duration.seconds(3), KeyCode.F, KeyCode.X, KeyCode.G, KeyCode.L);\n \n-        }, Duration.seconds(2));\n+        }, Duration.seconds(5));\n     }\n \n     @Override\n     protected void initPhysics() {}\n \n     @Override\n-    protected void initUI() {}\n+    protected void initUI() {\n+        Text text = getUIFactory().newText(\"Prepare! QTE runs every 5 seconds\", Color.BLACK, 16.0);\n+        text.setTranslateY(50);\n+\n+        getGameScene().addUINode(text);\n+    }\n \n     @Override\n     public void onUpdate(double tpf) {}\ndiff --git a/src/main/kotlin/com/almasb/fxgl/gameplay/qte/QTEKey.kt b/src/main/kotlin/com/almasb/fxgl/gameplay/qte/QTEKey.kt\nindex ae3e58417..fa2ca629d 100644\n--- a/src/main/kotlin/com/almasb/fxgl/gameplay/qte/QTEKey.kt\n+++ b/src/main/kotlin/com/almasb/fxgl/gameplay/qte/QTEKey.kt\n@@ -37,7 +37,7 @@ import javafx.scene.shape.Rectangle\n  *\n  * @author Almas Baimagambetov (almaslvl@gmail.com)\n  */\n-class QTEKey(keyCode: KeyCode) : StackPane() {\n+class QTEKey(val keyCode: KeyCode) : StackPane() {\n \n     private val background = Rectangle(72.0, 72.0, Color.BLACK)\n     private val text = FXGL.getUIFactory().newText(keyCode.getName(), Color.WHITE, 72.0)\ndiff --git a/src/main/kotlin/com/almasb/fxgl/gameplay/qte/QTEProvider.kt b/src/main/kotlin/com/almasb/fxgl/gameplay/qte/QTEProvider.kt\nindex 6b5c9d755..aeb37d450 100644\n--- a/src/main/kotlin/com/almasb/fxgl/gameplay/qte/QTEProvider.kt\n+++ b/src/main/kotlin/com/almasb/fxgl/gameplay/qte/QTEProvider.kt\n@@ -57,7 +57,6 @@ class QTEProvider\n     private val closeButton = Button()\n     private val keysBox = HBox(10.0)\n \n-    private val queue = ArrayDeque<KeyCode>()\n     private val qteKeys = ArrayDeque<QTEKey>()\n \n     private lateinit var callback: Consumer<Boolean>\n@@ -71,14 +70,12 @@ class QTEProvider\n \n         eventHandler = EventHandler<KeyEvent> {\n \n-            val k = queue.poll()\n+            val qteKey = qteKeys.poll()\n \n-            if (k == it.code) {\n-\n-                val qteKey = qteKeys.poll()\n+            if (qteKey.keyCode == it.code) {\n                 qteKey.lightUp()\n \n-                if (queue.isEmpty()) {\n+                if (qteKeys.isEmpty()) {\n                     close()\n                     callback.accept(true)\n                 }\n@@ -99,8 +96,8 @@ class QTEProvider\n     private fun close() {\n         scheduledAction.cancel(true)\n \n-        queue.clear()\n         qteKeys.clear()\n+        keysBox.children.clear()\n \n         fxScene.removeEventHandler(KeyEvent.KEY_PRESSED, eventHandler)\n \n@@ -111,21 +108,21 @@ class QTEProvider\n         if (keys.isEmpty())\n             throw IllegalArgumentException(\"At least 1 key must be specified\")\n \n-        if (queue.isNotEmpty())\n+        if (qteKeys.isNotEmpty())\n             throw IllegalStateException(\"Cannot start more than 1 QTE at a time\")\n \n         this.callback = callback\n \n-        queue.addAll(keys)\n         qteKeys.addAll(keys.map { QTEKey(it) })\n \n         keysBox.children.setAll(qteKeys)\n \n         show()\n \n+        // timer\n         scheduledAction = FXGL.getExecutor().schedule( {\n \n-            if (queue.isNotEmpty()) {\n+            if (qteKeys.isNotEmpty()) {\n                 Platform.runLater {\n \n                     close()",
    "Fixed test after re - ordering username and password validation": "diff --git a/community/community-it/community-it/src/test/java/org/neo4j/server/security/auth/AuthProceduresIT.java b/community/community-it/community-it/src/test/java/org/neo4j/server/security/auth/AuthProceduresIT.java\nindex c4e8f58d81f..60b5141ff75 100644\n--- a/community/community-it/community-it/src/test/java/org/neo4j/server/security/auth/AuthProceduresIT.java\n+++ b/community/community-it/community-it/src/test/java/org/neo4j/server/security/auth/AuthProceduresIT.java\n@@ -209,10 +209,8 @@ public class AuthProceduresIT\n     void shouldNotCreateUserIfInvalidUsername()\n     {\n         assertFail( admin, \"CALL dbms.security.createUser('', '1234', true)\", \"The provided username is empty.\" );\n-        assertFail( admin, \"CALL dbms.security.createUser(',!', '1234', true)\",\n-                \"Username ',!' contains illegal characters.\" );\n-        assertFail( admin, \"CALL dbms.security.createUser(':ss!', '', true)\", \"Username ':ss!' contains illegal \" +\n-                \"characters.\" );\n+        assertFail( admin, \"CALL dbms.security.createUser(',!', '1234', true)\", \"Username ',!' contains illegal characters.\" );\n+        assertFail( admin, \"CALL dbms.security.createUser(':ss!', '1234', true)\", \"Username ':ss!' contains illegal \" + \"characters.\" );\n     }\n \n     @Test",
    "Specify null variable in FileInStream . java precondition check": "diff --git a/core/client/src/main/java/alluxio/client/file/FileInStream.java b/core/client/src/main/java/alluxio/client/file/FileInStream.java\nindex 3c890ab924..b78f032a90 100644\n--- a/core/client/src/main/java/alluxio/client/file/FileInStream.java\n+++ b/core/client/src/main/java/alluxio/client/file/FileInStream.java\n@@ -525,7 +525,7 @@ public class FileInStream extends InputStream implements BoundedStream, Seekable\n       // End of file.\n       return;\n     }\n-    Preconditions.checkNotNull(mCurrentBlockInStream);\n+    Preconditions.checkNotNull(mCurrentBlockInStream, \"mCurrentBlockInStream\");\n     if (!mShouldCache || mCurrentBlockInStream.isLocal()) {\n       return;\n     }",
    "Remove vendor_version . h from j9cfg . h .": "diff --git a/runtime/cfdumper/main.c b/runtime/cfdumper/main.c\nindex e5f3e8af2..9a068eb05 100644\n--- a/runtime/cfdumper/main.c\n+++ b/runtime/cfdumper/main.c\n@@ -36,6 +36,7 @@\n #include \"j9cp.h\"\n #include \"bcutil_api.h\"\n #include \"cfdumper_internal.h\"\n+#include \"vendor_version.h\"\n \n #if defined(J9ZOS390)\n #include \"atoe.h\"\ndiff --git a/runtime/gc_check/CheckCycle.cpp b/runtime/gc_check/CheckCycle.cpp\nindex 8ee48e734..870f39a95 100644\n--- a/runtime/gc_check/CheckCycle.cpp\n+++ b/runtime/gc_check/CheckCycle.cpp\n@@ -23,6 +23,7 @@\n \n #include <string.h>\n \n+#include \"vendor_version.h\"\n #include \"CheckCycle.hpp\"\n #include \"CheckClassHeap.hpp\"\n #include \"CheckClassLoaders.hpp\"\ndiff --git a/runtime/include/j9cfg.h.ftl b/runtime/include/j9cfg.h.ftl\nindex 112598f42..4dc64686a 100644\n--- a/runtime/include/j9cfg.h.ftl\n+++ b/runtime/include/j9cfg.h.ftl\n@@ -33,7 +33,6 @@ extern \"C\" {\n #endif\n \n #include \"omrcfg.h\"\n-#include \"vendor_version.h\"\n \n #define J9_COPYRIGHT_STRING \"(c) Copyright 1991, ${uma.year} IBM Corp. and others.\"\n \ndiff --git a/runtime/jnichk/jnicheck.c b/runtime/jnichk/jnicheck.c\nindex 2ae4d6a64..2400634d1 100644\n--- a/runtime/jnichk/jnicheck.c\n+++ b/runtime/jnichk/jnicheck.c\n@@ -42,6 +42,7 @@\n #include \"jnicheck.h\"\n #include \"jnichk_internal.h\"\n #include \"ut_j9jni.h\"\n+#include \"vendor_version.h\"\n \n static void jniCallIn (J9VMThread * vmThread);\n static void methodExitHook (J9HookInterface** hook, UDATA eventNum, void* eventData, void* userData);\ndiff --git a/runtime/vmchk/vmcheck.c b/runtime/vmchk/vmcheck.c\nindex 320ba8735..4d7831c39 100755\n--- a/runtime/vmchk/vmcheck.c\n+++ b/runtime/vmchk/vmcheck.c\n@@ -32,6 +32,7 @@\n #include \"mmomrhook.h\"\n #include \"vmcheck.h\"\n #include \"ut_j9vmchk.h\"\n+#include \"vendor_version.h\"\n \n #include <stdarg.h>\n ",
    "Fix some compiling and loading issues": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\nindex 7230e8ceb6..b4cebc3cf7 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n@@ -222,7 +222,7 @@ public class Collection {\n         modSchema(true);\n         SchedV2 v2Sched = new SchedV2(this);\n         if (ver == 1) {\n-            v2Sched.moveToV1()\n+            v2Sched.moveToV1();\n         } else {\n             v2Sched.moveToV2();\n         }\ndiff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java\nindex 3c5866bfe2..27663cd7ce 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java\n@@ -96,6 +96,14 @@ public class Sched {\n     // Not in libanki\n     private WeakReference<Activity> mContextReference;\n \n+\n+    /**\n+     * This is a do-nothing constructor for descendants (ScedV2) to use.\n+     */\n+    public Sched() {\n+\n+    }\n+\n     /**\n      * queue types: 0=new/cram, 1=lrn, 2=rev, 3=day lrn, -1=suspended, -2=buried\n      * revlog types: 0=lrn, 1=rev, 2=relrn, 3=cram\ndiff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/SchedV2.java b/AnkiDroid/src/main/java/com/ichi2/libanki/SchedV2.java\nindex 944ed9a42a..2c7c69502f 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/SchedV2.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/SchedV2.java\n@@ -29,7 +29,6 @@ import android.text.SpannableStringBuilder;\n import android.text.TextUtils;\n import android.text.style.StyleSpan;\n \n-import com.google.common.primitives.Longs;\n import com.ichi2.anki.R;\n import com.ichi2.libanki.hooks.Hooks;\n \n@@ -112,7 +111,7 @@ public class SchedV2 extends Sched {\n      */\n \n     public SchedV2(Collection col) {\n-        super(col);\n+        super();\n         mCol = col;\n         mQueueLimit = 50;\n         mReportLimit = 1000;\n@@ -2363,7 +2362,7 @@ public class SchedV2 extends Sched {\n         }\n         // then bury\n         if (toBury.size() > 0) {\n-            buryCards(Longs.toArray(toBury),false);\n+            buryCards(Utils.arrayList2array(toBury),false);\n         }\n     }\n ",
    "Remove unused setSelfCmdParser method": "diff --git a/cli/ballerina-launcher/src/main/java/org/ballerinalang/launcher/BLauncherCmd.java b/cli/ballerina-launcher/src/main/java/org/ballerinalang/launcher/BLauncherCmd.java\nindex 7c46a4e9add..d62b4e91989 100644\n--- a/cli/ballerina-launcher/src/main/java/org/ballerinalang/launcher/BLauncherCmd.java\n+++ b/cli/ballerina-launcher/src/main/java/org/ballerinalang/launcher/BLauncherCmd.java\n@@ -62,13 +62,6 @@ public interface BLauncherCmd {\n      */\n     void setParentCmdParser(CommandLine parentCmdParser);\n \n-    /**\n-     * Set the {@link CommandLine} object representing this command.\n-     *\n-     * @param selfCmdParser the {@link CommandLine} object representing the command\n-     */\n-    void setSelfCmdParser(CommandLine selfCmdParser);\n-\n     /**\n      * Retrieve command usage info.\n      *\ndiff --git a/cli/ballerina-launcher/src/main/java/org/ballerinalang/launcher/Main.java b/cli/ballerina-launcher/src/main/java/org/ballerinalang/launcher/Main.java\nindex 68768176152..db6a5f82dd8 100644\n--- a/cli/ballerina-launcher/src/main/java/org/ballerinalang/launcher/Main.java\n+++ b/cli/ballerina-launcher/src/main/java/org/ballerinalang/launcher/Main.java\n@@ -80,11 +80,6 @@ public class Main {\n         }\n     }\n \n-    private static CommandLine addSubCommand(CommandLine parentCmd, String commandName, Object commandObject) {\n-        parentCmd.addSubcommand(commandName, commandObject);\n-        return parentCmd.getSubcommands().get(commandName);\n-    }\n-\n     private static Optional<BLauncherCmd> getInvokedCmd(String... args) {\n         try {\n             DefaultCmd defaultCmd = new DefaultCmd();\n@@ -93,9 +88,7 @@ public class Main {\n \n             // Run command\n             RunCmd runCmd = new RunCmd();\n-            CommandLine pcRunCmd = addSubCommand(cmdParser, BallerinaCliCommands.RUN, runCmd);\n             runCmd.setParentCmdParser(cmdParser);\n-            runCmd.setSelfCmdParser(pcRunCmd);\n \n             // Set stop at positional before the other commands are added as sub commands, to enforce ordering only\n             // for the run command\n@@ -295,10 +288,6 @@ public class Main {\n         @Override\n         public void setParentCmdParser(CommandLine parentCmdParser) {\n         }\n-\n-        @Override\n-        public void setSelfCmdParser(CommandLine selfCmdParser) {\n-        }\n     }\n \n     /**\n@@ -350,10 +339,6 @@ public class Main {\n         public void setParentCmdParser(CommandLine parentCmdParser) {\n             this.parentCmdParser = parentCmdParser;\n         }\n-\n-        @Override\n-        public void setSelfCmdParser(CommandLine selfCmdParser) {\n-        }\n     }\n \n     /**\n@@ -410,11 +395,6 @@ public class Main {\n         public void setParentCmdParser(CommandLine parentCmdParser) {\n             this.parentCmdParser = parentCmdParser;\n         }\n-\n-        @Override\n-        public void setSelfCmdParser(CommandLine selfCmdParser) {\n-\n-        }\n     }\n \n     /**\n@@ -502,11 +482,6 @@ public class Main {\n         public void setParentCmdParser(CommandLine parentCmdParser) {\n         }\n \n-        @Override\n-        public void setSelfCmdParser(CommandLine selfCmdParser) {\n-\n-        }\n-\n         private String promptForInput(String msg) {\n             errStream.println(msg);\n             return new String(System.console().readPassword());\n@@ -562,9 +537,5 @@ public class Main {\n         @Override\n         public void setParentCmdParser(CommandLine parentCmdParser) {\n         }\n-\n-        @Override\n-        public void setSelfCmdParser(CommandLine selfCmdParser) {\n-        }\n     }\n }\ndiff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\nindex 27c0a787116..6193da48087 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n@@ -230,10 +230,6 @@ public class BuildCommand implements BLauncherCmd {\n     public void setParentCmdParser(CommandLine parentCmdParser) {\n     }\n \n-    @Override\n-    public void setSelfCmdParser(CommandLine selfCmdParser) {\n-    }\n-\n     private void genNativeBinary(Path projectDirPath, List<String> argList) {\n         throw LauncherUtils.createLauncherException(\"llvm native generation is not supported\");\n     }\ndiff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/InitCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/InitCommand.java\nindex b06974eab60..db3a1c31230 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/InitCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/InitCommand.java\n@@ -295,13 +295,6 @@ public class InitCommand implements BLauncherCmd {\n     public void setParentCmdParser(CommandLine parentCmdParser) {\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public void setSelfCmdParser(CommandLine selfCmdParser) {\n-    }\n-\n     /**\n      * Validates the version is a semver version.\n      *\ndiff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/InstallCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/InstallCommand.java\nindex ff2ec40296f..eecd3ca75f2 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/InstallCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/InstallCommand.java\n@@ -89,8 +89,4 @@ public class InstallCommand implements BLauncherCmd {\n     @Override\n     public void setParentCmdParser(CommandLine parentCmdParser) {\n     }\n-\n-    @Override\n-    public void setSelfCmdParser(CommandLine selfCmdParser) {\n-    }\n }\ndiff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/ListCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/ListCommand.java\nindex e5692de3286..f9b0ff5879e 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/ListCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/ListCommand.java\n@@ -94,8 +94,4 @@ public class ListCommand implements BLauncherCmd {\n     @Override\n     public void setParentCmdParser(CommandLine parentCmdParser) {\n     }\n-\n-    @Override\n-    public void setSelfCmdParser(CommandLine selfCmdParser) {\n-    }\n }\ndiff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/PullCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/PullCommand.java\nindex 8350464001c..bd85214811e 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/PullCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/PullCommand.java\n@@ -146,8 +146,4 @@ public class PullCommand implements BLauncherCmd {\n     @Override\n     public void setParentCmdParser(CommandLine parentCmdParser) {\n     }\n-\n-    @Override\n-    public void setSelfCmdParser(CommandLine selfCmdParser) {\n-    }\n }\ndiff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/PushCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/PushCommand.java\nindex 3199d9c972e..d9d76eab9c5 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/PushCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/PushCommand.java\n@@ -113,8 +113,4 @@ public class PushCommand implements BLauncherCmd {\n     @Override\n     public void setParentCmdParser(CommandLine parentCmdParser) {\n     }\n-\n-    @Override\n-    public void setSelfCmdParser(CommandLine selfCmdParser) {\n-    }\n }\ndiff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/SearchCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/SearchCommand.java\nindex 47860711cb5..c0853aca807 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/SearchCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/SearchCommand.java\n@@ -89,8 +89,4 @@ public class SearchCommand implements BLauncherCmd {\n     @Override\n     public void setParentCmdParser(CommandLine parentCmdParser) {\n     }\n-\n-    @Override\n-    public void setSelfCmdParser(CommandLine selfCmdParser) {\n-    }\n }\ndiff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/UninstallCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/UninstallCommand.java\nindex 5627b9a9c31..ec750b16a10 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/UninstallCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/UninstallCommand.java\n@@ -80,8 +80,4 @@ public class UninstallCommand implements BLauncherCmd {\n     @Override\n     public void setParentCmdParser(CommandLine parentCmdParser) {\n     }\n-\n-    @Override\n-    public void setSelfCmdParser(CommandLine selfCmdParser) {\n-    }\n }\ndiff --git a/misc/docerina/src/main/java/org/ballerinalang/docgen/cmd/BallerinaDocCmd.java b/misc/docerina/src/main/java/org/ballerinalang/docgen/cmd/BallerinaDocCmd.java\nindex 13856daff79..38949c99b29 100644\n--- a/misc/docerina/src/main/java/org/ballerinalang/docgen/cmd/BallerinaDocCmd.java\n+++ b/misc/docerina/src/main/java/org/ballerinalang/docgen/cmd/BallerinaDocCmd.java\n@@ -137,8 +137,4 @@ public class BallerinaDocCmd implements BLauncherCmd {\n     @Override\n     public void setParentCmdParser(CommandLine parentCmdParser) {\n     }\n-\n-    @Override\n-    public void setSelfCmdParser(CommandLine selfCmdParser) {\n-    }\n }\ndiff --git a/misc/protobuf-ballerina/src/main/java/org/ballerinalang/protobuf/cmd/GrpcCmd.java b/misc/protobuf-ballerina/src/main/java/org/ballerinalang/protobuf/cmd/GrpcCmd.java\nindex 52b834baba8..f8e1ad99119 100644\n--- a/misc/protobuf-ballerina/src/main/java/org/ballerinalang/protobuf/cmd/GrpcCmd.java\n+++ b/misc/protobuf-ballerina/src/main/java/org/ballerinalang/protobuf/cmd/GrpcCmd.java\n@@ -313,11 +313,6 @@ public class GrpcCmd implements BLauncherCmd {\n         this.parentCmdParser = parentCmdParser;\n     }\n     \n-    @Override\n-    public void setSelfCmdParser(CommandLine selfCmdParser) {\n-    \n-    }\n-    \n     private List<String> readProperties(ClassLoader classLoader) {\n         String fileName;\n         List<String> protoFilesList = new ArrayList<>();\ndiff --git a/misc/swagger-ballerina/modules/swagger-to-ballerina-generator/src/main/java/org/ballerinalang/swagger/cmd/SwaggerCmd.java b/misc/swagger-ballerina/modules/swagger-to-ballerina-generator/src/main/java/org/ballerinalang/swagger/cmd/SwaggerCmd.java\nindex 51632b0a32f..0db0ac7f266 100644\n--- a/misc/swagger-ballerina/modules/swagger-to-ballerina-generator/src/main/java/org/ballerinalang/swagger/cmd/SwaggerCmd.java\n+++ b/misc/swagger-ballerina/modules/swagger-to-ballerina-generator/src/main/java/org/ballerinalang/swagger/cmd/SwaggerCmd.java\n@@ -144,9 +144,4 @@ public class SwaggerCmd implements BLauncherCmd {\n     @Override\n     public void setParentCmdParser(CommandLine parentCmdParser) {\n     }\n-\n-    @Override\n-    public void setSelfCmdParser(CommandLine selfCmdParser) {\n-\n-    }\n }\ndiff --git a/misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestCmd.java b/misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestCmd.java\nindex 33d38fabc6a..5675fe9f0e3 100644\n--- a/misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestCmd.java\n+++ b/misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestCmd.java\n@@ -177,10 +177,4 @@ public class TestCmd implements BLauncherCmd {\n     @Override\n     public void setParentCmdParser(CommandLine parentCmdParser) {\n     }\n-\n-    @Override\n-    public void setSelfCmdParser(CommandLine selfCmdParser) {\n-        // ignore\n-\n-    }\n }",
    "Add tests for cte for cbo ( Ashutosh Chauhan ) .": "diff --git a/ql/src/test/queries/clientpositive/cbo_correctness.q b/ql/src/test/queries/clientpositive/cbo_correctness.q\nindex d1a5648ebb..d211c9bab7 100644\n--- a/ql/src/test/queries/clientpositive/cbo_correctness.q\n+++ b/ql/src/test/queries/clientpositive/cbo_correctness.q\n@@ -191,22 +191,24 @@ create view v3 as select v1.value val from v1 join t1 on v1.c_boolean = t1.c_boo\n -- view chaining\n select count(val) from v3 where val != '1';\n with q1 as ( select key from t1 where key = '1')\n-select *\n-from q1\n-;\n+select count(*) from q1;\n \n with q1 as ( select value from v1 where c_boolean = false)\n-select *\n-from q1 ;\n+select count(value) from q1 ;\n \n create view v4 as\n-with q1 as ( select key from t1  where key = '1')\n+with q1 as ( select key,c_int from t1  where key = '1')\n select * from q1\n ;\n \n with q1 as ( select c_int from q2 where c_boolean = false),\n q2 as ( select c_int,c_boolean from v1  where value = '1')\n-select * from (select c_int from q1) a;\n+select sum(c_int) from (select c_int from q1) a;\n+\n+with q1 as ( select t1.c_int c_int from q2 join t1 where q2.c_int = t1.c_int),\n+q2 as ( select c_int,c_boolean from v1  where value = '1')\n+select count(*) from q1 join q2 join v4 on q1.c_int = q2.c_int and v4.c_int = q2.c_int;\n+\n \n drop view v1;\n drop view v2;\ndiff --git a/ql/src/test/results/clientpositive/cbo_correctness.q.out b/ql/src/test/results/clientpositive/cbo_correctness.q.out\nindex 9391828b76..fdaefc622c 100644\n--- a/ql/src/test/results/clientpositive/cbo_correctness.q.out\n+++ b/ql/src/test/results/clientpositive/cbo_correctness.q.out\n@@ -16316,63 +16316,47 @@ POSTHOOK: Input: default@v3\n #### A masked pattern was here ####\n 96\n PREHOOK: query: with q1 as ( select key from t1 where key = '1')\n-select *\n-from q1\n+select count(*) from q1\n PREHOOK: type: QUERY\n PREHOOK: Input: default@t1\n PREHOOK: Input: default@t1@dt=2014\n #### A masked pattern was here ####\n POSTHOOK: query: with q1 as ( select key from t1 where key = '1')\n-select *\n-from q1\n+select count(*) from q1\n POSTHOOK: type: QUERY\n POSTHOOK: Input: default@t1\n POSTHOOK: Input: default@t1@dt=2014\n #### A masked pattern was here ####\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n+12\n PREHOOK: query: with q1 as ( select value from v1 where c_boolean = false)\n-select *\n-from q1\n+select count(value) from q1\n PREHOOK: type: QUERY\n PREHOOK: Input: default@t1\n PREHOOK: Input: default@t1@dt=2014\n PREHOOK: Input: default@v1\n #### A masked pattern was here ####\n POSTHOOK: query: with q1 as ( select value from v1 where c_boolean = false)\n-select *\n-from q1\n+select count(value) from q1\n POSTHOOK: type: QUERY\n POSTHOOK: Input: default@t1\n POSTHOOK: Input: default@t1@dt=2014\n POSTHOOK: Input: default@v1\n #### A masked pattern was here ####\n-1\n-1\n+2\n PREHOOK: query: create view v4 as\n-with q1 as ( select key from t1  where key = '1')\n+with q1 as ( select key,c_int from t1  where key = '1')\n select * from q1\n PREHOOK: type: CREATEVIEW\n PREHOOK: Input: default@t1\n POSTHOOK: query: create view v4 as\n-with q1 as ( select key from t1  where key = '1')\n+with q1 as ( select key,c_int from t1  where key = '1')\n select * from q1\n POSTHOOK: type: CREATEVIEW\n POSTHOOK: Input: default@t1\n POSTHOOK: Output: default@v4\n PREHOOK: query: with q1 as ( select c_int from q2 where c_boolean = false),\n q2 as ( select c_int,c_boolean from v1  where value = '1')\n-select * from (select c_int from q1) a\n+select sum(c_int) from (select c_int from q1) a\n PREHOOK: type: QUERY\n PREHOOK: Input: default@t1\n PREHOOK: Input: default@t1@dt=2014\n@@ -16380,14 +16364,33 @@ PREHOOK: Input: default@v1\n #### A masked pattern was here ####\n POSTHOOK: query: with q1 as ( select c_int from q2 where c_boolean = false),\n q2 as ( select c_int,c_boolean from v1  where value = '1')\n-select * from (select c_int from q1) a\n+select sum(c_int) from (select c_int from q1) a\n POSTHOOK: type: QUERY\n POSTHOOK: Input: default@t1\n POSTHOOK: Input: default@t1@dt=2014\n POSTHOOK: Input: default@v1\n #### A masked pattern was here ####\n-1\n-1\n+2\n+Warning: Shuffle Join JOIN[26][tables = [$hdt$_394, $hdt$_397]] in Stage 'Stage-1:MAPRED' is a cross product\n+PREHOOK: query: with q1 as ( select t1.c_int c_int from q2 join t1 where q2.c_int = t1.c_int),\n+q2 as ( select c_int,c_boolean from v1  where value = '1')\n+select count(*) from q1 join q2 join v4 on q1.c_int = q2.c_int and v4.c_int = q2.c_int\n+PREHOOK: type: QUERY\n+PREHOOK: Input: default@t1\n+PREHOOK: Input: default@t1@dt=2014\n+PREHOOK: Input: default@v1\n+PREHOOK: Input: default@v4\n+#### A masked pattern was here ####\n+POSTHOOK: query: with q1 as ( select t1.c_int c_int from q2 join t1 where q2.c_int = t1.c_int),\n+q2 as ( select c_int,c_boolean from v1  where value = '1')\n+select count(*) from q1 join q2 join v4 on q1.c_int = q2.c_int and v4.c_int = q2.c_int\n+POSTHOOK: type: QUERY\n+POSTHOOK: Input: default@t1\n+POSTHOOK: Input: default@t1@dt=2014\n+POSTHOOK: Input: default@v1\n+POSTHOOK: Input: default@v4\n+#### A masked pattern was here ####\n+31104\n PREHOOK: query: drop view v1\n PREHOOK: type: DROPVIEW\n PREHOOK: Input: default@v1",
    "Adapt client connector syntax changes .": "diff --git a/misc/testerina/modules/testerina-core/src/test/resources/servicemocktest/service-test.bal b/misc/testerina/modules/testerina-core/src/test/resources/servicemocktest/service-test.bal\nindex c9c6b692960..4670cd33461 100644\n--- a/misc/testerina/modules/testerina-core/src/test/resources/servicemocktest/service-test.bal\n+++ b/misc/testerina/modules/testerina-core/src/test/resources/servicemocktest/service-test.bal\n@@ -35,14 +35,12 @@ function init() {\n \n @test:config{before: \"init\"}\n function testService () {\n-    endpoint<http:HttpClient> httpEndpoint {\n-                              create http:HttpClient(url2, {});\n-    }\n+    endpoint<http:HttpClient> httpEndpoint {url : url2}\n \n     http:OutRequest req = {};\n     // Send a GET request to the specified endpoint\n     http:InResponse resp = {};\n-    resp, _ = httpEndpoint.get(\"/events\", req);\n+    resp, _ = httpEndpoint -> get(\"/events\", req);\n \n     io:println(\"GET request:\");\n     var jsonRes, _ = resp.getJsonPayload();\ndiff --git a/misc/testerina/modules/testerina-core/src/test/resources/servicemocktest2/event-service-client.bal b/misc/testerina/modules/testerina-core/src/test/resources/servicemocktest2/event-service-client.bal\nindex 2d9317d5fba..559ee92e722 100644\n--- a/misc/testerina/modules/testerina-core/src/test/resources/servicemocktest2/event-service-client.bal\n+++ b/misc/testerina/modules/testerina-core/src/test/resources/servicemocktest2/event-service-client.bal\n@@ -3,15 +3,14 @@ package src.test.resources.servicemocktest2;\n import ballerina.config;\n import ballerina.net.http;\n \n-const string eventServiceEP = \"http://localhost:9092/events\";\n+string eventServiceEP = \"http://localhost:9092/events\";\n \n public function getEvents () (json resPl) {\n \n-    endpoint<http:HttpClient> httpEndpoint {create http:HttpClient(eventServiceEP, {});\n-    }\n+    endpoint<http:HttpClient> httpEndpoint {url: eventServiceEP}\n     http:OutRequest req = {};\n     http:InResponse resp = {};\n-    resp, _ = httpEndpoint.get(\"/\", req);\n+    resp, _ = httpEndpoint -> get(\"/\", req);\n     resPl, _ = resp.getJsonPayload();\n     return;\n }\n\\ No newline at end of file",
    "Add a default package when package is not specified for mock functions": "diff --git a/misc/testerina/modules/testerina-core/src/main/ballerina/ballerina/test/annotations.bal b/misc/testerina/modules/testerina-core/src/main/ballerina/ballerina/test/annotations.bal\nindex 88d8dbaf71c..fbe1cba80c5 100644\n--- a/misc/testerina/modules/testerina-core/src/main/ballerina/ballerina/test/annotations.bal\n+++ b/misc/testerina/modules/testerina-core/src/main/ballerina/ballerina/test/annotations.bal\n@@ -20,7 +20,7 @@ public struct TestConfig {\n @Field {value:\"packageName: Name of the package that the function to be mocked resides in\"}\n @Field {value:\"functionName: Name of the function to be mocked\"}\n public struct MockConfig {\n-    string packageName;\n+    string packageName = \".\";\n     string functionName;\n }\n \ndiff --git a/misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestAnnotationProcessor.java b/misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestAnnotationProcessor.java\nindex 88358a72e70..900f2cb31f7 100644\n--- a/misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestAnnotationProcessor.java\n+++ b/misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestAnnotationProcessor.java\n@@ -117,6 +117,9 @@ public class TestAnnotationProcessor extends AbstractCompilerPlugin {\n                 suite.addAfterEachFunction(functionName);\n             } else if (MOCK_ANNOTATION_NAME.equals(annotationName)) {\n                 String[] vals = new String[2];\n+                // If package property not present the package is .\n+                // TODO: when default values are supported in annotation struct we can remove this\n+                vals[0] = \".\";\n                 if (attachmentNode.getExpression() instanceof BLangRecordLiteral) {\n                     List<BLangRecordLiteral.BLangRecordKeyValue> attributes = ((BLangRecordLiteral) attachmentNode\n                             .getExpression()).getKeyValuePairs();",
    "Allow hostname binding for SSL": "diff --git a/core/src/main/java/fi/iki/elonen/NanoHTTPD.java b/core/src/main/java/fi/iki/elonen/NanoHTTPD.java\nindex 53ea1b5..03527fa 100644\n--- a/core/src/main/java/fi/iki/elonen/NanoHTTPD.java\n+++ b/core/src/main/java/fi/iki/elonen/NanoHTTPD.java\n@@ -225,14 +225,15 @@ public abstract class NanoHTTPD {\n      */\n     public void start() throws IOException {\n         if (sslServerSocketFactory != null) {\n-            SSLServerSocket ss = (SSLServerSocket) sslServerSocketFactory.createServerSocket(myPort);\n+            SSLServerSocket ss = (SSLServerSocket) sslServerSocketFactory.createServerSocket();\n             ss.setNeedClientAuth(false);\n             myServerSocket = ss;\n         } else {\n             myServerSocket = new ServerSocket();\n-            myServerSocket.setReuseAddress(true);\n-            myServerSocket.bind((hostname != null) ? new InetSocketAddress(hostname, myPort) : new InetSocketAddress(myPort));\n         }\n+        myServerSocket.setReuseAddress(true);\n+        myServerSocket.bind((hostname != null) ? new InetSocketAddress(hostname, myPort) : new InetSocketAddress(myPort));\n+\n         myThread = new Thread(new Runnable() {\n        ",
    "Remove unused * * kwargs arguments for various transforms . .": "diff --git a/sdks/python/apache_beam/transforms/util.py b/sdks/python/apache_beam/transforms/util.py\nindex 8b84d31c57..4388f6a066 100644\n--- a/sdks/python/apache_beam/transforms/util.py\n+++ b/sdks/python/apache_beam/transforms/util.py\n@@ -683,7 +683,7 @@ class ToString(object):\n     by the specific delimiter and the value.\n     \"\"\"\n \n-    def __init__(self, delimiter=None, **kwargs):\n+    def __init__(self, delimiter=None):\n       self.delimiter = delimiter or \",\"\n \n     def expand(self, pcoll):\n@@ -699,7 +699,7 @@ class ToString(object):\n     Transforms each element of the PCollection to a string.\n     \"\"\"\n \n-    def __init__(self, delimiter=None, **kwargs):\n+    def __init__(self, delimiter=None):\n       self.delimiter = delimiter or \",\"\n \n     def expand(self, pcoll):\n@@ -716,7 +716,7 @@ class ToString(object):\n     string. There is no trailing delimiter.\n     \"\"\"\n \n-    def __init__(self, delimiter=None, **kwargs):\n+    def __init__(self, delimiter=None):\n       self.delimiter = delimiter or \",\"\n \n     def expand(self, pcoll):",
    "Add additional comments on modifying mysql JDBCOptions": "diff --git a/plugin-spark-sink-mysql/src/main/scala/org/apache/spark/sql/execution/datasources/jdbc2/JDBCOptions.scala b/plugin-spark-sink-mysql/src/main/scala/org/apache/spark/sql/execution/datasources/jdbc2/JDBCOptions.scala\nindex e56b22094..6d8d7b25b 100755\n--- a/plugin-spark-sink-mysql/src/main/scala/org/apache/spark/sql/execution/datasources/jdbc2/JDBCOptions.scala\n+++ b/plugin-spark-sink-mysql/src/main/scala/org/apache/spark/sql/execution/datasources/jdbc2/JDBCOptions.scala\n@@ -21,6 +21,7 @@ import java.sql.{Connection, DriverManager}\n import java.util.{Locale, Properties}\n \n import org.apache.spark.sql.catalyst.util.CaseInsensitiveMap\n+import org.apache.spark.sql.types.StructType\n \n /**\n  * Options for the JDBC data source.\n@@ -64,7 +65,6 @@ class JDBCOptions(\n   // Required parameters\n   // ------------------------------------------------------------\n   require(parameters.isDefinedAt(JDBC_URL), s\"Option '$JDBC_URL' is required.\")\n-  require(parameters.isDefinedAt(JDBC_TABLE_NAME), s\"Option '$JDBC_TABLE_NAME' is required.\")\n   // a JDBC URL\n   val url = parameters(JDBC_URL)\n \n@@ -210,7 +210,7 @@ class JdbcOptionsInWrite(\n \n   val table = parameters(JDBC_TABLE_NAME)\n \n-  // Custom mysql duplicate key update statement when saveMode is update\n+  // Waterdrop: custom mysql duplicate key update statement when saveMode is update\n   val customUpdateStmt = parameters.get(JDBC_CUSTOM_UPDATE_STMT)\n }\n \n@@ -242,6 +242,7 @@ object JDBCOptions {\n   val JDBC_TXN_ISOLATION_LEVEL = newOption(\"isolationLevel\")\n   val JDBC_SESSION_INIT_STATEMENT = newOption(\"sessionInitStatement\")\n   val JDBC_PUSHDOWN_PREDICATE = newOption(\"pushDownPredicate\")\n+  // Waterdrop: add extra options\n   val JDBC_DUPLICATE_INCS = newOption(\"duplicateIncs\")\n   val JDBC_CUSTOM_UPDATE_STMT = newOption(\"customUpdateStmt\")\n }",
    "Add fix for MaterialAutoCompleteTextView and MaterialMultiAutocompleteTextView": "diff --git a/library/src/main/java/com/rengwuxian/materialedittext/MaterialAutoCompleteTextView.java b/library/src/main/java/com/rengwuxian/materialedittext/MaterialAutoCompleteTextView.java\nindex 42ed696..cc31268 100644\n--- a/library/src/main/java/com/rengwuxian/materialedittext/MaterialAutoCompleteTextView.java\n+++ b/library/src/main/java/com/rengwuxian/materialedittext/MaterialAutoCompleteTextView.java\n@@ -1291,7 +1291,7 @@ public class MaterialAutoCompleteTextView extends AppCompatAutoCompleteTextView\n     }\n \n     // draw the clear button\n-    if (hasFocus() && showClearButton && !TextUtils.isEmpty(getText())) {\n+    if (hasFocus() && showClearButton && !TextUtils.isEmpty(getText()) && isEnabled()) {\n       paint.setAlpha(255);\n       int buttonLeft;\n       if (isRTL()) {\n@@ -1463,7 +1463,7 @@ public class MaterialAutoCompleteTextView extends AppCompatAutoCompleteTextView\n       setSelection(0);\n       return false;\n     }\n-    if (hasFocus() && showClearButton) {\n+    if (hasFocus() && showClearButton && isEnabled()) {\n       switch (event.getAction()) {\n         case MotionEvent.ACTION_DOWN:\n           if (insideClearButton(event)) {\ndiff --git a/library/src/main/java/com/rengwuxian/materialedittext/MaterialMultiAutoCompleteTextView.java b/library/src/main/java/com/rengwuxian/materialedittext/MaterialMultiAutoCompleteTextView.java\nindex 9311924..06789af 100644\n--- a/library/src/main/java/com/rengwuxian/materialedittext/MaterialMultiAutoCompleteTextView.java\n+++ b/library/src/main/java/com/rengwuxian/materialedittext/MaterialMultiAutoCompleteTextView.java\n@@ -1288,7 +1288,7 @@ public class MaterialMultiAutoCompleteTextView extends AppCompatMultiAutoComplet\n     }\n \n     // draw the clear button\n-    if (hasFocus() && showClearButton && !TextUtils.isEmpty(getText())) {\n+    if (hasFocus() && showClearButton && !TextUtils.isEmpty(getText()) && isEnabled()) {\n       paint.setAlpha(255);\n       int buttonLeft;\n       if (isRTL()) {\n@@ -1460,7 +1460,7 @@ public class MaterialMultiAutoCompleteTextView extends AppCompatMultiAutoComplet\n       setSelection(0);\n       return false;\n     }\n-    if (hasFocus() && showClearButton) {\n+    if (hasFocus() && showClearButton && isEnabled()) {\n       switch (event.getAction()) {\n         case MotionEvent.ACTION_DOWN:\n           if (insideClearButton(event)) {",
    "Make CI Crash when there is jshint errors .": "diff --git a/zeppelin-web/Gruntfile.js b/zeppelin-web/Gruntfile.js\nindex 906c14272..ce62d8bed 100644\n--- a/zeppelin-web/Gruntfile.js\n+++ b/zeppelin-web/Gruntfile.js\n@@ -434,7 +434,7 @@ module.exports = function (grunt) {\n   ]);\n \n   grunt.registerTask('build', [\n-    'newer:jshint',\n+    'jshint:all',\n     'clean:dist',\n     'wiredep',\n     'useminPrepare',\ndiff --git a/zeppelin-web/pom.xml b/zeppelin-web/pom.xml\nindex 2c46c76ed..0e54d6573 100644\n--- a/zeppelin-web/pom.xml\n+++ b/zeppelin-web/pom.xml\n@@ -124,7 +124,6 @@\n             </goals>\n             <configuration>\n               <arguments>build</arguments>\n-              <arguments>--force</arguments>\n             </configuration>\n           </execution>\n ",
    "Simplified type checking .": "diff --git a/jjwt/src/main/java/io/jsonwebtoken/jjwtfun/controller/DynamicJWTController.java b/jjwt/src/main/java/io/jsonwebtoken/jjwtfun/controller/DynamicJWTController.java\nindex 72bc491b00..184b4b1055 100644\n--- a/jjwt/src/main/java/io/jsonwebtoken/jjwtfun/controller/DynamicJWTController.java\n+++ b/jjwt/src/main/java/io/jsonwebtoken/jjwtfun/controller/DynamicJWTController.java\n@@ -41,31 +41,31 @@ public class DynamicJWTController extends BaseController {\n         claims.forEach((key, value) -> {\n             switch (key) {\n                 case \"iss\":\n-                    ensureType(key, value,  String.class);\n+                    ensureType(key, value, String.class);\n                     builder.setIssuer((String) value);\n                     break;\n                 case \"sub\":\n-                    ensureType(key, value,  String.class);\n+                    ensureType(key, value, String.class);\n                     builder.setSubject((String) value);\n                     break;\n                 case \"aud\":\n-                    ensureType(key, value,  String.class);\n+                    ensureType(key, value, String.class);\n                     builder.setAudience((String) value);\n                     break;\n                 case \"exp\":\n-                    value = ensureType(key, value,  Long.class);\n-                    builder.setExpiration(Date.from(Instant.ofEpochSecond((Long) value)));\n+                    ensureType(key, value, Long.class);\n+                    builder.setExpiration(Date.from(Instant.ofEpochSecond(Long.parseLong(value.toString()))));\n                     break;\n                 case \"nbf\":\n-                    value = ensureType(key, value,  Long.class);\n-                    builder.setNotBefore(Date.from(Instant.ofEpochSecond((Long) value)));\n+                    ensureType(key, value, Long.class);\n+                    builder.setNotBefore(Date.from(Instant.ofEpochSecond(Long.parseLong(value.toString()))));\n                     break;\n                 case \"iat\":\n-                    value = ensureType(key, value,  Long.class);\n-                    builder.setIssuedAt(Date.from(Instant.ofEpochSecond((Long) value)));\n+                    ensureType(key, value, Long.class);\n+                    builder.setIssuedAt(Date.from(Instant.ofEpochSecond(Long.parseLong(value.toString()))));\n                     break;\n     ",
    "Add spellings and US - GB .": "diff --git a/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/en-US-GB.txt b/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/en-US-GB.txt\nindex f1309dc9c2..469123bb34 100644\n--- a/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/en-US-GB.txt\n+++ b/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/en-US-GB.txt\n@@ -1292,6 +1292,7 @@ extemporize;extemporise\n extemporized;extemporised\n extemporizes;extemporises\n extemporizing;extemporising\n+exteriorization;exteriorisation\n externalization;externalisation\n externalizations;externalisations\n externalize;externalise\n@@ -2394,6 +2395,7 @@ palatalize;palatalise\n palatalized;palatalised\n palatalizes;palatalises\n palatalizing;palatalising\n+palletization;palletisation\n palletize;palletise\n palletized;palletised\n palletizer;palletiser\n@@ -2413,7 +2415,7 @@ paralyze;paralyse\n paralyzed;paralysed\n paralyzes;paralyses\n paralyzing;paralysing\n-parametrization;parameterization\n+parameterization;parameterisation\n parasitize;parasitise\n parasitized;parasitised\n parasitizes;parasitises\n@@ -2811,6 +2813,7 @@ recognizer;recogniser\n recognizers;recognisers\n recognizes;recognises\n recognizing;recognising\n+recolonization;recolonisation\n recolonize;recolonise\n recolonized;recolonised\n recolonizes;recolonises\ndiff --git a/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/hunspell/spelling.txt b/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/hunspell/spelling.txt\nindex 0428eaebca..b8befdb13c 100644\n--- a/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/hunspell/spelling.txt\n+++ b/languagetool-language-modules/en/src/main/resources/org/languagetool/resource/en/hunspell/spelling.txt\n@@ -77,6 +77,7 @@ et al\n etherealization\n ex officio\n exempli gratia\n+exteriorization\n fait accompli\n feralized\n focalization\n@@ -238,6 +239,7 @@ oxygenized\n oxygenizes\n oxygenizing\n pacta sunt servanda\n+palletization\n Palme d'or\n Palme d'Or\n panegyrize\n@@ -250,6 +252,7 @@ papalizes\n papalizing\n papyral\n parabolization\n+parameterization\n parfocalize\n parfocalized\n parfocalizes",
    "Implement readEntity for rest client": "diff --git a/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/client/InvocationState.java b/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/client/InvocationState.java\nindex d58d7ef0a50..5e05ba30e79 100644\n--- a/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/client/InvocationState.java\n+++ b/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/client/InvocationState.java\n@@ -29,7 +29,6 @@\n import io.quarkus.rest.runtime.core.Serialisers;\n import io.quarkus.rest.runtime.jaxrs.QuarkusRestConfiguration;\n import io.quarkus.rest.runtime.jaxrs.QuarkusRestResponse;\n-import io.quarkus.rest.runtime.jaxrs.QuarkusRestResponseBuilder;\n import io.quarkus.rest.runtime.util.CaseInsensitiveMap;\n import io.vertx.core.Handler;\n import io.vertx.core.buffer.Buffer;\n@@ -230,9 +229,10 @@ private void ensureResponseAndRunFilters(QuarkusRestClientResponseContext respon\n                 }\n             }\n         }\n-        QuarkusRestResponseBuilder builder = new QuarkusRestResponseBuilder();\n+        QuarkusRestClientResponseBuilder builder = new QuarkusRestClientResponseBuilder();\n         builder.status(responseContext.getStatus(), responseContext.getReasonPhrase());\n         builder.setAllHeaders(responseContext.getHeaders());\n+        builder.serializers(serialisers);\n         if (existingEntity != null) {\n             builder.entity(existingEntity);\n         } else {\n@@ -245,8 +245,22 @@ private void ensureResponseAndRunFilters(QuarkusRestClientResponseContext respon\n                         mediaType)) {\n                     InputStream in = responseContext.getEntityStream();\n                     try {\n-                        builder.entity(((MessageBodyReader) reader).readFrom(responseType.getRawType(), responseType.getType(),\n-                                null, mediaType, responseContext.getHeaders(), in));\n+                        Object entity = ((MessageBodyReader) reader).readFrom(responseType.getRawType(), responseType.getType(),\n+                                null, mediaType, responseContext.getHeaders(), in);\n+                        builder.entity(entity);\n+\n+                        // because we convert the bytes into the response type eagerly (as opposed to RESTEasy for example which does it on demand)\n+                        // what we are doing here is making the data available for re-consumption which is needed when the Response is used\n+                        // to read any entity of some specific class (the TCK does this extensively)\n+                        if (in instanceof ByteArrayInputStream) {\n+                            try {\n+                                in.reset();\n+                                builder.entityStream(in);\n+                            } catch (IOException e) {\n+                                // ignore as it just means that the input stream won't be available for re-consumption\n+                            }\n+                        }\n+\n                     } catch (IOException e) {\n                         result.completeExceptionally(e);\n                     }\ndiff --git a/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/client/QuarkusRestClientResponse.java b/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/client/QuarkusRestClientResponse.java\nnew file mode 100644\nindex 00000000000..a02ab214e0c\n--- /dev/null\n+++ b/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/client/QuarkusRestClientResponse.java\n@@ -0,0 +1,52 @@\n+package io.quarkus.rest.runtime.client;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Type;\n+import java.util.List;\n+\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.ext.MessageBodyReader;\n+\n+import io.quarkus.rest.runtime.core.Serialisers;\n+import io.quarkus.rest.runtime.jaxrs.QuarkusRestResponse;\n+\n+public class QuarkusRestClientResponse extends QuarkusRestResponse {\n+\n+    Serialisers serialisers;\n+\n+    @Override\n+    public <T> T readEntity(Class<T> entityType) {\n+        return readEntity(entityType, null, null);\n+    }\n+\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+    private <T> T readEntity(Class<T> entityType, Type genericType, Annotation[] annotations) {\n+        if (entityType.isInstance(getEntity())) {\n+            return (T) getEntity();\n+        }\n+\n+        if (!(getEntityStream() instanceof ByteArrayInputStream)) {\n+            throw new IllegalStateException(\"Data cannot be re-read\");\n+        }\n+\n+        MediaType mediaType = getMediaType();\n+        List<MessageBodyReader<?>> readers = serialisers.findReaders(entityType, mediaType);\n+        for (MessageBodyReader<?> reader : readers) {\n+            if (reader.isReadable(entityType, genericType, annotations, mediaType)) {\n+                Object entity;\n+                try {\n+                    entity = ((MessageBodyReader) reader).readFrom(entityType, genericType,\n+                            annotations, mediaType, getStringHeaders(), getEntityStream());\n+                } catch (IOException e) {\n+                    throw new UncheckedIOException(e);\n+                }\n+                return (T) entity;\n+            }\n+        }\n+\n+        return null;\n+    }\n+}\ndiff --git a/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/client/QuarkusRestClientResponseBuilder.java b/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/client/QuarkusRestClientResponseBuilder.java\nnew file mode 100644\nindex 00000000000..65176ef2b4e\n--- /dev/null\n+++ b/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/client/QuarkusRestClientResponseBuilder.java\n@@ -0,0 +1,32 @@\n+package io.quarkus.rest.runtime.client;\n+\n+import java.io.InputStream;\n+\n+import io.quarkus.rest.runtime.core.Serialisers;\n+import io.quarkus.rest.runtime.jaxrs.QuarkusRestResponse;\n+import io.quarkus.rest.runtime.jaxrs.QuarkusRestResponseBuilder;\n+\n+public class QuarkusRestClientResponseBuilder extends QuarkusRestResponseBuilder {\n+\n+    Serialisers serialisers;\n+    InputStream entityStream;\n+\n+    public QuarkusRestClientResponseBuilder serializers(Serialisers serialisers) {\n+        this.serialisers = serialisers;\n+        return this;\n+    }\n+\n+    public QuarkusRestClientResponseBuilder entityStream(InputStream entityStream) {\n+        this.entityStream = entityStream;\n+        return this;\n+    }\n+\n+    @Override\n+    public QuarkusRestResponse build() {\n+        QuarkusRestClientResponse response = new QuarkusRestClientResponse();\n+        populateResponse(response);\n+        response.serialisers = serialisers;\n+        response.setEntityStream(entityStream);\n+        return response;\n+    }\n+}\ndiff --git a/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/jaxrs/QuarkusRestResponse.java b/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/jaxrs/QuarkusRestResponse.java\nindex 712b9bb4a34..df2efedc159 100644\n--- a/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/jaxrs/QuarkusRestResponse.java\n+++ b/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/jaxrs/QuarkusRestResponse.java\n@@ -35,9 +35,9 @@ public class QuarkusRestResponse extends Response {\n     String reasonPhrase;\n     Object entity;\n     MultivaluedMap<String, Object> headers;\n+    InputStream entityStream;\n     private QuarkusRestStatusType statusType;\n     private MultivaluedHashMap<String, String> stringHeaders;\n-    private InputStream entityStream;\n \n     @Override\n     public int getStatus() {\n@@ -73,6 +73,14 @@ public Object getEntity() {\n         return entity;\n     }\n \n+    public InputStream getEntityStream() {\n+        return entityStream;\n+    }\n+\n+    public void setEntityStream(InputStream entityStream) {\n+        this.entityStream = entityStream;\n+    }\n+\n     @Override\n     public <T> T readEntity(Class<T> entityType) {\n         // TODO Auto-generated method stub\ndiff --git a/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/jaxrs/QuarkusRestResponseBuilder.java b/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/jaxrs/QuarkusRestResponseBuilder.java\nindex 7dc47a65b5d..8b2cde430aa 100644\n--- a/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/jaxrs/QuarkusRestResponseBuilder.java\n+++ b/extensions/quarkus-rest/runtime/src/main/java/io/quarkus/rest/runtime/jaxrs/QuarkusRestResponseBuilder.java\n@@ -81,9 +81,33 @@ public class QuarkusRestResponseBuilder extends ResponseBuilder {\n     MultivaluedMap<String, Object> metadata = new CaseInsensitiveMap<>();\n     Annotation[] entityAnnotations;\n \n+    public int getStatus() {\n+        return status;\n+    }\n+\n+    public String getReasonPhrase() {\n+        return reasonPhrase;\n+    }\n+\n+    public Object getEntity() {\n+        return entity;\n+    }\n+\n+    public Annotation[] getEntityAnnotations() {\n+        return entityAnnotations;\n+    }\n+\n     @Override\n     public QuarkusRestResponse build() {\n-        QuarkusRestResponse response = new QuarkusRestResponse();\n+        return populateResponse(new QuarkusRestResponse());\n+    }\n+\n+    /**\n+     * Populates a response with the standard data\n+     * \n+     * @return The given response\n+     */\n+    public <T extends QuarkusRestResponse> T populateResponse(T response) {\n         response.entity = entity;\n         if ((entity == null) && (status == -1)) {\n             response.status = 204; // spec says that when no status is set and the entity is null, we",
    "remove old dense vectors": "diff --git a/eval/CMakeLists.txt b/eval/CMakeLists.txt\nindex f128b1d8a20..7022569e6a3 100644\n--- a/eval/CMakeLists.txt\n+++ b/eval/CMakeLists.txt\n@@ -55,9 +55,7 @@ vespa_define_module(\n     src/tests/instruction/join_with_number\n     src/tests/streamed/value\n     src/tests/tensor/dense_add_dimension_optimizer\n-    src/tests/tensor/dense_dimension_combiner\n     src/tests/tensor/dense_fast_rename_optimizer\n-    src/tests/tensor/dense_generic_join\n     src/tests/tensor/dense_inplace_join_function\n     src/tests/tensor/dense_pow_as_map_optimizer\n     src/tests/tensor/dense_remove_dimension_optimizer\n@@ -66,13 +64,11 @@ vespa_define_module(\n     src/tests/tensor/dense_simple_map_function\n     src/tests/tensor/dense_single_reduce_function\n     src/tests/tensor/dense_tensor_create_function\n-    src/tests/tensor/direct_dense_tensor_builder\n     src/tests/tensor/instruction_benchmark\n     src/tests/tensor/onnx_wrapper\n     src/tests/tensor/partial_add\n     src/tests/tensor/partial_modify\n     src/tests/tensor/partial_remove\n-    src/tests/tensor/tensor_address\n     src/tests/tensor/tensor_conformance\n     src/tests/tensor/typed_cells\n     src/tests/tensor/vector_from_doubles_function\ndiff --git a/eval/src/tests/eval/tensor_lambda/tensor_lambda_test.cpp b/eval/src/tests/eval/tensor_lambda/tensor_lambda_test.cpp\nindex f1c8e6d3a5e..73a3648a34c 100644\n--- a/eval/src/tests/eval/tensor_lambda/tensor_lambda_test.cpp\n+++ b/eval/src/tests/eval/tensor_lambda/tensor_lambda_test.cpp\n@@ -7,9 +7,7 @@\n #include <vespa/eval/tensor/dense/dense_replace_type_function.h>\n #include <vespa/eval/instruction/dense_cell_range_function.h>\n #include <vespa/eval/instruction/dense_lambda_peek_function.h>\n-#include <vespa/eval/tensor/dense/dense_lambda_function.h>\n #include <vespa/eval/tensor/dense/dense_fast_rename_optimizer.h>\n-#include <vespa/eval/tensor/dense/dense_tensor.h>\n #include <vespa/eval/eval/test/tensor_model.hpp>\n #include <vespa/eval/eval/test/eval_fixture.h>\n #include <vespa/eval/eval/tensor_nodes.h>\ndiff --git a/eval/src/tests/tensor/dense_add_dimension_optimizer/dense_add_dimension_optimizer_test.cpp b/eval/src/tests/tensor/dense_add_dimension_optimizer/dense_add_dimension_optimizer_test.cpp\nindex 4b2ca3ae4ae..0e8e50daae5 100644\n--- a/eval/src/tests/tensor/dense_add_dimension_optimizer/dense_add_dimension_optimizer_test.cpp\n+++ b/eval/src/tests/tensor/dense_add_dimension_optimizer/dense_add_dimension_optimizer_test.cpp\n@@ -5,7 +5,6 @@\n #include <vespa/eval/eval/tensor_function.h>\n #include <vespa/eval/tensor/dense/dense_replace_type_function.h>\n #include <vespa/eval/tensor/dense/dense_fast_rename_optimizer.h>\n-#include <vespa/eval/tensor/dense/dense_tensor.h>\n #include <vespa/eval/eval/test/tensor_model.hpp>\n #include <vespa/eval/eval/test/eval_fixture.h>\n \ndiff --git a/eval/src/tests/tensor/dense_fast_rename_optimizer/dense_fast_rename_optimizer_test.cpp b/eval/src/tests/tensor/dense_fast_rename_optimizer/dense_fast_rename_optimizer_test.cpp\nindex 681b1987a6d..52afde0e92c 100644\n--- a/eval/src/tests/tensor/dense_fast_rename_optimizer/dense_fast_rename_optimizer_test.cpp\n+++ b/eval/src/tests/tensor/dense_fast_rename_optimizer/dense_fast_rename_optimizer_test.cpp\n@@ -4,7 +4,6 @@\n #include <vespa/eval/eval/tensor_function.h>\n #include <vespa/eval/tensor/dense/dense_replace_type_function.h>\n #include <vespa/eval/tensor/dense/dense_fast_rename_optimizer.h>\n-#include <vespa/eval/tensor/dense/dense_tensor.h>\n #include <vespa/eval/eval/test/tensor_model.hpp>\n #include <vespa/eval/eval/test/eval_fixture.h>\n \ndiff --git a/eval/src/tests/tensor/dense_generic_join/CMakeLists.txt b/eval/src/tests/tensor/dense_generic_join/CMakeLists.txt\ndeleted file mode 100644\nindex 1fbb35cb2b8..00000000000\n--- a/eval/src/tests/tensor/dense_generic_join/CMakeLists.txt\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-# Copyright 2018 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n-vespa_add_executable(eval_dense_generic_join_test_app TEST\n-    SOURCES\n-    dense_generic_join_test.cpp\n-    DEPENDS\n-    vespaeval\n-)\n-vespa_add_test(NAME eval_dense_generic_join_test_app COMMAND eval_dense_generic_join_test_app)\ndiff --git a/eval/src/tests/tensor/dense_generic_join/dense_generic_join_test.cpp b/eval/src/tests/tensor/dense_generic_join/dense_generic_join_test.cpp\ndeleted file mode 100644\nindex faf6bed2786..00000000000\n--- a/eval/src/tests/tensor/dense_generic_join/dense_generic_join_test.cpp\n+++ /dev/null\n@@ -1,124 +0,0 @@\n-// Copyright 2018 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n-\n-#include <vespa/vespalib/testkit/test_kit.h>\n-#include <vespa/eval/eval/tensor_function.h>\n-#include <vespa/eval/tensor/dense/typed_dense_tensor_builder.h>\n-#include <vespa/eval/tensor/dense/dense_tensor.h>\n-#include <vespa/eval/eval/test/tensor_model.hpp>\n-#include <vespa/eval/eval/test/eval_fixture.h>\n-\n-#include <vespa/vespalib/util/stringfmt.h>\n-#include <vespa/vespalib/util/stash.h>\n-\n-using namespace vespalib;\n-using namespace vespalib::eval;\n-using namespace vespalib::eval::test;\n-using namespace vespalib::tensor;\n-using namespace vespalib::eval::tensor_function;\n-\n-const ValueBuilderFactory &prod_factory = FastValueBuilderFactory::get();\n-\n-double seq_value = 0.0;\n-\n-struct GlobalSequence : public Sequence {\n-    GlobalSequence() {}\n-    double operator[](size_t) const override {\n-        seq_value += 1.0;\n-        return seq_value;\n-    }\n-    ~GlobalSequence() {}\n-};\n-GlobalSequence seq;\n-\n-EvalFixture::ParamRepo make_params() {\n-    return EvalFixture::ParamRepo()\n-        .add(\"con_x5_A\",     spec({x(5)          }, seq))\n-        .add(\"con_x5y3_B\",   spec({x(5),y(3)     }, seq))\n-        .add(\"con_x5z4_C\",   spec({x(5),     z(4)}, seq))\n-        .add(\"con_x5y3z4_D\", spec({x(5),y(3),z(4)}, seq))\n-        .add(\"con_y3_E\",     spec({     y(3)     }, seq))\n-        .add(\"con_y3z4_F\",   spec({     y(3),z(4)}, seq))\n-        .add(\"con_z4_G\",     spec({          z(4)}, seq))\n-        .add(\"con_x5f_H\",    spec({x(5)          }, seq), \"tensor<float>(x[5])\")\n-        .add(\"con_x5y3_I\",   spec({x(5),y(3)     }, seq), \"tensor<float>(x[5],y[3])\")\n-        .add(\"con_x5z4_J\",   spec({x(5),     z(4)}, seq), \"tensor<float>(x[5],z[4])\")\n-        .add(\"con_x5y3z4_K\", spec({x(5),y(3),z(4)}, seq), \"tensor<float>(x[5],y[3],z[4])\")\n-        .add(\"con_y3_L\",     spec({     y(3)     }, seq), \"tensor<float>(y[3])\")\n-        .add(\"con_y3z4_M\",   spec({     y(3),z(4)}, seq), \"tensor<float>(y[3],z[4])))\")\n-        .add(\"con_z4_N\",     spec({          z(4)}, seq), \"tensor<float>(z[4]))\")\n-        .add(\"con_y2\",       spec({y(5)}, seq))\n-        .add(\"con_y2f\",      spec({y(5)}, seq), \"tensor<float>(y[2]))\");\n-}\n-EvalFixture::ParamRepo param_repo = make_params();\n-\n-void verify_equal(const vespalib::string &expr) {\n-    EvalFixture fixture(prod_factory, expr, param_repo, true, true);\n-    EXPECT_EQUAL(fixture.result(), EvalFixture::ref(expr, param_repo));\n-}\n-\n-\n-TEST(\"require that non-overlapping dense join works\") {\n-    TEST_DO(verify_equal(\"con_x5_A-con_y3_E\"));\n-    TEST_DO(verify_equal(\"con_x5_A+con_y3_E\"));\n-    TEST_DO(verify_equal(\"con_x5_A*con_y3_E\"));\n-\n-    TEST_DO(verify_equal(\"con_x5_A-con_y3z4_F\"));\n-    TEST_DO(verify_equal(\"con_x5_A+con_y3z4_F\"));\n-    TEST_DO(verify_equal(\"con_x5_A*con_y3z4_F\"));\n-\n-    TEST_DO(verify_equal(\"con_x5_A-con_z4_G\"));\n-    TEST_DO(verify_equal(\"con_x5_A+con_z4_G\"));\n-    TEST_DO(verify_equal(\"con_x5_A*con_z4_G\"));\n-\n-    TEST_DO(verify_equal(\"con_x5y3_B-con_z4_G\"));\n-    TEST_DO(verify_equal(\"con_x5y3_B+con_z4_G\"));\n-    TEST_DO(verify_equal(\"con_x5y3_B*con_z4_G\"));\n-\n-    TEST_DO(verify_equal(\"con_y3_E-con_z4_G\"));\n-    TEST_DO(verify_equal(\"con_y3_E+con_z4_G\"));\n-    TEST_DO(verify_equal(\"con_y3_E*con_z4_G\"));\n-}\n-\n-TEST(\"require that overlapping dense join works\") {\n-    TEST_DO(verify_equal(\"con_x5_A-con_x5y3_B\"));\n-    TEST_DO(verify_equal(\"con_x5_A+con_x5y3_B\"));\n-    TEST_DO(verify_equal(\"con_x5_A*con_x5y3_B\"));\n-\n-    TEST_DO(verify_equal(\"con_x5_A-con_x5z4_C\"));\n-    TEST_DO(verify_equal(\"con_x5_A+con_x5z4_C\"));\n-    TEST_DO(verify_equal(\"con_x5_A*con_x5z4_C\"));\n-\n-    TEST_DO(verify_equal(\"con_x5y3_B-con_y3_E\"));\n-    TEST_DO(verify_equal(\"con_x5y3_B+con_y3_E\"));\n-    TEST_DO(verify_equal(\"con_x5y3_B*con_y3_E\"));\n-\n-    TEST_DO(verify_equal(\"con_x5y3_B-con_y3z4_F\"));\n-    TEST_DO(verify_equal(\"con_x5y3_B+con_y3z4_F\"));\n-    TEST_DO(verify_equal(\"con_x5y3_B*con_y3z4_F\"));\n-\n-    TEST_DO(verify_equal(\"con_x5y3z4_D-con_x5y3_B\"));\n-    TEST_DO(verify_equal(\"con_x5y3z4_D+con_x5y3_B\"));\n-    TEST_DO(verify_equal(\"con_x5y3z4_D*con_x5y3_B\"));\n-\n-    TEST_DO(verify_equal(\"con_x5y3z4_D-con_x5z4_C\"));\n-    TEST_DO(verify_equal(\"con_x5y3z4_D+con_x5z4_C\"));\n-    TEST_DO(verify_equal(\"con_x5y3z4_D*con_x5z4_C\"));\n-\n-    TEST_DO(verify_equal(\"con_x5y3z4_D-con_y3z4_F\"));\n-    TEST_DO(verify_equal(\"con_x5y3z4_D+con_y3z4_F\"));\n-    TEST_DO(verify_equal(\"con_x5y3z4_D*con_y3z4_F\"));\n-\n-    TEST_DO(verify_equal(\"con_x5y3z4_D-con_y3z4_F\"));\n-    TEST_DO(verify_equal(\"con_x5y3z4_D+con_y3z4_F\"));\n-    TEST_DO(verify_equal(\"con_x5y3z4_D*con_y3z4_F\"));\n-\n-    TEST_DO(verify_equal(\"con_y3_E-con_y3z4_F\"));\n-    TEST_DO(verify_equal(\"con_y3_E+con_y3z4_F\"));\n-    TEST_DO(verify_equal(\"con_y3_E*con_y3z4_F\"));\n-\n-    TEST_DO(verify_equal(\"con_y3z4_F-con_z4_G\"));\n-    TEST_DO(verify_equal(\"con_y3z4_F+con_z4_G\"));\n-    TEST_DO(verify_equal(\"con_y3z4_F*con_z4_G\"));\n-}\n-\n-TEST_MAIN() { TEST_RUN_ALL(); }\ndiff --git a/eval/src/tests/tensor/dense_inplace_join_function/dense_inplace_join_function_test.cpp b/eval/src/tests/tensor/dense_inplace_join_function/dense_inplace_join_function_test.cpp\nindex 0f3a200bfdd..853607ae76d 100644\n--- a/eval/src/tests/tensor/dense_inplace_join_function/dense_inplace_join_function_test.cpp\n+++ b/eval/src/tests/tensor/dense_inplace_join_function/dense_inplace_join_function_test.cpp\n@@ -2,7 +2,6 @@\n \n #include <vespa/vespalib/testkit/test_kit.h>\n #include <vespa/eval/eval/tensor_function.h>\n-#include <vespa/eval/tensor/dense/dense_tensor.h>\n #include <vespa/eval/eval/test/tensor_model.hpp>\n #include <vespa/eval/eval/test/eval_fixture.h>\n \ndiff --git a/eval/src/tests/tensor/dense_remove_dimension_optimizer/dense_remove_dimension_optimizer_test.cpp b/eval/src/tests/tensor/dense_remove_dimension_optimizer/dense_remove_dimension_optimizer_test.cpp\nindex b655c52c9d3..69910e27b4b 100644\n--- a/eval/src/tests/tensor/dense_remove_dimension_optimizer/dense_remove_dimension_optimizer_test.cpp\n+++ b/eval/src/tests/tensor/dense_remove_dimension_optimizer/dense_remove_dimension_optimizer_test.cpp\n@@ -4,7 +4,6 @@\n #include <vespa/eval/eval/tensor_function.h>\n #include <vespa/eval/tensor/dense/dense_replace_type_function.h>\n #include <vespa/eval/tensor/dense/dense_fast_rename_optimizer.h>\n-#include <vespa/eval/tensor/dense/dense_tensor.h>\n #include <vespa/eval/eval/test/tensor_model.hpp>\n #include <vespa/eval/eval/test/eval_fixture.h>\n \ndiff --git a/eval/src/tests/tensor/dense_replace_type_function/dense_replace_type_function_test.cpp b/eval/src/tests/tensor/dense_replace_type_function/dense_replace_type_function_test.cpp\nindex dd4ddb9044a..2612869e72f 100644\n--- a/eval/src/tests/tensor/dense_replace_type_function/dense_replace_type_function_test.cpp\n+++ b/eval/src/tests/tensor/dense_replace_type_function/dense_replace_type_function_test.cpp\n@@ -4,7 +4,6 @@\n #include <vespa/eval/eval/fast_value.h>\n #include <vespa/eval/eval/value_codec.h>\n #include <vespa/eval/eval/interpreted_function.h>\n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n #include <vespa/eval/tensor/dense/dense_replace_type_function.h>\n #include <vespa/eval/eval/test/tensor_model.hpp>\n \ndiff --git a/eval/src/tests/tensor/dense_single_reduce_function/dense_single_reduce_function_test.cpp b/eval/src/tests/tensor/dense_single_reduce_function/dense_single_reduce_function_test.cpp\nindex 1948d8d010a..347228269cf 100644\n--- a/eval/src/tests/tensor/dense_single_reduce_function/dense_single_reduce_function_test.cpp\n+++ b/eval/src/tests/tensor/dense_single_reduce_function/dense_single_reduce_function_test.cpp\n@@ -4,8 +4,6 @@\n #include <vespa/eval/eval/tensor_function.h>\n #include <vespa/eval/eval/operation.h>\n #include <vespa/eval/tensor/dense/dense_single_reduce_function.h>\n-#include <vespa/eval/tensor/dense/dense_tensor.h>\n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n #include <vespa/eval/eval/test/tensor_model.hpp>\n #include <vespa/eval/eval/test/eval_fixture.h>\n \ndiff --git a/eval/src/tests/tensor/dense_tensor_create_function/dense_tensor_create_function_test.cpp b/eval/src/tests/tensor/dense_tensor_create_function/dense_tensor_create_function_test.cpp\nindex 2bc937a26bf..edf999e97b3 100644\n--- a/eval/src/tests/tensor/dense_tensor_create_function/dense_tensor_create_function_test.cpp\n+++ b/eval/src/tests/tensor/dense_tensor_create_function/dense_tensor_create_function_test.cpp\n@@ -3,7 +3,6 @@\n #include <vespa/vespalib/testkit/test_kit.h>\n #include <vespa/eval/eval/tensor_function.h>\n #include <vespa/eval/tensor/dense/dense_tensor_create_function.h>\n-#include <vespa/eval/tensor/dense/dense_tensor.h>\n #include <vespa/eval/eval/test/tensor_model.hpp>\n #include <vespa/eval/eval/test/eval_fixture.h>\n \ndiff --git a/eval/src/tests/tensor/direct_dense_tensor_builder/CMakeLists.txt b/eval/src/tests/tensor/direct_dense_tensor_builder/CMakeLists.txt\ndeleted file mode 100644\nindex 70ccbddd617..00000000000\n--- a/eval/src/tests/tensor/direct_dense_tensor_builder/CMakeLists.txt\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-# Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n-vespa_add_executable(eval_direct_dense_tensor_builder_test_app TEST\n-    SOURCES\n-    direct_dense_tensor_builder_test.cpp\n-    DEPENDS\n-    vespaeval\n-)\n-vespa_add_test(NAME eval_direct_dense_tensor_builder_test_app COMMAND eval_direct_dense_tensor_builder_test_app)\ndiff --git a/eval/src/tests/tensor/direct_dense_tensor_builder/direct_dense_tensor_builder_test.cpp b/eval/src/tests/tensor/direct_dense_tensor_builder/direct_dense_tensor_builder_test.cpp\ndeleted file mode 100644\nindex 52768663647..00000000000\n--- a/eval/src/tests/tensor/direct_dense_tensor_builder/direct_dense_tensor_builder_test.cpp\n+++ /dev/null\n@@ -1,192 +0,0 @@\n-// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n-\n-#include <vespa/vespalib/test/insertion_operators.h>\n-#include <vespa/vespalib/testkit/test_kit.h>\n-#include <vespa/eval/tensor/dense/typed_dense_tensor_builder.h>\n-#include <vespa/vespalib/util/exceptions.h>\n-\n-using namespace vespalib::tensor;\n-using vespalib::IllegalArgumentException;\n-using BuilderDbl = TypedDenseTensorBuilder<double>;\n-using BuilderFlt = TypedDenseTensorBuilder<float>;\n-using vespalib::eval::TensorSpec;\n-using vespalib::eval::ValueType;\n-using vespalib::ConstArrayRef;\n-\n-struct CallMakeVector {\n-    template <typename T>\n-    static std::vector<double> call(const ConstArrayRef<T> &ref) {\n-        std::vector<double> result;\n-        result.reserve(ref.size());\n-        for (T v : ref) {\n-            result.push_back(v);\n-        }\n-        return result;\n-    }\n-};\n-\n-void assertTensor(const vespalib::string &type_spec,\n-                  const std::vector<double> &expCells,\n-                  const Tensor &tensor)\n-{\n-    EXPECT_EQUAL(ValueType::from_spec(type_spec), tensor.type());\n-    EXPECT_EQUAL(expCells, dispatch_1<CallMakeVector>(tensor.cells()));\n-}\n-\n-void assertTensorSpec(const TensorSpec &expSpec, const Tensor &tensor) {\n-    TensorSpec actSpec = tensor.toSpec();\n-    EXPECT_EQUAL(expSpec, actSpec);\n-}\n-\n-Tensor::UP build1DTensor() {\n-    BuilderDbl builder(ValueType::from_spec(\"tensor(x[3])\"));\n-    builder.insertCell(0, 10);\n-    builder.insertCell(1, 11);\n-    builder.insertCell(2, 12);\n-    return builder.build();\n-}\n-\n-TEST(\"require that 1d tensor can be constructed\") {\n-    assertTensor(\"tensor(x[3])\", {10,11,12}, *build1DTensor());\n-}\n-\n-TEST(\"require that 1d tensor can be converted to tensor spec\") {\n-    assertTensorSpec(TensorSpec(\"tensor(x[3])\").\n-                     add({{\"x\", 0}}, 10).\n-                     add({{\"x\", 1}}, 11).\n-                     add({{\"x\", 2}}, 12),\n-                     *build1DTensor());\n-}\n-\n-Tensor::UP build2DTensor() {\n-    BuilderDbl builder(ValueType::from_spec(\"tensor(x[3],y[2])\"));\n-    builder.insertCell({0, 0}, 10);\n-    builder.insertCell({0, 1}, 11);\n-    builder.insertCell({1, 0}, 12);\n-    builder.insertCell({1, 1}, 13);\n-    builder.insertCell({2, 0}, 14);\n-    builder.insertCell({2, 1}, 15);\n-    return builder.build();\n-}\n-\n-TEST(\"require that 2d tensor can be constructed\") {\n-    assertTensor(\"tensor(x[3],y[2])\", {10,11,12,13,14,15}, *build2DTensor());\n-}\n-\n-TEST(\"require that 2d tensor can be converted to tensor spec\") {\n-    assertTensorSpec(TensorSpec(\"tensor(x[3],y[2])\").\n-                     add({{\"x\", 0},{\"y\", 0}}, 10).\n-                     add({{\"x\", 0},{\"y\", 1}}, 11).\n-                     add({{\"x\", 1},{\"y\", 0}}, 12).\n-                     add({{\"x\", 1},{\"y\", 1}}, 13).\n-                     add({{\"x\", 2},{\"y\", 0}}, 14).\n-                     add({{\"x\", 2},{\"y\", 1}}, 15),\n-                     *build2DTensor());\n-}\n-\n-TEST(\"require that 3d tensor can be constructed\") {\n-    BuilderDbl builder(ValueType::from_spec(\"tensor(x[3],y[2],z[2])\"));\n-    builder.insertCell({0, 0, 0}, 10);\n-    builder.insertCell({0, 0, 1}, 11);\n-    builder.insertCell({0, 1, 0}, 12);\n-    builder.insertCell({0, 1, 1}, 13);\n-    builder.insertCell({1, 0, 0}, 14);\n-    builder.insertCell({1, 0, 1}, 15);\n-    builder.insertCell({1, 1, 0}, 16);\n-    builder.insertCell({1, 1, 1}, 17);\n-    builder.insertCell({2, 0, 0}, 18);\n-    builder.insertCell({2, 0, 1}, 19);\n-    builder.insertCell({2, 1, 0}, 20);\n-    builder.insertCell({2, 1, 1}, 21);\n-    assertTensor(\"tensor(x[3],y[2],z[2])\",\n-                 {10,11,12,13,14,15,16,17,18,19,20,21},\n-                 *builder.build());\n-}\n-\n-TEST(\"require that 2d tensor with float cells can be constructed\") {\n-    BuilderFlt builder(ValueType::from_spec(\"tensor<float>(x[3],y[2])\"));\n-    builder.insertCell({0, 1}, 2.5);\n-    builder.insertCell({1, 0}, 1.5);\n-    builder.insertCell({2, 0}, -0.25);\n-    builder.insertCell({2, 1}, 0.75);\n-    assertTensor(\"tensor<float>(x[3],y[2])\", {0,2.5,1.5,0,-0.25,0.75},\n-                 *builder.build());\n-}\n-\n-TEST(\"require that cells get default value 0 if not specified\") {\n-    BuilderDbl builder(ValueType::from_spec(\"tensor(x[3])\"));\n-    builder.insertCell(1, 11);\n-    assertTensor(\"tensor(x[3])\", {0,11,0},\n-                 *builder.build());\n-}\n-\n-void assertTensorCell(const DenseTensorView::Address &expAddress,\n-                      double expCell,\n-                      const DenseTensorView::CellsIterator &itr)\n-{\n-    EXPECT_TRUE(itr.valid());\n-    EXPECT_EQUAL(expAddress, itr.address());\n-    EXPECT_EQUAL(expCell, itr.cell());\n-}\n-\n-TEST(\"require that dense tensor cells iterator works for 1d tensor\") {\n-    Tensor::UP tensor;\n-    {\n-        BuilderDbl builder(ValueType::from_spec(\"tensor(x[2])\"));\n-        builder.insertCell(0, 2);\n-        builder.insertCell(1, 3);\n-        tensor = builder.build();\n-    }\n-\n-    const DenseTensorView &denseTensor = dynamic_cast<const DenseTensorView &>(*tensor);\n-    DenseTensorView::CellsIterator itr = denseTensor.cellsIterator();\n-\n-    assertTensorCell({0}, 2, itr);\n-    itr.next();\n-    assertTensorCell({1}, 3, itr);\n-    itr.next();\n-    EXPECT_FALSE(itr.valid());\n-}\n-\n-TEST(\"require that dense tensor cells iterator works for 2d tensor\") {\n-    Tensor::UP tensor;\n-    {\n-        BuilderDbl builder(ValueType::from_spec(\"tensor(x[2],y[2])\"));\n-        builder.insertCell({0, 0}, 2);\n-        builder.insertCell({0, 1}, 3);\n-        builder.insertCell({1, 0}, 5);\n-        builder.insertCell({1, 1}, 7);\n-        tensor = builder.build();\n-    }\n-\n-    const DenseTensorView &denseTensor = dynamic_cast<const DenseTensorView &>(*tensor);\n-    DenseTensorView::CellsIterator itr = denseTensor.cellsIterator();\n-\n-    assertTensorCell({0,0}, 2, itr);\n-    itr.next();\n-    assertTensorCell({0,1}, 3, itr);\n-    itr.next();\n-    assertTensorCell({1,0}, 5, itr);\n-    itr.next();\n-    assertTensorCell({1,1}, 7, itr);\n-    itr.next();\n-    EXPECT_FALSE(itr.valid());\n-}\n-\n-TEST(\"require that memory used count is reasonable\") {\n-    Tensor::UP full = build2DTensor();\n-    const DenseTensorView &full_view = dynamic_cast<const DenseTensorView &>(*full);\n-    DenseTensorView ref_view(full_view.fast_type(), full_view.cells());\n-\n-    size_t full_sz = full->get_memory_usage().usedBytes();\n-    size_t view_sz = full_view.get_memory_usage().usedBytes();\n-    size_t ref_sz = ref_view.get_memory_usage().usedBytes();\n-\n-    EXPECT_EQUAL(ref_sz, sizeof(DenseTensorView));\n-    EXPECT_LESS(ref_sz, full_sz);\n-    EXPECT_EQUAL(full_sz, view_sz);\n-    EXPECT_LESS(full_sz, 10000u);\n-    EXPECT_GREATER(full_sz, sizeof(DenseTensor<double>));\n-}\n-\n-TEST_MAIN() { TEST_RUN_ALL(); }\ndiff --git a/eval/src/tests/tensor/partial_add/partial_add_test.cpp b/eval/src/tests/tensor/partial_add/partial_add_test.cpp\nindex 42db77a311f..893acf07adb 100644\n--- a/eval/src/tests/tensor/partial_add/partial_add_test.cpp\n+++ b/eval/src/tests/tensor/partial_add/partial_add_test.cpp\n@@ -4,7 +4,6 @@\n #include <vespa/eval/eval/test/tensor_model.hpp>\n #include <vespa/eval/eval/value_codec.h>\n #include <vespa/eval/tensor/partial_update.h>\n-#include <vespa/eval/tensor/tensor.h>\n #include <vespa/vespalib/util/stringfmt.h>\n #include <vespa/vespalib/gtest/gtest.h>\n #include <optional>\ndiff --git a/eval/src/tests/tensor/partial_modify/partial_modify_test.cpp b/eval/src/tests/tensor/partial_modify/partial_modify_test.cpp\nindex a39bcc87ab3..a1802540fa5 100644\n--- a/eval/src/tests/tensor/partial_modify/partial_modify_test.cpp\n+++ b/eval/src/tests/tensor/partial_modify/partial_modify_test.cpp\n@@ -4,7 +4,6 @@\n #include <vespa/eval/eval/test/tensor_model.hpp>\n #include <vespa/eval/eval/value_codec.h>\n #include <vespa/eval/tensor/partial_update.h>\n-#include <vespa/eval/tensor/tensor.h>\n #include <vespa/vespalib/util/stringfmt.h>\n #include <vespa/vespalib/gtest/gtest.h>\n #include <optional>\ndiff --git a/eval/src/tests/tensor/partial_remove/partial_remove_test.cpp b/eval/src/tests/tensor/partial_remove/partial_remove_test.cpp\nindex 410331c5eb7..fef6d99519f 100644\n--- a/eval/src/tests/tensor/partial_remove/partial_remove_test.cpp\n+++ b/eval/src/tests/tensor/partial_remove/partial_remove_test.cpp\n@@ -4,7 +4,6 @@\n #include <vespa/eval/eval/test/tensor_model.hpp>\n #include <vespa/eval/eval/value_codec.h>\n #include <vespa/eval/tensor/partial_update.h>\n-#include <vespa/eval/tensor/tensor.h>\n #include <vespa/vespalib/util/stringfmt.h>\n #include <vespa/vespalib/gtest/gtest.h>\n #include <optional>\ndiff --git a/eval/src/tests/tensor/vector_from_doubles_function/vector_from_doubles_function_test.cpp b/eval/src/tests/tensor/vector_from_doubles_function/vector_from_doubles_function_test.cpp\nindex 9881d120a74..c3e1f2f248e 100644\n--- a/eval/src/tests/tensor/vector_from_doubles_function/vector_from_doubles_function_test.cpp\n+++ b/eval/src/tests/tensor/vector_from_doubles_function/vector_from_doubles_function_test.cpp\n@@ -3,7 +3,6 @@\n #include <vespa/vespalib/testkit/test_kit.h>\n #include <vespa/eval/eval/tensor_function.h>\n #include <vespa/eval/tensor/dense/vector_from_doubles_function.h>\n-#include <vespa/eval/tensor/dense/dense_tensor.h>\n #include <vespa/eval/eval/test/tensor_model.hpp>\n #include <vespa/eval/eval/test/eval_fixture.h>\n \ndiff --git a/eval/src/vespa/eval/eval/optimize_tensor_function.cpp b/eval/src/vespa/eval/eval/optimize_tensor_function.cpp\nindex e13582e0fe9..ed0b122196d 100644\n--- a/eval/src/vespa/eval/eval/optimize_tensor_function.cpp\n+++ b/eval/src/vespa/eval/eval/optimize_tensor_function.cpp\n@@ -13,7 +13,6 @@\n #include <vespa/eval/tensor/dense/dense_single_reduce_function.h>\n #include <vespa/eval/tensor/dense/dense_remove_dimension_optimizer.h>\n #include <vespa/eval/instruction/dense_lambda_peek_optimizer.h>\n-#include <vespa/eval/tensor/dense/dense_lambda_function.h>\n #include <vespa/eval/instruction/dense_simple_expand_function.h>\n #include <vespa/eval/tensor/dense/dense_simple_join_function.h>\n #include <vespa/eval/instruction/join_with_number_function.h>\ndiff --git a/eval/src/vespa/eval/instruction/dense_cell_range_function.cpp b/eval/src/vespa/eval/instruction/dense_cell_range_function.cpp\nindex 18ccb33fadf..4c655c67747 100644\n--- a/eval/src/vespa/eval/instruction/dense_cell_range_function.cpp\n+++ b/eval/src/vespa/eval/instruction/dense_cell_range_function.cpp\n@@ -1,7 +1,6 @@\n // Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n \n #include \"dense_cell_range_function.h\"\n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n #include <vespa/eval/eval/value.h>\n \n namespace vespalib::eval {\n@@ -15,7 +14,7 @@ void my_cell_range_op(InterpretedFunction::State &state, uint64_t param) {\n     const auto &self = unwrap_param<DenseCellRangeFunction>(param);\n     auto old_cells = state.peek(0).cells().typify<CT>();\n     ConstArrayRef<CT> new_cells(&old_cells[self.offset()], self.length());\n-    state.pop_push(state.stash.create<tensor::DenseTensorView>(self.result_type(), TypedCells(new_cells)));\n+    state.pop_push(state.stash.create<DenseValueView>(self.result_type(), TypedCells(new_cells)));\n }\n \n struct MyCellRangeOp {\ndiff --git a/eval/src/vespa/eval/instruction/dense_dot_product_function.cpp b/eval/src/vespa/eval/instruction/dense_dot_product_function.cpp\nindex ce27bec35d4..e3cf52a8e3f 100644\n--- a/eval/src/vespa/eval/instruction/dense_dot_product_function.cpp\n+++ b/eval/src/vespa/eval/instruction/dense_dot_product_function.cpp\n@@ -1,7 +1,6 @@\n // Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n \n #include \"dense_dot_product_function.h\"\n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n #include <vespa/eval/eval/operation.h>\n #include <vespa/eval/eval/value.h>\n #include <cblas.h>\ndiff --git a/eval/src/vespa/eval/instruction/dense_lambda_peek_function.cpp b/eval/src/vespa/eval/instruction/dense_lambda_peek_function.cpp\nindex bf9d5b10a5f..4a4f6b9be14 100644\n--- a/eval/src/vespa/eval/instruction/dense_lambda_peek_function.cpp\n+++ b/eval/src/vespa/eval/instruction/dense_lambda_peek_function.cpp\n@@ -2,7 +2,6 @@\n \n #include \"dense_lambda_peek_function.h\"\n #include \"index_lookup_table.h\"\n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n #include <vespa/eval/eval/value.h>\n \n namespace vespalib::eval {\ndiff --git a/eval/src/vespa/eval/instruction/dense_lambda_peek_optimizer.cpp b/eval/src/vespa/eval/instruction/dense_lambda_peek_optimizer.cpp\nindex a2ea24dbf0a..6853b1a078f 100644\n--- a/eval/src/vespa/eval/instruction/dense_lambda_peek_optimizer.cpp\n+++ b/eval/src/vespa/eval/instruction/dense_lambda_peek_optimizer.cpp\n@@ -3,7 +3,6 @@\n #include \"dense_lambda_peek_optimizer.h\"\n #include \"dense_lambda_peek_function.h\"\n #include \"dense_cell_range_function.h\"\n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n #include <vespa/eval/tensor/dense/dense_replace_type_function.h>\n #include <vespa/eval/eval/value.h>\n #include <vespa/eval/eval/node_tools.h>\ndiff --git a/eval/src/vespa/eval/instruction/dense_matmul_function.cpp b/eval/src/vespa/eval/instruction/dense_matmul_function.cpp\nindex 1394a201e6d..33d9054820b 100644\n--- a/eval/src/vespa/eval/instruction/dense_matmul_function.cpp\n+++ b/eval/src/vespa/eval/instruction/dense_matmul_function.cpp\n@@ -1,7 +1,6 @@\n // Copyright 2020 Oath Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n \n #include \"dense_matmul_function.h\"\n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n #include <vespa/vespalib/objects/objectvisitor.h>\n #include <vespa/eval/eval/value.h>\n #include <vespa/eval/eval/operation.h>\ndiff --git a/eval/src/vespa/eval/instruction/dense_matmul_function.h b/eval/src/vespa/eval/instruction/dense_matmul_function.h\nindex a5432a7d86f..c96f2c35c75 100644\n--- a/eval/src/vespa/eval/instruction/dense_matmul_function.h\n+++ b/eval/src/vespa/eval/instruction/dense_matmul_function.h\n@@ -3,7 +3,6 @@\n #pragma once\n \n #include <vespa/eval/eval/tensor_function.h>\n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n \n namespace vespalib::eval {\n \ndiff --git a/eval/src/vespa/eval/instruction/dense_multi_matmul_function.h b/eval/src/vespa/eval/instruction/dense_multi_matmul_function.h\nindex 3038bdf7fdc..7dd99b58a2f 100644\n--- a/eval/src/vespa/eval/instruction/dense_multi_matmul_function.h\n+++ b/eval/src/vespa/eval/instruction/dense_multi_matmul_function.h\n@@ -2,7 +2,6 @@\n \n #pragma once\n \n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n #include <vespa/eval/eval/tensor_function.h>\n \n namespace vespalib::eval {\ndiff --git a/eval/src/vespa/eval/instruction/dense_simple_expand_function.cpp b/eval/src/vespa/eval/instruction/dense_simple_expand_function.cpp\nindex a656a0249f9..e67aa042881 100644\n--- a/eval/src/vespa/eval/instruction/dense_simple_expand_function.cpp\n+++ b/eval/src/vespa/eval/instruction/dense_simple_expand_function.cpp\n@@ -1,7 +1,6 @@\n // Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n \n #include \"dense_simple_expand_function.h\"\n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n #include <vespa/vespalib/objects/objectvisitor.h>\n #include <vespa/eval/eval/value.h>\n #include <vespa/eval/eval/operation.h>\ndiff --git a/eval/src/vespa/eval/instruction/dense_tensor_peek_function.cpp b/eval/src/vespa/eval/instruction/dense_tensor_peek_function.cpp\nindex 323909227f7..07fd0f8938c 100644\n--- a/eval/src/vespa/eval/instruction/dense_tensor_peek_function.cpp\n+++ b/eval/src/vespa/eval/instruction/dense_tensor_peek_function.cpp\n@@ -1,7 +1,6 @@\n // Copyright 2019 Oath Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n \n #include \"dense_tensor_peek_function.h\"\n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n #include <vespa/eval/eval/value.h>\n \n namespace vespalib::eval {\ndiff --git a/eval/src/vespa/eval/instruction/dense_xw_product_function.h b/eval/src/vespa/eval/instruction/dense_xw_product_function.h\nindex 6883c8a981f..7e87377f891 100644\n--- a/eval/src/vespa/eval/instruction/dense_xw_product_function.h\n+++ b/eval/src/vespa/eval/instruction/dense_xw_product_function.h\n@@ -3,7 +3,6 @@\n #pragma once\n \n #include <vespa/eval/eval/tensor_function.h>\n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n \n namespace vespalib::eval {\n \ndiff --git a/eval/src/vespa/eval/instruction/generic_concat.cpp b/eval/src/vespa/eval/instruction/generic_concat.cpp\nindex 4d949d5e725..fa9d2192b99 100644\n--- a/eval/src/vespa/eval/instruction/generic_concat.cpp\n+++ b/eval/src/vespa/eval/instruction/generic_concat.cpp\n@@ -4,7 +4,6 @@\n #include \"generic_join.h\"\n #include <vespa/eval/eval/value.h>\n #include <vespa/eval/eval/wrap_param.h>\n-#include <vespa/eval/tensor/dense/dense_tensor_view.h>\n #include <vespa/vespalib/util/overload.h>\n #include <vespa/vespalib/util/stash.h>\n #include <vespa/vespalib/util/typify.h>\ndiff --git a/eval/src/vespa/eval/tensor/CMakeLists.txt b/eval/src/vespa/eval/tensor/CMakeLists.txt\nindex c2968bd3efd..8b0178bd656 100644\n--- a/eval/src/vespa/eval/tensor/CMakeLists.txt\n+++ b/eval/src/vespa/eval/tensor/CMakeLists.txt\n@@ -2,6 +2,4 @@\n vespa_add_library(eval_tensor OBJECT\n     SOURCES\n     partial_update.cpp\n-    tensor.cpp\n-    tensor_address.cpp\n )\ndiff --git a/eval/src/vespa/eval/tensor/cell_function.h b/eval/src/vespa/eval/tensor/cell_function.h\ndeleted file mode 100644\nindex a268c9a34b1..00000000000\n--- a/eval/src/vespa/eval/tensor/cell_function.h\n+++ /dev/null\n@@ -1,19 +0,0 @@\n-// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n-\n-#pragma once\n-\n-#include <functional>\n-\n-namespace vespalib::tensor {\n-\n-/**\n- * Interface for a function to be applied on cells in a tensor.\n- */\n-struct CellFunction\n-{\n-    typedef std::reference_wrapper<const CellFunction> CREF;\n-    virtual ~CellFunction() {}\n-    virtual double apply(double value) const = 0;\n-};\n-\n-}\ndiff --git a/eval/src/vespa/eval/tensor/dense/CMakeLists.txt b/eval/src/vespa/eval/tensor/dense/CMakeLists.txt\nindex a8ce38fb270..1431ae53f66 100644\n--- a/eval/src/vespa/eval/tensor/dense/CMakeLists.txt\n+++ b/eval/src/vespa/eval/tensor/dense/CMakeLists.txt\n@@ -2,26 +2,15 @@\n vespa_add_library(eval_tensor_dense OBJECT\n     SOURCES\n     dense_add_dimension_optimizer.cpp\n-    dense_dimension_combiner.cpp\n     dense_fast_rename_optimizer.cpp\n-    dense_lambda_function.cpp\n-    dense_number_join_function.cpp\n     dense_pow_as_map_optimizer.cpp\n     dense_remove_dimension_optimizer.cpp\n     dense_replace_type_function.cpp\n     dense_simple_join_function.cpp\n     dense_simple_map_function.cpp\n     dense_single_reduce_function.cpp\n-    dense_tensor.cpp\n-    dense_tensor_address_mapper.cpp\n-    dense_tensor_cells_iterator.cpp\n     dense_tensor_create_function.cpp\n-    dense_tensor_reduce.cpp\n-    dense_tensor_value_builder.cpp\n-    dense_tensor_view.cpp\n     mutable_dense_tensor_view.cpp\n     onnx_wrapper.cpp\n-    typed_cells_dispatch.cpp\n-    typed_dense_tensor_builder.cpp\n     vector_from_doubles_function.cpp\n )\ndiff --git a/eval/src/vespa/eval/tensor/dense/dense_dimension_combiner.cpp b/eval/src/vespa/eval/tensor/dense/dense_dimension_combiner.cpp\ndeleted file mode 100644\nindex 22c8ff12ad1..00000000000\n--- a/eval/src/vespa/eval/tensor/dense/dense_dimension_combiner.cpp\n+++ /dev/null\n@@ -1,91 +0,0 @@\n-// Copyright 2019 Oath Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n-\n-#include \"dense_dimension_combiner.h\"\n-#include <cassert>\n-\n-namespace vespalib::tensor {\n-\n-DenseDimensionCombiner::~DenseDimensionCombiner() = default;\n-\n-DenseDimensionCombiner::DenseDimensionCombiner(const eval::ValueType &lhs,\n-                                               const eval::ValueType &rhs)\n-  : _left(), _right(),\n-    _commonDims(),\n-    _outputIndex(0),\n-    _outputSize(1u),\n-    result_type(eval::ValueType::join(lhs, rhs))\n-{\n-    assert(lhs.is_dense());\n-    assert(rhs.is_dense());\n-    assert(result_type.is_dense());\n-\n-    const auto &lDims = lhs.dimensions();\n-    const auto &rDims = rhs.dimensions();\n-    const auto &oDims = result_type.dimensions();\n-\n-    size_t i = lDims.size();\n-    size_t j = rDims.size();\n-    size_t k = oDims.size();\n-\n-    uint32_t lMul = 1;\n-    uint32_t rMul = 1;\n-    uint32_t oMul = 1;\n-\n-    while (k-- > 0) {\n-        if ((i > 0) && (lDims[i-1].name == oDims[k].name)) {\n-            --i;\n-            // left dim match\n-            if ((j > 0) && (rDims[j-1].name == oDims[k].name)) {\n-                // both dim match\n-                --j;\n-                CommonDim cd;\n-                cd.idx = 0;\n-                cd.leftMultiplier = lMul;\n-                cd.rightMultiplier = rMul;\n-                cd.outputMultiplier = oMul;\n-                assert(lDims[i].size == oDims[k].size);\n-                assert(rDims[j].size == oDims[k].size);\n-                cd.size = oDims[k].size;\n-                lMul *= cd.size;\n-                rMul *= cd.size;\n-                oMul *= cd.size;\n-                _left.totalSize *= cd.size;\n-                _right.totalSize *= cd.size;\n-                _outputSize *= cd.size;\n-                _commonDims.push_back(cd);\n-            } else {\n-                SideDim ld;\n-                ld.idx = 0;\n-                ld.sideMultiplier = lMul;\n-                ld.outputMultiplier = oMul;\n-                assert(lDims[i].size == oDims[k].size);\n-                ld.size = oDims[k].size;\n-                lMul *= ld.size;\n-                oMul *= ld.size;\n-                _outputSize *= ld.size;\n-                _left.totalSize *= ld.size;\n-                _left.dims.push_back(ld);\n-            }\n-        } else {\n-            // right dim match\n-            assert(j > 0);\n-            assert(rDims[j-1].name == oDims[k].name);\n-            --j;\n-            SideDim rd;\n-            rd.idx = 0;\n-            rd.sideMultiplier = rMul;\n-            rd.outputMultiplier = oMul;\n-            assert(rDims[j].size == oDims[k].size);\n-            rd.size = oDims[k].size;\n-            rMul *= rd.size;\n-            oMul *= rd.size;\n-            _outputSize *= rd.size;\n-            _right.totalSize *= rd.size;\n-            _right.dims.push_back(rd);\n-        }\n-    }\n-}\n-\n-\n-} // namespace\n-\ndiff --git a/eval/src/vespa/eval/tensor/dense/dense_dimension_combiner.h b/eval/src/vespa/eval/tensor/dense/dense_dimension_combiner.h\ndeleted file mode 100644\nindex dd3f74bad9b..00000000000\n--- a/eval/src/vespa/eval/tensor/dense/dense_dimension_combiner.h\n+++ /dev/null\n@@ -1,114 +0,0 @@\n-// Copyright 2019 Oath Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n-\n-#pragma once\n-\n-#include <vespa/eval/tensor/tensor.h>\n-#include <vespa/eval/tensor/types.h>\n-#include <vespa/eval/eval/value_type.h>\n-\n-namespace vespalib::tensor {\n-\n-class DenseDimensionCombiner {\n-\n-    struct SideDim {\n-        uint32_t idx;\n-        uint32_t size;\n-        uint32_t sideMultiplier;\n-        uint32_t outputMultiplier;\n-    };\n-    struct CommonDim {\n-        uint32_t idx;\n-        uint32_t size;\n-        uint32_t leftMultiplier;\n-        uint32_t rightMultiplier;\n-        uint32_t outputMultiplier;\n-    };\n-\n-    struct SideDims {\n-        std::vector<SideDim> dims;\n-        uint32_t index;\n-        uint32_t totalSize;\n-\n-        SideDims() : dims(), index(0), totalSize(1u) {}\n-\n-        void reset(uint32_t &outIndex) {\n-            for (SideDim& d : dims) {\n-                index -= d.idx * d.sideMultiplier;\n-                outIndex -= d.idx * d.outputMultiplier;\n-                d.idx = 0;\n-            }\n-            if (index >= totalSize) {\n-                index -= totalSize;\n-            }\n-        }\n-        void step(uint32_t &outIndex) {\n-            for (SideDim& d : dims) {\n-                d.idx++;\n-                index += d.sideMultiplier;\n-                outIndex += d.outputMultiplier;\n-                if (d.idx < d.size) return;\n-                index -= d.idx * d.sideMultiplier;\n-                outIndex -= d.idx * d.outputMultiplier;\n-                d.idx = 0;\n-            }\n-            index += totalSize;\n-        }\n-",
    "Add software requirements": "diff --git a/presto-docs/src/main/sphinx/installation/deployment.rst b/presto-docs/src/main/sphinx/installation/deployment.rst\nindex 8c5c50f1a6..2a9b57ee50 100644\n--- a/presto-docs/src/main/sphinx/installation/deployment.rst\n+++ b/presto-docs/src/main/sphinx/installation/deployment.rst\n@@ -2,6 +2,30 @@\n Deploying Presto\n ================\n \n+Requirements\n+------------\n+\n+Linux Operating System\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+* 64-bit required\n+* newer release preferred, especially when running on containers\n+\n+.. _requirements-java:\n+\n+Java Runtime Environment\n+^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+* 64-bit required\n+* version 11 recommended (higher versions are less tested)\n+* Azul Zulu recommended (most tested)\n+\n+Python\n+^^^^^^\n+\n+* version 2.6.x, 2.7.x, or 3.x\n+* required by the ``bin/launcher`` script only\n+\n Installing Presto\n -----------------\n \ndiff --git a/presto-docs/src/main/sphinx/release/release-326.rst b/presto-docs/src/main/sphinx/release/release-326.rst\nindex c991d44bdd..dcba55f002 100644\n--- a/presto-docs/src/main/sphinx/release/release-326.rst\n+++ b/presto-docs/src/main/sphinx/release/release-326.rst\n@@ -16,7 +16,7 @@ General Changes\n Server RPM Changes\n ------------------\n \n-* Allow running Presto with Java 11 or newer. (:issue:`2057`)\n+* Allow running Presto with :ref:`Java 11 or above <requirements-java>`. (:issue:`2057`)\n \n Security Changes\n ----------------\ndiff --git a/presto-docs/src/main/sphinx/release/release-330.rst b/presto-docs/src/main/sphinx/release/release-330.rst\nindex b7984feb14..1b022cf76e 100644\n--- a/presto-docs/src/main/sphinx/release/release-330.rst\n+++ b/presto-docs/src/main/sphinx/release/release-330.rst\n@@ -31,7 +31,7 @@ General Changes\n Server Changes\n --------------\n \n-* Require running on Java 11. This requirement may be temporarily relaxed by adding\n+* Require running on :ref:`Java 11 or above <requirements-java>`. This requirement may be temporarily relaxed by adding\n   ``-Dpresto-temporarily-allow-java8=true`` to the Presto :ref:`presto_jvm_config`.\n   This fallback will be removed in future versions of Presto after March 2020. (:issue:`2751`)\n * Add experimental support for running on Linux aarch64 (ARM64). (:issue:`2809`)\ndiff --git a/presto-docs/src/main/sphinx/release/release-333.rst b/presto-docs/src/main/sphinx/release/release-333.rst\nindex 6e498cbaf5..3e0fc72de4 100644\n--- a/presto-docs/src/main/sphinx/release/release-333.rst\n+++ b/presto-docs/src/main/sphinx/release/release-333.rst\n@@ -26,7 +26,7 @@ General Changes\n Server Changes\n --------------\n \n-* Require running on Java 11 or above. (:issue:`2799`)\n+* Require running on :ref:`Java 11 or above <requirements-java>`. (:issue:`2799`)\n \n Server RPM Changes\n ------------------",
    "Updated DrawBackground to leverage .": "diff --git a/compose/compose-runtime/compose-runtime-benchmark/src/androidTest/java/androidx/compose/benchmark/realworld4/RealWorld4_Widgets.kt b/compose/compose-runtime/compose-runtime-benchmark/src/androidTest/java/androidx/compose/benchmark/realworld4/RealWorld4_Widgets.kt\nindex 75e33a51557..d6a8ae5567c 100644\n--- a/compose/compose-runtime/compose-runtime-benchmark/src/androidTest/java/androidx/compose/benchmark/realworld4/RealWorld4_Widgets.kt\n+++ b/compose/compose-runtime/compose-runtime-benchmark/src/androidTest/java/androidx/compose/benchmark/realworld4/RealWorld4_Widgets.kt\n@@ -31,7 +31,7 @@ import androidx.ui.graphics.Color\n import androidx.ui.layout.Column\n import androidx.ui.layout.padding\n import androidx.ui.foundation.Box\n-import androidx.ui.foundation.DrawBackground\n+import androidx.ui.foundation.drawBackground\n import androidx.ui.layout.Row\n import androidx.ui.layout.fillMaxSize\n import androidx.ui.layout.fillMaxWidth\n@@ -54,7 +54,7 @@ fun RealWorld4_FancyWidget_000(model: RealWorld4_DataModel_00) {\n     }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_001(\n@@ -124,7 +124,7 @@ fun RealWorld4_FancyWidget_001(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_002(\n@@ -172,7 +172,7 @@ fun RealWorld4_FancyWidget_002(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_003(\n@@ -269,7 +269,7 @@ fun RealWorld4_FancyWidget_003(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_004(\n@@ -372,7 +372,7 @@ fun RealWorld4_FancyWidget_004(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_005(\n@@ -460,7 +460,7 @@ fun RealWorld4_FancyWidget_005(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_133(\n@@ -571,7 +571,7 @@ fun RealWorld4_FancyWidget_006(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_070(\n@@ -637,7 +637,7 @@ fun RealWorld4_FancyWidget_007(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_071(\n@@ -716,7 +716,7 @@ fun RealWorld4_FancyWidget_008(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_012(\n@@ -763,7 +763,7 @@ fun RealWorld4_FancyWidget_009(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_123(\n@@ -818,7 +818,7 @@ fun RealWorld4_FancyWidget_010(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -856,7 +856,7 @@ fun RealWorld4_FancyWidget_011(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -893,7 +893,7 @@ fun RealWorld4_FancyWidget_012(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_091(\n@@ -956,7 +956,7 @@ fun RealWorld4_FancyWidget_013(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -995,7 +995,7 @@ fun RealWorld4_FancyWidget_014(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -1040,7 +1040,7 @@ fun RealWorld4_FancyWidget_015(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_119(\n@@ -1099,7 +1099,7 @@ fun RealWorld4_FancyWidget_016(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_057(\n@@ -1169,7 +1169,7 @@ fun RealWorld4_FancyWidget_017(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -1223,7 +1223,7 @@ fun RealWorld4_FancyWidget_018(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_147(\n@@ -1280,7 +1280,7 @@ fun RealWorld4_FancyWidget_019(\n     }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -1331,7 +1331,7 @@ fun RealWorld4_FancyWidget_020(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -1364,7 +1364,7 @@ fun RealWorld4_FancyWidget_021(\n     }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -1416,7 +1416,7 @@ fun RealWorld4_FancyWidget_022(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_015(\n@@ -1499,7 +1499,7 @@ fun RealWorld4_FancyWidget_023(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp5 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2 + tmp3 + tmp4\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp5.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp5.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_094(\n@@ -1552,7 +1552,7 @@ fun RealWorld4_FancyWidget_024(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_048(\n@@ -1599,7 +1599,7 @@ fun RealWorld4_FancyWidget_025(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_138(\n@@ -1660,7 +1660,7 @@ fun RealWorld4_FancyWidget_026(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -1699,7 +1699,7 @@ fun RealWorld4_FancyWidget_027(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -1749,7 +1749,7 @@ fun RealWorld4_FancyWidget_028(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -1792,7 +1792,7 @@ fun RealWorld4_FancyWidget_029(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_016(\n@@ -1839,7 +1839,7 @@ fun RealWorld4_FancyWidget_030(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_121(\n@@ -1887,7 +1887,7 @@ fun RealWorld4_FancyWidget_031(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -1928,7 +1928,7 @@ fun RealWorld4_FancyWidget_032(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp5 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2 + tmp3 + tmp4\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp5.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp5.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -1967,7 +1967,7 @@ fun RealWorld4_FancyWidget_033(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     RealWorld4_FancyWidget_063(\n@@ -2022,7 +2022,7 @@ fun RealWorld4_FancyWidget_034(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -2067,7 +2067,7 @@ fun RealWorld4_FancyWidget_035(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n                 Column {\n                     Box(Modifier.fillMaxWidth().weight(1f), backgroundColor = model.toColor())\n@@ -2106,7 +2106,7 @@ fun RealWorld4_FancyWidget_036(\n             }.map { it.toString().reversed() }.joinToString(\"-\"))\n     val tmp3 = \"lkjzndgke84ts\" + tmp0 + tmp1 + tmp2\n     WithConstraints(modifier) {\n-        Box(Modifier.padding(1.dp) + DrawBackground(color = tmp3.toColor())) {\n+        Box(Modifier.padding(1.dp).drawBackground(color = tmp3.toColor())) {\n             if (constraints.maxHeight > constraints.maxWidth) {\n    ",
    "Added some minor changes to pass the code style check": "diff --git a/keyvalue/server/src/main/java/alluxio/master/keyvalue/DefaultKeyValueMaster.java b/keyvalue/server/src/main/java/alluxio/master/keyvalue/DefaultKeyValueMaster.java\nindex 983882061b..37b7d1e461 100644\n--- a/keyvalue/server/src/main/java/alluxio/master/keyvalue/DefaultKeyValueMaster.java\n+++ b/keyvalue/server/src/main/java/alluxio/master/keyvalue/DefaultKeyValueMaster.java\n@@ -27,6 +27,7 @@ import alluxio.master.file.options.CreateDirectoryOptions;\n import alluxio.master.file.options.DeleteOptions;\n import alluxio.master.file.options.RenameOptions;\n import alluxio.master.journal.Journal;\n+import alluxio.proto.journal.Journal.JournalEntry;\n import alluxio.proto.journal.KeyValue;\n import alluxio.thrift.KeyValueMasterClientService;\n import alluxio.thrift.PartitionInfo;\n@@ -38,6 +39,7 @@ import com.google.common.base.Preconditions;\n import com.google.common.base.Throwables;\n import com.google.common.collect.ImmutableSet;\n import com.google.common.collect.Iterators;\n+import net.jcip.annotations.ThreadSafe;\n import org.apache.thrift.TProcessor;\n \n import java.io.IOException;\n@@ -50,6 +52,11 @@ import java.util.NoSuchElementException;\n import java.util.Set;\n import java.util.UUID;\n \n+/**\n+ * This master stores key-value store information in Alluxio, including the partitions of\n+ * each key-value store.\n+ */\n+@ThreadSafe\n public class DefaultKeyValueMaster extends AbstractMaster implements KeyValueMaster {\n   private static final Set<Class<? extends Server>> DEPS =\n       ImmutableSet.<Class<? extends Server>>of(FileSystemMaster.class);\n@@ -119,7 +126,7 @@ public class DefaultKeyValueMaster extends AbstractMaster implements KeyValueMas\n   }\n \n   @Override\n-  public synchronized Iterator<alluxio.proto.journal.Journal.JournalEntry> getJournalEntryIterator() {\n+  public synchronized Iterator<JournalEntry> getJournalEntryIterator() {\n     return Iterators.concat(getStoreIterator(mCompleteStoreToPartitions),\n         getStoreIterator(mIncompleteStoreToPartitions));\n   }\ndiff --git a/keyvalue/server/src/main/java/alluxio/master/keyvalue/KeyValueMaster.java b/keyvalue/server/src/main/java/alluxio/master/keyvalue/KeyValueMaster.java\nindex c5eb75b65b..33eaed2e4a 100644\n--- a/keyvalue/server/src/main/java/alluxio/master/keyvalue/KeyValueMaster.java\n+++ b/keyvalue/server/src/main/java/alluxio/master/keyvalue/KeyValueMaster.java\n@@ -22,6 +22,10 @@ import alluxio.thrift.PartitionInfo;\n import java.io.IOException;\n import java.util.List;\n \n+/**\n+ * Interface of key-value master that stores key-value store information in Alluxio, including the partitions of\n+ * each key-value store.\n+ */\n public interface KeyValueMaster {\n \n   /**\ndiff --git a/keyvalue/server/src/main/java/alluxio/master/keyvalue/KeyValueMasterFactory.java b/keyvalue/server/src/main/java/alluxio/master/keyvalue/KeyValueMasterFactory.java\nindex 7128705e80..64e4c85214 100644\n--- a/keyvalue/server/src/main/java/alluxio/master/keyvalue/KeyValueMasterFactory.java\n+++ b/keyvalue/server/src/main/java/alluxio/master/keyvalue/KeyValueMasterFactory.java\n@@ -54,7 +54,8 @@ public final class KeyValueMasterFactory implements MasterFactory {\n     LOG.info(\"Creating {} \", KeyValueMaster.class.getName());\n     Journal journal = journalFactory.create(getName());\n     FileSystemMaster fileSystemMaster = registry.get(FileSystemMaster.class);\n-    DefaultKeyValueMaster defaultKeyValueMaster = new DefaultKeyValueMaster(fileSystemMaster, journal);\n+    DefaultKeyValueMaster defaultKeyValueMaster =\n+        new DefaultKeyValueMaster(fileSystemMaster, journal);\n     registry.add(DefaultKeyValueMaster.class, defaultKeyValueMaster);\n     return defaultKeyValueMaster;\n   }",
    "bump versions": "diff --git a/build.xml b/build.xml\nindex 435d4a0824..20c26a8136 100644\n--- a/build.xml\n+++ b/build.xml\n@@ -25,7 +25,7 @@\n     <property name=\"debuglevel\" value=\"source,lines,vars\"/>\n \n     <!-- default version and SCM information -->\n-    <property name=\"base.version\" value=\"2.1.8\"/>\n+    <property name=\"base.version\" value=\"2.1.9\"/>\n     <property name=\"scm.connection\" value=\"scm:git://git.apache.org/cassandra.git\"/>\n     <property name=\"scm.developerConnection\" value=\"scm:git://git.apache.org/cassandra.git\"/>\n     <property name=\"scm.url\" value=\"http://git-wip-us.apache.org/repos/asf?p=cassandra.git;a=tree\"/>\ndiff --git a/debian/changelog b/debian/changelog\nindex a540f387d3..09629a60a5 100644\n--- a/debian/changelog\n+++ b/debian/changelog\n@@ -1,3 +1,9 @@\n+cassandra (2.1.9) unstable; urgency=medium\n+\n+  * New release\n+\n+ -- Jake Luciani <jake@apache.org>  Tue, 25 Aug 2015 09:32:27 -0400\n+\n cassandra (2.1.8) unstable; urgency=medium\n \n   * New release ",
    "Add AbstractJDBCQueryResult": "diff --git a/shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/jdbc/AbstractJDBCQueryResult.java b/shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/jdbc/AbstractJDBCQueryResult.java\nnew file mode 100644\nindex 00000000000..385b102a668\n--- /dev/null\n+++ b/shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/jdbc/AbstractJDBCQueryResult.java\n@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.apache.shardingsphere.infra.executor.sql.QueryResult;\n+\n+import java.sql.ResultSetMetaData;\n+import java.sql.SQLException;\n+\n+/**\n+ * Abstract JDBC query result.\n+ */\n+@RequiredArgsConstructor\n+public abstract class AbstractJDBCQueryResult implements QueryResult {\n+    \n+    private final ResultSetMetaData resultSetMetaData;\n+    \n+    @Override\n+    public final int getColumnCount() throws SQLException {\n+        return resultSetMetaData.getColumnCount();\n+    }\n+    \n+    @Override\n+    public final String getColumnName(final int columnIndex) throws SQLException {\n+        return resultSetMetaData.getColumnName(columnIndex);\n+    }\n+    \n+    @Override\n+    public final String getColumnLabel(final int columnIndex) throws SQLException {\n+        return resultSetMetaData.getColumnLabel(columnIndex);\n+    }\n+    \n+    @Override\n+    public final String getColumnTypeName(final int columnIndex) throws SQLException {\n+        return resultSetMetaData.getColumnTypeName(columnIndex);\n+    }\n+}\ndiff --git a/shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/MemoryQueryResult.java b/shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/jdbc/MemoryQueryResult.java\nsimilarity index 86%\nrename from shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/MemoryQueryResult.java\nrename to shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/jdbc/MemoryQueryResult.java\nindex 2180fb13d1c..d0669bd716e 100644\n--- a/shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/MemoryQueryResult.java\n+++ b/shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/jdbc/MemoryQueryResult.java\n@@ -15,10 +15,9 @@\n  * limitations under the License.\n  */\n \n-package org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult;\n+package org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc;\n \n import lombok.SneakyThrows;\n-import org.apache.shardingsphere.infra.executor.sql.QueryResult;\n \n import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;\n@@ -40,16 +39,14 @@ import java.util.List;\n /**\n  * Query result for memory loading.\n  */\n-public final class MemoryQueryResult implements QueryResult {\n-    \n-    private final ResultSetMetaData resultSetMetaData;\n+public final class MemoryQueryResult extends AbstractJDBCQueryResult {\n     \n     private final Iterator<List<Object>> rows;\n     \n     private List<Object> currentRow;\n     \n     public MemoryQueryResult(final ResultSet resultSet) throws SQLException {\n-        resultSetMetaData = resultSet.getMetaData();\n+        super(resultSet.getMetaData());\n         rows = getRows(resultSet);\n     }\n     \n@@ -154,24 +151,4 @@ public final class MemoryQueryResult implements QueryResult {\n     public boolean wasNull() {\n         return null == currentRow;\n     }\n-    \n-    @Override\n-    public int getColumnCount() throws SQLException {\n-        return resultSetMetaData.getColumnCount();\n-    }\n-    \n-    @Override\n-    public String getColumnName(final int columnIndex) throws SQLException {\n-        return resultSetMetaData.getColumnName(columnIndex);\n-    }\n-    \n-    @Override\n-    public String getColumnLabel(final int columnIndex) throws SQLException {\n-        return resultSetMetaData.getColumnLabel(columnIndex);\n-    }\n-    \n-    @Override\n-    public String getColumnTypeName(final int columnIndex) throws SQLException {\n-        return resultSetMetaData.getColumnTypeName(columnIndex);\n-    }\n }\ndiff --git a/shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/StreamQueryResult.java b/shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/jdbc/StreamQueryResult.java\nsimilarity index 82%\nrename from shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/StreamQueryResult.java\nrename to shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/jdbc/StreamQueryResult.java\nindex d30e20e5b78..86b8c8e4bf6 100644\n--- a/shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/StreamQueryResult.java\n+++ b/shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/resourced/jdbc/queryresult/jdbc/StreamQueryResult.java\n@@ -15,9 +15,7 @@\n  * limitations under the License.\n  */\n \n-package org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult;\n-\n-import org.apache.shardingsphere.infra.executor.sql.QueryResult;\n+package org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc;\n \n import java.io.InputStream;\n import java.math.BigDecimal;\n@@ -26,7 +24,6 @@ import java.sql.Blob;\n import java.sql.Clob;\n import java.sql.Date;\n import java.sql.ResultSet;\n-import java.sql.ResultSetMetaData;\n import java.sql.SQLException;\n import java.sql.Time;\n import java.sql.Timestamp;\n@@ -35,14 +32,12 @@ import java.util.Calendar;\n /**\n  * Query result for stream loading.\n  */\n-public final class StreamQueryResult implements QueryResult {\n-    \n-    private final ResultSetMetaData resultSetMetaData;\n+public final class StreamQueryResult extends AbstractJDBCQueryResult {\n     \n     private final ResultSet resultSet;\n     \n     public StreamQueryResult(final ResultSet resultSet) throws SQLException {\n-        resultSetMetaData = resultSet.getMetaData();\n+        super(resultSet.getMetaData());\n         this.resultSet = resultSet;\n     }\n     \n@@ -123,24 +118,4 @@ public final class StreamQueryResult implements QueryResult {\n     public boolean wasNull() throws SQLException {\n         return resultSet.wasNull();\n     }\n-    \n-    @Override\n-    public int getColumnCount() throws SQLException {\n-        return resultSetMetaData.getColumnCount();\n-    }\n-    \n-    @Override\n-    public String getColumnName(final int columnIndex) throws SQLException {\n-        return resultSetMetaData.getColumnName(columnIndex);\n-    }\n-    \n-    @Override\n-    public String getColumnLabel(final int columnIndex) throws SQLException {\n-        return resultSetMetaData.getColumnLabel(columnIndex);\n-    }\n-    \n-    @Override\n-    public String getColumnTypeName(final int columnIndex) throws SQLException {\n-        return resultSetMetaData.getColumnTypeName(columnIndex);\n-    }\n }\ndiff --git a/shardingsphere-infra/shardingsphere-infra-executor/src/test/java/org/apache/shardingsphere/infra/executor/sql/jdbc/queryresult/MemoryQueryResultTest.java b/shardingsphere-infra/shardingsphere-infra-executor/src/test/java/org/apache/shardingsphere/infra/executor/sql/jdbc/queryresult/MemoryQueryResultTest.java\nindex 8cfe7d16a5e..0037bac9f27 100644\n--- a/shardingsphere-infra/shardingsphere-infra-executor/src/test/java/org/apache/shardingsphere/infra/executor/sql/jdbc/queryresult/MemoryQueryResultTest.java\n+++ b/shardingsphere-infra/shardingsphere-infra-executor/src/test/java/org/apache/shardingsphere/infra/executor/sql/jdbc/queryresult/MemoryQueryResultTest.java\n@@ -17,7 +17,7 @@\n \n package org.apache.shardingsphere.infra.executor.sql.jdbc.queryresult;\n \n-import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.MemoryQueryResult;\n+import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc.MemoryQueryResult;\n import org.hamcrest.core.Is;\n import org.junit.Test;\n \ndiff --git a/shardingsphere-infra/shardingsphere-infra-executor/src/test/java/org/apache/shardingsphere/infra/executor/sql/jdbc/queryresult/StreamQueryResultTest.java b/shardingsphere-infra/shardingsphere-infra-executor/src/test/java/org/apache/shardingsphere/infra/executor/sql/jdbc/queryresult/StreamQueryResultTest.java\nindex 97925e60fd2..104dd685d81 100644\n--- a/shardingsphere-infra/shardingsphere-infra-executor/src/test/java/org/apache/shardingsphere/infra/executor/sql/jdbc/queryresult/StreamQueryResultTest.java\n+++ b/shardingsphere-infra/shardingsphere-infra-executor/src/test/java/org/apache/shardingsphere/infra/executor/sql/jdbc/queryresult/StreamQueryResultTest.java\n@@ -17,7 +17,7 @@\n \n package org.apache.shardingsphere.infra.executor.sql.jdbc.queryresult;\n \n-import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.StreamQueryResult;\n+import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc.StreamQueryResult;\n import org.junit.Test;\n \n import java.math.BigDecimal;\ndiff --git a/shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/fixture/decorator/ResultDecoratorFixture.java b/shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/fixture/decorator/ResultDecoratorFixture.java\nindex 0a2540e158a..3336f0458f6 100644\n--- a/shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/fixture/decorator/ResultDecoratorFixture.java\n+++ b/shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/fixture/decorator/ResultDecoratorFixture.java\n@@ -19,7 +19,7 @@ package org.apache.shardingsphere.infra.merge.fixture.decorator;\n \n import org.apache.shardingsphere.infra.binder.statement.SQLStatementContext;\n import org.apache.shardingsphere.infra.executor.sql.QueryResult;\n-import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.StreamQueryResult;\n+import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc.StreamQueryResult;\n import org.apache.shardingsphere.infra.merge.engine.decorator.ResultDecorator;\n import org.apache.shardingsphere.infra.merge.fixture.rule.DecoratorRuleFixture;\n import org.apache.shardingsphere.infra.merge.result.MergedResult;\ndiff --git a/shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/fixture/merger/ResultMergerFixture.java b/shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/fixture/merger/ResultMergerFixture.java\nindex 046b313da3e..c4631e29aa3 100644\n--- a/shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/fixture/merger/ResultMergerFixture.java\n+++ b/shardingsphere-infra/shardingsphere-infra-merge/src/test/java/org/apache/shardingsphere/infra/merge/fixture/merger/ResultMergerFixture.java\n@@ -18,7 +18,7 @@\n package org.apache.shardingsphere.infra.merge.fixture.merger;\n \n import org.apache.shardingsphere.infra.executor.sql.QueryResult;\n-import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.StreamQueryResult;\n+import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc.StreamQueryResult;\n import org.apache.shardingsphere.infra.merge.engine.merger.ResultMerger;\n import org.apache.shardingsphere.infra.merge.result.MergedResult;\n import org.apache.shardingsphere.infra.merge.result.impl.transparent.TransparentMergedResult;\ndiff --git a/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/executor/PreparedStatementExecutor.java b/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/executor/PreparedStatementExecutor.java\nindex 57fab5de08f..8b5197f1092 100644\n--- a/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/executor/PreparedStatementExecutor.java\n+++ b/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/executor/PreparedStatementExecutor.java\n@@ -27,8 +27,8 @@ import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.Exec\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor;\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutorCallback;\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback;\n-import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.MemoryQueryResult;\n-import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.StreamQueryResult;\n+import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc.MemoryQueryResult;\n+import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc.StreamQueryResult;\n import org.apache.shardingsphere.infra.route.context.RouteUnit;\n import org.apache.shardingsphere.infra.rule.type.DataNodeContainedRule;\n import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\ndiff --git a/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/executor/StatementExecutor.java b/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/executor/StatementExecutor.java\nindex c3ee7461103..3777a2e1324 100644\n--- a/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/executor/StatementExecutor.java\n+++ b/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/executor/StatementExecutor.java\n@@ -27,8 +27,8 @@ import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.Exec\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor;\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutorCallback;\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback;\n-import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.MemoryQueryResult;\n-import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.StreamQueryResult;\n+import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc.MemoryQueryResult;\n+import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc.StreamQueryResult;\n import org.apache.shardingsphere.infra.route.context.RouteUnit;\n import org.apache.shardingsphere.infra.rule.type.DataNodeContainedRule;\n import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\ndiff --git a/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSpherePreparedStatement.java b/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSpherePreparedStatement.java\nindex 2d8ff5a6d33..f9345e6c2cc 100644\n--- a/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSpherePreparedStatement.java\n+++ b/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSpherePreparedStatement.java\n@@ -52,7 +52,7 @@ import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.StatementExec\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor;\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.group.PreparedStatementExecuteGroupEngine;\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.group.StatementOption;\n-import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.StreamQueryResult;\n+import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc.StreamQueryResult;\n import org.apache.shardingsphere.infra.merge.MergeEngine;\n import org.apache.shardingsphere.infra.merge.result.MergedResult;\n import org.apache.shardingsphere.infra.metadata.schema.ShardingSphereSchema;\ndiff --git a/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSphereStatement.java b/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSphereStatement.java\nindex df3b37c8e77..4dd560469e2 100644\n--- a/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSphereStatement.java\n+++ b/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSphereStatement.java\n@@ -50,7 +50,7 @@ import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.StatementExec\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor;\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.group.StatementExecuteGroupEngine;\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.group.StatementOption;\n-import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.StreamQueryResult;\n+import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc.StreamQueryResult;\n import org.apache.shardingsphere.infra.merge.MergeEngine;\n import org.apache.shardingsphere.infra.merge.result.MergedResult;\n import org.apache.shardingsphere.infra.metadata.schema.ShardingSphereSchema;\ndiff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/execute/engine/jdbc/ProxySQLExecutorCallback.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/execute/engine/jdbc/ProxySQLExecutorCallback.java\nindex e0f80193b07..54a7bf43f66 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/execute/engine/jdbc/ProxySQLExecutorCallback.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/execute/engine/jdbc/ProxySQLExecutorCallback.java\n@@ -25,8 +25,8 @@ import org.apache.shardingsphere.infra.executor.sql.raw.execute.result.query.Exe\n import org.apache.shardingsphere.infra.executor.sql.raw.execute.result.query.QueryHeader;\n import org.apache.shardingsphere.infra.executor.sql.raw.execute.result.update.ExecuteUpdateResult;\n import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback;\n-import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.MemoryQueryResult;\n-import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.StreamQueryResult;\n+import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc.MemoryQueryResult;\n+import org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.queryresult.jdbc.StreamQueryResult;\n import org.apache.shardingsphere.proxy.backend.communication.jdbc.connection.BackendConnection;\n import org.apache.shardingsphere.proxy.backend.communication.jdbc.statement.accessor.JDBCAccessor;\n import org.apache.shardingsphere.proxy.backend.context.ProxyContext;",
    "create index statement fixup": "diff --git a/docs/sql/ddl.txt b/docs/sql/ddl.txt\nindex 5b57a99913..77a80cce26 100644\n--- a/docs/sql/ddl.txt\n+++ b/docs/sql/ddl.txt\n@@ -44,78 +44,6 @@ data is inserted, otherwise an error is returned.\n \n   Multiple primary keys are not supported yet.\n \n-\n-Indexes and Fulltext Search\n-===========================\n-\n-Indexes for fulltextsearch are created using an analyzer that consists of\n-one tokenizer and zero or more token filters and char filters.\n-Existing Analyzers can be used to create custom Analyzers by means of extending them.\n-\n-\n-Create Analyzer Syntax::\n-\n-    CREATE ANALYZER <analyzer_name> [EXTENDS <analyzer_name>] (\n-        [TOKENIZER [WITH] (\n-            <tokenizer_property>=<value>,\n-            ...\n-        )]\n-        [TOKEN_FILTERS [WITH] (\n-            <builtin_token_filter_name> [WITH] (\n-                <token_filter_property>=<value>,\n-                ...\n-            ),\n-            ...\n-        )]\n-        [CHAR_FILTERS [WITH] (\n-            <builtin_char_filter_name> [WITH] (\n-                <char_filter_property>=<value>,\n-                ...\n-            ),\n-            ...\n-        )]\n-    )\n-\n-Built-in and self-made Analyzers can be used to create iundices by referencing them by name.\n-\n-Create a Fulltext Index::\n-\n-    CREATE INDEX <index_name> ON <table_name> USING <method>(<column_name>, ...)\n-    [\n-        WITH (\n-            <index_property>=<value>\n-        )\n-    ]\n-\n-Where possible ``index_property`` values are::\n-\n-    analyzer=<analyzer_name>\n-\n-And possible ``methods`` are::\n-\n-    fulltext\n-\n-This is the only index-method currently supported. It uses the given analyzer to create a fulltext-searchable\n-representation of the fields it is defined for.\n-\n-Defining Indexes on Columns within ``CREATE TABLE``-Statements.\n-This way only a single column can be indexed, no combination of columns as with the ``CREATE INDEX`` statement::\n-\n-    CREATE TABLE t1 (\n-        field string INDEX [ USING <method> [WITH] (<index_property>=<value>) | OFF ]\n-    )\n-\n-Indexes over multiple columns can be defined using a Table-Constraint inside the ``CREATE TABLE`` statement::\n-\n-    CREATE TABLE t2 (\n-        title string,\n-        content string INDEX OFF,\n-        INDEX ft USING fulltext(title, content) WITH (analyzer='vorarlbergerisch')\n-    )\n-\n-\n-\n-\n Data Types\n ==========\n \ndiff --git a/sql/src/main/java/org/cratedb/sql/parser/parser/IndexProperties.java b/sql/src/main/java/org/cratedb/sql/parser/parser/IndexProperties.java\nindex 03f250da76..0af0731e8a 100644\n--- a/sql/src/main/java/org/cratedb/sql/parser/parser/IndexProperties.java\n+++ b/sql/src/main/java/org/cratedb/sql/parser/parser/IndexProperties.java\n@@ -5,7 +5,7 @@ import org.cratedb.sql.parser.StandardException;\n import java.util.HashMap;\n import java.util.Map;\n \n-public class IndexProperties extends QueryTreeNode{\n+public class IndexProperties extends QueryTreeNode {\n     public static final String ANALYZER_PROPERTY = \"analyzer\";\n \n     private final Map<String, ValueNode> keyValues = new HashMap<>();\ndiff --git a/sql/src/main/java/org/cratedb/sql/parser/parser/OrderedColumnList.java b/sql/src/main/java/org/cratedb/sql/parser/parser/OrderedColumnList.java\nindex ac0b8cdb81..17ced98890 100644\n--- a/sql/src/main/java/org/cratedb/sql/parser/parser/OrderedColumnList.java\n+++ b/sql/src/main/java/org/cratedb/sql/parser/parser/OrderedColumnList.java\n@@ -43,8 +43,7 @@ package org.cratedb.sql.parser.parser;\n  * List of OrderedColumns\n  *\n  */\n-public abstract class\n-        OrderedColumnList<N extends OrderedColumn>\n+public abstract class OrderedColumnList<N extends OrderedColumn> \n     extends QueryTreeNodeList<N>\n {\n }\ndiff --git a/sql/src/main/javacc/org/cratedb/sql/parser/parser/SQLGrammar.jj b/sql/src/main/javacc/org/cratedb/sql/parser/parser/SQLGrammar.jj\nindex 88c389bf7d..e2e115266f 100644\n--- a/sql/src/main/javacc/org/cratedb/sql/parser/parser/SQLGrammar.jj\n+++ b/sql/src/main/javacc/org/cratedb/sql/parser/parser/SQLGrammar.jj\n@@ -3171,8 +3171,6 @@ createStatements() throws StandardException :\n     statementNode = udtDefinition(createOrReplace)\n |\n     statementNode = indexDefinition()\n-|\n-    statementNode = analyzerDefinition()\n )\n     {\n         return statementNode;\n@@ -10616,7 +10614,8 @@ indexDefinition() throws StandardException :\n     indexName = qualifiedName() \n     <ON> tableName = qualifiedName()\n     <USING>\n-    indexMethod = indexMethod() <LEFT_PAREN>\n+    indexMethod = indexMethod()\n+    <LEFT_PAREN>\n        indexItemList(indexColumnList = (IndexColumnList)nodeFactory.getNode(NodeTypes.INDEX_COLUMN_LIST, parserContext))\n     <RIGHT_PAREN>\n     [\n@@ -10715,17 +10714,6 @@ indexProperty(IndexProperties indexProperties) throws StandardException :\n     }\n }\n \n-StatementNode\n-analyzerDefinition() throws StandardException :\n-{}\n-{\n-    <ANALYZER>\n-    {\n-        return null;\n-    }\n-\n-}\n-\n /**\n     CREATE PROCEDURE\n \ndiff --git a/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-5.expected b/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-5.expected\nnew file mode 100644\nindex 0000000000..887ba0c3d1\n--- /dev/null\n+++ b/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-5.expected\n@@ -0,0 +1,25 @@\n+org.cratedb.sql.parser.parser.CreateIndexNode@51827002\n+name: i1\n+statementType: CREATE INDEX\n+unique: false\n+indexName: i1\n+tableName: t1\n+indexMethod: fulltext\n+indexColumns: \n+indexProperties: {analyzer=value: german\n+type: CHAR(6) NOT NULL\n+}\n+existenceCheck: NO_CONDITION\n+\t\n+\torg.cratedb.sql.parser.parser.IndexColumnList@4a87bd1c\n+\n+\t[0]:\t\n+\torg.cratedb.sql.parser.parser.IndexColumn@15909f7e\n+\tcolumnName: c1\n+\ttableName: null\n+\tascending\n+\t[1]:\t\n+\torg.cratedb.sql.parser.parser.IndexColumn@49d71441\n+\tcolumnName: c2\n+\ttableName: null\n+\tascending\ndiff --git a/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-5.sql b/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-5.sql\nnew file mode 100644\nindex 0000000000..c2950c6594\n--- /dev/null\n+++ b/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-5.sql\n@@ -0,0 +1 @@\n+CREATE INDEX i1 ON t1 USING fulltext(\"c1\", c2) with (analyzer='german')\n\\ No newline at end of file\ndiff --git a/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-6.expected b/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-6.expected\nindex 887ba0c3d1..5c3503a59b 100644\n--- a/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-6.expected\n+++ b/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-6.expected\n@@ -1,25 +1,20 @@\n-org.cratedb.sql.parser.parser.CreateIndexNode@51827002\n-name: i1\n+org.cratedb.sql.parser.parser.CreateIndexNode@301e2f11\n+name: myindex\n statementType: CREATE INDEX\n unique: false\n-indexName: i1\n-tableName: t1\n+indexName: myindex\n+tableName: mytable\n indexMethod: fulltext\n indexColumns: \n-indexProperties: {analyzer=value: german\n-type: CHAR(6) NOT NULL\n+indexProperties: {analyzer=value: myanalyzer\n+type: CHAR(10) NOT NULL\n }\n existenceCheck: NO_CONDITION\n \t\n-\torg.cratedb.sql.parser.parser.IndexColumnList@4a87bd1c\n+\torg.cratedb.sql.parser.parser.IndexColumnList@da41dc5\n \n \t[0]:\t\n-\torg.cratedb.sql.parser.parser.IndexColumn@15909f7e\n-\tcolumnName: c1\n-\ttableName: null\n-\tascending\n-\t[1]:\t\n-\torg.cratedb.sql.parser.parser.IndexColumn@49d71441\n-\tcolumnName: c2\n-\ttableName: null\n+\torg.cratedb.sql.parser.parser.IndexColumn@119e7782\n+\tcolumnName: mycolumn\n+\ttableName: mytable\n \tascending\ndiff --git a/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-6.sql b/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-6.sql\nindex c2950c6594..aa96dd936d 100644\n--- a/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-6.sql\n+++ b/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-6.sql\n@@ -1 +1 @@\n-CREATE INDEX i1 ON t1 USING fulltext(\"c1\", c2) with (analyzer='german')\n\\ No newline at end of file\n+create index myIndex on myTable using fulltext(myTable.myColumn) with (analyzer='myanalyzer')\n\\ No newline at end of file\ndiff --git a/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-7.expected b/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-7.expected\ndeleted file mode 100644\nindex 5c3503a59b..0000000000\n--- a/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-7.expected\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-org.cratedb.sql.parser.parser.CreateIndexNode@301e2f11\n-name: myindex\n-statementType: CREATE INDEX\n-unique: false\n-indexName: myindex\n-tableName: mytable\n-indexMethod: fulltext\n-indexColumns: \n-indexProperties: {analyzer=value: myanalyzer\n-type: CHAR(10) NOT NULL\n-}\n-existenceCheck: NO_CONDITION\n-\t\n-\torg.cratedb.sql.parser.parser.IndexColumnList@da41dc5\n-\n-\t[0]:\t\n-\torg.cratedb.sql.parser.parser.IndexColumn@119e7782\n-\tcolumnName: mycolumn\n-\ttableName: mytable\n-\tascending\ndiff --git a/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-7.sql b/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-7.sql\ndeleted file mode 100644\nindex aa96dd936d..0000000000\n--- a/sql/src/test/resources/org/cratedb/sql/parser/parser/create-index-7.sql\n+++ /dev/null\n@@ -1 +0,0 @@\n-create index myIndex on myTable using fulltext(myTable.myColumn) with (analyzer='myanalyzer')\n\\ No newline at end of file",
    "Remove daemon - killing shutdown hooks in testing .": "diff --git a/titan-test/src/main/java/com/thinkaurelius/titan/DaemonRunner.java b/titan-test/src/main/java/com/thinkaurelius/titan/DaemonRunner.java\nindex d49aeb0e5..334ce011f 100644\n--- a/titan-test/src/main/java/com/thinkaurelius/titan/DaemonRunner.java\n+++ b/titan-test/src/main/java/com/thinkaurelius/titan/DaemonRunner.java\n@@ -94,6 +94,7 @@ public abstract class DaemonRunner<S> {\n         }\n \n         if (null != killerHook) {\n+            Runtime.getRuntime().removeShutdownHook(killerHook);\n             killerHook = null;\n             log.debug(\"Unregistered killer hook: {}\", killerHook);\n         }",
    "Adding quantity and item_details fields": "diff --git a/invoice/src/main/java/org/killbill/billing/invoice/dao/InvoiceItemModelDao.java b/invoice/src/main/java/org/killbill/billing/invoice/dao/InvoiceItemModelDao.java\nindex e814a69d04..1f8e56a3df 100644\n--- a/invoice/src/main/java/org/killbill/billing/invoice/dao/InvoiceItemModelDao.java\n+++ b/invoice/src/main/java/org/killbill/billing/invoice/dao/InvoiceItemModelDao.java\n@@ -47,13 +47,15 @@ public class InvoiceItemModelDao extends EntityModelDaoBase implements EntityMod\n     private BigDecimal rate;\n     private Currency currency;\n     private UUID linkedItemId;\n+    private Integer quantity;\n+    private String itemDetails;\n \n     public InvoiceItemModelDao() { /* For the DAO mapper */ }\n \n     public InvoiceItemModelDao(final UUID id, final DateTime createdDate, final InvoiceItemType type, final UUID invoiceId, final UUID accountId,\n                                final UUID childAccountId, final UUID bundleId, final UUID subscriptionId, final String description, final String planName,\n                                final String phaseName, final String usageName, final LocalDate startDate, final LocalDate endDate, final BigDecimal amount,\n-                               final BigDecimal rate, final Currency currency, final UUID linkedItemId) {\n+                               final BigDecimal rate, final Currency currency, final UUID linkedItemId, final Integer quantity, final String itemDetails) {\n         super(id, createdDate, createdDate);\n         this.type = type;\n         this.invoiceId = invoiceId;\n@@ -71,6 +73,24 @@ public class InvoiceItemModelDao extends EntityModelDaoBase implements EntityMod\n         this.rate = rate;\n         this.currency = currency;\n         this.linkedItemId = linkedItemId;\n+        this.quantity = quantity;\n+        this.itemDetails = itemDetails;\n+    }\n+    public InvoiceItemModelDao(final UUID id, final DateTime createdDate, final InvoiceItemType type, final UUID invoiceId, final UUID accountId,\n+                               final UUID childAccountId, final UUID bundleId, final UUID subscriptionId, final String description, final String planName,\n+                               final String phaseName, final String usageName, final LocalDate startDate, final LocalDate endDate, final BigDecimal amount,\n+                               final BigDecimal rate, final Currency currency, final UUID linkedItemId) {\n+        this(id, createdDate, type, invoiceId, accountId, childAccountId, bundleId, subscriptionId, description, planName, phaseName, usageName,\n+             startDate, endDate, amount, rate, currency, linkedItemId, null, null);\n+\n+    }\n+\n+    public InvoiceItemModelDao(final DateTime createdDate, final InvoiceItemType type, final UUID invoiceId, final UUID accountId,\n+                               final UUID bundleId, final UUID subscriptionId, final String description, final String planName,\n+                               final String phaseName, final String usageName, final LocalDate startDate, final LocalDate endDate, final BigDecimal amount,\n+                               final BigDecimal rate, final Currency currency, final UUID linkedItemId, final Integer quantity, final String itemDetails) {\n+        this(UUIDs.randomUUID(), createdDate, type, invoiceId, accountId, null, bundleId, subscriptionId, description, planName, phaseName, usageName,\n+             startDate, endDate, amount, rate, currency, linkedItemId, quantity, itemDetails);\n     }\n \n     public InvoiceItemModelDao(final DateTime createdDate, final InvoiceItemType type, final UUID invoiceId, final UUID accountId,\n@@ -78,13 +98,13 @@ public class InvoiceItemModelDao extends EntityModelDaoBase implements EntityMod\n                                final String phaseName, final String usageName, final LocalDate startDate, final LocalDate endDate, final BigDecimal amount,\n                                final BigDecimal rate, final Currency currency, final UUID linkedItemId) {\n         this(UUIDs.randomUUID(), createdDate, type, invoiceId, accountId, null, bundleId, subscriptionId, description, planName, phaseName, usageName,\n-             startDate, endDate, amount, rate, currency, linkedItemId);\n+             startDate, endDate, amount, rate, currency, linkedItemId, null, null);\n     }\n \n     public InvoiceItemModelDao(final InvoiceItem invoiceItem) {\n         this(invoiceItem.getId(), invoiceItem.getCreatedDate(), invoiceItem.getInvoiceItemType(), invoiceItem.getInvoiceId(), invoiceItem.getAccountId(), invoiceItem.getChildAccountId(), invoiceItem.getBundleId(),\n              invoiceItem.getSubscriptionId(), invoiceItem.getDescription(), invoiceItem.getPlanName(), invoiceItem.getPhaseName(), invoiceItem.getUsageName(), invoiceItem.getStartDate(), invoiceItem.getEndDate(),\n-             invoiceItem.getAmount(), invoiceItem.getRate(), invoiceItem.getCurrency(), invoiceItem.getLinkedItemId());\n+             invoiceItem.getAmount(), invoiceItem.getRate(), invoiceItem.getCurrency(), invoiceItem.getLinkedItemId(), invoiceItem.getQuantity(), invoiceItem.getItemDetails());\n     }\n \n     /*\n@@ -159,6 +179,10 @@ public class InvoiceItemModelDao extends EntityModelDaoBase implements EntityMod\n         return linkedItemId;\n     }\n \n+    public Integer getQuantity() { return quantity; }\n+\n+    public String getItemDetails() { return itemDetails; }\n+\n     public void setType(final InvoiceItemType type) {\n         this.type = type;\n     }\n@@ -223,6 +247,10 @@ public class InvoiceItemModelDao extends EntityModelDaoBase implements EntityMod\n         this.linkedItemId = linkedItemId;\n     }\n \n+    public void setQuantity(final Integer quantity) { this.quantity = quantity; }\n+\n+    public void setItemDetails(final String itemDetails) { this.itemDetails = itemDetails; }\n+\n     @Override\n     public String toString() {\n         final StringBuilder sb = new StringBuilder(\"InvoiceItemModelDao{\");\n@@ -242,6 +270,8 @@ public class InvoiceItemModelDao extends EntityModelDaoBase implements EntityMod\n         sb.append(\", rate=\").append(rate);\n         sb.append(\", currency=\").append(currency);\n         sb.append(\", linkedItemId=\").append(linkedItemId);\n+        sb.append(\", quantity=\").append(quantity);\n+        sb.append(\", itemDetails=\").append(itemDetails);\n         sb.append('}');\n         return sb.toString();\n     }\n@@ -308,6 +338,12 @@ public class InvoiceItemModelDao extends EntityModelDaoBase implements EntityMod\n         if (type != that.type) {\n             return false;\n         }\n+        if (quantity != null ? !quantity.equals(that.quantity) : that.quantity != null) {\n+            return false;\n+        }\n+        if (itemDetails != null ? !itemDetails.equals(that.itemDetails) : that.itemDetails != null) {\n+            return false;\n+        }\n \n         return true;\n     }\n@@ -331,6 +367,8 @@ public class InvoiceItemModelDao extends EntityModelDaoBase implements EntityMod\n         result = 31 * result + (rate != null ? rate.hashCode() : 0);\n         result = 31 * result + (currency != null ? currency.hashCode() : 0);\n         result = 31 * result + (linkedItemId != null ? linkedItemId.hashCode() : 0);\n+        result = 31 * result + (quantity != null ? quantity.hashCode() : 0);\n+        result = 31 * result + (itemDetails != null ? itemDetails.hashCode() : 0);\n         return result;\n     }\n \ndiff --git a/invoice/src/main/java/org/killbill/billing/invoice/model/InvoiceItemBase.java b/invoice/src/main/java/org/killbill/billing/invoice/model/InvoiceItemBase.java\nindex 0e6ea008f8..329d2f101c 100644\n--- a/invoice/src/main/java/org/killbill/billing/invoice/model/InvoiceItemBase.java\n+++ b/invoice/src/main/java/org/killbill/billing/invoice/model/InvoiceItemBase.java\n@@ -53,23 +53,40 @@ public abstract class InvoiceItemBase extends EntityBase implements InvoiceItem\n     /* RepairAdjInvoiceItem */\n     protected final UUID linkedItemId;\n \n+    /* Usage details */\n+    protected final Integer quantity;\n+    protected final String itemDetails;\n \n     public InvoiceItemBase(final UUID id, @Nullable final DateTime createdDate, final UUID invoiceId, final UUID accountId, @Nullable final UUID bundleId,\n                            @Nullable final UUID subscriptionId, @Nullable final String description,\n                            final LocalDate startDate, final LocalDate endDate, final BigDecimal amount, final BigDecimal rate, final Currency currency, final UUID reversedItemId) {\n-        this(id, createdDate, invoiceId, accountId, null, bundleId, subscriptionId, description, startDate, endDate, amount, rate, currency, reversedItemId);\n+        this(id, createdDate, invoiceId, accountId, null, bundleId, subscriptionId, description, startDate, endDate, amount, rate, currency, reversedItemId, null, null);\n+    }\n+\n+    public InvoiceItemBase(final UUID id, @Nullable final DateTime createdDate, final UUID invoiceId, final UUID accountId, @Nullable final UUID bundleId,\n+                           @Nullable final UUID subscriptionId, @Nullable final String description,\n+                           final LocalDate startDate, final LocalDate endDate, final BigDecimal amount, final BigDecimal rate, final Currency currency, final UUID reversedItemId,\n+                           @Nullable final Integer quantity, @Nullable final String itemDetails) {\n+        this(id, createdDate, invoiceId, accountId, null, bundleId, subscriptionId, description, startDate, endDate, amount, rate, currency, reversedItemId, quantity, itemDetails);\n     }\n \n     // For parent invoices\n     public InvoiceItemBase(final UUID id, @Nullable final DateTime createdDate, final UUID invoiceId, final UUID accountId, final UUID childAccountId,\n                              final BigDecimal amount, final Currency currency, final String description) {\n-        this(id, createdDate, invoiceId, accountId, childAccountId, null, null, description, null, null, amount, null, currency, null);\n+        this(id, createdDate, invoiceId, accountId, childAccountId, null, null, description, null, null, amount, null, currency, null, null, null);\n+    }\n+\n+    public InvoiceItemBase(final UUID id, @Nullable final DateTime createdDate, final UUID invoiceId, final UUID accountId, @Nullable final UUID childAccountId, @Nullable final UUID bundleId,\n+                            @Nullable final UUID subscriptionId, @Nullable final String description,\n+                            @Nullable final LocalDate startDate, final LocalDate endDate, final BigDecimal amount, final BigDecimal rate, final Currency currency,\n+                            final UUID reversedItemId){\n+        this(id, createdDate, invoiceId, accountId, childAccountId, bundleId, subscriptionId, description, startDate, endDate, amount, rate, currency, reversedItemId, null, null);\n     }\n \n     private InvoiceItemBase(final UUID id, @Nullable final DateTime createdDate, final UUID invoiceId, final UUID accountId, @Nullable final UUID childAccountId, @Nullable final UUID bundleId,\n                             @Nullable final UUID subscriptionId, @Nullable final String description,\n                             @Nullable final LocalDate startDate, final LocalDate endDate, final BigDecimal amount, final BigDecimal rate, final Currency currency,\n-                            final UUID reversedItemId) {\n+                            final UUID reversedItemId,@Nullable final Integer quantity,@Nullable final String itemDetails) {\n         super(id, createdDate, createdDate);\n         this.invoiceId = invoiceId;\n         this.accountId = accountId;\n@@ -83,6 +100,8 @@ public abstract class InvoiceItemBase extends EntityBase implements InvoiceItem\n         this.currency = currency;\n         this.rate = rate;\n         this.linkedItemId = reversedItemId;\n+        this.quantity = quantity;\n+        this.itemDetails = itemDetails;\n     }\n \n     @Override\n@@ -172,6 +191,11 @@ public abstract class InvoiceItemBase extends EntityBase implements InvoiceItem\n         return null;\n     }\n \n+    @Override\n+    public Integer getQuantity() { return quantity; }\n+\n+    @Override\n+    public String getItemDetails() { return itemDetails; }\n \n     @Override\n     public boolean equals(final Object o) {\ndiff --git a/invoice/src/main/java/org/killbill/billing/invoice/model/InvoiceItemCatalogBase.java b/invoice/src/main/java/org/killbill/billing/invoice/model/InvoiceItemCatalogBase.java\nindex 6ad9068de0..9ad25ce197 100644\n--- a/invoice/src/main/java/org/killbill/billing/invoice/model/InvoiceItemCatalogBase.java\n+++ b/invoice/src/main/java/org/killbill/billing/invoice/model/InvoiceItemCatalogBase.java\n@@ -40,15 +40,30 @@ public abstract class InvoiceItemCatalogBase extends InvoiceItemBase implements\n     public InvoiceItemCatalogBase(final UUID id, @Nullable final DateTime createdDate, final UUID invoiceId, final UUID accountId, @Nullable final UUID bundleId,\n                                   @Nullable final UUID subscriptionId, @Nullable final String description, @Nullable final String planName, @Nullable final String phaseName, @Nullable final String usageName,\n                                   final LocalDate startDate, final LocalDate endDate, final BigDecimal amount, final BigDecimal rate, final Currency currency, @Nullable final UUID linkedItemId) {\n-        this(id, createdDate, invoiceId, accountId, bundleId, subscriptionId, description, planName, phaseName, usageName, null, null, null, startDate, endDate, amount, rate, currency, linkedItemId);\n+        this(id, createdDate, invoiceId, accountId, bundleId, subscriptionId, description, planName, phaseName, usageName, null, null, null, startDate, endDate, amount, rate, currency, linkedItemId, null, null);\n     }\n \n+    public InvoiceItemCatalogBase(final UUID id, @Nullable final DateTime createdDate, final UUID invoiceId, final UUID accountId, @Nullable final UUID bundleId,\n+                                  @Nullable final UUID subscriptionId, @Nullable final String description, @Nullable final String planName, @Nullable final String phaseName, @Nullable final String usageName,\n+                                  final LocalDate startDate, final LocalDate endDate, final BigDecimal amount, final BigDecimal rate, final Currency currency, @Nullable final UUID linkedItemId,\n+                                  @Nullable final Integer quantity, @Nullable final String itemDetails) {\n+        this(id, createdDate, invoiceId, accountId, bundleId, subscriptionId, description, planName, phaseName, usageName, null, null, null, startDate, endDate, amount, rate, currency, linkedItemId, quantity, itemDetails);\n+    }\n \n     public InvoiceItemCatalogBase(final UUID id, @Nullable final DateTime createdDate, final UUID invoiceId, final UUID accountId, @Nullable final UUID bundleId,\n                                   @Nullable final UUID subscriptionId, @Nullable final String description, @Nullable final String planName, @Nullable final String phaseName, @Nullable final String usageName,\n                                   @Nullable final String prettyPlanName, @Nullable final String prettyPhaseName, @Nullable final String prettyUsageName,\n                                   final LocalDate startDate, final LocalDate endDate, final BigDecimal amount, final BigDecimal rate, final Currency currency, @Nullable final UUID linkedItemId) {\n-        super(id, createdDate, invoiceId, accountId, bundleId, subscriptionId, description, startDate, endDate, amount, rate, currency, linkedItemId);\n+        this(id, createdDate, invoiceId, accountId, bundleId, subscriptionId, description, planName, phaseName, usageName, prettyPlanName, prettyPhaseName, prettyUsageName, startDate, endDate, amount, rate, currency, linkedItemId, null, null);\n+    }\n+\n+\n+    public InvoiceItemCatalogBase(final UUID id, @Nullable final DateTime createdDate, final UUID invoiceId, final UUID accountId, @Nullable final UUID bundleId,\n+                                  @Nullable final UUID subscriptionId, @Nullable final String description, @Nullable final String planName, @Nullable final String phaseName, @Nullable final String usageName,\n+                                  @Nullable final String prettyPlanName, @Nullable final String prettyPhaseName, @Nullable final String prettyUsageName,\n+                                  final LocalDate startDate, final LocalDate endDate, final BigDecimal amount, final BigDecimal rate, final Currency currency, @Nullable final UUID linkedItemId,\n+                                  @Nullable final Integer quantity, @Nullable final String itemDetails) {\n+        super(id, createdDate, invoiceId, accountId, bundleId, subscriptionId, description, startDate, endDate, amount, rate, currency, linkedItemId, quantity, itemDetails);\n         this.planName = planName;\n         this.phaseName = phaseName;\n         this.usageName = usageName;\ndiff --git a/invoice/src/main/java/org/killbill/billing/invoice/model/InvoiceItemFactory.java b/invoice/src/main/java/org/killbill/billing/invoice/model/InvoiceItemFactory.java\nindex e8eef207b1..b93a20fde0 100644\n--- a/invoice/src/main/java/org/killbill/billing/invoice/model/InvoiceItemFactory.java\n+++ b/invoice/src/main/java/org/killbill/billing/invoice/model/InvoiceItemFactory.java\n@@ -69,6 +69,8 @@ public class InvoiceItemFactory {\n         final BigDecimal rate = invoiceItemModelDao.getRate();\n         final Currency currency = invoiceItemModelDao.getCurrency();\n         final UUID linkedItemId = invoiceItemModelDao.getLinkedItemId();\n+        final Integer quantity = invoiceItemModelDao.getQuantity();\n+        final String itemDetails = invoiceItemModelDao.getItemDetails();\n \n         final InvoiceItemType type = invoiceItemModelDao.getType();\n \n@@ -101,7 +103,7 @@ public class InvoiceItemFactory {\n                 item = new ItemAdjInvoiceItem(id, createdDate, invoiceId, accountId, startDate, description, amount, currency, linkedItemId);\n                 break;\n             case USAGE:\n-                item = new UsageInvoiceItem(id, createdDate, invoiceId, accountId, bundleId, subscriptionId, planName, phaseName, usageName, prettyPlanName, prettyPlanPhaseName, prettyUsageName, startDate, endDate, description, amount, currency);\n+                item = new UsageInvoiceItem(id, createdDate, invoiceId, accountId, bundleId, subscriptionId, planName, phaseName, usageName, prettyPlanName, prettyPlanPhaseName, prettyUsageName, startDate, endDate, description, amount, currency, quantity, itemDetails);\n                 break;\n             case TAX:\n                 item = new TaxInvoiceItem(id, createdDate, invoiceId, accountId, bundleId, subscriptionId, planName, phaseName, usageName, prettyPlanName, prettyPlanPhaseName, prettyUsageName, startDate, description, amount, currency, linkedItemId);\ndiff --git a/invoice/src/main/java/org/killbill/billing/invoice/model/UsageInvoiceItem.java b/invoice/src/main/java/org/killbill/billing/invoice/model/UsageInvoiceItem.java\nindex 3f66f696f8..0af4a8ec74 100644\n--- a/invoice/src/main/java/org/killbill/billing/invoice/model/UsageInvoiceItem.java\n+++ b/invoice/src/main/java/org/killbill/billing/invoice/model/UsageInvoiceItem.java\n@@ -35,14 +35,21 @@ public class UsageInvoiceItem extends InvoiceItemCatalogBase {\n     public UsageInvoiceItem(final UUID invoiceId, final UUID accountId, @Nullable final UUID bundleId, @Nullable final UUID subscriptionId,\n                             final String planName, final String phaseName, final String usageName,\n                             final LocalDate startDate, final LocalDate endDate, final BigDecimal amount, final Currency currency) {\n-        this(UUIDs.randomUUID(), null, invoiceId, accountId, bundleId, subscriptionId, planName, phaseName, usageName, null, null, null, startDate, endDate, null, amount, currency);\n+        this(UUIDs.randomUUID(), null, invoiceId, accountId, bundleId, subscriptionId, planName, phaseName, usageName, null, null, null, startDate, endDate, null, amount, currency, null, null);\n+    }\n+\n+    public UsageInvoiceItem(final UUID invoiceId, final UUID accountId, @Nullable final UUID bundleId, @Nullable final UUID subscriptionId,\n+                            final String planName, final String phaseName, final String usageName,\n+                            final LocalDate startDate, final LocalDate endDate, final BigDecimal amount, final Currency currency, @Nullable final Integer quantity, @Nullable final String itemDetails) {\n+        this(UUIDs.randomUUID(), null, invoiceId, accountId, bundleId, subscriptionId, planName, phaseName, usageName, null, null, null, startDate, endDate, null, amount, currency, quantity, itemDetails);\n     }\n \n     public UsageInvoiceItem(final UUID id, @Nullable final DateTime createdDate, final UUID invoiceId, final UUID accountId, final UUID bundleId,\n                             final UUID subscriptionId, final String planName, final String phaseName, final String usageName,\n                             final String prettyPlanName, final String prettyPhaseName, final String prettyUsageName,\n-                            final LocalDate startDate, final LocalDate endDate, @Nullable final String description, final BigDecimal amount, final Currency currency) {\n-        super(id, createdDate, invoiceId, accountId, bundleId, subscriptionId, description, planName, phaseName, usageName, prettyPlanName, prettyPhaseName, prettyUsageName, startDate, endDate, amount, null, currency, null);\n+                            final LocalDate startDate, final LocalDate endDate, @Nullable final String description, final BigDecimal amount, final Currency currency,\n+                            @Nullable final Integer quantity, @Nullable final String itemDetails) {\n+        super(id, createdDate, invoiceId, accountId, bundleId, subscriptionId, description, planName, phaseName, usageName, prettyPlanName, prettyPhaseName, prettyUsageName, startDate, endDate, amount, null, currency, null, quantity, itemDetails);\n     }\n \n     @Override\ndiff --git a/invoice/src/main/java/org/killbill/billing/invoice/template/formatters/DefaultInvoiceItemFormatter.java b/invoice/src/main/java/org/killbill/billing/invoice/template/formatters/DefaultInvoiceItemFormatter.java\nindex f59f5d8787..c411381d4b 100644\n--- a/invoice/src/main/java/org/killbill/billing/invoice/template/formatters/DefaultInvoiceItemFormatter.java\n+++ b/invoice/src/main/java/org/killbill/billing/invoice/template/formatters/DefaultInvoiceItemFormatter.java\n@@ -192,6 +192,12 @@ public class DefaultInvoiceItemFormatter implements InvoiceItemFormatter {\n         return null;\n     }\n \n+    @Override\n+    public Integer getQuantity() { return item.getQuantity(); }\n+\n+    @Override\n+    public String getItemDetails() { return item.getItemDetails(); }\n+\n     @Override\n     public boolean matches(final Object other) {\n         throw new UnsupportedOperationException();\ndiff --git a/invoice/src/main/resources/org/killbill/billing/invoice/dao/InvoiceItemSqlDao.sql.stg b/invoice/src/main/resources/org/killbill/billing/invoice/dao/InvoiceItemSqlDao.sql.stg\nindex c7596b429c..eccd1c5364 100644\n--- a/invoice/src/main/resources/org/killbill/billing/invoice/dao/InvoiceItemSqlDao.sql.stg\n+++ b/invoice/src/main/resources/org/killbill/billing/invoice/dao/InvoiceItemSqlDao.sql.stg\n@@ -19,6 +19,8 @@ tableFields(prefix) ::= <<\n , <prefix>rate\n , <prefix>currency\n , <prefix>linked_item_id\n+, <prefix>quantity\n+, <prefix>item_details\n , <prefix>created_by\n , <prefix>created_date\n >>\n@@ -40,6 +42,8 @@ tableValues() ::= <<\n , :rate\n , :currency\n , :linkedItemId\n+, :quantity\n+, :itemDetails\n , :createdBy\n , :createdDate\n >>\ndiff --git a/invoice/src/main/resources/org/killbill/billing/invoice/ddl.sql b/invoice/src/main/resources/org/killbill/billing/invoice/ddl.sql\nindex 52f4ee7b6f..f2bce3665c 100644\n--- a/invoice/src/main/resources/org/killbill/billing/invoice/ddl.sql\n+++ b/invoice/src/main/resources/org/killbill/billing/invoice/ddl.sql\n@@ -20,6 +20,8 @@ CREATE TABLE invoice_items (\n     rate numeric(15,9) NULL,\n     currency varchar(3) NOT NULL,\n     linked_item_id varchar(36),\n+    quantity int,\n+    item_details text,\n     created_by varchar(50) NOT NULL,\n     created_date datetime",
    "Tweak default minimization delay to 1 second": "diff --git a/library/src/uk/co/senab/actionbarpulltorefresh/library/PullToRefreshAttacher.java b/library/src/uk/co/senab/actionbarpulltorefresh/library/PullToRefreshAttacher.java\nindex 910731a..5d08b27 100644\n--- a/library/src/uk/co/senab/actionbarpulltorefresh/library/PullToRefreshAttacher.java\n+++ b/library/src/uk/co/senab/actionbarpulltorefresh/library/PullToRefreshAttacher.java\n@@ -42,7 +42,7 @@ public class PullToRefreshAttacher implements View.OnTouchListener {\n \tprivate static final int DEFAULT_HEADER_LAYOUT = R.layout.default_header;\n \tprivate static final float DEFAULT_REFRESH_SCROLL_DISTANCE = 0.5f;\n \tprivate static final boolean DEFAULT_REFRESH_ON_UP = false;\n-\tprivate static final int DEFAULT_REFRESH_MINIMIZED_DELAY = 3 * 1000;\n+\tprivate static final int DEFAULT_REFRESH_MINIMIZED_DELAY = 1 * 1000;\n \tprivate static final boolean DEFAULT_REFRESH_MINIMIZE = true;\n \n \tprivate static final boolean DEBUG = false;",
    "Add master transport action commits to es - backports . rst": "diff --git a/devs/docs/es-backports.rst b/devs/docs/es-backports.rst\nindex c977d04a54..c6dd8f9dda 100644\n--- a/devs/docs/es-backports.rst\n+++ b/devs/docs/es-backports.rst\n@@ -42,7 +42,8 @@ repository. For example::\n       server/src/main/java/org/elasticsearch/transport \\\n       server/src/main/java/org/elasticsearch/gateway \\\n       server/src/main/java/org/elasticsearch/action/admin/cluster/health \\\n-      server/src/main/java/org/elasticsearch/action/support/replication\n+      server/src/main/java/org/elasticsearch/action/support/replication \\\n+      server/src/main/java/org/elasticsearch/action/support/master\n \n \n Here ``4b16d50cd4b`` is the starting point, it shows any changes since then\n@@ -102,6 +103,7 @@ should be crossed out as well.\n - [ ] 8f8d2d1b4ba [DOCS] Fix dup word in ShardRouting hashcode method. (#63452)\n - [ ] 62857b49d1d Add support for missing value fetchers. (#63515)\n - [ ] 2d1bf0c79ef Dry up TransportMasterNodeAction Usage (#63524)\n+- [ ] 4e740c2e4a5 Dry up AcknowledgedResponse Handling (#63335)\n - [ ] dc5dbbbfe29 Flush translog writer before adding new operation (#63505)\n - [ ] 8c56bbc3e6e Add factory methods for common value fetchers. (#63438)\n - [ ] 80268f9bff6 TextSearchInfo should never get null analyzers (#63472)\n@@ -331,6 +333,7 @@ should be crossed out as well.\n - [ ] 6477924c262 Store parsed mapping settings in IndexSettings (#57492)\n - [ ] 4d6dc51c729 Header warning logging refactoring (#55941)\n - [ ] 2ef82cd7f95 Fix Local Translog Recovery not Updating Safe Commit in Edge Case (#57350)\n+- [ ] 9d07229879d Change cluster info actions to be able to resolve data streams. (#56878)\n - [ ] 99871b18d64 Catch InputCoercionException thrown by Jackson parser (#57287)\n - [ ] 86b64e4c39e Remove unused logic from FieldNamesFieldMapper. (#56834)\n - [ ] 579ce2f99cb Reestablish peer recovery after network errors (#55274)\n@@ -493,6 +496,7 @@ should be crossed out as well.\n - [ ] c117c0cf0a2 Password-protected Keystore Feature Branch PR (#51123)\n - [ ] 0c87892b3db Remove sync flush logic in Engine (#51450)\n - [ ] b034d1e2ef8 Remove translog retention policy (#51417)\n+- [ ] db480292eeb Fix TransportMasterNodeAction not Retrying NodeClosedException (#51325)\n - [ ] 80cacc617f2 Enable operation-based recoveries for old copies (#51380)\n - [ ] 5132715bc10 Do not wrap soft-deletes reader for segment stats (#51331)\n - [ ] 151148622cb Exclude nested documents in LuceneChangesSnapshot (#51279)\n@@ -505,6 +509,7 @@ should be crossed out as well.\n - [ ] 173c3bdac41 Introduce hidden indices (#50452)\n - [ ] 9bb7d21c0b0 Remove the AllFieldMapper from master (#51106)\n - [ ] 09b46c86463 Goodbye and thank you synced flush! (#50882)\n+- [ ] 0e0f900d181 Tweak formatter config for long generic lines (#50909)\n - [ ] 7cd4b73b098 Fix compilation for #50813\n - [ ] d94b81e8b0e Remove custom metadata tool (#50813)\n - [ ] e349c5eec09 Track Snapshot Version in RepositoryData (#50930)",
    "remove all sysout / syserr including the ones in comments": "diff --git a/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/DebuggerConnection.java b/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/DebuggerConnection.java\nindex ee575b4d3cd..e58bfc0a1ec 100644\n--- a/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/DebuggerConnection.java\n+++ b/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/DebuggerConnection.java\n@@ -123,7 +123,6 @@ public final class DebuggerConnection implements JDWPCommands {\n         public void run() {\n             while (!Thread.currentThread().isInterrupted()) {\n                 DebuggerCommand debuggerCommand = awaitNextCommand(); // blocking\n-                //System.out.println(\"got a \" + debuggerCommand.kind + \" command from debugger\");\n \n                 if (debuggerCommand != null) {\n                     Object thread = debuggerCommand.getThread();\ndiff --git a/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/JDWPDebuggerController.java b/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/JDWPDebuggerController.java\nindex 23556b0bebf..22a37d7023b 100644\n--- a/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/JDWPDebuggerController.java\n+++ b/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/JDWPDebuggerController.java\n@@ -376,7 +376,6 @@ public class JDWPDebuggerController {\n \n             boolean hit = false;\n             for (Breakpoint bp : event.getBreakpoints()) {\n-                //System.out.println(\"BP at suspension point: \" + bp.getLocationDescription());\n \n                 BreakpointInfo info = breakpointInfos.get(bp);\n                 suspendPolicy = info.getSuspendPolicy();\ndiff --git a/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/Packet.java b/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/Packet.java\nindex 5ca3585a7ba..4243e15fbf2 100644\n--- a/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/Packet.java\n+++ b/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/Packet.java\n@@ -140,51 +140,4 @@ public final class Packet {\n          */\n         return uID++;\n     }\n-\n-    public void dump(boolean sending) {\n-        String direction = sending ? \"Sending\" : \"Receiving\";\n-        if (sending) {\n-            System.out.println(direction + \" Command. id=\" + id +\n-                    \", length=\" + data.length +\n-                    \", commandSet=\" + cmdSet +\n-                    \", command=\" + cmd +\n-                    \", flags=\" + flags);\n-        } else {\n-            String type = (flags & Packet.Reply) != 0 ?\n-                    \"Reply\" : \"Event\";\n-            System.out.println(direction + \" \" + type + \". id=\" + id +\n-                    \", length=\" + data.length +\n-                    \", errorCode=\" + errorCode +\n-                    \", flags=\" + flags);\n-        }\n-\n-        StringBuffer line = new StringBuffer(80);\n-\n-        line.append(\"0000: \");\n-        if (data.length == 0) {\n-            line.append(\"no data in packet\");\n-        }\n-        for (int i = 0; i < data.length; i++) {\n-            if ((i > 0) && (i % 16 == 0)) {\n-                System.out.println(line.toString());\n-                line.setLength(0);\n-                line.append(String.valueOf(i));\n-                line.append(\": \");\n-                int len = line.length();\n-                for (int j = 0; j < 6 - len; j++) {\n-                    line.insert(0, '0');\n-                }\n-            }\n-            int val = 0xff & data[i];\n-            String str = Integer.toHexString(val);\n-            if (str.length() == 1) {\n-                line.append('0');\n-            }\n-            line.append(str);\n-            line.append(' ');\n-        }\n-        if (line.length() > 6) {\n-            System.out.println(line.toString());\n-        }\n-    }\n }\n\\ No newline at end of file\ndiff --git a/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/PacketStream.java b/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/PacketStream.java\nindex cb854268470..49244e8a180 100644\n--- a/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/PacketStream.java\n+++ b/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/PacketStream.java\n@@ -212,7 +212,6 @@ public final class PacketStream {\n         try {\n             ret = new String(packet.data, readPosition, len, \"UTF8\");\n         } catch(java.io.UnsupportedEncodingException e) {\n-            System.err.println(e);\n             ret = \"Conversion error!\";\n         }\n         readPosition += len;\ndiff --git a/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/RequestedJDWPEvents.java b/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/RequestedJDWPEvents.java\nindex f17e25faa42..e39c5a6c609 100644\n--- a/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/RequestedJDWPEvents.java\n+++ b/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/RequestedJDWPEvents.java\n@@ -301,7 +301,6 @@ public final class RequestedJDWPEvents {\n             if (kind == eventKind) {\n                 switch (eventKind) {\n                     case SINGLE_STEP:\n-                        //System.out.println(\"clear single step not implemented\");\n                         break;\n                     case METHOD_EXIT_WITH_RETURN_VALUE:\n                     case METHOD_ENTRY:\ndiff --git a/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/VMEventListenerImpl.java b/src/com.oracle.truffle.espresso.jdwp/src/com/oracle/truffle/espresso/jdwp/impl/VMEventListenerImpl.java\nindex",
    "Fix the issue that input clear hides input text": "diff --git a/server-core/src/main/java/io/onedev/server/web/behavior/inputassist/input-assist.css b/server-core/src/main/java/io/onedev/server/web/behavior/inputassist/input-assist.css\nindex 1a356ff01..c827b6ecd 100644\n--- a/server-core/src/main/java/io/onedev/server/web/behavior/inputassist/input-assist.css\n+++ b/server-core/src/main/java/io/onedev/server/web/behavior/inputassist/input-assist.css\n@@ -1,4 +1,4 @@\n-.input-assist {\n+.floating>.content>.input-assist {\n \tpadding: 8px;\n }\n .input-assist .suggestions {\ndiff --git a/server-core/src/main/java/io/onedev/server/web/page/base/base.css b/server-core/src/main/java/io/onedev/server/web/page/base/base.css\nindex 4e829723e..ce4a8c9ac 100644\n--- a/server-core/src/main/java/io/onedev/server/web/page/base/base.css\n+++ b/server-core/src/main/java/io/onedev/server/web/page/base/base.css\n@@ -480,15 +480,18 @@ table>tbody>tr>td.actions a:last-child {\n .clearable-wrapper input.clearable::-ms-clear {\r\n     display: none;\r\n }\r\n+.clearable-wrapper input.clearable {\r\n+\tpadding-right: 20px;\r\n+}\r\n a.input-clear {\r\n \tfont-family: sans-serif;\r\n \tdisplay: block;\r\n-\twidth: 24px; \r\n+\twidth: 12px; \r\n \theight: 24px;\r\n \tline-height: 24px;\r\n \tfont-size: 16px;\r\n \tposition: absolute;\r\n-\tright: 5px;\r\n+\tright: 6px;\r\n \ttop: 0; \r\n \tbottom: 0;\r\n \tmargin: auto;\r\ndiff --git a/server-core/src/main/java/io/onedev/server/web/page/base/base.js b/server-core/src/main/java/io/onedev/server/web/page/base/base.js\nindex 3b652e406..989b9dd60 100644\n--- a/server-core/src/main/java/io/onedev/server/web/page/base/base.js\n+++ b/server-core/src/main/java/io/onedev/server/web/page/base/base.js\n@@ -643,7 +643,7 @@ onedev.server = {\n \t\tfunction installClearer($container) {\n \t\t\t$container.find(\".clearable-wrapper\").each(function() {\n \t\t\t\tvar $wrapper = $(this);\n-                var $input = $wrapper.find(\"input[type=text]:visible, input:not([type]):visible, textarea:visible\");\n+                var $input = $wrapper.find(\"input[type=text], input:not([type])\");\n \t\t\t\tif (!$input.hasClass(\"clearable\")) {\n \t\t\t\t\t$input.addClass(\"clearable\");\n \t\t\t\t\tvar $clear = $(\"<a class='input-clear'>x</a>\");",
    "add tryFindBroadcastTableRuleByLogicTable test": "diff --git a/sharding-core/src/test/java/io/shardingsphere/core/rule/ShardingRuleTest.java b/sharding-core/src/test/java/io/shardingsphere/core/rule/ShardingRuleTest.java\nindex eca5da6efd4..c986d31310f 100644\n--- a/sharding-core/src/test/java/io/shardingsphere/core/rule/ShardingRuleTest.java\n+++ b/sharding-core/src/test/java/io/shardingsphere/core/rule/ShardingRuleTest.java\n@@ -18,6 +18,7 @@\n package io.shardingsphere.core.rule;\n \n import io.shardingsphere.api.algorithm.fixture.TestPreciseShardingAlgorithm;\n+import io.shardingsphere.api.config.BroadcastTableRuleConfiguration;\n import io.shardingsphere.api.config.ShardingRuleConfiguration;\n import io.shardingsphere.api.config.TableRuleConfiguration;\n import io.shardingsphere.api.config.strategy.NoneShardingStrategyConfiguration;\n@@ -105,6 +106,16 @@ public final class ShardingRuleTest {\n         assertFalse(actual.tryFindTableRuleByLogicTable(\"null\").isPresent());\n     }\n     \n+    @Test\n+    public void assertFindBroadcastTableRule() {\n+        ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n+        BroadcastTableRuleConfiguration broadcastTableRuleConfiguration = createBoradcastTableRuleConfig();\n+        shardingRuleConfig.getBroadcastTableRuleConfigs().add(broadcastTableRuleConfiguration);\n+        ShardingRule actual = new ShardingRule(shardingRuleConfig, createDataSourceNames());\n+        assertTrue(actual.tryFindBroadcastTableRuleByLogicTable(\"broadcast_logic_Table\").isPresent());\n+        assertFalse(actual.tryFindBroadcastTableRuleByLogicTable(\"null\").isPresent());\n+    }\n+    \n     @Test\n     public void assertGetDatabaseShardingStrategyFromTableRule() {\n         ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n@@ -411,6 +422,19 @@ public final class ShardingRuleTest {\n         return result;\n     }\n     \n+    private BroadcastTableRuleConfiguration createBoradcastTableRuleConfig() {\n+        BroadcastTableRuleConfiguration result = new BroadcastTableRuleConfiguration();\n+        result.setLogicTable(\"BROADCAST_LOGIC_TABLE\");\n+        return result;\n+    }\n+    \n+    private TableRuleConfiguration createSubTableRuleConfig() {\n+        TableRuleConfiguration result = new TableRuleConfiguration();\n+        result.setLogicTable(\"SUB_LOGIC_TABLE\");\n+        result.setActualDataNodes(\"ds${0..1}.sub_table_${0..2}\");\n+        return result;\n+    }\n+    \n     private TableRuleConfiguration createTableRuleConfigWithLogicIndex() {\n         TableRuleConfiguration result = new TableRuleConfiguration();\n         result.setLogicTable(\"LOGIC_TABLE\");\n@@ -435,13 +459,6 @@ public final class ShardingRuleTest {\n         return result;\n     }\n     \n-    private TableRuleConfiguration createSubTableRuleConfig() {\n-        TableRuleConfiguration result = new TableRuleConfiguration();\n-        result.setLogicTable(\"SUB_LOGIC_TABLE\");\n-        result.setActualDataNodes(\"ds${0..1}.sub_table_${0..2}\");\n-        return result;\n-    }\n-    \n     private TableRuleConfiguration createTableRuleConfigWithAllStrategies() {\n         TableRuleConfiguration result = new TableRuleConfiguration();\n         result.setLogicTable(\"LOGIC_TABLE\");",
    "Build fix ( debug feature ) .": "diff --git a/pom.xml b/pom.xml\nindex 572c344011..0bb54c565f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -66,6 +66,7 @@\n         <module>plugins/org.jkiss.dbeaver.test</module>\n \n         <module>features/org.jkiss.dbeaver.core.feature</module>\n+        <module>features/org.jkiss.dbeaver.debug.feature</module>\n         <module>features/org.jkiss.dbeaver.ext.db2.feature</module>\n         <module>features/org.jkiss.dbeaver.ext.generic.feature</module>\n         <module>features/org.jkiss.dbeaver.ext.mysql.feature</module>",
    "Added tag jdk8u152 - b13 for changeset d7ce4d31c676": "diff --git a/jaxp/.hgtags b/jaxp/.hgtags\nindex a300149d20..80868b1be6 100644\n--- a/jaxp/.hgtags\n+++ b/jaxp/.hgtags\n@@ -749,3 +749,4 @@ d36b0186befa153f155302f394797ddcacbcaf70 jdk8u152-b08\n 9a4e0d4984a41d7413fbd4cbf12b53a3631a1132 jdk8u152-b10\n 910f70805a76d62f11aaac6fb81a249756c43571 jdk8u152-b11\n 228115c9db82ccc7955ff1bfea8c1f11d90d7f6f jdk8u152-b12\n+1005fdca8d86e3fcbaf0f76d811a7073469c5da4 jdk8u152-b13",
    "Removes a System . out debug print": "diff --git a/src/net/java/sip/communicator/impl/gui/utils/NotificationManager.java b/src/net/java/sip/communicator/impl/gui/utils/NotificationManager.java\nindex 35ca9a499..2b1709c3a 100644\n--- a/src/net/java/sip/communicator/impl/gui/utils/NotificationManager.java\n+++ b/src/net/java/sip/communicator/impl/gui/utils/NotificationManager.java\n@@ -40,8 +40,6 @@ public static void registerGuiNotifications()\n                 null,\n                 null);\n \n-        System.out.println(\"INCOMING MESSAGE===========\" + SoundProperties.INCOMING_MESSAGE);\n-\n         notificationService.registerDefaultNotificationForEvent(\n                 INCOMING_MESSAGE,\n                 NotificationService.ACTION_SOUND,",
    "Replace usages of getLastNonConfigurationInstance ( ) .": "diff --git a/k9mail/src/main/java/com/fsck/k9/activity/Accounts.java b/k9mail/src/main/java/com/fsck/k9/activity/Accounts.java\nindex 2deab0386..46c2babf6 100644\n--- a/k9mail/src/main/java/com/fsck/k9/activity/Accounts.java\n+++ b/k9mail/src/main/java/com/fsck/k9/activity/Accounts.java\n@@ -434,7 +434,7 @@ public class Accounts extends K9ListActivity implements OnItemClickListener {\n         handler.setViewTitle();\n \n         // Handle activity restarts because of a configuration change (e.g. rotating the screen)\n-        nonConfigurationInstance = (NonConfigurationInstance) getLastNonConfigurationInstance();\n+        nonConfigurationInstance = (NonConfigurationInstance) getLastCustomNonConfigurationInstance();\n         if (nonConfigurationInstance != null) {\n             nonConfigurationInstance.restore(this);\n         }\ndiff --git a/k9mail/src/main/java/com/fsck/k9/activity/FolderList.java b/k9mail/src/main/java/com/fsck/k9/activity/FolderList.java\nindex ced0d32f0..f36508863 100644\n--- a/k9mail/src/main/java/com/fsck/k9/activity/FolderList.java\n+++ b/k9mail/src/main/java/com/fsck/k9/activity/FolderList.java\n@@ -351,7 +351,7 @@ public class FolderList extends K9ListActivity {\n \n     @SuppressWarnings(\"unchecked\")\n     private void restorePreviousData() {\n-        final Object previousData = getLastNonConfigurationInstance();\n+        final Object previousData = getLastCustomNonConfigurationInstance();\n \n         if (previousData != null) {\n             adapter.mFolders = (ArrayList<FolderInfoHolder>) previousData;\ndiff --git a/k9mail/src/main/java/com/fsck/k9/activity/MessageCompose.java b/k9mail/src/main/java/com/fsck/k9/activity/MessageCompose.java\nindex 50dfd21b7..296df8df9 100644\n--- a/k9mail/src/main/java/com/fsck/k9/activity/MessageCompose.java\n+++ b/k9mail/src/main/java/com/fsck/k9/activity/MessageCompose.java\n@@ -446,7 +446,7 @@ public class MessageCompose extends K9Activity implements OnClickListener,\n \n         setTitle();\n \n-        currentMessageBuilder = (MessageBuilder) getLastNonConfigurationInstance();\n+        currentMessageBuilder = (MessageBuilder) getLastCustomNonConfigurationInstance();\n         if (currentMessageBuilder != null) {\n             setProgressBarIndeterminateVisibility(true);\n             currentMessageBuilder.reattachCallback(this);",
    "Validate positions of var": "diff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/validator/Java10Validator.java b/javaparser-core/src/main/java/com/github/javaparser/ast/validator/Java10Validator.java\nindex 42e5c61c8..c7fda2f46 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/validator/Java10Validator.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/validator/Java10Validator.java\n@@ -1,39 +1,14 @@\n package com.github.javaparser.ast.validator;\n \n-import com.github.javaparser.ast.Node;\n-import com.github.javaparser.ast.body.VariableDeclarator;\n-import com.github.javaparser.ast.expr.VariableDeclarationExpr;\n-import com.github.javaparser.ast.stmt.ForStmt;\n-import com.github.javaparser.ast.stmt.ForeachStmt;\n import com.github.javaparser.ast.type.VarType;\n-\n-import java.util.Optional;\n+import com.github.javaparser.ast.validator.chunks.VarValidator;\n \n /**\n  * This validator validates according to Java 10 syntax rules.\n  */\n public class Java10Validator extends Java9Validator {\n \n-    protected final Validator varOnlyOnLocalVariableDefinitionAndFor = new SingleNodeTypeValidator<>(VarType.class, (n, reporter) -> {\n-        Optional<VariableDeclarator> variableDeclarator = n.findParent(VariableDeclarator.class);\n-        if (!variableDeclarator.isPresent()) {\n-            reporter.report(n, \"\\\"var\\\" is not allowed here.\");\n-            return;\n-        }\n-        variableDeclarator.ifPresent(vd -> {\n-            Optional<Node> container = vd.getParentNode();\n-            if (!container.isPresent()) {\n-                reporter.report(n, \"\\\"var\\\" is not allowed here.\");\n-                return;\n-            }\n-            container.ifPresent(c -> {\n-                boolean positionIsFine = c instanceof ForStmt || c instanceof ForeachStmt || c instanceof VariableDeclarationExpr;\n-                if (!positionIsFine) {\n-                    reporter.report(n, \"\\\"var\\\" is not allowed here.\");\n-                }\n-            });\n-        });\n-    });\n+    protected final Validator varOnlyOnLocalVariableDefinitionAndFor = new SingleNodeTypeValidator<>(VarType.class, new VarValidator(false));\n \n     public Java10Validator() {\n         super();\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/validator/Java11Validator.java b/javaparser-core/src/main/java/com/github/javaparser/ast/validator/Java11Validator.java\nindex d80577268..0eb879aa0 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/validator/Java11Validator.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/validator/Java11Validator.java\n@@ -1,10 +1,16 @@\n package com.github.javaparser.ast.validator;\n \n+import com.github.javaparser.ast.type.VarType;\n+import com.github.javaparser.ast.validator.chunks.VarValidator;\n+\n /**\n  * This validator validates according to Java 11 syntax rules.\n  */\n public class Java11Validator extends Java10Validator {\n+    protected final Validator varAlsoInLambdaParameters = new SingleNodeTypeValidator<>(VarType.class, new VarValidator(true));\n+\n     public Java11Validator() {\n         super();\n+        replace(varOnlyOnLocalVariableDefinitionAndFor, varAlsoInLambdaParameters);\n     }\n }\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/validator/chunks/VarValidator.java b/javaparser-core/src/main/java/com/github/javaparser/ast/validator/chunks/VarValidator.java\nnew file mode 100644\nindex 000000000..19357e83c\n--- /dev/null\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/validator/chunks/VarValidator.java\n@@ -0,0 +1,93 @@\n+package com.github.javaparser.ast.validator.chunks;\n+\n+import com.github.javaparser.ast.Node;\n+import com.github.javaparser.ast.body.Parameter;\n+import com.github.javaparser.ast.body.VariableDeclarator;\n+import com.github.javaparser.ast.expr.ArrayCreationExpr;\n+import com.github.javaparser.ast.expr.LambdaExpr;\n+import com.github.javaparser.ast.expr.NullLiteralExpr;\n+import com.github.javaparser.ast.expr.VariableDeclarationExpr;\n+import com.github.javaparser.ast.stmt.ExpressionStmt;\n+import com.github.javaparser.ast.stmt.ForStmt;\n+import com.github.javaparser.ast.stmt.ForeachStmt;\n+import com.github.javaparser.ast.type.VarType;\n+import com.github.javaparser.ast.validator.ProblemReporter;\n+import com.github.javaparser.ast.validator.TypedValidator;\n+\n+import java.util.Optional;\n+\n+public class VarValidator implements TypedValidator<VarType> {\n+    private boolean varAllowedInLambdaParameters;\n+\n+    public VarValidator(boolean varAllowedInLambdaParameters) {\n+        this.varAllowedInLambdaParameters = varAllowedInLambdaParameters;\n+    }\n+\n+    @Override\n+    public void accept(VarType node, ProblemReporter reporter) {\n+        // All allowed locations are within a VariableDeclaration inside a VariableDeclarationExpr inside something else.\n+        Optional<VariableDeclarator> variableDeclarator = node.findParent(VariableDeclarator.class);\n+        if (!variableDeclarator.isPresent()) {\n+            // Java 11's var in lambda's\n+            if (varAllowedInLambdaParameters) {\n+                boolean valid = node\n+                        .findParent(Parameter.class)\n+                        .flatMap(Node::getParentNode)\n+                        .map((Node p) -> p instanceof LambdaExpr).orElse(false);\n+                if (valid) {\n+                    return;\n+                }\n+            }\n+            reportIllegalPosition(node, reporter);\n+            return;\n+        }\n+        variableDeclarator.ifPresent(vd -> {\n+            Optional<Node> variableDeclarationExpr = vd.getParentNode();\n+            if (!variableDeclarationExpr.isPresent()) {\n+                reportIllegalPosition(node, reporter);\n+                return;\n+            }\n+            variableDeclarationExpr.ifPresent(vdeNode -> {\n+                if (!(vdeNode instanceof VariableDeclarationExpr)) {\n+                    reportIllegalPosition(node, reporter);\n+                    return;\n+                }\n+                VariableDeclarationExpr vde = (VariableDeclarationExpr) vdeNode;\n+                if (vde.getVariables().size() > 1) {\n+                    reporter.report(vde, \"\\\"var\\\" only takes a single variable.\");\n+                }\n+                Optional<Node> container = vdeNode.getParentNode();\n+                if (!container.isPresent()) {\n+                    reportIllegalPosition(node, reporter);\n+                    return;\n+                }\n+                container.ifPresent(c -> {\n+                    boolean positionIsFine = c instanceof ForStmt || c instanceof ForeachStmt || c instanceof ExpressionStmt;\n+                    if (!positionIsFine) {\n+                        reportIllegalPosition(node, reporter);\n+                    }\n+                    // A local variable declaration ends up inside an ExpressionStmt.\n+                    if (c instanceof ExpressionStmt) {\n+                        if (!vd.getInitializer().isPresent()) {\n+                            reporter.report(node, \"\\\"var\\\" needs an initializer.\");\n+                        }\n+                        vd.getInitializer().ifPresent(initializer -> {\n+                            if (initializer instanceof NullLiteralExpr) {\n+                                reporter.report(node, \"\\\"var\\\" cannot infer type from just null.\");\n+                            }\n+                            if (initializer instanceof ArrayCreationExpr) {\n+                                reporter.report(node, \"\\\"var\\\" cannot infer array types.\");\n+                            }\n+                        });\n+\n+                    }\n+                });\n+            });\n+        });\n+\n+    }\n+\n+    private void reportIllegalPosition(VarType n, ProblemReporter reporter) {\n+        reporter.report(n, \"\\\"var\\\" is not allowed here.\");\n+    }\n+}\ndiff --git a/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/VarTypeTest.java b/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/VarTypeTest.java\nindex 3444ba2b1..6f2f72057 100644\n--- a/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/VarTypeTest.java\n+++ b/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/VarTypeTest.java\n@@ -26,7 +26,7 @@ public class VarTypeTest {\n \n     @Test\n     public void resolveAPrimitive() {\n-        CompilationUnit ast = javaParser.parse(ParseStart.COMPILATION_UNIT, provider(\"class X{var abc = 1;}\")).getResult().get();\n+        CompilationUnit ast = javaParser.parse(ParseStart.COMPILATION_UNIT, provider(\"class X{void x(){var abc = 1;}}\")).getResult().get();\n         VarType varType = ast.findFirst(VarType.class).get();\n \n         ResolvedType resolvedType = varType.resolve();\n@@ -36,7 +36,7 @@ public class VarTypeTest {\n \n     @Test\n     public void resolveAReferenceType() {\n-        CompilationUnit ast = javaParser.parse(ParseStart.COMPILATION_UNIT, provider(\"class X{var abc = \\\"\\\";}\")).getResult().get();\n+        CompilationUnit ast = javaParser.parse(ParseStart.COMPILATION_UNIT, provider(\"class X{void x(){var abc = \\\"\\\";}}\")).getResult().get();\n         VarType varType = ast.findFirst(VarType.class).get();\n \n         ResolvedType resolvedType = varType.resolve();\n@@ -46,7 +46,7 @@ public class VarTypeTest {\n \n     @Test(expected = IllegalStateException.class)\n     public void failResolveNoInitializer() {\n-        CompilationUnit ast = javaParser.parse(ParseStart.COMPILATION_UNIT, provider(\"class X{var abc;}\")).getResult().get();\n+        CompilationUnit ast = javaParser.parse(ParseStart.COMPILATION_UNIT, provider(\"class X{void x(){var abc;}}\")).getResult().get();\n         VarType varType = ast.findFirst(VarType.class).get();\n \n         varType.resolve();\ndiff --git a/javaparser-testing/src/test/java/com/github/javaparser/ast/validator/Java10ValidatorTest.java b/javaparser-testing/src/test/java/com/github/javaparser/ast/validator/Java10ValidatorTest.java\nindex b4b3d038b..afd65aaa5 100644\n--- a/javaparser-testing/src/test/java/com/github/javaparser/ast/validator/Java10ValidatorTest.java\n+++ b/javaparser-testing/src/test/java/com/github/javaparser/ast/validator/Java10ValidatorTest.java\n@@ -3,15 +3,15 @@ package com.github.javaparser.ast.validator;\n import com.github.javaparser.JavaParser;\n import com.github.javaparser.ParseResult;\n import com.github.javaparser.ParserConfiguration;\n-import com.github.javaparser.ast.CompilationUnit;\n+import com.github.javaparser.ast.body.BodyDeclaration;\n import com.github.javaparser.ast.stmt.Statement;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n-import static com.github.javaparser.ParseStart.COMPILATION_UNIT;\n+import static com.github.javaparser.ParseStart.CLASS_BODY;\n import static com.github.javaparser.ParseStart.STATEMENT;\n-import static com.github.javaparser.ParserConfiguration.LanguageLevel.*;\n+import static com.github.javaparser.ParserConfiguration.LanguageLevel.JAVA_10_PREVIEW;\n import static com.github.javaparser.Providers.provider;\n-import static com.github.javaparser.ast.validator.Java1_1ValidatorTest.allModifiers;\n import static com.github.javaparser.utils.TestUtils.assertNoProblems;\n import static com.github.javaparser.utils.TestUtils.assertProblems;\n \n@@ -42,6 +42,18 @@ public class Java10ValidatorTest {\n         assertNoProblems(result);\n     }\n \n+    @Test\n+    public void varNotAllowedInTryWithResources() {\n+        ParseResult<Statement> result = javaParser.parse(STATEMENT, provider(\"try(var f = new FileReader(\\\"\\\")){ }catch (Exception e){ }\"));\n+        assertProblems(result, \"(line 1,col 5) \\\"var\\\" is not allowed here.\");\n+    }\n+\n+    @Test\n+    public void varNotAllowedInField() {\n+        ParseResult<BodyDeclaration<?>> result = javaParser.parse(CLASS_BODY, provider(\"var a = 20;\"));\n+        assertProblems(result, \"(line 1,col 1) \\\"var\\\" is not allowed here.\");\n+    }\n+\n     @Test\n     public void varNotAllowedInTypeArguments() {\n         ParseResult<Statement> result = javaParser.parse(STATEMENT, provider(\"new X<var>();\"));\n@@ -53,4 +65,44 @@ public class Java10ValidatorTest {\n         ParseResult<Statement> result = javaParser.parse(STATEMENT, provider(\"x((var x) -> null);\"));\n         assertProblems(result, \"(line 1,col 4) \\\"var\\\" is not allowed here.\");\n     }\n+\n+    @Test\n+    public void emptyInitializerNotAllowed() {\n+        ParseResult<Statement> result = javaParser.parse(STATEMENT, provider(\"var a;\"));\n+        assertProblems(result, \"(line 1,col 1) \\\"var\\\" needs an initializer.\");\n+    }\n+\n+    @Test\n+    public void multipleVariablesNotAllowed() {\n+        ParseResult<Statement> result = javaParser.parse(STATEMENT, provider(\"var a=1, b=2;\"));\n+        assertProblems(result, \"(line 1,col 1) \\\"var\\\" only takes a single variable.\");\n+    }\n+\n+    @Test\n+    public void nullVariablesNotAllowed() {\n+        ParseResult<Statement> result = javaParser.parse(STATEMENT, provider(\"var a=null;\"));\n+        assertProblems(result, \"(line 1,col 1) \\\"var\\\" cannot infer type from just null.\");\n+    }\n+\n+    @Test\n+    public void arrayDimensionBracketsNotAllowed() {\n+        ParseResult<Statement> result = javaParser.parse(STATEMENT, provider(\"var a=new String[]{};\"));\n+        assertProblems(result, \"(line 1,col 1) \\\"var\\\" cannot infer array types.\");\n+    }\n+\n+    // This is pretty hard to impossible to implement correctly with just the AST.\n+    @Ignore\n+    @Test\n+    public void selfReferenceNotAllowed() {\n+        ParseResult<Statement> result = javaParser.parse(STATEMENT, provider(\"var a=a;\"));\n+        assertProblems(result, \"\");\n+    }\n+\n+    // Can be implemented once https://github.com/javaparser/javaparser/issues/1434 is implemented.\n+    @Ignore\n+    @Test\n+    public void polyExpressionAsInitializerNotAllowed() {\n+        ParseResult<Statement> result = javaParser.parse(STATEMENT, provider(\"var a=new ArrayList<>();\"));\n+        assertProblems(result, \"\");\n+    }\n }\ndiff --git a/javaparser-testing/src/test/java/com/github/javaparser/version/Java11PostProcessorTest.java b/javaparser-testing/src/test/java/com/github/javaparser/ast/validator/Java11ValidatorTest.java\nsimilarity index 91%\nrename from javaparser-testing/src/test/java/com/github/javaparser/version/Java11PostProcessorTest.java\nrename to javaparser-testing/src/test/java/com/github/javaparser/ast/validator/Java11ValidatorTest.java\nindex 30115c87c..1e1f8c0f8 100644\n--- a/javaparser-testing/src/test/java/com/github/javaparser/version/Java11PostProcessorTest.java\n+++ b/javaparser-testing/src/test/java/com/github/javaparser/ast/validator/Java11ValidatorTest.java\n@@ -1,4 +1,4 @@\n-package com.github.javaparser.version;\n+package com.github.javaparser.ast.validator;\n \n import com.github.javaparser.JavaParser;\n import com.github.javaparser.ParseResult;\n@@ -11,7 +11,7 @@ import static com.github.javaparser.ParserConfiguration.LanguageLevel.JAVA_11_PR\n import static com.github.javaparser.Providers.provider;\n import static com.github.javaparser.utils.TestUtils.assertNoProblems;\n \n-public class Java11PostProcessorTest {\n+public class Java11ValidatorTest {\n     public static final JavaParser javaParser = new JavaParser(new ParserConfiguration().setLanguageLevel(JAVA_11_PREVIEW));\n \n     @Test",
    "Apply IntelliJ cleanup actions . . Test Plan : CI .": "diff --git a/src/com/facebook/buck/halide/HalideLibraryDescription.java b/src/com/facebook/buck/halide/HalideLibraryDescription.java\nindex bd1ff6101f..b6ff434f16 100644\n--- a/src/com/facebook/buck/halide/HalideLibraryDescription.java\n+++ b/src/com/facebook/buck/halide/HalideLibraryDescription.java\n@@ -324,7 +324,7 @@ public class HalideLibraryDescription\n       // we use the host flavor here, regardless of the flavors on the build\n       // target.\n       CxxPlatform hostCxxPlatform = cxxPlatforms.getValue(CxxPlatforms.getHostFlavor());\n-      final ImmutableSortedSet<BuildTarget> compilerDeps = args.getCompilerDeps();\n+      ImmutableSortedSet<BuildTarget> compilerDeps = args.getCompilerDeps();\n       return createHalideCompiler(\n           buildTarget,\n           projectFilesystem,\ndiff --git a/src/com/facebook/buck/haskell/HaskellBinaryDescription.java b/src/com/facebook/buck/haskell/HaskellBinaryDescription.java\nindex 58f9b478e6..bc1e388ff7 100644\n--- a/src/com/facebook/buck/haskell/HaskellBinaryDescription.java\n+++ b/src/com/facebook/buck/haskell/HaskellBinaryDescription.java\n@@ -278,8 +278,8 @@ public class HaskellBinaryDescription\n     ImmutableList<Arg> linkInputs = linkInputsBuilder.build();\n     ImmutableList<Arg> linkFlags = linkFlagsBuilder.build();\n \n-    final CommandTool executable = executableBuilder.build();\n-    final HaskellLinkRule linkRule =\n+    CommandTool executable = executableBuilder.build();\n+    HaskellLinkRule linkRule =\n         HaskellDescriptionUtils.createLinkRule(\n             binaryTarget,\n             projectFilesystem,\ndiff --git a/src/com/facebook/buck/haskell/HaskellCompileRule.java b/src/com/facebook/buck/haskell/HaskellCompileRule.java\nindex a36245faf0..8a2235277c 100644\n--- a/src/com/facebook/buck/haskell/HaskellCompileRule.java\n+++ b/src/com/facebook/buck/haskell/HaskellCompileRule.java\n@@ -153,19 +153,19 @@ public class HaskellCompileRule extends AbstractBuildRuleWithDeclaredAndExtraDep\n       ProjectFilesystem projectFilesystem,\n       BuildRuleParams baseParams,\n       SourcePathRuleFinder ruleFinder,\n-      final Tool compiler,\n+      Tool compiler,\n       HaskellVersion haskellVersion,\n       ImmutableList<String> flags,\n-      final PreprocessorFlags ppFlags,\n+      PreprocessorFlags ppFlags,\n       CxxPlatform cxxPlatform,\n       PicType picType,\n       boolean hsProfile,\n       Optional<String> main,\n       Optional<HaskellPackageInfo> packageInfo,\n-      final ImmutableList<SourcePath> includes,\n-      final ImmutableSortedMap<String, HaskellPackage> exposedPackages,\n-      final ImmutableSortedMap<String, HaskellPackage> packages,\n-      final HaskellSources sources,\n+      ImmutableList<SourcePath> includes,\n+      ImmutableSortedMap<String, HaskellPackage> exposedPackages,\n+      ImmutableSortedMap<String, HaskellPackage> packages,\n+      HaskellSources sources,\n       Preprocessor preprocessor) {\n     Supplier<ImmutableSortedSet<BuildRule>> declaredDeps =\n         MoreSuppliers.memoize(\n@@ -394,7 +394,7 @@ public class HaskellCompileRule extends AbstractBuildRuleWithDeclaredAndExtraDep\n   }\n \n   public ImmutableList<SourcePath> getObjects() {\n-    final String suffix = \".\" + getObjectSuffix();\n+    String suffix = \".\" + getObjectSuffix();\n \n     ImmutableList.Builder<SourcePath> objects = ImmutableList.builder();\n     for (String module : sources.getModuleNames()) {\n@@ -435,8 +435,7 @@ public class HaskellCompileRule extends AbstractBuildRuleWithDeclaredAndExtraDep\n   private Step prepareOutputDir(String name, Path root, String suffix) {\n     return new AbstractExecutionStep(String.format(\"preparing %s output dir\", name)) {\n       @Override\n-      public StepExecutionResult execute(ExecutionContext context)\n-          throws IOException, InterruptedException {\n+      public StepExecutionResult execute(ExecutionContext context) throws IOException {\n         getProjectFilesystem().mkdirs(root);\n         getProjectFilesystem()\n             .walkRelativeFileTree(\ndiff --git a/src/com/facebook/buck/haskell/HaskellDescriptionUtils.java b/src/com/facebook/buck/haskell/HaskellDescriptionUtils.java\nindex bfe3c69bce..6ae2813742 100644\n--- a/src/com/facebook/buck/haskell/HaskellDescriptionUtils.java\n+++ b/src/com/facebook/buck/haskell/HaskellDescriptionUtils.java\n@@ -96,13 +96,13 @@ public class HaskellDescriptionUtils {\n    */\n   private static HaskellCompileRule createCompileRule(\n       BuildTarget target,\n-      final ProjectFilesystem projectFilesystem,\n+      ProjectFilesystem projectFilesystem,\n       BuildRuleParams baseParams,\n-      final BuildRuleResolver resolver,\n+      BuildRuleResolver resolver,\n       SourcePathRuleFinder ruleFinder,\n       ImmutableSet<BuildRule> deps,\n       HaskellPlatform platform,\n-      final Linker.LinkableDepType depType,\n+      Linker.LinkableDepType depType,\n       boolean hsProfile,\n       Optional<String> main,\n       Optional<HaskellPackageInfo> packageInfo,\n@@ -111,11 +111,11 @@ public class HaskellDescriptionUtils {\n \n     CxxPlatform cxxPlatform = platform.getCxxPlatform();\n \n-    final Map<BuildTarget, ImmutableList<String>> depFlags = new TreeMap<>();\n-    final Map<BuildTarget, ImmutableList<SourcePath>> depIncludes = new TreeMap<>();\n-    final ImmutableSortedMap.Builder<String, HaskellPackage> exposedPackagesBuilder =\n+    Map<BuildTarget, ImmutableList<String>> depFlags = new TreeMap<>();\n+    Map<BuildTarget, ImmutableList<SourcePath>> depIncludes = new TreeMap<>();\n+    ImmutableSortedMap.Builder<String, HaskellPackage> exposedPackagesBuilder =\n         ImmutableSortedMap.naturalOrder();\n-    final ImmutableSortedMap.Builder<String, HaskellPackage> packagesBuilder =\n+    ImmutableSortedMap.Builder<String, HaskellPackage> packagesBuilder =\n         ImmutableSortedMap.naturalOrder();\n     new AbstractBreadthFirstTraversal<BuildRule>(deps) {\n       private final ImmutableSet<BuildRule> empty = ImmutableSet.of();\n@@ -406,10 +406,10 @@ public class HaskellDescriptionUtils {\n   /** Give a rule that will result in a ghci session for the target */\n   public static HaskellGhciRule requireGhciRule(\n       BuildTarget buildTarget,\n-      final ProjectFilesystem projectFilesystem,\n+      ProjectFilesystem projectFilesystem,\n       BuildRuleParams params,\n       CellPathResolver cellPathResolver,\n-      final BuildRuleResolver resolver,\n+      BuildRuleResolver resolver,\n       HaskellPlatform platform,\n       CxxBuckConfig cxxBuckConfig,\n       ImmutableSortedSet<BuildTarget> argDeps,\ndiff --git a/src/com/facebook/buck/haskell/HaskellGhciRule.java b/src/com/facebook/buck/haskell/HaskellGhciRule.java\nindex 20a9f991a4..a6a65e14ac 100644\n--- a/src/com/facebook/buck/haskell/HaskellGhciRule.java\n+++ b/src/com/facebook/buck/haskell/HaskellGhciRule.java\n@@ -392,7 +392,7 @@ public class HaskellGhciRule extends AbstractBuildRuleWithDeclaredAndExtraDeps\n                 CopyStep.DirectoryMode.DIRECTORY_AND_CONTENTS));\n       }\n \n-      pkgdirs.add(\"${DIR}/\" + dir.relativize(pkgdir.resolve(pkgDbSrc.getFileName())).toString());\n+      pkgdirs.add(\"${DIR}/\" + dir.relativize(pkgdir.resolve(pkgDbSrc.getFileName())));\n     }\n \n     ImmutableSet.Builder<String> exposedPkgs = ImmutableSet.builder();\n@@ -497,7 +497,7 @@ public class HaskellGhciRule extends AbstractBuildRuleWithDeclaredAndExtraDeps\n \n         steps.add(CopyStep.forFile(getProjectFilesystem(), resolver.getRelativePath(sp), bin));\n \n-        ghcPath = \"${DIR}/\" + dir.relativize(bin).toString() + \" -B\" + ghciLib.toRealPath();\n+        ghcPath = \"${DIR}/\" + dir.relativize(bin) + \" -B\" + ghciLib.toRealPath();\n       } else {\n         ghcPath = ghciGhc.toRealPath().toString();\n       }\ndiff --git a/src/com/facebook/buck/haskell/HaskellHaddockLibRule.java b/src/com/facebook/buck/haskell/HaskellHaddockLibRule.java\nindex 22986489cb..6f59ea48ff 100644\n--- a/src/com/facebook/buck/haskell/HaskellHaddockLibRule.java\n+++ b/src/com/facebook/buck/haskell/HaskellHaddockLibRule.java\n@@ -94,8 +94,8 @@ public class HaskellHaddockLibRule extends AbstractBuildRuleWithDeclaredAndExtra\n       ImmutableList<String> compilerFlags,\n       ImmutableList<String> linkerFlags,\n       ImmutableSet<SourcePath> interfaces,\n-      final ImmutableSortedMap<String, HaskellPackage> packages,\n-      final ImmutableSortedMap<String, HaskellPackage> exposedPackages,\n+      ImmutableSortedMap<String, HaskellPackage> packages,\n+      ImmutableSortedMap<String, HaskellPackage> exposedPackages,\n       HaskellPackageInfo packageInfo,\n       HaskellPlatform platform,\n       Preprocessor preprocessor,\n@@ -121,7 +121,7 @@ public class HaskellHaddockLibRule extends AbstractBuildRuleWithDeclaredAndExtra\n       BuildRuleParams buildRuleParams,\n       SourcePathRuleFinder ruleFinder,\n       HaskellSources sources,\n-      final Tool haddockTool,\n+      Tool haddockTool,\n       ImmutableList<String> haddockFlags,\n       ImmutableList<String> compilerFlags,\n       ImmutableList<String> linkerFlags,\n@@ -374,7 +374,7 @@ public class HaskellHaddockLibRule extends AbstractBuildRuleWithDeclaredAndExtra\n     }\n   }\n \n-  public static enum Type {\n+  public enum Type {\n     HTML,\n     HOOGLE\n   }\ndiff --git a/src/com/facebook/buck/haskell/HaskellHaddockRule.java b/src/com/facebook/buck/haskell/HaskellHaddockRule.java\nindex 8e04d1e01f..b512a8a7ff 100644\n--- a/src/com/facebook/buck/haskell/HaskellHaddockRule.java\n+++ b/src/com/facebook/buck/haskell/HaskellHaddockRule.java\n@@ -81,7 +81,7 @@ public class HaskellHaddockRule extends AbstractBuildRuleWithDeclaredAndExtraDep\n       ProjectFilesystem projectFilesystem,\n       BuildRuleParams buildRuleParams,\n       SourcePathRuleFinder ruleFinder,\n-      final Tool haddockTool,\n+      Tool haddockTool,\n       ImmutableList<String> flags,\n       ImmutableSet<HaskellHaddockInput> inputs) {\n     ImmutableSet.Builder<SourcePath> ifacesBuilder = ImmutableSet.builder();\ndiff --git a/src/com/facebook/buck/haskell/HaskellLibraryDescription.java b/src/com/facebook/buck/haskell/HaskellLibraryDescription.java\nindex e2c5ad5843..72bbc95ce3 100644\n--- a/src/com/facebook/buck/haskell/HaskellLibraryDescription.java\n+++ b/src/com/facebook/buck/haskell/HaskellLibraryDescription.java\n@@ -490,9 +490,9 @@ public class HaskellLibraryDescription\n \n     // Collect all Haskell deps\n     ImmutableSet.Builder<SourcePath> haddockInterfaces = ImmutableSet.builder();\n-    final ImmutableSortedMap.Builder<String, HaskellPackage> packagesBuilder =\n+    ImmutableSortedMap.Builder<String, HaskellPackage> packagesBuilder =\n         ImmutableSortedMap.naturalOrder();\n-    final ImmutableSortedMap.Builder<String, HaskellPackage> exposedPackagesBuilder =\n+    ImmutableSortedMap.Builder<String, HaskellPackage> exposedPackagesBuilder =\n         ImmutableSortedMap.naturalOrder();\n \n     // Traverse all deps to pull interfaces\n@@ -659,14 +659,14 @@ public class HaskellLibraryDescription\n       BuildRuleCreationContext context,\n       BuildTarget buildTarget,\n       BuildRuleParams params,\n-      final HaskellLibraryDescriptionArg args) {\n+      HaskellLibraryDescriptionArg args) {\n     BuildRuleResolver resolver = context.getBuildRuleResolver();\n     HaskellPlatformsProvider haskellPlatformsProvider = getHaskellPlatformsProvider();\n     ProjectFilesystem projectFilesystem = context.getProjectFilesystem();\n     FlavorDomain<HaskellPlatform> platforms = haskellPlatformsProvider.getHaskellPlatforms();\n \n     SourcePathRuleFinder ruleFinder = new SourcePathRuleFinder(resolver);\n-    final SourcePathResolver pathResolver = DefaultSourcePathResolver.from(ruleFinder);\n+    SourcePathResolver pathResolver = DefaultSourcePathResolver.from(ruleFinder);\n     CxxDeps allDeps =\n         CxxDeps.builder().addDeps(args.getDeps()).addPlatformDeps(args.getPlatformDeps()).build();\n \ndiff --git a/src/com/facebook/buck/haskell/HaskellPackageRule.java b/src/com/facebook/buck/haskell/HaskellPackageRule.java\nindex 00737b9243..e361178a93 100644\n--- a/src/com/facebook/buck/haskell/HaskellPackageRule.java\n+++ b/src/com/facebook/buck/haskell/HaskellPackageRule.java\n@@ -106,14 +106,14 @@ public class HaskellPackageRule extends AbstractBuildRuleWithDeclaredAndExtraDep\n       ProjectFilesystem projectFilesystem,\n       BuildRuleParams baseParams,\n       SourcePathRuleFinder ruleFinder,\n-      final Tool ghcPkg,\n+      Tool ghcPkg,\n       HaskellVersion haskellVersion,\n       Linker.LinkableDepType depType,\n       HaskellPackageInfo packageInfo,\n-      final ImmutableSortedMap<String, HaskellPackage> depPackages,\n+      ImmutableSortedMap<String, HaskellPackage> depPackages,\n       ImmutableSortedSet<String> modules,\n-      final ImmutableSortedSet<SourcePath> libraries,\n-      final ImmutableSortedSet<SourcePath> interfaces,\n+      ImmutableSortedSet<SourcePath> libraries,\n+      ImmutableSortedSet<SourcePath> interfaces,\n       ImmutableSortedSet<SourcePath> objects) {\n     Supplier<ImmutableSortedSet<BuildRule>> declaredDeps =\n         MoreSuppliers.memoize(\n@@ -222,7 +222,7 @@ public class HaskellPackageRule extends AbstractBuildRuleWithDeclaredAndExtraDep\n                 context.getBuildCellRootPath(), getProjectFilesystem(), scratchDir)));\n \n     // Setup the package DB directory.\n-    final Path packageDb = getPackageDb();\n+    Path packageDb = getPackageDb();\n     steps.add(\n         RmStep.of(\n                 BuildCellRelativePath.fromCellRelativePath(\ndiff --git a/src/com/facebook/buck/haskell/HaskellPrebuiltLibraryDescription.java b/src/com/facebook/buck/haskell/HaskellPrebuiltLibraryDescription.java\nindex 9bb4ba7b42..41d93a069c 100644\n--- a/src/com/facebook/buck/haskell/HaskellPrebuiltLibraryDescription.java\n+++ b/src/com/facebook/buck/haskell/HaskellPrebuiltLibraryDescription.java\n@@ -61,7 +61,7 @@ public class HaskellPrebuiltLibraryDescription\n       BuildRuleCreationContext context,\n       BuildTarget buildTarget,\n       BuildRuleParams params,\n-      final HaskellPrebuiltLibraryDescriptionArg args) {\n+      HaskellPrebuiltLibraryDescriptionArg args) {\n     BuildRuleResolver resolver = context.getBuildRuleResolver();\n     return new PrebuiltHaskellLibrary(buildTarget, context.getProjectFilesystem(), params) {\n \ndiff --git a/src/com/facebook/buck/httpserver/ArtifactCacheHandler.java b/src/com/facebook/buck/httpserver/ArtifactCacheHandler.java\nindex 4550856e73..be889cf1b4 100644\n--- a/src/com/facebook/buck/httpserver/ArtifactCacheHandler.java\n+++ b/src/com/facebook/buck/httpserver/ArtifactCacheHandler.java\n@@ -35,7 +35,6 @@ import java.io.InputStream;\n import java.io.OutputStream;\n import java.nio.file.Path;\n import java.util.Optional;\n-import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import org.eclipse.jetty.server.Request;\n@@ -60,7 +59,7 @@ public class ArtifactCacheHandler extends AbstractHandler {\n   @Override\n   public void handle(\n       String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)\n-      throws IOException, ServletException {\n+      throws IOException {\n     try {\n       int status = HttpServletResponse.SC_INTERNAL_SERVER_ERROR;\n       String method = baseRequest.getMethod();\n@@ -107,7 +106,7 @@ public class ArtifactCacheHandler extends AbstractHandler {\n         return HttpServletResponse.SC_NOT_FOUND;\n       }\n \n-      final Path tempFinal = temp;\n+      Path tempFinal = temp;\n       HttpArtifactCacheBinaryProtocol.FetchResponse fetchResponse =\n           new HttpArtifactCacheBinaryProtocol.FetchResponse(\n               ImmutableSet.of(ruleKey),\ndiff --git a/src/com/facebook/buck/httpserver/IndexHandlerDelegate.java b/src/com/facebook/buck/httpserver/IndexHandlerDelegate.java\nindex 62a49a7191..c5073cbbc9 100644\n--- a/src/com/facebook/buck/httpserver/IndexHandlerDelegate.java\n+++ b/src/com/facebook/buck/httpserver/IndexHandlerDelegate.java\n@@ -18,7 +18,6 @@ package com.facebook.buck.httpserver;\n \n import com.google.common.collect.ImmutableMap;\n import com.google.common.io.Resources;\n-import java.io.IOException;\n import java.net.URL;\n import javax.annotation.Nullable;\n import org.eclipse.jetty.server.Request;\n@@ -33,7 +32,7 @@ class IndexHandlerDelegate implements TemplateHandlerDelegate {\n \n   @Nullable\n   @Override\n-  public ImmutableMap<String, Object> getDataForRequest(Request baseRequest) throws IOException {\n+  public ImmutableMap<String, Object> getDataForRequest(Request baseRequest) {\n     return ImmutableMap.of();\n   }\n \ndiff --git a/src/com/facebook/buck/httpserver/StaticResourcesHandler.java b/src/com/facebook/buck/httpserver/StaticResourcesHandler.java\nindex ab0be4afd5..14296eb767 100644\n--- a/src/com/facebook/buck/httpserver/StaticResourcesHandler.java\n+++ b/src/com/facebook/buck/httpserver/StaticResourcesHandler.java\n@@ -22,7 +22,6 @@ import com.google.common.io.ByteStreams;\n import com.google.common.net.MediaType;\n import java.io.IOException;\n import java.io.InputStream;\n-import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import org.eclipse.jetty.server.Request;\n@@ -41,7 +40,7 @@ class StaticResourcesHandler extends AbstractHandler {\n   @Override\n   public void handle(\n       String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)\n-      throws IOException, ServletException {\n+      throws IOException {\n     if (!\"GET\".equals(request.getMethod())) {\n       Responses.writeFailedResponse(baseRequest, response);\n       return;\ndiff --git a/src/com/facebook/buck/httpserver/StreamingWebSocketServlet.java b/src/com/facebook/buck/httpserver/StreamingWebSocketServlet.java\nindex c10e628732..77b9c08c11 100644\n--- a/src/com/facebook/buck/httpserver/StreamingWebSocketServlet.java\n+++ b/src/com/facebook/buck/httpserver/StreamingWebSocketServlet.java\n@@ -34,7 +34,7 @@ public class StreamingWebSocketServlet extends WebSocketServlet {\n   private final Set<MyWebSocket> connections;\n \n   public StreamingWebSocketServlet() {\n-    this.connections = Collections.newSetFromMap(Maps.<MyWebSocket, Boolean>newConcurrentMap());\n+    this.connections = Collections.newSetFromMap(Maps.newConcurrentMap());\n   }\n \n   @Override\ndiff --git a/src/com/facebook/buck/httpserver/TemplateHandler.java b/src/com/facebook/buck/httpserver/TemplateHandler.java\nindex 2676fb7eb5..f7bae97d8a 100644\n--- a/src/com/facebook/buck/httpserver/TemplateHandler.java\n+++ b/src/com/facebook/buck/httpserver/TemplateHandler.java\n@@ -21,7 +21,6 @@ import com.google.common.net.MediaType;\n import java.io.IOException;\n import java.util.Map;\n import javax.annotation.Nullable;\n-import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import org.eclipse.jetty.server.Handler;\n@@ -58,7 +57,7 @@ class TemplateHandler extends AbstractHandler {\n   @Override\n   public void handle(\n       String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)\n-      throws IOException, ServletException {\n+      throws IOException {\n     String html = createHtmlForResponse(baseRequest);\n     if (html != null) {\n       Responses.writeSuccessfulResponse(html, MediaType.HTML_UTF_8, baseRequest, response);\ndiff --git a/src/com/facebook/buck/httpserver/TraceDataHandler.java b/src/com/facebook/buck/httpserver/TraceDataHandler.java\nindex befa0fcc53..43ff77961b 100644\n--- a/src/com/facebook/buck/httpserver/TraceDataHandler.java\n+++ b/src/com/facebook/buck/httpserver/TraceDataHandler.java\n@@ -27,7 +27,6 @@ import java.io.Writer;\n import java.util.Iterator;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n-import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import org.eclipse.jetty.server.Request;\n@@ -49,7 +48,7 @@ class TraceDataHandler extends AbstractHandler {\n   @Override\n   public void handle(\n       String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)\n-      throws IOException, ServletException {\n+      throws IOException {\n     if (\"GET\".equals(baseRequest.getMethod())) {\n       doGet(baseRequest, response);\n     } else {\ndiff --git a/src/com/facebook/buck/httpserver/WebServerBuckEventListener.java b/src/com/facebook/buck/httpserver/WebServerBuckEventListener.java\nindex 5e8e7bb8df..590032df0f 100644\n--- a/src/com/facebook/buck/httpserver/WebServerBuckEventListener.java\n+++ b/src/com/facebook/buck/httpserver/WebServerBuckEventListener.java\n@@ -38,7 +38,7 @@ import com.google.common.eventbus.Subscribe;\n public class WebServerBuckEventListener implements BuckEventListener {\n   private final StreamingWebSocketServlet streamingWebSocketServlet;\n \n-  WebServerBuckEventListener(final WebServer webServer) {\n+  WebServerBuckEventListener(WebServer webServer) {\n     this.streamingWebSocketServlet = webServer.getStreamingWebSocketServlet();\n   }\n \ndiff --git a/src/com/facebook/buck/ide/intellij/DefaultIjLibraryFactory.java b/src/com/facebook/buck/ide/intellij/DefaultIjLibraryFactory.java\nindex 940995e068..7d25c0f3b6 100644\n--- a/src/com/facebook/buck/ide/intellij/DefaultIjLibraryFactory.java\n+++ b/src/com/facebook/buck/ide/intellij/DefaultIjLibraryFactory.java\n@@ -108,7 +108,7 @@ class DefaultIjLibraryFactory extends IjLibraryFactory {\n     return Optional.ofNullable(rule);\n   }\n \n-  private Optional<IjLibrary> createLibrary(final TargetNode<?, ?> targetNode) {\n+  private Optional<IjLibrary> createLibrary(TargetNode<?, ?> targetNode) {\n     return getRule(targetNode)\n         .map(\n             rule -> {\ndiff --git a/src/com/facebook/buck/ide/intellij/IJProjectCleaner.java b/src/com/facebook/buck/ide/intellij/IJProjectCleaner.java\nindex 773f1753e3..51b05823de 100644\n--- a/src/com/facebook/buck/ide/intellij/IJProjectCleaner.java\n+++ b/src/com/facebook/buck/ide/intellij/IJProjectCleaner.java\n@@ -100,15 +100,15 @@ public class IJProjectCleaner {\n   }\n \n   public void clean(\n-      final BuckConfig buckConfig,\n-      final Path librariesXmlBase,\n-      final boolean runPostGenerationCleaner,\n-      final boolean removeOldLibraries) {\n+      BuckConfig buckConfig,\n+      Path librariesXmlBase,\n+      boolean runPostGenerationCleaner,\n+      boolean removeOldLibraries) {\n     if (!runPostGenerationCleaner && !removeOldLibraries) {\n       return;\n     }\n \n-    final Set<File> buckDirectories = new HashSet<>();\n+    Set<File> buckDirectories = new HashSet<>();\n     buckDirectories.add(\n         convertPathToFile(\n             projectFilesystem.resolve(projectFilesystem.getBuckPaths().getBuckOut())));\ndiff --git a/src/com/facebook/buck/ide/intellij/IjModuleGraph.java b/src/com/facebook/buck/ide/intellij/IjModuleGraph.java\nindex c244a39255..088e75eb47 100644\n--- a/src/com/facebook/buck/ide/intellij/IjModuleGraph.java\n+++ b/src/com/facebook/buck/ide/intellij/IjModuleGraph.java\n@@ -63,7 +63,7 @@ public class IjModuleGraph {\n   }\n \n   public ImmutableMap<IjModule, DependencyType> getDependentModulesFor(IjModule source) {\n-    final ImmutableMap<IjProjectElement, DependencyType> deps = getDepsFor(source);\n+    ImmutableMap<IjProjectElement, DependencyType> deps = getDepsFor(source);\n     return deps.keySet()\n         .stream()\n         .filter(dep -> dep instanceof IjModule)\n@@ -74,7 +74,7 @@ public class IjModuleGraph {\n   }\n \n   public ImmutableMap<IjLibrary, DependencyType> getDependentLibrariesFor(IjModule source) {\n-    final ImmutableMap<IjProjectElement, DependencyType> deps = getDepsFor(source);\n+    ImmutableMap<IjProjectElement, DependencyType> deps = getDepsFor(source);\n     return deps.keySet()\n         .stream()\n         .filter(dep -> dep instanceof IjLibrary)\ndiff --git a/src/com/facebook/buck/ide/intellij/IjModuleGraphFactory.java b/src/com/facebook/buck/ide/intellij/IjModuleGraphFactory.java\nindex c6ce7e8c48..fb16901ee8 100644\n--- a/src/com/facebook/buck/ide/intellij/IjModuleGraphFactory.java\n+++ b/src/com/facebook/buck/ide/intellij/IjModuleGraphFactory.java\n@@ -62,7 +62,7 @@ public final class IjModuleGraphFactory {\n       TargetGraph targetGraph,\n       IjModuleFactory moduleFactory,\n       AggregationModuleFactory aggregationModuleFactory,\n-      final int minimumPathDepth,\n+      int minimumPathDepth,\n       ImmutableSet<String> ignoredTargetLabels) {\n \n     Stream<TargetNode<?, ?>> nodes =\n@@ -162,11 +162,11 @@ public final class IjModuleGraphFactory {\n   }\n \n   private static ImmutableSet<IjProjectElement> getProjectElementFromBuildTargets(\n-      final TargetGraph targetGraph,\n-      final IjLibraryFactory libraryFactory,\n-      final ImmutableMap<BuildTarget, IjModule> rulesToModules,\n-      final IjModule module,\n-      final Stream<BuildTarget> buildTargetStream) {\n+      TargetGraph targetGraph,\n+      IjLibraryFactory libraryFactory,\n+      ImmutableMap<BuildTarget, IjModule> rulesToModules,\n+      IjModule module,\n+      Stream<BuildTarget> buildTargetStream) {\n     return buildTargetStream\n         .filter(\n             input -> {\n@@ -205,14 +205,14 @@ public final class IjModuleGraphFactory {\n    *     and Ma contains Ta and Mb contains Tb.\n    */\n   public static IjModuleGraph from(\n-      final ProjectFilesystem projectFilesystem,\n-      final IjProjectConfig projectConfig,\n-      final TargetGraph targetGraph,\n-      final IjLibraryFactory libraryFactory,\n-      final IjModuleFactory moduleFactory,\n-      final AggregationModuleFactory aggregationModuleFactory) {\n+      ProjectFilesystem projectFilesystem,\n+      IjProjectConfig projectConfig,\n+      TargetGraph targetGraph,\n+      IjLibraryFactory libraryFactory,\n+      IjModuleFactory moduleFactory,\n+      AggregationModuleFactory aggregationModuleFactory) {\n     ImmutableSet<String> ignoredTargetLabels = projectConfig.getIgnoredTargetLabels();\n-    final ImmutableMap<BuildTarget, IjModule> rulesToModules =\n+    ImmutableMap<BuildTarget, IjModule> rulesToModules =\n         createModules(\n             projectFilesystem,\n             projectConfig,\n@@ -221,16 +221,16 @@ public final class IjModuleGraphFactory {\n             aggregationModuleFactory,\n             projectConfig.getAggregationMode().getGraphMinimumDepth(targetGraph.getNodes().size()),\n             ignoredTargetLabels);\n-    final ExportedDepsClosureResolver exportedDepsClosureResolver =\n+    ExportedDepsClosureResolver exportedDepsClosureResolver =\n         new ExportedDepsClosureResolver(targetGraph, ignoredTargetLabels);\n-    final TransitiveDepsClosureResolver transitiveDepsClosureResolver =\n+    TransitiveDepsClosureResolver transitiveDepsClosureResolver =\n         new TransitiveDepsClosureResolver(targetGraph, ignoredTargetLabels);\n     ImmutableMap.Builder<IjProjectElement, ImmutableMap<IjProjectElement, DependencyType>>\n         depsBuilder = ImmutableMap.builder();\n-    final Set<IjLibrary> referencedLibraries = new HashSet<>();\n+    Set<IjLibrary> referencedLibraries = new HashSet<>();\n     Optional<Path> extraCompileOutputRootPath = projectConfig.getExtraCompilerOutputModulesPath();\n \n-    for (final IjModule module : ImmutableSet.copyOf(rulesToModules.values())) {\n+    for (IjModule module : ImmutableSet.copyOf(rulesToModules.values())) {\n       Map<IjProjectElement, DependencyType> moduleDeps = new LinkedHashMap<>();\n \n       for (Map.Entry<BuildTarget, DependencyType> entry : module.getDependencies().entrySet()) {\ndiff --git a/src/com/facebook/buck/ide/intellij/IjProject.java b/src/com/facebook/buck/ide/intellij/IjProject.java\nindex 7c4b8dac72..42b5dcab73 100644\n--- a/src/com/facebook/buck/ide/intellij/IjProject.java\n+++ b/src/com/facebook/buck/ide/intellij/IjProject.java\n@@ -71,7 +71,7 @@ public class IjProject {\n    * @throws IOException\n    */\n   public ImmutableSet<BuildTarget> write() throws IOException {\n-    final ImmutableSet.Builder<BuildTarget> requiredBuildTargets = ImmutableSet.builder();\n+    ImmutableSet.Builder<BuildTarget> requiredBuildTargets = ImmutableSet.builder();\n     IjLibraryFactory libraryFactory =\n         new DefaultIjLibraryFactory(\n             new DefaultIjLibraryFactoryResolver(\ndiff --git a/src/com/facebook/buck/ide/intellij/IjProjectCommandHelper.java b/src/com/facebook/buck/ide/intellij/IjProjectCommandHelper.java\nindex 8889debd7f..7e4d094f0e 100644\n--- a/src/com/facebook/buck/ide/intellij/IjProjectCommandHelper.java\n+++ b/src/com/facebook/buck/ide/intellij/IjProjectCommandHelper.java\n@@ -39,7 +39,6 @@ import com.facebook.buck.parser.PerBuildState;\n import com.facebook.buck.parser.TargetNodePredicateSpec;\n import com.facebook.buck.parser.TargetNodeSpec;\n import com.facebook.buck.parser.exceptions.BuildFileParseException;\n-import com.facebook.buck.parser.exceptions.BuildTargetException;\n import com.facebook.buck.rules.ActionGraphAndResolver;\n import com.facebook.buck.rules.ActionGraphCache;\n import com.facebook.buck.rules.BuildRuleResolver;\n@@ -227,7 +226,7 @@ public class IjProjectCommandHelper {\n \n   private TargetGraph getProjectGraphForIde(\n       ListeningExecutorService executor, ImmutableSet<BuildTarget> passedInTargets)\n-      throws InterruptedException, BuildFileParseException, BuildTargetException, IOException {\n+      throws InterruptedException, BuildFileParseException, IOException {\n \n     if (passedInTargets.isEmpty()) {\n       return parser\n@@ -247,7 +246,7 @@ public class IjProjectCommandHelper {\n   }\n \n   /** Run intellij specific project generation actions. */\n-  private ExitCode runIntellijProjectGenerator(final TargetGraphAndTargets targetGraphAndTargets)\n+  private ExitCode runIntellijProjectGenerator(TargetGraphAndTargets targetGraphAndTargets)\n       throws IOException, InterruptedException {\n     ImmutableSet<BuildTarget> requiredBuildTargets =\n         writeProjectAndGetRequiredBuildTargets(targetGraphAndTargets);\n@@ -321,7 +320,7 @@ public class IjProjectCommandHelper {\n   }\n \n   private ImmutableSet<BuildTarget> getTargetsWithAnnotations(\n-      final TargetGraph targetGraph, ImmutableSet<BuildTarget> buildTargets) {\n+      TargetGraph targetGraph, ImmutableSet<BuildTarget> buildTargets) {\n     return buildTargets\n         .stream()\n         .filter(\n@@ -381,8 +380,7 @@ public class IjProjectCommandHelper {\n       ImmutableSet<BuildTarget> graphRoots,\n       boolean needsFullRecursiveParse,\n       ListeningExecutorService executor)\n-      throws IOException, InterruptedException, BuildFileParseException, BuildTargetException,\n-          VersionException {\n+      throws IOException, InterruptedException, BuildFileParseException, VersionException {\n \n     boolean isWithTests = isWithTests();\n     ImmutableSet<BuildTarget> explicitTestTargets = ImmutableSet.of();\ndiff --git a/src/com/facebook/buck/ide/intellij/IjProjectTemplateDataPreparer.java b/src/com/facebook/buck/ide/intellij/IjProjectTemplateDataPreparer.java\nindex 1bf1ccf8b4..b9ea169631 100644\n--- a/src/com/facebook/buck/ide/intellij/IjProjectTemplateDataPreparer.java\n+++ b/src/com/facebook/buck/ide/intellij/IjProjectTemplateDataPreparer.java\n@@ -190,10 +190,10 @@ public class IjProjectTemplateDataPreparer {\n   }\n \n   private ImmutableList<ContentRoot> createContentRoots(\n-      final IjModule module,\n+      IjModule module,\n       Path contentRootPath,\n       ImmutableCollection<IjFolder> folders,\n-      final Path moduleLocationBasePath) {\n+      Path moduleLocationBasePath) {\n     ImmutableListMultimap<Path, IjFolder> simplifiedFolders =\n         sourceRootSimplifier.simplify(\n             contentRootPath.toString().isEmpty() ? 0 : contentRootPath.getNameCount(),\n@@ -227,18 +227,17 @@ public class IjProjectTemplateDataPreparer {\n     return contentRootsBuilder.build();\n   }\n \n-  public ImmutableCollection<IjFolder> createExcludes(final IjModule module) throws IOException {\n-    final Path moduleBasePath = module.getModuleBasePath();\n+  public ImmutableCollection<IjFolder> createExcludes(IjModule module) throws IOException {\n+    Path moduleBasePath = module.getModuleBasePath();\n     if (!projectFilesystem.exists(moduleBasePath)) {\n       return ImmutableList.of();\n     }\n-    final ImmutableList.Builder<IjFolder> excludesBuilder = ImmutableList.builder();\n+    ImmutableList.Builder<IjFolder> excludesBuilder = ImmutableList.builder();\n     projectFilesystem.walkRelativeFileTree(\n         moduleBasePath,\n         new FileVisitor<Path>() {\n           @Override\n-          public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs)\n-              throws IOException {\n+          public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) {\n             // This is another module that's nested in this one. The entire subtree will be handled\n             // When we create excludes for that module.\n             if (filesystemTraversalBoundaryPaths.contains(dir) && !moduleBasePath.equals(dir)) {\n@@ -258,18 +257,17 @@ public class IjProjectTemplateDataPreparer {\n           }\n \n           @Override\n-          public FileVisitResult visitFile(Path file, BasicFileAttributes attrs)\n-              throws IOException {\n+          public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) {\n             return FileVisitResult.CONTINUE;\n           }\n \n           @Override\n-          public FileVisitResult visitFileFailed(Path file, IOException exc) throws IOException {\n+          public FileVisitResult visitFileFailed(Path file, IOException exc) {\n             return FileVisitResult.CONTINUE;\n           }\n \n           @Override\n-          public FileVisitResult postVisitDirectory(Path dir, IOException exc) throws IOException {\n+          public FileVisitResult postVisitDirectory(Path dir, IOException exc) {\n             return FileVisitResult.CONTINUE;\n           }\n         },\n@@ -294,7 +292,7 @@ public class IjProjectTemplateDataPreparer {\n   public ImmutableList<ContentRoot> getContentRoots(IjModule module) throws IOException {\n     Path moduleBasePath = module.getModuleBasePath();\n     Path moduleLocation = module.getModuleImlFilePath();\n-    final Path moduleLocationBasePath =\n+    Path moduleLocationBasePath =\n         (moduleLocation.getParent() == null) ? Paths.get(\"\") : moduleLocation.getParent();\n     ImmutableList<IjFolder> sourcesAndExcludes =\n         Stream.concat(module.getFolders().stream(), createExcludes(module).stream())\n@@ -303,7 +301,7 @@ public class IjProjectTemplateDataPreparer {\n     return createContentRoots(module, moduleBasePath, sourcesAndExcludes, moduleLocationBasePath);\n   }\n \n-  public ImmutableSet<IjSourceFolder> getGeneratedSourceFolders(final IjModule",
    "Provide access to ThreadContext in ingest plugins .": "diff --git a/core/src/main/java/org/elasticsearch/ingest/IngestService.java b/core/src/main/java/org/elasticsearch/ingest/IngestService.java\nindex c540d25334c..07e2aa1fe51 100644\n--- a/core/src/main/java/org/elasticsearch/ingest/IngestService.java\n+++ b/core/src/main/java/org/elasticsearch/ingest/IngestService.java\n@@ -24,7 +24,6 @@ import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.stream.Collectors;\n \n import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.env.Environment;\n@@ -43,9 +42,11 @@ public class IngestService {\n     public IngestService(Settings settings, ThreadPool threadPool,\n                          Environment env, ScriptService scriptService, List<IngestPlugin> ingestPlugins) {\n         final TemplateService templateService = new InternalTemplateService(scriptService);\n+        Processor.Parameters parameters = new Processor.Parameters(env, scriptService, templateService,\n+                threadPool.getThreadContext());\n         Map<String, Processor.Factory> processorFactories = new HashMap<>();\n         for (IngestPlugin ingestPlugin : ingestPlugins) {\n-            Map<String, Processor.Factory> newProcessors = ingestPlugin.getProcessors(env, scriptService, templateService);\n+            Map<String, Processor.Factory> newProcessors = ingestPlugin.getProcessors(parameters);\n             for (Map.Entry<String, Processor.Factory> entry : newProcessors.entrySet()) {\n                 if (processorFactories.put(entry.getKey(), entry.getValue()) != null) {\n                     throw new IllegalArgumentException(\"Ingest processor [\" + entry.getKey() + \"] is already registered\");\ndiff --git a/core/src/main/java/org/elasticsearch/ingest/Processor.java b/core/src/main/java/org/elasticsearch/ingest/Processor.java\nindex f018f91e79c..ef1cd882d22 100644\n--- a/core/src/main/java/org/elasticsearch/ingest/Processor.java\n+++ b/core/src/main/java/org/elasticsearch/ingest/Processor.java\n@@ -19,6 +19,10 @@\n \n package org.elasticsearch.ingest;\n \n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n+import org.elasticsearch.env.Environment;\n+import org.elasticsearch.script.ScriptService;\n+\n import java.util.Map;\n \n /**\n@@ -60,4 +64,41 @@ public interface Processor {\n         Processor create(Map<String, Processor.Factory> processorFactories, String tag,\n                          Map<String, Object> config) throws Exception;\n     }\n+\n+    /**\n+     * Infrastructure class that holds services that can be used by processor factories to create processor instances\n+     * and that gets passed around to all {@link org.elasticsearch.plugins.IngestPlugin}s.\n+     */\n+    class Parameters {\n+\n+        /**\n+         * Useful to provide access to the node's environment like config directory to processor factories.\n+         */\n+        public final Environment env;\n+\n+        /**\n+         * Provides processors script support.\n+         */\n+        public final ScriptService scriptService;\n+\n+        /**\n+         * Provides template support to pipeline settings.\n+         */\n+        public final TemplateService templateService;\n+\n+        /**\n+         * Allows processors to read headers set by {@link org.elasticsearch.action.support.ActionFilter}\n+         * instances that have run prior to in ingest.\n+         */\n+        public final ThreadContext threadContext;\n+\n+        public Parameters(Environment env, ScriptService scriptService, TemplateService templateService,\n+                          ThreadContext threadContext) {\n+            this.env = env;\n+            this.scriptService = scriptService;\n+            this.templateService = templateService;\n+            this.threadContext = threadContext;\n+        }\n+\n+    }\n }\ndiff --git a/core/src/main/java/org/elasticsearch/plugins/IngestPlugin.java b/core/src/main/java/org/elasticsearch/plugins/IngestPlugin.java\nindex c1d873c8d6e..74c83a67d51 100644\n--- a/core/src/main/java/org/elasticsearch/plugins/IngestPlugin.java\n+++ b/core/src/main/java/org/elasticsearch/plugins/IngestPlugin.java\n@@ -22,11 +22,7 @@ package org.elasticsearch.plugins;\n import java.util.Collections;\n import java.util.Map;\n \n-import org.elasticsearch.cluster.service.ClusterService;\n-import org.elasticsearch.env.Environment;\n import org.elasticsearch.ingest.Processor;\n-import org.elasticsearch.ingest.TemplateService;\n-import org.elasticsearch.script.ScriptService;\n \n /**\n  * An extension point for {@link Plugin} implementations to add custom ingest processors\n@@ -40,8 +36,7 @@ public interface IngestPlugin {\n      * in pipeline configurations, and the value is a {@link org.elasticsearch.ingest.Processor.Factory}\n      * to create the processor from a given pipeline configuration.\n      */\n-    default Map<String, Processor.Factory> getProcessors(\n-        Environment env, ScriptService scriptService, TemplateService templateService) {\n+    default Map<String, Processor.Factory> getProcessors(Processor.Parameters parameters) {\n         return Collections.emptyMap();\n     }\n }\ndiff --git a/core/src/test/java/org/elasticsearch/ingest/IngestServiceTests.java b/core/src/test/java/org/elasticsearch/ingest/IngestServiceTests.java\nindex e44dc42cbe8..08cde7e04d8 100644\n--- a/core/src/test/java/org/elasticsearch/ingest/IngestServiceTests.java\n+++ b/core/src/test/java/org/elasticsearch/ingest/IngestServiceTests.java\n@@ -24,29 +24,31 @@ import java.util.Collections;\n import java.util.Map;\n \n import org.elasticsearch.common.settings.Settings;\n-import org.elasticsearch.env.Environment;\n import org.elasticsearch.plugins.IngestPlugin;\n-import org.elasticsearch.script.ScriptService;\n import org.elasticsearch.test.ESTestCase;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.mockito.Mockito;\n \n public class IngestServiceTests extends ESTestCase {\n     private final IngestPlugin DUMMY_PLUGIN = new IngestPlugin() {\n         @Override\n-        public Map<String, Processor.Factory> getProcessors(Environment env, ScriptService scriptService, TemplateService templateService) {\n+        public Map<String, Processor.Factory> getProcessors(Processor.Parameters parameters) {\n             return Collections.singletonMap(\"foo\", (factories, tag, config) -> null);\n         }\n     };\n \n     public void testIngestPlugin() {\n-        IngestService ingestService = new IngestService(Settings.EMPTY, null, null, null, Collections.singletonList(DUMMY_PLUGIN));\n+        ThreadPool tp = Mockito.mock(ThreadPool.class);\n+        IngestService ingestService = new IngestService(Settings.EMPTY, tp, null, null, Collections.singletonList(DUMMY_PLUGIN));\n         Map<String, Processor.Factory> factories = ingestService.getPipelineStore().getProcessorFactories();\n         assertTrue(factories.containsKey(\"foo\"));\n         assertEquals(1, factories.size());\n     }\n \n     public void testIngestPluginDuplicate() {\n+        ThreadPool tp = Mockito.mock(ThreadPool.class);\n         IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () ->\n-            new IngestService(Settings.EMPTY, null, null, null, Arrays.asList(DUMMY_PLUGIN, DUMMY_PLUGIN))\n+            new IngestService(Settings.EMPTY, tp, null, null, Arrays.asList(DUMMY_PLUGIN, DUMMY_PLUGIN))\n         );\n         assertTrue(e.getMessage(), e.getMessage().contains(\"already registered\"));\n     }\ndiff --git a/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/IngestCommonPlugin.java b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/IngestCommonPlugin.java\nindex 063ccac2d45..c89f6164de7 100644\n--- a/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/IngestCommonPlugin.java\n+++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/IngestCommonPlugin.java\n@@ -28,12 +28,9 @@ import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n \n-import org.elasticsearch.env.Environment;\n import org.elasticsearch.ingest.Processor;\n-import org.elasticsearch.ingest.TemplateService;\n import org.elasticsearch.plugins.IngestPlugin;\n import org.elasticsearch.plugins.Plugin;\n-import org.elasticsearch.script.ScriptService;\n \n public class IngestCommonPlugin extends Plugin implements IngestPlugin {\n \n@@ -44,14 +41,13 @@ public class IngestCommonPlugin extends Plugin implements IngestPlugin {\n     }\n \n     @Override\n-    public Map<String, Processor.Factory> getProcessors(Environment env, ScriptService scriptService,\n-                                                        TemplateService templateService) {\n+    public Map<String, Processor.Factory> getProcessors(Processor.Parameters parameters) {\n         Map<String, Processor.Factory> processors = new HashMap<>();\n         processors.put(DateProcessor.TYPE, new DateProcessor.Factory());\n-        processors.put(SetProcessor.TYPE, new SetProcessor.Factory(templateService));\n-        processors.put(AppendProcessor.TYPE, new AppendProcessor.Factory(templateService));\n+        processors.put(SetProcessor.TYPE, new SetProcessor.Factory(parameters.templateService));\n+        processors.put(AppendProcessor.TYPE, new AppendProcessor.Factory(parameters.templateService));\n         processors.put(RenameProcessor.TYPE, new RenameProcessor.Factory());\n-        processors.put(RemoveProcessor.TYPE, new RemoveProcessor.Factory(templateService));\n+        processors.put(RemoveProcessor.TYPE, new RemoveProcessor.Factory(parameters.templateService));\n         processors.put(SplitProcessor.TYPE, new SplitProcessor.Factory());\n         processors.put(JoinProcessor.TYPE, new JoinProcessor.Factory());\n         processors.put(UppercaseProcessor.TYPE, new UppercaseProcessor.Factory());\n@@ -59,12 +55,12 @@ public class IngestCommonPlugin extends Plugin implements IngestPlugin {\n         processors.put(TrimProcessor.TYPE, new TrimProcessor.Factory());\n         processors.put(ConvertProcessor.TYPE, new ConvertProcessor.Factory());\n         processors.put(GsubProcessor.TYPE, new GsubProcessor.Factory());\n-        processors.put(FailProcessor.TYPE, new FailProcessor.Factory(templateService));\n+        processors.put(FailProcessor.TYPE, new FailProcessor.Factory(parameters.templateService));\n         processors.put(ForEachProcessor.TYPE, new ForEachProcessor.Factory());\n         processors.put(DateIndexNameProcessor.TYPE, new DateIndexNameProcessor.Factory());\n         processors.put(SortProcessor.TYPE, new SortProcessor.Factory());\n         processors.put(GrokProcessor.TYPE, new GrokProcessor.Factory(builtinPatterns));\n-        processors.put(ScriptProcessor.TYPE, new ScriptProcessor.Factory(scriptService));\n+        processors.put(ScriptProcessor.TYPE, new ScriptProcessor.Factory(parameters.scriptService));\n         return Collections.unmodifiableMap(processors);\n     }\n \ndiff --git a/plugins/ingest-attachment/src/main/java/org/elasticsearch/ingest/attachment/IngestAttachmentPlugin.java b/plugins/ingest-attachment/src/main/java/org/elasticsearch/ingest/attachment/IngestAttachmentPlugin.java\nindex eaba639255b..7846f0ad28c 100644\n--- a/plugins/ingest-attachment/src/main/java/org/elasticsearch/ingest/attachment/IngestAttachmentPlugin.java\n+++ b/plugins/ingest-attachment/src/main/java/org/elasticsearch/ingest/attachment/IngestAttachmentPlugin.java\n@@ -22,18 +22,14 @@ package org.elasticsearch.ingest.attachment;\n import java.util.Collections;\n import java.util.Map;\n \n-import org.elasticsearch.env.Environment;\n import org.elasticsearch.ingest.Processor;\n-import org.elasticsearch.ingest.TemplateService;\n import org.elasticsearch.plugins.IngestPlugin;\n import org.elasticsearch.plugins.Plugin;\n-import org.elasticsearch.script.ScriptService;\n \n public class IngestAttachmentPlugin extends Plugin implements IngestPlugin {\n \n     @Override\n-    public Map<String, Processor.Factory> getProcessors(\n-        Environment env, ScriptService scriptService, TemplateService templateService) {\n+    public Map<String, Processor.Factory> getProcessors(Processor.Parameters parameters) {\n         return Collections.singletonMap(AttachmentProcessor.TYPE, new AttachmentProcessor.Factory());\n     }\n }\ndiff --git a/plugins/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/IngestGeoIpPlugin.java b/plugins/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/IngestGeoIpPlugin.java\nindex 52fbad2c90f..2190036c7fc 100644\n--- a/plugins/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/IngestGeoIpPlugin.java\n+++ b/plugins/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/IngestGeoIpPlugin.java\n@@ -35,25 +35,20 @@ import java.util.zip.GZIPInputStream;\n \n import com.maxmind.geoip2.DatabaseReader;\n import org.apache.lucene.util.IOUtils;\n-import org.elasticsearch.cluster.service.ClusterService;\n-import org.elasticsearch.env.Environment;\n import org.elasticsearch.ingest.Processor;\n-import org.elasticsearch.ingest.TemplateService;\n import org.elasticsearch.plugins.IngestPlugin;\n import org.elasticsearch.plugins.Plugin;\n-import org.elasticsearch.script.ScriptService;\n \n public class IngestGeoIpPlugin extends Plugin implements IngestPlugin, Closeable {\n \n     private Map<String, DatabaseReader> databaseReaders;\n \n     @Override\n-    public Map<String, Processor.Factory> getProcessors(\n-        Environment env, ScriptService scriptService, TemplateService templateService) {\n+    public Map<String, Processor.Factory> getProcessors(Processor.Parameters parameters) {\n         if (databaseReaders != null) {\n             throw new IllegalStateException(\"called onModule twice for geoip plugin!!\");\n         }\n-        Path geoIpConfigDirectory = env.configFile().resolve(\"ingest-geoip\");\n+        Path geoIpConfigDirectory = parameters.env.configFile().resolve(\"ingest-geoip\");\n         try {\n             databaseReaders = loadDatabaseReaders(geoIpConfigDirectory);\n         } catch (IOException e) {\ndiff --git a/plugins/ingest-user-agent/src/main/java/org/elasticsearch/ingest/useragent/IngestUserAgentPlugin.java b/plugins/ingest-user-agent/src/main/java/org/elasticsearch/ingest/useragent/IngestUserAgentPlugin.java\nindex 005f24079ab..ce82d6e1c4d 100644\n--- a/plugins/ingest-user-agent/src/main/java/org/elasticsearch/ingest/useragent/IngestUserAgentPlugin.java\n+++ b/plugins/ingest-user-agent/src/main/java/org/elasticsearch/ingest/useragent/IngestUserAgentPlugin.java\n@@ -20,14 +20,9 @@\n package org.elasticsearch.ingest.useragent;\n \n import org.elasticsearch.common.settings.Setting;\n-import org.elasticsearch.common.settings.Settings;\n-import org.elasticsearch.env.Environment;\n import org.elasticsearch.ingest.Processor;\n-import org.elasticsearch.ingest.TemplateService;\n-import org.elasticsearch.node.NodeModule;\n import org.elasticsearch.plugins.IngestPlugin;\n import org.elasticsearch.plugins.Plugin;\n-import org.elasticsearch.script.ScriptService;\n \n import java.io.IOException;\n import java.io.InputStream;\n@@ -48,16 +43,15 @@ public class IngestUserAgentPlugin extends Plugin implements IngestPlugin {\n     static final String DEFAULT_PARSER_NAME = \"_default_\";\n \n     @Override\n-    public Map<String, Processor.Factory> getProcessors(\n-        Environment env, ScriptService scriptService, TemplateService templateService) {\n-        Path userAgentConfigDirectory = env.configFile().resolve(\"ingest-user-agent\");\n+    public Map<String, Processor.Factory> getProcessors(Processor.Parameters parameters) {\n+        Path userAgentConfigDirectory = parameters.env.configFile().resolve(\"ingest-user-agent\");\n \n         if (Files.exists(userAgentConfigDirectory) == false && Files.isDirectory(userAgentConfigDirectory)) {\n             throw new IllegalStateException(\n                 \"the user agent directory [\" + userAgentConfigDirectory + \"] containing the regex file doesn't exist\");\n         }\n \n-        long cacheSize = CACHE_SIZE_SETTING.get(env.settings());\n+        long cacheSize = CACHE_SIZE_SETTING.get(parameters.env.settings());\n         Map<String, UserAgentParser> userAgentParsers;\n         try {\n             userAgentParsers = createUserAgentParsers(userAgentConfigDirectory, new UserAgentCache(cacheSize));\ndiff --git a/test/framework/src/main/java/org/elasticsearch/ingest/IngestTestPlugin.java b/test/framework/src/main/java/org/elasticsearch/ingest/IngestTestPlugin.java\nindex 53e8f026788..dd38a0707b4 100644\n--- a/test/framework/src/main/java/org/elasticsearch/ingest/IngestTestPlugin.java\n+++ b/test/framework/src/main/java/org/elasticsearch/ingest/IngestTestPlugin.java\n@@ -22,18 +22,15 @@ package org.elasticsearch.ingest;\n import java.util.Collections;\n import java.util.Map;\n \n-import org.elasticsearch.env.Environment;\n import org.elasticsearch.plugins.IngestPlugin;\n import org.elasticsearch.plugins.Plugin;\n-import org.elasticsearch.script.ScriptService;\n \n /**\n  * Adds an ingest processor to be used in tests.\n  */\n public class IngestTestPlugin extends Plugin implements IngestPlugin {\n     @Override\n-    public Map<String, Processor.Factory> getProcessors(\n-        Environment env, ScriptService scriptService, TemplateService templateService) {\n+    public Map<String, Processor.Factory> getProcessors(Processor.Parameters parameters) {\n         return Collections.singletonMap(\"test\", (factories, tag, config) ->\n             new TestProcessor(\"id\", \"test\", doc -> {\n                 doc.setFieldValue(\"processed\", true);",
    "delete AppTest which is only true = true": "diff --git a/src/test/java/com/rarchives/ripme/tst/AppTest.java b/src/test/java/com/rarchives/ripme/tst/AppTest.java\ndeleted file mode 100644\nindex fb9bc680..00000000\n--- a/src/test/java/com/rarchives/ripme/tst/AppTest.java\n+++ /dev/null\n@@ -1,30 +0,0 @@\n-package com.rarchives.ripme.tst;\n-\n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n-\n-public class AppTest extends TestCase {\n-    /**\n-     * Create the test case\n-     *\n-     * @param testName name of the test case\n-     */\n-    public AppTest(String testName) {\n-        super(testName);\n-    }\n-\n-    /**\n-     * @return the suite of tests being tested\n-     */\n-    public static Test suite() {\n-        return new TestSuite(AppTest.class);\n-    }\n-\n-    /**\n-     * Rigourous Test :-)\n-     */\n-    public void testApp() {\n-        assertTrue(true);\n-    }\n-}",
    "Update some comments in NameAnalyzer .": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 5219bbf59..f1fb8575b 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -1357,9 +1357,10 @@ final class NameAnalyzer implements CompilerPass {\n    */\n   private void referenceAliases() {\n \n-    // Minimize the number of connections in the graph by creating a connected cluster for\n-    // names that are used to modify the alias and then assure there is at least one link to the\n-    // cluster from the other alias names to the cluster.\n+    // Minimize the number of connections in the graph by creating a connected\n+    // cluster for names that are used to modify the object and then ensure\n+    // there is at least one link to the cluster from the other names (which are\n+    // removalable on there own) in the AliasSet.\n \n     Set<AliasSet> sets = new HashSet<>(aliases.values());\n     for (AliasSet set : sets) {\n@@ -1377,13 +1378,16 @@ final class NameAnalyzer implements CompilerPass {\n       }\n \n       if (!required.isEmpty()) {\n-        // link the required nodes to themselves\n+        // link the required nodes together to form a cluster so that if one\n+        // is needed, all are kept.\n         for (DiGraphNode<JsName, RefType> node : required) {\n           recordReference(node, first, RefType.REGULAR);\n           recordReference(first, node, RefType.REGULAR);\n         }\n \n-        // link all the other aliases to the one of the required nodes\n+        // link all the other aliases to the one of the required nodes, so\n+        // that if they are kept only if referenced directly, but all the\n+        // required nodes are kept if any are referenced.\n         for (String key : set.names) {\n           DiGraphNode<JsName, RefType> alias = getGraphNode(getName(key, false));\n          ",
    "Remove unneeded explicit Java 8 references on maven - compiler - plugin": "diff --git a/runners/java-fn-execution/pom.xml b/runners/java-fn-execution/pom.xml\nindex 7e23ddcc59..22eb3bee1f 100644\n--- a/runners/java-fn-execution/pom.xml\n+++ b/runners/java-fn-execution/pom.xml\n@@ -32,20 +32,6 @@\n \n   <packaging>jar</packaging>\n \n-  <build>\n-    <plugins>\n-      <plugin>\n-        <!--  Override Beam parent to allow Java8 -->\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-compiler-plugin</artifactId>\n-        <configuration>\n-          <source>1.8</source>\n-          <target>1.8</target>\n-        </configuration>\n-      </plugin>\n-    </plugins>\n-  </build>\n-\n   <dependencies>\n     <dependency>\n       <groupId>org.apache.beam</groupId>\ndiff --git a/runners/pom.xml b/runners/pom.xml\nindex 814b3f11ee..091d51688e 100644\n--- a/runners/pom.xml\n+++ b/runners/pom.xml\n@@ -59,15 +59,6 @@\n         </plugins>\n       </build>\n     </profile>\n-    <profile>\n-      <id>java8</id>\n-      <activation>\n-        <jdk>[1.8,)</jdk>\n-      </activation>\n-      <modules>\n-        <module>gearpump</module>\n-      </modules>\n-    </profile>\n   </profiles>\n \n   <build>\ndiff --git a/sdks/java/fn-execution/pom.xml b/sdks/java/fn-execution/pom.xml\nindex ca520c87d5..5d637fabbb 100644\n--- a/sdks/java/fn-execution/pom.xml\n+++ b/sdks/java/fn-execution/pom.xml\n@@ -34,20 +34,6 @@\n \n   <packaging>jar</packaging>\n \n-  <build>\n-    <plugins>\n-      <plugin>\n-        <!--  Override Beam parent to allow Java8 -->\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-compiler-plugin</artifactId>\n-        <configuration>\n-          <source>1.8</source>\n-          <target>1.8</target>\n-        </configuration>\n-      </plugin>\n-    </plugins>\n-  </build>\n-\n   <dependencies>\n     <dependency>\n       <groupId>org.apache.beam</groupId>\ndiff --git a/sdks/java/harness/pom.xml b/sdks/java/harness/pom.xml\nindex 683011929a..58be3d6651 100644\n--- a/sdks/java/harness/pom.xml\n+++ b/sdks/java/harness/pom.xml\n@@ -151,23 +151,6 @@\n         </plugin>\n       </plugins>\n     </pluginManagement>\n-\n-    <plugins>\n-      <plugin>\n-        <!--  Override Beam parent to allow Java8 -->\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-compiler-plugin</artifactId>\n-        <configuration>\n-          <source>1.8</source>\n-          <target>1.8</target>\n-        </configuration>\n-      </plugin>\n-\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-surefire-plugin</artifactId>\n-      </plugin>\n-    </plugins>\n   </build>\n \n   <dependencies>\ndiff --git a/sdks/java/java8tests/pom.xml b/sdks/java/java8tests/pom.xml\nindex 1fc84ed4c1..993aead6ed 100644\n--- a/sdks/java/java8tests/pom.xml\n+++ b/sdks/java/java8tests/pom.xml\n@@ -34,18 +34,6 @@\n     user.</description>\n \n   <build>\n-    <pluginManagement>\n-      <plugins>\n-        <plugin>\n-          <artifactId>maven-compiler-plugin</artifactId>\n-          <configuration>\n-             <source>1.8</source>\n-             <target>1.8</target>\n-          </configuration>\n-        </plugin>\n-      </plugins>\n-    </pluginManagement>\n-\n     <plugins>\n       <!-- Coverage analysis for unit tests. -->\n       <plugin>\ndiff --git a/sdks/java/pom.xml b/sdks/java/pom.xml\nindex c6ab2349f4..451cb0ac59 100644\n--- a/sdks/java/pom.xml\n+++ b/sdks/java/pom.xml\n@@ -46,18 +46,4 @@\n     <module>javadoc</module> -->\n     <module>nexmark</module>\n   </modules>\n-\n-  <profiles>\n-    <profile>\n-      <id>java8-tests</id>\n-      <activation>\n-        <jdk>[1.8,)</jdk>\n-      </activation>\n-      <modules>\n-        <module>harness</module>\n-        <module>container</module>\n-        <module>java8tests</module>\n-      </modules>\n-    </profile>\n-  </profiles>\n </project>",
    "Added support for probing presence of components . . git - svn - id : http : / / svn . igniterealtime . org / svn / repos / wildfire / trunk @ 4339 b35dd754 - fafc - 0310 - a699 - 88a17e54d16e": "diff --git a/src/plugins/presence/changelog.html b/src/plugins/presence/changelog.html\nindex 8a01f0390..d557aa81a 100644\n--- a/src/plugins/presence/changelog.html\n+++ b/src/plugins/presence/changelog.html\n@@ -44,8 +44,9 @@\n Presence Plugin Changelog\n </h1>\n \n-<p><b>1.2.1</b> -- June ??, 2006</p>\n+<p><b>1.3.0</b> -- July 10, 2006</p>\n <ul>\n+    <li>Added support for probing presence of components.\n     <li>Fixed minor problem in readme.html -- the example Apache redirect was incorrect.\n </ul>\n \ndiff --git a/src/plugins/presence/plugin.xml b/src/plugins/presence/plugin.xml\nindex 50f4329fd..e374fd91e 100644\n--- a/src/plugins/presence/plugin.xml\n+++ b/src/plugins/presence/plugin.xml\n@@ -5,8 +5,8 @@\n     <name>Presence Service</name>\n     <description>Exposes presence information through HTTP.</description>\n     <author>Jive Software</author>\n-    <version>1.2.0</version>\n-    <date>4/19/2006</date>\n+    <version>1.3.0</version>\n+    <date>7/10/2006</date>\n     <minServerVersion>2.5.1</minServerVersion>\n \t\n     <adminconsole>\t\t\ndiff --git a/src/plugins/presence/readme.html b/src/plugins/presence/readme.html\nindex b76aef2b1..ef651670f 100644\n--- a/src/plugins/presence/readme.html\n+++ b/src/plugins/presence/readme.html\n@@ -58,7 +58,7 @@ Presence Plugin Readme\n \n <p>\n The presence plugin is a service that provides simple presence information over HTTP. \n-It can be used to display an online status icon for a user on a web page or to\n+It can be used to display an online status icon for a user or component on a web page or to\n poll for presence information from a web service.\n </p>\n \ndiff --git a/src/plugins/presence/src/java/org/jivesoftware/wildfire/plugin/PresencePlugin.java b/src/plugins/presence/src/java/org/jivesoftware/wildfire/plugin/PresencePlugin.java\nindex bfb6da146..26e8ea8ac 100644\n--- a/src/plugins/presence/src/java/org/jivesoftware/wildfire/plugin/PresencePlugin.java\n+++ b/src/plugins/presence/src/java/org/jivesoftware/wildfire/plugin/PresencePlugin.java\n@@ -12,7 +12,6 @@\n package org.jivesoftware.wildfire.plugin;\r\n \r\n import org.jivesoftware.util.JiveGlobals;\r\n-import org.jivesoftware.util.Log;\r\n import org.jivesoftware.wildfire.PresenceManager;\r\n import org.jivesoftware.wildfire.XMPPServer;\r\n import org.jivesoftware.wildfire.container.Plugin;\r\n@@ -20,20 +19,20 @@ import org.jivesoftware.wildfire.container.PluginManager;\n import org.jivesoftware.wildfire.user.User;\r\n import org.jivesoftware.wildfire.user.UserManager;\r\n import org.jivesoftware.wildfire.user.UserNotFoundException;\r\n+import org.xmpp.component.Component;\r\n import org.xmpp.component.ComponentManager;\r\n import org.xmpp.component.ComponentManagerFactory;\r\n-import org.xmpp.component.Component;\r\n import org.xmpp.packet.JID;\r\n-import org.xmpp.packet.Presence;\r\n import org.xmpp.packet.Packet;\r\n+import org.xmpp.packet.Presence;\r\n \r\n import java.io.File;\r\n-import java.util.HashMap;\r\n-import java.lang.Thread;\r\n+import java.util.Map;\r\n+import java.util.concurrent.ConcurrentHashMap;\r\n \r\n /**\r\n- * Plugin that includes a servlet that provides information about the presence type of the\r\n- * users in the server. For security reasons, the XMPP spec does not allow anyone to see\r\n+ * Plugin that includes a servlet that provides information about users' and components'\r\n+ * presence in the server. For security reasons, the XMPP spec does not allow anyone to see\r\n  * the presence of any user. Only the users that are subscribed to the presence of other\r\n  * users may see their presences.<p/>\r\n  *\r\n@@ -41,19 +40,25 @@ import java.lang.Thread;\n  * so that anyone or only the users that are subscribed to a user presence may see the presence\r\n  * of other users.<p/>\r\n  *\r\n- * Currently, the servlet provides information about user presences in two formats. In XML format\r\n- * or using images.\r\n+ * Currently, the servlet provides presence information in two formats: 1) In XML format\r\n+ * and 2) using images.<p>\r\n+ *\r\n+ * The presence plugin is also a component so that it can probe presences of other components.\r\n+ * The new component will use <tt>presence</tt> as the subdomain subdomain.\r\n  *\r\n  * @author Gaston Dombiak\r\n  */\r\n public class PresencePlugin implements Plugin, Component {\r\n \r\n+    private static final String subdomain = \"presence\";\r\n+\r\n     private UserManager userManager;\r\n     private PresenceManager presenceManager;\r\n     private PluginManager pluginManager;\r\n     private ComponentManager componentManager;\r\n     private String hostname;\r\n-    private HashMap<String, Presence> probedPresence;\r\n+    private Map<String, Presence> probedPresence;\r\n+    private JID componentJID;\r\n \r\n     public void initializePlugin(PluginManager manager, File pluginDirectory) {\r\n         pluginManager = manager;\r\n@@ -61,11 +66,12 @@ public class PresencePlugin implements Plugin, Component {\n         userManager = server.getUserManager();\r\n         presenceManager = server.getPresenceManager();\r\n         hostname = server.getServerInfo().getName();\r\n-        probedPresence = new HashMap<String, Presence>();\r\n-\r\n+        probedPresence = new ConcurrentHashMap<String, Presence>();\r\n+        componentJID = new JID(subdomain + \".\" + hostname);\r\n+        // Register new component\r\n         componentManager = ComponentManagerFactory.getComponentManager();\r\n         try {\r\n-            componentManager.addComponent(\"presence\", this);\r\n+            componentManager.addComponent(subdomain, this);\r\n         }\r\n         catch (Exception e) {\r\n             componentManager.getLog().error(e);\r\n@@ -75,9 +81,9 @@ public class PresencePlugin implements Plugin, Component {\n     public void destroyPlugin() {\r\n         userManager = null;\r\n         presenceManager = null;\r\n-\r\n+        // Remove presence plugin component\r\n         try {\r\n-            componentManager.removeComponent(\"presence\");\r\n+            componentManager.removeComponent(subdomain);\r\n             componentManager = null;\r\n         }\r\n         catch (Exception e) {\r\n@@ -103,9 +109,14 @@ public class PresencePlugin implements Plugin, Component {\n     }\r\n \r\n     public void processPacket(Packet packet) {\r\n+        // Check that we are getting an answer to a presence probe\r\n         if (packet instanceof Presence) {\r\n             Presence presence = (Presence) packet;\r\n-            probedPresence.put(presence.getFrom().toString(), presence);\r\n+            if (presence.isAvailable() || presence.getType() == Presence.Type.unavailable ||\r\n+                    presence.getType() == Presence.Type.error) {\r\n+                // Store answer of presence probes\r\n+                probedPresence.put(presence.getFrom().toString(), presence);\r\n+            }\r\n         }\r\n     }\r\n \r\n@@ -152,29 +163,30 @@ public class PresencePlugin implements Plugin, Component {\n         if (!hostname.equals(targetJID.getDomain())) {\r\n             // Sender is requesting information about component presence, so we send a \r\n             // presence probe to the component.\r\n-            presenceManager.probePresence(new JID(\"presence.\" + hostname), targetJID);\r\n+            presenceManager.probePresence(componentJID, targetJID);\r\n \r\n+            // Wait 30 seconds until we get the probe presence result\r\n             int count = 0;\r\n-            while (!probedPresence.containsKey(jid)) {\r\n+            Presence presence = probedPresence.get(jid);\r\n+            while (presence == null) {\r\n+                if (count > 300) {\r\n+                    // After 30 seconds, timeout\r\n+                    throw new UserNotFoundException(\r\n+                            \"Request for component presence has timed-out.\");\r\n+                }\r\n                 try {\r\n                     Thread.sleep(100);\r\n                 }\r\n                 catch (InterruptedException e) {\r\n                     // don't care!\r\n                 }\r\n+                presence = probedPresence.get(jid);\r\n \r\n                 count++;\r\n-\r\n-                if (count > 300) {\r\n-                    // After 30 seconds, timeout\r\n-                    throw new UserNotFoundException(\"Request for user presence has timed-out.\");\r\n-                }\r\n             }\r\n-\r\n-            // Clean-up\r\n-            Presence presence = probedPresence.get(jid);\r\n+            // Clean-up probe presence result\r\n             probedPresence.remove(jid);\r\n-\r\n+            // Return component presence\r\n             return presence;\r\n         }\r\n         if (targetJID.getNode() == null ||\r",
    "Adding signature test for GetServersProcedure": "diff --git a/enterprise/core-edge/src/test/java/org/neo4j/coreedge/discovery/procedures/GetServersProcedureTest.java b/enterprise/core-edge/src/test/java/org/neo4j/coreedge/discovery/procedures/GetServersProcedureTest.java\nindex 46f558ab6f7..b5bf8d42b87 100644\n--- a/enterprise/core-edge/src/test/java/org/neo4j/coreedge/discovery/procedures/GetServersProcedureTest.java\n+++ b/enterprise/core-edge/src/test/java/org/neo4j/coreedge/discovery/procedures/GetServersProcedureTest.java\n@@ -19,6 +19,10 @@\n  */\n package org.neo4j.coreedge.discovery.procedures;\n \n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.Matchers;\n+import org.junit.Test;\n+\n import java.util.Arrays;\n import java.util.HashMap;\n import java.util.List;\n@@ -27,11 +31,6 @@ import java.util.Set;\n import java.util.UUID;\n import java.util.stream.Collectors;\n \n-import org.hamcrest.MatcherAssert;\n-import org.hamcrest.Matchers;\n-import org.junit.Test;\n-\n-import org.neo4j.collection.RawIterator;\n import org.neo4j.coreedge.core.consensus.LeaderLocator;\n import org.neo4j.coreedge.core.consensus.NoLeaderFoundException;\n import org.neo4j.coreedge.discovery.CoreAddresses;\n@@ -42,26 +41,41 @@ import org.neo4j.coreedge.discovery.EdgeTopology;\n import org.neo4j.coreedge.identity.ClusterId;\n import org.neo4j.coreedge.identity.MemberId;\n import org.neo4j.helpers.AdvertisedSocketAddress;\n-import org.neo4j.kernel.api.exceptions.ProcedureException;\n+import org.neo4j.kernel.api.proc.FieldSignature;\n+import org.neo4j.kernel.api.proc.ProcedureSignature;\n import org.neo4j.logging.NullLogProvider;\n \n import static java.util.Collections.emptySet;\n import static java.util.stream.Collectors.toList;\n-\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.containsInAnyOrder;\n import static org.junit.Assert.assertEquals;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n-\n import static org.neo4j.coreedge.identity.RaftTestMember.member;\n import static org.neo4j.helpers.collection.Iterators.asList;\n-import static org.neo4j.logging.NullLogProvider.getInstance;\n+import static org.neo4j.kernel.api.proc.Neo4jTypes.NTInteger;\n+import static org.neo4j.kernel.api.proc.Neo4jTypes.NTString;\n \n public class GetServersProcedureTest\n {\n     private ClusterId clusterId = new ClusterId( UUID.randomUUID() );\n \n+    @Test\n+    public void shouldHaveCorrectSignature() throws Exception\n+    {\n+        // given\n+        final GetServersProcedure proc = new GetServersProcedure( null, null, NullLogProvider.getInstance() );\n+\n+        // when\n+        ProcedureSignature signature = proc.signature();\n+\n+        // then\n+        assertThat( signature.outputSignature(), containsInAnyOrder( new FieldSignature( \"address\", NTString ),\n+                        new FieldSignature( \"role\", NTString ),\n+                        new FieldSignature( \"expiry\", NTInteger ) ) );\n+    }\n+\n     @Test\n     public void shouldReturnCoreServersWithReadRouteAndSingleWriteActions() throws Exception\n     {\n@@ -71,7 +85,7 @@ public class GetServersProcedureTest\n         LeaderLocator leaderLocator = mock( LeaderLocator.class );\n         when( leaderLocator.getLeader() ).thenReturn( member( 0 ) );\n \n-        Map<MemberId, CoreAddresses> coreMembers = new HashMap<>();\n+        Map<MemberId,CoreAddresses> coreMembers = new HashMap<>();\n         coreMembers.put( member( 0 ), coreAddresses( 0 ) );\n         coreMembers.put( member( 1 ), coreAddresses( 1 ) );\n         coreMembers.put( member( 2 ), coreAddresses( 2 ) );\n@@ -94,8 +108,7 @@ public class GetServersProcedureTest\n                 new Object[]{coreAddresses( 1 ).getRaftServer().toString(), \"ROUTE\", Long.MAX_VALUE},\n                 new Object[]{coreAddresses( 1 ).getRaftServer().toString(), \"READ\", Long.MAX_VALUE},\n                 new Object[]{coreAddresses( 2 ).getRaftServer().toString(), \"ROUTE\", Long.MAX_VALUE},\n-                new Object[]{coreAddresses( 2 ).getRaftServer().toString(), \"READ\", Long.MAX_VALUE} )\n-        );\n+                new Object[]{coreAddresses( 2 ).getRaftServer().toString(), \"READ\", Long.MAX_VALUE} ) );\n     }\n \n     @Test\n@@ -107,7 +120,7 @@ public class GetServersProcedureTest\n         LeaderLocator leaderLocator = mock( LeaderLocator.class );\n         when( leaderLocator.getLeader() ).thenReturn( member( 0 ) );\n \n-        Map<MemberId, CoreAddresses> coreMembers = new HashMap<>();\n+        Map<MemberId,CoreAddresses> coreMembers = new HashMap<>();\n         coreMembers.put( member( 0 ), coreAddresses( 0 ) );\n \n         final CoreTopology clusterTopology = new CoreTopology( clusterId, false, coreMembers );\n@@ -133,7 +146,7 @@ public class GetServersProcedureTest\n         // given\n         final CoreTopologyService topologyService = mock( CoreTopologyService.class );\n \n-        Map<MemberId, CoreAddresses> coreMembers = new HashMap<>();\n+        Map<MemberId,CoreAddresses> coreMembers = new HashMap<>();\n         MemberId theLeader = member( 0 );\n         coreMembers.put( theLeader, coreAddresses( 0 ) );\n \n@@ -143,8 +156,8 @@ public class GetServersProcedureTest\n         LeaderLocator leaderLocator = mock( LeaderLocator.class );\n         when( leaderLocator.getLeader() ).thenReturn( theLeader );\n \n-        GetServersProcedure procedure = new GetServersProcedure( topologyService, leaderLocator,\n-                NullLogProvider.getInstance() );\n+        GetServersProcedure procedure =\n+                new GetServersProcedure( topologyService, leaderLocator, NullLogProvider.getInstance() );\n \n         // when\n         final List<Object[]> members = asList( procedure.apply( null, new Object[0] ) );\n@@ -154,8 +167,7 @@ public class GetServersProcedureTest\n                 new Object[]{coreAddresses( 0 ).getRaftServer().toString(), \"ROUTE\", Long.MAX_VALUE},\n                 new Object[]{coreAddresses( 0 ).getRaftServer().toString(), \"WRITE\", Long.MAX_VALUE},\n                 new Object[]{coreAddresses( 0 ).getRaftServer().toString(), \"READ\", Long.MAX_VALUE},\n-                new Object[]{coreAddresses( 1 ).getRaftServer().toString(), \"READ\", Long.MAX_VALUE}\n-        ) );\n+                new Object[]{coreAddresses( 1 ).getRaftServer().toString(), \"READ\", Long.MAX_VALUE} ) );\n     }\n \n     @Test\n@@ -164,7 +176,7 @@ public class GetServersProcedureTest\n         // given\n         final CoreTopologyService topologyService = mock( CoreTopologyService.class );\n \n-        Map<MemberId, CoreAddresses> coreMembers = new HashMap<>();\n+        Map<MemberId,CoreAddresses> coreMembers = new HashMap<>();\n         MemberId theLeader = member( 0 );\n         coreMembers.put( theLeader, coreAddresses( 0 ) );\n \n@@ -174,8 +186,8 @@ public class GetServersProcedureTest\n         LeaderLocator leaderLocator = mock( LeaderLocator.class );\n         when( leaderLocator.getLeader() ).thenReturn( theLeader );\n \n-        GetServersProcedure procedure = new GetServersProcedure( topologyService, leaderLocator,\n-                NullLogProvider.getInstance() );\n+        GetServersProcedure procedure =\n+                new GetServersProcedure( topologyService, leaderLocator, NullLogProvider.getInstance() );\n \n         // when\n         final List<Object[]> members = asList( procedure.apply( null, new Object[0] ) );\n@@ -184,8 +196,7 @@ public class GetServersProcedureTest\n         assertThat( members, containsInAnyOrder(\n                 new Object[]{coreAddresses( 0 ).getRaftServer().toString(), \"WRITE\", Long.MAX_VALUE},\n                 new Object[]{coreAddresses( 0 ).getRaftServer().toString(), \"READ\", Long.MAX_VALUE},\n-                new Object[]{coreAddresses( 0 ).getRaftServer().toString(), \"ROUTE\", Long.MAX_VALUE}\n-        ) );\n+                new Object[]{coreAddresses( 0 ).getRaftServer().toString(), \"ROUTE\", Long.MAX_VALUE} ) );\n     }\n \n     @Test\n@@ -194,7 +205,7 @@ public class GetServersProcedureTest\n         // given\n         final CoreTopologyService topologyService = mock( CoreTopologyService.class );\n \n-        Map<MemberId, CoreAddresses> coreMembers = new HashMap<>();\n+        Map<MemberId,CoreAddresses> coreMembers = new HashMap<>();\n         coreMembers.put( member( 0 ), coreAddresses( 0 ) );\n \n         when( topologyService.coreServers() ).thenReturn( new CoreTopology( clusterId, false, coreMembers ) );\n@@ -203,8 +214,8 @@ public class GetServersProcedureTest\n         LeaderLocator leaderLocator = mock( LeaderLocator.class );\n         when( leaderLocator.getLeader() ).thenThrow( new NoLeaderFoundException() );\n \n-        GetServersProcedure procedure = new GetServersProcedure( topologyService, leaderLocator,\n-                NullLogProvider.getInstance() );\n+        GetServersProcedure procedure =\n+                new GetServersProcedure( topologyService, leaderLocator, NullLogProvider.getInstance() );\n \n         // when\n         final List<Object[]> members = asList( procedure.apply( null, new Object[0] ) );\n@@ -220,7 +231,7 @@ public class GetServersProcedureTest\n         // given\n         final CoreTopologyService topologyService = mock( CoreTopologyService.class );\n \n-        Map<MemberId, CoreAddresses> coreMembers = new HashMap<>();\n+        Map<MemberId,CoreAddresses> coreMembers = new HashMap<>();\n         coreMembers.put( member( 0 ), coreAddresses( 0 ) );\n \n         when( topologyService.coreServers() ).thenReturn( new CoreTopology( clusterId, false, coreMembers ) );\n@@ -229,8 +240,8 @@ public class GetServersProcedureTest\n         LeaderLocator leaderLocator = mock( LeaderLocator.class );\n         when( leaderLocator.getLeader() ).thenReturn( member( 1 ) );\n \n-        GetServersProcedure procedure = new GetServersProcedure( topologyService, leaderLocator,\n-                NullLogProvider.getInstance() );\n+        GetServersProcedure procedure =\n+                new GetServersProcedure( topologyService, leaderLocator, NullLogProvider.getInstance() );\n \n         // when\n         final List<Object[]> members = asList( procedure.apply( null, new Object[0] ) );\n@@ -242,9 +253,7 @@ public class GetServersProcedureTest\n \n     static Set<EdgeAddresses> addresses( int... ids )\n     {\n-        return Arrays.stream( ids )\n-                .mapToObj( GetServersProcedureTest::edgeAddresses )\n-                .collect( Collectors.toSet() );\n+        return Arrays.stream( ids ).mapToObj( GetServersProcedureTest::edgeAddresses ).collect( Collectors.toSet() );\n     }\n \n     static CoreAddresses coreAddresses( int id )",
    "reformatted the code for fixing JASSIST - 209 . .": "diff --git a/Readme.html b/Readme.html\nindex a32457e..9782bfe 100644\n--- a/Readme.html\n+++ b/Readme.html\n@@ -283,7 +283,7 @@ see javassist.Dump.\n \n <p>-version 3.19\n <ul>\n-<li>JIRA JASSIST-158, 205, 206, 207, 208, 211, 212, 216, 220, 223, 224, 227, 230, 234, 235, 236.\n+<li>JIRA JASSIST-158, 205, 206, 207, 208, 209, 211, 212, 216, 220, 223, 224, 227, 230, 234, 235, 236.\n </ul>\n </p>\n \ndiff --git a/src/main/javassist/bytecode/annotation/ClassMemberValue.java b/src/main/javassist/bytecode/annotation/ClassMemberValue.java\nindex 6a1bcd8..7169d72 100644\n--- a/src/main/javassist/bytecode/annotation/ClassMemberValue.java\n+++ b/src/main/javassist/bytecode/annotation/ClassMemberValue.java\n@@ -101,10 +101,10 @@ public class ClassMemberValue extends MemberValue {\n     public String getValue() {\n         String v = cp.getUtf8Info(valueIndex);\n         try {\n-\t\t\treturn SignatureAttribute.toTypeSignature(v).jvmTypeName();\n-\t\t} catch (BadBytecode e) {\n-\t\t\tthrow new RuntimeException(e);\n-\t\t}\n+            return SignatureAttribute.toTypeSignature(v).jvmTypeName();\n+        } catch (BadBytecode e) {\n+            throw new RuntimeException(e);\n+        }\n     }\n \n     /**",
    "cross browser test working wip": "diff --git a/karate-core/src/main/java/com/intuit/karate/http/RequestHandler.java b/karate-core/src/main/java/com/intuit/karate/http/RequestHandler.java\nindex e3bfde707..a5fc4e9d5 100644\n--- a/karate-core/src/main/java/com/intuit/karate/http/RequestHandler.java\n+++ b/karate-core/src/main/java/com/intuit/karate/http/RequestHandler.java\n@@ -95,10 +95,10 @@ public class RequestHandler implements ServerHandler {\n                 }\n             }\n             if (session == null) {\n-                if (homePagePath.equals(request.getPath())) {\n+                if (config.isAutoCreateSession() || homePagePath.equals(request.getPath())) {\n                     session = createSession();\n                     newSession = true;\n-                    logger.debug(\"creating new session for '{}': {}\", homePagePath, session);\n+                    logger.debug(\"creating new session for '{}': {}\", request.getPath(), session);\n                 } else {\n                     logger.warn(\"session not found: {}\", request);\n                     ResponseBuilder rb = response().deleteSessionCookie(sessionId);\ndiff --git a/karate-core/src/main/java/com/intuit/karate/http/ServerConfig.java b/karate-core/src/main/java/com/intuit/karate/http/ServerConfig.java\nindex f440d509a..38f971ef0 100644\n--- a/karate-core/src/main/java/com/intuit/karate/http/ServerConfig.java\n+++ b/karate-core/src/main/java/com/intuit/karate/http/ServerConfig.java\n@@ -42,6 +42,7 @@ public class ServerConfig {\n     private String sessionCookieName = \"karate.sid\";\n     private boolean stripContextPathFromRequest;\n     private boolean useGlobalSession;\n+    private boolean autoCreateSession;\n     private SessionStore sessionStore = JvmSessionStore.INSTANCE;\n     private int sessionExpirySeconds = 60 * 10;\n     private ResourceResolver resourceResolver = new FileSystemResourceResolver(null);\n@@ -94,7 +95,11 @@ public class ServerConfig {\n \n     public boolean isUseGlobalSession() {\n         return useGlobalSession;\n-    }        \n+    }\n+\n+    public boolean isAutoCreateSession() {\n+        return autoCreateSession;\n+    }\n \n     public int getSessionExpirySeconds() {\n         return sessionExpirySeconds;\n@@ -162,11 +167,16 @@ public class ServerConfig {\n         stripContextPathFromRequest = value;\n         return this;\n     }\n-    \n+\n     public ServerConfig useGlobalSession(boolean value) {\n         useGlobalSession = value;\n         return this;\n-    }    \n+    }\n+\n+    public ServerConfig autoCreateSession(boolean value) {\n+        autoCreateSession = value;\n+        return this;\n+    }\n \n     public ServerConfig sessionStore(SessionStore value) {\n         sessionStore = value;\ndiff --git a/karate-e2e-tests/src/test/java/driver/00.feature b/karate-e2e-tests/src/test/java/driver/00.feature\nindex 8c2f47bfb..ce7e0088b 100644\n--- a/karate-e2e-tests/src/test/java/driver/00.feature\n+++ b/karate-e2e-tests/src/test/java/driver/00.feature\n@@ -8,13 +8,13 @@ Scenario:\n * call read('01.feature')\n \n # waitFor() | waitForText() | waitForEnabled()\n-#* call read('02.feature')\n+* call read('02.feature')\n \n # script() | waitUntil()\n-#* call read('03.feature')\n+* call read('03.feature')\n \n # cookies\n-#* call read('04.feature')\n+* call read('04.feature')\n \n # driver.intercept\n-#* call read('05.feature')\n+* if (driverType == 'chrome') karate.call('05.feature')\ndiff --git a/karate-e2e-tests/src/test/java/driver/00_outline.feature b/karate-e2e-tests/src/test/java/driver/00_outline.feature\nindex 6a2d287b8..f3aa37cd9 100644\n--- a/karate-e2e-tests/src/test/java/driver/00_outline.feature\n+++ b/karate-e2e-tests/src/test/java/driver/00_outline.feature\n@@ -4,8 +4,8 @@ Scenario Outline:\n * call read('00.feature')\n \n Examples:\n-| driver       | dimensions                                 |\n+| driverType       | dimensions                                 |\n | chrome       | { x: 0, y: 0, width: 300, height: 800 }    |\n | chromedriver | { x: 50, y: 0, width: 250, height: 800 }   |\n | geckodriver  | { x: 600, y: 0, width: 300, height: 800 }  |\n-| safaridriver | { x: 1000, y: 0, width: 400, height: 800 } |\n+#| safaridriver | { x: 1000, y: 0, width: 400, height: 800 } |\ndiff --git a/karate-e2e-tests/src/test/java/driver/ServerStarter.java b/karate-e2e-tests/src/test/java/driver/ServerStarter.java\nindex 2054b193a..844ed9c60 100644\n--- a/karate-e2e-tests/src/test/java/driver/ServerStarter.java\n+++ b/karate-e2e-tests/src/test/java/driver/ServerStarter.java\n@@ -20,6 +20,7 @@ public class ServerStarter {\n     public static HttpServer start(int port) {\n         ServerConfig config = new ServerConfig()\n                 .fileSystemRoot(\"src/test/java/driver/html\")\n+                .autoCreateSession(true)\n                 .homePagePath(\"00\");\n         RequestHandler handler = new RequestHandler(config);\n         return new HttpServer(port, handler);\ndiff --git a/karate-e2e-tests/src/test/java/driver/karate-config-xbrowser.js b/karate-e2e-tests/src/test/java/driver/karate-config-xbrowser.js\nindex 88469b9cb..a8a88e956 100644\n--- a/karate-e2e-tests/src/test/java/driver/karate-config-xbrowser.js\n+++ b/karate-e2e-tests/src/test/java/driver/karate-config-xbrowser.js\n@@ -1,4 +1,4 @@\n function fn() {\n-  karate.log('using driver:', driver);\n-  karate.configure('driver', {type: driver, showDriverLog: true});\n+  karate.log('using driver:', driverType);\n+  karate.configure('driver', {type: driverType, showDriverLog: true});\n }",
    "Remove the - - experimental_stl = command line option . . Also rearrange dependencies on the STL a bit - - now that it cannot be changed .": "diff --git a/src/main/java/com/google/devtools/build/lib/bazel/rules/cpp/BazelCcImportRule.java b/src/main/java/com/google/devtools/build/lib/bazel/rules/cpp/BazelCcImportRule.java\nindex 98ba63374f..fcb162b61d 100644\n--- a/src/main/java/com/google/devtools/build/lib/bazel/rules/cpp/BazelCcImportRule.java\n+++ b/src/main/java/com/google/devtools/build/lib/bazel/rules/cpp/BazelCcImportRule.java\n@@ -39,7 +39,6 @@ public final class BazelCcImportRule implements RuleDefinition {\n         .add(\n             attr(CcToolchain.CC_TOOLCHAIN_TYPE_ATTRIBUTE_NAME, NODEP_LABEL)\n                 .value(CppRuleClasses.ccToolchainTypeAttribute(env)))\n-        .add(attr(\":stl\", LABEL).value(BazelCppRuleClasses.STL))\n         .build();\n   }\n \ndiff --git a/src/main/java/com/google/devtools/build/lib/bazel/rules/cpp/BazelCppRuleClasses.java b/src/main/java/com/google/devtools/build/lib/bazel/rules/cpp/BazelCppRuleClasses.java\nindex 089dd47729..1ea477759f 100644\n--- a/src/main/java/com/google/devtools/build/lib/bazel/rules/cpp/BazelCppRuleClasses.java\n+++ b/src/main/java/com/google/devtools/build/lib/bazel/rules/cpp/BazelCppRuleClasses.java\n@@ -44,11 +44,8 @@ import com.google.devtools.build.lib.analysis.PlatformConfiguration;\n import com.google.devtools.build.lib.analysis.RuleDefinition;\n import com.google.devtools.build.lib.analysis.RuleDefinitionEnvironment;\n import com.google.devtools.build.lib.analysis.config.HostTransition;\n-import com.google.devtools.build.lib.cmdline.Label;\n import com.google.devtools.build.lib.packages.Attribute;\n-import com.google.devtools.build.lib.packages.Attribute.LabelLateBoundDefault;\n import com.google.devtools.build.lib.packages.AttributeMap;\n-import com.google.devtools.build.lib.packages.BuildType;\n import com.google.devtools.build.lib.packages.ImplicitOutputsFunction.SafeImplicitOutputsFunction;\n import com.google.devtools.build.lib.packages.RuleClass;\n import com.google.devtools.build.lib.packages.RuleClass.Builder.RuleClassType;\n@@ -56,7 +53,6 @@ import com.google.devtools.build.lib.packages.SkylarkProviderIdentifier;\n import com.google.devtools.build.lib.packages.TriState;\n import com.google.devtools.build.lib.rules.cpp.CcModule.CcSkylarkInfo;\n import com.google.devtools.build.lib.rules.cpp.CcToolchain;\n-import com.google.devtools.build.lib.rules.cpp.CppConfiguration;\n import com.google.devtools.build.lib.rules.cpp.CppFileTypes;\n import com.google.devtools.build.lib.rules.cpp.CppRuleClasses;\n import com.google.devtools.build.lib.rules.cpp.CppRuleClasses.CcIncludeScanningRule;\n@@ -72,31 +68,6 @@ public class BazelCppRuleClasses {\n   static final SafeImplicitOutputsFunction CC_BINARY_IMPLICIT_OUTPUTS =\n       fromFunctions(CppRuleClasses.CC_BINARY_STRIPPED, CppRuleClasses.CC_BINARY_DEBUG_PACKAGE);\n \n-  /**\n-   * Returns the STL prerequisite of the rule.\n-   *\n-   * <p>If rule has an implicit $stl_default attribute returns STL version set on the command line\n-   * or if not set, the value of the $stl_default attribute. Returns {@code null} otherwise.\n-   */\n-  public static final LabelLateBoundDefault<?> STL =\n-      LabelLateBoundDefault.fromTargetConfiguration(\n-          CppConfiguration.class,\n-          null,\n-          (rule, attributes, cppConfig) -> {\n-            Label stl = null;\n-            if (attributes.has(\"$stl_default\", BuildType.LABEL)) {\n-              Label stlConfigLabel = cppConfig.getStl();\n-              Label stlRuleLabel = attributes.get(\"$stl_default\", BuildType.LABEL);\n-              if (stlConfigLabel == null) {\n-                stl = stlRuleLabel;\n-              } else if (!stlConfigLabel.equals(rule.getLabel()) && stlRuleLabel != null) {\n-                // prevents self-reference and a cycle through standard STL in the dependency graph\n-                stl = stlConfigLabel;\n-              }\n-            }\n-            return stl;\n-          });\n-\n   static final FileTypeSet ALLOWED_SRC_FILES =\n       FileTypeSet.of(\n           CPP_SOURCE,\n@@ -173,8 +144,6 @@ public class BazelCppRuleClasses {\n           </p>\n           <!-- #END_BLAZE_RULE.ATTRIBUTE -->*/\n           .add(attr(\"copts\", STRING_LIST))\n-          .add(attr(\"$stl_default\", LABEL).value(env.getToolsLabel(\"//tools/cpp:stl\")))\n-          .add(attr(\":stl\", LABEL).value(STL))\n           .build();\n     }\n \n@@ -392,20 +361,6 @@ public class BazelCppRuleClasses {\n            </p>\n           <!-- #END_BLAZE_RULE.ATTRIBUTE -->*/\n           .add(attr(\"linkstatic\", BOOLEAN).value(true))\n-          .override(\n-              attr(\"$stl_default\", LABEL)\n-                  .value(\n-                      new Attribute.ComputedDefault() {\n-                        @Override\n-                        public Object getDefault(AttributeMap rule) {\n-                          // Every cc_rule depends implicitly on STL to make\n-                          // sure that the correct headers are used for inclusion.\n-                          // The only exception is STL itself,\n-                          // to avoid cycles in the dependency graph.\n-                          Label stl = env.getToolsLabel(\"//tools/cpp:stl\");\n-                          return rule.getLabel().equals(stl) ? null : stl;\n-                        }\n-                      }))\n           .add(\n               attr(\"$def_parser\", LABEL)\n                   .cfg(HostTransition.INSTANCE)\ndiff --git a/src/main/java/com/google/devtools/build/lib/rules/cpp/CcCompilationHelper.java b/src/main/java/com/google/devtools/build/lib/rules/cpp/CcCompilationHelper.java\nindex d2b27f141d..fdc7f0d6df 100644\n--- a/src/main/java/com/google/devtools/build/lib/rules/cpp/CcCompilationHelper.java\n+++ b/src/main/java/com/google/devtools/build/lib/rules/cpp/CcCompilationHelper.java\n@@ -1177,17 +1177,28 @@ public final class CcCompilationHelper {\n         !featureConfiguration.isEnabled(CppRuleClasses.MODULE_MAP_WITHOUT_EXTERN_MODULE));\n   }\n \n+  private static CcInfo getStlDependency(RuleContext ruleContext) {\n+    if (ruleContext.attributes().has(\"$stl\", BuildType.LABEL)) {\n+      return ruleContext.getPrerequisite(\"$stl\", Mode.TARGET, CcInfo.PROVIDER);\n+    } else if (ruleContext.attributes().has(\":stl\", BuildType.LABEL)) {\n+      // This is here because some Starlark rules use configuration_field() to depend on the STL\n+      // which results in an attribute like this. In order to keep the world ticking along, we need\n+      // to support that until they are deleted.\n+      return ruleContext.getPrerequisite(\":stl\", Mode.TARGET, CcInfo.PROVIDER);\n+    } else {\n+      return null;\n+    }\n+  }\n+\n   private Iterable<CppModuleMap> collectModuleMaps() {\n     // Cpp module maps may be null for some rules. We filter the nulls out at the end.\n     List<CppModuleMap> result =\n         ccCompilationContexts.stream()\n             .map(CPP_DEPS_TO_MODULES)\n             .collect(toCollection(ArrayList::new));\n-    if (ruleContext.getRule().getAttributeDefinition(\":stl\") != null) {\n-      CcInfo stl = ruleContext.getPrerequisite(\":stl\", Mode.TARGET, CcInfo.PROVIDER);\n-      if (stl != null) {\n-        result.add(stl.getCcCompilationContext().getCppModuleMap());\n-      }\n+    CcInfo stl = getStlDependency(ruleContext);\n+    if (stl != null) {\n+      result.add(stl.getCcCompilationContext().getCppModuleMap());\n     }\n \n     if (ccToolchain != null) {\n@@ -2074,26 +2085,20 @@ public final class CcCompilationHelper {\n \n   /**\n    * Merges the STL and toolchain contexts into context builder. The STL is automatically determined\n-   * using the \":stl\" attribute.\n+   * using the \"$stl\" (or, historically, \":stl\") attribute.\n    */\n   private static void mergeToolchainDependentCcCompilationContext(\n       RuleContext ruleContext,\n       CcToolchainProvider toolchain,\n       CcCompilationContext.Builder ccCompilationContextBuilder) {\n-    if (ruleContext.getRule().getAttributeDefinition(\":stl\") != null) {\n-      TransitiveInfoCollection stl = ruleContext.getPrerequisite(\":stl\", Mode.TARGET);\n-      if (stl != null) {\n-        CcInfo ccInfo = stl.get(CcInfo.PROVIDER);\n-        CcCompilationContext ccCompilationContext =\n-            ccInfo != null ? ccInfo.getCcCompilationContext() : null;\n-        if (ccCompilationContext == null) {\n-          ruleContext.ruleError(\n-              \"Unable to merge the STL '\" + stl.getLabel() + \"' and toolchain contexts\");\n-          return;\n-        }\n+    CcInfo stl = getStlDependency(ruleContext);\n+    if (stl != null) {\n+      CcCompilationContext ccCompilationContext = stl.getCcCompilationContext();\n+      if (ccCompilationContext != null) {\n         ccCompilationContextBuilder.mergeDependentCcCompilationContext(ccCompilationContext);\n       }\n     }\n+\n     if (toolchain != null) {\n       ccCompilationContextBuilder.mergeDependentCcCompilationContext(\n           toolchain.getCcCompilationContext());\ndiff --git a/src/main/java/com/google/devtools/build/lib/rules/cpp/CppConfiguration.java b/src/main/java/com/google/devtools/build/lib/rules/cpp/CppConfiguration.java\nindex 51d6c2e1a4..f993a598d2 100644\n--- a/src/main/java/com/google/devtools/build/lib/rules/cpp/CppConfiguration.java\n+++ b/src/main/java/com/google/devtools/build/lib/rules/cpp/CppConfiguration.java\n@@ -196,7 +196,6 @@ public final class CppConfiguration extends BuildConfiguration.Fragment\n \n   // TODO(b/113849758): Remove once it's not needed for toolchain selection in CppConfiguration.\n   private final Label ccToolchainLabel;\n-  private final Label stlLabel;\n \n   // TODO(kmensah): This is temporary until all the Skylark functions that need this can be removed.\n   private final PathFragment nonConfiguredSysroot;\n@@ -277,7 +276,6 @@ public final class CppConfiguration extends BuildConfiguration.Fragment\n         params.fdoPath,\n         params.fdoOptimizeLabel,\n         params.ccToolchainLabel,\n-        params.stlLabel,\n         params.sysrootLabel == null\n             ? cppToolchainInfo.getDefaultSysroot()\n             : params.sysrootLabel.getPackageFragment(),\n@@ -314,7 +312,6 @@ public final class CppConfiguration extends BuildConfiguration.Fragment\n       PathFragment fdoPath,\n       Label fdoOptimizeLabel,\n       Label ccToolchainLabel,\n-      Label stlLabel,\n       PathFragment nonConfiguredSysroot,\n       Label sysrootLabel,\n       ImmutableList<String> compilerFlags,\n@@ -343,7 +340,6 @@ public final class CppConfiguration extends BuildConfiguration.Fragment\n     this.fdoPath = fdoPath;\n     this.fdoOptimizeLabel = fdoOptimizeLabel;\n     this.ccToolchainLabel = ccToolchainLabel;\n-    this.stlLabel = stlLabel;\n     this.nonConfiguredSysroot = nonConfiguredSysroot;\n     this.sysrootLabel = sysrootLabel;\n     this.compilerFlags = compilerFlags;\n@@ -792,14 +788,6 @@ public final class CppConfiguration extends BuildConfiguration.Fragment\n     return cppOptions.linkCompileOutputSeparately;\n   }\n \n-  /**\n-   * Returns the STL label if given on the command line. {@code null}\n-   * otherwise.\n-   */\n-  public Label getStl() {\n-    return stlLabel;\n-  }\n-\n   @SkylarkConfigurationField(\n       name = \"stl\",\n       doc = \"The label of the STL target\",\n@@ -807,14 +795,11 @@ public final class CppConfiguration extends BuildConfiguration.Fragment\n       defaultInToolRepository = false\n   )\n   public Label getSkylarkStl() {\n-    if (stlLabel == null) {\n-      try {\n-        return Label.parseAbsolute(\"//third_party/stl\", ImmutableMap.of());\n-      } catch (LabelSyntaxException e) {\n-        throw new IllegalStateException(\"STL label not formatted correctly\", e);\n-      }\n+    try {\n+      return Label.parseAbsolute(\"//third_party/stl\", ImmutableMap.of());\n+    } catch (LabelSyntaxException e) {\n+      throw new IllegalStateException(\"STL label not formatted correctly\", e);\n     }\n-    return stlLabel;\n   }\n \n   public boolean isFdo() {\ndiff --git a/src/main/java/com/google/devtools/build/lib/rules/cpp/CppConfigurationLoader.java b/src/main/java/com/google/devtools/build/lib/rules/cpp/CppConfigurationLoader.java\nindex 956254af10..7c1aab25e1 100644\n--- a/src/main/java/com/google/devtools/build/lib/rules/cpp/CppConfigurationLoader.java\n+++ b/src/main/java/com/google/devtools/build/lib/rules/cpp/CppConfigurationLoader.java\n@@ -86,7 +86,6 @@ public class CppConfigurationLoader implements ConfigurationFragmentFactory {\n     protected final CppOptions cppOptions;\n     protected final Label crosstoolTop;\n     protected final Label ccToolchainLabel;\n-    protected final Label stlLabel;\n     protected final PathFragment fdoPath;\n     protected final Label fdoOptimizeLabel;\n     protected final Label sysrootLabel;\n@@ -104,7 +103,6 @@ public class CppConfigurationLoader implements ConfigurationFragmentFactory {\n         Label fdoOptimizeLabel,\n         Label crosstoolTop,\n         Label ccToolchainLabel,\n-        Label stlLabel,\n         Label sysrootLabel,\n         CcToolchainConfigInfo ccToolchainConfigInfo) {\n       this.transformedCpu = transformedCpu;\n@@ -116,7 +114,6 @@ public class CppConfigurationLoader implements ConfigurationFragmentFactory {\n       this.fdoOptimizeLabel = fdoOptimizeLabel;\n       this.crosstoolTop = crosstoolTop;\n       this.ccToolchainLabel = ccToolchainLabel;\n-      this.stlLabel = stlLabel;\n       this.sysrootLabel = sysrootLabel;\n       this.ccToolchainConfigInfo = ccToolchainConfigInfo;\n     }\n@@ -201,14 +198,6 @@ public class CppConfigurationLoader implements ConfigurationFragmentFactory {\n \n     Label sysrootLabel = getSysrootLabel(cToolchain, cppOptions.libcTopLabel);\n \n-    Label stlLabel = null;\n-    if (cppOptions.stl != null) {\n-      stlLabel = RedirectChaser.followRedirects(env, cppOptions.stl, \"stl\");\n-      if (stlLabel == null) {\n-        return null;\n-      }\n-    }\n-\n     String ccToolchainSuiteProtoAttributeValue =\n         StringUtil.emptyToNull(\n             NonconfigurableAttributeMapper.of((Rule) crosstoolTop).get(\"proto\", Type.STRING));\n@@ -251,7 +240,6 @@ public class CppConfigurationLoader implements ConfigurationFragmentFactory {\n         fdoProfileLabel,\n         crosstoolTopLabel,\n         ccToolchainLabel,\n-        stlLabel,\n         sysrootLabel,\n         ccToolchainConfigInfo);\n   }\ndiff --git a/src/main/java/com/google/devtools/build/lib/rules/cpp/CppOptions.java b/src/main/java/com/google/devtools/build/lib/rules/cpp/CppOptions.java\nindex cca8f851bf..87e3605987 100644\n--- a/src/main/java/com/google/devtools/build/lib/rules/cpp/CppOptions.java\n+++ b/src/main/java/com/google/devtools/build/lib/rules/cpp/CppOptions.java\n@@ -470,19 +470,6 @@ public class CppOptions extends FragmentOptions {\n       help = \"If set, use of fdo_absolute_profile_path will raise an error.\")\n   public boolean enableFdoProfileAbsolutePath;\n \n-  @Option(\n-    name = \"experimental_stl\",\n-    converter = LabelConverter.class,\n-    defaultValue = \"null\",\n-    documentationCategory = OptionDocumentationCategory.TOOLCHAIN,\n-    effectTags = {OptionEffectTag.AFFECTS_OUTPUTS, OptionEffectTag.ACTION_COMMAND_LINES},\n-    metadataTags = {OptionMetadataTag.EXPERIMENTAL},\n-    help =\n-        \"If set, use this label instead of the default STL implementation. \"\n-            + \"This option is EXPERIMENTAL and may go away in a future release.\"\n-  )\n-  public Label stl;\n-\n   @Option(\n     name = \"save_temps\",\n     defaultValue = \"false\",\ndiff --git a/src/test/java/com/google/devtools/build/lib/analysis/BuildViewTest.java b/src/test/java/com/google/devtools/build/lib/analysis/BuildViewTest.java\nindex 3b6221ad82..0f1efb8ec4 100644\n--- a/src/test/java/com/google/devtools/build/lib/analysis/BuildViewTest.java\n+++ b/src/test/java/com/google/devtools/build/lib/analysis/BuildViewTest.java\n@@ -1044,33 +1044,6 @@ public class BuildViewTest extends BuildViewTestBase {\n             Pair.of(\"//cycle:foo\", \"//cycle:foo\"), Pair.of(\"//cycle:bat\", \"//cycle:bas\"));\n   }\n \n-  @Test\n-  public void testCircularDependencyWithLateBoundLabel() throws Exception {\n-    if (getInternalTestExecutionMode() != TestConstants.InternalTestExecutionMode.NORMAL) {\n-      // TODO(b/67412276): handle cycles properly.\n-      return;\n-    }\n-    scratch.file(\"cycle/BUILD\",\n-        \"cc_library(name = 'foo', deps = [':bar'])\",\n-        \"cc_library(name = 'bar')\");\n-    useConfiguration(\"--experimental_stl=//cycle:foo\");\n-    reporter.removeHandler(failFastHandler);\n-    EventBus eventBus = new EventBus();\n-    LoadingFailureRecorder loadingFailureRecorder = new LoadingFailureRecorder();\n-    AnalysisFailureRecorder analysisFailureRecorder = new AnalysisFailureRecorder();\n-    eventBus.register(loadingFailureRecorder);\n-    eventBus.register(analysisFailureRecorder);\n-    AnalysisResult result = update(eventBus, defaultFlags().with(Flag.KEEP_GOING), \"//cycle:foo\");\n-    assertThat(result.hasError()).isTrue();\n-    assertContainsEvent(\"in cc_library rule //cycle:foo: cycle in dependency graph:\");\n-    // This needs to be reported as an anlysis-phase cycle; the cycle only occurs due to the stl\n-    // command-line option, which is part of the configuration, and which is used due to the\n-    // late-bound label.\n-    assertThat(Iterables.transform(analysisFailureRecorder.events, ANALYSIS_EVENT_TO_STRING_PAIR))\n-        .containsExactly(Pair.of(\"//cycle:foo\", \"//cycle:foo\"));\n-    assertThat(loadingFailureRecorder.events).isEmpty();\n-  }\n-\n   @Test\n   public void testLoadingErrorReportedCorrectly() throws Exception {\n     scratch.file(\"a/BUILD\", \"cc_library(name='a')\");\ndiff --git a/src/test/java/com/google/devtools/build/lib/analysis/select/AbstractAttributeMapperTest.java b/src/test/java/com/google/devtools/build/lib/analysis/select/AbstractAttributeMapperTest.java\nindex 4901884590..cadcf7c381 100644\n--- a/src/test/java/com/google/devtools/build/lib/analysis/select/AbstractAttributeMapperTest.java\n+++ b/src/test/java/com/google/devtools/build/lib/analysis/select/AbstractAttributeMapperTest.java\n@@ -19,7 +19,6 @@ import static org.junit.Assert.fail;\n import com.google.devtools.build.lib.analysis.util.BuildViewTestCase;\n import com.google.devtools.build.lib.cmdline.Label;\n import com.google.devtools.build.lib.packages.AbstractAttributeMapper;\n-import com.google.devtools.build.lib.packages.Attribute;\n import com.google.devtools.build.lib.packages.AttributeContainer;\n import com.google.devtools.build.lib.packages.AttributeMap;\n import com.google.devtools.build.lib.packages.BuildType;\n@@ -131,13 +130,4 @@ public class AbstractAttributeMapperTest extends BuildViewTestCase {\n         .map(Label::toString)\n         .collect(Collectors.toList());\n   }\n-\n-  @Test\n-  public void testComputedDefault() throws Exception {\n-    // Should return a valid ComputedDefault instance since this is a computed default:\n-    assertThat(mapper.getComputedDefault(\"$stl_default\", BuildType.LABEL))\n-        .isInstanceOf(Attribute.ComputedDefault.class);\n-    // Should return null since this *isn't* a computed default:\n-    assertThat(mapper.getComputedDefault(\"srcs\", BuildType.LABEL_LIST)).isNull();\n-  }\n }\ndiff --git a/src/test/java/com/google/devtools/build/lib/analysis/select/AggregatingAttributeMapperTest.java b/src/test/java/com/google/devtools/build/lib/analysis/select/AggregatingAttributeMapperTest.java\nindex 073c751766..1bd508a27e 100644\n--- a/src/test/java/com/google/devtools/build/lib/analysis/select/AggregatingAttributeMapperTest.java\n+++ b/src/test/java/com/google/devtools/build/lib/analysis/select/AggregatingAttributeMapperTest.java\n@@ -21,7 +21,6 @@ import com.google.common.base.Joiner;\n import com.google.common.base.Verify;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Iterables;\n-import com.google.devtools.build.lib.actions.MutableActionGraph.ActionConflictException;\n import com.google.devtools.build.lib.analysis.BaseRuleClasses;\n import com.google.devtools.build.lib.analysis.ConfiguredRuleClassProvider;\n import com.google.devtools.build.lib.analysis.ConfiguredTarget;\n@@ -269,8 +268,7 @@ public class AggregatingAttributeMapperTest extends AbstractAttributeMapperTest\n     }\n \n     @Override\n-    public ConfiguredTarget create(RuleContext ruleContext)\n-        throws InterruptedException, RuleErrorException, ActionConflictException {\n+    public ConfiguredTarget create(RuleContext ruleContext) {\n       throw new UnsupportedOperationException();\n     }\n   }\ndiff --git a/src/test/java/com/google/devtools/build/lib/rules/cpp/CcLibraryConfiguredTargetTest.java b/src/test/java/com/google/devtools/build/lib/rules/cpp/CcLibraryConfiguredTargetTest.java\nindex a82bade540..eca984f1a1 100644\n--- a/src/test/java/com/google/devtools/build/lib/rules/cpp/CcLibraryConfiguredTargetTest.java\n+++ b/src/test/java/com/google/devtools/build/lib/rules/cpp/CcLibraryConfiguredTargetTest.java\n@@ -587,16 +587,16 @@ public class CcLibraryConfiguredTargetTest extends BuildViewTestCase {\n         .setupCrosstool(mockToolsConfig, MockCcSupport.HEADER_MODULES_FEATURE_CONFIGURATION);\n     useConfiguration(\"--cpu=k8\");\n     ConfiguredTarget x =\n+\n         scratchConfiguredTarget(\n             \"foo\",\n             \"x\",\n             \"package(features = ['header_modules'])\",\n             \"cc_library(name = 'x', srcs = ['x.cc'], deps = [':y'])\",\n             \"cc_library(name = 'y', hdrs = ['y.h'])\");\n-    assertThat(\n-            ActionsTestUtil.baseNamesOf(\n-                getOutputGroup(x, OutputGroupInfo.COMPILATION_PREREQUISITES)))\n-        .isEqualTo(\"y.h y.cppmap stl.cppmap crosstool.cppmap x.cppmap y.pic.pcm x.cc\");\n+    assertThat(ActionsTestUtil.baseArtifactNames(\n+        getOutputGroup(x, OutputGroupInfo.COMPILATION_PREREQUISITES)))\n+        .containsAllOf(\"y.h\", \"y.cppmap\", \"crosstool.cppmap\", \"x.cppmap\", \"y.pic.pcm\", \"x.cc\");\n   }\n \n   @Test\n@@ -1016,9 +1016,8 @@ public class CcLibraryConfiguredTargetTest extends BuildViewTestCase {\n     useConfiguration();\n     writeSimpleCcLibrary();\n     CppModuleMapAction action = getCppModuleMapAction(\"//module:map\");\n-    assertThat(ActionsTestUtil.baseArtifactNames(action.getDependencyArtifacts())).containsExactly(\n-        \"stl.cppmap\",\n-        \"crosstool.cppmap\");\n+    assertThat(ActionsTestUtil.baseArtifactNames(action.getDependencyArtifacts()))\n+        .contains(\"crosstool.cppmap\");\n     assertThat(artifactsToStrings(action.getPrivateHeaders()))\n         .containsExactly(\"src module/a.h\");\n     assertThat(action.getPublicHeaders()).isEmpty();\n@@ -1507,15 +1506,4 @@ public class CcLibraryConfiguredTargetTest extends BuildViewTestCase {\n     // Should not crash\n     scratchConfiguredTarget(\"a\", \"a\", \"cc_library(name='a', hdrs=['a.h'])\");\n   }\n-\n-  @Test\n-  public void testStlWithAlias() throws Exception {\n-    scratch.file(\"a/BUILD\",\n-        \"cc_library(name='a')\",\n-        \"alias(name='stl', actual=':realstl')\",\n-        \"cc_library(name='realstl')\");\n-\n-    useConfiguration(\"--experimental_stl=//a:stl\");\n-    getConfiguredTarget(\"//a:a\");\n-  }\n }\ndiff --git a/src/test/java/com/google/devtools/build/lib/skylark/SkylarkDefinedAspectsTest.java b/src/test/java/com/google/devtools/build/lib/skylark/SkylarkDefinedAspectsTest.java\nindex b5b5cb1199..ef4c733d42 100644\n--- a/src/test/java/com/google/devtools/build/lib/skylark/SkylarkDefinedAspectsTest.java\n+++ b/src/test/java/com/google/devtools/build/lib/skylark/SkylarkDefinedAspectsTest.java\n@@ -317,23 +317,23 @@ public class SkylarkDefinedAspectsTest extends AnalysisTestCase {\n         \"   s = depset([target.label])\",\n         \"   c = depset([ctx.rule.kind])\",\n         \"   a = ctx.rule.attr\",\n-        \"   if hasattr(a, '_stl') and a._stl:\",\n-        \"       s += a._stl.target_labels\",\n-        \"       c += a._stl.rule_kinds\",\n-        \"   if hasattr(a, '_stl_default') and a._stl_default:\",\n-        \"       s += a._stl_default.target_labels\",\n-        \"       c += a._stl_default.rule_kinds\",\n+        \"   if hasattr(a, '_defaultattr') and a._defaultattr:\",\n+        \"       s += a._defaultattr.target_labels\",\n+        \"       c += a._defaultattr.rule_kinds\",\n+        \"   if hasattr(a, '_cc_toolchain') and a._cc_toolchain:\",\n+        \"       s += a._cc_toolchain.target_labels\",\n+        \"       c += a._cc_toolchain.rule_kinds\",\n         \"   return struct(target_labels = s, rule_kinds = c)\",\n         \"\",\n         \"def _rule_impl(ctx):\",\n         \"   pass\",\n         \"\",\n         \"my_rule = rule(implementation = _rule_impl,\",\n-        \"   attrs = { '_stl' : attr.label(default = Label('//test:xxx')) },\",\n+        \"   attrs = { '_defaultattr' : attr.label(default = Label('//test:xxx')) },\",\n         \")\",\n         \"MyAspect = aspect(\",\n         \"   implementation=_impl,\",\n-        \"   attr_aspects=['_stl', '_stl_default'],\",\n+        \"   attr_aspects=['_defaultattr', '_cc_toolchain'],\",\n         \")\");\n     scratch.file(\n         \"test/BUILD\",\n@@ -349,16 +349,17 @@ public class SkylarkDefinedAspectsTest extends AnalysisTestCase {\n     AspectValue aspectValue = analysisResult.getAspects().iterator().next();\n     ConfiguredAspect configuredAspect = aspectValue.getConfiguredAspect();\n     assertThat(configuredAspect).isNotNull();\n-    Object names = configuredAspect.get(\"target_labels\");\n-    assertThat(names).isInstanceOf(SkylarkNestedSet.class);\n-    assertThat(\n-            transform(\n-                ((SkylarkNestedSet) names).toCollection(),\n-                o -> {\n-                  assertThat(o).isInstanceOf(Label.class);\n-                  return ((Label) o).getName();\n-                }))\n-        .containsExactly(\"stl\", \"xxx\", \"yyy\");\n+    Object nameSet = configuredAspect.get(\"target_labels\");\n+    ImmutableList<String> names = ImmutableList.copyOf(transform(\n+        ((SkylarkNestedSet) nameSet).toCollection(),\n+        o -> {\n+          assertThat(o).isInstanceOf(Label.class);\n+          return ((Label) o).getName();\n+        }));\n+\n+    assertThat(names).containsAllOf(\"xxx\", \"yyy\");\n+    // Third is the C++ toolchain; its name changes between Blaze and Bazel.\n+    assertThat(names).hasSize(3);\n   }\n \n   @Test",
    "Add errorName and errorType to QueryError": "diff --git a/presto-client/src/main/java/com/facebook/presto/client/QueryError.java b/presto-client/src/main/java/com/facebook/presto/client/QueryError.java\nindex d4e565b43d..6bb0d0ee63 100644\n--- a/presto-client/src/main/java/com/facebook/presto/client/QueryError.java\n+++ b/presto-client/src/main/java/com/facebook/presto/client/QueryError.java\n@@ -28,6 +28,8 @@ public class QueryError\n     private final String message;\n     private final String sqlState;\n     private final int errorCode;\n+    private final String errorName;\n+    private final String errorType;\n     private final ErrorLocation errorLocation;\n     private final FailureInfo failureInfo;\n \n@@ -36,12 +38,16 @@ public class QueryError\n             @JsonProperty(\"message\") String message,\n             @JsonProperty(\"sqlState\") String sqlState,\n             @JsonProperty(\"errorCode\") int errorCode,\n+            @JsonProperty(\"errorName\") String errorName,\n+            @JsonProperty(\"errorType\") String errorType,\n             @JsonProperty(\"errorLocation\") ErrorLocation errorLocation,\n             @JsonProperty(\"failureInfo\") FailureInfo failureInfo)\n     {\n         this.message = message;\n         this.sqlState = sqlState;\n         this.errorCode = errorCode;\n+        this.errorName = errorName;\n+        this.errorType = errorType;\n         this.errorLocation = errorLocation;\n         this.failureInfo = failureInfo;\n     }\n@@ -66,6 +72,20 @@ public class QueryError\n         return errorCode;\n     }\n \n+    @NotNull\n+    @JsonProperty\n+    public String getErrorName()\n+    {\n+        return errorName;\n+    }\n+\n+    @NotNull\n+    @JsonProperty\n+    public String getErrorType()\n+    {\n+        return errorType;\n+    }\n+\n     @Nullable\n     @JsonProperty\n     public ErrorLocation getErrorLocation()\n@@ -87,6 +107,8 @@ public class QueryError\n                 .add(\"message\", message)\n                 .add(\"sqlState\", sqlState)\n                 .add(\"errorCode\", errorCode)\n+                .add(\"errorName\", errorName)\n+                .add(\"errorType\", errorType)\n                 .add(\"errorLocation\", errorLocation)\n                 .add(\"failureInfo\", failureInfo)\n                 .toString();\ndiff --git a/presto-main/src/main/java/com/facebook/presto/server/StatementResource.java b/presto-main/src/main/java/com/facebook/presto/server/StatementResource.java\nindex 64eab7d6e8..8ec9c1c200 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/StatementResource.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/StatementResource.java\n@@ -34,6 +34,7 @@ import com.facebook.presto.execution.TaskId;\n import com.facebook.presto.execution.TaskInfo;\n import com.facebook.presto.operator.ExchangeClient;\n import com.facebook.presto.spi.ConnectorSession;\n+import com.facebook.presto.spi.ErrorCode;\n import com.facebook.presto.spi.Page;\n import com.facebook.presto.spi.block.Block;\n import com.facebook.presto.spi.type.StandardTypes;\n@@ -92,6 +93,7 @@ import static com.facebook.presto.client.PrestoHeaders.PRESTO_SET_SESSION;\n import static com.facebook.presto.server.ResourceUtil.assertRequest;\n import static com.facebook.presto.server.ResourceUtil.createSessionForRequest;\n import static com.facebook.presto.spi.StandardErrorCode.INTERNAL_ERROR;\n+import static com.facebook.presto.spi.StandardErrorCode.toErrorType;\n import static com.facebook.presto.util.Failures.toFailure;\n import static com.google.common.base.Preconditions.checkArgument;\n import static com.google.common.base.Preconditions.checkNotNull;\n@@ -624,15 +626,23 @@ public class StatementResource\n                 log.warn(\"Query %s in state %s has no failure info\", queryInfo.getQueryId(), state);\n                 failure = toFailure(new RuntimeException(format(\"Query is %s (reason unknown)\", state))).toFailureInfo();\n             }\n-            int errorCode;\n+\n+            ErrorCode errorCode;\n             if (queryInfo.getErrorCode() != null) {\n-                errorCode = queryInfo.getErrorCode().getCode();\n+                errorCode = queryInfo.getErrorCode();\n             }\n             else {\n-                errorCode = INTERNAL_ERROR.toErrorCode().getCode();\n+                errorCode = INTERNAL_ERROR.toErrorCode();\n                 log.warn(\"Failed query %s has no error code\", queryInfo.getQueryId());\n             }\n-            return new QueryError(failure.getMessage(), null, errorCode, failure.getErrorLocation(), failure);\n+            return new QueryError(\n+                    failure.getMessage(),\n+                    null,\n+                    errorCode.getCode(),\n+                    errorCode.getName(),\n+       ",
    "remove try - catch block from objc sample code": "diff --git a/modules/swagger-codegen/src/main/resources/objc/api_doc.mustache b/modules/swagger-codegen/src/main/resources/objc/api_doc.mustache\nindex c27f6425388..7acaada7e32 100644\n--- a/modules/swagger-codegen/src/main/resources/objc/api_doc.mustache\n+++ b/modules/swagger-codegen/src/main/resources/objc/api_doc.mustache\n@@ -42,29 +42,21 @@ Method | HTTP request | Description\n {{#allParams}}{{{dataType}}} {{paramName}} = {{{example}}}; // {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}\n {{/allParams}}\n \n-@try\n-{ \n-    {{classname}} *apiInstance = [[{{classname}} alloc] init];\n-\n-{{#summary}}    // {{{.}}}\n-{{/summary}}    [apiInstance {{#vendorExtensions.x-objc-operationId}}{{vendorExtensions.x-objc-operationId}}{{/vendorExtensions.x-objc-operationId}}{{^vendorExtensions.x-objc-operationId}}{{nickname}}{{#hasParams}}With{{vendorExtensions.firstParamAltName}}{{/hasParams}}{{^hasParams}}WithCompletionHandler: {{/hasParams}}{{/vendorExtensions.x-objc-operationId}}{{#allParams}}{{#secondaryParam}}\n-                  {{paramName}}{{/secondaryParam}}:{{paramName}}{{/allParams}}\n-              {{#hasParams}}completionHandler: {{/hasParams}}^({{#returnBaseType}}{{{returnType}}} output, {{/returnBaseType}}NSError* error) {\n+{{classname}}*apiInstance = [[{{classname}} alloc] init];\n+\n+{{#summary}}// {{{.}}}\n+{{/summary}}[apiInstance {{#vendorExtensions.x-objc-operationId}}{{vendorExtensions.x-objc-operationId}}{{/vendorExtensions.x-objc-operationId}}{{^vendorExtensions.x-objc-operationId}}{{nickname}}{{#hasParams}}With{{vendorExtensions.firstParamAltName}}{{/hasParams}}{{^hasParams}}WithCompletionHandler: {{/hasParams}}{{/vendorExtensions.x-objc-operationId}}{{#allParams}}{{#secondaryParam}}\n+              {{paramName}}{{/secondaryParam}}:{{paramName}}{{/allParams}}\n+          {{#hasParams}}completionHandler: {{/hasParams}}^({{#returnBaseType}}{{{returnType}}} output, {{/returnBaseType}}NSError* error) {\n {{#returnType}}\n-                            if (output) {\n-                                NSLog(@\"%@\", output);\n-                            }\n+                        if (output) {\n+                            NSLog(@\"%@\", output);\n+                        }\n {{/returnType}}\n-                            if (error) {\n-                                NSLog(@\"Error: %@\", error);\n-                            }\n-                        }];\n-}\n-@catch (NSException *exception)\n-{\n-    NSLog(@\"Exception when calling {{classname}}->{{operationId}}: %@ \", exception.name);\n-    NSLog(@\"Reason: %@ \", exception.reason);\n-}\n+                        if (error) {\n+                            NSLog(@\"Error calling {{classname}}->{{operationId}}: %@\", error);\n+                        }\n+                    }];\n ```\n \n ### Parameters\ndiff --git a/samples/client/petstore/objc/README.md b/samples/client/petstore/objc/README.md\nindex 17dda837f12..32999a5e80b 100644\n--- a/samples/client/petstore/objc/README.md\n+++ b/samples/client/petstore/objc/README.md\n@@ -6,7 +6,7 @@ This ObjC package is automatically generated by the [Swagger Codegen](https://gi\n \n - API version: 1.0.0\n - Package version: \n-- Build date: 2016-05-16T09:18:48.757+02:00\n+- Build date: 2016-05-18T23:48:57.670+08:00\n - Build package: class io.swagger.codegen.languages.ObjcClientCodegen\n \n ## Requirements\n@@ -124,6 +124,12 @@ Class | Method | HTTP request | Description\n ## Documentation For Authorization\n \n \n+## api_key\n+\n+- **Type**: API key\n+- **API key parameter name**: api_key\n+- **Location**: HTTP header\n+\n ## petstore_auth\n \n - **Type**: OAuth\n@@ -133,12 +139,6 @@ Class | Method | HTTP request | Description\n  - **write:pets**: modify pets in your account\n  - **read:pets**: read your pets\n \n-## api_key\n-\n-- **Type**: API key\n-- **API key parameter name**: api_key\n-- **Location**: HTTP header\n-\n \n ## Author\n \ndiff --git a/samples/client/petstore/objc/SwaggerClient/Api/SWGPetApi.m b/samples/client/petstore/objc/SwaggerClient/Api/SWGPetApi.m\nindex 409f5b86655..e35421fc520 100644\n--- a/samples/client/petstore/objc/SwaggerClient/Api/SWGPetApi.m\n+++ b/samples/client/petstore/objc/SwaggerClient/Api/SWGPetApi.m\n@@ -376,7 +376,7 @@ NSInteger kSWGPetApiMissingParamErrorCode = 234513;\n     NSString *requestContentType = [self.apiClient.sanitizer selectHeaderContentType:@[]];\n \n     // Authentication setting\n-    NSArray *authSettings = @[@\"petstore_auth\", @\"api_key\"];\n+    NSArray *authSettings = @[@\"api_key\", @\"petstore_auth\"];\n \n     id bodyParam = nil;\n     NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];\ndiff --git a/samples/client/petstore/objc/SwaggerClient/Core/SWGConfiguration.m b/samples/client/petstore/objc/SwaggerClient/Core/SWGConfiguration.m\nindex cd8d6e7aeef..630c751ce74 100644\n--- a/samples/client/petstore/objc/SwaggerClient/Core/SWGConfiguration.m\n+++ b/samples/client/petstore/objc/SwaggerClient/Core/SWGConfiguration.m\n@@ -109,13 +109,6 @@\n \n - (NSDictionary *) authSettings {\n     return @{\n-               @\"petstore_auth\":\n-                   @{\n-                       @\"type\": @\"oauth\",\n-                       @\"in\": @\"header\",\n-                       @\"key\": @\"Authorization\",\n-                       @\"value\": [self getAccessToken]\n-                   },\n                @\"api_key\":\n                    @{\n                        @\"type\": @\"api_key\",\n@@ -123,6 +116,13 @@\n                        @\"key\": @\"api_key\",\n                        @\"value\": [self getApiKeyWithPrefix:@\"api_key\"]\n                    },\n+               @\"petstore_auth\":\n+                   @{\n+                       @\"type\": @\"oauth\",\n+                       @\"in\": @\"header\",\n+                       @\"key\": @\"Authorization\",\n+                       @\"value\": [self getAccessToken]\n+                   },\n                };\n }\n \ndiff --git a/samples/client/petstore/objc/docs/SWGPetApi.md b/samples/client/petstore/objc/docs/SWGPetApi.md\nindex a07f0cf067c..92fb2c4de81 100644\n--- a/samples/client/petstore/objc/docs/SWGPetApi.md\n+++ b/samples/client/petstore/objc/docs/SWGPetApi.md\n@@ -34,23 +34,15 @@ SWGConfiguration *apiConfig = [SWGConfiguration sharedConfig];\n \n SWGPet* body = [[SWGPet alloc] init]; // Pet object that needs to be added to the store (optional)\n \n-@try\n-{ \n-    SWGPetApi *apiInstance = [[SWGPetApi alloc] init];\n-\n-    // Add a new pet to the store\n-    [apiInstance addPetWithBody:body\n-              completionHandler: ^(NSError* error) {\n-                            if (error) {\n-                                NSLog(@\"Error: %@\", error);\n-                            }\n-                        }];\n-}\n-@catch (NSException *exception)\n-{\n-    NSLog(@\"Exception when calling SWGPetApi->addPet: %@ \", exception.name);\n-    NSLog(@\"Reason: %@ \", exception.reason);\n-}\n+SWGPetApi*apiInstance = [[SWGPetApi alloc] init];\n+\n+// Add a new pet to the store\n+[apiInstance addPetWithBody:body\n+          completionHandler: ^(NSError* error) {\n+                        if (error) {\n+                            NSLog(@\"Error calling SWGPetApi->addPet: %@\", error);\n+                        }\n+                    }];\n ```\n \n ### Parameters\n@@ -96,24 +88,16 @@ SWGConfiguration *apiConfig = [SWGConfiguration sharedConfig];\n NSNumber* petId = @789; // Pet id to delete\n NSString* apiKey = @\"apiKey_example\"; //  (optional)\n \n-@try\n-{ \n-    SWGPetApi *apiInstance = [[SWGPetApi alloc] init];\n-\n-    // Deletes a pet\n-    [apiInstance deletePetWithPetId:petId\n-                  apiKey:apiKey\n-              completionHandler: ^(NSError* error) {\n-                            if (error) {\n-                                NSLog(@\"Error: %@\", error);\n-                            }\n-                        }];\n-}\n-@catch (NSException *exception)\n-{\n-    NSLog(@\"Exception when calling SWGPetApi->deletePet: %@ \", exception.name);\n-    NSLog(@\"Reason: %@ \", exception.reason);\n-}\n+SWGPetApi*apiInstance = [[SWGPetApi alloc] init];\n+\n+// Deletes a pet\n+[apiInstance deletePetWithPetId:petId\n+              apiKey:apiKey\n+          completionHandler: ^(NSError* error) {\n+                        if (error) {\n+                            NSLog(@\"Error calling SWGPetApi->deletePet: %@\", error);\n+                        }\n+                    }];\n ```\n \n ### Parameters\n@@ -158,26 +142,18 @@ SWGConfiguration *apiConfig = [SWGConfiguration sharedConfig];\n \n NSArray<NSString*>* status = @[@\"available\"]; // Status values that need to be considered for filter (optional) (default to available)\n \n-@try\n-{ \n-    SWGPetApi *apiInstance = [[SWGPetApi alloc] init];\n-\n-    // Finds Pets by status\n-    [apiInstance findPetsByStatusWithStatus:status\n-              completionHandler: ^(NSArray<SWGPet>* output, NSError* error) {\n-                            if (output) {\n-                                NSLog(@\"%@\", output);\n-                            }\n-                            if (error) {\n-                                NSLog(@\"Error: %@\", error);\n-                            }\n-                        }];\n-}\n-@catch (NSException *exception)\n-{\n-    NSLog(@\"Exception when calling SWGPetApi->findPetsByStatus: %@ \", exception.name);\n-    NSLog(@\"Reason: %@ \", exception.reason);\n-}\n+SWGPetApi*apiInstance = [[SWGPetApi alloc] init];\n+\n+// Finds Pets by status\n+[apiInstance findPetsByStatusWithStatus:status\n+          completionHandler: ^(NSArray<SWGPet>* output, NSError* error) {\n+                        if (output) {\n+                            NSLog(@\"%@\", output);\n+                        }\n+                        if (error) {\n+                            NSLog(@\"Error calling SWGPetApi->findPetsByStatus: %@\", error);\n+                        }\n+                    }];\n ```\n \n ### Parameters\n@@ -221,26 +197,18 @@ SWGConfiguration *apiConfig = [SWGConfiguration sharedConfig];\n \n NSArray<NSString*>* tags = @[@\"tags_example\"]; // Tags to filter by (optional)\n \n-@try\n-{ \n-    SWGPetApi *apiInstance = [[SWGPetApi alloc] init];\n-\n-    // Finds Pets by tags\n-    [apiInstance findPetsByTagsWithTags:tags\n-              completionHandler: ^(NSArray<SWGPet>* output, NSError* error) {\n-                            if (output) {\n-                                NSLog(@\"%@\", output);\n-                            }\n-                            if (error) {\n-                                NSLog(@\"Error: %@\", error);\n-                            }\n-                        }];\n-}\n-@catch (NSException *exception)\n-{\n-    NSLog(@\"Exception when calling SWGPetApi->findPetsByTags: %@ \", exception.name);\n-    NSLog(@\"Reason: %@ \", exception.reason);\n-}\n+SWGPetApi*apiInstance = [[SWGPetApi alloc] init];\n+\n+// Finds Pets by tags\n+[apiInstance findPetsByTagsWithTags:tags\n+          completionHandler: ^(NSArray<SWGPet>* output, NSError* error) {\n+                        if (output) {\n+                            NSLog(@\"%@\", output);\n+                        }\n+                        if (error) {\n+                            NSLog(@\"Error calling SWGPetApi->findPetsByTags: %@\", error);\n+                        }\n+                    }];\n ```\n \n ### Parameters\n@@ -278,37 +246,29 @@ Returns a pet when ID < 10.  ID > 10 or nonintegers will simulate API error cond\n ```objc\n SWGConfiguration *apiConfig = [SWGConfiguration sharedConfig];\n \n-// Configure OAuth2 access token for authorization: (authentication scheme: petstore_auth)\n-[apiConfig setAccessToken:@\"YOUR_ACCESS_TOKEN\"];\n-\n // Configure API key authorization: (authentication scheme: api_key)\n [apiConfig setApiKey:@\"YOUR_API_KEY\" forApiKeyIdentifier:@\"api_key\"];\n // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n //[apiConfig setApiKeyPrefix:@\"Bearer\" forApiKeyIdentifier:@\"api_key\"];\n \n+// Configure OAuth2 access token for authorization: (authentication scheme: petstore_auth)\n+[apiConfig setAccessToken:@\"YOUR_ACCESS_TOKEN\"];\n+\n \n NSNumber* petId = @789; // ID of pet that needs to be fetched\n \n-@try\n-{ \n-    SWGPetApi *apiInstance = [[SWGPetApi alloc] init];\n-\n-    // Find pet by ID\n-    [apiInstance getPetByIdWithPetId:petId\n-              completionHandler: ^(SWGPet* output, NSError* error) {\n-                            if (output) {\n-                                NSLog(@\"%@\", output);\n-                            }\n-                            if (error) {\n-                                NSLog(@\"Error: %@\", error);\n-                            }\n-                        }];\n-}\n-@catch (NSException *exception)\n-{\n-    NSLog(@\"Exception when calling SWGPetApi->getPetById: %@ \", exception.name);\n-    NSLog(@\"Reason: %@ \", exception.reason);\n-}\n+SWGPetApi*apiInstance = [[SWGPetApi alloc] init];\n+\n+// Find pet by ID\n+[apiInstance getPetByIdWithPetId:petId\n+          completionHandler: ^(SWGPet* output, NSError* error) {\n+                        if (output) {\n+                            NSLog(@\"%@\", output);\n+                        }\n+                        if (error) {\n+                            NSLog(@\"Error calling SWGPetApi->getPetById: %@\", error);\n+                        }\n+                    }];\n ```\n \n ### Parameters\n@@ -323,7 +283,7 @@ Name | Type | Description  | Notes\n \n ### Authorization\n \n-[petstore_auth](../README.md#petstore_auth), [api_key](../README.md#api_key)\n+[api_key](../README.md#api_key), [petstore_auth](../README.md#petstore_auth)\n \n ### HTTP request headers\n \n@@ -352,23 +312,15 @@ SWGConfiguration *apiConfig = [SWGConfiguration sharedConfig];\n \n SWGPet* body = [[SWGPet alloc] init]; // Pet object that needs to be added to the store (optional)\n \n-@try\n-{ \n-    SWGPetApi *apiInstance = [[SWGPetApi alloc] init];\n-\n-    // Update an existing pet\n-    [apiInstance updatePetWithBody:body\n-              completionHandler: ^(NSError* error) {\n-                            if (error) {\n-                                NSLog(@\"Error: %@\", error);\n-                            }\n-                        }];\n-}\n-@catch (NSException *exception)\n-{\n-    NSLog(@\"Exception when calling SWGPetApi->updatePet: %@ \", exception.name);\n-    NSLog(@\"Reason: %@ \", exception.reason);\n-}\n+SWGPetApi*apiInstance = [[SWGPetApi alloc] init];\n+\n+// Update an existing pet\n+[apiInstance updatePetWithBody:body\n+          completionHandler: ^(NSError* error) {\n+                        if (error) {\n+                            NSLog(@\"Error calling SWGPetApi->updatePet: %@\", error);\n+                        }\n+                    }];\n ```\n \n ### Parameters\n@@ -416,25 +368,17 @@ NSString* petId = @\"petId_example\"; // ID of pet that needs to be updated\n NSString* name = @\"name_example\"; // Updated name of the pet (optional)\n NSString* status = @\"status_example\"; // Updated status of the pet (optional)\n \n-@try\n-{ \n-    SWGPetApi *apiInstance = [[SWGPetApi alloc] init];\n-\n-    // Updates a pet in the store with form data\n-    [apiInstance updatePetWithFormWithPetId:petId\n-                  name:name\n-                  status:status\n-              completionHandler: ^(NSError* error) {\n-                            if (error) {\n-                                NSLog(@\"Error: %@\", error);\n-                            }\n-                        }];\n-}\n-@catch (NSException *exception)\n-{\n-    NSLog(@\"Exception when calling SWGPetApi->updatePetWithForm: %@ \", exception.name);\n-    NSLog(@\"Reason: %@ \", exception.reason);\n-}\n+SWGPetApi*apiInstance = [[SWGPetApi alloc] init];\n+\n+// Updates a pet in the store with form data\n+[apiInstance updatePetWithFormWithPetId:petId\n+              name:name\n+              status:status\n+          completionHandler: ^(NSError* error) {\n+                        if (error) {\n+                            NSLog(@\"Error calling SWGPetApi->updatePetWithForm: %@\", error);\n+                        }\n+                    }];\n ```\n \n ### Parameters\n@@ -484,25 +428,17 @@ NSNumber* petId = @789; // ID of pet to update\n NSString* additionalMetadata = @\"additionalMetadata_example\"; // Additional data to pass to server (optional)\n NSURL* file = [NSURL fileURLWithPath:@\"/path/to/file.txt\"]; // file to upload (optional)\n \n-@try\n-{ \n-    SWGPetApi *apiInstance = [[SWGPetApi alloc] init];\n-\n-    // uploads an image\n-    [apiInstance uploadFileWithPetId:petId\n-                  additionalMetadata:additionalMetadata\n-                  file:file\n-              completionHandler: ^(NSError* error) {\n-                            if (error) {\n-                                NSLog(@\"Error: %@\", error);\n-                            }\n-                        }];\n-}\n-@catch (NSException *exception)\n-{\n-    NSLog(@\"Exception when calling SWGPetApi->uploadFile: %@ \", exception.name);\n-    NSLog(@\"Reason: %@ \", exception.reason);\n-}\n+SWGPetApi*apiInstance = [[SWGPetApi alloc] init];\n+\n+// uploads an image\n+[apiInstance uploadFileWithPetId:petId\n+       ",
    "Convert collision shapes to interfaces , Add Bullet collision shapes": "diff --git a/engine/src/main/java/org/terasology/physics/bullet/BulletPhysics.java b/engine/src/main/java/org/terasology/physics/bullet/BulletPhysics.java\nindex fd588d8fb..99f299ddc 100644\n--- a/engine/src/main/java/org/terasology/physics/bullet/BulletPhysics.java\n+++ b/engine/src/main/java/org/terasology/physics/bullet/BulletPhysics.java\n@@ -63,6 +63,7 @@\n import org.terasology.physics.CollisionGroup;\n import org.terasology.physics.HitResult;\n import org.terasology.physics.StandardCollisionGroup;\n+import org.terasology.physics.bullet.shapes.BulletCollisionShapeFactory;\n import org.terasology.physics.components.RigidBodyComponent;\n import org.terasology.physics.components.TriggerComponent;\n import org.terasology.physics.engine.CharacterCollider;\n@@ -73,6 +74,7 @@\n import org.terasology.physics.engine.RigidBody;\n import org.terasology.physics.shapes.BoxShapeComponent;\n import org.terasology.physics.shapes.CapsuleShapeComponent;\n+import org.terasology.physics.shapes.CollisionShapeFactory;\n import org.terasology.physics.shapes.CylinderShapeComponent;\n import org.terasology.physics.shapes.HullShapeComponent;\n import org.terasology.physics.shapes.SphereShapeComponent;\n@@ -103,6 +105,8 @@ public class BulletPhysics implements PhysicsEngine {\n     private final Deque<RigidBodyRequest> insertionQueue = Lists.newLinkedList();\n     private final Deque<BulletRigidBody> removalQueue = Lists.newLinkedList();\n \n+    private final BulletCollisionShapeFactory collisionShapeFactory = new BulletCollisionShapeFactory();\n+\n     private final CollisionDispatcher dispatcher;\n     private final BroadphaseInterface broadphase;\n     private final DiscreteDynamicsWorld discreteDynamicsWorld;\n@@ -441,6 +445,11 @@ public float getEpsilon() {\n         return BulletGlobals.SIMD_EPSILON;\n     }\n \n+    @Override\n+    public CollisionShapeFactory getCollisionShapeFactory() {\n+        return collisionShapeFactory;\n+    }\n+\n     //*******************Private helper methods**************************\\\\\n \n     /**\ndiff --git a/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletBoxShape.java b/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletBoxShape.java\nnew file mode 100644\nindex 000000000..e95c9ac00\n--- /dev/null\n+++ b/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletBoxShape.java\n@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2017 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.physics.bullet.shapes;\n+\n+import com.bulletphysics.collision.shapes.BoxShape;\n+import com.bulletphysics.linearmath.Transform;\n+import org.terasology.math.AABB;\n+import org.terasology.math.VecMath;\n+import org.terasology.math.geom.Quat4f;\n+import org.terasology.math.geom.Vector3f;\n+import org.terasology.physics.shapes.CollisionShape;\n+\n+public class BulletBoxShape extends BulletCollisionShape implements org.terasology.physics.shapes.BoxShape {\n+    private final BoxShape boxShape;\n+\n+    public BulletBoxShape(Vector3f halfExtents) {\n+        boxShape = new BoxShape(VecMath.to(halfExtents));\n+        underlyingShape = boxShape;\n+    }\n+\n+    @Override\n+    public CollisionShape rotate(Quat4f rot) {\n+        return null;\n+    }\n+}\ndiff --git a/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletCollisionShape.java b/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletCollisionShape.java\nnew file mode 100644\nindex 000000000..2a879d922\n--- /dev/null\n+++ b/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletCollisionShape.java\n@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2017 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.physics.bullet.shapes;\n+\n+\n+import com.bulletphysics.collision.shapes.CollisionShape;\n+import com.bulletphysics.linearmath.Transform;\n+import org.terasology.math.AABB;\n+import org.terasology.math.VecMath;\n+\n+public abstract class BulletCollisionShape implements org.terasology.physics.shapes.CollisionShape {\n+    public CollisionShape underlyingShape;\n+\n+    @Override\n+    public AABB getAABB(org.terasology.math.Transform transform) {\n+        Transform t = toBulletTransform(transform);\n+\n+        javax.vecmath.Vector3f min = new javax.vecmath.Vector3f();\n+        javax.vecmath.Vector3f max = new javax.vecmath.Vector3f();\n+        underlyingShape.getAabb(t, min, max);\n+\n+        return AABB.createMinMax(VecMath.from(min), VecMath.from(max));\n+    }\n+\n+    protected static Transform toBulletTransform(org.terasology.math.Transform transform) {\n+        return new Transform(\n+                new javax.vecmath.Matrix4f(VecMath.to(transform.rotation),\n+                        VecMath.to(transform.origin), transform.scale)\n+        );\n+    }\n+}\ndiff --git a/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletCollisionShapeFactory.java b/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletCollisionShapeFactory.java\nnew file mode 100644\nindex 000000000..bc7e55ea9\n--- /dev/null\n+++ b/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletCollisionShapeFactory.java\n@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2017 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.physics.bullet.shapes;\n+\n+import org.terasology.math.geom.Vector3f;\n+import org.terasology.physics.shapes.BoxShape;\n+import org.terasology.physics.shapes.CollisionShapeFactory;\n+import org.terasology.physics.shapes.CompoundShape;\n+import org.terasology.physics.shapes.ConvexHullShape;\n+import org.terasology.physics.shapes.SphereShape;\n+\n+import java.util.List;\n+\n+public class BulletCollisionShapeFactory implements CollisionShapeFactory {\n+    @Override\n+    public BoxShape box(Vector3f extents) {\n+        return new BulletBoxShape(extents.mul(0.5f));\n+    }\n+\n+    @Override\n+    public ConvexHullShape convexHull(List<Vector3f> vertices) {\n+        return new BulletConvexHullShape(vertices);\n+    }\n+\n+    @Override\n+    public CompoundShape compoundShape() {\n+        return new BulletCompoundShape();\n+    }\n+\n+    @Override\n+    public SphereShape sphere(float radius) {\n+        return new BulletSphereShape(radius);\n+    }\n+}\ndiff --git a/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletCompoundShape.java b/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletCompoundShape.java\nnew file mode 100644\nindex 000000000..8f3c8d511\n--- /dev/null\n+++ b/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletCompoundShape.java\n@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2017 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.physics.bullet.shapes;\n+\n+\n+import com.bulletphysics.collision.shapes.CompoundShape;\n+import org.terasology.math.geom.Quat4f;\n+import org.terasology.physics.shapes.CollisionShape;\n+\n+public class BulletCompoundShape extends BulletCollisionShape implements org.terasology.physics.shapes.CompoundShape {\n+    private final CompoundShape compoundShape;\n+\n+    public BulletCompoundShape() {\n+        compoundShape = new CompoundShape();\n+    }\n+\n+    @Override\n+    public void addChildShape(org.terasology.math.Transform transform, CollisionShape collisionShape) {\n+        compoundShape.addChildShape(toBulletTransform(transform), ((BulletCollisionShape) collisionShape).underlyingShape);\n+    }\n+\n+    @Override\n+    public CollisionShape rotate(Quat4f rot) {\n+        return null;\n+    }\n+}\ndiff --git a/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletConvexHullShape.java b/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletConvexHullShape.java\nnew file mode 100644\nindex 000000000..7696c01ff\n--- /dev/null\n+++ b/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletConvexHullShape.java\n@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2017 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.physics.bullet.shapes;\n+\n+import com.bulletphysics.collision.shapes.ConvexHullShape;\n+import com.bulletphysics.util.ObjectArrayList;\n+import org.terasology.math.AABB;\n+import org.terasology.math.Transform;\n+import org.terasology.math.VecMath;\n+import org.terasology.math.geom.Quat4f;\n+import org.terasology.math.geom.Vector3f;\n+import org.terasology.physics.shapes.CollisionShape;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public class BulletConvexHullShape extends BulletCollisionShape implements org.terasology.physics.shapes.ConvexHullShape {\n+    private final ConvexHullShape convexHullShape;\n+\n+    public BulletConvexHullShape(List<Vector3f> vertices) {\n+        ObjectArrayList<javax.vecmath.Vector3f> vertexList = new ObjectArrayList<>();\n+\n+        vertexList.addAll(vertices.stream().map(VecMath::to).collect(Collectors.toList()));\n+\n+        convexHullShape = new ConvexHullShape(vertexList);\n+        underlyingShape = convexHullShape;\n+    }\n+\n+    @Override\n+    public CollisionShape rotate(Quat4f rot) {\n+        return null;\n+    }\n+}\ndiff --git a/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletSphereShape.java b/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletSphereShape.java\nnew file mode 100644\nindex 000000000..a3bd2f34a\n--- /dev/null\n+++ b/engine/src/main/java/org/terasology/physics/bullet/shapes/BulletSphereShape.java\n@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2017 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.physics.bullet.shapes;\n+\n+import com.bulletphysics.collision.shapes.SphereShape;\n+import org.terasology.math.geom.Quat4f;\n+import org.terasology.physics.shapes.CollisionShape;\n+\n+public class BulletSphereShape extends BulletCollisionShape implements org.terasology.physics.shapes.SphereShape {\n+    private final SphereShape sphereShape;\n+\n+    public BulletSphereShape(float radius) {\n+        sphereShape = new SphereShape(radius);\n+        underlyingShape = sphereShape;\n+    }\n+\n+    @Override\n+    public CollisionShape rotate(Quat4f rot) {\n+        return null;\n+    }\n+}\ndiff --git a/engine/src/main/java/org/terasology/physics/shapes/BoxShape.java b/engine/src/main/java/org/terasology/physics/shapes/BoxShape.java\nindex 2850a7831..808d4873d 100644\n--- a/engine/src/main/java/org/terasology/physics/shapes/BoxShape.java\n+++ b/engine/src/main/java/org/terasology/physics/shapes/BoxShape.java\n@@ -15,5 +15,5 @@\n  */\n package org.terasology.physics.shapes;\n \n-public abstract class BoxShape extends CollisionShape {\n+public interface BoxShape extends CollisionShape {\n }\ndiff --git a/engine/src/main/java/org/terasology/physics/shapes/CollisionShape.java b/engine/src/main/java/org/terasology/physics/shapes/CollisionShape.java\nindex 043f86ec1..0af17bb5a 100644\n--- a/engine/src/main/java/org/terasology/physics/shapes/CollisionShape.java\n+++ b/engine/src/main/java/org/terasology/physics/shapes/CollisionShape.java\n@@ -19,8 +19,8 @@\n import org.terasology.math.Transform;\n import org.terasology.math.geom.Quat4f;\n \n-public abstract class CollisionShape {\n-    public abstract AABB getAABB(Transform transform);\n+public interface CollisionShape {\n+    AABB getAABB(Transform transform);\n \n-    public abstract CollisionShape rotate(Quat4f rot);\n+    CollisionShape rotate(Quat4f rot);\n }\ndiff --git a/engine/src/main/java/org/terasology/physics/shapes/CollisionShapeFactory.java b/engine/src/main/java/org/terasology/physics/shapes/CollisionShapeFactory.java\nindex 8d874b381..caa31dc85 100644\n--- a/engine/src/main/java/org/terasology/physics/shapes/CollisionShapeFactory.java\n+++ b/engine/src/main/java/org/terasology/physics/shapes/CollisionShapeFactory.java\n@@ -24,7 +24,9 @@ public interface CollisionShapeFactory {\n \n     ConvexHullShape convexHull(List<Vector3f> vertices);\n \n-    BoxShape defaultCube();\n+    default BoxShape defaultCube() {\n+        return box(Vector3f.one());\n+    }\n \n     CompoundShape compoundShape();\n \ndiff --git a/engine/src/main/java/org/terasology/physics/shapes/CompoundShape.java b/engine/src/main/java/org/terasology/physics/shapes/CompoundShape.java\nindex c5bd4e22a..4c7acc4ad 100644\n--- a/engine/src/main/java/org/terasology/physics/shapes/CompoundShape.java\n+++ b/engine/src/main/java/org/terasology/physics/shapes/CompoundShape.java\n@@ -15,8 +15,8 @@\n  */\n package org.terasology.physics.shapes;\n \n-import com.bulletphysics.linearmath.Transform;\n+import org.terasology.math.Transform;\n \n-public abstract class CompoundShape extends CollisionShape {\n-    public abstract void addChildShape(Transform transform, CollisionShape collisionShape);\n+public interface CompoundShape extends CollisionShape {\n+    void addChildShape(Transform transform, CollisionShape collisionShape);\n }\ndiff --git a/engine/src/main/java/org/terasology/physics/shapes/ConvexHullShape.java b/engine/src/main/java/org/terasology/physics/shapes/ConvexHullShape.java\nindex 81e8d414d..2376d6391 100644\n--- a/engine/src/main/java/org/terasology/physics/shapes/ConvexHullShape.java\n+++ b/engine/src/main/java/org/terasology/physics/shapes/ConvexHullShape.java\n@@ -15,5 +15,5 @@\n  */\n package org.terasology.physics.shapes;\n \n-public abstract class ConvexHullShape extends CollisionShape {\n+public interface ConvexHullShape extends CollisionShape {\n }\ndiff --git a/engine/src/main/java/org/terasology/physics/shapes/SphereShape.java b/engine/src/main/java/org/terasology/physics/shapes/SphereShape.java\nindex 4e7392d5e..0b3af19b4 100644\n--- a/engine/src/main/java/org/terasology/physics/shapes/SphereShape.java\n+++ b/engine/src/main/java/org/terasology/physics/shapes/SphereShape.java\n@@ -15,5 +15,5 @@\n  */\n package org.terasology.physics.shapes;\n \n-public abstract class SphereShape extends CollisionShape {\n+public interface SphereShape extends CollisionShape {\n }\ndiff --git a/engine/src/main/java/org/terasology/world/block/shapes/JsonBlockShapeLoader.java b/engine/src/main/java/org/terasology/world/block/shapes/JsonBlockShapeLoader.java\nindex a6b25d0cc..ba562760a 100644\n--- a/engine/src/main/java/org/terasology/world/block/shapes/JsonBlockShapeLoader.java\n+++ b/engine/src/main/java/org/terasology/world/block/shapes/JsonBlockShapeLoader.java\n@@ -16,7 +16,6 @@\n \n package org.terasology.world.block.shapes;\n \n-import com.bulletphysics.linearmath.Transform;\n import com.google.common.base.Charsets;\n import com.google.common.collect.Lists;\n import com.google.gson.Gson;\n@@ -34,6 +33,7 @@\n import org.terasology.assets.format.AssetDataFile;\n import org.terasology.assets.module.annotations.RegisterAssetFileFormat;\n import org.terasology.math.Rotation;\n+import org.terasology.math.Transform;\n import org.terasology.math.VecMath;\n import org.terasology.math.geom.Vector2f;\n import org.terasology.math.geom.Vector3f;\n@@ -213,7 +213,7 @@ private ColliderInfo processCompoundShape(List<ColliderInfo> colliders) {\n             CompoundShape collisionShape = physicsEngine.getCollisionShapeFactory().compoundShape();\n \n             for (ColliderInfo collider : colliders) {\n-                Transform transform = new Transform(new javax.vecmath.Matrix4f(VecMath.to(Rotation.none().getQuat4f()), VecMath.to(collider.offset), 1.0f));\n+                Transform transform = new Transform(collider.offset, Rotation.none().getQuat4f(), 1.0f);\n                 collisionShape.addChildShape(transform, collider.collisionShape);\n             }\n             return new ColliderInfo(new Vector3f(), collisionShape);",
    "fix test": "diff --git a/src/test/groovy/graphql/language/NodeVisitorStubTest.groovy b/src/test/groovy/graphql/language/NodeVisitorStubTest.groovy\nindex a6969520..5732dbbf 100644\n--- a/src/test/groovy/graphql/language/NodeVisitorStubTest.groovy\n+++ b/src/test/groovy/graphql/language/NodeVisitorStubTest.groovy\n@@ -140,5 +140,59 @@ class NodeVisitorStubTest extends Specification {\n         control == TraversalControl.QUIT\n     }\n \n+    def \"type definitions call visitTypeDefinition by default\"() {\n+        given:\n+        NodeVisitorStub nodeVisitorStub = Spy(NodeVisitorStub, constructorArgs: [])\n+        UnionTypeDefinition unionTypeDefinition = new UnionTypeDefinition(\"\")\n+        InputObjectTypeDefinition inputObjectTypeDefinition = new InputObjectTypeDefinition(\"\")\n+        ScalarTypeDefinition scalarTypeDefinition = new ScalarTypeDefinition(\"\")\n+        InterfaceTypeDefinition interfaceTypeDefinition = new InterfaceTypeDefinition(\"\")\n+        EnumTypeDefinition enumTypeDefinition = new EnumTypeDefinition(\"\")\n+        ObjectTypeDefinition objectTypeDefinition = new ObjectTypeDefinition(\"\")\n+        TraverserContext context = Mock(TraverserContext)\n+\n+        when:\n+        def control = nodeVisitorStub.visitUnionTypeDefinition(unionTypeDefinition, context)\n+        then:\n+        1 * nodeVisitorStub.visitTypeDefinition(unionTypeDefinition, context) >> TraversalControl.QUIT\n+        control == TraversalControl.QUIT\n+\n+        when:\n+        control = nodeVisitorStub.visitInputObjectTypeDefinition(inputObjectTypeDefinition, context)\n+        then:\n+        1 * nodeVisitorStub.visitTypeDefinition(inputObjectTypeDefinition, context) >> TraversalControl.QUIT\n+        control == TraversalControl.QUIT\n+\n+        when:\n+        control = nodeVisitorStub.visitInputObjectTypeDefinition(inputObjectTypeDefinition, context)\n+        then:\n+        1 * nodeVisitorStub.visitTypeDefinition(inputObjectTypeDefinition, context) >> TraversalControl.QUIT\n+        control == TraversalControl.QUIT\n+\n+        when:\n+        control = nodeVisitorStub.visitScalarTypeDefinition(scalarTypeDefinition, context)\n+        then:\n+        1 * nodeVisitorStub.visitTypeDefinition(scalarTypeDefinition, context) >> TraversalControl.QUIT\n+        control == TraversalControl.QUIT\n+\n+        when:\n+        control = nodeVisitorStub.visitInterfaceTypeDefinition(interfaceTypeDefinition, context)\n+        then:\n+        1 * nodeVisitorStub.visitTypeDefinition(interfaceTypeDefinition, context) >> TraversalControl.QUIT\n+        control == TraversalControl.QUIT\n+\n+        when:\n+        control = nodeVisitorStub.visitEnumTypeDefinition(enumTypeDefinition, context)\n+        then:\n+        1 * nodeVisitorStub.visitEnumTypeDefinition(enumTypeDefinition, context) >> TraversalControl.QUIT\n+        control == TraversalControl.QUIT\n+\n+        when:\n+        control = nodeVisitorStub.visitObjectTypeDefinition(objectTypeDefinition, context)\n+        then:\n+        1 * nodeVisitorStub.visitObjectTypeDefinition(objectTypeDefinition, context) >> TraversalControl.QUIT\n+     ",
    "Add release notes for 0 . 83": "diff --git a/presto-docs/src/main/sphinx/release/release-0.83.rst b/presto-docs/src/main/sphinx/release/release-0.83.rst\nindex b48f18fb04..e3d4413026 100644\n--- a/presto-docs/src/main/sphinx/release/release-0.83.rst\n+++ b/presto-docs/src/main/sphinx/release/release-0.83.rst\n@@ -2,9 +2,19 @@\n Release 0.83\n ============\n \n-* Fix resource leak in query queues\n-* Fix NPE when writing null ``ARRAY/MAP`` to Hive\n-* Fix :func:`json_array_get` to handle nested structures\n-* Fix ``UNNEST`` on null collections\n-* Fix a regression where queries that fail during parsing or analysis do not expire\n-* Make ``JSON`` type comparable\n+Raptor Changes\n+--------------\n+* Raptor now enables specifying the backup storage location. This feature is highly experimental.\n+* Fix the handling of shards not assigned to any node.\n+\n+General Changes\n+---------------\n+\n+* Fix resource leak in query queues.\n+* Fix NPE when writing null ``ARRAY/MAP`` to Hive.\n+* Fix :func:`json_array_get` to handle nested structures.\n+* Fix ``UNNEST`` on null collections.\n+* Fix a regression where queries that fail during parsing or analysis do not expire.\n+* Make ``JSON`` type comparable.\n+* Added an optimization for hash aggregations. This optimization is turned off by default.\n+  To turn it on, add ``optimizer.optimize-hash-generation=true`` to the coordinator config properties.",
    "Remove ability to inject content - id via DashManifestParser .": "diff --git a/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParser.java b/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParser.java\nindex f017ae64ad..e52bb71d2a 100644\n--- a/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParser.java\n+++ b/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParser.java\n@@ -66,21 +66,9 @@ public class DashManifestParser extends DefaultHandler\n   private static final Pattern CEA_708_ACCESSIBILITY_PATTERN =\n       Pattern.compile(\"([1-9]|[1-5][0-9]|6[0-3])=.*\");\n \n-  private final String contentId;\n   private final XmlPullParserFactory xmlParserFactory;\n \n-  /**\n-   * Equivalent to calling {@code new DashManifestParser(null)}.\n-   */\n   public DashManifestParser() {\n-    this(null);\n-  }\n-\n-  /**\n-   * @param contentId An optional content identifier to include in the parsed manifest.\n-   */\n-  public DashManifestParser(String contentId) {\n-    this.contentId = contentId;\n     try {\n       xmlParserFactory = XmlPullParserFactory.newInstance();\n     } catch (XmlPullParserException e) {\n@@ -355,8 +343,9 @@ public class DashManifestParser extends DefaultHandler\n     // Build the representations.\n     List<Representation> representations = new ArrayList<>(representationInfos.size());\n     for (int i = 0; i < representationInfos.size(); i++) {\n-      representations.add(buildRepresentation(representationInfos.get(i), contentId,\n-          drmSchemeType, drmSchemeDatas, inbandEventStreams));\n+      representations.add(\n+          buildRepresentation(\n+              representationInfos.get(i), drmSchemeType, drmSchemeDatas, inbandEventStreams));\n     }\n \n     return buildAdaptationSet(id, contentType, representations, accessibilityDescriptors,\n@@ -664,8 +653,10 @@ public class DashManifestParser extends DefaultHandler\n         id, label, containerMimeType, sampleMimeType, codecs, bitrate, selectionFlags, language);\n   }\n \n-  protected Representation buildRepresentation(RepresentationInfo representationInfo,\n-      String contentId, String extraDrmSchemeType, ArrayList<SchemeData> extraDrmSchemeDatas,\n+  protected Representation buildRepresentation(\n+      RepresentationInfo representationInfo,\n+      String extraDrmSchemeType,\n+      ArrayList<SchemeData> extraDrmSchemeDatas,\n       ArrayList<Descriptor> extraInbandEventStreams) {\n     Format format = representationInfo.format;\n     String drmSchemeType = representationInfo.drmSchemeType != null\n@@ -679,8 +670,13 @@ public class DashManifestParser extends DefaultHandler\n     }\n     ArrayList<Descriptor> inbandEventStreams = representationInfo.inbandEventStreams;\n     inbandEventStreams.addAll(extraInbandEventStreams);\n-    return Representation.newInstance(contentId, representationInfo.revisionId, format,\n-        representationInfo.baseUrl, representationInfo.segmentBase, inbandEventStreams);\n+    return Representation.newInstance(\n+        /* contentId= */ null,\n+        representationInfo.revisionId,\n+        format,\n+        representationInfo.baseUrl,\n+        representationInfo.segmentBase,\n+        inbandEventStreams);\n   }\n \n   // SegmentBase, SegmentList and SegmentTemplate parsing.",
    "Modifying file path for schema file link .": "diff --git a/src/site/markdown/general/suppression.md b/src/site/markdown/general/suppression.md\nindex af3dfb57d..c5aab679b 100644\n--- a/src/site/markdown/general/suppression.md\n+++ b/src/site/markdown/general/suppression.md\n@@ -73,7 +73,7 @@ HTML version of the report. The other common scenario would be to ignore all CVE\n </suppressions>\n ```\n \n-The full schema for suppression files can be found here: [suppression.xsd](https://github.com/jeremylong/DependencyCheck/blob/master/dependency-check-core/src/main/resources/schema/suppression.xsd \"Suppression Schema\")\n+The full schema for suppression files can be found here: [suppression.xsd](https://github.com/jeremylong/DependencyCheck/blob/master/core/src/main/resources/schema/suppression.xsd \"Suppression Schema\")\n \n Please see the appropriate configuration option in each interfaces configuration guide:\n ",
    "Added discoverable start options .": "diff --git a/VERSION.txt b/VERSION.txt\nindex c115cb7af6..04e8e877b2 100644\n--- a/VERSION.txt\n+++ b/VERSION.txt\n@@ -1,5 +1,6 @@\n jetty-7.0.0.RC4-SNAPSHOT \n  + 286185 Implement ability for JSON implementation to automatically register convertors\n+ + Added discoverable start options\n \n jetty-7.0.0.RC3 7 August 2009\n  + 277403 remove system properties\ndiff --git a/jetty-distribution/pom.xml b/jetty-distribution/pom.xml\nindex 3e0ec27c00..5689209fde 100644\n--- a/jetty-distribution/pom.xml\n+++ b/jetty-distribution/pom.xml\n@@ -44,13 +44,13 @@\n                        dest=\"${assembly.directory}/lib/servlet-api-2.5.jar\"\n                        usetimestamp=\"true\"\n                        verbose=\"true\" />\n-\t\t  <mkdir dir=\"${assembly.directory}/lib/jetty-jndi\"/>\n+\t\t  <mkdir dir=\"${assembly.directory}/lib/jndi\"/>\n                   <get src=\"http://download.eclipse.org/tools/orbit/downloads/drops/R20090529135407/bundles/javax.activation_1.1.0.v200905021805.jar\"\n-                       dest=\"${assembly.directory}/lib/jetty-jndi/activation-1.1.jar\"\n+                       dest=\"${assembly.directory}/lib/jndi/activation-1.1.jar\"\n                        usetimestamp=\"true\"\n                        verbose=\"true\" />\n                   <get src=\"http://download.eclipse.org/tools/orbit/downloads/drops/R20090529135407/bundles/javax.mail_1.4.0.v200905040518.jar\"\n-                       dest=\"${assembly.directory}/lib/jetty-jndi/mail-1.4.jar\"\n+                       dest=\"${assembly.directory}/lib/jndi/mail-1.4.jar\"\n                        usetimestamp=\"true\"\n                        verbose=\"true\" />\n                 </tasks>\n@@ -341,7 +341,7 @@\n                   <type>jar</type>\n                   <overWrite>true</overWrite>\n                   <includes>**</includes>\n-                  <outputDirectory>${assembly.directory}/lib/security</outputDirectory>\n+                  <outputDirectory>${assembly.directory}/lib</outputDirectory>\n                 </artifactItem>\n                 <artifactItem>\n                   <groupId>org.eclipse.jetty</groupId>\n@@ -384,53 +384,43 @@\n               </artifactItems>\n             </configuration>\n           </execution>\n-            <execution>\n+\t  <!--\n+          <execution>\n             <phase>generate-resources</phase>\n             <goals>\n               <goal>copy</goal>\n             </goals>\n             <configuration>\n               <artifactItems>\n-               <artifactItem>\n-                  <groupId>javax.mail</groupId>\n-                  <artifactId>mail</artifactId>\n-                  <version>${mail-version}</version>\n-                  <outputDirectory>${assembly.directory}/lib/jetty-jndi</outputDirectory>\n-               </artifactItem>\n-               <artifactItem>\n-                  <groupId>javax.activation</groupId>\n-                  <artifactId>activation</artifactId>\n-                  <version>${activation-version}</version>\n-                  <outputDirectory>${assembly.directory}/lib/jetty-jndi</outputDirectory>\n-               </artifactItem>\n                <artifactItem>\n                   <groupId>org.apache.geronimo.specs</groupId>\n                   <artifactId>geronimo-annotation_1.0_spec</artifactId>\n                   <version>1.1.1</version>\n-                  <outputDirectory>${assembly.directory}/lib/jetty-annotations</outputDirectory>\n+                  <outputDirectory>${assembly.directory}/lib/annotations</outputDirectory>\n               </artifactItem>\n               <artifactItem>\n                   <groupId>asm</groupId>\n                   <artifactId>asm-commons</artifactId>\n                   <version>3.1</version>\n-                  <outputDirectory>${assembly.directory}/lib/jetty-annotations</outputDirectory>\n+                  <outputDirectory>${assembly.directory}/lib/annotations</outputDirectory>\n               </artifactItem>\n               <artifactItem>\n                   <groupId>asm</groupId>\n                   <artifactId>asm</artifactId>\n                   <version>3.1</version>\n-                  <outputDirectory>${assembly.directory}/lib/jetty-annotations</outputDirectory>\n+                  <outputDirectory>${assembly.directory}/lib/annotations</outputDirectory>\n               </artifactItem>\n               <artifactItem>\n                   <groupId>asm</groupId>\n                   <artifactId>asm-tree</artifactId>\n                   <version>3.1</version>\n-                  <outputDirectory>${assembly.directory}/lib/jetty-annotations</outputDirectory>\n+                  <outputDirectory>${assembly.directory}/lib/annotations</outputDirectory>\n               </artifactItem>\n               </artifactItems>\n             </configuration>\n           </execution>\n-          </executions>\n+\t  -->\n+        </executions>\n       </plugin>     \n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\ndiff --git a/jetty-policy/src/main/config/lib/security/jetty.policy b/jetty-policy/src/main/config/lib/policy/jetty.policy\nsimilarity index 100%\nrename from jetty-policy/src/main/config/lib/security/jetty.policy\nrename to jetty-policy/src/main/config/lib/policy/jetty.policy\ndiff --git a/jetty-start/src/main/java/org/eclipse/jetty/start/Config.java b/jetty-start/src/main/java/org/eclipse/jetty/start/Config.java\nindex 3bc7feaabe..cdc5b7be2b 100644\n--- a/jetty-start/src/main/java/org/eclipse/jetty/start/Config.java\n+++ b/jetty-start/src/main/java/org/eclipse/jetty/start/Config.java\n@@ -196,9 +196,7 @@ public class Config\n         {\n             Classpath cp = _classpaths.get(section);\n             if (cp == null)\n-            {\n                 cp = new Classpath();\n-            }\n \n             boolean added = cp.addComponent(component);\n             _classpaths.put(section,cp);\n@@ -247,8 +245,11 @@ public class Config\n \n         for (File entry : entries)\n         {\n-            if (entry.isDirectory() && recurse)\n-                addJars(sections,entry,recurse);\n+            if (entry.isDirectory())\n+            {\n+                if (recurse)\n+                    addJars(sections,entry,recurse);\n+            }\n             else\n             {\n                 String name = entry.getName().toLowerCase();\n@@ -561,24 +562,35 @@ public class Config\n                 if (trim.startsWith(\"[\") && trim.endsWith(\"]\"))\n                 {\n                     String identifier = trim.substring(1,trim.length() - 1);\n-                    if (identifier.charAt(0) == '=')\n+\n+                    // Normal case: section identifier (possibly separated by commas)\n+                    sections = Arrays.asList(identifier.split(\",\"));\n+                    List<String> section_ids=new ArrayList<String>();\n+                    \n+                    // Ensure section classpaths exist\n+                    for (String sectionId : sections)\n                     {\n-                        // Special case: dynamic/discovered option section identifier.\n-                        processDynamicSectionIdentifier(identifier.substring(1));\n+                        if (sectionId.charAt(0) == '=')\n+                            continue;\n+\n+                        if (!_classpaths.containsKey(sectionId))\n+                            _classpaths.put(sectionId,new Classpath());\n+                        \n+                        section_ids.add(sectionId);\n                     }\n-                    else\n+                    \n+\n+                    // Process Dynamic\n+                    for (String sectionId : sections)\n                     {\n-                        // Normal case: section identifier (possibly separated by commas)\n-                        sections = Arrays.asList(identifier.split(\",\"));\n-                        // Ensure section classpaths exist\n-                        for (String sectionId : sections)\n-                        {\n-                            if (!_classpaths.containsKey(sectionId))\n-                            {\n-                                _classpaths.put(sectionId,new Classpath());\n-                            }\n-                        }\n+                        if (sectionId.charAt(0) != '=')\n+                            continue;\n+                        \n+                        section_ids = processDynamicSectionIdentifier(sectionId.substring(1),section_ids);\n                     }\n+                    \n+                    sections = section_ids;\n+                    \n                     continue;\n                 }\n \n@@ -820,19 +832,42 @@ public class Config\n         }\n     }\n \n-    private void processDynamicSectionIdentifier(String dynamicPathId) throws IOException\n+    private List<String> processDynamicSectionIdentifier(String dynamicPathId,List<String> sections) throws IOException\n     {\n-        if (!dynamicPathId.endsWith(\"/*\"))\n+        String section=null;\n+        String rawPath;\n+        boolean deep;\n+        \n+        if (dynamicPathId.endsWith(\"/*\"))\n         {\n-            String msg = \"Dynamic Section IDs must end in \\\"/*\\\" to work.  Ignoring: [=\" + dynamicPathId + \"]\";\n-            System.err.println(msg);\n+            deep=false;\n+            rawPath = fixPath(dynamicPathId.substring(0,dynamicPathId.length() - 1));\n+        }\n+        else if (dynamicPathId.endsWith(\"/**\"))\n+        {\n+            deep=true;\n+            rawPath = fixPath(dynamicPathId.substring(0,dynamicPathId.length() - 2));\n+        }\n+        else if (dynamicPathId.indexOf('/')>1 && !dynamicPathId.endsWith(\"/\"))\n+        {\n+            section=dynamicPathId.substring(dynamicPathId.lastIndexOf('/')+1);\n+            rawPath=dynamicPathId.substring(0,dynamicPathId.lastIndexOf('/'));\n+            deep=true;\n+        }\n+        else \n+        {\n+            String msg = \"Illegal dynamic path [\" + dynamicPathId + \"]\";\n             throw new IOException(msg);\n         }\n-\n-        String rawPath = fixPath(dynamicPathId.substring(0,dynamicPathId.length() - 1));\n+        \n         File parentDir = new File(expand(rawPath));\n-        debug(\"Adding dynamic section entries based on path: \" + parentDir);\n-        File dirs[] = parentDir.listFiles(new FileFilter()\n+        if (!parentDir.exists())\n+            return sections;\n+        debug(\"dynamic: \" + parentDir);\n+        \n+        File dirs[] = section!=null\n+        ?new File[]{new File(parentDir,section)}   \n+        :parentDir.listFiles(new FileFilter()\n         {\n             public boolean",
    "Enable scalac optimizer ( <issue_id> ) .": "diff --git a/build.gradle b/build.gradle\nindex 65e6a69dbc..f9de5d1f17 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -419,6 +419,22 @@ subprojects {\n         \"-Xlint:constant\",\n         \"-Xlint:unused\"\n       ]\n+\n+      // Inline more aggressively when compiling the `core` jar since it's not meant to be used as a library.\n+      // More specifically, inline classes from the Scala library so that we can inline methods like `Option.exists`\n+      // and avoid lambda allocations. This is only safe if the Scala library version is the same at compile time\n+      // and runtime. We cannot guarantee this for libraries like kafka streams, so only inline classes from the\n+      // Kafka project in that case.\n+      List<String> inlineFrom\n+      if (project.name.equals('core'))\n+        inlineFrom = [\"-opt-inline-from:scala.**\", \"-opt-inline-from:kafka.**\", \"-opt-inline-from:org.apache.kafka.**\"]\n+      else\n+        inlineFrom = [\"-opt-inline-from:org.apache.kafka.**\"]\n+\n+      // Somewhat confusingly, `-opt:l:inline` enables all optimizations. `inlineFrom` configures what can be inlined.\n+      // See https://www.lightbend.com/blog/scala-inliner-optimizer for more information about the optimizer.\n+      scalaCompileOptions.additionalParameters += [\"-opt:l:inline\"]\n+      scalaCompileOptions.additionalParameters += inlineFrom\n     }\n     \n   // these options are valid for Scala versions < 2.13 only\ndiff --git a/core/src/main/scala/kafka/log/AbstractIndex.scala b/core/src/main/scala/kafka/log/AbstractIndex.scala\nindex 242d074530..7dca8120c3 100644\n--- a/core/src/main/scala/kafka/log/AbstractIndex.scala\n+++ b/core/src/main/scala/kafka/log/AbstractIndex.scala\n@@ -405,8 +405,8 @@ abstract class AbstractIndex[K, V](@volatile var file: File, val baseOffset: Lon\n \n   private def compareIndexEntry(indexEntry: IndexEntry, target: Long, searchEntity: IndexSearchEntity): Int = {\n     searchEntity match {\n-      case IndexSearchType.KEY => indexEntry.indexKey.compareTo(target)\n-      case IndexSearchType.VALUE => indexEntry.indexValue.compareTo(target)\n+      case IndexSearchType.KEY => java.lang.Long.compare(indexEntry.indexKey, target)\n+      case IndexSearchType.VALUE => java.lang.Long.compare(indexEntry.indexValue, target)\n     }\n   }\n \ndiff --git a/gradle/spotbugs-exclude.xml b/gradle/spotbugs-exclude.xml\nindex 07ca2b450e..70ea5b0682 100644\n--- a/gradle/spotbugs-exclude.xml\n+++ b/gradle/spotbugs-exclude.xml\n@@ -104,10 +104,8 @@ For a detailed description of spotbugs bug categories, see https://spotbugs.read\n     </Match>\n \n     <Match>\n-        <!-- Suppression for the equals() for extensiom methods. -->\n-        <Or>\n-            <Class name=\"kafka.api.package$ElectLeadersRequestOps\"/>\n-        </Or>\n+        <!-- Suppression for the equals() for extension methods. -->\n+        <Class name=\"kafka.api.package$ElectLeadersRequestOps\"/>\n         <Bug pattern=\"EQ_UNUSUAL\"/>\n     </Match>\n \n@@ -118,6 +116,59 @@ For a detailed description of spotbugs bug categories, see https://spotbugs.read\n         <Bug pattern=\"BC_VACUOUS_INSTANCEOF\"/>\n     </Match>\n \n+    <Match>\n+        <!-- A spurious null check after inlining by the scalac optimizer confuses spotBugs -->\n+        <Class name=\"kafka.log.Log\"/>\n+        <Bug pattern=\"NP_NULL_ON_SOME_PATH_EXCEPTION\"/>\n+    </Match>\n+\n+    <Match>\n+        <!-- A spurious null check after inlining by the scalac optimizer confuses spotBugs -->\n+        <Class name=\"kafka.tools.StateChangeLogMerger$\"/>\n+        <Bug pattern=\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\"/>\n+    </Match>\n+\n+    <Match>\n+        <!-- Unboxing to Int to make scalac happy makes spotBugs unhappy -->\n+        <Class name=\"kafka.tools.ConsoleConsumer$ConsumerConfig\"/>\n+        <Bug pattern=\"BX_UNBOXING_IMMEDIATELY_REBOXED\"/>\n+    </Match>\n+\n+    <Match>\n+        <!-- Uncallable anonymous methods are left behind after inlining by scalac 2.12, fixed in 2.13 -->\n+        <Source name=\"AdminUtils.scala\"/>\n+        <Package name=\"kafka.admin\"/>\n+        <Bug pattern=\"UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS\"/>\n+    </Match>\n+\n+    <Match>\n+        <!-- Uncallable anonymous methods are left behind after inlining by scalac 2.12, fixed in 2.13 -->\n+        <Source name=\"ControllerContext.scala\"/>\n+        <Package name=\"kafka.controller\"/>\n+        <Bug pattern=\"UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS\"/>\n+    </Match>\n+\n+    <Match>\n+        <!-- Uncallable anonymous methods are left behind after inlining by scalac 2.12, fixed in 2.13 -->\n+        <Source name=\"LogManager.scala\"/>\n+        <Package name=\"kafka.log\"/>\n+        <Bug pattern=\"UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS\"/>\n+    </Match>\n+\n+    <Match>\n+        <!-- Uncallable anonymous methods are left behind after inlining by scalac 2.12, fixed in 2.13 -->\n+        <Source name=\"DelayedElectLeader.scala\"/>\n+        <Package name=\"kafka.server\"/>\n+        <Bug pattern=\"UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS\"/>\n+    </Match>\n+\n+    <Match>\n+        <!-- Uncallable anonymous methods are left behind after inlining by scalac 2.12, fixed in 2.13 -->\n+        <Source name=\"AdminZkClient.scala\"/>\n+        <Package name=\"kafka.zk\"/>\n+        <Bug pattern=\"UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS\"/>\n+    </Match>\n+\n     <Match>\n         <!-- Suppress a warning about some static initializers in Schema using instances of a\n              subclass. -->",
    "tick version after publishing 0 . 0 . 70": "diff --git a/package.json b/package.json\nindex 0474840ac..4c6cab356 100644\n--- a/package.json\n+++ b/package.json\n@@ -1,7 +1,7 @@\n {\n   \"name\": \"@jenkins-cd/design-language\",\n   \"jdlName\": \"jenkins-design-language\",\n-  \"version\": \"0.0.70-unpublished\",\n+  \"version\": \"0.0.71-unpublished\",\n   \"description\": \"Styles, assets, and React classes for Jenkins Design Language\",\n   \"main\": \"dist/js/components/index.js\",\n   \"scripts\": {",
    "Fix the issue that markdown preview is not rendering when save issue and .": "diff --git a/server-core/src/main/java/io/onedev/server/entitymanager/impl/DefaultPullRequestManager.java b/server-core/src/main/java/io/onedev/server/entitymanager/impl/DefaultPullRequestManager.java\nindex 4907a7799..5cd1d1a21 100644\n--- a/server-core/src/main/java/io/onedev/server/entitymanager/impl/DefaultPullRequestManager.java\n+++ b/server-core/src/main/java/io/onedev/server/entitymanager/impl/DefaultPullRequestManager.java\n@@ -660,22 +660,24 @@ public class DefaultPullRequestManager extends AbstractEntityManager<PullRequest\n \t@Sessional\n \tprotected void checkAsync(Collection<PullRequest> requests) {\n \t\tCollection<Long> requestIds = requests.stream().map(it->it.getId()).collect(Collectors.toList());\n-\t\ttransactionManager.runAfterCommit(new Runnable() {\n-\n-\t\t\t@Override\n-\t\t\tpublic void run() {\n-\t\t\t\tdao.getSessionManager().runAsync(new Runnable() {\n-\n-\t\t\t\t\t@Override\n-\t\t\t\t\tpublic void run() {\n-\t\t\t\t        for (Long requestId: requestIds)\n-\t\t\t\t        \tcheck(load(requestId));\n-\t\t\t\t\t}\n-\t\t\t\t\t\n-\t\t\t\t}, SecurityUtils.getSubject());\n-\t\t\t}\n-\t\t\t\n-\t\t});\n+\t\tif (!requestIds.isEmpty()) {\n+\t\t\ttransactionManager.runAfterCommit(new Runnable() {\n+\t\n+\t\t\t\t@Override\n+\t\t\t\tpublic void run() {\n+\t\t\t\t\tdao.getSessionManager().runAsync(new Runnable() {\n+\t\n+\t\t\t\t\t\t@Override\n+\t\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t        for (Long requestId: requestIds)\n+\t\t\t\t\t        \tcheck(load(requestId));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\t\n+\t\t\t\t\t}, SecurityUtils.getSubject());\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t});\n+\t\t}\n \t}\n \t\n \t@Transactional\ndiff --git a/server-core/src/main/java/io/onedev/server/web/component/markdown/MarkdownEditor.java b/server-core/src/main/java/io/onedev/server/web/component/markdown/MarkdownEditor.java\nindex 085fe681a..f0e1ce411 100644\n--- a/server-core/src/main/java/io/onedev/server/web/component/markdown/MarkdownEditor.java\n+++ b/server-core/src/main/java/io/onedev/server/web/component/markdown/MarkdownEditor.java\n@@ -32,6 +32,7 @@ import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.FormComponentPanel;\n import org.apache.wicket.markup.html.form.TextArea;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.request.IRequestParameters;\n import org.apache.wicket.request.cycle.RequestCycle;\n@@ -165,7 +166,14 @@ public class MarkdownEditor extends FormComponentPanel<String> {\n \n \t\tif (initialSplit) {\n \t\t\tcontainer.add(AttributeAppender.append(\"class\", \"split-mode\"));\n-\t\t\tpreview.add(new Label(\"rendered\", renderInput(getModelObject())) {\n+\t\t\tpreview.add(new Label(\"rendered\", new LoadableDetachableModel<String>() {\n+\n+\t\t\t\t@Override\n+\t\t\t\tprotected String load() {\n+\t\t\t\t\treturn renderInput(input.getConvertedInput());\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t}) {\n \n \t\t\t\t@Override\n \t\t\t\tpublic void renderHead(IHeaderResponse response) {\ndiff --git a/server-core/src/main/java/io/onedev/server/web/component/markdown/markdown.js b/server-core/src/main/java/io/onedev/server/web/component/markdown/markdown.js\nindex 79a47bff5..d49f3f30b 100644\n--- a/server-core/src/main/java/io/onedev/server/web/component/markdown/markdown.js\n+++ b/server-core/src/main/java/io/onedev/server/web/component/markdown/markdown.js\n@@ -102,7 +102,6 @@ onedev.server.markdown = {\n \t\t\t$splitLink.addClass(\"active\");\n \t\t\tonLayoutChange();\n \t\t\tcallback(\"render\", $input.val());\n-\t\t\tconsole.log(onedev.server.markdown.getCookiePrefix($container)+\".split\");\n \t\t\tCookies.set(onedev.server.markdown.getCookiePrefix($container)+\".split\", true, {expires: Infinity});\n \t\t});\n \t\t",
    "Updates http - client dependency to correctly handles certificates ( <issue_id> ) .": "diff --git a/modules/swagger-codegen/src/main/resources/clojure/project.mustache b/modules/swagger-codegen/src/main/resources/clojure/project.mustache\nindex df83142e428..0fe990d02c8 100644\n--- a/modules/swagger-codegen/src/main/resources/clojure/project.mustache\n+++ b/modules/swagger-codegen/src/main/resources/clojure/project.mustache\n@@ -4,5 +4,5 @@\n   :license {:name \"<&projectLicenseName>\"<#projectLicenseUrl>\n             :url \"<&projectLicenseUrl>\"</projectLicenseUrl>}</projectLicenseName>\n   :dependencies [[org.clojure/clojure \"1.7.0\"]\n-                 [clj-http \"2.0.0\"]\n+                 [clj-http \"3.6.0\"]\n                  [cheshire \"5.5.0\"]])\ndiff --git a/samples/client/petstore/clojure/project.clj b/samples/client/petstore/clojure/project.clj\nindex 34dcb2d99a7..e64d9ef7447 100644\n--- a/samples/client/petstore/clojure/project.clj\n+++ b/samples/client/petstore/clojure/project.clj\n@@ -1,7 +1,7 @@\n (defproject swagger-petstore \"1.0.0\"\n-  :description \"This is a sample server Petstore server.  You can find out more about Swagger at <a href=\\\"http://swagger.io\\\">http://swagger.io</a> or on irc.freenode.net, #swagger.  For this sample, you can use the api key \\\"special-key\\\" to test the authorization filters\"\n+  :description \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\"\n   :license {:name \"Apache 2.0\"\n             :url \"http://www.apache.org/licenses/LICENSE-2.0.html\"}\n   :dependencies [[org.clojure/clojure \"1.7.0\"]\n-                 [clj-http \"2.0.0\"]\n+                 [clj-http \"3.6.0\"]\n                  [cheshire \"5.5.0\"]])\ndiff --git a/samples/client/petstore/clojure/src/swagger_petstore/api/pet.clj b/samples/client/petstore/clojure/src/swagger_petstore/api/pet.clj\nindex 344ea3bb1f8..92ab5e13218 100644\n--- a/samples/client/petstore/clojure/src/swagger_petstore/api/pet.clj\n+++ b/samples/client/petstore/clojure/src/swagger_petstore/api/pet.clj\n@@ -5,24 +5,22 @@\n (defn add-pet-with-http-info\n   \"Add a new pet to the store\n   \"\n-  ([] (add-pet-with-http-info nil))\n-  ([{:keys [body ]}]\n-   (call-api \"/pet\" :post\n-             {:path-params   {}\n-              :header-params {}\n-              :query-params  {}\n-              :form-params   {}\n-              :body-param    body\n-              :content-types [\"application/json\" \"application/xml\"]\n-              :accepts       [\"application/json\" \"application/xml\"]\n-              :auth-names    [\"petstore_auth\"]})))\n+  [body ]\n+  (call-api \"/pet\" :post\n+            {:path-params   {}\n+             :header-params {}\n+             :query-params  {}\n+             :form-params   {}\n+             :body-param    body\n+             :content-types [\"application/json\" \"application/xml\"]\n+             :accepts       [\"application/xml\" \"application/json\"]\n+             :auth-names    [\"petstore_auth\"]}))\n \n (defn add-pet\n   \"Add a new pet to the store\n   \"\n-  ([] (add-pet nil))\n-  ([optional-params]\n-   (:data (add-pet-with-http-info optional-params))))\n+  [body ]\n+  (:data (add-pet-with-http-info body)))\n \n (defn delete-pet-with-http-info\n   \"Deletes a pet\n@@ -35,7 +33,7 @@\n               :query-params  {}\n               :form-params   {}\n               :content-types []\n-              :accepts       [\"application/json\" \"application/xml\"]\n+              :accepts       [\"application/xml\" \"application/json\"]\n               :auth-names    [\"petstore_auth\"]})))\n \n (defn delete-pet\n@@ -48,48 +46,44 @@\n (defn find-pets-by-status-with-http-info\n   \"Finds Pets by status\n   Multiple status values can be provided with comma separated strings\"\n-  ([] (find-pets-by-status-with-http-info nil))\n-  ([{:keys [status ]}]\n-   (call-api \"/pet/findByStatus\" :get\n-             {:path-params   {}\n-              :header-params {}\n-              :query-params  {\"status\" (with-collection-format status :multi) }\n-              :form-params   {}\n-              :content-types []\n-              :accepts       [\"application/json\" \"application/xml\"]\n-              :auth-names    [\"petstore_auth\"]})))\n+  [status ]\n+  (call-api \"/pet/findByStatus\" :get\n+            {:path-params   {}\n+             :header-params {}\n+             :query-params  {\"status\" (with-collection-format status :csv) }\n+             :form-params   {}\n+             :content-types []\n+             :accepts       [\"application/xml\" \"application/json\"]\n+             :auth-names    [\"petstore_auth\"]}))\n \n (defn find-pets-by-status\n   \"Finds Pets by status\n   Multiple status values can be provided with comma separated strings\"\n-  ([] (find-pets-by-status nil))\n-  ([optional-params]\n-   (:data (find-pets-by-status-with-http-info optional-params))))\n+  [status ]\n+  (:data (find-pets-by-status-with-http-info status)))\n \n (defn find-pets-by-tags-with-http-info\n   \"Finds Pets by tags\n   Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\"\n-  ([] (find-pets-by-tags-with-http-info nil))\n-  ([{:keys [tags ]}]\n-   (call-api \"/pet/findByTags\" :get\n-             {:path-params   {}\n-              :header-params {}\n-              :query-params  {\"tags\" (with-collection-format tags :multi) }\n-              :form-params   {}\n-              :content-types []\n-              :accepts       [\"application/json\" \"application/xml\"]\n-              :auth-names    [\"petstore_auth\"]})))\n+  [tags ]\n+  (call-api \"/pet/findByTags\" :get\n+            {:path-params   {}\n+             :header-params {}\n+             :query-params  {\"tags\" (with-collection-format tags :csv) }\n+             :form-params   {}\n+             :content-types []\n+             :accepts       [\"application/xml\" \"application/json\"]\n+             :auth-names    [\"petstore_auth\"]}))\n \n (defn find-pets-by-tags\n   \"Finds Pets by tags\n   Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\"\n-  ([] (find-pets-by-tags nil))\n-  ([optional-params]\n-   (:data (find-pets-by-tags-with-http-info optional-params))))\n+  [tags ]\n+  (:data (find-pets-by-tags-with-http-info tags)))\n \n (defn get-pet-by-id-with-http-info\n   \"Find pet by ID\n-  Returns a pet when ID < 10.  ID > 10 or nonintegers will simulate API error conditions\"\n+  Returns a single pet\"\n   [pet-id ]\n   (call-api \"/pet/{petId}\" :get\n             {:path-params   {\"petId\" pet-id }\n@@ -97,36 +91,35 @@\n              :query-params  {}\n              :form-params   {}\n              :content-types []\n+\n              :accepts       [\"application/json\" \"application/xml\"]\n              :auth-names    [\"api_key\" \"petstore_auth\"]}))\n \n (defn get-pet-by-id\n   \"Find pet by ID\n-  Returns a pet when ID < 10.  ID > 10 or nonintegers will simulate API error conditions\"\n+  Returns a single pet\"\n   [pet-id ]\n   (:data (get-pet-by-id-with-http-info pet-id)))\n \n (defn update-pet-with-http-info\n   \"Update an existing pet\n   \"\n-  ([] (update-pet-with-http-info nil))\n-  ([{:keys [body ]}]\n-   (call-api \"/pet\" :put\n-             {:path-params   {}\n-              :header-params {}\n-              :query-params  {}\n-              :form-params   {}\n-              :body-param    body\n-              :content-types [\"application/json\" \"application/xml\"]\n-              :accepts       [\"application/json\" \"application/xml\"]\n-              :auth-names    [\"petstore_auth\"]})))\n+  [body ]\n+  (call-api \"/pet\" :put\n+            {:path-params   {}\n+             :header-params {}\n+             :query-params  {}\n+             :form-params   {}\n+             :body-param    body\n+             :content-types [\"application/json\" \"application/xml\"]\n+             :accepts       [\"application/xml\" \"application/json\"]\n+             :auth-names    [\"petstore_auth\"]}))\n \n (defn update-pet\n   \"Update an existing pet\n   \"\n-  ([] (update-pet nil))\n-  ([optional-params]\n-   (:data (update-pet-with-http-info optional-params))))\n+  [body ]\n+  (:data (update-pet-with-http-info body)))\n \n (defn update-pet-with-form-with-http-info\n   \"Updates a pet in the store with form data\n@@ -139,7 +132,7 @@\n               :query-params  {}\n               :form-params   {\"name\" name \"status\" status }\n               :content-types [\"application/x-www-form-urlencoded\"]\n-              :accepts       [\"application/json\" \"application/xml\"]\n+              :accepts       [\"application/xml\" \"application/json\"]\n               :auth-names    [\"petstore_auth\"]})))\n \n (defn update-pet-with-form\n@@ -160,7 +153,7 @@\n               :query-params  {}\n               :form-params   {\"additionalMetadata\" additional-metadata \"file\" file }\n               :content-types [\"multipart/form-data\"]\n-              :accepts       [\"application/json\" \"application/xml\"]\n+              :accepts       [\"application/json\"]\n               :auth-names    [\"petstore_auth\"]})))\n \n (defn upload-file\ndiff --git a/samples/client/petstore/clojure/src/swagger_petstore/api/store.clj b/samples/client/petstore/clojure/src/swagger_petstore/api/store.clj\nindex 04d185a8086..0e1bf23f41a 100644\n--- a/samples/client/petstore/clojure/src/swagger_petstore/api/store.clj\n+++ b/samples/client/petstore/clojure/src/swagger_petstore/api/store.clj\n@@ -12,7 +12,7 @@\n              :query-params  {}\n              :form-params   {}\n              :content-types []\n-             :accepts       [\"application/json\" \"application/xml\"]\n+             :accepts       [\"application/xml\" \"application/json\"]\n              :auth-names    []}))\n \n (defn delete-order\n@@ -31,7 +31,7 @@\n              :query-params  {}\n              :form-params   {}\n              :content-types []\n-             :accepts       [\"application/json\" \"application/xml\"]\n+             :accepts       [\"application/json\"]\n              :auth-names    [\"api_key\"]}))\n \n (defn get-inventory\n@@ -50,7 +50,7 @@\n              :query-params  {}\n              :form-params   {}\n              :content-types []\n-             :accepts       [\"application/json\" \"application/xml\"]\n+             :accepts       [\"application/xml\" \"application/json\"]\n              :auth-names    []}))\n \n (defn get-order-by-id\n@@ -62,22 +62,20 @@\n (defn place-order-with-http-info\n   \"Place an order for a pet\n   \"\n-  ([] (place-order-with-http-info nil))\n-  ([{:keys [body ]}]\n-   (call-api \"/store/order\" :post\n-             {:path-params   {}\n-              :header-params {}\n-              :query-params  {}\n-              :form-params   {}\n-              :body-param    body\n-              :content-types []\n-              :accepts       [\"application/json\" \"application/xml\"]\n-              :auth-names    []})))\n+  [body ]\n+  (call-api \"/store/order\" :post\n+            {:path-params   {}\n+             :header-params {}\n+             :query-params  {}\n+             :form-params   {}\n+             :body-param    body\n+             :content-types []\n+             :accepts       [\"application/xml\" \"application/json\"]\n+             :auth-names    []}))\n \n (defn place-order\n   \"Place an order for a pet\n   \"\n-  ([] (place-order nil))\n-  ([optional-params]\n-   (:data (place-order-with-http-info optional-params))))\n+  [body ]\n+  (:data (place-order-with-http-info body)))\n \ndiff --git a/samples/client/petstore/clojure/src/swagger_petstore/api/user.clj b/samples/client/petstore/clojure/src/swagger_petstore/api/user.clj\nindex 26e3dffc624..a57846f44c4 100644\n--- a/samples/client/petstore/clojure/src/swagger_petstore/api/user.clj\n+++ b/samples/client/petstore/clojure/src/swagger_petstore/api/user.clj\n@@ -5,68 +5,62 @@\n (defn create-user-with-http-info\n   \"Create user\n   This can only be done by the logged in user.\"\n-  ([] (create-user-with-http-info nil))\n-  ([{:keys [body ]}]\n-   (call-api \"/user\" :post\n-             {:path-params   {}\n-              :header-params {}\n-              :query-params  {}\n-              :form-params   {}\n-              :body-param    body\n-              :content-types []\n-              :accepts       [\"application/json\" \"application/xml\"]\n-              :auth-names    []})))\n+  [body ]\n+  (call-api \"/user\" :post\n+            {:path-params   {}\n+             :header-params {}\n+             :query-params  {}\n+             :form-params   {}\n+             :body-param    body\n+             :content-types []\n+             :accepts       [\"application/xml\" \"application/json\"]\n+             :auth-names    []}))\n \n (defn create-user\n   \"Create user\n   This can only be done by the logged in user.\"\n-  ([] (create-user nil))\n-  ([optional-params]\n-   (:data (create-user-with-http-info optional-params))))\n+  [body ]\n+  (:data (create-user-with-http-info body)))\n \n (defn create-users-with-array-input-with-http-info\n   \"Creates list of users with given input array\n   \"\n-  ([] (create-users-with-array-input-with-http-info nil))\n-  ([{:keys [body ]}]\n-   (call-api \"/user/createWithArray\" :post\n-             {:path-params   {}\n-              :header-params {}\n-              :query-params  {}\n-              :form-params   {}\n-              :body-param    body\n-              :content-types []\n-              :accepts       [\"application/json\" \"application/xml\"]\n-              :auth-names    []})))\n+  [body ]\n+  (call-api \"/user/createWithArray\" :post\n+            {:path-params   {}\n+             :header-params {}\n+             :query-params  {}\n+             :form-params   {}\n+             :body-param    body\n+             :content-types []\n+             :accepts       [\"application/xml\" \"application/json\"]\n+             :auth-names    []}))\n \n (defn create-users-with-array-input\n   \"Creates list of users with given input array\n   \"\n-  ([] (create-users-with-array-input nil))\n-  ([optional-params]\n-   (:data (create-users-with-array-input-with-http-info optional-params))))\n+  [body ]\n+  (:data (create-users-with-array-input-with-http-info body)))\n \n (defn create-users-with-list-input-with-http-info\n   \"Creates list of users with given input array\n   \"\n-  ([] (create-users-with-list-input-with-http-info nil))\n-  ([{:keys [body ]}]\n-   (call-api \"/user/createWithList\" :post\n-             {:path-params   {}\n-              :header-params {}\n-              :query-params  {}\n-              :form-params   {}\n-              :body-param    body\n-              :content-types []\n-              :accepts       [\"application/json\" \"application/xml\"]\n-              :auth-names    []})))\n+  [body ]\n+  (call-api \"/user/createWithList\" :post\n+            {:path-params   {}\n+             :header-params {}\n+             :query-params  {}\n+             :form-params   {}\n+             :body-param    body\n+             :content-types []\n+             :accepts       [\"application/xml\" \"application/json\"]\n+             :auth-names    []}))\n \n (defn create-users-with-list-input\n   \"Creates list of users with given input array\n   \"\n-  ([] (create-users-with-list-input nil))\n-  ([optional-params]\n-   (:data (create-users-with-list-input-with-http-info optional-params))))\n+  [body ]\n+  (:data (create-users-with-list-input-with-http-info body)))\n \n (defn delete-user-with-http-info\n   \"Delete user\n@@ -78,7 +72,7 @@\n              :query-params  {}\n              :form-params   {}\n              :content-types []\n-             :accepts       [\"application/json\" \"application/xml\"]\n+             :accepts       [\"application/xml\" \"application/json\"]\n              :auth-names    []}))\n \n (defn delete-user\n@@ -97,7 +91,7 @@\n              :query-params  {}\n              :form-params   {}\n              :content-types []\n-             :accepts       [\"application/json\" \"application/xml\"]\n+             :accepts       [\"application/xml\" \"application/json\"]\n              :auth-names    []}))\n \n (defn get-user-by-name\n@@ -109,23 +103,21 @@\n (defn login-user-with-http-info\n   \"Logs user into the system\n   \"\n-  ([] (login-user-with-http-info nil))\n-  ([{:keys [username password ]}]\n-   (call-api \"/user/login\" :get\n-             {:path-params   {}\n-              :header-params {}\n-              :query-params  {\"username\" username \"password\" password }\n-              :form-params   {}\n-              :content-types []\n-              :accepts       [\"application/json\" \"application/xml\"]\n-              :auth-names    []})))\n+  [username password ]\n+  (call-api \"/user/login\" :get\n+            {:path-params   {}\n+             :header-params {}\n+             :query-params  {\"username\" username \"password\" password }\n+             :form-params   {}\n+             :content-types []\n+             :accepts       [\"application/xml\" \"application/json\"]\n+             :auth-names    []}))\n \n (defn login-user\n   \"Logs user into the system\n   \"\n-  ([] (login-user nil))\n-  ([optional-params]\n-   (:data (login-user-with-http-info optional-params))))\n+  [username password ]\n+  (:data (login-user-with-http-info username password)))\n \n (defn logout-user-with-http-info\n   \"Logs out current logged in user session\n@@ -137,7 +129,7 @@\n              :query-params  {}\n              :form-params   {}\n              :content-types []\n-             :accepts    ",
    "Add AWS Elastic Beanstalk to README ( <issue_id> )": "diff --git a/README.md b/README.md\nindex 8b059b4c16..cc09bce6c6 100644\n--- a/README.md\n+++ b/README.md\n@@ -311,6 +311,13 @@ hazelcast:\n \n All other parameters can be used exactly the same as described in the EC2-related section.\n \n+## AWS Elastic Beanstalk\n+\n+The plugin works correctly on the AWS Elastic Beanstalk environment. While deploying your application into the Java Platform, please make sure your Elastic Beanstalk Environment Configuration satisfies the following requirements:\n+* EC2 security groups contain a group which allows the port `5701`\n+* IAM instance profile contains IAM role which has `ec2:DescribeInstances` permission (or your Hazelcast configuration contains `access-key` and `secret-key`)\n+* Deployment policy is `Rolling` (instead of the default `All at once` which may cause the whole Hazelcast members to restart at the same time and therefore lose data)\n+\n ## Zone Aware\n \n Hazelcast AWS Discovery plugin supports Hazelcast Zone Aware feature for both EC2 and ECS. When using `ZONE_AWARE` configuration, backups are created in the other Availability Zone.",
    "Pull dependency definitions to root module": "diff --git a/build.gradle b/build.gradle\nindex 0497772..d1fac21 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,12 +1,28 @@\n buildscript {\n-  ext.deps = [\n-    android_gradle_plugin      : 'com.android.tools.build:gradle:3.0.0-alpha7',\n+  ext.versions = [\n+      'minSdk': 14,\n+      'compileSdk': 25,\n+      'buildTools': '25.0.0',\n+      'supportLibrary': '23.1.1'\n   ]\n \n-  ext.versions = [\n-    'minSdk': 14,\n-    'compileSdk': 25,\n-    'buildTools': '25.0.0',\n+  ext.deps = [\n+    android_gradle_plugin: 'com.android.tools.build:gradle:3.0.0-alpha7',\n+    'support': [\n+      'annotations': \"com.android.support:support-annotations:${versions.supportLibrary}\",\n+      'appcompat': \"com.android.support:appcompat-v7:${versions.supportLibrary}\",\n+      'design': \"com.android.support:design:${versions.supportLibrary}\",\n+      'test': [\n+          'espresso': 'com.android.support.test.espresso:espresso-core:2.2.1',\n+          'runner': 'com.android.support.test:runner:0.4',\n+          'rules': 'com.android.support.test:rules:0.4',\n+      ]\n+    ],\n+    'junit': 'junit:junit:4.10',\n+    'assertj': 'org.assertj:assertj-core:1.7.1',\n+    'mockito': 'org.mockito:mockito-core:1.10.19',\n+    'robolectric': 'org.robolectric:robolectric:3.0',\n+    'antTasks': 'org.apache.maven:maven-ant-tasks:2.1.3',\n   ]\n \n   dependencies {\ndiff --git a/flow-sample-basic/build.gradle b/flow-sample-basic/build.gradle\nindex 0026d31..8ff5c37 100644\n--- a/flow-sample-basic/build.gradle\n+++ b/flow-sample-basic/build.gradle\n@@ -25,11 +25,11 @@ android {\n \n dependencies {\n   compile project(':flow')\n-  compile 'com.android.support:appcompat-v7:23.1.1'\n-  compile 'com.android.support:design:23.1.1'\n-  androidTestCompile 'com.android.support.test:runner:0.4'\n-  androidTestCompile 'com.android.support.test:rules:0.4'\n-  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'\n+  compile deps.support.appcompat\n+  compile deps.support.design\n+  androidTestCompile deps.support.test.runner\n+  androidTestCompile deps.support.test.rules\n+  androidTestCompile deps.support.test.espresso\n }\n \n //noinspection GroovyAssignabilityCheck\ndiff --git a/flow-sample-helloworld/build.gradle b/flow-sample-helloworld/build.gradle\nindex 90fb370..8c9d67f 100644\n--- a/flow-sample-helloworld/build.gradle\n+++ b/flow-sample-helloworld/build.gradle\n@@ -25,10 +25,10 @@ android {\n \n dependencies {\n   compile project(':flow')\n-  compile 'com.android.support:appcompat-v7:23.1.1'\n-  androidTestCompile 'com.android.support.test:runner:0.4'\n-  androidTestCompile 'com.android.support.test:rules:0.4'\n-  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'\n+  compile deps.support.appcompat\n+  androidTestCompile deps.support.test.runner\n+  androidTestCompile deps.support.test.rules\n+  androidTestCompile deps.support.test.espresso\n }\n \n //noinspection GroovyAssignabilityCheck\ndiff --git a/flow-sample-intents/build.gradle b/flow-sample-intents/build.gradle\nindex 321b146..6d37de0 100644\n--- a/flow-sample-intents/build.gradle\n+++ b/flow-sample-intents/build.gradle\n@@ -25,11 +25,11 @@ android {\n \n dependencies {\n   compile project(':flow')\n-  compile 'com.android.support:appcompat-v7:23.1.1'\n-  compile 'com.android.support:design:23.1.1'\n-  androidTestCompile 'com.android.support.test:runner:0.4'\n-  androidTestCompile 'com.android.support.test:rules:0.4'\n-  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'\n+  compile deps.support.appcompat\n+  compile deps.support.design\n+  androidTestCompile deps.support.test.runner\n+  androidTestCompile deps.support.test.rules\n+  androidTestCompile deps.support.test.espresso\n }\n \n //noinspection GroovyAssignabilityCheck\ndiff --git a/flow-sample-multikey/build.gradle b/flow-sample-multikey/build.gradle\nindex dfea1f2..8969365 100644\n--- a/flow-sample-multikey/build.gradle\n+++ b/flow-sample-multikey/build.gradle\n@@ -25,11 +25,11 @@ android {\n \n dependencies {\n   compile project(':flow')\n-  compile 'com.android.support:appcompat-v7:23.1.1'\n-  compile 'com.android.support:design:23.1.1'\n-  androidTestCompile 'com.android.support.test:runner:0.4'\n-  androidTestCompile 'com.android.support.test:rules:0.4'\n-  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'\n+  compile deps.support.appcompat\n+  compile deps.support.design\n+  androidTestCompile deps.support.test.runner\n+  androidTestCompile deps.support.test.rules\n+  androidTestCompile deps.support.test.espresso\n }\n \n //noinspection GroovyAssignabilityCheck\ndiff --git a/flow-sample-orientation-lock/build.gradle b/flow-sample-orientation-lock/build.gradle\nindex 5115384..d97c05a 100644\n--- a/flow-sample-orientation-lock/build.gradle\n+++ b/flow-sample-orientation-lock/build.gradle\n@@ -25,11 +25,11 @@ android {\n \n dependencies {\n   compile project(':flow')\n-  compile 'com.android.support:appcompat-v7:23.1.1'\n-  compile 'com.android.support:design:23.1.1'\n-  androidTestCompile 'com.android.support.test:runner:0.4'\n-  androidTestCompile 'com.android.support.test:rules:0.4'\n-  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'\n+  compile deps.support.appcompat\n+  compile deps.support.design\n+  androidTestCompile deps.support.test.runner\n+  androidTestCompile deps.support.test.rules\n+  androidTestCompile deps.support.test.espresso\n }\n \n //noinspection GroovyAssignabilityCheck\ndiff --git a/flow-sample-tree/build.gradle b/flow-sample-tree/build.gradle\nindex 5f391ef..fdfec5e 100644\n--- a/flow-sample-tree/build.gradle\n+++ b/flow-sample-tree/build.gradle\n@@ -25,11 +25,11 @@ android {\n \n dependencies {\n   compile project(':flow')\n-  compile 'com.android.support:appcompat-v7:23.1.1'\n-  compile 'com.android.support:design:23.1.1'\n-  androidTestCompile 'com.android.support.test:runner:0.4'\n-  androidTestCompile 'com.android.support.test:rules:0.4'\n-  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'\n+  compile deps.support.appcompat\n+  compile deps.support.design\n+  androidTestCompile deps.support.test.runner\n+  androidTestCompile deps.support.test.rules\n+  androidTestCompile deps.support.test.espresso\n }\n \n //noinspection GroovyAssignabilityCheck\ndiff --git a/flow/build.gradle b/flow/build.gradle\nindex 13820cb..d2e48d0 100644\n--- a/flow/build.gradle\n+++ b/flow/build.gradle\n@@ -11,12 +11,12 @@ android {\n }\n \n dependencies {\n-  compile 'com.android.support:support-annotations:23.1.1'\n-  testCompile 'junit:junit:4.10'\n-  testCompile 'org.assertj:assertj-core:1.7.1'\n-  testCompile 'org.mockito:mockito-core:1.10.19'\n-  testCompile 'org.robolectric:robolectric:3.0'\n-  testCompile 'org.apache.maven:maven-ant-tasks:2.1.3'\n+  compile deps.support.annotations\n+  testCompile deps.junit\n+  testCompile deps.assertj\n+  testCompile deps.mockito\n+  testCompile deps.robolectric\n+  testCompile deps.antTasks\n }\n \n apply from: rootProject.file('gradle/gradle-mvn-push.gradle')",
    "Removed useless enum , moved buffer generator method and cleaned WebSocketFrameFactoryImpl .": "diff --git a/src/main/java/io/vertx/core/http/impl/Http1xClientConnection.java b/src/main/java/io/vertx/core/http/impl/Http1xClientConnection.java\nindex a92dd96d3..af13de828 100644\n--- a/src/main/java/io/vertx/core/http/impl/Http1xClientConnection.java\n+++ b/src/main/java/io/vertx/core/http/impl/Http1xClientConnection.java\n@@ -23,7 +23,6 @@ import io.vertx.core.http.*;\n import io.vertx.core.http.HttpMethod;\n import io.vertx.core.http.HttpVersion;\n import io.vertx.core.http.impl.pool.ConnectionListener;\n-import io.vertx.core.http.impl.ws.WebSocketCloseFrameCode;\n import io.vertx.core.http.impl.ws.WebSocketFrameInternal;\n import io.vertx.core.impl.ContextImpl;\n import io.vertx.core.logging.Logger;\ndiff --git a/src/main/java/io/vertx/core/http/impl/Http1xServerConnection.java b/src/main/java/io/vertx/core/http/impl/Http1xServerConnection.java\nindex a022fca89..39d6fda26 100644\n--- a/src/main/java/io/vertx/core/http/impl/Http1xServerConnection.java\n+++ b/src/main/java/io/vertx/core/http/impl/Http1xServerConnection.java\n@@ -45,7 +45,6 @@ import io.vertx.core.http.HttpServerOptions;\n import io.vertx.core.http.HttpServerRequest;\n import io.vertx.core.http.ServerWebSocket;\n import io.vertx.core.http.WebSocketFrame;\n-import io.vertx.core.http.impl.ws.WebSocketCloseFrameCode;\n import io.vertx.core.http.impl.ws.WebSocketFrameInternal;\n import io.vertx.core.impl.ContextImpl;\n import io.vertx.core.impl.VertxInternal;\ndiff --git a/src/main/java/io/vertx/core/http/impl/HttpUtils.java b/src/main/java/io/vertx/core/http/impl/HttpUtils.java\nindex 5b5016f66..0e61f3b76 100644\n--- a/src/main/java/io/vertx/core/http/impl/HttpUtils.java\n+++ b/src/main/java/io/vertx/core/http/impl/HttpUtils.java\n@@ -12,6 +12,8 @@\n package io.vertx.core.http.impl;\n \n \n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.Unpooled;\n import io.netty.handler.codec.compression.ZlibWrapper;\n import io.netty.handler.codec.http.HttpContentCompressor;\n import io.netty.handler.codec.http.HttpHeaderNames;\n@@ -27,6 +29,7 @@ import io.vertx.core.http.HttpServerRequest;\n \n import java.net.URI;\n import java.net.URISyntaxException;\n+import java.nio.charset.Charset;\n import java.util.Base64;\n import java.util.List;\n import java.util.Map;\n@@ -381,6 +384,16 @@ public final class HttpUtils {\n     return null;\n   }\n \n+  public static ByteBuf generateWSCloseFrameByteBuf(short statusCode, String reason) {\n+    if (reason != null)\n+      return Unpooled.copiedBuffer(\n+        Unpooled.copyShort(statusCode), // First two bytes are reserved for status code\n+        Unpooled.copiedBuffer(reason, Charset.forName(\"UTF-8\"))\n+      );\n+    else\n+      return Unpooled.copyShort(statusCode);\n+  }\n+\n   private static class CustomCompressor extends HttpContentCompressor {\n     @Override\n     public ZlibWrapper determineWrapper(String acceptEncoding) {\ndiff --git a/src/main/java/io/vertx/core/http/impl/WebSocketFrameFactoryImpl.java b/src/main/java/io/vertx/core/http/impl/WebSocketFrameFactoryImpl.java\nindex 1a45dc369..ab4589418 100644\n--- a/src/main/java/io/vertx/core/http/impl/WebSocketFrameFactoryImpl.java\n+++ b/src/main/java/io/vertx/core/http/impl/WebSocketFrameFactoryImpl.java\n@@ -11,16 +11,11 @@\n \n package io.vertx.core.http.impl;\n \n-import io.netty.buffer.ByteBuf;\n-import io.netty.buffer.Unpooled;\n-import io.netty.buffer.UnpooledDirectByteBuf;\n import io.vertx.core.buffer.Buffer;\n import io.vertx.core.http.WebSocketFrame;\n import io.vertx.core.http.impl.ws.WebSocketFrameImpl;\n import io.vertx.core.spi.WebSocketFrameFactory;\n \n-import java.nio.charset.Charset;\n-\n /**\n  * @author <a href=\"http://tfox.org\">Tim Fox</a>\n  */\n@@ -51,5 +46,4 @@ public class WebSocketFrameFactoryImpl implements WebSocketFrameFactory {\n   public WebSocketFrame pongFrame(Buffer data) {\n     return new WebSocketFrameImpl(FrameType.PONG, data.getByteBuf(), true);\n   }\n-\n }\ndiff --git a/src/main/java/io/vertx/core/http/impl/WebSocketImplBase.java b/src/main/java/io/vertx/core/http/impl/WebSocketImplBase.java\nindex b4fc28d5d..4b854e775 100644\n--- a/src/main/java/io/vertx/core/http/impl/WebSocketImplBase.java\n+++ b/src/main/java/io/vertx/core/http/impl/WebSocketImplBase.java\n@@ -18,12 +18,10 @@ import io.vertx.core.eventbus.Message;\n import io.vertx.core.eventbus.MessageConsumer;\n import io.vertx.core.http.WebSocketBase;\n import io.vertx.core.http.WebSocketFrame;\n-import io.vertx.core.http.impl.ws.WebSocketCloseFrameCode;\n import io.vertx.core.http.impl.ws.WebSocketFrameImpl;\n import io.vertx.core.http.impl.ws.WebSocketFrameInternal;\n import io.vertx.core.impl.VertxInternal;\n import io.vertx.core.net.SocketAddress;\n-import io.vertx.core.net.impl.ConnectionBase;\n \n import javax.net.ssl.SSLPeerUnverifiedException;\n import javax.net.ssl.SSLSession;\n@@ -105,7 +103,7 @@ public abstract class WebSocketImplBase<S extends WebSocketBase> implements WebS\n   public void close(short statusCode, String reason) {\n     synchronized (conn) {\n       checkClosed();\n-      conn.closeWithPayload(WebSocketCloseFrameCode.generateByteBuffer(statusCode, reason));\n+      conn.closeWithPayload(HttpUtils.generateWSCloseFrameByteBuf(statusCode, reason));\n       cleanupHandlers();\n     }\n   }\ndiff --git a/src/main/java/io/vertx/core/http/impl/ws/WebSocketCloseFrameCode.java b/src/main/java/io/vertx/core/http/impl/ws/WebSocketCloseFrameCode.java\ndeleted file mode 100644\nindex 21c4e9596..000000000\n--- a/src/main/java/io/vertx/core/http/impl/ws/WebSocketCloseFrameCode.java\n+++ /dev/null\n@@ -1,37 +0,0 @@\n-package io.vertx.core.http.impl.ws;\n-\n-import io.netty.buffer.ByteBuf;\n-import io.netty.buffer.Unpooled;\n-\n-import java.nio.charset.Charset;\n-\n-/**\n- * @author Francesco Guardiani @slinkydeveloper\n- */\n-public enum WebSocketCloseFrameCode {\n-\n-  NORMAL_CLOSE((short)1000, \"Connection Closed\");\n-\n-  private short statusCode;\n-  private String reason;\n-\n-  WebSocketCloseFrameCode(short statusCode, String reason) {\n-    this.statusCode = statusCode;\n-    this.reason = reason;\n-  }\n-\n-  public ByteBuf byteBuf() {\n-    return generateByteBuffer(this.statusCode, this.reason);\n-  }\n-\n-  public static ByteBuf generateByteBuffer(short statusCode, String reason) {\n-    if (reason != null)\n-      return Unpooled.copiedBuffer(\n-        Unpooled.copyShort(statusCode), // First two bytes are reserved for status code\n-        Unpooled.copiedBuffer(reason, Charset.forName(\"UTF-8\"))\n-      );\n-    else\n-      return Unpooled.copyShort(statusCode);\n-  }\n-\n-}",
    "Remove references to RemoteStore from : k9mail module": "diff --git a/backend/api/src/main/java/com/fsck/k9/backend/api/Backend.kt b/backend/api/src/main/java/com/fsck/k9/backend/api/Backend.kt\nindex e2fe319e0..ab92f3350 100644\n--- a/backend/api/src/main/java/com/fsck/k9/backend/api/Backend.kt\n+++ b/backend/api/src/main/java/com/fsck/k9/backend/api/Backend.kt\n@@ -18,6 +18,7 @@ interface Backend {\n     val supportsMove: Boolean\n     val supportsCopy: Boolean\n     val supportsTrashFolder: Boolean\n+    val supportsSearchByDate: Boolean\n     val isPushCapable: Boolean\n \n     @Throws(MessagingException::class)\n@@ -79,4 +80,7 @@ interface Backend {\n     fun uploadMessage(folderServerId: String, message: Message): String?\n \n     fun createPusher(receiver: PushReceiver): Pusher\n+\n+    @Throws(MessagingException::class)\n+    fun checkServerSettings()\n }\ndiff --git a/backend/imap/src/main/java/com/fsck/k9/backend/imap/ImapBackend.java b/backend/imap/src/main/java/com/fsck/k9/backend/imap/ImapBackend.java\nindex dc3774bba..021edf9e3 100644\n--- a/backend/imap/src/main/java/com/fsck/k9/backend/imap/ImapBackend.java\n+++ b/backend/imap/src/main/java/com/fsck/k9/backend/imap/ImapBackend.java\n@@ -85,6 +85,11 @@ public class ImapBackend implements Backend {\n         return true;\n     }\n \n+    @Override\n+    public boolean getSupportsSearchByDate() {\n+        return true;\n+    }\n+\n     @Override\n     public boolean isPushCapable() {\n         return true;\n@@ -187,4 +192,9 @@ public class ImapBackend implements Backend {\n     public Pusher createPusher(@NotNull PushReceiver receiver) {\n         return new ImapPusher(imapStore, receiver, powerManager);\n     }\n+\n+    @Override\n+    public void checkServerSettings() throws MessagingException {\n+        imapStore.checkSettings();\n+    }\n }\ndiff --git a/backend/pop3/src/main/java/com/fsck/k9/backend/pop3/Pop3Backend.kt b/backend/pop3/src/main/java/com/fsck/k9/backend/pop3/Pop3Backend.kt\nindex b12fbd58e..26f6fb779 100644\n--- a/backend/pop3/src/main/java/com/fsck/k9/backend/pop3/Pop3Backend.kt\n+++ b/backend/pop3/src/main/java/com/fsck/k9/backend/pop3/Pop3Backend.kt\n@@ -15,7 +15,7 @@ import com.fsck.k9.mail.PushReceiver\n import com.fsck.k9.mail.Pusher\n import com.fsck.k9.mail.store.pop3.Pop3Store\n \n-class Pop3Backend(accountName: String, backendStorage: BackendStorage, pop3Store: Pop3Store) : Backend {\n+class Pop3Backend(accountName: String, backendStorage: BackendStorage, private val pop3Store: Pop3Store) : Backend {\n     private val pop3Sync: Pop3Sync = Pop3Sync(accountName, backendStorage, pop3Store)\n     private val commandGetFolders = CommandGetFolders()\n     private val commandSetFlag = CommandSetFlag(pop3Store)\n@@ -27,6 +27,7 @@ class Pop3Backend(accountName: String, backendStorage: BackendStorage, pop3Store\n     override val supportsMove = false\n     override val supportsCopy = false\n     override val supportsTrashFolder = false\n+    override val supportsSearchByDate = false\n     override val isPushCapable = false\n \n     override fun getFolders(forceListAll: Boolean): List<FolderInfo> {\n@@ -105,4 +106,8 @@ class Pop3Backend(accountName: String, backendStorage: BackendStorage, pop3Store\n     override fun createPusher(receiver: PushReceiver): Pusher {\n         throw UnsupportedOperationException(\"not supported\")\n     }\n+\n+    override fun checkServerSettings() {\n+        pop3Store.checkSettings()\n+    }\n }\ndiff --git a/backend/webdav/src/main/java/com/fsck/k9/backend/webdav/WebDavBackend.kt b/backend/webdav/src/main/java/com/fsck/k9/backend/webdav/WebDavBackend.kt\nindex a173e2518..6cf478164 100644\n--- a/backend/webdav/src/main/java/com/fsck/k9/backend/webdav/WebDavBackend.kt\n+++ b/backend/webdav/src/main/java/com/fsck/k9/backend/webdav/WebDavBackend.kt\n@@ -16,7 +16,11 @@ import com.fsck.k9.mail.PushReceiver\n import com.fsck.k9.mail.Pusher\n import com.fsck.k9.mail.store.webdav.WebDavStore\n \n-class WebDavBackend(accountName: String, backendStorage: BackendStorage, webDavStore: WebDavStore) : Backend {\n+class WebDavBackend(\n+        accountName: String,\n+        backendStorage: BackendStorage,\n+        private val webDavStore: WebDavStore\n+) : Backend {\n     private val webDavSync: WebDavSync = WebDavSync(accountName, backendStorage, webDavStore)\n     private val commandGetFolders = CommandGetFolders(webDavStore)\n     private val commandSetFlag = CommandSetFlag(webDavStore)\n@@ -31,6 +35,7 @@ class WebDavBackend(accountName: String, backendStorage: BackendStorage, webDavS\n     override val supportsMove = true\n     override val supportsCopy = true\n     override val supportsTrashFolder = true\n+    override val supportsSearchByDate = false\n     override val isPushCapable = false\n \n     override fun getFolders(forceListAll: Boolean): List<FolderInfo> {\n@@ -110,4 +115,8 @@ class WebDavBackend(accountName: String, backendStorage: BackendStorage, webDavS\n     override fun createPusher(receiver: PushReceiver): Pusher {\n         throw UnsupportedOperationException(\"not supported\")\n     }\n+\n+    override fun checkServerSettings() {\n+        webDavStore.checkSettings()\n+    }\n }\ndiff --git a/k9mail/src/main/java/com/fsck/k9/Account.java b/k9mail/src/main/java/com/fsck/k9/Account.java\nindex 2cc9c6628..98943321c 100644\n--- a/k9mail/src/main/java/com/fsck/k9/Account.java\n+++ b/k9mail/src/main/java/com/fsck/k9/Account.java\n@@ -29,8 +29,6 @@ import com.fsck.k9.mail.MessagingException;\n import com.fsck.k9.mail.NetworkType;\n import com.fsck.k9.mail.filter.Base64;\n import com.fsck.k9.mail.ssl.LocalKeyStore;\n-import com.fsck.k9.mail.store.RemoteStore;\n-import com.fsck.k9.mail.store.RemoteStoreManager;\n import com.fsck.k9.mail.store.StoreConfig;\n import com.fsck.k9.mailstore.LocalStore;\n import com.fsck.k9.mailstore.StorageManager;\n@@ -1197,18 +1195,6 @@ public class Account implements BaseAccount, StoreConfig {\n         return LocalStore.getInstance(this, K9.app);\n     }\n \n-    public RemoteStore getRemoteStore() throws MessagingException {\n-        return RemoteStoreManager.getInstance(K9.app, this);\n-    }\n-\n-    // It'd be great if this actually went into the store implementation\n-    // to get this, but that's expensive and not easily accessible\n-    // during initialization\n-    public boolean isSearchByDateCapable() {\n-        return (getStoreUri().startsWith(\"imap\"));\n-    }\n-\n-\n     @Override\n     public synchronized String toString() {\n         return description;\ndiff --git a/k9mail/src/main/java/com/fsck/k9/Preferences.java b/k9mail/src/main/java/com/fsck/k9/Preferences.java\nindex fca7f46e9..660f816e2 100644\n--- a/k9mail/src/main/java/com/fsck/k9/Preferences.java\n+++ b/k9mail/src/main/java/com/fsck/k9/Preferences.java\n@@ -12,7 +12,7 @@ import java.util.Map;\n \n import android.content.Context;\n \n-import com.fsck.k9.mail.store.RemoteStoreManager;\n+import com.fsck.k9.backend.BackendManager;\n import com.fsck.k9.mailstore.LocalStore;\n import com.fsck.k9.preferences.Storage;\n import com.fsck.k9.preferences.StorageEditor;\n@@ -31,7 +31,6 @@ public class Preferences {\n         return preferences;\n     }\n \n-\n     private Storage storage;\n     private Map<String, Account> accounts = null;\n     private List<Account> accountsInOrder = null;\n@@ -127,7 +126,7 @@ public class Preferences {\n         }\n \n         try {\n-            RemoteStoreManager.removeInstance(account);\n+            getBackendManager().removeBackend(account);\n         } catch (Exception e) {\n             Timber.e(e, \"Failed to reset remote store for account %s\", account.getUuid());\n         }\n@@ -184,4 +183,8 @@ public class Preferences {\n             }\n         }\n     }\n+\n+    private BackendManager getBackendManager() {\n+        return DI.get(BackendManager.class);\n+    }\n }\ndiff --git a/k9mail/src/main/java/com/fsck/k9/activity/setup/AccountSetupCheckSettings.java b/k9mail/src/main/java/com/fsck/k9/activity/setup/AccountSetupCheckSettings.java\nindex c21b7e476..9d94d09fd 100644\n--- a/k9mail/src/main/java/com/fsck/k9/activity/setup/AccountSetupCheckSettings.java\n+++ b/k9mail/src/main/java/com/fsck/k9/activity/setup/AccountSetupCheckSettings.java\n@@ -27,6 +27,7 @@ import android.widget.ProgressBar;\n import android.widget.TextView;\n \n import com.fsck.k9.Account;\n+import com.fsck.k9.DI;\n import com.fsck.k9.K9;\n import com.fsck.k9.Preferences;\n import com.fsck.k9.R;\n@@ -42,8 +43,6 @@ import com.fsck.k9.mail.MessagingException;\n import com.fsck.k9.mail.Transport;\n import com.fsck.k9.mail.TransportProvider;\n import com.fsck.k9.mail.filter.Hex;\n-import com.fsck.k9.mail.store.RemoteStore;\n-import com.fsck.k9.mail.store.webdav.WebDavStore;\n import com.fsck.k9.mailstore.LocalFolder;\n import com.fsck.k9.mailstore.LocalStore;\n import timber.log.Timber;\n@@ -70,6 +69,8 @@ public class AccountSetupCheckSettings extends K9Activity implements OnClickList\n         OUTGOING\n     }\n \n+    private final MessagingController messagingController = DI.get(MessagingController.class);\n+\n     private Handler mHandler = new Handler();\n \n     private ProgressBar mProgressBar;\n@@ -487,7 +488,7 @@ public class AccountSetupCheckSettings extends K9Activity implements OnClickList\n         }\n \n         private void checkOutgoing() throws MessagingException {\n-            if (!(account.getRemoteStore() instanceof WebDavStore)) {\n+            if (!isWebDavAccount()) {\n                 publishProgress(R.string.account_setup_check_settings_check_outgoing_msg);\n             }\n             Transport transport = TransportProvider.getInstance().getTransport(K9.app, account);\n@@ -500,15 +501,15 @@ public class AccountSetupCheckSettings extends K9Activity implements OnClickList\n         }\n \n         private void checkIncoming() throws MessagingException {\n-            RemoteStore store = account.getRemoteStore();\n-            if (store instanceof WebDavStore) {\n+            if (isWebDavAccount()) {\n                 publishProgress(R.string.account_setup_check_settings_authenticate);\n             } else {\n                 publishProgress(R.string.account_setup_check_settings_check_incoming_msg);\n             }\n-            store.checkSettings();\n \n-            if (store instanceof WebDavStore) {\n+            messagingController.checkServerSettings(account);\n+\n+            if (isWebDavAccount()) {\n                 publishProgress(R.string.account_setup_check_settings_fetch);\n             }\n             MessagingController.getInstance(getApplication()).listFoldersSynchronous(account, true, null);\n@@ -516,6 +517,10 @@ public class AccountSetupCheckSettings extends K9Activity implements OnClickList\n                     .synchronizeMailbox(account, account.getInboxFolder(), null, null);\n         }\n \n+        private boolean isWebDavAccount() {\n+            return account.getStoreUri().startsWith(\"webdav\");\n+        }\n+\n         private void createSpecialLocalFolders(CheckDirection direction) throws MessagingException {\n             if (direction != CheckDirection.INCOMING) {\n                 return;\ndiff --git a/k9mail/src/main/java/com/fsck/k9/activity/setup/AccountSetupIncoming.java b/k9mail/src/main/java/com/fsck/k9/activity/setup/AccountSetupIncoming.java\nindex ee0a735ec..ad1950177 100644\n--- a/k9mail/src/main/java/com/fsck/k9/activity/setup/AccountSetupIncoming.java\n+++ b/k9mail/src/main/java/com/fsck/k9/activity/setup/AccountSetupIncoming.java\n@@ -29,11 +29,13 @@ import android.widget.Toast;\n \n import com.fsck.k9.Account;\n import com.fsck.k9.Account.FolderMode;\n+import com.fsck.k9.DI;\n import com.fsck.k9.Preferences;\n import com.fsck.k9.R;\n import com.fsck.k9.account.AccountCreator;\n import com.fsck.k9.activity.K9Activity;\n import com.fsck.k9.activity.setup.AccountSetupCheckSettings.CheckDirection;\n+import com.fsck.k9.controller.MessagingController;\n import com.fsck.k9.helper.Utility;\n import com.fsck.k9.mail.AuthType;\n import com.fsck.k9.mail.ConnectionSecurity;\n@@ -41,7 +43,6 @@ import com.fsck.k9.mail.NetworkType;\n import com.fsck.k9.mail.ServerSettings;\n import com.fsck.k9.mail.ServerSettings.Type;\n import com.fsck.k9.mail.TransportUris;\n-import com.fsck.k9.mail.store.RemoteStore;\n import com.fsck.k9.mail.store.RemoteStoreManager;\n import com.fsck.k9.mail.store.imap.ImapStoreSettings;\n import com.fsck.k9.mail.store.webdav.WebDavStoreSettings;\n@@ -56,6 +57,8 @@ public class AccountSetupIncoming extends K9Activity implements OnClickListener\n     private static final String STATE_SECURITY_TYPE_POSITION = \"stateSecurityTypePosition\";\n     private static final String STATE_AUTH_TYPE_POSITION = \"authTypePosition\";\n \n+    private final MessagingController messagingController = DI.get(MessagingController.class);\n+\n     private Type mStoreType;\n     private EditText mUsernameView;\n     private EditText mPasswordView;\n@@ -507,13 +510,7 @@ public class AccountSetupIncoming extends K9Activity implements OnClickListener\n     public void onActivityResult(int requestCode, int resultCode, Intent data) {\n         if (resultCode == RESULT_OK) {\n             if (Intent.ACTION_EDIT.equals(getIntent().getAction())) {\n-                boolean isPushCapable = false;\n-                try {\n-                    RemoteStore store = mAccount.getRemoteStore();\n-                    isPushCapable = store.isPushCapable();\n-                } catch (Exception e) {\n-                    Timber.e(e, \"Could not get remote store\");\n-                }\n+                boolean isPushCapable = messagingController.isPushCapable(mAccount);\n                 if (isPushCapable && mAccount.getFolderPushMode() != FolderMode.NONE) {\n                     MailService.actionRestartPushers(this, null);\n                 }\ndiff --git a/k9mail/src/main/java/com/fsck/k9/activity/setup/AccountSetupOptions.java b/k9mail/src/main/java/com/fsck/k9/activity/setup/AccountSetupOptions.java\nindex d40723637..3814ca725 100644\n--- a/k9mail/src/main/java/com/fsck/k9/activity/setup/AccountSetupOptions.java\n+++ b/k9mail/src/main/java/com/fsck/k9/activity/setup/AccountSetupOptions.java\n@@ -12,12 +12,12 @@ import android.widget.CheckBox;\n import android.widget.Spinner;\n \n import com.fsck.k9.Account;\n+import com.fsck.k9.DI;\n import com.fsck.k9.K9;\n import com.fsck.k9.Preferences;\n import com.fsck.k9.R;\n import com.fsck.k9.activity.K9Activity;\n-import com.fsck.k9.mail.store.RemoteStore;\n-import timber.log.Timber;\n+import com.fsck.k9.controller.MessagingController;\n \n \n public class AccountSetupOptions extends K9Activity implements OnClickListener {\n@@ -25,6 +25,8 @@ public class AccountSetupOptions extends K9Activity implements OnClickListener {\n \n     private static final String EXTRA_MAKE_DEFAULT = \"makeDefault\";\n \n+    private final MessagingController messagingController = DI.get(MessagingController.class);\n+\n     private Spinner mCheckFrequencyView;\n \n     private Spinner mDisplayCountView;\n@@ -116,15 +118,7 @@ public class AccountSetupOptions extends K9Activity implements OnClickListener {\n                                             .getDisplayCount());\n \n \n-        boolean isPushCapable = false;\n-        try {\n-            RemoteStore store = mAccount.getRemoteStore();\n-            isPushCapable = store.isPushCapable();\n-        } catch (Exception e) {\n-            Timber.e(e, \"Could not get remote store\");\n-        }\n-\n-\n+        boolean isPushCapable = messagingController.isPushCapable(mAccount);\n         if (!isPushCapable) {\n             mPushEnable.setVisibility(View.GONE);\n         } else {\ndiff --git a/k9mail/src/main/java/com/fsck/k9/activity/setup/FolderSettings.java b/k9mail/src/main/java/com/fsck/k9/activity/setup/FolderSettings.java\nindex 6ec8e4e9e..50911f4eb 100644\n--- a/k9mail/src/main/java/com/fsck/k9/activity/setup/FolderSettings.java\n+++ b/k9mail/src/main/java/com/fsck/k9/activity/setup/FolderSettings.java\n@@ -10,14 +10,15 @@ import android.preference.ListPreference;\n import android.preference.Preference;\n \n import com.fsck.k9.Account;\n+import com.fsck.k9.DI;\n import com.fsck.k9.Preferences;\n import com.fsck.k9.R;\n import com.fsck.k9.activity.FolderInfoHolder;\n import com.fsck.k9.activity.K9PreferenceActivity;\n+import com.fsck.k9.controller.MessagingController;\n import com.fsck.k9.mail.Folder;\n import com.fsck.k9.mail.Folder.FolderClass;\n import com.fsck.k9.mail.MessagingException;\n-import com.fsck.k9.mail.store.RemoteStore;\n import com.fsck.k9.mailstore.LocalFolder;\n import com.fsck.k9.mailstore.LocalStore;\n import com.fsck.k9.service.MailService;\n@@ -36,6 +37,8 @@ public class FolderSettings extends K9PreferenceActivity {\n     private static final String PREFERENCE_IN_TOP_GROUP = \"folder_settings_in_top_group\";\n     private static final String PREFERENCE_INTEGRATE = \"folder_settings_include_in_integrated_inbox\";\n \n+    private final MessagingController messagingController = DI.get(MessagingController.class);\n+\n     private LocalFolder mFolder;\n \n     private CheckBoxPreference mInTopGroup;\n@@ -69,13 +72,7 @@ public class FolderSettings extends K9PreferenceActivity {\n             return;\n         }\n \n-        boolean isPushCapable = false;\n-        try {\n-            RemoteStore store = mAccount.getRemoteStore();\n-            isPushCapable = store.isPushCapable();\n-        } catch (Exception e) {\n-            Timber.e(e, \"Could not get remote store\");\n-        }\n+        boolean isPushCapable = messagingController.isPushCapable(mAccount);\n \n         addPreferencesFromResource(R.xml.folder_settings_preferences);\n \ndiff --git a/k9mail/src/main/java/com/fsck/k9/controller/MessagingController.java b/k9mail/src/main/java/com/fsck/k9/controller/MessagingController.java\nindex 75d23d2eb..7e3acd025 100644\n--- a/k9mail/src/main/java/com/fsck/k9/controller/MessagingController.java\n+++ b/k9mail/src/main/java/com/fsck/k9/controller/MessagingController.java\n@@ -1834,6 +1834,26 @@ public class MessagingController {\n         return getBackend(account).getSupportsCopy();\n     }\n \n+    public boolean isPushCapable(Account account) {\n+        return getBackend(account).isPushCapable();\n+    }\n+\n+    public boolean supportsSeenFlag(Account account) {\n+        return getBackend(account).getSupportsSeenFlag();\n+    }\n+\n+    public boolean supportsExpunge(Account account) {\n+        return getBackend(account).getSupportsExpunge();\n+    }\n+\n+    public boolean supportsSearchByDate(Account account) {\n+        return getBackend(account).getSupportsSearchByDate();\n+    }\n+\n+    public void checkServerSettings(Account account) throws MessagingException {\n+        getBackend(account).checkServerSettings();\n+    }\n+\n     public void moveMessages(final Account srcAccount, final String srcFolder,\n             List<MessageReference> messageReferences, final String destFolder) {\n         actOnMessageGroup(srcAccount, srcFolder, messageReferences, new MessageActor() {\ndiff --git a/k9mail/src/main/java/com/fsck/k9/fragment/MessageListFragment.java b/k9mail/src/main/java/com/fsck/k9/fragment/MessageListFragment.java\nindex a5dfd2d12..fcc4389ed 100644\n--- a/k9mail/src/main/java/com/fsck/k9/fragment/MessageListFragment.java\n+++ b/k9mail/src/main/java/com/fsck/k9/fragment/MessageListFragment.java\n@@ -80,7 +80,6 @@ import com.fsck.k9.helper.MessageHelper;\n import com.fsck.k9.helper.Utility;\n import com.fsck.k9.mail.Flag;\n import com.fsck.k9.mail.Folder;\n-import com.fsck.k9.mail.Message;\n import com.fsck.k9.mail.MessagingException;\n import com.fsck.k9.mailstore.LocalFolder;\n import com.fsck.k9.preferences.StorageEditor;\n@@ -2506,11 +2505,7 @@ public class MessageListFragment extends Fragment implements OnItemClickListener\n     }\n \n     public boolean isAccountExpungeCapable() {\n-        try {\n-            return (account != null && account.getRemoteStore().isExpungeCapable());\n-        } catch (Exception e) {\n-            return false;\n-        }\n+        return account != null && messagingController.supportsExpunge(account);\n     }\n \n     public void onRemoteSearch() {\ndiff --git a/k9mail/src/main/java/com/fsck/k9/mail/store/RemoteStoreManager.java b/k9mail/src/main/java/com/fsck/k9/mail/store/RemoteStoreManager.java\nindex 474bc3aaa..88ddb43b3 100644\n--- a/k9mail/src/main/java/com/fsck/k9/mail/store/RemoteStoreManager.java\n+++ b/k9mail/src/main/java/com/fsck/k9/mail/store/RemoteStoreManager.java\n@@ -1,82 +1,14 @@\n package com.fsck.k9.mail.store;\n \n \n-import java.util.HashMap;\n-import java.util.Map;\n-\n-import android.content.Context;\n-import android.net.ConnectivityManager;\n-\n-import com.fsck.k9.mail.MessagingException;\n import com.fsck.k9.mail.ServerSettings;\n import com.fsck.k9.mail.ServerSettings.Type;\n-import com.fsck.k9.mail.oauth.OAuth2TokenProvider;\n-import com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory;\n import com.fsck.k9.mail.store.imap.ImapStore;\n import com.fsck.k9.mail.store.pop3.Pop3Store;\n-import com.fsck.k9.mail.store.webdav.WebDavHttpClient;\n import com.fsck.k9.mail.store.webdav.WebDavStore;\n \n \n public abstract class RemoteStoreManager {\n-    /**\n-     * Remote stores indexed by Uri.\n-     */\n-    private static Map<String, RemoteStore> sStores = new HashMap<>();\n-\n-\n-    /**\n-     * Get an instance of a remote mail store.\n-     */\n-    public static synchronized RemoteStore getInstance(Context context, StoreConfig storeConfig)\n-            throws MessagingException {\n-        String uri = storeConfig.getStoreUri();\n-\n-        if (uri.startsWith(\"local\")) {\n-            throw new RuntimeException(\"Asked to get non-local Store object but given LocalStore URI\");\n-        }\n-\n-        RemoteStore store = sStores.get(uri);\n-        if (store == null) {\n-            if (uri.startsWith(\"imap\")) {\n-                OAuth2TokenProvider oAuth2TokenProvider = null;\n-                store = new ImapStore(\n-                        storeConfig,\n-                        new DefaultTrustedSocketFactory(context),\n-                        (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE),\n-                        oAuth2TokenProvider);\n-            } else if (uri.startsWith(\"pop3\")) {\n-                store = new Pop3Store(storeConfig, new DefaultTrustedSocketFactory(context));\n-            } else if (uri.startsWith(\"webdav\")) {\n-                store = new WebDavStore(storeConfig, new WebDavHttpClient.WebDavHttpClientFactory());\n-            }\n-\n-            if (store != null) {\n-                sStores.put(uri, store);\n-            }\n-        }\n-\n-        if (store == null) {\n-            throw new MessagingException(\"Unable to locate an applicable Store for \" + uri);\n-        }\n-\n-        return store;\n-    }\n-\n-    /**\n-     * Release reference to a remote mail store instance.\n-     *\n-     * @param storeConfig {@link StoreConfig} instance that is used to get the remote mail store instance.\n-     */\n-    public static void removeInstance(StoreConfig storeConfig) {\n-        String uri = storeConfig.getStoreUri();\n-        if (uri.startsWith(\"local\")) {\n-            throw new RuntimeException(\"Asked to get non-local Store object but given \" +\n-                    \"LocalStore URI\");\n-        }\n-        sStores.remove(uri);\n-    }\n-\n     /**\n      * Decodes the contents of store-specific URIs and puts them into a {@link ServerSettings}\n      * object.\ndiff --git a/k9mail/src/main/java/com/fsck/k9/ui/settings/account/AccountSettingsFragment.kt b/k9mail/src/main/java/com/fsck/k9/ui/settings/account/AccountSettingsFragment.kt\nindex 2c0378ca4..16c02ede1 100644\n--- a/k9mail/src/main/java/com/fsck/k9/ui/settings/account/AccountSettingsFragment.kt\n+++ b/k9mail/src/main/java/com/fsck/k9/ui/settings/account/AccountSettingsFragment.kt\n@@ -11,6 +11,7 @@ import com.fsck.k9.activity.ManageIdentities\n import com.fsck.k9.activity.setup.AccountSetupComposition\n import com.fsck.k9.activity.setup.AccountSetupIncoming\n import com.fsck.k9.activity.setup.AccountSetupOutgoing\n+import com.fsck.k9.controller.MessagingController\n import com.fsck.k9.crypto.OpenPgpApiHelper\n import com.fsck.k9.mailstore.StorageManager\n import com.fsck.k9.ui.endtoend.AutocryptKeyTransferActivity\n@@ -32,6 +33,7 @@ class AccountSettingsFragment : PreferenceFragmentCompat() {\n     private val dataStoreFactory: AccountSettingsDataStoreFactory by inject()\n     private val storageManager: StorageManager by inject()\n     private val openPgpApiManager: OpenPgpApiManager by inject(parameters = { mapOf(\"lifecycleOwner\" to this) })\n+    private val messagingController: MessagingController by inject()\n \n     private val accountUuid: String by lazy {\n         checkNotNull(arguments?.getString(ARG_ACCOUNT_UUID)) { \"$ARG_ACCOUNT_UUID == null\" }\n@@ -102,7 +104,7 @@ class AccountSettingsFragment : PreferenceFragmentCompat() {\n \n     private fun initializeDeletePolicy(account: Account) {\n         (findPreference(PREFERENCE_DELETE_POLICY) as? ListPreference)?.apply {\n-            if (!account.remoteStore.isSeenFlagSupported) {\n+            if (!messagingController.supportsSeenFlag(account)) {\n                 removeEntry(DELETE_POLICY_MARK_AS_READ)\n             }\n         }\n@@ -110,7 +112,7 @@ class AccountSettingsFragment : PreferenceFragmentCompat() {\n \n     private fun initializeExpungePolicy(account: Account) {\n         findPreference(PREFERENCE_EXPUNGE_POLICY)?.apply {\n-            if (!account.remoteStore.isExpungeCapable) {\n+            if (!messagingController.supportsExpunge(account)) {\n                 remove()\n             }\n         }\n@@ -118,14 +120,14 @@ class AccountSettingsFragment : PreferenceFragmentCompat() {\n \n     private fun initializeMessageAge(account: Account) {\n         findPreference(PREFERENCE_MESSAGE_AGE)?.apply {\n-            if (!account.isSearchByDateCapable) {\n+            if (!messagingController.supportsSearchByDate(account)) {\n                 remove()\n             }\n         }\n     }\n \n     private fun initializeAdvancedPushSettings(account: Account) {\n-        if (!account.remoteStore.isPushCapable) {\n+        if (!messagingController.isPushCapable(account)) {\n             findPreference(PREFERENCE_PUSH_MODE)?.remove()\n             findPreference(PREFERENCE_ADVANCED_PUSH_SETTINGS)?.remove()\n             findPreference(PREFERENCE_REMOTE_SEARCH)?.remove()\n@@ -217,7 +219,7 @@ class AccountSettingsFragment : PreferenceFragmentCompat() {\n \n     private fun initializeFolderSettings(account: Account) {\n         findPreference(PREFERENCE_FOLDERS)?.let {\n-            if (!account.remoteStore.isMoveCapable) {\n+            if (!messagingController.isMoveCapable(account)) {\n                 findPreference(PREFERENCE_ARCHIVE_FOLDER).remove()\n                 findPreference(PREFERENCE_DRAFTS_FOLDER).remove()\n                 findPreference(PREFERENCE_SENT_FOLDER).remove()\ndiff --git a/k9mail/src/test/java/com/fsck/k9/controller/MessagingControllerTest.java b/k9mail/src/test/java/com/fsck/k9/controller/MessagingControllerTest.java\nindex 209f21b2d..1fe7f96bf 100644\n--- a/k9mail/src/test/java/com/fsck/k9/controller/MessagingControllerTest.java\n+++ b/k9mail/src/test/java/com/fsck/k9/controller/MessagingControllerTest.java\n@@ -498,7 +498,8 @@ public class MessagingControllerTest extends RobolectricTest {\n     @Test\n     public void searchRemoteMessagesSynchronous_shouldNotifyOnFinish() throws Exception {\n         setupRemoteSearch();\n-        when(account.getRemoteStore()).thenThrow(new MessagingException(\"Test\"));\n+        when(backend.search(anyString(), nullable(String.class), nullable(Set.class), nullable(Set.class)))\n+                .thenThrow(new MessagingException(\"Test\"));\n \n         controller.searchRemoteMessagesSynchronous(\"1\", FOLDER_NAME, \"query\", reqFlags, forbiddenFlags, listener);\n ",
    "Enable Travis for all branches .": "diff --git a/.travis.yml b/.travis.yml\nindex e99f40d13..e5348b18d 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -23,10 +23,6 @@ jdk:\n os:\n   - linux\n \n-branches:\n-  only:\n-    - master\n-\n notifications:\n   email: false\n ",
    "Add menu file for wikivoyage bottom navigation": "diff --git a/OsmAnd/res/menu/wikivoyage_bottom_navigation.xml b/OsmAnd/res/menu/wikivoyage_bottom_navigation.xml\nnew file mode 100644\nindex 0000000000..8b55b93af2\n--- /dev/null\n+++ b/OsmAnd/res/menu/wikivoyage_bottom_navigation.xml\n@@ -0,0 +1,10 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\t<item\n+\t\tandroid:id=\"@+id/action_explore\"\n+\t\tandroid:title=\"@string/shared_string_explore\"/>\n+\n+\t<item\n+\t\tandroid:id=\"@+id/action_saved_articles\"\n+\t\tandroid:title=\"@string/saved_articles\"/>\n+</menu>\ndiff --git a/OsmAnd/res/values/strings.xml b/OsmAnd/res/values/strings.xml\nindex 3b46c67cf1..e691308917 100644\n--- a/OsmAnd/res/values/strings.xml\n+++ b/OsmAnd/res/values/strings.xml\n@@ -9,6 +9,8 @@\n          3. All your modified/created strings are in the top of the file (to make easier find what\\'s translated).\n     PLEASE: Have a look at http://code.google.com/p/osmand/wiki/UIConsistency, it may really improve your and our work  :-)  Thx - Hardy\n     -->\n+    <string name=\"saved_articles\">Saved articles</string>\n+    <string name=\"shared_string_explore\">Explore</string>\n     <string name=\"shared_string_result\">Result</string>\n     <string name=\"use_two_digits_longitude\">Use two digits longitude</string>\n     <string name=\"shared_string_travel\">Travel</string>",
    "Improve exacuation of anchored values , use it to fix if and merge simplifications": "diff --git a/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/BeginNode.java b/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/BeginNode.java\nindex f3d04429810..c18d1ee8f03 100644\n--- a/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/BeginNode.java\n+++ b/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/BeginNode.java\n@@ -73,17 +73,27 @@ public class BeginNode extends AbstractStateSplit implements LIRLowerable, Simpl\n         }\n     }\n \n-    public void evacuateGuards() {\n+    public void evacuateGuards(FixedNode evacuateFrom) {\n         if (!usages().isEmpty()) {\n-            Node prevBegin = predecessor();\n+            Node prevBegin = evacuateFrom;\n             assert prevBegin != null;\n             while (!(prevBegin instanceof BeginNode)) {\n                 prevBegin = prevBegin.predecessor();\n             }\n-            replaceAtUsages(prevBegin);\n+            for (Node anchored : anchored().snapshot()) {\n+                anchored.replaceFirstInput(this, prevBegin);\n+            }\n         }\n     }\n \n+    public void prepareDelete() {\n+        prepareDelete((FixedNode) predecessor());\n+    }\n+\n+    public void prepareDelete(FixedNode evacuateFrom) {\n+        evacuateGuards(evacuateFrom);\n+    }\n+\n     @Override\n     public boolean verify() {\n         assertTrue(predecessor() != null || this == ((StructuredGraph) graph()).start() || this instanceof MergeNode, \"begin nodes must be connected\");\n@@ -98,4 +108,8 @@ public class BeginNode extends AbstractStateSplit implements LIRLowerable, Simpl\n     public NodeIterable<GuardNode> guards() {\n         return usages().filter(GuardNode.class);\n     }\n+\n+    public NodeIterable<Node> anchored() {\n+        return usages();\n+    }\n }\ndiff --git a/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/IfNode.java b/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/IfNode.java\nindex f32944fd7c7..62c4c04051f 100644\n--- a/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/IfNode.java\n+++ b/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/IfNode.java\n@@ -161,14 +161,16 @@ public final class IfNode extends ControlSplitNode implements Simplifiable, LIRL\n         EndNode falseEnd = (EndNode) falseSuccessor.next();\n         assert trueEnd.merge() == falseEnd.merge();\n \n+        FixedWithNextNode pred = (FixedWithNextNode) predecessor();\n         MergeNode merge = trueEnd.merge();\n+        merge.prepareDelete(pred);\n         assert merge.usages().isEmpty();\n \n         FixedNode next = merge.next();\n         merge.setNext(null);\n         setTrueSuccessor(null);\n         setFalseSuccessor(null);\n-        ((FixedWithNextNode) predecessor()).setNext(next);\n+        pred.setNext(next);\n         safeDelete();\n         trueSuccessor.safeDelete();\n         falseSuccessor.safeDelete();\ndiff --git a/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/LoopBeginNode.java b/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/LoopBeginNode.java\nindex 733887b5977..f2c836f1bf2 100644\n--- a/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/LoopBeginNode.java\n+++ b/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/LoopBeginNode.java\n@@ -22,6 +22,8 @@\n  */\n package com.oracle.graal.nodes;\n \n+import static com.oracle.graal.graph.iterators.NodePredicates.*;\n+\n import java.util.*;\n \n import com.oracle.graal.graph.*;\n@@ -49,8 +51,13 @@ public class LoopBeginNode extends MergeNode implements Node.IterableNodeType, L\n         return usages().filter(LoopEndNode.class);\n     }\n \n+    @Override\n+    public NodeIterable<Node> anchored() {\n+        return super.anchored().filter(isNotA(LoopEndNode.class));\n+    }\n+\n     public List<LoopEndNode> orderedLoopEnds() {\n-        List<LoopEndNode> snapshot = usages().filter(LoopEndNode.class).snapshot();\n+        List<LoopEndNode> snapshot = loopEnds().snapshot();\n         Collections.sort(snapshot, new Comparator<LoopEndNode>() {\n             @Override\n             public int compare(LoopEndNode o1, LoopEndNode o2) {\ndiff --git a/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/MergeNode.java b/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/MergeNode.java\nindex ce82e316eb1..9f9f1a82808 100644\n--- a/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/MergeNode.java\n+++ b/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/MergeNode.java\n@@ -28,6 +28,7 @@ import com.oracle.graal.debug.*;\n import com.oracle.graal.graph.*;\n import com.oracle.graal.graph.iterators.*;\n import com.oracle.graal.nodes.spi.*;\n+import com.oracle.graal.util.*;\n \n /**\n  * Denotes the merging of multiple control-flow paths.\n@@ -115,12 +116,22 @@ public class MergeNode extends BeginNode implements Node.IterableNodeType, LIRLo\n     }\n \n     public NodeIterable<PhiNode> phis() {\n-        return this.usages().filter(new NodePredicate() {\n+        return this.usages().filter(PhiNode.class).filter(new NodePredicate() {\n             @Override\n             public boolean apply(Node n) {\n-                return n instanceof PhiNode && ((PhiNode) n).merge() == MergeNode.this;\n+                return ((PhiNode) n).merge() == MergeNode.this;\n             }\n-        }).filter(PhiNode.class);\n+        });\n+    }\n+\n+    @Override\n+    public NodeIterable<Node> anchored() {\n+        return super.anchored().filter(isNotA(PhiNode.class).or(new NodePredicate() {\n+            @Override\n+            public boolean apply(Node n) {\n+                return ((PhiNode) n).merge() != MergeNode.this;\n+            }\n+        }));\n     }\n \n     @Override\n@@ -136,7 +147,9 @@ public class MergeNode extends BeginNode implements Node.IterableNodeType, LIRLo\n                     }\n                 }\n             }\n-            Debug.log(\"Split %s into loop ends for %s\", this, begin);\n+            FixedNode evacuateAnchoredTo = new ComputeImmediateDominator(this).compute();\n+            Debug.log(\"Split %s into loop ends for %s. Evacuate to %s\", this, begin, evacuateAnchoredTo);\n+            this.prepareDelete(evacuateAnchoredTo);\n             int numEnds = this.forwardEndCount();\n             StructuredGraph graph = (StructuredGraph) graph();\n             for (int i = 0; i < numEnds - 1; i++) {\ndiff --git a/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/StructuredGraph.java b/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/StructuredGraph.java\nindex bd6995ea836..f10ff9a51a7 100644\n--- a/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/StructuredGraph.java\n+++ b/graal/com.oracle.graal.nodes/src/com/oracle/graal/nodes/StructuredGraph.java\n@@ -168,6 +168,9 @@ public class StructuredGraph extends Graph {\n \n     public void removeFixed(FixedWithNextNode node) {\n         assert node != null;\n+        if (node instanceof BeginNode) {\n+            ((BeginNode) node).prepareDelete();\n+        }\n         assert node.usages().isEmpty() : node + \" \" + node.usages();\n         FixedNode next = node.next();\n         node.setNext(null);\n@@ -208,15 +211,11 @@ public class StructuredGraph extends Graph {\n         assert node.usages().isEmpty();\n         assert survivingSuccessor >= 0 && survivingSuccessor < node.blockSuccessorCount() : \"invalid surviving successor \" + survivingSuccessor + \" for \" + node;\n         BeginNode begin = node.blockSuccessor(survivingSuccessor);\n-        begin.evacuateGuards();\n-        FixedNode next = begin.next();\n-        begin.setNext(null);\n         for (int i = 0; i < node.blockSuccessorCount(); i++) {\n             node.setBlockSuccessor(i, null);\n         }\n-        node.replaceAtPredecessors(next);\n+        node.replaceAtPredecessors(begin);\n         node.safeDelete();\n-        begin.safeDelete();\n     }\n \n     public void removeSplitPropagate(ControlSplitNode node, int survivingSuccessor) {\n@@ -224,9 +223,6 @@ public class StructuredGraph extends Graph {\n         assert node.usages().isEmpty();\n         assert survivingSuccessor >= 0 && survivingSuccessor < node.blockSuccessorCount() : \"invalid surviving successor \" + survivingSuccessor + \" for \" + node;\n         BeginNode begin = node.blockSuccessor(survivingSuccessor);\n-        begin.evacuateGuards();\n-        FixedNode next = begin.next();\n-        begin.setNext(null);\n         for (int i = 0; i < node.blockSuccessorCount(); i++) {\n             BeginNode successor = node.blockSuccessor(i);\n             node.setBlockSuccessor(i, null);\n@@ -234,10 +230,9 @@ public class StructuredGraph extends Graph {\n                 GraphUtil.killCFG(successor);\n             }\n         }\n-        if (next.isAlive()) {\n-            node.replaceAtPredecessors(next);\n+        if (begin.isAlive()) {\n+            node.replaceAtPredecessors(begin);\n             node.safeDelete();\n-            begin.safeDelete();\n         } else {\n             assert node.isDeleted();\n         }\n@@ -257,31 +252,23 @@ public class StructuredGraph extends Graph {\n         assert node != null && replacement != null && node.isAlive() && replacement.isAlive() : \"cannot replace \" + node + \" with \" + replacement;\n         assert survivingSuccessor >= 0 && survivingSuccessor < node.blockSuccessorCount() : \"invalid surviving successor \" + survivingSuccessor + \" for \" + node;\n         BeginNode begin = node.blockSuccessor(survivingSuccessor);\n-        begin.evacuateGuards();\n-        FixedNode next = begin.next();\n-        begin.setNext(null);\n         for (int i = 0; i < node.blockSuccessorCount(); i++) {\n             node.setBlockSuccessor(i, null);\n         }\n-        replacement.setNext(next);\n+        replacement.setNext(begin);\n         node.replaceAndDelete(replacement);\n-        begin.safeDelete();\n     }\n \n     public void replaceSplitWithFloating(ControlSplitNode node, FloatingNode replacement, int survivingSuccessor) {\n         assert node != null && replacement != null && node.isAlive() && replacement.isAlive() : \"cannot replace \" + node + \" with \" + replacement;\n         assert survivingSuccessor >= 0 && survivingSuccessor < node.blockSuccessorCount() : \"invalid surviving successor \" + survivingSuccessor + \" for \" + node;\n         BeginNode begin = node.blockSuccessor(survivingSuccessor);\n-        begin.evacuateGuards();\n-        FixedNode next = begin.next();\n-        begin.setNext(null);\n         for (int i = 0; i < node.blockSuccessorCount(); i++) {\n             node.setBlockSuccessor(i, null);\n         }\n-        node.replaceAtPredecessors(next);\n+        node.replaceAtPredecessors(begin);\n         node.replaceAtUsages(replacement);\n         node.safeDelete();\n-        begin.safeDelete();\n     }\n \n     public void addAfterFixed(FixedWithNextNode node, FixedWithNextNode newNode) {\n@@ -326,13 +313,7 @@ public class StructuredGraph extends Graph {\n         FixedNode sux = merge.next();\n         FrameState stateAfter = merge.stateAfter();\n         // evacuateGuards\n-        Node prevBegin = singleEnd.predecessor();\n-        assert prevBegin != null;\n-        while (!(prevBegin instanceof BeginNode)) {\n-            prevBegin = prevBegin.predecessor();\n-        }\n-        merge.replaceAtUsages(prevBegin);\n-\n+        merge.prepareDelete((FixedNode) singleEnd.predecessor());\n         merge.safeDelete();\n         if (stateAfter != null && stateAfter.usages().isEmpty()) {\n             stateAfter.safeDelete();",
    "Bring the Java DB in JDK7 to the same level as JDK 6 ( Java DB v10 . 6 . 2 . 1 ) .": "diff --git a/jdk/make/common/Release.gmk b/jdk/make/common/Release.gmk\nindex 17297d573b0..189b3d703ef 100644\n--- a/jdk/make/common/Release.gmk\n+++ b/jdk/make/common/Release.gmk\n@@ -885,12 +885,18 @@ else\n ABS_DB_PATH  :=$(call FullPath,$(CLOSED_SHARE_SRC)/db)\n DB_ZIP_LIST = $(shell $(LS) $(ABS_DB_PATH)/*.zip 2>/dev/null)\n \n+# Java DB image. Move the Java DB demo directory into the JDK's demo\n+# dir and in the process, rename it to db.  Also remove index.html,\n+# since it presumes docs are co-located. Also remove register.html (no\n+# longer relevant).\n initial-image-jdk-db: $(DB_ZIP_LIST)\n \t$(MKDIR) -p $(JDK_IMAGE_DIR)/db\n \tfor d in $(DB_ZIP_LIST); do \\\n           ($(CD) $(JDK_IMAGE_DIR)/db && $(UNZIP) -o $$d); \\\n \tdone\n-\n+\t$(RM) -rf $(DEMODIR)/db\n+\t$(MV) $(JDK_IMAGE_DIR)/db/demo $(DEMODIR)/db\n+\t$(RM) $(JDK_IMAGE_DIR)/db/index.html $(JDK_IMAGE_DIR)/db/register.html\n endif\n \n # Standard jdk image",
    "Add delay at blockheight display to cover both dao and bitcoinj updates": "diff --git a/gui/src/main/java/io/bisq/gui/main/dao/wallet/tx/BsqTxView.java b/gui/src/main/java/io/bisq/gui/main/dao/wallet/tx/BsqTxView.java\nindex 867580b4d6..74b09f266e 100644\n--- a/gui/src/main/java/io/bisq/gui/main/dao/wallet/tx/BsqTxView.java\n+++ b/gui/src/main/java/io/bisq/gui/main/dao/wallet/tx/BsqTxView.java\n@@ -19,6 +19,7 @@ package io.bisq.gui.main.dao.wallet.tx;\n \n import de.jensd.fx.fontawesome.AwesomeDude;\n import de.jensd.fx.fontawesome.AwesomeIcon;\n+import io.bisq.common.UserThread;\n import io.bisq.common.locale.Res;\n import io.bisq.core.btc.wallet.BsqBalanceListener;\n import io.bisq.core.btc.wallet.BsqWalletService;\n@@ -57,6 +58,7 @@ import javax.inject.Inject;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n import java.util.stream.Collectors;\n \n @FxmlView\n@@ -179,26 +181,28 @@ public class BsqTxView extends ActivatableView<GridPane, Void> {\n     }\n \n     private void onChainHeightChanged() {\n-        if (bsqWalletService.getBestChainHeight() > 0) {\n-            final boolean synced = bsqWalletService.getBestChainHeight() == bsqChainState.getChainHeadHeight();\n-            chainSyncIndicator.setVisible(!synced);\n-            chainSyncIndicator.setManaged(!synced);\n-            if (bsqChainState.getChainHeadHeight() > 0)\n-                chainSyncIndicator.setProgress((double) bsqChainState.getChainHeadHeight() / (double) bsqWalletService.getBestChainHeight());\n-\n-            if (synced)\n-                chainHeightLabel.setText(Res.get(\"dao.wallet.chainHeightSynced\",\n-                        bsqChainState.getChainHeadHeight(),\n-                        bsqWalletService.getBestChainHeight()));\n-            else\n+        UserThread.runAfter(() -> {\n+            if (bsqWalletService.getBestChainHeight() > 0) {\n+                final boolean synced = bsqWalletService.getBestChainHeight() == bsqChainState.getChainHeadHeight();\n+                chainSyncIndicator.setVisible(!synced);\n+                chainSyncIndicator.setManaged(!synced);\n+                if (bsqChainState.getChainHeadHeight() > 0)\n+                    chainSyncIndicator.setProgress((double) bsqChainState.getChainHeadHeight() / (double) bsqWalletService.getBestChainHeight());\n+\n+                if (synced)\n+                    chainHeightLabel.setText(Res.get(\"dao.wallet.chainHeightSynced\",\n+                            bsqChainState.getChainHeadHeight(),\n+                            bsqWalletService.getBestChainHeight()));\n+                else\n+                    chainHeightLabel.setText(Res.get(\"dao.wallet.chainHeightSyncing\",\n+                            bsqChainState.getChainHeadHeight(),\n+                            bsqWalletService.getBestChainHeight()));\n+            } else {\n                 chainHeightLabel.setText(Res.get(\"dao.wallet.chainHeightSyncing\",\n                         bsqChainState.getChainHeadHeight(),\n                         bsqWalletService.getBestChainHeight()));\n-        } else {\n-           ",
    "Added handling of List of Parcel": "diff --git a/examples/test/src/test/java/org/parceler/ConverterTarget.java b/examples/test/src/test/java/org/parceler/ConverterTarget.java\nindex f6816a7..51aa732 100644\n--- a/examples/test/src/test/java/org/parceler/ConverterTarget.java\n+++ b/examples/test/src/test/java/org/parceler/ConverterTarget.java\n@@ -30,10 +30,11 @@ public class ConverterTarget {\n     String s;\n     List<String> list;\n     Map<String, String> map;\n+    List<SubParcel> parcelList;\n \n     public ConverterTarget(){}\n \n-    public ConverterTarget(byte b, Byte bobj, double d, Double dobj, float f, Float fobj, int i, Integer iobj, long l, Long lobj, byte[] bya, char[] ca, boolean[] ba, int[] ia, long[] la, float[] fa, double[] da, String[] sa, String s, List list, Map<String, String> map) {\n+    public ConverterTarget(byte b, Byte bobj, double d, Double dobj, float f, Float fobj, int i, Integer iobj, long l, Long lobj, byte[] bya, char[] ca, boolean[] ba, int[] ia, long[] la, float[] fa, double[] da, String[] sa, String s, List<String> list, Map<String, String> map, List<SubParcel> parcelList) {\n         this.b = b;\n         this.bobj = bobj;\n         this.d = d;\n@@ -55,6 +56,7 @@ public class ConverterTarget {\n         this.s = s;\n         this.list = list;\n         this.map = map;\n+        this.parcelList = parcelList;\n     }\n \n     public byte getB() {\n@@ -144,4 +146,8 @@ public class ConverterTarget {\n     public Map getMap() {\n         return map;\n     }\n+\n+    public List<SubParcel> getParcelList(){\n+        return parcelList;\n+    }\n }\ndiff --git a/examples/test/src/test/java/org/parceler/ConverterTest.java b/examples/test/src/test/java/org/parceler/ConverterTest.java\nindex 47f9602..4a8823a 100644\n--- a/examples/test/src/test/java/org/parceler/ConverterTest.java\n+++ b/examples/test/src/test/java/org/parceler/ConverterTest.java\n@@ -54,7 +54,11 @@ public class ConverterTest {\n         map.put(\"one\", \"two\");\n         map.put(\"three\", \"four\");\n \n-        ConverterTarget target = new ConverterTarget(b, bobj, d, dobj, f, fobj, i, iobj, l, lobj, bya, ca, ba, ia, la, fa, da, sa, s, list, map);\n+        List<SubParcel> parcelList = new ArrayList<SubParcel>();\n+\n+        parcelList.add(new SubParcel(\"test\"));\n+\n+        ConverterTarget target = new ConverterTarget(b, bobj, d, dobj, f, fobj, i, iobj, l, lobj, bya, ca, ba, ia, la, fa, da, sa, s, list, map, parcelList);\n \n         Parcelable converted = Parcels.wrap(target);\n         ConverterTarget unwrapped = Parcels.unwrap(converted);\n@@ -80,5 +84,7 @@ public class ConverterTest {\n         assertEquals(s, unwrapped.getS());\n         assertEquals(list, unwrapped.getList());\n         assertEquals(map, unwrapped.getMap());\n+        assertEquals(parcelList.size(), unwrapped.getParcelList().size());\n+        assertEquals(parcelList.get(0).getName(), unwrapped.getParcelList().get(0).getName());\n     }\n }\ndiff --git a/parceler/src/main/java/org/parceler/internal/ParcelableGenerator.java b/parceler/src/main/java/org/parceler/internal/ParcelableGenerator.java\nindex b34af43..86bea09 100644\n--- a/parceler/src/main/java/org/parceler/internal/ParcelableGenerator.java\n+++ b/parceler/src/main/java/org/parceler/internal/ParcelableGenerator.java\n@@ -25,10 +25,7 @@ import org.androidtransfuse.gen.InvocationBuilder;\n import org.androidtransfuse.gen.UniqueVariableNamer;\n import org.androidtransfuse.util.matcher.Matcher;\n import org.androidtransfuse.util.matcher.Matchers;\n-import org.parceler.ParcelConverter;\n-import org.parceler.ParcelWrapper;\n-import org.parceler.ParcelerRuntimeException;\n-import org.parceler.Parcels;\n+import org.parceler.*;\n \n import javax.inject.Inject;\n import java.io.Serializable;\n@@ -45,6 +42,7 @@ public class ParcelableGenerator {\n     private static final String NEW_ARRAY = \"newArray\";\n     private static final String WRITE_TO_PARCEL = \"writeToParcel\";\n     private static final String DESCRIBE_CONTENTS = \"describeContents\";\n+    public static final String UNWRAP_METHOD = \"unwrap\";\n     public static final String WRAP_METHOD = \"wrap\";\n \n     private final JCodeModel codeModel;\n@@ -87,21 +85,21 @@ public class ParcelableGenerator {\n             JType inputType = generationUtil.ref(type);\n \n             JDefinedClass parcelableClass = generationUtil.defineClass(ClassNamer.className(type).append(Parcels.IMPL_EXT).build());\n-            parcelableClass._implements(codeModel.ref(\"android.os.Parcelable\"))\n-                    ._implements(codeModel.ref(ParcelWrapper.class).narrow(inputType));\n+            parcelableClass._implements(generationUtil.ref(\"android.os.Parcelable\"))\n+                    ._implements(generationUtil.ref(ParcelWrapper.class).narrow(inputType));\n \n             //wrapped @Parcel\n             JFieldVar wrapped = parcelableClass.field(JMod.PRIVATE, inputType, variableNamer.generateName(type));\n \n             //Parcel constructor\n             JMethod parcelConstructor = parcelableClass.constructor(JMod.PUBLIC);\n-            JVar parcelParam = parcelConstructor.param(codeModel.ref(\"android.os.Parcel\"), variableNamer.generateName(\"android.os.Parcel\"));\n+            JVar parcelParam = parcelConstructor.param(generationUtil.ref(\"android.os.Parcel\"), variableNamer.generateName(\"android.os.Parcel\"));\n             JBlock parcelConstructorBody = parcelConstructor.body();\n \n             //writeToParcel(android.os.Parcel,int)\n             JMethod writeToParcelMethod = parcelableClass.method(JMod.PUBLIC, codeModel.VOID, WRITE_TO_PARCEL);\n             writeToParcelMethod.annotate(Override.class);\n-            JVar wtParcelParam = writeToParcelMethod.param(codeModel.ref(\"android.os.Parcel\"), variableNamer.generateName(\"android.os.Parcel\"));\n+            JVar wtParcelParam = writeToParcelMethod.param(generationUtil.ref(\"android.os.Parcel\"), variableNamer.generateName(\"android.os.Parcel\"));\n             JVar flags = writeToParcelMethod.param(codeModel.INT, \"flags\");\n \n             if (parcelableDescriptor.getParcelConverterType() == null) {\n@@ -156,12 +154,12 @@ public class ParcelableGenerator {\n             //public static final CREATOR = ...\n             JDefinedClass creatorClass = parcelableClass._class(JMod.PRIVATE | JMod.STATIC | JMod.FINAL, classNamer.numberedClassName(new ASTStringType(\"android.os.Parcelable.Creator\")).build().getClassName());\n \n-            creatorClass._implements(codeModel.ref(\"android.os.Parcelable.Creator\").narrow(parcelableClass));\n+            creatorClass._implements(generationUtil.ref(\"android.os.Parcelable.Creator\").narrow(parcelableClass));\n \n             //createFromParcel method\n             JMethod createFromParcelMethod = creatorClass.method(JMod.PUBLIC, parcelableClass, CREATE_FROM_PARCEL);\n             createFromParcelMethod.annotate(Override.class);\n-            JVar cfpParcelParam = createFromParcelMethod.param(codeModel.ref(\"android.os.Parcel\"), variableNamer.generateName(codeModel.ref(\"android.os.Parcel\")));\n+            JVar cfpParcelParam = createFromParcelMethod.param(generationUtil.ref(\"android.os.Parcel\"), variableNamer.generateName(generationUtil.ref(\"android.os.Parcel\")));\n \n             createFromParcelMethod.body()._return(JExpr._new(parcelableClass).arg(cfpParcelParam));\n \n@@ -185,16 +183,16 @@ public class ParcelableGenerator {\n     private void buildReadFromParcel(JDefinedClass parcelableClass, JBlock parcelConstructorBody, JFieldVar wrapped, MethodReference propertyAccessor, JVar parcelParam) {\n         //invocation\n         propertyAccessor.accept(readFromParcelVisitor,\n-                new ReadContext(parcelConstructorBody, wrapped, propertyAccessor.getType(), buildReadFromParcelExpression(parcelParam, parcelableClass, propertyAccessor.getType())));\n+                new ReadContext(parcelConstructorBody, wrapped, propertyAccessor.getType(), buildReadFromParcelExpression(parcelConstructorBody, parcelParam, parcelableClass, propertyAccessor.getType())));\n     }\n \n     private void buildReadFromParcel(JDefinedClass parcelableClass, JBlock parcelConstructorBody, JFieldVar wrapped, FieldReference propertyAccessor, JVar parcelParam) {\n         //invocation\n         propertyAccessor.accept(readFromParcelVisitor,\n-                new ReadContext(parcelConstructorBody, wrapped, propertyAccessor.getType(), buildReadFromParcelExpression(parcelParam, parcelableClass, propertyAccessor.getType())));\n+                new ReadContext(parcelConstructorBody, wrapped, propertyAccessor.getType(), buildReadFromParcelExpression(parcelConstructorBody, parcelParam, parcelableClass, propertyAccessor.getType())));\n     }\n     \n-    private void buildReadFromParcel(JDefinedClass parcelableClass, JBlock parcelConstructorBody,ASTType wrappedType,  JFieldVar wrapped, ConstructorReference propertyAccessor, JVar parcelParam){\n+    private void buildReadFromParcel(JDefinedClass parcelableClass, JBlock parcelConstructorBody, ASTType wrappedType,  JFieldVar wrapped, ConstructorReference propertyAccessor, JVar parcelParam){\n \n         ASTConstructor constructor = propertyAccessor.getConstructor();\n         List<ASTType> parameterTypes = new ArrayList<ASTType>();\n@@ -202,18 +200,18 @@ public class ParcelableGenerator {\n \n         for (ASTParameter parameter : constructor.getParameters()) {\n             parameterTypes.add(parameter.getASTType());\n-            inputExpression.add(buildReadFromParcelExpression(parcelParam, parcelableClass, parameter.getASTType()));\n+            inputExpression.add(buildReadFromParcelExpression(parcelConstructorBody, parcelParam, parcelableClass, parameter.getASTType()));\n         }\n \n         parcelConstructorBody.assign(wrapped, invocationBuilder.buildConstructorCall(constructor.getAccessModifier(), parameterTypes, inputExpression, wrappedType));\n     }\n \n-    private JExpression buildReadFromParcelExpression(JVar parcelParam, JDefinedClass parcelableClass, ASTType type){\n+    private JExpression buildReadFromParcelExpression(JBlock body, JVar parcelParam, JDefinedClass parcelableClass, ASTType type){\n         JClass returnJClassRef = generationUtil.ref(type);\n \n         ReadWriteGenerator generator = getGenerator(type);\n \n-        return generator.generateReader(parcelParam, type, returnJClassRef, parcelableClass);\n+        return generator.generateReader(body, parcelParam, type, returnJClassRef, parcelableClass);\n     }\n \n     private void buildWriteToParcel(JBlock body, JVar parcel, JVar flags, AccessibleReference reference, ASTType wrappedType, JFieldVar wrapped) {\n@@ -236,7 +234,7 @@ public class ParcelableGenerator {\n \n     public interface ReadWriteGenerator{\n \n-        JExpression generateReader(JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass);\n+        JExpression generateReader(JBlock body, JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass);\n \n         void generateWriter(JBlock body, JVar parcel, JVar flags, ASTType type, JExpression getExpression);\n     }\n@@ -248,7 +246,7 @@ public class ParcelableGenerator {\n         }\n \n         @Override\n-        public JExpression generateReader(JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass) {\n+        public JExpression generateReader(JBlock body, JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass) {\n             return parcelParam.invoke(getReadMethod());\n         }\n \n@@ -269,7 +267,7 @@ public class ParcelableGenerator {\n         }\n \n         @Override\n-        public JExpression generateReader(JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass) {\n+        public JExpression generateReader(JBlock body, JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass) {\n             return parcelParam.invoke(getReadMethod()).arg(returnJClassRef.dotclass().invoke(\"getClassLoader\"));\n         }\n \n@@ -361,7 +359,7 @@ public class ParcelableGenerator {\n         }\n \n         @Override\n-        public JExpression generateReader(JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass) {\n+        public JExpression generateReader(JBlock body, JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass) {\n             return JExpr.cast(returnJClassRef, parcelParam.invoke(getReadMethod()).arg(returnJClassRef.dotclass().invoke(\"getClassLoader\")));\n         }\n \n@@ -378,7 +376,7 @@ public class ParcelableGenerator {\n         }\n \n         @Override\n-        public JExpression generateReader(JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass) {\n+        public JExpression generateReader(JBlock body, JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass) {\n             return JExpr.cast(returnJClassRef, parcelParam.invoke(getReadMethod()));\n         }\n \n@@ -400,8 +398,8 @@ public class ParcelableGenerator {\n         }\n \n         @Override\n-        public JExpression generateReader(JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass) {\n-            JClass wrapperRef = codeModel.ref(ParcelWrapper.class).narrow(generationUtil.ref(type));\n+        public JExpression generateReader(JBlock body, JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass) {\n+            JClass wrapperRef = generationUtil.ref(ParcelWrapper.class).narrow(generationUtil.ref(type));\n             return ((JExpression) JExpr.cast(wrapperRef, parcelParam.invoke(getReadMethod())\n                     .arg(parcelableClass.dotclass().invoke(\"getClassLoader\")))).invoke(ParcelWrapper.GET_PARCEL);\n         }\n@@ -413,6 +411,57 @@ public class ParcelableGenerator {\n         }\n     }\n \n+    public static class ListOfParcelsReadWriteGenerator extends ReadWriteGeneratorBase {\n+\n+        private final ClassGenerationUtil generationUtil;\n+        private final JCodeModel codeModel;\n+        private final UniqueVariableNamer namer;\n+\n+        public ListOfParcelsReadWriteGenerator(ClassGenerationUtil generationUtil, JCodeModel codeModel, UniqueVariableNamer namer) {\n+            super(\"readArrayList\", new Class[]{ClassLoader.class}, \"writeList\", new Class[]{List.class});\n+            this.generationUtil = generationUtil;\n+            this.codeModel = codeModel;\n+            this.namer = namer;\n+        }\n+\n+        @Override\n+        public JExpression generateReader(JBlock body, JVar parcelParam, ASTType type, JClass returnJClassRef, JDefinedClass parcelableClass) {\n+            //Builds a collection version of Parcels.unwrap()\n+            JClass parcelableType = generationUtil.ref(\"android.os.Parcelable\");\n+            JClass listType = generationUtil.ref(List.class);\n+            JClass arrayListType = generationUtil.ref(ArrayList.class);\n+            JClass parcelableListType = generationUtil.ref(List.class).narrow(parcelableType);\n+\n+\n+            JVar listVar = body.decl(listType, namer.generateName(List.class), JExpr._new(arrayListType));\n+            JForEach forEach = body.forEach(parcelableType, namer.generateName(parcelableType), JExpr.cast(parcelableListType, parcelParam.invoke(getReadMethod())\n+                    .arg(parcelableClass.dotclass().invoke(\"getClassLoader\"))));\n+            JBlock forEachBody = forEach.body();\n+\n+            forEachBody.invoke(listVar, \"add\").arg(generationUtil.ref(Parcels.class).staticInvoke(\"unwrap\").arg(forEach.var()));\n+\n+            return listVar;\n+        }\n+\n+        @Override\n+        public void generateWriter(JBlock body, JVar parcel, JVar flags, ASTType type, JExpression getExpression) {\n+            //Builds a loop version of Parcels.wrap()\n+            JClass parcelableType = generationUtil.ref(\"android.os.Parcelable\");\n+            JClass listType = generationUtil.ref(List.class).narrow(parcelableType);\n+            JClass arrayListType = generationUtil.ref(ArrayList.class).narrow(parcelableType);\n+            JClass inputType = generationUtil.ref(Object.class);\n+\n+\n+            JVar listVar = body.decl(listType, namer.generateName(List.class), JExpr._new(arrayListType));\n+            JForEach forEach = body.forEach(inputType, namer.generateName(parcelableType), getExpression);\n+            JBlock forEachBody = forEach.body();\n+\n+            forEachBody.invoke(listVar, \"add\").arg(generationUtil.ref(Parcels.class).staticInvoke(\"wrap\").arg(forEach.var()));\n+\n+            body.invoke(parcel, getWriteMethod()).arg(listVar);\n+        }\n+    }\n+\n     public static class ImplementsMatcher implements Matcher<ASTType>{\n \n         private final ASTType superType;\n@@ -455,6 +504,28 @@ public class ParcelableGenerator {\n         }\n     }\n \n+    public static class ListOfParcelsMatcher implements Matcher<ASTType>{\n+\n+        private final ASTClassFactory astClassFactory;\n+        private final ExternalParcelRepository externalParcelRepository;\n+\n+        public ListOfParcelsMatcher(ExternalParcelRepository externalParcelRepository, ASTClassFactory astClassFactory) {\n+            this.externalParcelRepository = externalParcelRepository;\n+            this.astClassFactory = astClassFactory;\n+        }\n+\n+        @Override\n+        public boolean matches(ASTType type) {\n+            Matcher<ASTType> listMatcher = Matchers.type(astClassFactory.getType(List.class)).ignoreGenerics().build();\n+            Matcher<ASTType> arrayListMatcher = Matchers.type(astClassFactory.getType(List.class)).ignoreGenerics().build();\n+            if(listMatcher.matches(type) || arrayListMatcher.matches(type) && type.getGenericParameters().size() > 0){\n+                ASTType genericType = type.getGenericParameters().iterator().next();\n+                return genericType.isAnnotated(Parcel.class) || externalParcelRepository.contains(genericType);\n+            }\n+            return false;\n+        }\n+    }\n+\n     private void setup() {\n         addPair(byte.class, \"readByte\", \"writeByte\");\n         addPair(Byte.class, \"readByte\", \"writeByte\", byte.class);\n@@ -484,6 +555,7 @@ public class ParcelableGenerator {\n         generators.put(new ImplementsMatcher(new ASTStringType(\"android.os.Parcelable\")), new ParcelableReadWriteGenerator(\"readParcelable\", \"writeParcelable\", \"android.os.Parcelable\"));\n         generators.put(new ImplementsMatcher(new ASTArrayType(new ASTStringType(\"android.os.Parcelable\"))), new ParcelableReadWriteGenerator(\"readParcelableArray\", \"writeParcelableArray\", \"[Landroid.os.Parcelable;\"));\n         generators.put(new ParcelMatcher(externalParcelRepository), new ParcelReadWriteGenerator(generationUtil, codeModel));\n+        generators.put(new ListOfParcelsMatcher(externalParcelRepository, astClassFactory), new ListOfParcelsReadWriteGenerator(generationUtil, codeModel, variableNamer));\n         generators.put(Matchers.type(astClassFactory.getType(List.class)).ignoreGenerics().build(), new ClassloaderReadWriteGenerator(\"readArrayList\", \"writeList\", List.class));\n         generators.put(Matchers.type(astClassFactory.getType(ArrayList.class)).ignoreGenerics().build(), new ClassloaderReadWriteGenerator(\"readArrayList\", \"writeList\", List.class));\n         generators.put(Matchers.type(astClassFactory.getType(Map.class)).ignoreGenerics().build(), new ClassloaderReadWriteGenerator(\"readHashMap\", \"writeMap\", Map.class));",
    "Fix the sstable - needs - cleanup check .": "diff --git a/CHANGES.txt b/CHANGES.txt\nindex 8548d71d94..3ede9b7fa3 100644\n--- a/CHANGES.txt\n+++ b/CHANGES.txt\n@@ -1,4 +1,5 @@\n 2.1.12\n+ * Fix the sstable-needs-cleanup check (CASSANDRA-10740)\n  * (cqlsh) Print column names before COPY operation (CASSANDRA-8935)\n  * Add Native-Transport-Requests back to tpstats (CASSANDRA-10044)\n  * Make paging logic consistent between searcher impls (CASSANDRA-10683)\ndiff --git a/src/java/org/apache/cassandra/db/compaction/CompactionManager.java b/src/java/org/apache/cassandra/db/compaction/CompactionManager.java\nindex b85eb5119f..b0ad24474c 100644\n--- a/src/java/org/apache/cassandra/db/compaction/CompactionManager.java\n+++ b/src/java/org/apache/cassandra/db/compaction/CompactionManager.java\n@@ -44,6 +44,7 @@ import com.google.common.collect.Lists;\n import com.google.common.collect.Multimap;\n import com.google.common.collect.Multiset;\n import com.google.common.collect.Sets;\n+import com.google.common.annotations.VisibleForTesting;\n import com.google.common.util.concurrent.*;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -690,7 +691,8 @@ public class CompactionManager implements CompactionManagerMBean\n      * Determines if a cleanup would actually remove any data in this SSTable based\n      * on a set of owned ranges.\n      */\n-    static boolean needsCleanup(SSTableReader sstable, Collection<Range<Token>> ownedRanges)\n+    @VisibleForTesting\n+    public static boolean needsCleanup(SSTableReader sstable, Collection<Range<Token>> ownedRanges)\n     {\n         assert !ownedRanges.isEmpty(); // cleanup checks for this\n \n@@ -729,7 +731,7 @@ public class CompactionManager implements CompactionManagerMBean\n             }\n \n             Range<Token> nextRange = sortedRanges.get(i + 1);\n-            if (!nextRange.contains(firstBeyondRange.getToken()))\n+            if (firstBeyondRange.getToken().compareTo(nextRange.left) <= 0)\n             {\n                 // we found a key in between the owned ranges\n                 return true;\ndiff --git a/test/unit/org/apache/cassandra/db/CleanupTest.java b/test/unit/org/apache/cassandra/db/CleanupTest.java\nindex 06f89978f0..1d04dfaca7 100644\n--- a/test/unit/org/apache/cassandra/db/CleanupTest.java\n+++ b/test/unit/org/apache/cassandra/db/CleanupTest.java\n@@ -22,9 +22,11 @@ import java.io.IOException;\n import java.net.InetAddress;\n import java.net.UnknownHostException;\n import java.nio.ByteBuffer;\n+import java.util.AbstractMap;\n import java.util.Arrays;\n import java.util.LinkedList;\n import java.util.List;\n+import java.util.Map;\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.TimeUnit;\n \n@@ -40,6 +42,7 @@ import org.apache.cassandra.db.index.SecondaryIndex;\n import org.apache.cassandra.dht.BytesToken;\n import org.apache.cassandra.dht.Range;\n import org.apache.cassandra.io.sstable.SSTableReader;\n+import org.apache.cassandra.dht.Token;\n import org.apache.cassandra.locator.TokenMetadata;\n import org.apache.cassandra.service.StorageService;\n import org.apache.cassandra.utils.ByteBufferUtil;\n@@ -168,6 +171,78 @@ public class CleanupTest extends SchemaLoader\n         assertEquals(0, rows.size());\n     }\n \n+    @Test\n+    public void testNeedsCleanup() throws Exception\n+    {\n+        // setup\n+        StorageService.instance.getTokenMetadata().clearUnsafe();\n+        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n+        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF1);\n+        fillCF(cfs, LOOPS);\n+\n+        // prepare SSTable and some useful tokens\n+        SSTableReader ssTable = cfs.getSSTables().iterator().next();\n+        final Token ssTableMin = ssTable.first.getToken();\n+        final Token ssTableMax = ssTable.last.getToken();\n+\n+        final Token min = token((byte) 0);\n+        final Token before1 = token((byte) 2);\n+        final Token before2 = token((byte) 5);\n+        final Token before3 = token((byte) 10);\n+        final Token before4 = token((byte) 47);\n+        final Token insideSsTable1 = token((byte) 50);\n+        final Token insideSsTable2 = token((byte) 55);\n+        final Token max = token((byte) 127, (byte) 127, (byte) 127, (byte) 127);\n+\n+        // test sanity check\n+        assert (min.compareTo(ssTableMin) < 0);\n+        assert (before1.compareTo(ssTableMin) < 0);\n+        assert (before2.compareTo(ssTableMin) < 0);\n+        assert (before3.compareTo(ssTableMin) < 0);\n+        assert (before4.compareTo(ssTableMin) < 0);\n+        assert (ssTableMin.compareTo(insideSsTable1) < 0);\n+        assert (insideSsTable1.compareTo(ssTableMax) < 0);\n+        assert (ssTableMin.compareTo(insideSsTable2) < 0);\n+        assert (insideSsTable2.compareTo(ssTableMax) < 0);\n+        assert (ssTableMax.compareTo(max) < 0);\n+\n+        // test cases\n+        // key: needs cleanup?\n+        // value: owned ranges\n+        List<Map.Entry<Boolean, List<Range<Token>>>> testCases = new LinkedList<Map.Entry<Boolean, List<Range<Token>>>>()\n+        {\n+            {\n+                add(entry(false, Arrays.asList(range(min, max)))); // SSTable owned as a whole\n+                add(entry(true, Arrays.asList(range(min, insideSsTable1)))); // SSTable owned only partially\n+                add(entry(true, Arrays.asList(range(insideSsTable1, max)))); // SSTable owned only partially\n+                add(entry(true, Arrays.asList(range(min, ssTableMin)))); // SSTable not owned at all\n+                add(entry(true, Arrays.asList(range(ssTableMax, max)))); // only last token of SSTable is owned\n+                add(entry(true, Arrays.asList(range(min, insideSsTable1), range(insideSsTable2, max)))); // SSTable partially owned by two ranges\n+                add(entry(true, Arrays.asList(range(ssTableMin, ssTableMax)))); // first token of SSTable is not owned\n+                add(entry(false, Arrays.asList(range(before4, max)))); // first token of SSTable is not owned\n+                add(entry(false, Arrays.asList(range(min, before1), range(before2, before3), range(before4, max)))); // SSTable owned by the last range\n+            }\n+        };\n+\n+        // check all test cases\n+        for (Map.Entry<Boolean, List<Range<Token>>> testCase : testCases)\n+        {\n+            assertEquals(testCase.getKey(), CompactionManager.needsCleanup(ssTable, testCase.getValue()));\n+        }\n+    }\n+    private static BytesToken token(byte ... value)\n+    {\n+        return new BytesToken(value);\n+    }\n+    private static <K, V> Map.Entry<K, V> entry(K k, V v)\n+    {\n+       return new AbstractMap.SimpleEntry<K, V>(k, v);\n+    }\n+    private static Range<Token> range(Token from, Token to)\n+    {\n+        return new Range<>(from, to);\n+    }\n+\n     protected void fillCF(ColumnFamilyStore cfs, int rowsPerSSTable)\n     {\n         CompactionManager.instance.disableAutoCompaction();",
    "Remove non - semantic changes prior to using a sequenced threadpool in mbus .": "diff --git a/messagebus/src/tests/bucketsequence/bucketsequence.cpp b/messagebus/src/tests/bucketsequence/bucketsequence.cpp\nindex 57d1f99e5c3..671f50efc03 100644\n--- a/messagebus/src/tests/bucketsequence/bucketsequence.cpp\n+++ b/messagebus/src/tests/bucketsequence/bucketsequence.cpp\n@@ -11,19 +11,13 @@\n \n using namespace mbus;\n \n-TEST_SETUP(Test);\n-\n class MyMessage : public SimpleMessage {\n public:\n     MyMessage() : SimpleMessage(\"foo\") { }\n-    bool hasBucketSequence() override { return true; }\n+    bool hasBucketSequence() const override { return true; }\n };\n \n-int\n-Test::Main()\n-{\n-    TEST_INIT(\"bucketsequence_test\");\n-\n+TEST(\"bucketsequence_test\") {\n     Slobrok slobrok;\n     TestServer server(MessageBusParams()\n                       .addProtocol(std::make_shared<SimpleProtocol>())\n@@ -37,9 +31,10 @@ Test::Main()\n     msg->setRoute(Route::parse(\"foo\"));\n     ASSERT_TRUE(session->send(std::move(msg)).isAccepted());\n     Reply::UP reply = receptor.getReply();\n-    ASSERT_TRUE(reply.get() != nullptr);\n+    ASSERT_TRUE(reply);\n     EXPECT_EQUAL(1u, reply->getNumErrors());\n     EXPECT_EQUAL((uint32_t)ErrorCode::SEQUENCE_ERROR, reply->getError(0).getCode());\n \n-    TEST_DONE();\n }\n+\n+TEST_MAIN() { TEST_RUN_ALL(); }\ndiff --git a/messagebus/src/vespa/messagebus/message.h b/messagebus/src/vespa/messagebus/message.h\nindex 15e7384707c..22fb1e282b6 100644\n--- a/messagebus/src/vespa/messagebus/message.h\n+++ b/messagebus/src/vespa/messagebus/message.h\n@@ -135,7 +135,7 @@ public:\n      *\n      * @return True to enable bucket sequencing.\n      */\n-    virtual bool hasBucketSequence() { return false; }\n+    virtual bool hasBucketSequence() const { return false; }\n \n     /**\n      * Obtain the approximate size of this message object in bytes. This enables\ndiff --git a/messagebus/src/vespa/messagebus/network/rpcsend.cpp b/messagebus/src/vespa/messagebus/network/rpcsend.cpp\nindex 2422638dc05..dca7f0c997f 100644\n--- a/messagebus/src/vespa/messagebus/network/rpcsend.cpp\n+++ b/messagebus/src/vespa/messagebus/network/rpcsend.cpp\n@@ -114,7 +114,7 @@ RPCSend::send(RoutingNode &recipient, const vespalib::Version &version,\n               const PayLoadFiller & payload, duration timeRemaining)\n {\n     auto ctx = std::make_unique<SendContext>(recipient, timeRemaining);\n-    RPCServiceAddress &address = static_cast<RPCServiceAddress&>(recipient.getServiceAddress());\n+    auto &address = static_cast<RPCServiceAddress&>(recipient.getServiceAddress());\n     const Message &msg = recipient.getMessage();\n     Route route = recipient.getRoute();\n     Hop hop = route.removeHop(0);\ndiff --git a/storageapi/src/vespa/storageapi/mbusprot/storagecommand.h b/storageapi/src/vespa/storageapi/mbusprot/storagecommand.h\nindex 88af61509d5..697e7d6b461 100644\n--- a/storageapi/src/vespa/storageapi/mbusprot/storagecommand.h\n+++ b/storageapi/src/vespa/storageapi/mbusprot/storagecommand.h\n@@ -21,6 +21,8 @@ public:\n     api::StorageMessage::SP getInternalMessage() override { return _cmd; }\n     api::StorageMessage::CSP getInternalMessage() const override { return _cmd; }\n \n+    bool hasBucketSequence() const override { return true; }\n+\n     uint8_t priority() const override {\n         return ((getInternalMessage()->getPriority()) / 255) * 16;\n     }",
    "take out obsolete \\\" ranking \\\" directory from maven packaging": "diff --git a/assembly.xml b/assembly.xml\nindex 493fa76d2..093cd7a45 100644\n--- a/assembly.xml\n+++ b/assembly.xml\n@@ -42,10 +42,6 @@\n             <directory>locales</directory>\n             <outputDirectory>locales</outputDirectory>\n         </fileSet>\n-        <fileSet>\n-            <directory>ranking</directory>\n-            <outputDirectory>ranking</outputDirectory>\n-        </fileSet>\n    ",
    "Shut down executor , and use shared executor for minor work too": "diff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/session/RemoteSessionRepo.java b/configserver/src/main/java/com/yahoo/vespa/config/server/session/RemoteSessionRepo.java\nindex 885716b8e67..24eb862c528 100644\n--- a/configserver/src/main/java/com/yahoo/vespa/config/server/session/RemoteSessionRepo.java\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/session/RemoteSessionRepo.java\n@@ -206,14 +206,16 @@ public class RemoteSessionRepo extends SessionRepo<RemoteSession> {\n     }\n \n     private void nodeChanged() {\n-        Multiset<Session.Status> sessionMetrics = HashMultiset.create();\n-        for (RemoteSession session : listSessions()) {\n-            sessionMetrics.add(session.getStatus());\n-        }\n-        metrics.setNewSessions(sessionMetrics.count(Session.Status.NEW));\n-        metrics.setPreparedSessions(sessionMetrics.count(Session.Status.PREPARE));\n-        metrics.setActivatedSessions(sessionMetrics.count(Session.Status.ACTIVATE));\n-        metrics.setDeactivatedSessions(sessionMetrics.count(Session.Status.DEACTIVATE));\n+        zkWatcherExecutor.execute(() -> {\n+            Multiset<Session.Status> sessionMetrics = HashMultiset.create();\n+            for (RemoteSession session : listSessions()) {\n+                sessionMetrics.add(session.getStatus());\n+            }\n+            metrics.setNewSessions(sessionMetrics.count(Session.Status.NEW));\n+            metrics.setPreparedSessions(sessionMetrics.count(Session.Status.PREPARE));\n+            metrics.setActivatedSessions(sessionMetrics.count(Session.Status.ACTIVATE));\n+            metrics.setDeactivatedSessions(sessionMetrics.count(Session.Status.DEACTIVATE));\n+        });\n     }\n \n     @SuppressWarnings(\"unused\")\ndiff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/tenant/TenantRepository.java b/configserver/src/main/java/com/yahoo/vespa/config/server/tenant/TenantRepository.java\nindex 1e4ab210c81..ad2472add89 100644\n--- a/configserver/src/main/java/com/yahoo/vespa/config/server/tenant/TenantRepository.java\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/tenant/TenantRepository.java\n@@ -362,6 +362,7 @@ public class TenantRepository {\n         try {\n             zkCacheExecutor.shutdown();\n             checkForRemovedApplicationsService.shutdown();\n+            zkWatcherExecutor.shutdownAndWait();\n             zkCacheExecutor.awaitTermination(50, TimeUnit.SECONDS);\n             checkForRemovedApplicationsService.awaitTermination(50, TimeUnit.SECONDS);\n         }",
    "Optimize GroupIntoBatches for batch Dataflow pipelines .": "diff --git a/runners/google-cloud-dataflow-java/build.gradle b/runners/google-cloud-dataflow-java/build.gradle\nindex b2046d521f..faa9d0ed9d 100644\n--- a/runners/google-cloud-dataflow-java/build.gradle\n+++ b/runners/google-cloud-dataflow-java/build.gradle\n@@ -47,6 +47,9 @@ processResources {\n test {\n   systemProperty \"beamTestPipelineOptions\", \"\"\n   systemProperty \"beamUseDummyRunner\", \"true\"\n+  useJUnit {\n+    excludeCategories 'org.apache.beam.sdk.testing.ValidatesRunner'\n+  }\n }\n \n configurations {\n@@ -91,6 +94,7 @@ dependencies {\n   testCompile library.java.jackson_dataformat_yaml\n   validatesRunner project(path: \":sdks:java:core\", configuration: \"shadowTest\")\n   validatesRunner project(project.path)\n+  validatesRunner project(path: project.path, configuration: \"testRuntime\")\n   validatesRunner library.java.hamcrest_core\n   validatesRunner library.java.hamcrest_library\n   coreSDKJavaIntegrationTest project(project.path)\n@@ -101,10 +105,6 @@ dependencies {\n   googleCloudPlatformIntegrationTest project(path: \":sdks:java:io:google-cloud-platform\", configuration: \"testRuntime\")\n }\n \n-test {\n-  systemProperties = [ \"beamUseDummyRunner\" : \"true\" ]\n-}\n-\n def dataflowProject = project.findProperty('dataflowProject') ?: 'apache-beam-testing'\n def dataflowValidatesTempRoot = project.findProperty('dataflowTempRoot') ?: 'gs://temp-storage-for-validates-runner-tests'\n def dataflowPostCommitTempRoot = project.findProperty('dataflowTempRoot') ?: 'gs://temp-storage-for-end-to-end-tests'\n@@ -170,7 +170,8 @@ task validatesRunnerLegacyWorkerTest(type: Test) {\n   // to the number of CPU cores, but can be increased by setting --max-workers=N.\n   maxParallelForks Integer.MAX_VALUE\n   classpath = configurations.validatesRunner\n-  testClassesDirs = files(project(\":sdks:java:core\").sourceSets.test.output.classesDirs)\n+  testClassesDirs = files(project(\":sdks:java:core\").sourceSets.test.output.classesDirs) +\n+          files(project(project.path).sourceSets.test.output.classesDirs)\n   useJUnit {\n     includeCategories 'org.apache.beam.sdk.testing.ValidatesRunner'\n     commonExcludeCategories.each {\n@@ -196,7 +197,8 @@ task validatesRunnerLegacyWorkerJava11Test(type: Test) {\n     // to the number of CPU cores, but can be increased by setting --max-workers=N.\n     maxParallelForks Integer.MAX_VALUE\n     classpath = configurations.validatesRunner\n-    testClassesDirs = files(project(\":sdks:java:core\").sourceSets.test.output.classesDirs)\n+  testClassesDirs = files(project(\":sdks:java:core\").sourceSets.test.output.classesDirs) +\n+          files(project(project.path).sourceSets.test.output.classesDirs)\n     useJUnit {\n         includeCategories 'org.apache.beam.sdk.testing.ValidatesRunner'\n         commonExcludeCategories.each {\n@@ -259,7 +261,8 @@ task validatesRunnerFnApiWorkerTest(type: Test) {\n   // to the number of CPU cores, but can be increased by setting --max-workers=N.\n   maxParallelForks Integer.MAX_VALUE\n   classpath = configurations.validatesRunner\n-  testClassesDirs = files(project(\":sdks:java:core\").sourceSets.test.output.classesDirs)\n+  testClassesDirs = files(project(\":sdks:java:core\").sourceSets.test.output.classesDirs) +\n+          files(project(project.path).sourceSets.test.output.classesDirs)\n   useJUnit {\n     includeCategories 'org.apache.beam.sdk.testing.ValidatesRunner'\n     commonExcludeCategories.each {\n@@ -290,7 +293,8 @@ task validatesRunnerFnApiWorkerExecutableStageTest(type: Test) {\n   // to the number of CPU cores, but can be increased by setting --max-workers=N.\n   maxParallelForks Integer.MAX_VALUE\n   classpath = configurations.validatesRunner\n-  testClassesDirs = files(project(\":sdks:java:core\").sourceSets.test.output.classesDirs)\n+  testClassesDirs = files(project(\":sdks:java:core\").sourceSets.test.output.classesDirs) +\n+          files(project(project.path).sourceSets.test.output.classesDirs)\n   useJUnit {\n     includeCategories 'org.apache.beam.sdk.testing.ValidatesRunner'\n     commonExcludeCategories.each {\ndiff --git a/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java b/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java\nindex 4c48cb37da..9128a1f6b5 100644\n--- a/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java\n+++ b/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java\n@@ -48,6 +48,7 @@ import java.util.Arrays;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.HashSet;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import java.util.Random;\n@@ -118,6 +119,10 @@ import org.apache.beam.sdk.transforms.Combine.CombineFn;\n import org.apache.beam.sdk.transforms.Combine.GroupedValues;\n import org.apache.beam.sdk.transforms.Create;\n import org.apache.beam.sdk.transforms.DoFn;\n+import org.apache.beam.sdk.transforms.DoFn.ProcessContext;\n+import org.apache.beam.sdk.transforms.DoFn.ProcessElement;\n+import org.apache.beam.sdk.transforms.GroupByKey;\n+import org.apache.beam.sdk.transforms.GroupIntoBatches;\n import org.apache.beam.sdk.transforms.Impulse;\n import org.apache.beam.sdk.transforms.PTransform;\n import org.apache.beam.sdk.transforms.ParDo;\n@@ -156,6 +161,7 @@ import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.base.Utf8;\n import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.ImmutableList;\n import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.ImmutableMap;\n import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.Iterables;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.Iterators;\n import org.joda.time.DateTimeUtils;\n import org.joda.time.DateTimeZone;\n import org.joda.time.format.DateTimeFormat;\n@@ -422,6 +428,14 @@ public class DataflowRunner extends PipelineRunner<DataflowPipelineJob> {\n       // Dataflow Streaming runner overrides the SPLITTABLE_PROCESS_KEYED transform\n       // natively in the Dataflow service.\n     } else {\n+      overridesBuilder\n+          // Replace GroupIntoBatches before the state/timer replacements below since\n+          // GroupIntoBatches internally uses a stateful DoFn.\n+          .add(\n+          PTransformOverride.of(\n+              PTransformMatchers.classEqualTo(GroupIntoBatches.class),\n+              new BatchGroupIntoBatchesOverrideFactory()));\n+\n       overridesBuilder\n           // State and timer pardos are implemented by expansion to GBK-then-ParDo\n           .add(\n@@ -1430,6 +1444,61 @@ public class DataflowRunner extends PipelineRunner<DataflowPipelineJob> {\n     DataflowPipelineTranslator.registerTransformTranslator(Impulse.class, new ImpulseTranslator());\n   }\n \n+  private static class BatchGroupIntoBatchesOverrideFactory<K, V>\n+      implements PTransformOverrideFactory<\n+          PCollection<KV<K, V>>, PCollection<KV<K, Iterable<V>>>, GroupIntoBatches<K, V>> {\n+\n+    @Override\n+    public PTransformReplacement<PCollection<KV<K, V>>, PCollection<KV<K, Iterable<V>>>>\n+        getReplacementTransform(\n+            AppliedPTransform<\n+                    PCollection<KV<K, V>>, PCollection<KV<K, Iterable<V>>>, GroupIntoBatches<K, V>>\n+                transform) {\n+      return PTransformReplacement.of(\n+          PTransformReplacements.getSingletonMainInput(transform),\n+          new BatchGroupIntoBatches(transform.getTransform().getBatchSize()));\n+    }\n+\n+    @Override\n+    public Map<PValue, ReplacementOutput> mapOutputs(\n+        Map<TupleTag<?>, PValue> outputs, PCollection<KV<K, Iterable<V>>> newOutput) {\n+      return ReplacementOutputs.singleton(outputs, newOutput);\n+    }\n+  }\n+\n+  /** Specialized implementation of {@link GroupIntoBatches} for bounded Dataflow pipelines. */\n+  static class BatchGroupIntoBatches<K, V>\n+      extends PTransform<PCollection<KV<K, V>>, PCollection<KV<K, Iterable<V>>>> {\n+    private final long batchSize;\n+\n+    private BatchGroupIntoBatches(long batchSize) {\n+      this.batchSize = batchSize;\n+    }\n+\n+    @Override\n+    public PCollection<KV<K, Iterable<V>>> expand(PCollection<KV<K, V>> input) {\n+      return input\n+          .apply(\"GroupAll\", GroupByKey.create())\n+          .apply(\n+              \"SplitIntoBatches\",\n+              ParDo.of(\n+                  new DoFn<KV<K, Iterable<V>>, KV<K, Iterable<V>>>() {\n+                    @ProcessElement\n+                    public void process(ProcessContext c) {\n+                      // Iterators.partition lazily creates the partitions as they are accessed\n+                      // allowing it to partition very large iterators.\n+                      Iterator<List<V>> iterator =\n+                          Iterators.partition(c.element().getValue().iterator(), (int) batchSize);\n+\n+                      // Note that GroupIntoBatches only outputs when the batch is non-empty.\n+                      while (iterator.hasNext()) {\n+                        c.output(KV.of(c.element().getKey(), iterator.next()));\n+                      }\n+                    }\n+                  }));\n+    }\n+  }\n+\n   private static class StreamingUnboundedReadOverrideFactory<T>\n       implements PTransformOverrideFactory<PBegin, PCollection<T>, Read.Unbounded<T>> {\n     @Override\ndiff --git a/runners/google-cloud-dataflow-java/src/test/java/org/apache/beam/runners/dataflow/DataflowRunnerTest.java b/runners/google-cloud-dataflow-java/src/test/java/org/apache/beam/runners/dataflow/DataflowRunnerTest.java\nindex 9e129a0300..0dba549e96 100644\n--- a/runners/google-cloud-dataflow-java/src/test/java/org/apache/beam/runners/dataflow/DataflowRunnerTest.java\n+++ b/runners/google-cloud-dataflow-java/src/test/java/org/apache/beam/runners/dataflow/DataflowRunnerTest.java\n@@ -18,22 +18,25 @@\n package org.apache.beam.runners.dataflow;\n \n import static org.apache.beam.runners.dataflow.DataflowRunner.getContainerImageForJob;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.both;\n+import static org.hamcrest.Matchers.containsInAnyOrder;\n import static org.hamcrest.Matchers.containsString;\n import static org.hamcrest.Matchers.equalTo;\n import static org.hamcrest.Matchers.hasEntry;\n import static org.hamcrest.Matchers.hasItem;\n import static org.hamcrest.Matchers.hasKey;\n import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.lessThanOrEqualTo;\n import static org.hamcrest.Matchers.not;\n import static org.hamcrest.Matchers.startsWith;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertThat;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n+import static org.junit.Assume.assumeFalse;\n import static org.mockito.Matchers.any;\n import static org.mockito.Matchers.anyInt;\n import static org.mockito.Matchers.anyListOf;\n@@ -72,11 +75,13 @@ import java.nio.file.StandardOpenOption;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.regex.Pattern;\n import javax.annotation.Nullable;\n+import org.apache.beam.runners.dataflow.DataflowRunner.BatchGroupIntoBatches;\n import org.apache.beam.runners.dataflow.DataflowRunner.StreamingShardedWriteFactory;\n import org.apache.beam.runners.dataflow.options.DataflowPipelineDebugOptions;\n import org.apache.beam.runners.dataflow.options.DataflowPipelineOptions;\n@@ -114,11 +119,15 @@ import org.apache.beam.sdk.state.StateSpec;\n import org.apache.beam.sdk.state.StateSpecs;\n import org.apache.beam.sdk.state.ValueState;\n import org.apache.beam.sdk.testing.ExpectedLogs;\n+import org.apache.beam.sdk.testing.PAssert;\n import org.apache.beam.sdk.testing.TestPipeline;\n+import org.apache.beam.sdk.testing.ValidatesRunner;\n import org.apache.beam.sdk.transforms.Create;\n import org.apache.beam.sdk.transforms.DoFn;\n+import org.apache.beam.sdk.transforms.GroupIntoBatches;\n import org.apache.beam.sdk.transforms.PTransform;\n import org.apache.beam.sdk.transforms.ParDo;\n+import org.apache.beam.sdk.transforms.SerializableFunction;\n import org.apache.beam.sdk.transforms.SerializableFunctions;\n import org.apache.beam.sdk.transforms.windowing.BoundedWindow;\n import org.apache.beam.sdk.transforms.windowing.PaneInfo;\n@@ -131,6 +140,7 @@ import org.apache.beam.sdk.values.TimestampedValue;\n import org.apache.beam.sdk.values.WindowingStrategy;\n import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.base.Throwables;\n import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.ImmutableList;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.Iterables;\n import org.hamcrest.Description;\n import org.hamcrest.Matchers;\n import org.hamcrest.TypeSafeMatcher;\n@@ -139,6 +149,7 @@ import org.joda.time.Instant;\n import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n import org.junit.rules.ExpectedException;\n import org.junit.rules.TemporaryFolder;\n import org.junit.runner.RunWith;\n@@ -166,6 +177,7 @@ public class DataflowRunnerTest implements Serializable {\n   @Rule public transient TemporaryFolder tmpFolder = new TemporaryFolder();\n   @Rule public transient ExpectedException thrown = ExpectedException.none();\n   @Rule public transient ExpectedLogs expectedLogs = ExpectedLogs.none(DataflowRunner.class);\n+  @Rule public final transient TestPipeline pipeline = TestPipeline.create();\n \n   private transient Dataflow.Projects.Locations.Jobs mockJobs;\n   private transient GcsUtil mockGcsUtil;\n@@ -1432,6 +1444,55 @@ public class DataflowRunnerTest implements Serializable {\n     verifyMergingStatefulParDoRejected(options);\n   }\n \n+  @Test\n+  @Category(ValidatesRunner.class)\n+  public void testBatchGroupIntoBatchesOverride() {\n+    // Ignore this test for streaming pipelines.\n+    assumeFalse(pipeline.getOptions().as(StreamingOptions.class).isStreaming());\n+\n+    final int batchSize = 2;\n+    List<KV<String, Integer>> testValues =\n+        Arrays.asList(KV.of(\"A\", 1), KV.of(\"B\", 0), KV.of(\"A\", 2), KV.of(\"A\", 4), KV.of(\"A\", 8));\n+    PCollection<KV<String, Iterable<Integer>>> output =\n+        pipeline.apply(Create.of(testValues)).apply(GroupIntoBatches.ofSize(batchSize));\n+    PAssert.thatMultimap(output)\n+        .satisfies(\n+            new SerializableFunction<Map<String, Iterable<Iterable<Integer>>>, Void>() {\n+              @Override\n+              public Void apply(Map<String, Iterable<Iterable<Integer>>> input) {\n+                assertEquals(2, input.size());\n+                assertThat(input.keySet(), containsInAnyOrder(\"A\", \"B\"));\n+                Map<String, Integer> sums = new HashMap<>();\n+                for (Map.Entry<String, Iterable<Iterable<Integer>>> entry : input.entrySet()) {\n+                  for (Iterable<Integer> batch : entry.getValue()) {\n+                    assertThat(Iterables.size(batch), lessThanOrEqualTo(batchSize));\n+                    for (Integer value : batch) {\n+                      sums.put(entry.getKey(), value + sums.getOrDefault(entry.getKey(), 0));\n+                    }\n+                  }\n+                }\n+                assertEquals(15, (int) sums.get(\"A\"));\n+                assertEquals(0, (int) sums.get(\"B\"));\n+                return null;\n+              }\n+            });\n+    pipeline.run();\n+\n+    AtomicBoolean sawGroupIntoBatchesOverride = new AtomicBoolean(false);\n+    pipeline.traverseTopologically(\n+        new PipelineVisitor.Defaults() {\n+\n+          @Override\n+          public CompositeBehavior enterCompositeTransform(Node node) {\n+            if (node.getTransform() instanceof BatchGroupIntoBatches) {\n+              sawGroupIntoBatchesOverride.set(true);\n+            }\n+            return CompositeBehavior.ENTER_TRANSFORM;\n+          }\n+        });\n+    assertTrue(sawGroupIntoBatchesOverride.get());\n+  }\n+\n   private void testStreamingWriteOverride(PipelineOptions options, int expectedNumShards) {\n     TestPipeline p = TestPipeline.fromOptions(options);\n \ndiff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/GroupIntoBatches.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/GroupIntoBatches.java\nindex b7b68cc104..3f724a9d1f 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/GroupIntoBatches.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/GroupIntoBatches.java\n@@ -80,6 +80,11 @@ public class GroupIntoBatches<K, InputT>\n     return new GroupIntoBatches<>(batchSize);\n   }\n \n+  /** Returns the size of the batch. */\n+  public long getBatchSize() {\n+    return batchSize;\n+  }\n+\n   @Override\n   public PCollection<KV<K, Iterable<InputT>>> expand(PCollection<KV<K, InputT>> input) {\n     Duration allowedLateness = input.getWindowingStrategy().getAllowedLateness();",
    "Begin new iteration ( 0 . 6 . 0 - SNAPSHOT )": "diff --git a/build.gradle b/build.gradle\nindex 0bfe1b3b2..a7a36618c 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -7,7 +7,7 @@ subprojects {\n     [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'\n \n     group               = \"co.paralleluniverse\"\n-    version             = \"0.5.0\"\n+    version             = \"0.6.0-SNAPSHOT\"\n     status              = \"integration\"\n     description",
    "Added secures with travis commandline": "diff --git a/.travis.yml b/.travis.yml\nindex 4b4d8d6983..350db7b907 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -1,9 +1,8 @@\n language: java\n-script: \"mvn verify deploy --settings travisDeploySettings.xml\"\n+script: mvn verify deploy --settings travisDeploySettings.xml\n jdk:\n-  - openjdk6\n-\n+- openjdk6\n env:\n   global:\n-  - secure: \"FPyn3w+tEhkqUD8PivyEFmXAIX3xlq5WhCqP1DyfoYXHrP8134Tkgasdg8PZdi1tOCSw9Ma63j0ccwxizJVlQOTY/UrItfPZPe0kpAY9s/L+WhYXSYrBdgLmJUylYyaIiz4rV5Z6nOWMLi3K3P2HBH+6lJPd2/Hfknfk0Xr7bVQ=\"\n-  - secure: \"usRRdgGnP275H1jmlnNAaKwspD/jHagr/R0gY7gEA3JgPP05ZZkE/DZuH2LA7JKKVYkoTMpWZQdm1fzNTW+MugLgxiWN6gGvKWP/nnSPzB8vkuEGKgYU/T4KNbSSbL11vaoOBEnMXu7fMCR90RJDo/TTQTYp6trwLPb4ZAhEZKc=\"\n+  - secure: mn5HXRqI8btBN76tIfrxeC6aLrXSgEuTVMA7ZuZLF7jwbTZkrs0rELFeAUNU0vjkW5gq3yKgV/WB0fhSFAMGGp44lrfOC0GB24lH3OaQWQQJcU7EKc7q/xvc65o9UbUTqxOoCBcQsqFaGSh7Op94mtR7h10Lbf7r69OcngOgt70=\n+  - secure: i/GulSx1wbhHph7erloWXpdDunyqlKrWhEHqeEQeCn9BGVsJhBXtx/QWC03HtbvBg+tRGjHGQeiNfesbxBgVN87Vt3D8l8T6DygIVt9K2IDRtdm97gVf7P3tFi0PRRqTBT63eyXwymiMzxVOQC01OuLOHn4Y+HEFn80sdc+0WpA=\ndiff --git a/pom.xml b/pom.xml\nindex eb55104c1d..f0d8a493df 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -226,12 +226,6 @@\n                 </configuration>\n \n                 <executions>\n-                    <!--<execution>-->\n-                        <!--<id>prepare-agent</id>-->\n-                        <!--<goals>-->\n-                            <!--<goal>prepare-agent</goal>-->\n-                        <!--</goals>-->\n-                    <!--</execution>-->\n                     <execution>\n                   ",
    "Added logging and error handling around loading the scanners": "diff --git a/src/org/zaproxy/zap/extension/pscan/ExtensionPassiveScan.java b/src/org/zaproxy/zap/extension/pscan/ExtensionPassiveScan.java\nindex 97c08ddae..a4151e270 100644\n--- a/src/org/zaproxy/zap/extension/pscan/ExtensionPassiveScan.java\n+++ b/src/org/zaproxy/zap/extension/pscan/ExtensionPassiveScan.java\n@@ -25,6 +25,7 @@ import java.util.ArrayList;\n import java.util.List;\n \n import org.apache.commons.configuration.FileConfiguration;\n+import org.apache.log4j.Logger;\n import org.parosproxy.paros.Constant;\n import org.parosproxy.paros.common.DynamicLoader;\n import org.parosproxy.paros.extension.ExtensionAdaptor;\n@@ -47,6 +48,8 @@ public class ExtensionPassiveScan extends ExtensionAdaptor implements SessionCha\n \tprivate PolicyPassiveScanPanel policyPanel = null;\n \tprivate PassiveScanThread pst = null;\n \t\n+\tprivate static final Logger logger = Logger.getLogger(ExtensionPassiveScan.class);\n+\t\n \tpublic ExtensionPassiveScan() {\n \t\tsuper();\n \t\tinitialize();\n@@ -69,11 +72,16 @@ public class ExtensionPassiveScan extends ExtensionAdaptor implements SessionCha\n \t}\n \t\n \tprivate void addPassiveScanner (PluginPassiveScanner scanner) {\n-\t\tFileConfiguration config = this.getModel().getOptionsParam().getConfig();\n-\t\tscanner.setConfig(config);\n-\n-\t\tscannerList.add(scanner);\n-\t\tgetPolicyPanel().getPassiveScanTableModel().addScanner(scanner);\n+\t\ttry {\n+\t\t\tFileConfiguration config = this.getModel().getOptionsParam().getConfig();\n+\t\t\tscanner.setConfig(config);\n+\n+\t\t\tscannerList.add(scanner);\n+\t\t\tgetPolicyPanel().getPassiveScanTableModel().addScanner(scanner);\n+\t\t\tlogger.info(\"loaded passive scan rule: \" + scanner.getName());\n+\t\t} catch (Exception e) {\n+\t\t\tlogger.error(\"Failed to load passive scanner \" + scanner.getName(), e);\n+\t\t}\n \t}\n \t\n \t@SuppressWarnings(\"unchecked\")",
    "add test testGetAllSuperclassesWithTypeParameters": "diff --git a/java-symbol-solver-core/src/test/java/me/tomassetti/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java b/java-symbol-solver-core/src/test/java/me/tomassetti/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java\nindex a8d5e5415..9624d7a7e 100644\n--- a/java-symbol-solver-core/src/test/java/me/tomassetti/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java\n+++ b/java-symbol-solver-core/src/test/java/me/tomassetti/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java\n@@ -56,11 +56,29 @@ public class JavaParserClassDeclarationTest extends AbstractTest {\n     }\n \n     @Test\n-    public void testGetAllSuperclasses() {\n+    public void testGetAllSuperclassesWithoutTypeParameters() {\n         JavaParserClassDeclaration cu = (JavaParserClassDeclaration) typeSolver.solveType(\"com.github.javaparser.ast.CompilationUnit\");\n         assertEquals(ImmutableSet.of(\"com.github.javaparser.ast.Node\", \"java.lang.Object\"), cu.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()));\n     }\n \n+    @Test\n+    public void testGetAllSuperclassesWithTypeParameters() {\n+        JavaParserClassDeclaration constructorDeclaration = (JavaParserClassDeclaration) typeSolverNewCode.solveType(\"com.github.javaparser.ast.body.ConstructorDeclaration\");\n+        assertEquals(3, constructorDeclaration.getAllSuperClasses().size());\n+\n+        me.tomassetti.symbolsolver.model.usages.typesystem.ReferenceType ancestor = null;\n+\n+        ancestor = constructorDeclaration.getAllSuperClasses().get(0);\n+        assertEquals(\"com.github.javaparser.ast.body.BodyDeclaration\", ancestor.getQualifiedName());\n+        assertEquals(\"com.github.javaparser.ast.body.ConstructorDeclaration\", ancestor.typeParametersMap().getValueBySignature(\"com.github.javaparser.ast.body.BodyDeclaration.T\").get().asReferenceType().getQualifiedName());\n+\n+        ancestor = constructorDeclaration.getAllSuperClasses().get(1);\n+        assertEquals(\"com.github.javaparser.ast.Node\", ancestor.getQualifiedName());\n+\n+        ancestor = constructorDeclaration.getAllSuperClasses().get(2);\n+        assertEquals(\"java.lang.Object\", ancestor.getQualifiedName());\n+    }\n+\n     @Test\n     public void testGetAllAncestors() {\n         JavaParserClassDeclaration cu = (JavaParserClassDeclaration) typeSolver.solveType(\"com.github.javaparser.ast.CompilationUnit\");",
    "Removed redundant casts .": "diff --git a/java/org/apache/catalina/core/ApplicationContext.java b/java/org/apache/catalina/core/ApplicationContext.java\nindex 9dfb694564..0186923aa4 100644\n--- a/java/org/apache/catalina/core/ApplicationContext.java\n+++ b/java/org/apache/catalina/core/ApplicationContext.java\n@@ -1253,7 +1253,7 @@ public class ApplicationContext implements ServletContext {\n \n         Container[] wrappers = context.findChildren();\n         for (Container wrapper : wrappers) {\n-            result.put(((Wrapper) wrapper).getName(),\n+            result.put(wrapper.getName(),\n                     new ApplicationServletRegistration(\n                             (Wrapper) wrapper, context));\n         }\ndiff --git a/java/org/apache/catalina/core/ApplicationFilterConfig.java b/java/org/apache/catalina/core/ApplicationFilterConfig.java\nindex 5e63b8958a..b19d673e29 100644\n--- a/java/org/apache/catalina/core/ApplicationFilterConfig.java\n+++ b/java/org/apache/catalina/core/ApplicationFilterConfig.java\n@@ -322,7 +322,7 @@ public final class ApplicationFilterConfig implements FilterConfig, Serializable\n             }\n             if (!context.getIgnoreAnnotations()) {\n                 try {\n-                    ((StandardContext) context).getInstanceManager().destroyInstance(this.filter);\n+                    context.getInstanceManager().destroyInstance(this.filter);\n                 } catch (Exception e) {\n                     Throwable t = ExceptionUtils\n                             .unwrapInvocationTargetException(e);\n@@ -343,7 +343,7 @@ public final class ApplicationFilterConfig implements FilterConfig, Serializable\n     private InstanceManager getInstanceManager() {\n         if (instanceManager == null) {\n             if (context instanceof StandardContext) {\n-                instanceManager = ((StandardContext)context).getInstanceManager();\n+                instanceManager = context.getInstanceManager();\n             } else {\n                 instanceManager = new DefaultInstanceManager(null,\n                         new HashMap<String, Map<String, String>>(),\ndiff --git a/java/org/apache/catalina/core/ApplicationPart.java b/java/org/apache/catalina/core/ApplicationPart.java\nindex 9f1ec4ea9a..d6400b5b61 100644\n--- a/java/org/apache/catalina/core/ApplicationPart.java\n+++ b/java/org/apache/catalina/core/ApplicationPart.java\n@@ -62,7 +62,7 @@ public class ApplicationPart implements Part {\n     @Override\n     public String getHeader(String name) {\n         if (fileItem instanceof DiskFileItem) {\n-            return ((DiskFileItem) fileItem).getHeaders().getHeader(name);\n+            return fileItem.getHeaders().getHeader(name);\n         }\n         return null;\n     }\n@@ -72,7 +72,7 @@ public class ApplicationPart implements Part {\n         if (fileItem instanceof DiskFileItem) {\n             LinkedHashSet<String> headerNames = new LinkedHashSet<>();\n             Iterator<String> iter =\n-                ((DiskFileItem) fileItem).getHeaders().getHeaderNames();\n+                fileItem.getHeaders().getHeaderNames();\n             while (iter.hasNext()) {\n                 headerNames.add(iter.next());\n             }\n@@ -86,7 +86,7 @@ public class ApplicationPart implements Part {\n         if (fileItem instanceof DiskFileItem) {\n             LinkedHashSet<String> headers = new LinkedHashSet<>();\n             Iterator<String> iter =\n-                ((DiskFileItem) fileItem).getHeaders().getHeaders(name);\n+                fileItem.getHeaders().getHeaders(name);\n             while (iter.hasNext()) {\n                 headers.add(iter.next());\n             }\ndiff --git a/java/org/apache/catalina/core/AsyncContextImpl.java b/java/org/apache/catalina/core/AsyncContextImpl.java\nindex f4d9632a6a..034195c438 100644\n--- a/java/org/apache/catalina/core/AsyncContextImpl.java\n+++ b/java/org/apache/catalina/core/AsyncContextImpl.java\n@@ -486,7 +486,7 @@ public class AsyncContextImpl implements AsyncContext, AsyncContextCallback {\n     private InstanceManager getInstanceManager() {\n         if (instanceManager == null) {\n             if (context instanceof StandardContext) {\n-                instanceManager = ((StandardContext)context).getInstanceManager();\n+                instanceManager = context.getInstanceManager();\n             } else {\n                 instanceManager = new DefaultInstanceManager(null,\n                         new HashMap<String, Map<String, String>>(),\ndiff --git a/java/org/apache/catalina/core/ContainerBase.java b/java/org/apache/catalina/core/ContainerBase.java\nindex a6344afd69..04dcd713e3 100644\n--- a/java/org/apache/catalina/core/ContainerBase.java\n+++ b/java/org/apache/catalina/core/ContainerBase.java\n@@ -1274,7 +1274,7 @@ public abstract class ContainerBase extends LifecycleMBeanBase\n         List<ObjectName> names = new ArrayList<>(children.size());\n         for (Container next : children.values()) {\n             if (next instanceof ContainerBase) {\n-                names.add(((ContainerBase)next).getObjectName());\n+                names.add(next.getObjectName());\n             }\n         }\n         return names.toArray(new ObjectName[names.size()]);\ndiff --git a/java/org/apache/catalina/core/StandardWrapper.java b/java/org/apache/catalina/core/StandardWrapper.java\nindex 1425cf17d9..6e66aa57d6 100644\n--- a/java/org/apache/catalina/core/StandardWrapper.java\n+++ b/java/org/apache/catalina/core/StandardWrapper.java\n@@ -1711,7 +1711,7 @@ public class StandardWrapper extends ContainerBase\n             keyProperties.append(hostName);\n         }\n \n-        String contextName = ((Context) getParent()).getName();\n+        String contextName = getParent().getName();\n         if (!contextName.startsWith(\"/\")) {\n             keyProperties.append('/');\n         }\ndiff --git a/java/org/apache/catalina/ha/session/DeltaManager.java b/java/org/apache/catalina/ha/session/DeltaManager.java\nindex 95cae42428..e7344e0a35 100644\n--- a/java/org/apache/catalina/ha/session/DeltaManager.java\n+++ b/java/org/apache/catalina/ha/session/DeltaManager.java\n@@ -758,14 +758,14 @@ public class DeltaManager extends ClusterManagerBase{\n                     for (SessionMessage smsg : receivedMessageQueue) {\n                         if (!stateTimestampDrop) {\n                             messageReceived(smsg,\n-                                    smsg.getAddress() != null ? (Member) smsg.getAddress() : null);\n+                                    smsg.getAddress() != null ? smsg.getAddress() : null);\n                         } else {\n                             if (smsg.getEventType() != SessionMessage.EVT_GET_ALL_SESSIONS &&\n                                     smsg.getTimestamp() >= stateTransferCreateSendTime) {\n                                 // FIXME handle EVT_GET_ALL_SESSIONS later\n                                 messageReceived(smsg,\n                                         smsg.getAddress() != null ?\n-                                                (Member) smsg.getAddress() :\n+                                                smsg.getAddress() :\n                                                 null);\n                             } else {\n                                 if (log.isWarnEnabled()) {\n@@ -917,7 +917,7 @@ public class DeltaManager extends ClusterManagerBase{\n                     break;\n             } //switch\n \n-            messageReceived(msg, msg.getAddress() != null ? (Member) msg.getAddress() : null);\n+            messageReceived(msg, msg.getAddress() != null ? msg.getAddress() : null);\n         }\n     }\n \ndiff --git a/java/org/apache/catalina/ha/tcp/ReplicationValve.java b/java/org/apache/catalina/ha/tcp/ReplicationValve.java\nindex f911f2d07e..e2c35627d7 100644\n--- a/java/org/apache/catalina/ha/tcp/ReplicationValve.java\n+++ b/java/org/apache/catalina/ha/tcp/ReplicationValve.java\n@@ -310,7 +310,7 @@ public class ReplicationValve\n         Context context = request.getContext();\n         boolean isCrossContext = context != null\n                 && context instanceof StandardContext\n-                && ((StandardContext) context).getCrossContext();\n+                && context.getCrossContext();\n         try {\n             if(isCrossContext) {\n                 if(log.isDebugEnabled()) {\ndiff --git a/java/org/apache/catalina/loader/WebappLoader.java b/java/org/apache/catalina/loader/WebappLoader.java\nindex c28c370631..ad9bccd3e2 100644\n--- a/java/org/apache/catalina/loader/WebappLoader.java\n+++ b/java/org/apache/catalina/loader/WebappLoader.java\n@@ -33,7 +33,6 @@ import javax.servlet.ServletContext;\n \n import org.apache.catalina.Context;\n import org.apache.catalina.Globals;\n-import org.apache.catalina.Lifecycle;\n import org.apache.catalina.LifecycleException;\n import org.apache.catalina.LifecycleState;\n import org.apache.catalina.Loader;\n@@ -396,7 +395,7 @@ public class WebappLoader extends LifecycleMBeanBase\n \n             setPermissions();\n \n-            ((Lifecycle) classLoader).start();\n+            classLoader.start();\n \n             String contextName = context.getName();\n             if (!contextName.startsWith(\"/\")) {\ndiff --git a/java/org/apache/catalina/manager/host/HostManagerServlet.java b/java/org/apache/catalina/manager/host/HostManagerServlet.java\nindex 617bf707bf..c27e0d06b6 100644\n--- a/java/org/apache/catalina/manager/host/HostManagerServlet.java\n+++ b/java/org/apache/catalina/manager/host/HostManagerServlet.java\n@@ -479,7 +479,7 @@ public class HostManagerServlet\n         try {\n             Container child = engine.findChild(name);\n             engine.removeChild(child);\n-            if ( child instanceof ContainerBase ) ((ContainerBase)child).destroy();\n+            if ( child instanceof ContainerBase ) child.destroy();\n         } catch (Exception e) {\n             writer.println(smClient.getString(\"hostManagerServlet.exception\",\n                     e.toString()));\ndiff --git a/java/org/apache/catalina/mapper/MapperListener.java b/java/org/apache/catalina/mapper/MapperListener.java\nindex 4df71cedfb..51716ef62c 100644\n--- a/java/org/apache/catalina/mapper/MapperListener.java\n+++ b/java/org/apache/catalina/mapper/MapperListener.java\n@@ -131,7 +131,7 @@ public class MapperListener extends LifecycleMBeanBase\n     @Override\n     protected String getDomainInternal() {\n         if (service instanceof LifecycleMBeanBase) {\n-            return ((LifecycleMBeanBase) service).getDomain();\n+            return service.getDomain();\n         } else {\n             return null;\n         }\ndiff --git a/java/org/apache/catalina/mbeans/MBeanFactory.java b/java/org/apache/catalina/mbeans/MBeanFactory.java\nindex a3755926e1..6e7143f3f6 100644\n--- a/java/org/apache/catalina/mbeans/MBeanFactory.java\n+++ b/java/org/apache/catalina/mbeans/MBeanFactory.java\n@@ -752,7 +752,7 @@ public class MBeanFactory {\n             host.removeChild(context);\n             if(context instanceof StandardContext)\n             try {\n-                ((StandardContext)context).destroy();\n+                context.destroy();\n             } catch (Exception e) {\n                 log.warn(\"Error during context [\" + context.getName() + \"] destroy \", e);\n            }\ndiff --git a/java/org/apache/catalina/storeconfig/StandardEngineSF.java b/java/org/apache/catalina/storeconfig/StandardEngineSF.java\nindex 2316ffaa49..290e623dab 100644\n--- a/java/org/apache/catalina/storeconfig/StandardEngineSF.java\n+++ b/java/org/apache/catalina/storeconfig/StandardEngineSF.java\n@@ -23,7 +23,6 @@ import java.util.List;\n \n import org.apache.catalina.Cluster;\n import org.apache.catalina.Container;\n-import org.apache.catalina.Lifecycle;\n import org.apache.catalina.LifecycleListener;\n import org.apache.catalina.Realm;\n import org.apache.catalina.Valve;\n@@ -54,8 +53,7 @@ public class StandardEngineSF extends StoreFactoryBase {\n         if (aEngine instanceof StandardEngine) {\n             StandardEngine engine = (StandardEngine) aEngine;\n             // Store nested <Listener> elements\n-            LifecycleListener listeners[] = ((Lifecycle) engine)\n-                    .findLifecycleListeners();\n+            LifecycleListener listeners[] = engine.findLifecycleListeners();\n             storeElementArray(aWriter, indent, listeners);\n \n             // Store nested <Realm> element\ndiff --git a/java/org/apache/catalina/storeconfig/StandardHostSF.java b/java/org/apache/catalina/storeconfig/StandardHostSF.java\nindex 19d3e10189..31368bffb1 100644\n--- a/java/org/apache/catalina/storeconfig/StandardHostSF.java\n+++ b/java/org/apache/catalina/storeconfig/StandardHostSF.java\n@@ -23,7 +23,6 @@ import java.util.List;\n \n import org.apache.catalina.Cluster;\n import org.apache.catalina.Container;\n-import org.apache.catalina.Lifecycle;\n import org.apache.catalina.LifecycleListener;\n import org.apache.catalina.Realm;\n import org.apache.catalina.Valve;\n@@ -55,8 +54,7 @@ public class StandardHostSF extends StoreFactoryBase {\n         if (aHost instanceof StandardHost) {\n             StandardHost host = (StandardHost) aHost;\n             // Store nested <Listener> elements\n-            LifecycleListener listeners[] = ((Lifecycle) host)\n-                    .findLifecycleListeners();\n+            LifecycleListener listeners[] = host.findLifecycleListeners();\n             storeElementArray(aWriter, indent, listeners);\n \n             // Store nested <Alias> elements\ndiff --git a/java/org/apache/catalina/storeconfig/StandardServerSF.java b/java/org/apache/catalina/storeconfig/StandardServerSF.java\nindex 1f2665c9c6..69023707e3 100644\n--- a/java/org/apache/catalina/storeconfig/StandardServerSF.java\n+++ b/java/org/apache/catalina/storeconfig/StandardServerSF.java\n@@ -19,7 +19,6 @@ package org.apache.catalina.storeconfig;\n \n import java.io.PrintWriter;\n \n-import org.apache.catalina.Lifecycle;\n import org.apache.catalina.LifecycleListener;\n import org.apache.catalina.Service;\n import org.apache.catalina.core.StandardServer;\n@@ -68,8 +67,7 @@ public class StandardServerSF extends StoreFactoryBase {\n         if (aObject instanceof StandardServer) {\n             StandardServer server = (StandardServer) aObject;\n             // Store nested <Listener> elements\n-            LifecycleListener listeners[] = ((Lifecycle) server)\n-                    .findLifecycleListeners();\n+            LifecycleListener listeners[] = server.findLifecycleListeners();\n             storeElementArray(aWriter, indent, listeners);\n             /*LifecycleListener listener = null;\n             for (int i = 0; listener == null && i < listeners.length; i++)\ndiff --git a/java/org/apache/catalina/storeconfig/StandardServiceSF.java b/java/org/apache/catalina/storeconfig/StandardServiceSF.java\nindex 67b6e44117..32e7779bc6 100644\n--- a/java/org/apache/catalina/storeconfig/StandardServiceSF.java\n+++ b/java/org/apache/catalina/storeconfig/StandardServiceSF.java\n@@ -21,7 +21,6 @@ import java.io.PrintWriter;\n \n import org.apache.catalina.Engine;\n import org.apache.catalina.Executor;\n-import org.apache.catalina.Lifecycle;\n import org.apache.catalina.LifecycleListener;\n import org.apache.catalina.connector.Connector;\n import org.apache.catalina.core.StandardService;\n@@ -46,8 +45,7 @@ public class StandardServiceSF extends StoreFactoryBase {\n         if (aService instanceof StandardService) {\n             StandardService service = (StandardService) aService;\n             // Store nested <Listener> elements\n-            LifecycleListener listeners[] = ((Lifecycle) service)\n-                    .findLifecycleListeners();\n+            LifecycleListener listeners[] = service.findLifecycleListeners();\n             storeElementArray(aWriter, indent, listeners);\n \n             // Store nested <Executor> elements\ndiff --git a/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java b/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java\nindex 4ea22274b2..8c38712c6f 100644\n--- a/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java\n+++ b/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java\n@@ -510,7 +510,7 @@ public abstract class AbstractReplicatedMap<K,V>\n     public void transferState() {\n         try {\n             Member[] members = getMapMembers();\n-            Member backup = members.length > 0 ? (Member) members[0] : null;\n+            Member backup = members.length > 0 ? members[0] : null;\n             if (backup != null) {\n                 MapMessage msg = new MapMessage(mapContextName, getStateMessageType(), false,\n                                                 null, null, null, null, null);\ndiff --git a/java/org/apache/el/lang/ExpressionBuilder.java b/java/org/apache/el/lang/ExpressionBuilder.java\nindex cde34a6735..f784d8e1f7 100644\n--- a/java/org/apache/el/lang/ExpressionBuilder.java\n+++ b/java/org/apache/el/lang/ExpressionBuilder.java\n@@ -230,7 +230,7 @@ public final class ExpressionBuilder implements NodeVisitor {\n                         \"\" + methodParameterCount, \"\" + node.jjtGetChild(0).jjtGetNumChildren()));\n             }\n         } else if (node instanceof AstIdentifier && this.varMapper != null) {\n-            String variable = ((AstIdentifier) node).getImage();\n+            String variable = node.getImage();\n \n             // simply capture it\n             this.varMapper.resolveVariable(variable);\ndiff --git a/java/org/apache/jasper/compiler/Generator.java b/java/org/apache/jasper/compiler/Generator.java\nindex ce29953a8e..b4a369ede5 100644\n--- a/java/org/apache/jasper/compiler/Generator.java\n+++ b/java/org/apache/jasper/compiler/Generator.java\n@@ -330,7 +330,7 @@ class Generator {\n                     }\n                     for (int i = 0; i < namedAttrs.size(); i++) {\n                         attrNames[attrs.getLength() + i] =\n-                            ((NamedAttribute) namedAttrs.getNode(i)).getQName();\n+                            namedAttrs.getNode(i).getQName();\n                     }\n                     Arrays.sort(attrNames, Collections.reverseOrder());\n                     if (attrNames.length > 0) {\n@@ -3415,8 +3415,7 @@ class Generator {\n                         out.printil(\"java.lang.String \"\n                                 + varName\n                  ",
    "Code clean - up . . Align BIO and NIO to make Async refactoring easier .": "diff --git a/java/org/apache/tomcat/util/net/NioEndpoint.java b/java/org/apache/tomcat/util/net/NioEndpoint.java\nindex 6cb20abcc4..5d6d62890b 100644\n--- a/java/org/apache/tomcat/util/net/NioEndpoint.java\n+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java\n@@ -52,6 +52,7 @@ import javax.net.ssl.X509KeyManager;\n import org.apache.juli.logging.Log;\n import org.apache.juli.logging.LogFactory;\n import org.apache.tomcat.util.IntrospectionUtils;\n+import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;\n import org.apache.tomcat.util.net.SecureNioChannel.ApplicationBufferHandler;\n import org.apache.tomcat.util.net.jsse.JSSESocketFactory;\n import org.apache.tomcat.util.net.jsse.NioX509KeyManager;\n@@ -1478,11 +1479,11 @@ public class NioEndpoint extends AbstractEndpoint {\n                     handshake = -1;\n                 }\n                 if ( handshake == 0 ) {\n+                    SocketState state = SocketState.OPEN;\n                     // Process the request from this socket\n-                    boolean closed = (status==null)?(handler.process(socket)==Handler.SocketState.CLOSED) :\n-                        (handler.event(socket,status)==Handler.SocketState.CLOSED);\n+                    state = (status==null)?handler.process(socket):handler.event(socket,status);\n \n-                    if (closed) {\n+                    if (state == SocketState.CLOSED) {\n                         // Close socket and pool\n         ",
    "Add test <issue_id>": "diff --git a/querydsl-mongodb/src/test/java/com/mysema/query/mongodb/MongodbQueryTest.java b/querydsl-mongodb/src/test/java/com/mysema/query/mongodb/MongodbQueryTest.java\nindex d8ba35ada..9d33a0316 100644\n--- a/querydsl-mongodb/src/test/java/com/mysema/query/mongodb/MongodbQueryTest.java\n+++ b/querydsl-mongodb/src/test/java/com/mysema/query/mongodb/MongodbQueryTest.java\n@@ -28,6 +28,7 @@ import java.util.Date;\n import java.util.Iterator;\n import java.util.List;\n \n+import com.mysema.query.mongodb.domain.*;\n import org.bson.types.ObjectId;\n import org.junit.Before;\n import org.junit.Test;\n@@ -41,15 +42,10 @@ import com.mongodb.MongoException;\n import com.mongodb.ReadPreference;\n import com.mysema.query.NonUniqueResultException;\n import com.mysema.query.SearchResults;\n-import com.mysema.query.mongodb.domain.Address;\n-import com.mysema.query.mongodb.domain.City;\n-import com.mysema.query.mongodb.domain.Item;\n-import com.mysema.query.mongodb.domain.MapEntity;\n import com.mysema.query.mongodb.domain.QAddress;\n import com.mysema.query.mongodb.domain.QItem;\n import com.mysema.query.mongodb.domain.QMapEntity;\n import com.mysema.query.mongodb.domain.QUser;\n-import com.mysema.query.mongodb.domain.User;\n import com.mysema.query.mongodb.domain.User.Gender;\n import com.mysema.query.mongodb.morphia.MorphiaQuery;\n import com.mysema.query.types.EntityPath;\n@@ -70,6 +66,7 @@ public class MongodbQueryTest {\n     private final QItem item = QItem.item;\n     private final QAddress address = QAddress.address;\n     private final QMapEntity mapEntity = QMapEntity.mapEntity;\n+    private final QDates dates = QDates.dates;\n \n     List<User> users = Lists.newArrayList();\n     User u1, u2, u3, u4;\n@@ -77,7 +74,7 @@ public class MongodbQueryTest {\n \n     public MongodbQueryTest() throws UnknownHostException, MongoException {\n         mongo = new Mongo();\n-        morphia = new Morphia().map(User.class).map(Item.class).map(MapEntity.class);\n+        morphia = new Morphia().map(User.class).map(Item.class).map(MapEntity.class).map(Dates.class);\n         ds = morphia.createDatastore(mongo, dbname);\n     }\n \n@@ -209,6 +206,18 @@ public class MongodbQueryTest {\n         assertEquals(0, query().where(user.addresses.any().street.eq(\"akatu\")).count());\n     }\n \n+    @Test\n+    public void Dates() {\n+        Date start = new Date();\n+        ds.delete(ds.createQuery(Dates.class));\n+        Dates d = new Dates();\n+        d.setDate(new Date());\n+        ds.save(d);\n+        Date end = new Date();\n+\n+        assertEquals(d, query(dates).where(dates.date.between(start, end)).singleResult());\n+    }\n+\n     @Test\n     public void ElemMatch() {\n //      { \"addresses\" : { \"$elemMatch\" : { \"street\" : \"Aakatu1\"}}}\ndiff --git a/querydsl-mongodb/src/test/java/com/mysema/query/mongodb/domain/Dates.java b/querydsl-mongodb/src/test/java/com/mysema/query/mongodb/domain/Dates.java\nnew file mode 100644\nindex 000000000..307580db1\n--- /dev/null\n+++ b/querydsl-mongodb/src/test/java/com/mysema/query/mongodb/domain/Dates.java\n@@ -0,0 +1,31 @@\n+package com.mysema.query.mongodb.domain;\n+\n+import org.bson.types.ObjectId;\n+import org.mongodb.morphia.annotations.Entity;\n+import org.mongodb.morphia.annotations.Id;\n+\n+import java.util.Date;\n+\n+@Entity\n+public class Dates {\n+\n+    private @Id ObjectId id;\n+\n+    private Date date;\n+\n+    public ObjectId getId() {\n+        return id;\n+    }\n+\n+    public void setId(ObjectId id) {\n+        this.id = id;\n+    }\n+\n+    public Date getDate() {\n+        return date;\n+    }\n+\n+    public void setDate(Date date) {\n+        this.date = date;\n+    }\n+}",
    "Add basic / simple gRPC healthcheck based on the gRPC spec proto and the .": "diff --git a/grpc-server/build.gradle b/grpc-server/build.gradle\nindex 4efa7138e..3e4e89674 100644\n--- a/grpc-server/build.gradle\n+++ b/grpc-server/build.gradle\n@@ -10,4 +10,8 @@ dependencies {\n \n     compile \"io.grpc:grpc-netty:${revGrpc}\"\n     compile \"log4j:log4j:1.2.17\"\n+\n+    testCompile \"io.grpc:grpc-testing:${revGrpc}\"\n+    testCompile \"org.mockito:mockito-all:${revMockito}\"\n+    testCompile 'org.testinfected.hamcrest-matchers:all-matchers:1.8'\n }\ndiff --git a/grpc-server/src/main/java/com/netflix/conductor/grpc/server/GRPCModule.java b/grpc-server/src/main/java/com/netflix/conductor/grpc/server/GRPCModule.java\nindex acd53a1d9..55f948876 100644\n--- a/grpc-server/src/main/java/com/netflix/conductor/grpc/server/GRPCModule.java\n+++ b/grpc-server/src/main/java/com/netflix/conductor/grpc/server/GRPCModule.java\n@@ -7,15 +7,20 @@ import com.netflix.conductor.grpc.MetadataServiceGrpc;\n import com.netflix.conductor.grpc.TaskServiceGrpc;\n import com.netflix.conductor.grpc.WorkflowServiceGrpc;\n import com.netflix.conductor.grpc.server.service.EventServiceImpl;\n+import com.netflix.conductor.grpc.server.service.HealthServiceImpl;\n import com.netflix.conductor.grpc.server.service.MetadataServiceImpl;\n import com.netflix.conductor.grpc.server.service.TaskServiceImpl;\n import com.netflix.conductor.grpc.server.service.WorkflowServiceImpl;\n \n+import io.grpc.health.v1.HealthGrpc;\n+\n public class GRPCModule extends AbstractModule {\n \n     @Override\n     protected void configure() {\n \n+        bind(HealthGrpc.HealthImplBase.class).to(HealthServiceImpl.class);\n+\n         bind(EventServiceGrpc.EventServiceImplBase.class).to(EventServiceImpl.class);\n         bind(MetadataServiceGrpc.MetadataServiceImplBase.class).to(MetadataServiceImpl.class);\n         bind(TaskServiceGrpc.TaskServiceImplBase.class).to(TaskServiceImpl.class);\ndiff --git a/grpc-server/src/main/java/com/netflix/conductor/grpc/server/GRPCServerProvider.java b/grpc-server/src/main/java/com/netflix/conductor/grpc/server/GRPCServerProvider.java\nindex 83a80a0ce..be85c0a47 100644\n--- a/grpc-server/src/main/java/com/netflix/conductor/grpc/server/GRPCServerProvider.java\n+++ b/grpc-server/src/main/java/com/netflix/conductor/grpc/server/GRPCServerProvider.java\n@@ -11,26 +11,31 @@ import javax.inject.Inject;\n import javax.inject.Provider;\n \n import io.grpc.BindableService;\n+import io.grpc.health.v1.HealthGrpc;\n \n public class GRPCServerProvider implements Provider<Optional<GRPCServer>> {\n \n     private final GRPCServerConfiguration configuration;\n+    private final BindableService healthServiceImpl;\n     private final BindableService eventServiceImpl;\n-    private final BindableService metadataSercieImpl;\n+    private final BindableService metadataServiceImpl;\n     private final BindableService taskServiceImpl;\n     private final BindableService workflowServiceImpl;\n \n     @Inject\n     public GRPCServerProvider(\n             GRPCServerConfiguration conf,\n+            HealthGrpc.HealthImplBase healthServiceImpl,\n             EventServiceGrpc.EventServiceImplBase eventServiceImpl,\n             MetadataServiceGrpc.MetadataServiceImplBase metadataServiceImpl,\n             TaskServiceGrpc.TaskServiceImplBase taskServiceImpl,\n             WorkflowServiceGrpc.WorkflowServiceImplBase workflowServiceImpl\n     ) {\n         this.configuration = conf;\n+        this.healthServiceImpl = healthServiceImpl;\n+\n         this.eventServiceImpl = eventServiceImpl;\n-        this.metadataSercieImpl = metadataServiceImpl;\n+        this.metadataServiceImpl = metadataServiceImpl;\n         this.taskServiceImpl = taskServiceImpl;\n         this.workflowServiceImpl = workflowServiceImpl;\n     }\n@@ -41,8 +46,9 @@ public class GRPCServerProvider implements Provider<Optional<GRPCServer>> {\n                 Optional.of(\n                         new GRPCServer(\n                                 configuration.getPort(),\n+                                healthServiceImpl,\n                                 eventServiceImpl,\n-                                metadataSercieImpl,\n+                                metadataServiceImpl,\n                                 taskServiceImpl,\n                                 workflowServiceImpl\n                         ))\ndiff --git a/grpc-server/src/main/java/com/netflix/conductor/grpc/server/service/HealthServiceImpl.java b/grpc-server/src/main/java/com/netflix/conductor/grpc/server/service/HealthServiceImpl.java\nnew file mode 100644\nindex 000000000..1aca1f878\n--- /dev/null\n+++ b/grpc-server/src/main/java/com/netflix/conductor/grpc/server/service/HealthServiceImpl.java\n@@ -0,0 +1,44 @@\n+package com.netflix.conductor.grpc.server.service;\n+\n+import com.netflix.runtime.health.api.HealthCheckAggregator;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+\n+import io.grpc.health.v1.HealthCheckRequest;\n+import io.grpc.health.v1.HealthCheckResponse;\n+import io.grpc.health.v1.HealthGrpc;\n+import io.grpc.stub.StreamObserver;\n+\n+public class HealthServiceImpl extends HealthGrpc.HealthImplBase {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(HealthServiceImpl.class);\n+    private static final GRPCHelper GRPC_HELPER = new GRPCHelper(LOGGER);\n+\n+    private final HealthCheckAggregator healthCheck;\n+\n+    @Inject\n+    public HealthServiceImpl(HealthCheckAggregator healthCheck) {\n+        this.healthCheck = healthCheck;\n+    }\n+\n+    @Override\n+    public void check(HealthCheckRequest request, StreamObserver<HealthCheckResponse> responseObserver) {\n+        try {\n+            if (healthCheck.check().get().isHealthy()) {\n+                responseObserver.onNext(\n+                        HealthCheckResponse.newBuilder().setStatus(HealthCheckResponse.ServingStatus.SERVING).build()\n+                );\n+            } else {\n+                responseObserver.onNext(\n+                        HealthCheckResponse.newBuilder().setStatus(HealthCheckResponse.ServingStatus.NOT_SERVING).build()\n+                );\n+            }\n+        } catch (Exception ex) {\n+            GRPC_HELPER.onError(responseObserver, ex);\n+        } finally {\n+            responseObserver.onCompleted();\n+        }\n+    }\n+}\ndiff --git a/grpc-server/src/test/java/com/netflix/conductor/grpc/server/service/HealthServiceImplTest.java b/grpc-server/src/test/java/com/netflix/conductor/grpc/server/service/HealthServiceImplTest.java\nnew file mode 100644\nindex 000000000..8e320f6dd\n--- /dev/null\n+++ b/grpc-server/src/test/java/com/netflix/conductor/grpc/server/service/HealthServiceImplTest.java\n@@ -0,0 +1,108 @@\n+package com.netflix.conductor.grpc.server.service;\n+\n+import com.netflix.runtime.health.api.HealthCheckAggregator;\n+import com.netflix.runtime.health.api.HealthCheckStatus;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import io.grpc.BindableService;\n+import io.grpc.Status;\n+import io.grpc.StatusRuntimeException;\n+import io.grpc.health.v1.HealthCheckRequest;\n+import io.grpc.health.v1.HealthCheckResponse;\n+import io.grpc.health.v1.HealthGrpc;\n+import io.grpc.inprocess.InProcessChannelBuilder;\n+import io.grpc.inprocess.InProcessServerBuilder;\n+import io.grpc.testing.GrpcCleanupRule;\n+\n+import static org.hamcrest.Matchers.hasProperty;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class HealthServiceImplTest {\n+\n+    @Rule\n+    public final GrpcCleanupRule grpcCleanup = new GrpcCleanupRule();\n+\n+    @Rule\n+    public ExpectedException thrown = ExpectedException.none();\n+\n+    @Test\n+    public void healthServing() throws Exception {\n+        // Generate a unique in-process server name.\n+        String serverName = InProcessServerBuilder.generateName();\n+        HealthCheckAggregator hca = mock(HealthCheckAggregator.class);\n+        CompletableFuture<HealthCheckStatus> hcsf = mock(CompletableFuture.class);\n+        HealthCheckStatus hcs = mock(HealthCheckStatus.class);\n+        when(hcs.isHealthy()).thenReturn(true);\n+        when(hcsf.get()).thenReturn(hcs);\n+        when(hca.check()).thenReturn(hcsf);\n+        HealthServiceImpl healthyService = new HealthServiceImpl(hca);\n+\n+        addService(serverName, healthyService);\n+        HealthGrpc.HealthBlockingStub blockingStub = HealthGrpc.newBlockingStub(\n+                // Create a client channel and register for automatic graceful shutdown.\n+                grpcCleanup.register(InProcessChannelBuilder.forName(serverName).directExecutor().build()));\n+\n+\n+        HealthCheckResponse reply = blockingStub.check(HealthCheckRequest.newBuilder().build());\n+\n+        assertEquals(HealthCheckResponse.ServingStatus.SERVING, reply.getStatus());\n+    }\n+\n+    @Test\n+    public void healthNotServing() throws Exception {\n+        // Generate a unique in-process server name.\n+        String serverName = InProcessServerBuilder.generateName();\n+        HealthCheckAggregator hca = mock(HealthCheckAggregator.class);\n+        CompletableFuture<HealthCheckStatus> hcsf = mock(CompletableFuture.class);\n+        HealthCheckStatus hcs = mock(HealthCheckStatus.class);\n+        when(hcs.isHealthy()).thenReturn(false);\n+        when(hcsf.get()).thenReturn(hcs);\n+        when(hca.check()).thenReturn(hcsf);\n+        HealthServiceImpl healthyService = new HealthServiceImpl(hca);\n+\n+        addService(serverName, healthyService);\n+        HealthGrpc.HealthBlockingStub blockingStub = HealthGrpc.newBlockingStub(\n+                // Create a client channel and register for automatic graceful shutdown.\n+                grpcCleanup.register(InProcessChannelBuilder.forName(serverName).directExecutor().build()));\n+\n+\n+        HealthCheckResponse reply = blockingStub.check(HealthCheckRequest.newBuilder().build());\n+\n+        assertEquals(HealthCheckResponse.ServingStatus.NOT_SERVING, reply.getStatus());\n+    }\n+\n+    @Test\n+    public void healthException() throws Exception {\n+        // Generate a unique in-process server name.\n+        String serverName = InProcessServerBuilder.generateName();\n+        HealthCheckAggregator hca = mock(HealthCheckAggregator.class);\n+        CompletableFuture<HealthCheckStatus> hcsf = mock(CompletableFuture.class);\n+        when(hcsf.get()).thenThrow(InterruptedException.class);\n+        when(hca.check()).thenReturn(hcsf);\n+        HealthServiceImpl healthyService = new HealthServiceImpl(hca);\n+\n+        addService(serverName, healthyService);\n+        HealthGrpc.HealthBlockingStub blockingStub = HealthGrpc.newBlockingStub(\n+                // Create a client channel and register for automatic graceful shutdown.\n+                grpcCleanup.register(InProcessChannelBuilder.forName(serverName).directExecutor().build()));\n+\n+        thrown.expect(StatusRuntimeException.class);\n+        thrown.expect(hasProperty(\"status\", is(Status.INTERNAL)));\n+        blockingStub.check(HealthCheckRequest.newBuilder().build());\n+\n+    }\n+\n+    private void addService(String name, BindableService service) throws Exception {\n+        // Create a server, add service, start, and register for automatic graceful shutdown.\n+        grpcCleanup.register(InProcessServerBuilder\n+                .forName(name).directExecutor().addService(service).build().start());\n+    }\n+}\ndiff --git a/grpc/build.gradle b/grpc/build.gradle\nindex ea63b793e..c653d82a1 100644\n--- a/grpc/build.gradle\n+++ b/grpc/build.gradle\n@@ -10,13 +10,20 @@ plugins {\n     id \"com.google.protobuf\" version \"0.8.5\"\n }\n \n+repositories{\n+    maven { url \"https://dl.bintray.com/chaos-systems/mvn\" }\n+}\n+\n dependencies {\n     compile project(':conductor-common')\n     compile project(':conductor-core')\n \n+    protobuf 'io.chaossystems.grpc:grpc-healthcheck:1.0.+:protos'\n     compile \"com.google.api.grpc:proto-google-common-protos:1.0.0\"\n     compile \"io.grpc:grpc-protobuf:${revGrpc}\"\n     compile \"io.grpc:grpc-stub:${revGrpc}\"\n+\n+    compile \"com.netflix.runtime:health-api:${revHealth}\"\n }\n \n protobuf {\ndiff --git a/versionsOfDependencies.gradle b/versionsOfDependencies.gradle\nindex a738972d3..9e7a44574 100644\n--- a/versionsOfDependencies.gradle\n+++ b/versionsOfDependencies.gradle\n@@ -13,7 +13,7 @@ ext {\n     revElasticSearch5Client = '5.6.8'\n     revEurekaClient = '1.8.7'\n     revFlywayCore ='4.0.3'\n-    revGrpc = '1.11.0'\n+    revGrpc = '1.14.+'\n     revGuavaRetrying = '2.0.0'\n     revGuice = '4.1.0'\n     revGuiceMultiBindings = '4.1.0'",
    "Add dependency version plugin and config ( <issue_id> )": "diff --git a/build.gradle b/build.gradle\nindex 6e573bfe..177d4025 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -10,6 +10,10 @@ buildscript {\n     }\n }\n \n+plugins {\n+    id 'com.github.ben-manes.versions' version '0.17.0'\n+}\n+\n allprojects {\n     repositories {\n         jcenter()\n@@ -17,6 +21,20 @@ allprojects {\n         maven { url 'https://maven.google.com'  }\n         maven { url 'https://maven.fabric.io/public' }\n     }\n+\n+    // See: https://github.com/ben-manes/gradle-versions-plugin\n+    dependencyUpdates.resolutionStrategy = {\n+        componentSelection { rules ->\n+            rules.all { selection ->\n+                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->\n+                    selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\\d-]*/\n+                }\n+                if (rejected) {\n+                    selection.reject('Release candidate')\n+                }\n+            }\n+        }\n+",
    "Allow upgrade handler to specify the upgrade string": "diff --git a/core/src/main/java/io/undertow/server/protocol/http2/Http2UpgradeHandler.java b/core/src/main/java/io/undertow/server/protocol/http2/Http2UpgradeHandler.java\nindex 1931d2b06..5ea3d7f2f 100644\n--- a/core/src/main/java/io/undertow/server/protocol/http2/Http2UpgradeHandler.java\n+++ b/core/src/main/java/io/undertow/server/protocol/http2/Http2UpgradeHandler.java\n@@ -19,6 +19,10 @@\n package io.undertow.server.protocol.http2;\n \n import java.nio.ByteBuffer;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n \n import org.xnio.OptionMap;\n import org.xnio.StreamConnection;\n@@ -42,14 +46,22 @@ public class Http2UpgradeHandler implements HttpHandler {\n \n     private final HttpHandler next;\n \n+    private final Set<String> upgradeStrings;\n+\n     public Http2UpgradeHandler(HttpHandler next) {\n         this.next = next;\n+        this.upgradeStrings = Collections.singleton(Http2Channel.CLEARTEXT_UPGRADE_STRING);\n+    }\n+\n+    public Http2UpgradeHandler(HttpHandler next, String... upgradeStrings) {\n+        this.next = next;\n+        this.upgradeStrings = new HashSet<>(Arrays.asList(upgradeStrings));\n     }\n \n     @Override\n     public void handleRequest(HttpServerExchange exchange) throws Exception {\n         final String upgrade = exchange.getRequestHeaders().getFirst(Headers.UPGRADE);\n-        if(upgrade != null && upgrade.equals(Http2Channel.CLEARTEXT_UPGRADE_STRING)) {\n+        if(upgrade != null && upgradeStrings.contains(upgrade)) {\n             String settings = exchange.getRequestHeaders().getFirst(\"HTTP2-Settings\");\n             if(settings != null) {\n                 //required by spec",
    "Add smali resources for invoke - direct tests": "diff --git a/smalivm/src/test/resources/smali/object_init/class_with_default_constructor.smali b/smalivm/src/test/resources/smali/object_init/class_with_default_constructor.smali\nnew file mode 100644\nindex 00000000..f906b6b7\n--- /dev/null\n+++ b/smalivm/src/test/resources/smali/object_init/class_with_default_constructor.smali\n@@ -0,0 +1,10 @@\n+.class public Lclass_with_default_constructor;\n+.super Ljava/lang/Object;\n+\n+.method public constructor <init>()V\n+    .locals 0\n+\n+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V\n+\n+    return-void\n+.end method\ndiff --git a/smalivm/src/test/resources/smali/object_init/class_without_default_constructor.smali b/smalivm/src/test/resources/smali/object_init/class_without_default_constructor.smali\nnew file mode 100644\nindex 00000000..0b36a6af\n--- /dev/null\n+++ b/smalivm/src/test/resources/smali/object_init/class_without_default_constructor.smali\n@@ -0,0 +1,10 @@\n+.class public Lclass_without_default_constructor;\n+.super Ljava/lang/Object;\n+\n+.method public constructor <init>([C)V\n+    .locals 0\n+\n+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V\n+\n+    return-void\n+.end method\ndiff --git a/smalivm/src/test/resources/smali/object_init/class_without_default_constructor_checks_null.smali b/smalivm/src/test/resources/smali/object_init/class_without_default_constructor_checks_null.smali\nnew file mode 100644\nindex 00000000..feaca987\n--- /dev/null\n+++ b/smalivm/src/test/resources/smali/object_init/class_without_default_constructor_checks_null.smali\n@@ -0,0 +1,18 @@\n+.class public Lclass_without_default_constructor_checks_null;\n+.super Ljava/lang/Object;\n+\n+.method public constructor <init>([C)V\n+    .locals 2\n+\n+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V\n+\n+    if-nez p1, :return\n+\n+    new-instance v0, Ljava/lang/NullPointerException;\n+    const-string/jumbo v1, \"You'll never reach the Dark Tower!\"\n+    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V\n+    throw v0\n+\n+    :return\n+    return-void\n+.end method",
    "Adapted controller methods to https : / / jira . spring . io / browse / SPR - 15508": "diff --git a/src/main/java/thymeleafsandbox/stsm/web/controller/SeedStarterMngController.java b/src/main/java/thymeleafsandbox/stsm/web/controller/SeedStarterMngController.java\nindex 07832a190..370a09555 100644\n--- a/src/main/java/thymeleafsandbox/stsm/web/controller/SeedStarterMngController.java\n+++ b/src/main/java/thymeleafsandbox/stsm/web/controller/SeedStarterMngController.java\n@@ -29,7 +29,8 @@\n import org.springframework.validation.BindingResult;\n import org.springframework.web.bind.annotation.ModelAttribute;\n import org.springframework.web.bind.annotation.RequestMapping;\n-import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.server.ServerWebExchange;\n+import reactor.core.publisher.Mono;\n import thymeleafsandbox.stsm.business.entities.Feature;\n import thymeleafsandbox.stsm.business.entities.Row;\n import thymeleafsandbox.stsm.business.entities.SeedStarter;\n@@ -86,43 +87,76 @@ public List<Variety> populateVarieties() {\n     public List<SeedStarter> populateSeedStarters() {\n         return this.seedStarterService.findAll();\n     }\n-    \n-    \n-    \n+\n+\n+    /*\n+     * NOTE that in this reactive version of STSM we cannot select the controller method to be executed\n+     * depending on the presence of a specific request parameter (using the \"param\" attribute of the\n+     * @RequestMapping annotation) because WebFlux does not include as \"request parameters\" data\n+     * coming from forms (see https://jira.spring.io/browse/SPR-15508 ). Doing so would mean blocking\n+     * for the time the framework needs for reading the request payload, which goes against the\n+     * general reactiveness of the architecture.\n+     *\n+     * So the ways to access data from form are, either include then as a part of form-backing bean\n+     * (in this case SeedStarter), or using exchange.getFormData(). In this case, modifying a model entity\n+     * like SeedStarter because of a very specific need of the user interface (adding the \"save\",\n+     * \"addRow\" or \"removeRow\" parameters in order to modify the form's structure from the server) would\n+     * not be very elegant, so instead we will read exchange.getFormData() and direct to a different\n+     * inner (private) controller method depending on the presence of these fields in the form data\n+     * coming from the client.\n+     */\n+\n     @RequestMapping({\"/\",\"/seedstartermng\"})\n-    public String showSeedstarters(final SeedStarter seedStarter) {\n+    public Mono<String> doSeedstarter(\n+            final SeedStarter seedStarter, final BindingResult bindingResult, final ModelMap model,\n+            final ServerWebExchange exchange) {\n+\n+        return exchange.getFormData().flatMap(\n+                formData -> {\n+                    if (formData.containsKey(\"save\")) {\n+                        return saveSeedstarter(seedStarter,  bindingResult, model);\n+                    }\n+                    if (formData.containsKey(\"addRow\")) {\n+                        return addRow(seedStarter, bindingResult);\n+                    }\n+                    if (formData.containsKey(\"removeRow\")) {\n+                        final int rowId = Integer.parseInt(formData.getFirst(\"removeRow\"));\n+                        return removeRow(seedStarter, bindingResult, rowId);\n+                    }\n+                    return showSeedstarters(seedStarter);\n+                });\n+\n+    }\n+\n+\n+    private Mono<String> showSeedstarters(final SeedStarter seedStarter) {\n         seedStarter.setDatePlanted(Calendar.getInstance().getTime());\n-        return \"seedstartermng\";\n+        return Mono.just(\"seedstartermng\");\n     }\n-    \n-    \n-    \n-    @RequestMapping(value=\"/seedstartermng\", params={\"save\"})\n-    public String saveSeedstarter(final SeedStarter seedStarter, final BindingResult bindingResult, final ModelMap model) {\n+\n+\n+    private Mono<String> saveSeedstarter(final SeedStarter seedStarter, final BindingResult bindingResult, final ModelMap model) {\n         if (bindingResult.hasErrors()) {\n-            return \"seedstartermng\";\n+            return Mono.just(\"seedstartermng\");\n         }\n         this.seedStarterService.add(seedStarter);\n         model.clear();\n-        return \"redirect:/seedstartermng\";\n+        return Mono.just(\"redirect:/seedstartermng\");\n     }\n-    \n \n-    \n-    @RequestMapping(value=\"/seedstartermng\", params={\"addRow\"})\n-    public String addRow(final SeedStarter seedStarter, final BindingResult bindingResult) {\n+\n+    private Mono<String> addRow(final SeedStarter seedStarter, final BindingResult bindingResult) {\n         seedStarter.getRows().add(new Row());\n-        return \"seedstartermng\";\n+        return Mono.just(\"seedstartermng\");\n     }\n     \n     \n-    @RequestMapping(value=\"/seedstartermng\", params={\"removeRow\"})\n-    public String removeRow(\n+    private Mono<String> removeRow(\n             final SeedStarter seedStarter,\n             final BindingResult bindingResult,\n-            @RequestParam(value = \"removeRow\", required = false) Integer rowId) {\n-        seedStarter.getRows().remove(rowId.intValue());\n-        return \"seedstartermng\";\n+            final int rowId) {\n+        seedStarter.getRows().remove(rowId);\n+        return Mono.just(\"seedstartermng\");\n     }\n \n ",
    "Refresh the Javadocs of SwitchCompat .": "diff --git a/appcompat/appcompat/src/main/java/androidx/appcompat/widget/SwitchCompat.java b/appcompat/appcompat/src/main/java/androidx/appcompat/widget/SwitchCompat.java\nindex 9480999c92f..fe65cc224a5 100644\n--- a/appcompat/appcompat/src/main/java/androidx/appcompat/widget/SwitchCompat.java\n+++ b/appcompat/appcompat/src/main/java/androidx/appcompat/widget/SwitchCompat.java\n@@ -56,12 +56,16 @@ import androidx.core.view.ViewCompat;\n import androidx.core.widget.TextViewCompat;\n \n /**\n- * SwitchCompat is a version of the Switch widget which on devices back to API v7. It does not\n- * make any attempt to use the platform provided widget on those devices which it is available\n- * normally.\n+ * SwitchCompat is a complete backport of the core {@link android.widget.Switch} widget that\n+ * brings the visuals and the functionality of that widget to older versions of the platform.\n+ * Unlike other widgets in this package, SwitchCompat is <strong>not</strong> automatically used\n+ * in layouts that use the <code>&lt;Switch&gt;</code> element. Instead, you need to explicitly\n+ * use <code>&lt;androidx.appcompat.widget.SwitchCompat&gt;</code> and the matching attributes\n+ * in your layouts.\n+ *\n  * <p>\n- * A Switch is a two-state toggle switch widget that can select between two\n- * options. The user may drag the \"thumb\" back and forth to choose the selected option,\n+ * A Switch is a two-state toggle switch widget that can be used to select one of the two\n+ * available options. The user may drag the \"thumb\" back and forth to choose the selected option,\n  * or simply tap to toggle as if it were a checkbox. The {@link #setText(CharSequence) text}\n  * property controls the text displayed in the label for the switch, whereas the\n  * {@link #setTextOff(CharSequence) off} and {@link #setTextOn(CharSequence) on} text\n@@ -71,6 +75,12 @@ import androidx.core.widget.TextViewCompat;\n  * {@link #setSwitchTextAppearance(android.content.Context, int) switchTextAppearance} and\n  * the related setSwitchTypeface() methods control that of the thumb.\n  *\n+ * <p>\n+ * The thumb can be tinted with {@link #setThumbTintList(ColorStateList)} and\n+ * {@link #setThumbTintMode(PorterDuff.Mode)} APIs, as well as with the matching XML attributes.\n+ * The track can be tinted with {@link #setTrackTintList(ColorStateList)} and\n+ * {@link #setTrackTintMode(PorterDuff.Mode)} APIs, as well as with the matching XML attributes.\n+ *\n  * <p>See the <a href=\"{@docRoot}guide/topics/ui/controls/togglebutton.html\">Toggle Buttons</a>\n  * guide.</p>\n  *\n@@ -82,6 +92,10 @@ import androidx.core.widget.TextViewCompat;\n  * {@link android.R.attr#thumb}\n  * {@link androidx.appcompat.R.attr#thumbTextPadding}\n  * {@link androidx.appcompat.R.attr#track}\n+ * {@link androidx.appcompat.R.attr#thumbTint}\n+ * {@link androidx.appcompat.R.attr#thumbTintMode}\n+ * {@link androidx.appcompat.R.attr#trackTint}\n+ * {@link androidx.appcompat.R.attr#trackTintMode}\n  */\n public class SwitchCompat extends CompoundButton {\n     private static final int THUMB_ANIMATION_DURATION = 250;",
    "Add Period . toStandard * ( ) methods .": "diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt\nindex d097906e..f5b3cb8e 100644\n--- a/JodaTime/RELEASE-NOTES.txt\n+++ b/JodaTime/RELEASE-NOTES.txt\n@@ -20,6 +20,13 @@ of restrictions. If the license causes you problems please contact the mailing l\n \n Enhancements since 1.4\n ----------------------\n+- Period\n+  - add toStandardDuration()\n+  - add toStandardWeeks(), toStandardDays(), toStandardHours(),\n+    toStandardMinutes(), toStandardSeconds()\n+  methods to convert a period to other types using the standard\n+  conversions (7 day week, 24 hour day, ...)\n+\n - LocalDate.toLocalDateTime\n   - provide mechanism to create LocalDateTime from LocalDate and LocalTime\n \ndiff --git a/JodaTime/src/java/org/joda/time/Period.java b/JodaTime/src/java/org/joda/time/Period.java\nindex e4a6624e..d865db56 100644\n--- a/JodaTime/src/java/org/joda/time/Period.java\n+++ b/JodaTime/src/java/org/joda/time/Period.java\n@@ -18,6 +18,7 @@ package org.joda.time;\n import java.io.Serializable;\n \n import org.joda.time.base.BasePeriod;\n+import org.joda.time.field.FieldUtils;\n \n /**\n  * An immutable time period specifying a set of duration field values.\n@@ -1173,4 +1174,202 @@ public final class Period\n         return plusMillis(-millis);\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Converts this period to a period in weeks assuming a\n+     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n+     * <p>\n+     * This method allows you to convert between different types of period.\n+     * However to achieve this it makes the assumption that all\n+     * weeks are 7 days, all days are 24 hours, all hours are 60 minutes and\n+     * all minutes are 60 seconds. This is not true when daylight savings time\n+     * is considered, and may also not be true for some unusual chronologies.\n+     * However, it is included as it is a useful operation for many\n+     * applications and business rules.\n+     * <p>\n+     * If the period contains years or months, an exception will be thrown.\n+     * \n+     * @return a period representing the number of standard weeks in this period\n+     * @throws IllegalStateException if the period contains years or months\n+     * @throws ArithmeticException if the number of weeks is too large to be represented\n+     * @since 1.5\n+     */\n+    public Weeks toStandardWeeks() {\n+        checkYearsAndMonths(\"Weeks\");\n+        long millis = getMillis();  // assign to a long\n+        millis += ((long) getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND;\n+        millis += ((long) getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE;\n+        millis += ((long) getHours()) * DateTimeConstants.MILLIS_PER_HOUR;\n+        millis += ((long) getDays()) * DateTimeConstants.MILLIS_PER_DAY;\n+        long weeks = ((long) getWeeks()) + millis / DateTimeConstants.MILLIS_PER_WEEK;\n+        return Weeks.weeks(FieldUtils.safeToInt(weeks));\n+    }\n+\n+    /**\n+     * Converts this period to a period in days assuming a\n+     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n+     * <p>\n+     * This method allows you to convert between different types of period.\n+     * However to achieve this it makes the assumption that all\n+     * weeks are 7 days, all days are 24 hours, all hours are 60 minutes and\n+     * all minutes are 60 seconds. This is not true when daylight savings time\n+     * is considered, and may also not be true for some unusual chronologies.\n+     * However, it is included as it is a useful operation for many\n+     * applications and business rules.\n+     * <p>\n+     * If the period contains years or months, an exception will be thrown.\n+     * \n+     * @return a period representing the number of standard days in this period\n+     * @throws IllegalStateException if the period contains years or months\n+     * @throws ArithmeticException if the number of days is too large to be represented\n+     * @since 1.5\n+     */\n+    public Days toStandardDays() {\n+        checkYearsAndMonths(\"Days\");\n+        long millis = getMillis();  // assign to a long\n+        millis += ((long) getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND;\n+        millis += ((long) getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE;\n+        millis += ((long) getHours()) * DateTimeConstants.MILLIS_PER_HOUR;\n+        long days = millis / DateTimeConstants.MILLIS_PER_DAY;\n+        days = FieldUtils.safeAdd(days, getDays());\n+        days = FieldUtils.safeAdd(days, ((long) getWeeks()) * ((long) DateTimeConstants.DAYS_PER_WEEK));\n+        return Days.days(FieldUtils.safeToInt(days));\n+    }\n+\n+    /**\n+     * Converts this period to a period in hours assuming a\n+     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n+     * <p>\n+     * This method allows you to convert between different types of period.\n+     * However to achieve this it makes the assumption that all\n+     * weeks are 7 days, all days are 24 hours, all hours are 60 minutes and\n+     * all minutes are 60 seconds. This is not true when daylight savings time\n+     * is considered, and may also not be true for some unusual chronologies.\n+     * However, it is included as it is a useful operation for many\n+     * applications and business rules.\n+     * <p>\n+     * If the period contains years or months, an exception will be thrown.\n+     * \n+     * @return a period representing the number of standard hours in this period\n+     * @throws IllegalStateException if the period contains years or months\n+     * @throws ArithmeticException if the number of hours is too large to be represented\n+     * @since 1.5\n+     */\n+    public Hours toStandardHours() {\n+        checkYearsAndMonths(\"Hours\");\n+        long millis = getMillis();  // assign to a long\n+        millis += ((long) getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND;\n+        millis += ((long) getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE;\n+        long hours = millis / DateTimeConstants.MILLIS_PER_HOUR;\n+        hours = FieldUtils.safeAdd(hours, getHours());\n+        hours = FieldUtils.safeAdd(hours, ((long) getDays()) * ((long) DateTimeConstants.HOURS_PER_DAY));\n+        hours = FieldUtils.safeAdd(hours, ((long) getWeeks()) * ((long) DateTimeConstants.HOURS_PER_WEEK));\n+        return Hours.hours(FieldUtils.safeToInt(hours));\n+    }\n+\n+    /**\n+     * Converts this period to a period in minutes assuming a\n+     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n+     * <p>\n+     * This method allows you to convert between different types of period.\n+     * However to achieve this it makes the assumption that all\n+     * weeks are 7 days, all days are 24 hours, all hours are 60 minutes and\n+     * all minutes are 60 seconds. This is not true when daylight savings time\n+     * is considered, and may also not be true for some unusual chronologies.\n+     * However, it is included as it is a useful operation for many\n+     * applications and business rules.\n+     * <p>\n+     * If the period contains years or months, an exception will be thrown.\n+     * \n+     * @return a period representing the number of standard minutes in this period\n+     * @throws IllegalStateException if the period contains years or months\n+     * @throws ArithmeticException if the number of minutes is too large to be represented\n+     * @since 1.5\n+     */\n+    public Minutes toStandardMinutes() {\n+        checkYearsAndMonths(\"Minutes\");\n+        long millis = getMillis();  // assign to a long\n+        millis += ((long) getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND;\n+        long minutes = millis / DateTimeConstants.MILLIS_PER_MINUTE;\n+        minutes = FieldUtils.safeAdd(minutes, getMinutes());\n+        minutes = FieldUtils.safeAdd(minutes, ((long) getHours()) * ((long) DateTimeConstants.MINUTES_PER_HOUR));\n+        minutes = FieldUtils.safeAdd(minutes, ((long) getDays()) * ((long) DateTimeConstants.MINUTES_PER_DAY));\n+        minutes = FieldUtils.safeAdd(minutes, ((long) getWeeks()) * ((long) DateTimeConstants.MINUTES_PER_WEEK));\n+        return Minutes.minutes(FieldUtils.safeToInt(minutes));\n+    }\n+\n+    /**\n+     * Converts this period to a period in seconds assuming a\n+     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n+     * <p>\n+     * This method allows you to convert between different types of period.\n+     * However to achieve this it makes the assumption that all\n+     * weeks are 7 days, all days are 24 hours, all hours are 60 minutes and\n+     * all minutes are 60 seconds. This is not true when daylight savings time\n+     * is considered, and may also not be true for some unusual chronologies.\n+     * However, it is included as it is a useful operation for many\n+     * applications and business rules.\n+     * <p>\n+     * If the period contains years or months, an exception will be thrown.\n+     * \n+     * @return a period representing the number of standard seconds in this period\n+     * @throws IllegalStateException if the period contains years or months\n+     * @throws ArithmeticException if the number of seconds is too large to be represented\n+     * @since 1.5\n+     */\n+    public Seconds toStandardSeconds() {\n+        checkYearsAndMonths(\"Seconds\");\n+        long seconds = getMillis() / DateTimeConstants.MILLIS_PER_SECOND;\n+        seconds = FieldUtils.safeAdd(seconds, getSeconds());\n+        seconds = FieldUtils.safeAdd(seconds, ((long) getMinutes()) * ((long) DateTimeConstants.SECONDS_PER_MINUTE));\n+        seconds = FieldUtils.safeAdd(seconds, ((long) getHours()) * ((long) DateTimeConstants.SECONDS_PER_HOUR));\n+        seconds = FieldUtils.safeAdd(seconds, ((long) getDays()) * ((long) DateTimeConstants.SECONDS_PER_DAY));\n+        seconds = FieldUtils.safeAdd(seconds, ((long) getWeeks()) * ((long) DateTimeConstants.SECONDS_PER_WEEK));\n+        return Seconds.seconds(FieldUtils.safeToInt(seconds));\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Converts this period to a duration assuming a\n+     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n+     * <p>\n+     * This method allows you to convert from a period to a duration.\n+     * However to achieve this it makes the assumption that all\n+     * weeks are 7 days, all days are 24 hours, all hours are 60 minutes and\n+     * all minutes are 60 seconds. This is not true when daylight savings time\n+     * is considered, and may also not be true for some unusual chronologies.\n+     * However, it is included as it is a useful operation for many\n+     * applications and business rules.\n+     * <p>\n+     * If the period contains years or months, an exception will be thrown.\n+     * \n+     * @return a duration equivalent to this period\n+     * @throws IllegalStateException if the period contains years or months\n+     * @since 1.5\n+     */\n+    public Duration toStandardDuration() {\n+        checkYearsAndMonths(\"Duration\");\n+        long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs\n+        millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));\n+        millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));\n+        millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));\n+        millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));\n+        millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));\n+        return new Duration(millis);\n+    }\n+\n+    /**\n+     * Check that there are no years or months in the period.\n+     * \n+     * @param destintionType  the destination type, not null\n+     */\n+    private void checkYearsAndMonths(String destintionType) {\n+        if (getMonths() != 0) {\n+            throw new IllegalStateException(\"Cannot convert to \" + destintionType + \" as this period contains months and months vary in length\");\n+        }\n+        if (getYears() != 0) {\n+            throw new IllegalStateException(\"Cannot convert to \" + destintionType + \" as this period contains years and years vary in length\");\n+        }\n+    }\n+\n }\ndiff --git a/JodaTime/src/test/org/joda/time/TestPeriod_Basics.java b/JodaTime/src/test/org/joda/time/TestPeriod_Basics.java\nindex 29b376bf..154a06fd 100644\n--- a/JodaTime/src/test/org/joda/time/TestPeriod_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestPeriod_Basics.java\n@@ -19,6 +19,7 @@ import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n+import java.math.BigInteger;\n import java.util.Arrays;\n import java.util.Locale;\n import java.util.TimeZone;\n@@ -39,7 +40,7 @@ public class TestPeriod_Basics extends TestCase {\n     // Test in 2002/03 as time zones are more well known\n     // (before the late 90's they were all over the place)\n \n-    private static final DateTimeZone PARIS = DateTimeZone.forID(\"Europe/Paris\");\n+    //private static final DateTimeZone PARIS = DateTimeZone.forID(\"Europe/Paris\");\n     private static final DateTimeZone LONDON = DateTimeZone.forID(\"Europe/London\");\n     \n     long y2002days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + \n@@ -786,4 +787,389 @@ public class TestPeriod_Basics extends TestCase {\n         } catch (IllegalArgumentException ex) {}\n     }\n \n+    //-----------------------------------------------------------------------\n+    public void testToStandardWeeks() {\n+        Period test = new Period(0, 0, 3, 4, 5, 6, 7, 8);\n+        assertEquals(3, test.toStandardWeeks().getWeeks());\n+        \n+        test = new Period(0, 0, 3, 7, 0, 0, 0, 0);\n+        assertEquals(4, test.toStandardWeeks().getWeeks());\n+        \n+        test = new Period(0, 0, 0, 6, 23, 59, 59, 1000);\n+        assertEquals(1, test.toStandardWeeks().getWeeks());\n+        \n+        test = new Period(0, 0, Integer.MAX_VALUE, 0, 0, 0, 0, 0);\n+        assertEquals(Integer.MAX_VALUE, test.toStandardWeeks().getWeeks());\n+        \n+        test = new Period(0, 0, 0, Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE);\n+        long intMax = Integer.MAX_VALUE;\n+        BigInteger expected = BigInteger.valueOf(intMax);\n+        expected = expected.add(BigInteger.valueOf(intMax * DateTimeConstants.MILLIS_PER_SECOND));\n+        expected = expected.add(BigInteger.valueOf(intMax * DateTimeConstants.MILLIS_PER_MINUTE));\n+        expected = expected.add(BigInteger.valueOf(intMax * DateTimeConstants.MILLIS_PER_HOUR));\n+        expected = expected.add(BigInteger.valueOf(intMax * DateTimeConstants.MILLIS_PER_DAY));\n+        expected = expected.divide(BigInteger.valueOf(DateTimeConstants.MILLIS_PER_WEEK));\n+        assertTrue(expected.compareTo(BigInteger.valueOf(Long.MAX_VALUE)) < 0);\n+        assertEquals(expected.longValue(), test.toStandardWeeks().getWeeks());\n+        \n+        test = new Period(0, 0, Integer.MAX_VALUE, 7, 0, 0, 0, 0);\n+        try {\n+            test.toStandardWeeks();\n+            fail();\n+        } catch (ArithmeticException ex) {}\n+    }\n+\n+    public void testToStandardWeeks_years() {\n+        Period test = Period.years(1);\n+        try {\n+            test.toStandardWeeks();\n+            fail();\n+        } catch (IllegalStateException ex) {}\n+        \n+        test = Period.years(-1);\n+        try {\n+            test.toStandardWeeks();\n+            fail();\n+        } catch (IllegalStateException ex) {}\n+        \n+        test = Period.years(0);\n+        assertEquals(0, test.toStandardWeeks().getWeeks());\n+    }\n+\n+    public void testToStandardWeeks_months() {\n+        Period test = Period.months(1);\n+        try {\n+            test.toStandardWeeks();\n+            fail();\n+        } catch (IllegalStateException ex) {}\n+        \n+        test = Period.months(-1);\n+        try {\n+            test.toStandardWeeks();\n+            fail();\n+        } catch (IllegalStateException ex) {}\n+        \n+        test = Period.months(0);\n+        assertEquals(0, test.toStandardWeeks().getWeeks());\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testToStandardDays() {\n+        Period test = new Period(0, 0, 0, 4, 5, 6, 7, 8);\n+        assertEquals(4, test.toStandardDays().getDays());\n+        \n+        test = new Period(0, 0, 1, 4, 0, 0, 0, 0);\n+        assertEquals(11, test.toStandardDays().getDays());\n+        \n+        test = new Period(0, 0, 0, 0, 23, 59, 59, 1000);\n+        assertEquals(1, test.toStandardDays().getDays());\n+        \n+        test = new Period(0, 0, 0, Integer.MAX_VALUE, 0, 0, 0, 0);\n+        assertEquals(Integer.MAX_VALUE, test.toStandardDays().getDays());\n+        \n+        test = new Period(0, 0, 0, 0, Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE);\n+        long intMax = Integer.MAX_VALUE;\n+        BigInteger expected = BigInteger.valueOf(intMax);\n+        expected = expected.add(BigInteger.valueOf(intMax * DateTimeConstants.MILLIS_PER_SECOND));\n+        expected = expected.add(BigInteger.valueOf(intMax * DateTimeConstants.MILLIS_PER_MINUTE));\n+        expected = expected.add(BigInteger.valueOf(intMax * DateTimeConstants.MILLIS_PER_HOUR));\n+        expected = expected.divide(BigInteger.valueOf(DateTimeConstants.MILLIS_PER_DAY));\n+        assertTrue(expected.compareTo(BigInteger.valueOf(Long.MAX_VALUE)) < 0);\n+        assertEquals(expected.longValue(), test.toStandardDays().getDays());\n+        \n+        test = new Period(0, 0, 0, Integer.MAX_VALUE, 24, 0, 0, 0);\n+        try {\n+            test.toStandardDays();\n+            fail();\n+        } catch (ArithmeticException ex) {}\n+    }\n+\n+    public void testToStandardDays_years() {\n+        Period test = Period.years(1);\n+        try {\n+            test.toStandardDays();\n+            fail();\n+        } catch (IllegalStateException ex) {}\n+        \n+        test = Period.years(-1);\n+        try {\n+            test.toStandardDays();\n+            fail();\n+        } catch (IllegalStateException ex) {}\n+        \n+        test = Period.years(0);\n+        assertEquals(0, test.toStandardDays().getDays());\n+    }\n+\n+    public void testToStandardDays_months() {\n+        Period test = Period.months(1);\n+        try {\n+            test.toStandardDays();\n+            fail();\n+        } catch (IllegalStateException ex) {}\n+        \n+        test = Period.months(-1);\n+        try {\n+            test.toStandardDays();\n+            fail();\n+        } catch (IllegalStateException ex) {}\n+        \n+        test = Period.months(0);\n+        assertEquals(0, test.toStandardDays().getDays());\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testToStandardHours() {\n+        Period test = new Period(0, 0, 0, 0, 5, 6, 7, 8);\n+        assertEquals(5, test.toStandardHours().getHours());\n+        \n+        test = new Period(0, 0, 0, 1, 5, 0, 0, 0);\n+        assertEquals(29, test.toStandardHours().getHours());\n+        \n+        test = new Period(0, 0, 0, 0, 0, 59, 59, 1000);\n+        assertEquals(1, test.toStandardHours().getHours());\n+        \n+        test = new Period(0, 0, 0, 0, Integer.MAX_VALUE, 0, 0, 0);\n+        assertEquals(Integer.MAX_VALUE, test.toStandardHours().getHours());\n+        \n+        test = new Period(0, 0, 0, 0, 0, Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE);\n+        long intMax = Integer.MAX_VALUE;\n+        BigInteger expected = BigInteger.valueOf(intMax);\n+        expected = expected.add(BigInteger.valueOf(intMax * DateTimeConstants.MILLIS_PER_SECOND));\n+        expected = expected.add(BigInteger.valueOf(intMax * DateTimeConstants.MILLIS_PER_MINUTE));\n+        expected = expected.divide(BigInteger.valueOf(DateTimeConstants.MILLIS_PER_HOUR));\n+        assertTrue(expected.compareTo(BigInteger.valueOf(Long.MAX_VALUE)) < 0);\n+        assertEquals(expected.longValue(), test.toStandardHours().getHours());\n+        \n+        test = new Period(0, 0, 0, 0, Integer.MAX_VALUE, 60, 0, 0);\n+        try {\n+            test.toStandardHours();\n+            fail();\n+        } catch (ArithmeticException ex) {}\n+    }\n+\n+    public void testToStandardHours_years() {\n+        Period test = Period.years(1);\n+        try {\n+            test.toStandardHours();\n+            fail();\n+        } catch (IllegalStateException ex) {}\n+        \n+        test = Period.years(-1);\n+        try {\n+            test.toStandardHours();\n+            fail();\n+        } catch (IllegalStateException ex) {}\n+        \n+        test = Period.years(0);\n+        assertEquals(0, test.toStandardHours().getHours());\n+    }\n+\n+    public void testToStandardHours_months() {\n+        Period test = Period.months(1);\n+        try {\n+            test.toStandardHours();\n+            fail();\n+        } catch (IllegalStateException ex) {}\n+        \n+        test = Period.months(-1);\n+        try {\n+   ",
    "Add WebSocket file template": "diff --git a/src/main/resources/META-INF/plugin.xml b/src/main/resources/META-INF/plugin.xml\nindex 1ca32334333..8c5422331e7 100644\n--- a/src/main/resources/META-INF/plugin.xml\n+++ b/src/main/resources/META-INF/plugin.xml\n@@ -131,6 +131,7 @@\n         <internalFileTemplate name=\"Ballerina Main\"/>\n         <internalFileTemplate name=\"Ballerina Service\"/>\n         <internalFileTemplate name=\"Ballerina Connector\"/>\n+        <internalFileTemplate name=\"Ballerina WebSocket\"/>\n \n         <defaultTemplatePropertiesProvider\n                 implementation=\"org.ballerinalang.plugins.idea.actions.BallerinaTemplatePropertiesProvider\"/>\ndiff --git a/src/main/resources/fileTemplates/internal/Ballerina WebSocket.bal.ft b/src/main/resources/fileTemplates/internal/Ballerina WebSocket.bal.ft\nnew file mode 100644\nindex 00000000000..63279e881fc\n--- /dev/null\n+++ b/src/main/resources/fileTemplates/internal/Ballerina WebSocket.bal.ft\t\n@@ -0,0 +1,60 @@\n+#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != \"\")\n+package ${PACKAGE_NAME};\n+#end\n+\n+import ballerina.net.ws;\n+\n+@Description {value:\"This example gives you the basic idea of WebSocket endpoint.\"}\n+@ws:configuration {\n+    basePath: \"/basic/ws\",\n+    subProtocols: [\"xml\", \"json\"],\n+    idleTimeoutInSeconds: 120,\n+    host: \"0.0.0.0\",\n+    port: 9090,\n+    wssPort: 9095,\n+    keyStoreFile: \"${ballerina.home}/bre/security/ballerinaKeystore.p12\",\n+    keyStorePassword: \"ballerina\",\n+    certPassword: \"ballerina\"\n+}\n+service<ws> SimpleSecureServer {\n+\n+    @Description {value:\"This resource is responsible for handling user logic on handshake time. Note that the connection is not yet established while this code is running.\"}\n+    resource onHandshake(ws:HandshakeConnection conn) {\n+\n+    }\n+\n+    @Description {value:\"This resource is triggered after a successful client connection.\"}\n+    resource onOpen(ws:Connection conn) {\n+\n+    }\n+\n+    @Description {value:\"This resource is triggered when a new text frame is received from a client.\"}\n+    resource onTextMessage (ws:Connection conn, ws:TextFrame frame) {\n+\n+    }\n+\n+    @Description {value:\"This resource is triggered when a new binary frame is received from a client.\"}\n+    resource onBinaryMessage(ws:Connection conn, ws:BinaryFrame frame) {\n+\n+    }\n+\n+    @Description {value:\"This resource is triggered when a ping message is received from the client.\"}\n+    resource onPing(ws:Connection conn, ws:PingFrame frame) {\n+\n+    }\n+\n+    @Description {value:\"This resource is triggered when a pong message is received\"}\n+    resource onPong(ws:Connection conn, ws:PongFrame frame) {\n+\n+    }\n+\n+    @Description {value:\"This resource is triggered when a particular client reaches it's idle timeout defined in the ws:configuration annotation.\"}\n+    resource onIdleTimeout(ws:Connection conn) {\n+\n+    }\n+\n+    @Description {value:\"This resource is triggered when a client connection is closed from the client side.\"}\n+    resource onClose(ws:Connection conn, ws:CloseFrame closeFrame) {\n+\n+    }\n+}\ndiff --git a/src/main/resources/fileTemplates/internal/Ballerina WebSocket.bal.html b/src/main/resources/fileTemplates/internal/Ballerina WebSocket.bal.html\nnew file mode 100644\nindex 00000000000..49ce934626f\n--- /dev/null\n+++ b/src/main/resources/fileTemplates/internal/Ballerina WebSocket.bal.html\t\n@@ -0,0 +1,21 @@\n+<!--\n+  ~  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~  you may not use this file except in compliance with the License.\n+  ~  You may obtain a copy of the License at\n+  ~\n+  ~  http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing, software\n+  ~  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~  See the License for the specific language governing permissions and\n+  ~  limitations under the License.\n+  -->\n+\n+<html>\n+    <body>\n+        This is Ballerina websocket file template.\n+    </body>\n+</html>",
    "Add script for inspection ZooKeeper transaction log": "diff --git a/zookeeper-command-line-client/src/main/sh/vespa-zktxnlog b/zookeeper-command-line-client/src/main/sh/vespa-zktxnlog\nnew file mode 100755\nindex 00000000000..3a626524836\n--- /dev/null\n+++ b/zookeeper-command-line-client/src/main/sh/vespa-zktxnlog\n@@ -0,0 +1,78 @@\n+#!/bin/sh\n+# Copyright 2019 Oath Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+# BEGIN environment bootstrap section\n+# Do not edit between here and END as this section should stay identical in all scripts\n+\n+findpath () {\n+    myname=${0}\n+    mypath=${myname%/*}\n+    myname=${myname##*/}\n+    empty_if_start_slash=${mypath%%/*}\n+    if [ \"${empty_if_start_slash}\" ]; then\n+        mypath=$(pwd)/${mypath}\n+    fi\n+    if [ \"$mypath\" ] && [ -d \"$mypath\" ]; then\n+        return\n+    fi\n+    mypath=$(pwd)\n+    if [ -f \"${mypath}/${myname}\" ]; then\n+        return\n+    fi\n+    echo \"FATAL: Could not figure out the path where $myname lives from $0\"\n+    exit 1\n+}\n+\n+COMMON_ENV=libexec/vespa/common-env.sh\n+\n+source_common_env () {\n+    if [ \"$VESPA_HOME\" ] && [ -d \"$VESPA_HOME\" ]; then\n+        export VESPA_HOME\n+        common_env=$VESPA_HOME/$COMMON_ENV\n+        if [ -f \"$common_env\" ]; then\n+            . $common_env\n+            return\n+        fi\n+    fi\n+    return 1\n+}\n+\n+findroot () {\n+    source_common_env && return\n+    if [ \"$VESPA_HOME\" ]; then\n+        echo \"FATAL: bad VESPA_HOME value '$VESPA_HOME'\"\n+        exit 1\n+    fi\n+    if [ \"$ROOT\" ] && [ -d \"$ROOT\" ]; then\n+        VESPA_HOME=\"$ROOT\"\n+        source_common_env && return\n+    fi\n+    findpath\n+    while [ \"$mypath\" ]; do\n+        VESPA_HOME=${mypath}\n+        source_common_env && return\n+        mypath=${mypath%/*}\n+    done\n+    echo \"FATAL: missing VESPA_HOME environment variable\"\n+    echo \"Could not locate $COMMON_ENV anywhere\"\n+    exit 1\n+}\n+\n+findhost () {\n+    if [ \"${VESPA_HOSTNAME}\" = \"\" ]; then\n+        VESPA_HOSTNAME=$(vespa-detect-hostname || hostname -f || hostname || echo \"localhost\") || exit 1\n+    fi\n+    validate=\"${VESPA_HOME}/bin/vespa-validate-hostname\"\n+    if [ -f \"$validate\" ]; then\n+        \"$validate\" \"${VESPA_HOSTNAME}\" || exit 1\n+    fi\n+    export VESPA_HOSTNAME\n+}\n+\n+findroot\n+findhost\n+\n+# END environment bootstrap section\n+\n+java -cp $VESPA_HOME/lib/jars/zookeeper-command-line-client-jar-with-dependencies.jar \\\n+     org.apache.zookeeper.server.persistence.TxnLogToolkit \"$@\"",
    "add getStrips ( )": "diff --git a/android/src/edu/sfsu/cs/orange/ocr/CaptureActivity.java b/android/src/edu/sfsu/cs/orange/ocr/CaptureActivity.java\nindex 72a1ac6..c812514 100644\n--- a/android/src/edu/sfsu/cs/orange/ocr/CaptureActivity.java\n+++ b/android/src/edu/sfsu/cs/orange/ocr/CaptureActivity.java\n@@ -801,10 +801,11 @@ public final class CaptureActivity extends Activity implements SurfaceHolder.Cal\n                                                    ocrResult.getWordConfidences(),\n                                                    ocrResult.getMeanConfidence(),\n                                                    ocrResult.getBitmapDimensions(),\n-                                                   ocrResult.getCharacterBoundingBoxes(),\n-                                                   ocrResult.getWordBoundingBoxes(),\n+                                                   ocrResult.getRegionBoundingBoxes(),\n                                                    ocrResult.getTextlineBoundingBoxes(),\n-                                                   ocrResult.getRegionBoundingBoxes()));\n+                                                   ocrResult.getStripBoundingBoxes(),\n+                                                   ocrResult.getWordBoundingBoxes(),\n+                                                   ocrResult.getCharacterBoundingBoxes()));\n \n     Integer meanConfidence = ocrResult.getMeanConfidence();\n     \ndiff --git a/android/src/edu/sfsu/cs/orange/ocr/DecodeHandler.java b/android/src/edu/sfsu/cs/orange/ocr/DecodeHandler.java\nindex deb71f7..db4b08d 100644\n--- a/android/src/edu/sfsu/cs/orange/ocr/DecodeHandler.java\n+++ b/android/src/edu/sfsu/cs/orange/ocr/DecodeHandler.java\n@@ -138,7 +138,8 @@ final class DecodeHandler extends Handler {\n     }\n   }\n \n-  private OcrResult getOcrResult() {\n+  @SuppressWarnings(\"unused\")\n+\tprivate OcrResult getOcrResult() {\n     OcrResult ocrResult;\n     String textResult;\n     long start = System.currentTimeMillis();\n@@ -155,10 +156,24 @@ final class DecodeHandler extends Handler {\n       ocrResult = new OcrResult();\n       ocrResult.setWordConfidences(baseApi.wordConfidences());\n       ocrResult.setMeanConfidence( baseApi.meanConfidence());\n-      ocrResult.setRegionBoundingBoxes(baseApi.getRegions().getBoxRects());\n-      ocrResult.setTextlineBoundingBoxes(baseApi.getTextlines().getBoxRects());\n+      if (ViewfinderView.DRAW_REGION_BOXES) {\n+        ocrResult.setRegionBoundingBoxes(baseApi.getRegions().getBoxRects());\n+      }\n+      if (ViewfinderView.DRAW_TEXTLINE_BOXES) {\n+        ocrResult.setTextlineBoundingBoxes(baseApi.getTextlines().getBoxRects());\n+      }\n+      if (ViewfinderView.DRAW_STRIP_BOXES) {\n+        ocrResult.setStripBoundingBoxes(baseApi.getStrips().getBoxRects());\n+      }\n+      \n+      // Always get the word bounding boxes--we want it for annotating the bitmap after the user\n+      // presses the shutter button, in addition to maybe wanting to draw boxes/words during the\n+      // continuous mode recognition.\n       ocrResult.setWordBoundingBoxes(baseApi.getWords().getBoxRects());\n-      ocrResult.setCharacterBoundingBoxes(baseApi.getCharacters().getBoxRects());\n+      \n+      if (ViewfinderView.DRAW_CHARACTER_BOXES || ViewfinderView.DRAW_CHARACTER_TEXT) {\n+        ocrResult.setCharacterBoundingBoxes(baseApi.getCharacters().getBoxRects());\n+      }\n     } catch (RuntimeException e) {\n       Log.e(\"OcrRecognizeAsyncTask\", \"Caught RuntimeException in request to Tesseract. Setting state to CONTINUOUS_STOPPED.\");\n       e.printStackTrace();\ndiff --git a/android/src/edu/sfsu/cs/orange/ocr/OcrRecognizeAsyncTask.java b/android/src/edu/sfsu/cs/orange/ocr/OcrRecognizeAsyncTask.java\nindex 2e14cf5..6ce051b 100644\n--- a/android/src/edu/sfsu/cs/orange/ocr/OcrRecognizeAsyncTask.java\n+++ b/android/src/edu/sfsu/cs/orange/ocr/OcrRecognizeAsyncTask.java\n@@ -87,6 +87,7 @@ final class OcrRecognizeAsyncTask extends AsyncTask<Void, Void, Boolean> {\n       ocrResult.setRegionBoundingBoxes(baseApi.getRegions().getBoxRects());\n       ocrResult.setTextlineBoundingBoxes(baseApi.getTextlines().getBoxRects());\n       ocrResult.setWordBoundingBoxes(baseApi.getWords().getBoxRects());\n+      ocrResult.setStripBoundingBoxes(baseApi.getStrips().getBoxRects());\n       ocrResult.setCharacterBoundingBoxes(baseApi.getCharacters().getBoxRects());\n     } catch (RuntimeException e) {\n       Log.e(\"OcrRecognizeAsyncTask\", \"Caught RuntimeException in request to Tesseract. Setting state to CONTINUOUS_STOPPED.\");\ndiff --git a/android/src/edu/sfsu/cs/orange/ocr/OcrResult.java b/android/src/edu/sfsu/cs/orange/ocr/OcrResult.java\nindex e7a467f..eec2d1a 100644\n--- a/android/src/edu/sfsu/cs/orange/ocr/OcrResult.java\n+++ b/android/src/edu/sfsu/cs/orange/ocr/OcrResult.java\n@@ -33,12 +33,13 @@ public class OcrResult {\n   \n   private int[] wordConfidences;\n   private int meanConfidence;\n-  \n+\n+  private List<Rect> regionBoundingBoxes;\n+  private List<Rect> textlineBoundingBoxes;\n   private List<Rect> wordBoundingBoxes;\n+  private List<Rect> stripBoundingBoxes;  \n   private List<Rect> characterBoundingBoxes;\n-  private List<Rect> textlineBoundingBoxes;\n-  private List<Rect> regionBoundingBoxes;\n-  \n+\n   private long timestamp;\n   private long recognitionTimeRequired;\n \n@@ -48,19 +49,21 @@ public class OcrResult {\n                    String text,\n                    int[] wordConfidences,\n                    int meanConfidence,\n-                   List<Rect> characterBoundingBoxes,\n+                   List<Rect> regionBoundingBoxes,\n                    List<Rect> textlineBoundingBoxes,\n                    List<Rect> wordBoundingBoxes,\n-                   List<Rect> regionBoxes, \n+                   List<Rect> stripBoundingBoxes,\n+                   List<Rect> characterBoundingBoxes,\n                    long recognitionTimeRequired) {\n     this.bitmap = bitmap;\n     this.text = text;\n     this.wordConfidences = wordConfidences;\n     this.meanConfidence = meanConfidence;\n-    this.characterBoundingBoxes = characterBoundingBoxes;\n+    this.regionBoundingBoxes = regionBoundingBoxes;\n     this.textlineBoundingBoxes = textlineBoundingBoxes;\n     this.wordBoundingBoxes = wordBoundingBoxes;\n-    this.regionBoundingBoxes = regionBoxes;\n+    this.stripBoundingBoxes = stripBoundingBoxes;\n+    this.characterBoundingBoxes = characterBoundingBoxes;\n     this.recognitionTimeRequired = recognitionTimeRequired;\n     this.timestamp = System.currentTimeMillis();\n     \n@@ -73,11 +76,7 @@ public class OcrResult {\n   }\n \n   public Bitmap getBitmap() {\n-    if (characterBoundingBoxes.isEmpty()) {\n-      return bitmap;\n-    } else {\n-      return getAnnotatedBitmap();\n-    }\n+    return getAnnotatedBitmap();\n   }\n   \n   private Bitmap getAnnotatedBitmap() {\n@@ -85,10 +84,10 @@ public class OcrResult {\n     \n     // Draw bounding boxes around each word\n     for (int i = 0; i < wordBoundingBoxes.size(); i++) {\n-      paint.setAlpha(0xA0);\n+      paint.setAlpha(0xFF);\n       paint.setColor(0xFF00CCFF);\n       paint.setStyle(Style.STROKE);\n-      paint.setStrokeWidth(3);\n+      paint.setStrokeWidth(2);\n       Rect r = wordBoundingBoxes.get(i);\n       canvas.drawRect(r, paint);\n     }    \n@@ -126,8 +125,8 @@ public class OcrResult {\n     return new Point(bitmap.getWidth(), bitmap.getHeight()); \n   }\n   \n-  public List<Rect> getCharacterBoundingBoxes() {\n-    return characterBoundingBoxes;\n+  public List<Rect> getRegionBoundingBoxes() {\n+    return regionBoundingBoxes;\n   }\n   \n   public List<Rect> getTextlineBoundingBoxes() {\n@@ -138,8 +137,12 @@ public class OcrResult {\n     return wordBoundingBoxes;\n   }\n   \n-  public List<Rect> getRegionBoundingBoxes() {\n-    return regionBoundingBoxes;\n+  public List<Rect> getStripBoundingBoxes() {\n+  \treturn stripBoundingBoxes;\n+  }\n+  \n+  public List<Rect> getCharacterBoundingBoxes() {\n+    return characterBoundingBoxes;\n   }\n   \n   public long getTimestamp() {\n@@ -166,20 +169,24 @@ public class OcrResult {\n     this.recognitionTimeRequired = recognitionTimeRequired;\n   }\n   \n-  public void setCharacterBoundingBoxes(List<Rect> characterBoundingBoxes) {\n-    this.characterBoundingBoxes = characterBoundingBoxes;\n+  public void setRegionBoundingBoxes(List<Rect> regionBoundingBoxes) {\n+    this.regionBoundingBoxes = regionBoundingBoxes;\n   }\n   \n   public void setTextlineBoundingBoxes(List<Rect> textlineBoundingBoxes) {\n     this.textlineBoundingBoxes = textlineBoundingBoxes;\n   }\n-  \n+\n   public void setWordBoundingBoxes(List<Rect> wordBoundingBoxes) {\n     this.wordBoundingBoxes = wordBoundingBoxes;\n   }\n   \n-  public void setRegionBoundingBoxes(List<Rect> regionBoundingBoxes) {\n-    this.regionBoundingBoxes = regionBoundingBoxes;\n+  public void setStripBoundingBoxes(List<Rect> stripBoundingBoxes) {\n+  \tthis.stripBoundingBoxes = stripBoundingBoxes;\n+  }\n+\n+  public void setCharacterBoundingBoxes(List<Rect> characterBoundingBoxes) {\n+    this.characterBoundingBoxes = characterBoundingBoxes;\n   }\n   \n   @Override\ndiff --git a/android/src/edu/sfsu/cs/orange/ocr/OcrResultText.java b/android/src/edu/sfsu/cs/orange/ocr/OcrResultText.java\nindex f94df40..f3e95e3 100644\n--- a/android/src/edu/sfsu/cs/orange/ocr/OcrResultText.java\n+++ b/android/src/edu/sfsu/cs/orange/ocr/OcrResultText.java\n@@ -29,27 +29,30 @@ public final class OcrResultText {\n   private final int[] wordConfidences;\n   private final int meanConfidence;\n   private final Point bitmapDimensions;\n+  private final List<Rect> regionBoundingBoxes;\n+  private final List<Rect> textlineBoundingBoxes;\n+  private final List<Rect> stripBoundingBoxes;\n   private final List<Rect> wordBoundingBoxes;\n   private final List<Rect> characterBoundingBoxes;\n-  private final List<Rect> textlineBoundingBoxes;\n-  private final List<Rect> regionBoundingBoxes;\n   \n   public OcrResultText(String text,\n                    int[] wordConfidences,\n                    int meanConfidence,\n                    Point bitmapDimensions,\n-                   List<Rect> characterBoundingBoxes,\n-                   List<Rect> wordBoundingBoxes,\n+                   List<Rect> regionBoundingBoxes,\n                    List<Rect> textlineBoundingBoxes,\n-                   List<Rect> regionBoundingBoxes) {\n+                   List<Rect> stripBoundingBoxes,\n+                   List<Rect> wordBoundingBoxes,\n+                   List<Rect> characterBoundingBoxes) {\n     this.text = text;\n     this.wordConfidences = wordConfidences;\n     this.meanConfidence = meanConfidence;\n     this.bitmapDimensions = bitmapDimensions;\n-    this.characterBoundingBoxes = characterBoundingBoxes;\n-    this.wordBoundingBoxes = wordBoundingBoxes;\n-    this.textlineBoundingBoxes = textlineBoundingBoxes;\n     this.regionBoundingBoxes = regionBoundingBoxes;\n+    this.textlineBoundingBoxes = textlineBoundingBoxes;\n+    this.stripBoundingBoxes = stripBoundingBoxes;\n+    this.wordBoundingBoxes = wordBoundingBoxes;\n+    this.characterBoundingBoxes = characterBoundingBoxes;\n   }\n \n   public String getText() {\n@@ -67,21 +70,25 @@ public final class OcrResultText {\n   public int getMeanConfidence() {\n     return meanConfidence;\n   }\n-\n-  public List<Rect> getCharacterBoundingBoxes() {\n-    return characterBoundingBoxes;\n+  \n+  public List<Rect> getRegionBoundingBoxes() {\n+    return regionBoundingBoxes;\n   }\n   \n   public List<Rect> getTextlineBoundingBoxes() {\n     return textlineBoundingBoxes;\n   }\n   \n+  public List<Rect> getStripBoundingBoxes() {\n+  \treturn stripBoundingBoxes;\n+  }\n+  \n   public List<Rect> getWordBoundingBoxes() {\n     return wordBoundingBoxes;\n   }\n   \n-  public List<Rect> getRegionBoundingBoxes() {\n-    return regionBoundingBoxes;\n+  public List<Rect> getCharacterBoundingBoxes() {\n+    return characterBoundingBoxes;\n   }\n   \n   @Override\ndiff --git a/android/src/edu/sfsu/cs/orange/ocr/ViewfinderView.java b/android/src/edu/sfsu/cs/orange/ocr/ViewfinderView.java\nindex 8f09f70..3897321 100644\n--- a/android/src/edu/sfsu/cs/orange/ocr/ViewfinderView.java\n+++ b/android/src/edu/sfsu/cs/orange/ocr/ViewfinderView.java\n@@ -43,25 +43,28 @@ public final class ViewfinderView extends View {\n   //private static final long ANIMATION_DELAY = 80L;\n \n   /** Flag to draw boxes representing the results from TessBaseAPI::GetRegions(). */\n-  private static final boolean DRAW_REGION_BOXES = false;\n+  static final boolean DRAW_REGION_BOXES = false;\n \n   /** Flag to draw boxes representing the results from TessBaseAPI::GetTextlines(). */\n-  private static final boolean DRAW_TEXTLINE_BOXES = true;\n+  static final boolean DRAW_TEXTLINE_BOXES = true;\n+\n+  /** Flag to draw boxes representing the results from TessBaseAPI::GetStrips(). */\n+  static final boolean DRAW_STRIP_BOXES = false;\n \n   /** Flag to draw boxes representing the results from TessBaseAPI::GetWords(). */\n-  private static final boolean DRAW_WORD_BOXES = true;\n+  static final boolean DRAW_WORD_BOXES = true;\n \n   /** Flag to draw word text with a background varying from transparent to opaque. */\n-  private static final boolean DRAW_TRANSPARENT_WORD_BACKGROUNDS = false;\n+  static final boolean DRAW_TRANSPARENT_WORD_BACKGROUNDS = false;\n \n   /** Flag to draw boxes representing the results from TessBaseAPI::GetCharacters(). */\n-  private static final boolean DRAW_CHARACTER_BOXES = false;\n+  static final boolean DRAW_CHARACTER_BOXES = false;\n \n   /** Flag to draw the text of words within their respective boxes from TessBaseAPI::GetWords(). */\n-  private static final boolean DRAW_WORD_TEXT = false;\n+  static final boolean DRAW_WORD_TEXT = false;\n \n   /** Flag to draw each character in its respective box from TessBaseAPI::GetCharacters(). */\n-  private static final boolean DRAW_CHARACTER_TEXT = false;\n+  static final boolean DRAW_CHARACTER_TEXT = false;\n \n   private CameraManager cameraManager;\n   private final Paint paint;\n@@ -70,10 +73,11 @@ public final class ViewfinderView extends View {\n   private final int cornerColor;\n   private OcrResultText resultText;\n   private String[] words;\n+  private List<Rect> regionBoundingBoxes;\n+  private List<Rect> textlineBoundingBoxes;\n+  private List<Rect> stripBoundingBoxes;\n   private List<Rect> wordBoundingBoxes;\n   private List<Rect> characterBoundingBoxes;\n-  private List<Rect> textlineBoundingBoxes;\n-  private List<Rect> regionBoundingBoxes;\n   //  Rect bounds;\n   private Rect previewFrame;\n   private Rect rect;\n@@ -158,6 +162,21 @@ public final class ViewfinderView extends View {\n           }\n         }\n \n+        if (DRAW_STRIP_BOXES) {\n+          stripBoundingBoxes = resultText.getStripBoundingBoxes();\n+          paint.setAlpha(0xFF);\n+          paint.setColor(Color.YELLOW);\n+          paint.setStyle(Style.STROKE);\n+          paint.setStrokeWidth(1);\n+          for (int i = 0; i < stripBoundingBoxes.size(); i++) {\n+            rect = stripBoundingBoxes.get(i);\n+            canvas.drawRect(frame.left + rect.left * scaleX,\n+                frame.top + rect.top * scaleY, \n+                frame.left + rect.right * scaleX, \n+                frame.top + rect.bottom * scaleY, paint);\n+          }        \t\n+        }\n+\n         if (DRAW_WORD_BOXES || DRAW_WORD_TEXT) {\n           // Split the text into words\n           wordBoundingBoxes = resultText.getWordBoundingBoxes();\n@@ -168,6 +187,22 @@ public final class ViewfinderView extends View {\n           //Log.d(\"ViewfinderView\", \"There are \" + wordBoundingBoxes.size() + \" words with bounding boxes.\");\n         }\n \n+        if (DRAW_WORD_BOXES) {\n+          paint.setAlpha(0xFF);\n+          paint.setColor(0xFF00CCFF);\n+          paint.setStyle(Style.STROKE);\n+          paint.setStrokeWidth(1);\n+          for (int i = 0; i < wordBoundingBoxes.size(); i++) {\n+            // Draw a bounding box around the word\n+            rect = wordBoundingBoxes.get(i);\n+            canvas.drawRect(\n+                frame.left + rect.left * scaleX,\n+                frame.top + rect.top * scaleY, \n+                frame.left + rect.right * scaleX, \n+                frame.top + rect.bottom",
    "Improve Observable . takeUntil ( <issue_id> )": "diff --git a/src/main/java/io/reactivex/internal/operators/observable/ObservableTakeUntil.java b/src/main/java/io/reactivex/internal/operators/observable/ObservableTakeUntil.java\nindex 64639abc0..35e04300e 100644\n--- a/src/main/java/io/reactivex/internal/operators/observable/ObservableTakeUntil.java\n+++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableTakeUntil.java\n@@ -13,103 +13,120 @@\n \n package io.reactivex.internal.operators.observable;\n \n-import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.*;\n \n import io.reactivex.*;\n import io.reactivex.disposables.Disposable;\n-import io.reactivex.internal.disposables.*;\n-import io.reactivex.observers.SerializedObserver;\n+import io.reactivex.internal.disposables.DisposableHelper;\n+import io.reactivex.internal.util.*;\n \n public final class ObservableTakeUntil<T, U> extends AbstractObservableWithUpstream<T, T> {\n+\n     final ObservableSource<? extends U> other;\n+\n     public ObservableTakeUntil(ObservableSource<T> source, ObservableSource<? extends U> other) {\n         super(source);\n         this.other = other;\n     }\n     @Override\n     public void subscribeActual(Observer<? super T> child) {\n-        final SerializedObserver<T> serial = new SerializedObserver<T>(child);\n+        TakeUntilMainObserver<T, U> parent = new TakeUntilMainObserver<T, U>(child);\n+        child.onSubscribe(parent);\n \n-        final ArrayCompositeDisposable frc = new ArrayCompositeDisposable(2);\n+        other.subscribe(parent.otherObserver);\n+        source.subscribe(parent);\n+    }\n \n-        final TakeUntilObserver<T> tus = new TakeUntilObserver<T>(serial, frc);\n+    static final class TakeUntilMainObserver<T, U> extends AtomicInteger\n+    implements Observer<T>, Disposable {\n \n-        child.onSubscribe(frc);\n+        private static final long serialVersionUID = 1418547743690811973L;\n \n-        other.subscribe(new TakeUntil(frc, serial));\n+        final Observer<? super T> downstream;\n \n-        source.subscribe(tus);\n-    }\n+        final AtomicReference<Disposable> upstream;\n \n-    static final class TakeUntilObserver<T> extends AtomicBoolean implements Observer<T> {\n+        final OtherObserver otherObserver;\n \n-        private static final long serialVersionUID = 3451719290311127173L;\n-        final Observer<? super T> actual;\n-        final ArrayCompositeDisposable frc;\n+        final AtomicThrowable error;\n \n-        Disposable s;\n-\n-        TakeUntilObserver(Observer<? super T> actual, ArrayCompositeDisposable frc) {\n-            this.actual = actual;\n-            this.frc = frc;\n+        TakeUntilMainObserver(Observer<? super T> downstream) {\n+            this.downstream = downstream;\n+            this.upstream = new AtomicReference<Disposable>();\n+            this.otherObserver = new OtherObserver();\n+            this.error = new AtomicThrowable();\n         }\n \n         @Override\n-        public void onSubscribe(Disposable s) {\n-            if (DisposableHelper.validate(this.s, s)) {\n-                this.s = s;\n-                frc.setResource(0, s);\n-            }\n+        public void dispose() {\n+            DisposableHelper.dispose(upstream);\n+            DisposableHelper.dispose(otherObserver);\n         }\n \n         @Override\n-        public void onNext(T t) {\n-            actual.onNext(t);\n+        public boolean isDisposed() {\n+            return DisposableHelper.isDisposed(upstream.get());\n         }\n \n         @Override\n-        public void onError(Throwable t) {\n-            frc.dispose();\n-            actual.onError(t);\n+        public void onSubscribe(Disposable d) {\n+            DisposableHelper.setOnce(upstream, d);\n         }\n \n         @Override\n-        public void onComplete() {\n-            frc.dispose();\n-            actual.onComplete();\n+        public void onNext(T t) {\n+            HalfSerializer.onNext(downstream, t, this, error);\n         }\n-    }\n-\n-    final class TakeUntil implements Observer<U> {\n-        private final ArrayCompositeDisposable frc;\n-        private final SerializedObserver<T> serial;\n \n-        TakeUntil(ArrayCompositeDisposable frc, SerializedObserver<T> serial) {\n-            this.frc = frc;\n-            this.serial = serial;\n+        @Override\n+        public void onError(Throwable e) {\n+            DisposableHelper.dispose(otherObserver);\n+            HalfSerializer.onError(downstream, e, this, error);\n         }\n \n         @Override\n-        public void onSubscribe(Disposable s) {\n-            frc.setResource(1, s);\n+        public void onComplete() {\n+            DisposableHelper.dispose(otherObserver);\n+            HalfSerializer.onComplete(downstream, this, error);\n         }\n \n-        @Override\n-        public void onNext(U t) {\n-            frc.dispose();\n-            serial.onComplete();\n+        void otherError(Throwable e) {\n+            DisposableHelper.dispose(upstream);\n+            HalfSerializer.onError(downstream, e, this, error);\n         }\n \n-        @Override\n-        public void onError(Throwable t) {\n-            frc.dispose();\n-            serial.onError(t);\n+        void otherComplete() {\n+            DisposableHelper.dispose(upstream);\n+            HalfSerializer.onComplete(downstream, this, error);\n         }\n \n-        @Override\n-        public void onComplete() {\n-            frc.dispose();\n-            serial.onComplete();\n+        final class OtherObserver extends AtomicReference<Disposable>\n+        implements Observer<U> {\n+\n+            private static final long serialVersionUID = -8693423678067375039L;\n+\n+            @Override\n+            public void onSubscribe(Disposable d) {\n+                DisposableHelper.setOnce(this, d);\n+            }\n+\n+            @Override\n+            public void onNext(U t) {\n+                DisposableHelper.dispose(this);\n+                otherComplete();\n+            }\n+\n+            @Override\n+            public void onError(Throwable e) {\n+                otherError(e);\n+            }\n+\n+            @Override\n+            public void onComplete() {\n+                otherComplete();\n+            }\n+\n         }\n     }\n+\n }\ndiff --git a/src/test/java/io/reactivex/internal/operators/observable/ObservableTakeUntilTest.java b/src/test/java/io/reactivex/internal/operators/observable/ObservableTakeUntilTest.java\nindex d42e5df38..4251fcc10 100644\n--- a/src/test/java/io/reactivex/internal/operators/observable/ObservableTakeUntilTest.java\n+++ b/src/test/java/io/reactivex/internal/operators/observable/ObservableTakeUntilTest.java\n@@ -70,7 +70,7 @@ public class ObservableTakeUntilTest {\n \n         verify(result, times(1)).onNext(\"one\");\n         verify(result, times(1)).onNext(\"two\");\n-        verify(sSource, times(1)).dispose();\n+        verify(sSource, never()).dispose(); // no longer disposing itself on terminal events\n         verify(sOther, times(1)).dispose();\n \n     }\n@@ -95,7 +95,7 @@ public class ObservableTakeUntilTest {\n         verify(result, times(1)).onNext(\"two\");\n         verify(result, times(0)).onNext(\"three\");\n         verify(result, times(1)).onError(error);\n-        verify(sSource, times(1)).dispose();\n+        verify(sSource, never()).dispose(); // no longer disposing itself on terminal events\n         verify(sOther, times(1)).dispose();\n \n     }\n@@ -122,7 +122,7 @@ public class ObservableTakeUntilTest {\n         verify(result, times(1)).onError(error);\n         verify(result, times(0)).onComplete();\n         verify(sSource, times(1)).dispose();\n-        verify(sOther,",
    "Include java . lang . Lang from java . util . Util . .": "diff --git a/guava-gwt/src-super/java/util/Util.gwt.xml b/guava-gwt/src-super/java/util/Util.gwt.xml\nindex bd7134fce2..1968a1e606 100644\n--- a/guava-gwt/src-super/java/util/Util.gwt.xml\n+++ b/guava-gwt/src-super/java/util/Util.gwt.xml\n@@ -1 +1,6 @@\n-<module><super-source path=\"super\"/></module>\n\\ No newline at end of file\n+\n+<module>\n+ <super-source path=\"super\"/>\n+ <inherits name=\"java.lang.Lang\"/>\n+</module>\n+",
    "Added Google Analytics .": "diff --git a/build.xml b/build.xml\nindex c491f5ed..b64b8b23 100644\n--- a/build.xml\n+++ b/build.xml\n@@ -60,7 +60,7 @@\n \n   <target name=\"javadoc\">\n     <mkdir dir=\"docs/javadoc\"/>\n-    <javadoc destdir=\"docs/javadoc\">\n+    <javadoc destdir=\"docs/javadoc\" footer=\"&lt;script src=&quot;http://www.google-analytics.com/urchin.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;_uacct = &quot;UA-788492-4&quot;; urchinTracker();&lt;/script&gt;\">\n       <sourcepath>\n         <pathelement location=\"core/src\"/>\n         <pathelement location=\"core-ext/src\"/>",
    "add KEYWORD4 and KEYWORD5": "diff --git a/app/src/processing/app/syntax/Token.java b/app/src/processing/app/syntax/Token.java\nindex 28809fb9f..2ffad1ec2 100644\n--- a/app/src/processing/app/syntax/Token.java\n+++ b/app/src/processing/app/syntax/Token.java\n@@ -51,33 +51,35 @@ public class Token {\n         /** Processing variables (width, height, focused, etc.) */\n         public static final byte KEYWORD3 = 8;\n \n+        public static final byte KEYWORD4 = 9;\n+        \n+        public static final byte KEYWORD5 = 10;\n+\n         /** Functions */\n-        public static final byte FUNCTION1 = 9;\n+        public static final byte FUNCTION1 = 11;\n \n         /** Methods (functions inside a class) */\n-        public static final byte FUNCTION2 = 10;\n+        public static final byte FUNCTION2 = 12;\n \n         /** Loop/function-like blocks (for, while, etc.) */\n-        public static final byte FUNCTION3 = 12;\n+        public static final byte FUNCTION3 = 13;\n \n         /**\n          * Operator token id. This can be used to mark an\n          * operator. (eg, SQL mode marks +, -, etc with this\n          * token type)\n          */\n-        public static final byte OPERATOR = 13;\n+        public static final byte OPERATOR = 14;\n \n         /**\n          * Invalid token id. This can be used to mark invalid\n          * or incomplete tokens, so the user can easily spot\n          * syntax errors.\n          */\n-       ",
    "Add an API to check if the symbol is deprecated": "diff --git a/compiler/ballerina-compiler-api/src/main/java/io/ballerina/compiler/api/symbols/Deprecatable.java b/compiler/ballerina-compiler-api/src/main/java/io/ballerina/compiler/api/symbols/Deprecatable.java\nnew file mode 100644\nindex 00000000000..66d21914d11\n--- /dev/null\n+++ b/compiler/ballerina-compiler-api/src/main/java/io/ballerina/compiler/api/symbols/Deprecatable.java\n@@ -0,0 +1,33 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.ballerina.compiler.api.symbols;\n+\n+/**\n+ * An interface for symbols which can be deprecated.\n+ *\n+ * @since 2.0.0\n+ */\n+public interface Deprecatable {\n+\n+    /**\n+     * Checks whether the symbol is deprecated.\n+     *\n+     * @return True if the symbol is deprecated\n+     */\n+    boolean deprecated();\n+}\ndiff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaAnnotationSymbol.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaAnnotationSymbol.java\nindex 11dc6d191e7..48c5edf536f 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaAnnotationSymbol.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaAnnotationSymbol.java\n@@ -27,6 +27,7 @@ import org.wso2.ballerinalang.compiler.semantics.model.symbols.BAnnotationSymbol\n import org.wso2.ballerinalang.compiler.semantics.model.symbols.BSymbol;\n import org.wso2.ballerinalang.compiler.semantics.model.symbols.Symbols;\n import org.wso2.ballerinalang.util.AttachPoints;\n+import org.wso2.ballerinalang.util.Flags;\n \n import java.util.ArrayList;\n import java.util.Collections;\n@@ -45,6 +46,7 @@ public class BallerinaAnnotationSymbol extends BallerinaSymbol implements Annota\n     private final Set<Qualifier> qualifiers;\n     private final BallerinaTypeDescriptor typeDescriptor;\n     private final List<AnnotationAttachPoint> attachPoints;\n+    private final boolean deprecated;\n \n     private BallerinaAnnotationSymbol(String name, PackageID moduleID, Set<Qualifier> qualifiers,\n                                       BallerinaTypeDescriptor typeDescriptor, List<AnnotationAttachPoint> attachPoints,\n@@ -53,6 +55,7 @@ public class BallerinaAnnotationSymbol extends BallerinaSymbol implements Annota\n         this.qualifiers = Collections.unmodifiableSet(qualifiers);\n         this.typeDescriptor = typeDescriptor;\n         this.attachPoints = Collections.unmodifiableList(attachPoints);\n+        this.deprecated = Symbols.isFlagOn(bSymbol.flags, Flags.DEPRECATED);\n     }\n \n     /**\n@@ -85,6 +88,11 @@ public class BallerinaAnnotationSymbol extends BallerinaSymbol implements Annota\n         return attachPoints;\n     }\n \n+    @Override\n+    public boolean deprecated() {\n+        return this.deprecated;\n+    }\n+\n     /**\n      * Represents Ballerina Annotation Symbol Builder.\n      *\ndiff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaFunctionSymbol.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaFunctionSymbol.java\nindex 411a654f8c3..f7b5a2a15f0 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaFunctionSymbol.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaFunctionSymbol.java\n@@ -23,9 +23,9 @@ import io.ballerina.compiler.api.symbols.SymbolKind;\n import io.ballerina.compiler.api.types.BallerinaTypeDescriptor;\n import io.ballerina.compiler.api.types.FunctionTypeDescriptor;\n import org.ballerinalang.model.elements.PackageID;\n-import org.ballerinalang.model.util.Flags;\n import org.wso2.ballerinalang.compiler.semantics.model.symbols.BInvokableSymbol;\n import org.wso2.ballerinalang.compiler.semantics.model.symbols.Symbols;\n+import org.wso2.ballerinalang.util.Flags;\n \n import java.util.Collections;\n import java.util.HashSet;\n@@ -43,6 +43,7 @@ public class BallerinaFunctionSymbol extends BallerinaSymbol implements Function\n     private final FunctionTypeDescriptor typeDescriptor;\n     private final Set<Qualifier> qualifiers;\n     private final boolean isExternal;\n+    private final boolean deprecated;\n \n     protected BallerinaFunctionSymbol(String name,\n                                       PackageID moduleID,\n@@ -53,6 +54,7 @@ public class BallerinaFunctionSymbol extends BallerinaSymbol implements Function\n         this.qualifiers = Collections.unmodifiableSet(qualifiers);\n         this.typeDescriptor = typeDescriptor;\n         this.isExternal = Symbols.isFlagOn(invokableSymbol.flags, Flags.NATIVE);\n+        this.deprecated = Symbols.isFlagOn(invokableSymbol.flags, Flags.DEPRECATED);\n     }\n \n     /**\n@@ -75,6 +77,11 @@ public class BallerinaFunctionSymbol extends BallerinaSymbol implements Function\n         return this.isExternal;\n     }\n \n+    @Override\n+    public boolean deprecated() {\n+        return this.deprecated;\n+    }\n+\n     /**\n      * Represents Ballerina XML Namespace Symbol Builder.\n      */\ndiff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaMethodSymbol.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaMethodSymbol.java\nindex d1fb626b045..fd78d5bede2 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaMethodSymbol.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaMethodSymbol.java\n@@ -77,6 +77,11 @@ public class BallerinaMethodSymbol implements MethodSymbol {\n         return this.functionSymbol.external();\n     }\n \n+    @Override\n+    public boolean deprecated() {\n+        return this.functionSymbol.deprecated();\n+    }\n+\n     @Override\n     public Location location() {\n         return this.functionSymbol.location();\ndiff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaTypeSymbol.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaTypeSymbol.java\nindex c39cb03b6ac..b95a56157f2 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaTypeSymbol.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaTypeSymbol.java\n@@ -23,6 +23,8 @@ import io.ballerina.compiler.api.symbols.TypeSymbol;\n import io.ballerina.compiler.api.types.BallerinaTypeDescriptor;\n import org.ballerinalang.model.elements.PackageID;\n import org.wso2.ballerinalang.compiler.semantics.model.symbols.BSymbol;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.Symbols;\n+import org.wso2.ballerinalang.util.Flags;\n \n import java.util.Collections;\n import java.util.HashSet;\n@@ -37,8 +39,8 @@ import java.util.Set;\n public class BallerinaTypeSymbol extends BallerinaSymbol implements TypeSymbol {\n \n     private final Set<Qualifier> qualifiers;\n-\n     private final BallerinaTypeDescriptor typeDescriptor;\n+    private final boolean deprecated;\n \n     protected BallerinaTypeSymbol(String name,\n                                   PackageID moduleID,\n@@ -48,6 +50,7 @@ public class BallerinaTypeSymbol extends BallerinaSymbol implements TypeSymbol {\n         super(name, moduleID, SymbolKind.TYPE, bSymbol);\n         this.qualifiers = Collections.unmodifiableSet(qualifiers);\n         this.typeDescriptor = typeDescriptor;\n+        this.deprecated = Symbols.isFlagOn(bSymbol.flags, Flags.DEPRECATED);\n     }\n \n     @Override\n@@ -65,6 +68,11 @@ public class BallerinaTypeSymbol extends BallerinaSymbol implements TypeSymbol {\n         return Optional.ofNullable(typeDescriptor);\n     }\n \n+    @Override\n+    public boolean deprecated() {\n+        return this.deprecated;\n+    }\n+\n     /**\n      * Represents a type definition symbol builder.\n      *\ndiff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaVariableSymbol.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaVariableSymbol.java\nindex 7d6af0e7c8b..a2f40cc0486 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaVariableSymbol.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaVariableSymbol.java\n@@ -23,6 +23,8 @@ import io.ballerina.compiler.api.symbols.VariableSymbol;\n import io.ballerina.compiler.api.types.BallerinaTypeDescriptor;\n import org.ballerinalang.model.elements.PackageID;\n import org.wso2.ballerinalang.compiler.semantics.model.symbols.BSymbol;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.Symbols;\n+import org.wso2.ballerinalang.util.Flags;\n \n import java.util.Collections;\n import java.util.HashSet;\n@@ -39,6 +41,7 @@ public class BallerinaVariableSymbol extends BallerinaSymbol implements Variable\n \n     private final Set<Qualifier> qualifiers;\n     private final BallerinaTypeDescriptor typeDescriptorImpl;\n+    private final boolean deprecated;\n \n     protected BallerinaVariableSymbol(String name,\n                                       PackageID moduleID,\n@@ -49,6 +52,7 @@ public class BallerinaVariableSymbol extends BallerinaSymbol implements Variable\n         super(name, moduleID, ballerinaSymbolKind, bSymbol);\n         this.qualifiers = Collections.unmodifiableSet(qualifiers);\n         this.typeDescriptorImpl = typeDescriptorImpl;\n+        this.deprecated = Symbols.isFlagOn(bSymbol.flags, Flags.DEPRECATED);\n     }\n \n     /**\n@@ -71,6 +75,11 @@ public class BallerinaVariableSymbol extends BallerinaSymbol implements Variable\n         return Optional.ofNullable(typeDescriptorImpl);\n     }\n \n+    @Override\n+    public boolean deprecated() {\n+        return this.deprecated;\n+    }\n+\n     /**\n      * Represents Ballerina XML Namespace Symbol Builder.\n      */\ndiff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/AnnotationSymbol.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/AnnotationSymbol.java\nindex 1e08a1398ae..5eb1d6fbe8f 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/AnnotationSymbol.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/AnnotationSymbol.java\n@@ -27,7 +27,7 @@ import java.util.Optional;\n  *\n  * @since 2.0.0\n  */\n-public interface AnnotationSymbol extends Symbol, Qualifiable {\n+public interface AnnotationSymbol extends Symbol, Qualifiable, Deprecatable {\n \n     /**\n      * Get the type descriptor.\ndiff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/FunctionSymbol.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/FunctionSymbol.java\nindex d6ff5cfbfbe..8ccdc60f3c9 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/FunctionSymbol.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/FunctionSymbol.java\n@@ -26,7 +26,7 @@ import java.util.Optional;\n  *\n  * @since 2.0.0\n  */\n-public interface FunctionSymbol extends Symbol, Qualifiable {\n+public interface FunctionSymbol extends Symbol, Qualifiable, Deprecatable {\n \n     /**\n      * Get the Function Type Descriptor.\ndiff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/TypeSymbol.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/TypeSymbol.java\nindex 8c00699223f..8f6fd2dc2c9 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/TypeSymbol.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/TypeSymbol.java\n@@ -26,7 +26,7 @@ import java.util.Optional;\n  *\n  * @since 2.0.0\n  */\n-public interface TypeSymbol extends Symbol, Qualifiable {\n+public interface TypeSymbol extends Symbol, Qualifiable, Deprecatable {\n \n     /**\n      * Get the module qualified name.\ndiff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/VariableSymbol.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/VariableSymbol.java\nindex 821add473a8..f72892d1224 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/VariableSymbol.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/VariableSymbol.java\n@@ -26,7 +26,7 @@ import java.util.Optional;\n  *\n  * @since 2.0.0\n  */\n-public interface VariableSymbol extends Symbol, Qualifiable {\n+public interface VariableSymbol extends Symbol, Qualifiable, Deprecatable {\n \n     /**\n      * Get the Type of the variable.",
    "Updated README": "diff --git a/README.adoc b/README.adoc\nindex df13e497..50b47c55 100644\n--- a/README.adoc\n+++ b/README.adoc\n@@ -8,6 +8,8 @@ NOTE: javaslang-circuitbreaker has been renamed to resilience4j. We are still mi\n The *groupId* has been changed from *io.github.robwin* to *io.github.resilience4j*\n \n This library is a lightweight, easy-to-use fault tolerance library inspired by https://github.com/Netflix/Hystrix[Netflix Hystrix], but designed for Java 8 and functional programming. Lightweight, because the library only uses https://github.com/javaslang/javaslang[Javaslang], https://github.com/ReactiveX/RxJava[RxJava] and SLF4J-API, which do no have any other external library dependencies. Netflix Hystrix, in contrast, has a compile dependency to https://github.com/Netflix/archaius[Archaius] which has many more external library dependencies such as Guava and Apache Commons Configuration.\n+In Resilience4j you don't have to go all-in, can pick what you need.\n+\n Resilience4j features are:\n \n * Circuit breaking",
    "throw exceptions directly instead of wrapping them with RTE .": "diff --git a/src/jvm/clojure/lang/AFn.java b/src/jvm/clojure/lang/AFn.java\nindex f2d530a3..ca4d39dc 100644\n--- a/src/jvm/clojure/lang/AFn.java\n+++ b/src/jvm/clojure/lang/AFn.java\n@@ -25,7 +25,7 @@ public void run(){\n \t\t}\n \tcatch(Exception e)\n \t\t{\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t\t}\n }\n \ndiff --git a/src/jvm/clojure/lang/AFunction.java b/src/jvm/clojure/lang/AFunction.java\nindex d797102d..2963d0eb 100644\n--- a/src/jvm/clojure/lang/AFunction.java\n+++ b/src/jvm/clojure/lang/AFunction.java\n@@ -60,7 +60,7 @@ public int compare(Object o1, Object o2){\n \t\t}\n \tcatch(Exception e)\n \t\t{\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t\t}\n }\n }\ndiff --git a/src/jvm/clojure/lang/AMapEntry.java b/src/jvm/clojure/lang/AMapEntry.java\nindex f9e02467..41ae7563 100644\n--- a/src/jvm/clojure/lang/AMapEntry.java\n+++ b/src/jvm/clojure/lang/AMapEntry.java\n@@ -78,7 +78,7 @@ public String toString(){\n \tcatch(Exception e)\n \t\t{\n \t\t//checked exceptions stink!\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t\t}\n \treturn sw.toString();\n }\ndiff --git a/src/jvm/clojure/lang/ARef.java b/src/jvm/clojure/lang/ARef.java\nindex e9235c02..44dc2add 100644\n--- a/src/jvm/clojure/lang/ARef.java\n+++ b/src/jvm/clojure/lang/ARef.java\n@@ -53,7 +53,7 @@ public void setValidator(IFn vf){\n \t\t}\n \tcatch(Exception e)\n \t\t{\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t\t}\n \tvalidator = vf;\n }\n@@ -78,7 +78,7 @@ synchronized public IRef removeWatch(Object key){\n \t\t}\n \tcatch(Exception e)\n \t\t{\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t\t}\n \n \treturn this;\n@@ -99,7 +99,7 @@ public void notifyWatches(Object oldval, Object newval){\n \t\t\t\t}\n \t\t\tcatch(Exception e1)\n \t\t\t\t{\n-\t\t\t\tthrow Util.runtimeException(e1);\n+\t\t\t\tthrow Util.sneakyThrow(e1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\ndiff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex bfc8274e..4207e7b6 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -1140,7 +1140,7 @@ static class StaticFieldExpr extends FieldExpr implements AssignableExpr{\n \t\t\t}\n \t\tcatch(NoSuchFieldException e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\tthis.tag = tag;\n \t}\n@@ -1213,7 +1213,7 @@ static Class maybePrimitiveType(Expr e){\n \t\t}\n \tcatch(Exception ex)\n \t\t{\n-\t\tthrow Util.runtimeException(ex);\n+\t\tthrow Util.sneakyThrow(ex);\n \t\t}\n \treturn null;\n }\n@@ -2378,7 +2378,7 @@ public static class NewExpr implements Expr{\n \t\t\t\t}\n \t\t\tcatch(Exception e)\n \t\t\t\t{\n-\t\t\t\tthrow Util.runtimeException(e);\n+\t\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t\t}\n \t\t\t}\n \t\treturn Reflector.invokeConstructor(c, argvals);\n@@ -2536,7 +2536,7 @@ public static class IfExpr implements Expr, MaybePrimitiveExpr{\n \t\t\t}\n \t\tcatch(Exception e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\tif(emitUnboxed)\n \t\t\t((MaybePrimitiveExpr)thenExpr).emitUnboxed(context, objx, gen);\n@@ -3174,7 +3174,7 @@ static class StaticInvokeExpr implements Expr, MaybePrimitiveExpr{\n \t\t\t\t\t}\n \t\t\t\tcatch(Exception ex)\n \t\t\t\t\t{\n-\t\t\t\t\tthrow Util.runtimeException(ex);\n+\t\t\t\t\tthrow Util.sneakyThrow(ex);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\tIPersistentVector restArgs = RT.subvec(args,paramclasses.length - 1,args.count());\n@@ -3696,7 +3696,7 @@ static public class FnExpr extends ObjExpr{\n \t\t\t}\n \t\tcatch(IOException e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\tfn.getCompiledClass();\n \n@@ -4539,7 +4539,7 @@ static public class ObjExpr implements Expr{\n \t\t\t\t}\n \t\t\tcatch(Exception e)\n \t\t\t\t{\n-\t\t\t\tthrow Util.runtimeException(e);\n+\t\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t\t}\n \t\treturn compiledClass;\n \t}\n@@ -4553,7 +4553,7 @@ static public class ObjExpr implements Expr{\n \t\t\t}\n \t\tcatch(Exception e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t}\n \n@@ -5053,7 +5053,7 @@ public static class FnMethod extends ObjMethod{\n \t\t\t}\n \t\tcatch(Exception e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\tfinally\n \t\t\t{\n@@ -5117,7 +5117,7 @@ public static class FnMethod extends ObjMethod{\n \t\t\t}\n \t\tcatch(Exception e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\tfinally\n \t\t\t{\n@@ -6058,7 +6058,7 @@ public static class RecurExpr implements Expr{\n \t\t\t\t\t}\n \t\t\t\tcatch(Exception e)\n \t\t\t\t\t{\n-\t\t\t\t\tthrow Util.runtimeException(e);\n+\t\t\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\telse\n@@ -6477,7 +6477,7 @@ public static Object eval(Object form, boolean freshLoader) {\n \t\tcatch(Throwable e)\n \t\t\t{\n \t\t\tif(!(e instanceof RuntimeException))\n-\t\t\t\tthrow Util.runtimeException(e);\n+\t\t\t\tthrow Util.sneakyThrow(e);\n \t\t\tthrow (RuntimeException)e;\n \t\t\t}\n \t\tfinally\n@@ -6583,7 +6583,7 @@ static void addAnnotation(Object visitor, IPersistentMap meta){\n \t}\n \tcatch (Exception e)\n \t\t{\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t\t}\n }\n \n@@ -6594,7 +6594,7 @@ static void addParameterAnnotation(Object visitor, IPersistentMap meta, int i){\n \t}\n \tcatch (Exception e)\n \t\t{\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t\t}\n }\n \n@@ -7329,7 +7329,7 @@ static public class NewInstanceExpr extends ObjExpr{\n \t\t\t}\n \t\tcatch(IOException e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\tret.getCompiledClass();\n \t\treturn ret;\n@@ -7839,7 +7839,7 @@ public static class NewInstanceMethod extends ObjMethod{\n \t\t\t}\n \t\tcatch(Exception e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\tfinally\n \t\t\t{\ndiff --git a/src/jvm/clojure/lang/FnLoaderThunk.java b/src/jvm/clojure/lang/FnLoaderThunk.java\nindex 1c5f2b79..337ba255 100644\n--- a/src/jvm/clojure/lang/FnLoaderThunk.java\n+++ b/src/jvm/clojure/lang/FnLoaderThunk.java\n@@ -55,7 +55,7 @@ private void load() {\n \t\t\t}\n \t\tcatch(Exception e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\tv.root = fn;\n \t\t}\ndiff --git a/src/jvm/clojure/lang/LazySeq.java b/src/jvm/clojure/lang/LazySeq.java\nindex 6e9e37c1..914cc52b 100644\n--- a/src/jvm/clojure/lang/LazySeq.java\n+++ b/src/jvm/clojure/lang/LazySeq.java\n@@ -48,7 +48,7 @@ final synchronized Object sval(){\n \t\t\t}\n \t\tcatch(Exception e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\t}\n \tif(sv != null)\ndiff --git a/src/jvm/clojure/lang/LispReader.java b/src/jvm/clojure/lang/LispReader.java\nindex b0eb8b8b..1a1df3ee 100644\n--- a/src/jvm/clojure/lang/LispReader.java\n+++ b/src/jvm/clojure/lang/LispReader.java\n@@ -123,7 +123,7 @@ static void unread(PushbackReader r, int ch) {\n \t\t\t}\n \t\tcatch(IOException e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n }\n \n@@ -143,7 +143,7 @@ static public int read1(Reader r){\n \t\t}\n \tcatch(IOException e)\n \t\t{\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t\t}\n }\n \n@@ -209,7 +209,7 @@ static public Object read(PushbackReader r, boolean eofIsError, Object eofValue,\n \tcatch(Exception e)\n \t\t{\n \t\tif(isRecursive || !(r instanceof LineNumberingPushbackReader))\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\tLineNumberingPushbackReader rdr = (LineNumberingPushbackReader) r;\n \t\t//throw Util.runtimeException(String.format(\"ReaderError:(%d,1) %s\", rdr.getLineNumber(), e.getMessage()), e);\n \t\tthrow new ReaderException(rdr.getLineNumber(), e);\ndiff --git a/src/jvm/clojure/lang/PersistentHashMap.java b/src/jvm/clojure/lang/PersistentHashMap.java\nindex 928b123d..82f4864b 100644\n--- a/src/jvm/clojure/lang/PersistentHashMap.java\n+++ b/src/jvm/clojure/lang/PersistentHashMap.java\n@@ -1057,4 +1057,4 @@ static final class NodeSeq extends ASeq {\n \t}\n }\n \n-}\n\\ No newline at end of file\n+}\ndiff --git a/src/jvm/clojure/lang/RT.java b/src/jvm/clojure/lang/RT.java\nindex 3f77ad24..90420771 100644\n--- a/src/jvm/clojure/lang/RT.java\n+++ b/src/jvm/clojure/lang/RT.java\n@@ -308,7 +308,7 @@ static{\n \t\t\t\t               }\n \t\t\t               catch(IOException e)\n \t\t\t\t               {\n-\t\t\t\t               throw Util.runtimeException(e);\n+\t\t\t\t               throw Util.sneakyThrow(e);\n \t\t\t\t               }\n \t\t               }\n \t               });\n@@ -318,7 +318,7 @@ static{\n \t\tdoInit();\n \t}\n \tcatch(Exception e) {\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t}\n }\n \n@@ -1697,7 +1697,7 @@ static public String printString(Object x){\n \t\treturn sw.toString();\n \t}\n \tcatch(Exception e) {\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t}\n }\n \n@@ -1707,7 +1707,7 @@ static public Object readString(String s){\n \t\treturn LispReader.read(r, true, null, false);\n \t}\n \tcatch(Exception e) {\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t}\n }\n \n@@ -2040,7 +2040,7 @@ static public Class classForName(String name) {\n \t\t}\n \tcatch(ClassNotFoundException e)\n \t\t{\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t\t}\n }\n \ndiff --git a/src/jvm/clojure/lang/Ref.java b/src/jvm/clojure/lang/Ref.java\nindex 92067853..cf7ffa7c 100644\n--- a/src/jvm/clojure/lang/Ref.java\n+++ b/src/jvm/clojure/lang/Ref.java\n@@ -247,7 +247,7 @@ public void run(){\n \t\t}\n \tcatch(Exception e)\n \t\t{\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t\t}\n }\n \ndiff --git a/src/jvm/clojure/lang/Reflector.java b/src/jvm/clojure/lang/Reflector.java\nindex e47c264d..fb56a7ec 100644\n--- a/src/jvm/clojure/lang/Reflector.java\n+++ b/src/jvm/clojure/lang/Reflector.java\n@@ -31,14 +31,22 @@ public static Object invokeInstanceMethod(Object target, String methodName, Obje\n \t\t}\n \tcatch(Exception e)\n \t\t{\n-\t\tif(e.getCause() instanceof Exception)\n-\t\t\tthrow Util.runtimeException(e.getCause());\n-\t\telse if(e.getCause() instanceof Error)\n-\t\t\tthrow (Error) e.getCause();\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(getCauseOrElse(e));\n \t\t}\n }\n \n+private static Throwable getCauseOrElse(Exception e) {\n+\tif (e.getCause() != null)\n+\t\treturn e.getCause();\n+\treturn e;\n+}\n+\n+private static RuntimeException throwCauseOrElseException(Exception e) {\n+\tif (e.getCause() != null)\n+\t\tthrow Util.sneakyThrow(e.getCause());\n+\tthrow Util.sneakyThrow(e);\n+}\n+\n private static String noMethodReport(String methodName, Object target){\n \t return \"No matching method found: \" + methodName\n \t\t\t+ (target==null?\"\":\" for \" + target.getClass());\n@@ -93,11 +101,7 @@ static Object invokeMatchingMethod(String methodName, List methods, Object targe\n \t\t}\n \tcatch(Exception e)\n \t\t{\n-\t\tif(e.getCause() instanceof Exception)\n-\t\t\tthrow Util.runtimeException(e.getCause());\n-\t\telse if(e.getCause() instanceof Error)\n-\t\t\tthrow (Error) e.getCause();\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(getCauseOrElse(e));\n \t\t}\n \n }\n@@ -189,11 +193,7 @@ public static Object invokeConstructor(Class c, Object[] args) {\n \t\t}\n \tcatch(Exception e)\n \t\t{\n-\t\tif(e.getCause() instanceof Exception)\n-\t\t\tthrow Util.runtimeException(e.getCause());\n-\t\telse if(e.getCause() instanceof Error)\n-\t\t\tthrow (Error) e.getCause();\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(getCauseOrElse(e));\n \t\t}\n }\n \n@@ -210,11 +210,7 @@ public static Object invokeStaticMethod(String className, String methodName, Obj\n \t\t}\n \tcatch(Exception e)\n \t\t{\n-\t\tif(e.getCause() instanceof Exception)\n-\t\t\tthrow Util.runtimeException(e.getCause());\n-\t\telse if(e.getCause() instanceof Error)\n-\t\t\tthrow (Error) e.getCause();\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(getCauseOrElse(e));\n \t\t}\n }\n \n@@ -242,7 +238,7 @@ public static Object getStaticField(Class c, String fieldName) {\n \t\t\t}\n \t\tcatch(IllegalAccessException e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\t}\n \tthrow new IllegalArgumentException(\"No matching field found: \" + fieldName\n@@ -264,7 +260,7 @@ public static Object setStaticField(Class c, String fieldName, Object val) {\n \t\t\t}\n \t\tcatch(IllegalAccessException e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\treturn val;\n \t\t}\n@@ -283,7 +279,7 @@ public static Object getInstanceField(Object target, String fieldName) {\n \t\t\t}\n \t\tcatch(IllegalAccessException e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\t}\n \tthrow new IllegalArgumentException(\"No matching field found: \" + fieldName\n@@ -301,7 +297,7 @@ public static Object setInstanceField(Object target, String fieldName, Object va\n \t\t\t}\n \t\tcatch(IllegalAccessException e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\treturn val;\n \t\t}\n@@ -330,7 +326,7 @@ public static Object invokeInstanceMember(Object target, String name) {\n \t\t\t}\n \t\tcatch(IllegalAccessException e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\t}\n \treturn invokeInstanceMethod(target, name, RT.EMPTY_ARRAY);\n@@ -348,7 +344,7 @@ public static Object invokeInstanceMember(String name, Object target, Object arg\n \t\t\t}\n \t\tcatch(IllegalAccessException e)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(e);\n+\t\t\tthrow Util.sneakyThrow(e);\n \t\t\t}\n \t\treturn arg1;\n \t\t}\ndiff --git a/src/jvm/clojure/lang/TransactionalHashMap.java b/src/jvm/clojure/lang/TransactionalHashMap.java\nindex ea3f9d71..c8e30801 100644\n--- a/src/jvm/clojure/lang/TransactionalHashMap.java\n+++ b/src/jvm/clojure/lang/TransactionalHashMap.java\n@@ -93,7 +93,7 @@ public V remove(Object k){\n \t\t}\n \tcatch(Exception e)\n \t\t{\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t\t}\n \treturn (V) ret;\n }\n@@ -163,7 +163,7 @@ public boolean remove(Object k, Object v){\n \t\t\t}\n \t\tcatch(Exception ex)\n \t\t\t{\n-\t\t\tthrow Util.runtimeException(ex);\n+\t\t\tthrow Util.sneakyThrow(ex);\n \t\t\t}\n \t\treturn true;\n \t\t}\ndiff --git a/src/jvm/clojure/lang/Util.java b/src/jvm/clojure/lang/Util.java\nindex 92862876..02b5466f 100644\n--- a/src/jvm/clojure/lang/Util.java\n+++ b/src/jvm/clojure/lang/Util.java\n@@ -169,16 +169,11 @@ static public <K,V> void clearCache(ReferenceQueue rq, ConcurrentHashMap<K, Refe\n static public RuntimeException runtimeException(String s){\n \treturn new RuntimeException(s);\n }\n+\n static public RuntimeException runtimeException(String s, Throwable e){\n \treturn new RuntimeException(s, e);\n }\n \n-static public RuntimeException runtimeException(Throwable e){\n-\tif(e instanceof RuntimeException)\n-\t\treturn (RuntimeException)e;\n-\treturn new RuntimeException(e);\n-}\n-\n /**\n  * Throw even checked exceptions without being required\n  * to declare them or catch them. Suggested idiom:\ndiff --git a/src/jvm/clojure/lang/Var.java b/src/jvm/clojure/lang/Var.java\nindex 799a153c..b67a4673 100644\n--- a/src/jvm/clojure/lang/Var.java\n+++ b/src/jvm/clojure/lang/Var.java\n@@ -254,7 +254,7 @@ public void setMacro() {\n         }\n     catch (Exception e)\n         {\n-        throw Util.runtimeException(e);\n+        throw Util.sneakyThrow(e);\n         }\n }\n \n@@ -285,7 +285,7 @@ public void setTag(Symbol tag) {\n         }\n     catch (Exception e)\n         {\n-        throw Util.runtimeException(e);\n+        throw Util.sneakyThrow(e);\n         }\n }\n \n@@ -305,7 +305,7 @@ synchronized public void bindRoot(Object root){\n         }\n     catch (Exception e)\n         {\n-        throw Util.runtimeException(e);\n+        throw Util.sneakyThrow(e);\n         }\n     notifyWatches(oldroot,this.root);\n }\n@@ -403,7 +403,7 @@ public void run(){\n \t\t}\n \tcatch(Exception e)\n \t\t{\n-\t\tthrow Util.runtimeException(e);\n+\t\tthrow Util.sneakyThrow(e);\n \t\t}\n }\n \n@@ -547,7 +547,10 @@ static IFn dissoc = new AFn() {\n \t\t    }\n \t    catch(Exception e)\n \t\t    {\n-\t\t    return Util.runtimeException(e);\n+// TODO:CLJ-855 \"throw Util.sneakyThrow(e)\" instead?\n+// I don't understand why we are *returing* the exception here instead\n+// of just throwing it.\n+\t\t\treturn e; \n \t\t    }\n     }\n };",
    "adding logback for tests and slf4j for non - tests": "diff --git a/pom.xml b/pom.xml\nindex 78b88a397..c002bc740 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -16,10 +16,10 @@\n     <dependencies>\n         <!-- http -->\n         <!--<dependency>-->\n-            <!--<groupId>javax.servlet</groupId>-->\n-            <!--<artifactId>servlet-api</artifactId>-->\n-            <!--<version>3.0-alpha-1</version>-->\n-            <!--<scope>provided</scope>-->\n+        <!--<groupId>javax.servlet</groupId>-->\n+        <!--<artifactId>servlet-api</artifactId>-->\n+        <!--<version>3.0-alpha-1</version>-->\n+        <!--<scope>provided</scope>-->\n         <!--</dependency>-->\n         <dependency>\n             <groupId>org.eclipse.jetty</groupId>\n@@ -71,9 +71,9 @@\n             <version>3.1</version>\n         </dependency>\n         <dependency>\n-        \t<groupId>com.google.guava</groupId>\n-        \t<artifactId>guava</artifactId>\n-        \t<version>14.0-rc3</version>\n+            <groupId>com.google.guava</groupId>\n+            <artifactId>guava</artifactId>\n+            <version>14.0-rc3</version>\n         </dependency>\n         <dependency>\n             <groupId>commons-collections</groupId>\n@@ -86,12 +86,27 @@\n             <groupId>junit</groupId>\n             <artifactId>junit</artifactId>\n             <version>4.11</version>\n+            <scope>test</scope>\n         </dependency>\n         <dependency>\n-        \t<groupId>org.mockito</groupId>\n-        \t<artifactId>mockito-all</artifactId>\n-        \t<version>1.8.4</version>\n+            <groupId>org.mockito</groupId>\n+            <artifactId>mockito-all</artifactId>\n+            <version>1.8.4</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- logging -->\n+        <dependency> <!-- will map to any underlying logging framework -->\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-api</artifactId>\n+            <version>1.7.2</version>\n+        </dependency>\n+        <dependency> <!-- use logback in tests -->\n+            <groupId>ch.qos.logback</groupId>\n+            <artifactId>logback-classic</artifactId>\n+            <version>1.0.9</version>\n+            <scope>test</scope>\n         </dependency>\n     </dependencies>\n-    \n+\n </project>\n\\ No newline at end of file\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/client/MockServerClient.java b/src/main/java/org/jamesdbloom/mockserver/client/MockServerClient.java\nindex 6158c6e34..fd242750c 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/client/MockServerClient.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/client/MockServerClient.java\n@@ -7,11 +7,14 @@ import org.jamesdbloom.mockserver.client.serialization.ExpectationSerializer;\n import org.jamesdbloom.mockserver.matchers.Times;\n import org.jamesdbloom.mockserver.mock.Expectation;\n import org.jamesdbloom.mockserver.model.HttpRequest;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /**\n  * @author jamesdbloom\n  */\n public class MockServerClient {\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n \n     private final String mockServerURI;\n \n@@ -35,6 +38,7 @@ public class MockServerClient {\n             httpClient.start();\n             httpClient.newRequest(mockServerURI).method(HttpMethod.PUT).content(new StringContentProvider(expectationSerializer.serialize(expectation))).send();\n         } catch (Exception e) {\n+            logger.error(String.format(\"Exception sending expectation to MockServer as %s\", expectation), e);\n             throw new RuntimeException(String.format(\"Exception sending expectation to MockServer as %s\", expectation), e);\n         }\n     }\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/client/serialization/ExpectationSerializer.java b/src/main/java/org/jamesdbloom/mockserver/client/serialization/ExpectationSerializer.java\nindex 8ebe1e9a5..7e3434a38 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/client/serialization/ExpectationSerializer.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/client/serialization/ExpectationSerializer.java\n@@ -3,6 +3,8 @@ package org.jamesdbloom.mockserver.client.serialization;\n import org.codehaus.jackson.map.ObjectMapper;\n import org.jamesdbloom.mockserver.client.serialization.model.ExpectationDTO;\n import org.jamesdbloom.mockserver.mock.Expectation;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.io.IOException;\n import java.io.InputStream;\n@@ -11,6 +13,7 @@ import java.io.InputStream;\n  * @author jamesdbloom\n  */\n public class ExpectationSerializer {\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n \n     private ObjectMapper objectMapper = new ObjectMapper();\n \n@@ -18,9 +21,8 @@ public class ExpectationSerializer {\n         try {\n             return objectMapper.writeValueAsString(new ExpectationDTO(expectation));\n         } catch (IOException ioe) {\n-            RuntimeException runtimeException = new RuntimeException(String.format(\"Exception while serializing expectation to JSON with value %s\", expectation), ioe);\n-            runtimeException.printStackTrace();\n-            throw runtimeException;\n+            logger.error(String.format(\"Exception while serializing expectation to JSON with value %s\", expectation), ioe);\n+            throw new RuntimeException(String.format(\"Exception while serializing expectation to JSON with value %s\", expectation), ioe);\n         }\n     }\n \n@@ -32,9 +34,8 @@ public class ExpectationSerializer {\n                 expectation = expectationDTO.buildObject();\n             }\n         } catch (IOException ioe) {\n-            RuntimeException runtimeException = new RuntimeException(\"Exception while parsing response for http response expectation with value of\", ioe);\n-            runtimeException.printStackTrace();\n-            throw runtimeException;\n+            logger.error(\"Exception while parsing response for http response expectation\", ioe);\n+            throw new RuntimeException(\"Exception while parsing response for http response expectation\", ioe);\n         }\n         return expectation;\n     }\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/client/serialization/model/ExpectationDTO.java b/src/main/java/org/jamesdbloom/mockserver/client/serialization/model/ExpectationDTO.java\nindex 5546d7240..59cac8b3b 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/client/serialization/model/ExpectationDTO.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/client/serialization/model/ExpectationDTO.java\n@@ -37,11 +37,13 @@ public class ExpectationDTO extends ModelObject {\n         if (this.httpRequest != null) {\n             httpRequest = this.httpRequest.buildObject();\n         } else {\n+            logger.warn(\"HttpRequest must be specified to create an Expectation\");\n             throw new IllegalArgumentException(\"HttpRequest must be specified to create an Expectation\");\n         }\n         if (this.httpResponse != null) {\n             httpResponse = this.httpResponse.buildObject();\n         } else {\n+            logger.warn(\"HttpResponse must be specified to create an Expectation\");\n             throw new IllegalArgumentException(\"HttpResponse must be specified to create an Expectation\");\n         }\n         if (this.times != null) {\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/mappers/HttpServletRequestMapper.java b/src/main/java/org/jamesdbloom/mockserver/mappers/HttpServletRequestMapper.java\nindex 180510c74..d13f1817f 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/mappers/HttpServletRequestMapper.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/mappers/HttpServletRequestMapper.java\n@@ -3,6 +3,8 @@ package org.jamesdbloom.mockserver.mappers;\n import org.jamesdbloom.mockserver.model.Cookie;\n import org.jamesdbloom.mockserver.model.Header;\n import org.jamesdbloom.mockserver.model.HttpRequest;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import javax.servlet.http.HttpServletRequest;\n import java.io.IOException;\n@@ -15,6 +17,7 @@ import java.util.List;\n  * @author jamesdbloom\n  */\n public class HttpServletRequestMapper {\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n \n     public HttpRequest createHttpRequest(HttpServletRequest httpServletRequest) {\n         HttpRequest httpRequest = new HttpRequest();\n@@ -40,6 +43,7 @@ public class HttpServletRequestMapper {\n                 httpRequest.withBody(new String(bodyBytes));\n             }\n         } catch (IOException ioe) {\n+            logger.error(\"IOException while reading HttpServletRequest input stream\", ioe);\n             throw new RuntimeException(\"IOException while reading HttpServletRequest input stream\", ioe);\n         }\n     }\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/mappers/HttpServletResponseMapper.java b/src/main/java/org/jamesdbloom/mockserver/mappers/HttpServletResponseMapper.java\nindex 7cacc8e76..f83be1b92 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/mappers/HttpServletResponseMapper.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/mappers/HttpServletResponseMapper.java\n@@ -3,6 +3,8 @@ package org.jamesdbloom.mockserver.mappers;\n import org.jamesdbloom.mockserver.model.Cookie;\n import org.jamesdbloom.mockserver.model.Header;\n import org.jamesdbloom.mockserver.model.HttpResponse;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import javax.servlet.http.HttpServletResponse;\n import java.io.IOException;\n@@ -11,6 +13,8 @@ import java.io.IOException;\n  * @author jamesdbloom\n  */\n public class HttpServletResponseMapper {\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n     public void mapHttpServletResponse(HttpResponse httpResponse, HttpServletResponse httpServletResponse) {\n         setStatusCode(httpResponse, httpServletResponse);\n         setBody(httpResponse, httpServletResponse);\n@@ -29,6 +33,7 @@ public class HttpServletResponseMapper {\n             try {\n                 httpServletResponse.getOutputStream().write(httpResponse.getBody().getBytes());\n             } catch (IOException ioe) {\n+                logger.error(String.format(\"IOException while writing %s to HttpServletResponse output stream\", httpResponse.getBody()), ioe);\n                 throw new RuntimeException(String.format(\"IOException while writing %s to HttpServletResponse output stream\", httpResponse.getBody()), ioe);\n             }\n         }\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/matchers/MapMatcher.java b/src/main/java/org/jamesdbloom/mockserver/matchers/MapMatcher.java\nindex d58642c63..0714d442d 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/matchers/MapMatcher.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/matchers/MapMatcher.java\n@@ -21,6 +21,8 @@ public class MapMatcher<K, V> extends ModelObject implements Matcher<List<KeyToM\n \n         if (containsAll(KeyToMultiValue.toMultiMap(values), this.multimap)) {\n             result = true;\n+        } else {\n+            logger.trace(\"Failed to match {} with {}\", values, multimap);\n         }\n \n         return result;\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/matchers/StringMatcher.java b/src/main/java/org/jamesdbloom/mockserver/matchers/StringMatcher.java\nindex 751b484b4..331359b6a 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/matchers/StringMatcher.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/matchers/StringMatcher.java\n@@ -2,11 +2,14 @@ package org.jamesdbloom.mockserver.matchers;\n \n import com.google.common.base.Strings;\n import org.jamesdbloom.mockserver.model.ModelObject;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /**\n  * @author jamesdbloom\n  */\n public class StringMatcher extends ModelObject implements Matcher<String> {\n+\n     private final String path;\n \n     public StringMatcher(String path) {\n@@ -20,6 +23,8 @@ public class StringMatcher extends ModelObject implements Matcher<String> {\n             result = true;\n         } else if (path != null && path.matches(this.path)) {\n             result = true;\n+        } else {\n+            logger.trace(\"Failed to match {} with {}\", path, this.path);\n         }\n \n         return result;\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/matchers/Times.java b/src/main/java/org/jamesdbloom/mockserver/matchers/Times.java\nindex 7ff85c4dc..0e2f1be7f 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/matchers/Times.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/matchers/Times.java\n@@ -16,11 +16,6 @@ public class Times extends ModelObject {\n         this.unlimited = unlimited;\n     }\n \n-    public Times(TimesDTO timesDTO) {\n-        this.remainingTimes = timesDTO.getRemainingTimes();\n-        this.unlimited = timesDTO.isUnlimited();\n-    }\n-\n     public int getRemainingTimes() {\n         return remainingTimes;\n     }\n@@ -42,7 +37,12 @@ public class Times extends ModelObject {\n     }\n \n     public boolean greaterThenZero() {\n-        return unlimited || remainingTimes > 0;\n+        if(unlimited || remainingTimes > 0) {\n+            return true;\n+        } else {\n+            logger.trace(\"Remaining count is 0\");\n+            return false;\n+        }\n     }\n \n     public void decrement() {\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/mock/Expectation.java b/src/main/java/org/jamesdbloom/mockserver/mock/Expectation.java\nindex 49c42025e..ee12c085b 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/mock/Expectation.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/mock/Expectation.java\n@@ -11,6 +11,7 @@ import org.jamesdbloom.mockserver.model.ModelObject;\n  */\n public class Expectation extends ModelObject {\n \n+    public static final ExpectationMapper EXPECTATION_MAPPER = new ExpectationMapper();\n     private final HttpRequest httpRequest;\n     private final Times times;\n     private HttpResponse httpResponse;\n@@ -38,7 +39,7 @@ public class Expectation extends ModelObject {\n     }\n \n     public boolean matches(HttpRequest httpRequest) {\n-        boolean matches = times.greaterThenZero() && new ExpectationMapper().transformsToMatcher(this.httpRequest).matches(httpRequest);\n+        boolean matches = times.greaterThenZero() && EXPECTATION_MAPPER.transformsToMatcher(this.httpRequest).matches(httpRequest);\n         if (matches) {\n             times.decrement();\n         }\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/mock/MockServer.java b/src/main/java/org/jamesdbloom/mockserver/mock/MockServer.java\nindex 45a73f40a..af946419d 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/mock/MockServer.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/mock/MockServer.java\n@@ -18,7 +18,6 @@ import java.util.List;\n public class MockServer extends ModelObject {\n \n     protected final List<Expectation> expectations = new ArrayList<Expectation>();\n-    private ExpectationMapper expectationMapper = new ExpectationMapper();\n \n     public Expectation when(final HttpRequest httpRequest) {\n         Collection<Expectation> existingExpectationsWithMatchingRequest = Collections2.filter(expectations, new Predicate<Expectation>() {\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/model/Delay.java b/src/main/java/org/jamesdbloom/mockserver/model/Delay.java\nindex 72b615c79..52a251aec 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/model/Delay.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/model/Delay.java\n@@ -26,8 +26,9 @@ public class Delay extends ModelObject {\n     public void applyDelay() {\n         try {\n             timeUnit.sleep(value);\n-        } catch (InterruptedException e) {\n-            throw new RuntimeException(\"InterruptedException while apply delay to response\", e);\n+        } catch (InterruptedException ie) {\n+            logger.error(\"InterruptedException while apply delay to response\", ie);\n+            throw new RuntimeException(\"InterruptedException while apply delay to response\", ie);\n         }\n     }\n }\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/model/ModelObject.java b/src/main/java/org/jamesdbloom/mockserver/model/ModelObject.java\nindex 2a3db8f77..19e9e225f 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/model/ModelObject.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/model/ModelObject.java\n@@ -4,11 +4,14 @@ import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n import org.apache.commons.lang3.builder.ToStringStyle;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /**\n  * @author jamesdbloom\n  */\n public abstract class ModelObject {\n+    protected Logger logger = LoggerFactory.getLogger(this.getClass());\n \n     @Override\n     public String toString() {\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/server/EmbeddedJettyRunner.java b/src/main/java/org/jamesdbloom/mockserver/server/EmbeddedJettyRunner.java\nindex 16bfed998..0c4268adb 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/server/EmbeddedJettyRunner.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/server/EmbeddedJettyRunner.java\n@@ -2,11 +2,14 @@ package org.jamesdbloom.mockserver.server;\n \n import org.eclipse.jetty.server.Server;\n import org.eclipse.jetty.servlet.ServletHandler;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /**\n  * @author jamesdbloom\n  */\n public class EmbeddedJettyRunner {\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n \n     private final Server server;\n \n@@ -25,6 +28,7 @@ public class EmbeddedJettyRunner {\n         try {\n             server.start();\n         } catch (Exception e) {\n+            logger.error(\"Failed to start embedded jetty server\", e);\n             throw new RuntimeException(\"Failed to start embedded jetty server\", e);\n         }\n     }\ndiff --git a/src/main/java/org/jamesdbloom/mockserver/server/MockServerServlet.java b/src/main/java/org/jamesdbloom/mockserver/server/MockServerServlet.java\nindex b1f2bc230..30f5a4111 100644\n--- a/src/main/java/org/jamesdbloom/mockserver/server/MockServerServlet.java\n+++ b/src/main/java/org/jamesdbloom/mockserver/server/MockServerServlet.java\n@@ -6,6 +6,8 @@ import org.jamesdbloom.mockserver.mappers.HttpServletResponseMapper;\n import org.jamesdbloom.mockserver.mock.MockServer;\n import org.jamesdbloom.mockserver.model.HttpRequest;\n import org.jamesdbloom.mockserver.model.HttpResponse;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n@@ -16,6 +18,7 @@ import java.io.IOException;\n  * @author jamesdbloom\n  */\n public class MockServerServlet extends HttpServlet {\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n \n     private MockServer mockServer = new MockServer();\n     private HttpServletRequestMapper httpServletRequestMapper = new HttpServletRequestMapper();\ndiff --git a/src/test/java/org/jamesdbloom/mockserver/ClientServerTest.java b/src/test/java/org/jamesdbloom/mockserver/ClientServerTest.java\nindex d6828f499..263a0b78b 100644\n--- a/src/test/java/org/jamesdbloom/mockserver/ClientServerTest.java\n+++ b/src/test/java/org/jamesdbloom/mockserver/ClientServerTest.java\n@@ -13,6 +13,8 @@ import org.jamesdbloom.mockserver.model.Header;\n import org.jamesdbloom.mockserver.model.HttpRequest;\n import org.jamesdbloom.mockserver.model.HttpResponse;\n import org.jamesdbloom.mockserver.server.EmbeddedJettyRunner;\n+import org.junit.After;\n+import org.junit.Before;\n import org.junit.Test;\n \n import java.util.ArrayList;\n@@ -25,28 +27,60 @@ import static org.junit.Assert.assertEquals;\n  */\n public class ClientServerTest {\n \n+    private EmbeddedJettyRunner embeddedJettyRunner;\n+    private MockServerClient mockServerClient;\n+\n+    @Before\n+    public void startServerAndCreateClient() {\n+        embeddedJettyRunner = new EmbeddedJettyRunner(8080);\n+        mockServerClient = new MockServerClient(\"localhost\", 8080);\n+    }\n+\n+    @After\n+    public void stopServer() throws Exception {\n+        embeddedJettyRunner.stop();\n+    }\n+\n     @Test\n     public void clientCanCallServer() throws Exception {\n-        // given\n-        EmbeddedJettyRunner embeddedJettyRunner = new EmbeddedJettyRunner(8080);\n-        MockServerClient mockServerClient = new MockServerClient(\"localhost\", 8080);\n-\n         // when\n         mockServerClient.when(new HttpRequest()).respond(new HttpResponse().withBody(\"somebody\"));\n \n         // then\n-        HttpResponse server = new HttpResponse()\n-                .withStatusCode(HttpStatus.OK_200)\n-                .withHeaders(new Header(\"Content-Length\", \"\" + \"somebody\".length()), new Header(\"Server\", \"Jetty(9.0.0.RC0)\"))\n-                .withBody(\"somebody\");\n-        assertEquals(server, makeRequest(new HttpRequest()));\n+        assertEquals(\n+                new HttpResponse()\n+                        .withStatusCode(HttpStatus.OK_200)\n+                        .withHeaders(new Header(\"Content-Length\", \"\" + \"somebody\".length()), new Header(\"Server\", \"Jetty(9.0.0.RC0)\"))\n+                        .withBody(\"somebody\"),\n+                makeRequest(new HttpRequest()));\n+    }\n+\n+    @Test\n+    public void clientCanCallServerMatchBody() throws Exception {\n+        // when\n+        mockServerClient.when(new HttpRequest().withPath(\"/somepath1\")).respond(new HttpResponse().withBody(\"somebody1\"));\n+        mockServerClient.when(new HttpRequest().withPath(\"/somepath2\")).respond(new HttpResponse().withBody(\"somebody2\"));\n+\n+        // then\n+        assertEquals(\n+                new HttpResponse()\n+                        .withStatusCode(HttpStatus.OK_200)\n+                        .withHeaders(new Header(\"Content-Length\", \"\" + \"somebody2\".length()), new Header(\"Server\", \"Jetty(9.0.0.RC0)\"))\n+                        .withBody(\"somebody2\"),\n+                makeRequest(new HttpRequest().withPath(\"/somepath2\")));\n+        assertEquals(\n+                new HttpResponse()\n+                        .withStatusCode(HttpStatus.OK_200)\n+                        .withHeaders(new Header(\"Content-Length\", \"\" + \"somebody1\".length()), new Header(\"Server\", \"Jetty(9.0.0.RC0)\"))\n+                        .withBody(\"somebody1\"),\n+                makeRequest(new HttpRequest().withPath(\"/somepath1\")));\n     }\n \n-    public HttpResponse makeRequest(HttpRequest httpRequest) throws Exception {\n+    private HttpResponse makeRequest(HttpRequest httpRequest) throws Exception {\n         HttpResponse httpResponse;\n         HttpClient httpClient = new HttpClient();\n         httpClient.start();\n-        Request request = httpClient.newRequest(\"http://localhost:8080/\" + httpRequest.getPath()).method(HttpMethod.GET).content(new StringContentProvider(httpRequest.getBody()));\n+        Request request = httpClient.newRequest(\"http://localhost:8080\" + (httpRequest.getPath().startsWith(\"/\") ? \"\" : \"/\") + httpRequest.getPath()).method(HttpMethod.GET).content(new StringContentProvider(httpRequest.getBody()));\n         for (Header header : httpRequest.getHeaders()) {\n             for (String value : header.getValues()) {\n                 request.header(header.getName(), value);\ndiff --git a/src/test/resources/logback-test.xml b/src/test/resources/logback-test.xml\nnew file mode 100644\nindex 000000000..6d7753005\n--- /dev/null\n+++ b/src/test/resources/logback-test.xml\n@@ -0,0 +1,13 @@\n+<configuration>\n+    <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n+        <encoder>\n+            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{35} - %msg%n</pattern>\n+        </encoder>\n+    </appender>\n+\n+    <logger name=\"org.jamesdbloom\" level=\"TRACE\"/>\n+\n+    <root level=\"warn\">\n+        <appender-ref ref=\"STDOUT\"/>\n+    </root>\n+</configuration>\n\\ No newline at end of file",
    "Removed unused API .": "diff --git a/truffle/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java b/truffle/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java\nindex 9ba02d02714..b5880d09afd 100644\n--- a/truffle/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java\n+++ b/truffle/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java\n@@ -114,22 +114,6 @@ public final class CPUSampler implements Closeable {\n             return selfInterpretedHitCount;\n         }\n \n-        /**\n-         * @return When was the element first found on the stack\n-         * @since 0.29\n-         */\n-        public long getFirstHitTime() {\n-            return firstHitTime;\n-        }\n-\n-        /**\n-         * @return When was the element last found on the stack\n-         * @since 0.29\n-         */\n-        public long getLastHitTime() {\n-            return lastHitTime;\n-        }\n-\n        ",
    "added getSystemMetric ( )": "diff --git a/commons/src/main/java/com/orientechnologies/common/profiler/OAbstractProfiler.java b/commons/src/main/java/com/orientechnologies/common/profiler/OAbstractProfiler.java\nindex f4ae66ab08..75a97f80ca 100644\n--- a/commons/src/main/java/com/orientechnologies/common/profiler/OAbstractProfiler.java\n+++ b/commons/src/main/java/com/orientechnologies/common/profiler/OAbstractProfiler.java\n@@ -179,6 +179,7 @@ public abstract class OAbstractProfiler extends OSharedResourceAbstract implemen\n       hooks.remove(iName);\r\n   }\r\n \r\n+  @Override\r\n   public String getSystemMetric(final String iMetricName) {\r\n     final StringBuilder buffer = new StringBuilder();\r\n     buffer.append(\"system.\");\r\n@@ -186,6 +187,7 @@ public abstract class OAbstractProfiler extends OSharedResourceAbstract implemen\n     return buffer.toString();\r\n   }\r\n \r\n+  @Override\r\n   public String getProcessMetric(final String iMetricName) {\r\n     final StringBuilder buffer = new StringBuilder();\r\n     buffer.append(\"process.\");\r\n@@ -193,6 +195,7 @@ public abstract class OAbstractProfiler extends OSharedResourceAbstract implemen\n     return buffer.toString();\r\n   }\r\n \r\n+  @Override\r\n   public String getDatabaseMetric(final String iDatabaseName, final String iMetricName) {\r\n     final StringBuilder buffer = new StringBuilder();\r\n     buffer.append(\"db.\");\r\ndiff --git a/commons/src/main/java/com/orientechnologies/common/profiler/OProfilerMBean.java b/commons/src/main/java/com/orientechnologies/common/profiler/OProfilerMBean.java\nindex 9657374440..4c0b43fe2c 100644\n--- a/commons/src/main/java/com/orientechnologies/common/profiler/OProfilerMBean.java\n+++ b/commons/src/main/java/com/orientechnologies/common/profiler/OProfilerMBean.java\n@@ -76,6 +76,8 @@ public interface OProfilerMBean extends OService {\n   public void registerHookValue(final String iName, final String iDescription, final METRIC_TYPE iType,\r\n       final OProfilerHookValue iHookValue, final String iMetadataName);\r\n \r\n+  public String getSystemMetric(String iMetricName);\r\n+\r\n   public String getProcessMetric(String iName);\r\n \r\n   public String getDatabaseMetric(String databaseName, String iName);\r",
    "Added metrics - jersey .": "diff --git a/metrics-jersey/pom.xml b/metrics-jersey/pom.xml\nnew file mode 100644\nindex 00000000..405f51e3\n--- /dev/null\n+++ b/metrics-jersey/pom.xml\n@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>com.yammer.metrics</groupId>\n+        <artifactId>metrics-parent</artifactId>\n+        <version>2.0.0-BETA19-SNAPSHOT</version>\n+    </parent>\n+\n+    <groupId>com.yammer.metrics</groupId>\n+    <artifactId>metrics-jersey</artifactId>\n+    <name>Metrics Jersey Support</name>\n+    <description>\n+        A set of class providing Metrics integration for Jersey, the reference JAX-\n+        implementation.\n+    </description>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.yammer.metrics</groupId>\n+            <artifactId>metrics-core</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.yammer.metrics</groupId>\n+            <artifactId>metrics-annotation</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.sun.jersey</groupId>\n+            <artifactId>jersey-server</artifactId>\n+            <version>1.11</version>\n+        </dependency>\n+    </dependencies>\n+</project>\ndiff --git a/metrics-jersey/src/main/java/com/yammer/metrics/jersey/InstrumentedResourceMethodDispatchProvider.java b/metrics-jersey/src/main/java/com/yammer/metrics/jersey/InstrumentedResourceMethodDispatchProvider.java\nnew file mode 100644\nindex 00000000..da059c19\n--- /dev/null\n+++ b/metrics-jersey/src/main/java/com/yammer/metrics/jersey/InstrumentedResourceMethodDispatchProvider.java\n@@ -0,0 +1,130 @@\n+package com.yammer.metrics.jersey;\n+\n+import com.sun.jersey.api.core.HttpContext;\n+import com.sun.jersey.api.model.AbstractResourceMethod;\n+import com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider;\n+import com.sun.jersey.spi.container.JavaMethodInvoker;\n+import com.sun.jersey.spi.dispatch.RequestDispatcher;\n+import com.yammer.metrics.Metrics;\n+import com.yammer.metrics.annotation.ExceptionMetered;\n+import com.yammer.metrics.annotation.Metered;\n+import com.yammer.metrics.annotation.Timed;\n+import com.yammer.metrics.core.MeterMetric;\n+import com.yammer.metrics.core.TimerContext;\n+import com.yammer.metrics.core.TimerMetric;\n+import sun.misc.Unsafe;\n+\n+import javax.ws.rs.ext.Provider;\n+import java.util.concurrent.TimeUnit;\n+\n+@Provider\n+public class InstrumentedResourceMethodDispatchProvider extends EntityParamDispatchProvider {\n+    private static class TimedRequestDispatcher implements RequestDispatcher {\n+        private final RequestDispatcher underlying;\n+        private final TimerMetric timer;\n+\n+        private TimedRequestDispatcher(RequestDispatcher underlying, TimerMetric timer) {\n+            this.underlying = underlying;\n+            this.timer = timer;\n+        }\n+\n+        @Override\n+        public void dispatch(Object resource, HttpContext httpContext) {\n+            final TimerContext context = timer.time();\n+            try {\n+                underlying.dispatch(resource, httpContext);\n+            } finally {\n+                context.stop();\n+            }\n+        }\n+    }\n+\n+    private static class MeteredRequestDispatcher implements RequestDispatcher {\n+        private final RequestDispatcher underlying;\n+        private final MeterMetric meter;\n+\n+        private MeteredRequestDispatcher(RequestDispatcher underlying, MeterMetric meter) {\n+            this.underlying = underlying;\n+            this.meter = meter;\n+        }\n+\n+        @Override\n+        public void dispatch(Object resource, HttpContext httpContext) {\n+            meter.mark();\n+            underlying.dispatch(resource, httpContext);\n+        }\n+    }\n+\n+    private static class ExceptionMeteredRequestDispatcher implements RequestDispatcher {\n+        private final RequestDispatcher underlying;\n+        private final MeterMetric meter;\n+        private final Class<? extends Throwable> exceptionClass;\n+\n+        private ExceptionMeteredRequestDispatcher(RequestDispatcher underlying,\n+                                                  MeterMetric meter,\n+                                                  Class<? extends Throwable> exceptionClass) {\n+            this.underlying = underlying;\n+            this.meter = meter;\n+            this.exceptionClass = exceptionClass;\n+        }\n+\n+        @Override\n+        public void dispatch(Object resource, HttpContext httpContext) {\n+            try {\n+                underlying.dispatch(resource, httpContext);\n+            } catch (Throwable e) {\n+                if (exceptionClass.isAssignableFrom(e.getClass())) {\n+                    meter.mark();\n+                }\n+                Unsafe.getUnsafe().throwException(e);\n+            }\n+        }\n+    }\n+\n+\n+    @Override\n+    public RequestDispatcher create(AbstractResourceMethod method, JavaMethodInvoker invoker) {\n+        RequestDispatcher dispatcher = super.create(method, invoker);\n+        if (dispatcher == null) {\n+            return null;\n+        }\n+\n+        if (method.getMethod().isAnnotationPresent(Timed.class)) {\n+            final Timed annotation = method.getMethod().getAnnotation(Timed.class);\n+            final TimerMetric timer = Metrics.newTimer(method.getDeclaringResource().getResourceClass(),\n+                                                       annotation.name() == null ?\n+                                                               method.getMethod().getName() : annotation.name(),\n+                                                       annotation.durationUnit() == null ?\n+                                                               TimeUnit.MILLISECONDS : annotation.durationUnit(),\n+                                                       annotation.rateUnit() == null ?\n+                                                               TimeUnit.SECONDS : annotation.rateUnit());\n+            dispatcher = new TimedRequestDispatcher(dispatcher, timer);\n+        }\n+\n+        if (method.getMethod().isAnnotationPresent(Metered.class)) {\n+            final Metered annotation = method.getMethod().getAnnotation(Metered.class);\n+            final MeterMetric meter = Metrics.newMeter(method.getDeclaringResource().getResourceClass(),\n+                                                       annotation.name() == null ?\n+                                                               method.getMethod().getName() : annotation.name(),\n+                                               ",
    "Added tag jdk9 - b82 for changeset acf15a2d7492": "diff --git a/jaxp/.hgtags b/jaxp/.hgtags\nindex 69ba311a2e4..5fc2d696213 100644\n--- a/jaxp/.hgtags\n+++ b/jaxp/.hgtags\n@@ -324,3 +324,4 @@ be357705874c4ba1a69c38fb211e5e31e35bf9cb jdk9-b77\n cf809edc840ff7546677d38b13ebd8b3cae2bbda jdk9-b79\n f464f9b2fb1178f6a957e5730b4b5252c6149ed9 jdk9-b80\n 6a418934997fc4b56664b88f8417e2f0fe658091 jdk9-b81\n+53fe3c103b6fdf48e2b2676c0c4818ef5a10fa21 jdk9-b82",
    "Fix the stripping of span strings": "diff --git a/Android/DevSample/buildSrc/src/main/groovy/net/wequick/gradle/aapt/AssetEditor.groovy b/Android/DevSample/buildSrc/src/main/groovy/net/wequick/gradle/aapt/AssetEditor.groovy\nindex c50c774..616b02b 100644\n--- a/Android/DevSample/buildSrc/src/main/groovy/net/wequick/gradle/aapt/AssetEditor.groovy\n+++ b/Android/DevSample/buildSrc/src/main/groovy/net/wequick/gradle/aapt/AssetEditor.groovy\n@@ -115,7 +115,6 @@ public class AssetEditor extends CppHexEditor {\n         s.styles = [] // {name, firstChar, lastChar}\n         s.stringsSize = 0\n         s.stringLens = []\n-        s.styleLens = []\n         s.isUtf8 = (s.flags & ResStringFlag.UTF8_FLAG) != 0\n \n         // Read offsets\n@@ -455,6 +454,10 @@ public class AssetEditor extends CppHexEditor {\n             sp.styles = styles\n             sp.styleOffsets = styleOffsets\n             styleSizeDiff = sp.styleSize - styleOffset\n+            if (styleCount == 0) {\n+                styleSizeDiff += ResStringPoolSpan.END_SPAN.size()\n+            }\n+            sp.styleSize = styleOffset\n         }\n \n         entryDiff += sp.stringCount - stringCount\n@@ -480,9 +483,12 @@ public class AssetEditor extends CppHexEditor {\n         sp.stringPadding = newStringPadding\n \n         // Adjust styles start position\n+        d += styleSizeDiff\n    ",
    "add expensive flags to phrase / same element .": "diff --git a/searchcore/src/tests/proton/matching/same_element_builder/same_element_builder_test.cpp b/searchcore/src/tests/proton/matching/same_element_builder/same_element_builder_test.cpp\nindex 0fc84e26bba..6583f3bc00b 100644\n--- a/searchcore/src/tests/proton/matching/same_element_builder/same_element_builder_test.cpp\n+++ b/searchcore/src/tests/proton/matching/same_element_builder/same_element_builder_test.cpp\n@@ -90,7 +90,7 @@ struct BuilderFixture {\n     FakeRequestContext req_ctx;\n     FakeSearchContext  ctx;\n     SameElementBuilder builder;\n-    BuilderFixture() : req_ctx(), ctx(), builder(req_ctx, ctx) {\n+    BuilderFixture() : req_ctx(), ctx(), builder(req_ctx, ctx, false) {\n         ctx.attr().tag(\"attr\");\n         ctx.addIdx(0).idx(0).getFake().tag(\"idx\");\n     }\ndiff --git a/searchcore/src/vespa/searchcore/proton/matching/blueprintbuilder.cpp b/searchcore/src/vespa/searchcore/proton/matching/blueprintbuilder.cpp\nindex 656e49d7569..380aeb82ad2 100644\n--- a/searchcore/src/vespa/searchcore/proton/matching/blueprintbuilder.cpp\n+++ b/searchcore/src/vespa/searchcore/proton/matching/blueprintbuilder.cpp\n@@ -102,7 +102,7 @@ private:\n     }\n \n     void buildSameElement(ProtonSameElement &n) {\n-        SameElementBuilder builder(_requestContext, _context);\n+        SameElementBuilder builder(_requestContext, _context, n.is_expensive());\n         for (search::query::Node *node : n.getChildren()) {\n             builder.add_child(*node);\n         }\ndiff --git a/searchcore/src/vespa/searchcore/proton/matching/same_element_builder.cpp b/searchcore/src/vespa/searchcore/proton/matching/same_element_builder.cpp\nindex 16c86e8a4f5..8e012c52b5f 100644\n--- a/searchcore/src/vespa/searchcore/proton/matching/same_element_builder.cpp\n+++ b/searchcore/src/vespa/searchcore/proton/matching/same_element_builder.cpp\n@@ -71,10 +71,10 @@ public:\n \n } // namespace proton::matching::<unnamed>\n \n-SameElementBuilder::SameElementBuilder(const search::queryeval::IRequestContext &requestContext, ISearchContext &context)\n+SameElementBuilder::SameElementBuilder(const search::queryeval::IRequestContext &requestContext, ISearchContext &context, bool expensive)\n     : _requestContext(requestContext),\n       _context(context),\n-      _result(std::make_unique<SameElementBlueprint>())\n+      _result(std::make_unique<SameElementBlueprint>(expensive))\n {\n }\n \ndiff --git a/searchcore/src/vespa/searchcore/proton/matching/same_element_builder.h b/searchcore/src/vespa/searchcore/proton/matching/same_element_builder.h\nindex 945bb9a97f6..b9cfff8a9c0 100644\n--- a/searchcore/src/vespa/searchcore/proton/matching/same_element_builder.h\n+++ b/searchcore/src/vespa/searchcore/proton/matching/same_element_builder.h\n@@ -16,7 +16,7 @@ private:\n     ISearchContext                                          &_context;\n     std::unique_ptr<search::queryeval::SameElementBlueprint> _result;\n public:\n-    SameElementBuilder(const search::queryeval::IRequestContext &requestContext, ISearchContext &context);\n+    SameElementBuilder(const search::queryeval::IRequestContext &requestContext, ISearchContext &context, bool expensive);\n     void add_child(search::query::Node &node);\n     search::queryeval::Blueprint::UP build();\n };\ndiff --git a/searchlib/src/tests/queryeval/same_element/same_element_test.cpp b/searchlib/src/tests/queryeval/same_element/same_element_test.cpp\nindex 45ebdd78fb3..6ec379140c0 100644\n--- a/searchlib/src/tests/queryeval/same_element/same_element_test.cpp\n+++ b/searchlib/src/tests/queryeval/same_element/same_element_test.cpp\n@@ -15,7 +15,7 @@ using namespace search::queryeval;\n using search::attribute::ElementIterator;\n \n std::unique_ptr<SameElementBlueprint> make_blueprint(const std::vector<FakeResult> &children, bool fake_attr = false) {\n-    auto result = std::make_unique<SameElementBlueprint>();\n+    auto result = std::make_unique<SameElementBlueprint>(false);\n     for (size_t i = 0; i < children.size(); ++i) {\n         uint32_t field_id = i;\n         vespalib::string field_name = vespalib::make_string(\"f%u\", field_id);\ndiff --git a/searchlib/src/tests/queryeval/simple_phrase/simple_phrase_test.cpp b/searchlib/src/tests/queryeval/simple_phrase/simple_phrase_test.cpp\nindex aad448f7fe1..f5ce8a9608b 100644\n--- a/searchlib/src/tests/queryeval/simple_phrase/simple_phrase_test.cpp\n+++ b/searchlib/src/tests/queryeval/simple_phrase/simple_phrase_test.cpp\n@@ -173,7 +173,7 @@ PhraseSearchTest::PhraseSearchTest(bool expiredDoom)\n     : _requestContext(nullptr, expiredDoom ? 0 : std::numeric_limits<int64_t>::max()),\n       _index(),\n       _phrase_fs(field, fieldId, phrase_handle),\n-      _phrase(_phrase_fs, _requestContext),\n+      _phrase(_phrase_fs, _requestContext, false),\n       _children(),\n       _md(MatchData::makeTestInstance(100, 10)),\n       _order(),\n@@ -301,7 +301,7 @@ Test::requireThatBlueprintExposesFieldWithEstimate()\n {\n     FakeRequestContext requestContext;\n     FieldSpec f(\"foo\", 1, 1);\n-    SimplePhraseBlueprint phrase(f, requestContext);\n+    SimplePhraseBlueprint phrase(f, requestContext, false);\n     ASSERT_TRUE(phrase.getState().numFields() == 1);\n     EXPECT_EQUAL(f.getFieldId(), phrase.getState().field(0).getFieldId());\n     EXPECT_EQUAL(f.getHandle(), phrase.getState().field(0).getHandle());\n@@ -327,7 +327,7 @@ Test::requireThatBlueprintForcesPositionDataOnChildren()\n {\n     FakeRequestContext requestContext;\n     FieldSpec f(\"foo\", 1, 1, true);\n-    SimplePhraseBlueprint phrase(f, requestContext);\n+    SimplePhraseBlueprint phrase(f, requestContext, false);\n     EXPECT_TRUE(f.isFilter());\n     EXPECT_TRUE(!phrase.getNextChildField(f).isFilter());\n }\ndiff --git a/searchlib/src/vespa/searchlib/query/tree/intermediatenodes.h b/searchlib/src/vespa/searchlib/query/tree/intermediatenodes.h\nindex 6d643d951f0..3bca4f041b3 100644\n--- a/searchlib/src/vespa/searchlib/query/tree/intermediatenodes.h\n+++ b/searchlib/src/vespa/searchlib/query/tree/intermediatenodes.h\n@@ -99,17 +99,30 @@ class ONear : public QueryNodeMixin<ONear, Intermediate>\n class Phrase : public QueryNodeMixin<Phrase, Intermediate>, public Term {\n public:\n     Phrase(const vespalib::string &view, int32_t id, Weight weight)\n-        : Term(view, id, weight) {}\n+        : Term(view, id, weight), _expensive(false) {}\n     virtual ~Phrase() = 0;\n+    Phrase &set_expensive(bool value) {\n+        _expensive = value;\n+        return *this;\n+    }\n+    bool is_expensive() const { return _expensive; }\n+private:\n+    bool _expensive;\n };\n \n class SameElement : public QueryNodeMixin<SameElement, Intermediate> {\n public:\n-    SameElement(const vespalib::string &view) : _view(view) {}\n+    SameElement(const vespalib::string &view) : _view(view), _expensive(false) {}\n     virtual ~SameElement() = 0;\n     const vespalib::string & getView() const { return _view; }\n+    SameElement &set_expensive(bool value) {\n+        _expensive = value;\n+        return *this;\n+    }\n+    bool is_expensive() const { return _expensive; }\n private:\n     vespalib::string _view;\n+    bool _expensive;\n };\n \n class WeightedSetTerm : public QueryNodeMixin<WeightedSetTerm, Intermediate>, public Term {\ndiff --git a/searchlib/src/vespa/searchlib/query/tree/queryreplicator.h b/searchlib/src/vespa/searchlib/query/tree/queryreplicator.h\nindex 7bf6c17f136..e7c3fd8c73b 100644\n--- a/searchlib/src/vespa/searchlib/query/tree/queryreplicator.h\n+++ b/searchlib/src/vespa/searchlib/query/tree/queryreplicator.h\n@@ -70,12 +70,12 @@ private:\n \n     void visit(Phrase &node) override {\n         replicate(node, _builder.addPhrase(node.getChildren().size(), node.getView(),\n-                                           node.getId(), node.getWeight()));\n+                                           node.getId(), node.getWeight()).set_expensive(node.is_expensive()));\n         visitNodes(node.getChildren());\n     }\n \n     void visit(SameElement &node) override {\n-        _builder.addSameElement(node.getChildren().size(), node.getView());\n+        _builder.addSameElement(node.getChildren().size(), node.getView()).set_expensive(node.is_expensive());\n         visitNodes(node.getChildren());\n     }\n \n@@ -107,8 +107,7 @@ private:\n     }\n \n     void replicate(const Term &original, Term &replica) {\n-        replica.setTermIndex(original.getTermIndex());\n-        replica.setRanked(original.isRanked());\n+        replica.setStateFrom(original);\n     }\n \n     void visit(NumberTerm &node) override {\ndiff --git a/searchlib/src/vespa/searchlib/queryeval/create_blueprint_visitor_helper.cpp b/searchlib/src/vespa/searchlib/queryeval/create_blueprint_visitor_helper.cpp\nindex e3588d88ccb..3731b2ff6a8 100644\n--- a/searchlib/src/vespa/searchlib/queryeval/create_blueprint_visitor_helper.cpp\n+++ b/searchlib/src/vespa/searchlib/queryeval/create_blueprint_visitor_helper.cpp\n@@ -31,7 +31,7 @@ CreateBlueprintVisitorHelper::getResult()\n \n void\n CreateBlueprintVisitorHelper::visitPhrase(query::Phrase &n) {\n-    auto phrase = std::make_unique<SimplePhraseBlueprint>(_field, _requestContext);\n+    auto phrase = std::make_unique<SimplePhraseBlueprint>(_field, _requestContext, n.is_expensive());\n     for (const query::Node * child : n.getChildren()) {\n         FieldSpecList fields;\n         fields.add(phrase->getNextChildField(_field));\ndiff --git a/searchlib/src/vespa/searchlib/queryeval/same_element_blueprint.cpp b/searchlib/src/vespa/searchlib/queryeval/same_element_blueprint.cpp\nindex fa9cc82975f..2376b129fc1 100644\n--- a/searchlib/src/vespa/searchlib/queryeval/same_element_blueprint.cpp\n+++ b/searchlib/src/vespa/searchlib/queryeval/same_element_blueprint.cpp\n@@ -10,12 +10,15 @@\n \n namespace search::queryeval {\n \n-SameElementBlueprint::SameElementBlueprint()\n+SameElementBlueprint::SameElementBlueprint(bool expensive)\n     : ComplexLeafBlueprint(FieldSpecBaseList()),\n       _estimate(),\n       _layout(),\n       _terms()\n {\n+    if (expensive) {\n+        set_cost_tier(State::COST_TIER_EXPENSIVE);\n+    }\n }\n \n SameElementBlueprint::~SameElementBlueprint() = default;\ndiff --git a/searchlib/src/vespa/searchlib/queryeval/same_element_blueprint.h b/searchlib/src/vespa/searchlib/queryeval/same_element_blueprint.h\nindex decb518a7c9..3b29e518aa1 100644\n--- a/searchlib/src/vespa/searchlib/queryeval/same_element_blueprint.h\n+++ b/searchlib/src/vespa/searchlib/queryeval/same_element_blueprint.h\n@@ -17,7 +17,7 @@ private:\n     std::vector<Blueprint::UP> _terms;\n \n public:\n-    SameElementBlueprint();\n+    SameElementBlueprint(bool expensive);\n     SameElementBlueprint(const SameElementBlueprint &) = delete;\n     SameElementBlueprint &operator=(const SameElementBlueprint &) = delete;\n     ~SameElementBlueprint();\ndiff --git a/searchlib/src/vespa/searchlib/queryeval/simple_phrase_blueprint.cpp b/searchlib/src/vespa/searchlib/queryeval/simple_phrase_blueprint.cpp\nindex ed7690f605f..7429553d889 100644\n--- a/searchlib/src/vespa/searchlib/queryeval/simple_phrase_blueprint.cpp\n+++ b/searchlib/src/vespa/searchlib/queryeval/simple_phrase_blueprint.cpp\n@@ -9,7 +9,7 @@\n \n namespace search::queryeval {\n \n-SimplePhraseBlueprint::SimplePhraseBlueprint(const FieldSpec &field, const IRequestContext & requestContext)\n+SimplePhraseBlueprint::SimplePhraseBlueprint(const FieldSpec &field, const IRequestContext & requestContext, bool expensive)\n     : ComplexLeafBlueprint(field),\n       _doom(requestContext.getSoftDoom()),\n       _field(field),\n@@ -17,6 +17,9 @@ SimplePhraseBlueprint::SimplePhraseBlueprint(const FieldSpec &field, const IRequ\n       _layout(),\n       _terms()\n {\n+    if (expensive) {\n+        set_cost_tier(State::COST_TIER_EXPENSIVE);\n+    }\n }\n \n SimplePhraseBlueprint::~SimplePhraseBlueprint()\ndiff --git a/searchlib/src/vespa/searchlib/queryeval/simple_phrase_blueprint.h b/searchlib/src/vespa/searchlib/queryeval/simple_phrase_blueprint.h\nindex 26668f85cb7..c313c0b38ad 100644\n--- a/searchlib/src/vespa/searchlib/queryeval/simple_phrase_blueprint.h\n+++ b/searchlib/src/vespa/searchlib/queryeval/simple_phrase_blueprint.h\n@@ -23,7 +23,7 @@ private:\n     SimplePhraseBlueprint &operator=(const SimplePhraseBlueprint &); // disabled\n \n public:\n-    SimplePhraseBlueprint(const FieldSpec &field, const IRequestContext & requestContext);\n+    SimplePhraseBlueprint(const FieldSpec &field, const IRequestContext & requestContext, bool expensive);\n     ~SimplePhraseBlueprint();\n \n     // used by create visitor",
    "Add ResolvedJavaMethod . isSynchronized": "diff --git a/graal/com.oracle.graal.api.meta.test/src/com/oracle/graal/api/meta/test/TestResolvedJavaMethod.java b/graal/com.oracle.graal.api.meta.test/src/com/oracle/graal/api/meta/test/TestResolvedJavaMethod.java\nindex 537885902b1..2b4370188fa 100644\n--- a/graal/com.oracle.graal.api.meta.test/src/com/oracle/graal/api/meta/test/TestResolvedJavaMethod.java\n+++ b/graal/com.oracle.graal.api.meta.test/src/com/oracle/graal/api/meta/test/TestResolvedJavaMethod.java\n@@ -127,6 +127,18 @@ public class TestResolvedJavaMethod extends MethodUniverse {\n         }\n     }\n \n+    @Test\n+    public void isSynchronizedTest() {\n+        for (Map.Entry<Method, ResolvedJavaMethod> e : methods.entrySet()) {\n+            ResolvedJavaMethod m = e.getValue();\n+            assertEquals(Modifier.isSynchronized(e.getKey().getModifiers()), m.isSynchronized());\n+        }\n+        for (Map.Entry<Constructor<?>, ResolvedJavaMethod> e : constructors.entrySet()) {\n+            ResolvedJavaMethod m = e.getValue();\n+            assertEquals(Modifier.isSynchronized(e.getKey().getModifiers()), m.isSynchronized());\n+        }\n+    }\n+\n     @Test\n     public void canBeStaticallyBoundTest() {\n         for (Map.Entry<Method, ResolvedJavaMethod> e : methods.entrySet()) {\ndiff --git a/graal/com.oracle.graal.api.meta/src/com/oracle/graal/api/meta/ResolvedJavaMethod.java b/graal/com.oracle.graal.api.meta/src/com/oracle/graal/api/meta/ResolvedJavaMethod.java\nindex 77497796ca0..4f3fd34308d 100644\n--- a/graal/com.oracle.graal.api.meta/src/com/oracle/graal/api/meta/ResolvedJavaMethod.java\n+++ b/graal/com.oracle.graal.api.meta/src/com/oracle/graal/api/meta/ResolvedJavaMethod.java\n@@ -115,6 +115,8 @@ public interface ResolvedJavaMethod extends JavaMethod, InvokeTarget {\n      */\n     boolean canBeStaticallyBound();\n \n+    boolean isSynchronized();\n+\n     /**\n      * Returns the list of exception handlers for this method.\n      */\ndiff --git a/graal/com.oracle.graal.baseline/src/com/oracle/graal/baseline/BaselineBytecodeParser.java b/graal/com.oracle.graal.baseline/src/com/oracle/graal/baseline/BaselineBytecodeParser.java\nindex ae85ab093eb..5c30f46a9c0 100644\n--- a/graal/com.oracle.graal.baseline/src/com/oracle/graal/baseline/BaselineBytecodeParser.java\n+++ b/graal/com.oracle.graal.baseline/src/com/oracle/graal/baseline/BaselineBytecodeParser.java\n@@ -23,7 +23,6 @@\n package com.oracle.graal.baseline;\n \n import static com.oracle.graal.compiler.common.GraalOptions.*;\n-import static java.lang.reflect.Modifier.*;\n \n import java.util.*;\n \n@@ -106,7 +105,7 @@ public class BaselineBytecodeParser extends AbstractBytecodeParser<Value, LIRFra\n                 }\n             }\n \n-            if (isSynchronized(method.getModifiers())) {\n+            if (method.isSynchronized()) {\n                 throw GraalInternalError.unimplemented(\"Handle synchronized methods\");\n             }\n \ndiff --git a/graal/com.oracle.graal.hotspot/src/com/oracle/graal/hotspot/meta/HotSpotResolvedJavaMethod.java b/graal/com.oracle.graal.hotspot/src/com/oracle/graal/hotspot/meta/HotSpotResolvedJavaMethod.java\nindex 4e338469873..44905496d3c 100644\n--- a/graal/com.oracle.graal.hotspot/src/com/oracle/graal/hotspot/meta/HotSpotResolvedJavaMethod.java\n+++ b/graal/com.oracle.graal.hotspot/src/com/oracle/graal/hotspot/meta/HotSpotResolvedJavaMethod.java\n@@ -487,6 +487,10 @@ public final class HotSpotResolvedJavaMethod extends HotSpotMethod implements Re\n         return ((getModifiers() & mask) == Modifier.PUBLIC) && getDeclaringClass().isInterface();\n     }\n \n+    public boolean isSynchronized() {\n+        return Modifier.isSynchronized(getModifiers());\n+    }\n+\n     @Override\n     public Type[] getGenericParameterTypes() {\n         if (isConstructor()) {\ndiff --git a/graal/com.oracle.graal.java/src/com/oracle/graal/java/GraphBuilderPhase.java b/graal/com.oracle.graal.java/src/com/oracle/graal/java/GraphBuilderPhase.java\nindex e833f16694f..c5e6bb02624 100644\n--- a/graal/com.oracle.graal.java/src/com/oracle/graal/java/GraphBuilderPhase.java\n+++ b/graal/com.oracle.graal.java/src/com/oracle/graal/java/GraphBuilderPhase.java\n@@ -28,7 +28,6 @@ import static com.oracle.graal.bytecode.Bytecodes.*;\n import static com.oracle.graal.compiler.common.GraalOptions.*;\n import static java.lang.reflect.Modifier.*;\n \n-import java.lang.reflect.*;\n import java.util.*;\n \n import com.oracle.graal.api.code.*;\n@@ -220,7 +219,7 @@ public class GraphBuilderPhase extends BasePhase<HighTierContext> {\n                     liveness = blockMap.liveness;\n \n                     lastInstr = currentGraph.start();\n-                    if (isSynchronized(method.getModifiers())) {\n+                    if (method.isSynchronized()) {\n                         // add a monitor enter to the start block\n                         currentGraph.start().setStateAfter(frameState.create(BytecodeFrame.BEFORE_BCI));\n                         methodSynchronizedObject = synchronizedObject(frameState, method);\n@@ -290,7 +289,7 @@ public class GraphBuilderPhase extends BasePhase<HighTierContext> {\n                     unwindBlock = new ExceptionDispatchBlock();\n                     unwindBlock.startBci = -1;\n                     unwindBlock.endBci = -1;\n-                    unwindBlock.deoptBci = Modifier.isSynchronized(method.getModifiers()) ? BytecodeFrame.UNWIND_BCI : BytecodeFrame.AFTER_EXCEPTION_BCI;\n+                    unwindBlock.deoptBci = method.isSynchronized() ? BytecodeFrame.UNWIND_BCI : BytecodeFrame.AFTER_EXCEPTION_BCI;\n                     unwindBlock.setId(Integer.MAX_VALUE);\n                 }\n                 return unwindBlock;\n@@ -1162,7 +1161,7 @@ public class GraphBuilderPhase extends BasePhase<HighTierContext> {\n             }\n \n             private void synchronizedEpilogue(int bci, ValueNode returnValue) {\n-                if (Modifier.isSynchronized(method.getModifiers())) {\n+                if (method.isSynchronized()) {\n                     MonitorExitNode monitorExit = genMonitorExit(methodSynchronizedObject, returnValue);\n                     if (returnValue != null) {\n                         frameState.push(returnValue.getKind(), returnValue);"
}
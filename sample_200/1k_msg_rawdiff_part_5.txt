{
    "Remove \\\" v \\\" from release and tag name": "diff --git a/release.gradle b/release.gradle\nindex ab3472c..c1d8557 100644\n--- a/release.gradle\n+++ b/release.gradle\n@@ -15,8 +15,8 @@ task commitRelease(type: Exec) {\n task createGithubRelease(type: Exec) {\n     def versionName = getVersionName()\n     def jsonData = JsonOutput.toJson([\n-            tag_name: \"v$versionName\",\n-            name    : \"v$versionName\",\n+            tag_name: \"$versionName\",\n+            name    : \"$versionName\",\n             draft   : true])\n     commandLine \"curl\", \"--data\", jsonData, \"-u\", \"amlcurran:\" + System.getenv('GITHUB_TOKEN'), \"https://api.github.com/repos/amlcurran/ShowcaseView/releases\"\n }",
    "add indices to improve performance of history cleanup .": "diff --git a/distro/sql-script/upgrade/db2_engine_7.7_patch_7.7.4_to_7.7.5.sql b/distro/sql-script/upgrade/db2_engine_7.7_patch_7.7.4_to_7.7.5.sql\nnew file mode 100644\nindex 0000000000..404dd4378f\n--- /dev/null\n+++ b/distro/sql-script/upgrade/db2_engine_7.7_patch_7.7.4_to_7.7.5.sql\n@@ -0,0 +1,14 @@\n+-- insert indices for history cleanup - https://app.camunda.com/jira/browse/CAM-8184 --\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n\\ No newline at end of file\ndiff --git a/distro/sql-script/upgrade/h2_engine_7.7_patch_7.7.4_to_7.7.5.sql b/distro/sql-script/upgrade/h2_engine_7.7_patch_7.7.4_to_7.7.5.sql\nnew file mode 100644\nindex 0000000000..404dd4378f\n--- /dev/null\n+++ b/distro/sql-script/upgrade/h2_engine_7.7_patch_7.7.4_to_7.7.5.sql\n@@ -0,0 +1,14 @@\n+-- insert indices for history cleanup - https://app.camunda.com/jira/browse/CAM-8184 --\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n\\ No newline at end of file\ndiff --git a/distro/sql-script/upgrade/mariadb_engine_7.7_patch_7.7.4_to_7.7.5.sql b/distro/sql-script/upgrade/mariadb_engine_7.7_patch_7.7.4_to_7.7.5.sql\nnew file mode 100644\nindex 0000000000..404dd4378f\n--- /dev/null\n+++ b/distro/sql-script/upgrade/mariadb_engine_7.7_patch_7.7.4_to_7.7.5.sql\n@@ -0,0 +1,14 @@\n+-- insert indices for history cleanup - https://app.camunda.com/jira/browse/CAM-8184 --\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n\\ No newline at end of file\ndiff --git a/distro/sql-script/upgrade/mssql_engine_7.7_patch_7.7.4_to_7.7.5.sql b/distro/sql-script/upgrade/mssql_engine_7.7_patch_7.7.4_to_7.7.5.sql\nnew file mode 100644\nindex 0000000000..404dd4378f\n--- /dev/null\n+++ b/distro/sql-script/upgrade/mssql_engine_7.7_patch_7.7.4_to_7.7.5.sql\n@@ -0,0 +1,14 @@\n+-- insert indices for history cleanup - https://app.camunda.com/jira/browse/CAM-8184 --\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n\\ No newline at end of file\ndiff --git a/distro/sql-script/upgrade/mysql_engine_7.7_patch_7.7.4_to_7.7.5.sql b/distro/sql-script/upgrade/mysql_engine_7.7_patch_7.7.4_to_7.7.5.sql\nnew file mode 100644\nindex 0000000000..404dd4378f\n--- /dev/null\n+++ b/distro/sql-script/upgrade/mysql_engine_7.7_patch_7.7.4_to_7.7.5.sql\n@@ -0,0 +1,14 @@\n+-- insert indices for history cleanup - https://app.camunda.com/jira/browse/CAM-8184 --\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n\\ No newline at end of file\ndiff --git a/distro/sql-script/upgrade/oracle_engine_7.7_patch_7.7.4_to_7.7.5.sql b/distro/sql-script/upgrade/oracle_engine_7.7_patch_7.7.4_to_7.7.5.sql\nnew file mode 100644\nindex 0000000000..404dd4378f\n--- /dev/null\n+++ b/distro/sql-script/upgrade/oracle_engine_7.7_patch_7.7.4_to_7.7.5.sql\n@@ -0,0 +1,14 @@\n+-- insert indices for history cleanup - https://app.camunda.com/jira/browse/CAM-8184 --\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n\\ No newline at end of file\ndiff --git a/distro/sql-script/upgrade/postgres_engine_7.7_patch_7.7.4_to_7.7.5.sql b/distro/sql-script/upgrade/postgres_engine_7.7_patch_7.7.4_to_7.7.5.sql\nnew file mode 100644\nindex 0000000000..404dd4378f\n--- /dev/null\n+++ b/distro/sql-script/upgrade/postgres_engine_7.7_patch_7.7.4_to_7.7.5.sql\n@@ -0,0 +1,14 @@\n+-- insert indices for history cleanup - https://app.camunda.com/jira/browse/CAM-8184 --\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n\\ No newline at end of file\ndiff --git a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.db2.create.history.sql b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.db2.create.history.sql\nindex d0b6cf3a6b..3fc5f04530 100644\n--- a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.db2.create.history.sql\n+++ b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.db2.create.history.sql\n@@ -292,6 +292,8 @@ create index ACT_IDX_HI_ACT_INST_PROC_DEF_KEY on ACT_HI_ACTINST(PROC_DEF_KEY_);\n \n create index ACT_IDX_HI_TASK_INST_TENANT_ID on ACT_HI_TASKINST(TENANT_ID_);\n create index ACT_IDX_HI_TASK_INST_PROC_DEF_KEY on ACT_HI_TASKINST(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n \n create index ACT_IDX_HI_DETAIL_PROC_INST on ACT_HI_DETAIL(PROC_INST_ID_);\n create index ACT_IDX_HI_DETAIL_ACT_INST on ACT_HI_DETAIL(ACT_INST_ID_);\n@@ -302,33 +304,44 @@ create index ACT_IDX_HI_DETAIL_NAME on ACT_HI_DETAIL(NAME_);\n create index ACT_IDX_HI_DETAIL_TASK_ID on ACT_HI_DETAIL(TASK_ID_);\n create index ACT_IDX_HI_DETAIL_TENANT_ID on ACT_HI_DETAIL(TENANT_ID_);\n create index ACT_IDX_HI_DETAIL_PROC_DEF_KEY on ACT_HI_DETAIL(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_IDENT_LNK_USER on ACT_HI_IDENTITYLINK(USER_ID_);\n create index ACT_IDX_HI_IDENT_LNK_GROUP on ACT_HI_IDENTITYLINK(GROUP_ID_);\n create index ACT_IDX_HI_IDENT_LNK_TENANT_ID on ACT_HI_IDENTITYLINK(TENANT_ID_);\n create index ACT_IDX_HI_IDENT_LNK_PROC_DEF_KEY on ACT_HI_IDENTITYLINK(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n \n create index ACT_IDX_HI_PROCVAR_PROC_INST on ACT_HI_VARINST(PROC_INST_ID_);\n create index ACT_IDX_HI_PROCVAR_NAME_TYPE on ACT_HI_VARINST(NAME_, VAR_TYPE_);\n create index ACT_IDX_HI_CASEVAR_CASE_INST on ACT_HI_VARINST(CASE_INST_ID_);\n create index ACT_IDX_HI_VAR_INST_TENANT_ID on ACT_HI_VARINST(TENANT_ID_);\n create index ACT_IDX_HI_VAR_INST_PROC_DEF_KEY on ACT_HI_VARINST(PROC_DEF_KEY_);\n-\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_INCIDENT_TENANT_ID on ACT_HI_INCIDENT(TENANT_ID_);\n create index ACT_IDX_HI_INCIDENT_PROC_DEF_KEY on ACT_HI_INCIDENT(PROC_DEF_KEY_);\n-\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n \n create index ACT_IDX_HI_JOB_LOG_PROCINST on ACT_HI_JOB_LOG(PROCESS_INSTANCE_ID_);\n create index ACT_IDX_HI_JOB_LOG_PROCDEF on ACT_HI_JOB_LOG(PROCESS_DEF_ID_);\n create index ACT_IDX_HI_JOB_LOG_TENANT_ID on ACT_HI_JOB_LOG(TENANT_ID_);\n create index ACT_IDX_HI_JOB_LOG_JOB_DEF_ID on ACT_HI_JOB_LOG(JOB_DEF_ID_);\n create index ACT_IDX_HI_JOB_LOG_PROC_DEF_KEY on ACT_HI_JOB_LOG(PROCESS_DEF_KEY_);\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n \n create index ACT_HI_EXT_TASK_LOG_PROCINST on ACT_HI_EXT_TASK_LOG(PROC_INST_ID_);\n create index ACT_HI_EXT_TASK_LOG_PROCDEF on ACT_HI_EXT_TASK_LOG(PROC_DEF_ID_);\n create index ACT_HI_EXT_TASK_LOG_PROC_DEF_KEY on ACT_HI_EXT_TASK_LOG(PROC_DEF_KEY_);\n create index ACT_HI_EXT_TASK_LOG_TENANT_ID on ACT_HI_EXT_TASK_LOG(TENANT_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n \n create index ACT_IDX_HI_OP_LOG_PROCINST on ACT_HI_OP_LOG(PROC_INST_ID_);\n create index ACT_IDX_HI_OP_LOG_PROCDEF on ACT_HI_OP_LOG(PROC_DEF_ID_);\n+\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\n+\n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\n\\ No newline at end of file\ndiff --git a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.h2.create.history.sql b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.h2.create.history.sql\nindex 598235780e..128177edfc 100644\n--- a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.h2.create.history.sql\n+++ b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.h2.create.history.sql\n@@ -297,35 +297,49 @@ create index ACT_IDX_HI_DETAIL_NAME on ACT_HI_DETAIL(NAME_);\n create index ACT_IDX_HI_DETAIL_TASK_ID on ACT_HI_DETAIL(TASK_ID_);\n create index ACT_IDX_HI_DETAIL_TENANT_ID on ACT_HI_DETAIL(TENANT_ID_);\n create index ACT_IDX_HI_DETAIL_PROC_DEF_KEY on ACT_HI_DETAIL(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_IDENT_LNK_USER on ACT_HI_IDENTITYLINK(USER_ID_);\n create index ACT_IDX_HI_IDENT_LNK_TENANT_ID on ACT_HI_IDENTITYLINK(TENANT_ID_);\n create index ACT_IDX_HI_IDENT_LNK_GROUP on ACT_HI_IDENTITYLINK(GROUP_ID_);\n create index ACT_IDX_HI_IDENT_LNK_PROC_DEF_KEY on ACT_HI_IDENTITYLINK(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n \n create index ACT_IDX_HI_TASK_INST_TENANT_ID on ACT_HI_TASKINST(TENANT_ID_);\n create index ACT_IDX_HI_TASK_INST_PROC_DEF_KEY on ACT_HI_TASKINST(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n \n create index ACT_IDX_HI_PROCVAR_PROC_INST on ACT_HI_VARINST(PROC_INST_ID_);\n create index ACT_IDX_HI_PROCVAR_NAME_TYPE on ACT_HI_VARINST(NAME_, VAR_TYPE_);\n create index ACT_IDX_HI_CASEVAR_CASE_INST on ACT_HI_VARINST(CASE_INST_ID_);\n create index ACT_IDX_HI_VAR_INST_TENANT_ID on ACT_HI_VARINST(TENANT_ID_);\n create index ACT_IDX_HI_VAR_INST_PROC_DEF_KEY on ACT_HI_VARINST(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_INCIDENT_TENANT_ID on ACT_HI_INCIDENT(TENANT_ID_);\n create index ACT_IDX_HI_INCIDENT_PROC_DEF_KEY on ACT_HI_INCIDENT(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n \n create index ACT_IDX_HI_JOB_LOG_PROCINST on ACT_HI_JOB_LOG(PROCESS_INSTANCE_ID_);\n create index ACT_IDX_HI_JOB_LOG_PROCDEF on ACT_HI_JOB_LOG(PROCESS_DEF_ID_);\n create index ACT_IDX_HI_JOB_LOG_TENANT_ID on ACT_HI_JOB_LOG(TENANT_ID_);\n create index ACT_IDX_HI_JOB_LOG_JOB_DEF_ID on ACT_HI_JOB_LOG(JOB_DEF_ID_);\n create index ACT_IDX_HI_JOB_LOG_PROC_DEF_KEY on ACT_HI_JOB_LOG(PROCESS_DEF_KEY_);\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n \n create index ACT_HI_EXT_TASK_LOG_PROCINST on ACT_HI_EXT_TASK_LOG(PROC_INST_ID_);\n create index ACT_HI_EXT_TASK_LOG_PROCDEF on ACT_HI_EXT_TASK_LOG(PROC_DEF_ID_);\n create index ACT_HI_EXT_TASK_LOG_PROC_DEF_KEY on ACT_HI_EXT_TASK_LOG(PROC_DEF_KEY_);\n create index ACT_HI_EXT_TASK_LOG_TENANT_ID on ACT_HI_EXT_TASK_LOG(TENANT_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n \n create index ACT_IDX_HI_OP_LOG_PROCINST on ACT_HI_OP_LOG(PROC_INST_ID_);\n create index ACT_IDX_HI_OP_LOG_PROCDEF on ACT_HI_OP_LOG(PROC_DEF_ID_);\n \n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\n+\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\ndiff --git a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.mariadb.create.history.sql b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.mariadb.create.history.sql\nindex 1a9060608e..fd806fea63 100644\n--- a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.mariadb.create.history.sql\n+++ b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.mariadb.create.history.sql\n@@ -290,6 +290,8 @@ create index ACT_IDX_HI_ACT_INST_PROC_DEF_KEY on ACT_HI_ACTINST(PROC_DEF_KEY_);\n \n create index ACT_IDX_HI_TASK_INST_TENANT_ID on ACT_HI_TASKINST(TENANT_ID_);\n create index ACT_IDX_HI_TASK_INST_PROC_DEF_KEY on ACT_HI_TASKINST(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n \n create index ACT_IDX_HI_DETAIL_PROC_INST on ACT_HI_DETAIL(PROC_INST_ID_);\n create index ACT_IDX_HI_DETAIL_ACT_INST on ACT_HI_DETAIL(ACT_INST_ID_);\n@@ -300,31 +302,44 @@ create index ACT_IDX_HI_DETAIL_NAME on ACT_HI_DETAIL(NAME_);\n create index ACT_IDX_HI_DETAIL_TASK_ID on ACT_HI_DETAIL(TASK_ID_);\n create index ACT_IDX_HI_DETAIL_TENANT_ID on ACT_HI_DETAIL(TENANT_ID_);\n create index ACT_IDX_HI_DETAIL_PROC_DEF_KEY on ACT_HI_DETAIL(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_IDENT_LNK_USER on ACT_HI_IDENTITYLINK(USER_ID_);\n create index ACT_IDX_HI_IDENT_LNK_GROUP on ACT_HI_IDENTITYLINK(GROUP_ID_);\n create index ACT_IDX_HI_IDENT_LNK_TENANT_ID on ACT_HI_IDENTITYLINK(TENANT_ID_);\n create index ACT_IDX_HI_IDENT_LNK_PROC_DEF_KEY on ACT_HI_IDENTITYLINK(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n \n create index ACT_IDX_HI_PROCVAR_PROC_INST on ACT_HI_VARINST(PROC_INST_ID_);\n create index ACT_IDX_HI_PROCVAR_NAME_TYPE on ACT_HI_VARINST(NAME_, VAR_TYPE_);\n create index ACT_IDX_HI_CASEVAR_CASE_INST on ACT_HI_VARINST(CASE_INST_ID_);\n create index ACT_IDX_HI_VAR_INST_TENANT_ID on ACT_HI_VARINST(TENANT_ID_);\n create index ACT_IDX_HI_VAR_INST_PROC_DEF_KEY on ACT_HI_VARINST(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_INCIDENT_TENANT_ID on ACT_HI_INCIDENT(TENANT_ID_);\n create index ACT_IDX_HI_INCIDENT_PROC_DEF_KEY on ACT_HI_INCIDENT(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n \n create index ACT_IDX_HI_JOB_LOG_PROCINST on ACT_HI_JOB_LOG(PROCESS_INSTANCE_ID_);\n create index ACT_IDX_HI_JOB_LOG_PROCDEF on ACT_HI_JOB_LOG(PROCESS_DEF_ID_);\n create index ACT_IDX_HI_JOB_LOG_TENANT_ID on ACT_HI_JOB_LOG(TENANT_ID_);\n create index ACT_IDX_HI_JOB_LOG_JOB_DEF_ID on ACT_HI_JOB_LOG(JOB_DEF_ID_);\n create index ACT_IDX_HI_JOB_LOG_PROC_DEF_KEY on ACT_HI_JOB_LOG(PROCESS_DEF_KEY_);\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n \n create index ACT_HI_EXT_TASK_LOG_PROCINST on ACT_HI_EXT_TASK_LOG(PROC_INST_ID_);\n create index ACT_HI_EXT_TASK_LOG_PROCDEF on ACT_HI_EXT_TASK_LOG(PROC_DEF_ID_);\n create index ACT_HI_EXT_TASK_LOG_PROC_DEF_KEY on ACT_HI_EXT_TASK_LOG(PROC_DEF_KEY_);\n create index ACT_HI_EXT_TASK_LOG_TENANT_ID on ACT_HI_EXT_TASK_LOG(TENANT_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n \n create index ACT_IDX_HI_OP_LOG_PROCINST on ACT_HI_OP_LOG(PROC_INST_ID_);\n create index ACT_IDX_HI_OP_LOG_PROCDEF on ACT_HI_OP_LOG(PROC_DEF_ID_);\n+\n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\n+\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\ndiff --git a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.mssql.create.history.sql b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.mssql.create.history.sql\nindex 0e698d9b66..24fb9882c3 100644\n--- a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.mssql.create.history.sql\n+++ b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.mssql.create.history.sql\n@@ -289,11 +289,14 @@ create index ACT_IDX_HI_ACT_INST_PROC_DEF_KEY on ACT_HI_ACTINST(PROC_DEF_KEY_);\n \n create index ACT_IDX_HI_TASK_INST_TENANT_ID on ACT_HI_TASKINST(TENANT_ID_);\n create index ACT_IDX_HI_TASK_INST_PROC_DEF_KEY on ACT_HI_TASKINST(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n \n create index ACT_IDX_HI_IDENT_LNK_USER on ACT_HI_IDENTITYLINK(USER_ID_);\n create index ACT_IDX_HI_IDENT_LNK_GROUP on ACT_HI_IDENTITYLINK(GROUP_ID_);\n create index ACT_IDX_HI_IDENT_LNK_TENANT_ID on ACT_HI_IDENTITYLINK(TENANT_ID_);\n create index ACT_IDX_HI_IDENT_LNK_PROC_DEF_KEY on ACT_HI_IDENTITYLINK(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n \n create index ACT_IDX_HI_DETAIL_PROC_INST on ACT_HI_DETAIL(PROC_INST_ID_);\n create index ACT_IDX_HI_DETAIL_ACT_INST on ACT_HI_DETAIL(ACT_INST_ID_);\n@@ -304,26 +307,38 @@ create index ACT_IDX_HI_DETAIL_NAME on ACT_HI_DETAIL(NAME_);\n create index ACT_IDX_HI_DETAIL_TASK_ID on ACT_HI_DETAIL(TASK_ID_);\n create index ACT_IDX_HI_DETAIL_TENANT_ID on ACT_HI_DETAIL(TENANT_ID_);\n create index ACT_IDX_HI_DETAIL_PROC_DEF_KEY on ACT_HI_DETAIL(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_PROCVAR_PROC_INST on ACT_HI_VARINST(PROC_INST_ID_);\n create index ACT_IDX_HI_PROCVAR_NAME_TYPE on ACT_HI_VARINST(NAME_, VAR_TYPE_);\n create index ACT_IDX_HI_CASEVAR_CASE_INST on ACT_HI_VARINST(CASE_INST_ID_);\n create index ACT_IDX_HI_VAR_INST_TENANT_ID on ACT_HI_VARINST(TENANT_ID_);\n create index ACT_IDX_HI_VAR_INST_PROC_DEF_KEY on ACT_HI_VARINST(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_INCIDENT_TENANT_ID on ACT_HI_INCIDENT(TENANT_ID_);\n create index ACT_IDX_HI_INCIDENT_PROC_DEF_KEY on ACT_HI_INCIDENT(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n \n create index ACT_IDX_HI_JOB_LOG_PROCINST on ACT_HI_JOB_LOG(PROCESS_INSTANCE_ID_);\n create index ACT_IDX_HI_JOB_LOG_PROCDEF on ACT_HI_JOB_LOG(PROCESS_DEF_ID_);\n create index ACT_IDX_HI_JOB_LOG_TENANT_ID on ACT_HI_JOB_LOG(TENANT_ID_);\n create index ACT_IDX_HI_JOB_LOG_JOB_DEF_ID on ACT_HI_JOB_LOG(JOB_DEF_ID_);\n create index ACT_IDX_HI_JOB_LOG_PROC_DEF_KEY on ACT_HI_JOB_LOG(PROCESS_DEF_KEY_);\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n \n create index ACT_HI_EXT_TASK_LOG_PROCINST on ACT_HI_EXT_TASK_LOG(PROC_INST_ID_);\n create index ACT_HI_EXT_TASK_LOG_PROCDEF on ACT_HI_EXT_TASK_LOG(PROC_DEF_ID_);\n create index ACT_HI_EXT_TASK_LOG_PROC_DEF_KEY on ACT_HI_EXT_TASK_LOG(PROC_DEF_KEY_);\n create index ACT_HI_EXT_TASK_LOG_TENANT_ID on ACT_HI_EXT_TASK_LOG(TENANT_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n \n create index ACT_IDX_HI_OP_LOG_PROCINST on ACT_HI_OP_LOG(PROC_INST_ID_);\n create index ACT_IDX_HI_OP_LOG_PROCDEF on ACT_HI_OP_LOG(PROC_DEF_ID_);\n+\n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\n+\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\ndiff --git a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.mysql.create.history.sql b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.mysql.create.history.sql\nindex 791a6eff3e..c48fecd387 100644\n--- a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.mysql.create.history.sql\n+++ b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.mysql.create.history.sql\n@@ -292,6 +292,8 @@ create index ACT_IDX_HI_ACT_INST_PROC_DEF_KEY on ACT_HI_ACTINST(PROC_DEF_KEY_);\n \n create index ACT_IDX_HI_TASK_INST_TENANT_ID on ACT_HI_TASKINST(TENANT_ID_);\n create index ACT_IDX_HI_TASK_INST_PROC_DEF_KEY on ACT_HI_TASKINST(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n \n create index ACT_IDX_HI_DETAIL_PROC_INST on ACT_HI_DETAIL(PROC_INST_ID_);\n create index ACT_IDX_HI_DETAIL_ACT_INST on ACT_HI_DETAIL(ACT_INST_ID_);\n@@ -302,32 +304,44 @@ create index ACT_IDX_HI_DETAIL_NAME on ACT_HI_DETAIL(NAME_);\n create index ACT_IDX_HI_DETAIL_TASK_ID on ACT_HI_DETAIL(TASK_ID_);\n create index ACT_IDX_HI_DETAIL_TENANT_ID on ACT_HI_DETAIL(TENANT_ID_);\n create index ACT_IDX_HI_DETAIL_PROC_DEF_KEY on ACT_HI_DETAIL(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_IDENT_LNK_USER on ACT_HI_IDENTITYLINK(USER_ID_);\n create index ACT_IDX_HI_IDENT_LNK_GROUP on ACT_HI_IDENTITYLINK(GROUP_ID_);\n create index ACT_IDX_HI_IDENT_LNK_TENANT_ID on ACT_HI_IDENTITYLINK(TENANT_ID_);\n create index ACT_IDX_HI_IDENT_LNK_PROC_DEF_KEY on ACT_HI_IDENTITYLINK(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n \n create index ACT_IDX_HI_PROCVAR_PROC_INST on ACT_HI_VARINST(PROC_INST_ID_);\n create index ACT_IDX_HI_PROCVAR_NAME_TYPE on ACT_HI_VARINST(NAME_, VAR_TYPE_);\n create index ACT_IDX_HI_CASEVAR_CASE_INST on ACT_HI_VARINST(CASE_INST_ID_);\n create index ACT_IDX_HI_VAR_INST_TENANT_ID on ACT_HI_VARINST(TENANT_ID_);\n create index ACT_IDX_HI_VAR_INST_PROC_DEF_KEY on ACT_HI_VARINST(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_INCIDENT_TENANT_ID on ACT_HI_INCIDENT(TENANT_ID_);\n create index ACT_IDX_HI_INCIDENT_PROC_DEF_KEY on ACT_HI_INCIDENT(PROC_DEF_KEY_);\n-\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n \n create index ACT_IDX_HI_JOB_LOG_PROCINST on ACT_HI_JOB_LOG(PROCESS_INSTANCE_ID_);\n create index ACT_IDX_HI_JOB_LOG_PROCDEF on ACT_HI_JOB_LOG(PROCESS_DEF_ID_);\n create index ACT_IDX_HI_JOB_LOG_TENANT_ID on ACT_HI_JOB_LOG(TENANT_ID_);\n create index ACT_IDX_HI_JOB_LOG_JOB_DEF_ID on ACT_HI_JOB_LOG(JOB_DEF_ID_);\n create index ACT_IDX_HI_JOB_LOG_PROC_DEF_KEY on ACT_HI_JOB_LOG(PROCESS_DEF_KEY_);\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n \n create index ACT_HI_EXT_TASK_LOG_PROCINST on ACT_HI_EXT_TASK_LOG(PROC_INST_ID_);\n create index ACT_HI_EXT_TASK_LOG_PROCDEF on ACT_HI_EXT_TASK_LOG(PROC_DEF_ID_);\n create index ACT_HI_EXT_TASK_LOG_PROC_DEF_KEY on ACT_HI_EXT_TASK_LOG(PROC_DEF_KEY_);\n create index ACT_HI_EXT_TASK_LOG_TENANT_ID on ACT_HI_EXT_TASK_LOG(TENANT_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n \n create index ACT_IDX_HI_OP_LOG_PROCINST on ACT_HI_OP_LOG(PROC_INST_ID_);\n create index ACT_IDX_HI_OP_LOG_PROCDEF on ACT_HI_OP_LOG(PROC_DEF_ID_);\n+\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\n+\n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\ndiff --git a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.oracle.create.history.sql b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.oracle.create.history.sql\nindex 640173763c..76169cc873 100644\n--- a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.oracle.create.history.sql\n+++ b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.oracle.create.history.sql\n@@ -290,6 +290,8 @@ create index ACT_IDX_HI_ACT_INST_PROC_KEY on ACT_HI_ACTINST(PROC_DEF_KEY_);\n \n create index ACT_IDX_HI_TASK_INST_TENANT_ID on ACT_HI_TASKINST(TENANT_ID_, 0);\n create index ACT_IDX_HI_TASK_INST_PROC_KEY on ACT_HI_TASKINST(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n \n create index ACT_IDX_HI_DETAIL_PROC_INST on ACT_HI_DETAIL(PROC_INST_ID_);\n create index ACT_IDX_HI_DETAIL_ACT_INST on ACT_HI_DETAIL(ACT_INST_ID_);\n@@ -300,31 +302,44 @@ create index ACT_IDX_HI_DETAIL_NAME on ACT_HI_DETAIL(NAME_);\n create index ACT_IDX_HI_DETAIL_TASK_ID on ACT_HI_DETAIL(TASK_ID_);\n create index ACT_IDX_HI_DETAIL_TENANT_ID on ACT_HI_DETAIL(TENANT_ID_, 0);\n create index ACT_IDX_HI_DETAIL_PROC_KEY on ACT_HI_DETAIL(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_IDENT_LNK_USER on ACT_HI_IDENTITYLINK(USER_ID_);\n create index ACT_IDX_HI_IDENT_LNK_GROUP on ACT_HI_IDENTITYLINK(GROUP_ID_);\n create index ACT_IDX_HI_IDENT_LNK_TENANT_ID on ACT_HI_IDENTITYLINK(TENANT_ID_, 0);\n create index ACT_IDX_HI_IDENT_LNK_PROC_KEY on ACT_HI_IDENTITYLINK(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n \n create index ACT_IDX_HI_PROCVAR_PROC_INST on ACT_HI_VARINST(PROC_INST_ID_);\n create index ACT_IDX_HI_PROCVAR_NAME_TYPE on ACT_HI_VARINST(NAME_, VAR_TYPE_);\n create index ACT_IDX_HI_CASEVAR_CASE_INST on ACT_HI_VARINST(CASE_INST_ID_);\n create index ACT_IDX_HI_VAR_INST_TENANT_ID on ACT_HI_VARINST(TENANT_ID_, 0);\n create index ACT_IDX_HI_VAR_INST_PROC_KEY on ACT_HI_VARINST(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_VARINST_BYTEAR on ACT_HI_VARINST(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_INCIDENT_TENANT_ID on ACT_HI_INCIDENT(TENANT_ID_, 0);\n create index ACT_IDX_HI_INCIDENT_PROC_KEY on ACT_HI_INCIDENT(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_INCIDENT_PROCINST on ACT_HI_INCIDENT(PROC_INST_ID_);\n \n create index ACT_IDX_HI_JOB_LOG_PROCINST on ACT_HI_JOB_LOG(PROCESS_INSTANCE_ID_);\n create index ACT_IDX_HI_JOB_LOG_PROCDEF on ACT_HI_JOB_LOG(PROCESS_DEF_ID_);\n create index ACT_IDX_HI_JOB_LOG_TENANT_ID on ACT_HI_JOB_LOG(TENANT_ID_, 0);\n create index ACT_IDX_HI_JOB_LOG_JOB_DEF_ID on ACT_HI_JOB_LOG(JOB_DEF_ID_);\n create index ACT_IDX_HI_JOB_LOG_PROC_KEY on ACT_HI_JOB_LOG(PROCESS_DEF_KEY_);\n+create index ACT_IDX_HI_JOB_LOG_EX_STACK on ACT_HI_JOB_LOG(JOB_EXCEPTION_STACK_ID_);\n \n create index ACT_HI_EXT_TASK_LOG_PROCINST on ACT_HI_EXT_TASK_LOG(PROC_INST_ID_);\n create index ACT_HI_EXT_TASK_LOG_PROCDEF on ACT_HI_EXT_TASK_LOG(PROC_DEF_ID_);\n create index ACT_HI_EXT_TASK_LOG_PROC_KEY on ACT_HI_EXT_TASK_LOG(PROC_DEF_KEY_);\n create index ACT_HI_EXT_TASK_LOG_TENANT_ID on ACT_HI_EXT_TASK_LOG(TENANT_ID_);\n+create index ACT_IDX_HI_EXT_TASK_LOG_ERROR_DET on ACT_HI_EXT_TASK_LOG(ERROR_DETAILS_ID_);\n \n create index ACT_IDX_HI_OP_LOG_PROCINST on ACT_HI_OP_LOG(PROC_INST_ID_);\n create index ACT_IDX_HI_OP_LOG_PROCDEF on ACT_HI_OP_LOG(PROC_DEF_ID_);\n+\n+create index ACT_IDX_HI_COMMENT_TASK on ACT_HI_COMMENT(TASK_ID_);\n+create index ACT_IDX_HI_COMMENT_PROCINST on ACT_HI_COMMENT(PROC_INST_ID_);\n+\n+create index ACT_IDX_HI_ATTACHMENT_CONTENT on ACT_HI_ATTACHMENT(CONTENT_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_PROCINST on ACT_HI_ATTACHMENT(PROC_INST_ID_);\n+create index ACT_IDX_HI_ATTACHMENT_TASK on ACT_HI_ATTACHMENT(TASK_ID_);\ndiff --git a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.postgres.create.history.sql b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.postgres.create.history.sql\nindex 865f1cae79..ff57a31286 100644\n--- a/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.postgres.create.history.sql\n+++ b/engine/src/main/resources/org/camunda/bpm/engine/db/create/activiti.postgres.create.history.sql\n@@ -290,6 +290,8 @@ create index ACT_IDX_HI_ACT_INST_PROC_DEF_KEY on ACT_HI_ACTINST(PROC_DEF_KEY_);\n \n create index ACT_IDX_HI_TASK_INST_TENANT_ID on ACT_HI_TASKINST(TENANT_ID_);\n create index ACT_IDX_HI_TASK_INST_PROC_DEF_KEY on ACT_HI_TASKINST(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_TASKINST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);\n+create index ACT_IDX_HI_TASKINST_ID_PROCINST on ACT_HI_TASKINST(ID_,PROC_INST_ID_);\n \n create index ACT_IDX_HI_DETAIL_PROC_INST on ACT_HI_DETAIL(PROC_INST_ID_);\n create index ACT_IDX_HI_DETAIL_ACT_INST on ACT_HI_DETAIL(ACT_INST_ID_);\n@@ -300,32 +302,44 @@ create index ACT_IDX_HI_DETAIL_NAME on ACT_HI_DETAIL(NAME_);\n create index ACT_IDX_HI_DETAIL_TASK_ID on ACT_HI_DETAIL(TASK_ID_);\n create index ACT_IDX_HI_DETAIL_TENANT_ID on ACT_HI_DETAIL(TENANT_ID_);\n create index ACT_IDX_HI_DETAIL_PROC_DEF_KEY on ACT_HI_DETAIL(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_DETAIL_BYTEAR on ACT_HI_DETAIL(BYTEARRAY_ID_);\n \n create index ACT_IDX_HI_IDENT_LNK_USER on ACT_HI_IDENTITYLINK(USER_ID_);\n create index ACT_IDX_HI_IDENT_LNK_GROUP on ACT_HI_IDENTITYLINK(GROUP_ID_);\n create index ACT_IDX_HI_IDENT_LNK_TENANT_ID on ACT_HI_IDENTITYLINK(TENANT_ID_);\n create index ACT_IDX_HI_IDENT_LNK_PROC_DEF_KEY on ACT_HI_IDENTITYLINK(PROC_DEF_KEY_);\n+create index ACT_IDX_HI_IDENTITYLINK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);\n \n create index ACT_IDX_HI_PROCVAR_PROC_INST",
    "fix up argument completion": "diff --git a/src/cpp/session/modules/SessionReticulate.R b/src/cpp/session/modules/SessionReticulate.R\nindex 3dfad2adb5..4fbd2c44d4 100644\n--- a/src/cpp/session/modules/SessionReticulate.R\n+++ b/src/cpp/session/modules/SessionReticulate.R\n@@ -521,15 +521,14 @@ options(reticulate.repl.teardown   = .rs.reticulate.replTeardown)\n {\n    inspect <- reticulate::import(\"inspect\", convert = TRUE)\n    \n-   # if this is a class object (has an __init__ method), then\n-   # get methods from that\n-   init <- reticulate::py_get_attr(object, \"__init__\", silent = TRUE)\n-   if (!inherits(init, \"python.builtin.NoneType\")) {\n+   if (inspect$isclass(object)) {\n+      # for class objects, use the arguments of the __init__ method\n+      init <- reticulate::py_get_attr(object, \"__init__\", silent = TRUE)\n       arguments <- tryCatch(inspect$getargspec(init)$args, error = identity)\n       if (inherits(arguments, \"error\"))\n          return(.rs.python.emptyCompletions())\n-      arguments <- setdiff(arguments, \"self\")\n    } else {\n+      # assume that this is a callable, and ask for the arg spec\n       arguments <- tryCatch(inspect$getargspec(object)$args, error = identity)\n       if (inherits(arguments, \"error\"))\n          return(.rs.python.emptyCompletions())",
    "Resolve <issue_id> Don \\' t use map attribute builder for non relational map": "diff --git a/requery-processor/src/main/java/io/requery/processor/AttributeMember.java b/requery-processor/src/main/java/io/requery/processor/AttributeMember.java\nindex fa0fd54..2c32116 100644\n--- a/requery-processor/src/main/java/io/requery/processor/AttributeMember.java\n+++ b/requery-processor/src/main/java/io/requery/processor/AttributeMember.java\n@@ -46,7 +46,6 @@ import io.requery.meta.MapAttributeBuilder;\n import io.requery.meta.ResultAttributeBuilder;\n import io.requery.meta.SetAttributeBuilder;\n import io.requery.query.Order;\n-import io.requery.sql.Keyword;\n \n import javax.annotation.processing.ProcessingEnvironment;\n import javax.lang.model.SourceVersion;\n@@ -184,7 +183,7 @@ class AttributeMember extends BaseProcessableElement<Element> implements Attribu\n                     isIterable = Mirrors.isInstance(types, element, Iterable.class);\n                 }\n                 isMap = Mirrors.isInstance(types, element, Map.class);\n-                if (isMap) {\n+                if (isMap && cardinality != null) {\n                     builderClass = MapAttributeBuilder.class;\n                 }\n                 isOptional = Mirrors.isInstance(types, element, Optional.class);\ndiff --git a/requery-processor/src/main/java/io/requery/processor/EntityGenerator.java b/requery-processor/src/main/java/io/requery/processor/EntityGenerator.java\nindex b5c017a..48d9808 100644\n--- a/requery-processor/src/main/java/io/requery/processor/EntityGenerator.java\n+++ b/requery-processor/src/main/java/io/requery/processor/EntityGenerator.java\n@@ -629,7 +629,7 @@ class EntityGenerator implements SourceGenerator {\n             builder.add(\"\\nnew $T($S, $T.class, $T.class)\\n\",\n                 builderName, attribute.name(), ClassName.get(collectionElement), name);\n \n-        } else if (attribute.isMap()) {\n+        } else if (attribute.isMap() && attribute.cardinality() != null) {\n             List<TypeMirror> parameters = Mirrors.listGenericTypeArguments(typeMirror);\n             // key type\n             TypeName keyName = TypeName.get(parameters.get(0));",
    "Add a page to manage elastic agent profiles": "diff --git a/server/webapp/WEB-INF/applicationContext-acegi-security.xml b/server/webapp/WEB-INF/applicationContext-acegi-security.xml\nindex 002dae3bbf..ae3e662fbe 100644\n--- a/server/webapp/WEB-INF/applicationContext-acegi-security.xml\n+++ b/server/webapp/WEB-INF/applicationContext-acegi-security.xml\n@@ -272,6 +272,7 @@\n                 /api/admin/plugin_info/**=ROLE_SUPERVISOR, ROLE_GROUP_SUPERVISOR\n                 /api/admin/agents=ROLE_SUPERVISOR\n                 /api/elastic/profiles/**=ROLE_SUPERVISOR, ROLE_GROUP_SUPERVISOR\n+                /admin/elastic_profiles/**=ROLE_SUPERVISOR, ROLE_GROUP_SUPERVISOR\n                 /api/admin/templates/**=ROLE_SUPERVISOR\n                 /api/admin/**=ROLE_SUPERVISOR\n                 /api/config-repository.git/**=ROLE_SUPERVISOR\ndiff --git a/server/webapp/WEB-INF/rails.new/app/assets/javascripts/lib/string-plus.js b/server/webapp/WEB-INF/rails.new/app/assets/javascripts/lib/string-plus.js\nindex 6e56d644ad..c6b610092d 100644\n--- a/server/webapp/WEB-INF/rails.new/app/assets/javascripts/lib/string-plus.js\n+++ b/server/webapp/WEB-INF/rails.new/app/assets/javascripts/lib/string-plus.js\n@@ -79,6 +79,14 @@ define(['string', 'lodash', 'mithril'], function (s, _, m) {\n \n       return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n         s4() + '-' + s4() + s4() + s4();\n+    },\n+\n+    terminateWithPeriod: function (str) {\n+      if (s.endsWith(str, '.')) {\n+        return str;\n+      } else {\n+        return `${str}.`;\n+      }\n     }\n   };\n \ndiff --git a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/helpers/form_helper.js.msx b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/helpers/form_helper.js.msx\nindex b6f38ad61e..542542be5a 100644\n--- a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/helpers/form_helper.js.msx\n+++ b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/helpers/form_helper.js.msx\n@@ -57,7 +57,7 @@ define(['mithril', 'jquery', 'lodash', 'string-plus', 'models/model_mixins', 'es\n \n         return (\n           <div class={compactClasses(args, 'columns', 'medium-' + size, 'large-' + largeSize, end)}\n-            {...args}>\n+               {...args}>\n             {children}\n           </div>\n         );\n@@ -77,7 +77,7 @@ define(['mithril', 'jquery', 'lodash', 'string-plus', 'models/model_mixins', 'es\n       },\n \n       view: function (ctrl, args) {\n-        var model = deleteKeyAndReturnValue(args, 'model'),\n+        var model       = deleteKeyAndReturnValue(args, 'model'),\n           attrName    = deleteKeyAndReturnValue(args, 'attrName'),\n           type        = deleteKeyAndReturnValue(args, 'type', 'text'),\n           placeholder = deleteKeyAndReturnValue(args, 'placeholder', ''),\n@@ -367,7 +367,7 @@ define(['mithril', 'jquery', 'lodash', 'string-plus', 'models/model_mixins', 'es\n \n       view: function (ctrl, args, children) {\n         var tabs = (\n-          <ul class={_.compact(['tabs', args.isVertical ? 'vertical': undefined]).join(' ')}>\n+          <ul class={_.compact(['tabs', args.isVertical ? 'vertical' : undefined]).join(' ')}>\n             {_.map(args.tabTitles, function (tabTitle, tabIndex) {\n \n               var tabTitleElem;\n@@ -395,7 +395,7 @@ define(['mithril', 'jquery', 'lodash', 'string-plus', 'models/model_mixins', 'es\n \n         var tabsContent = (\n           <div\n-            class={_.compact([args.isVertical ? 'vertical': undefined, 'tabs-content', 'tabs-content-container', ctrl.prefixedClass('tabs-content-container')]).join(' ')}>\n+            class={_.compact([args.isVertical ? 'vertical' : undefined, 'tabs-content', 'tabs-content-container', ctrl.prefixedClass('tabs-content-container')]).join(' ')}>\n             {_.map(_.flatten(children), function (child, tabIndex) {\n \n               var renderedChild;\n@@ -604,33 +604,28 @@ define(['mithril', 'jquery', 'lodash', 'string-plus', 'models/model_mixins', 'es\n       }\n     },\n \n+    callout: {\n+      view: function (ctrl, args, children) {\n+        var type = deleteKeyAndReturnValue(args, 'type');\n+        return (<div class={'callout ' + type} {...args}>{children}</div>);\n+      }\n+    },\n+\n     alert: {\n       view: function (ctrl, args, children) {\n-        return (\n-          <div>\n-            <span class=\"callout alert\">{children}</span>\n-          </div>\n-        );\n+        return (<f.callout type=\"alert\" {...args}>{children}</f.callout>);\n       }\n     },\n \n     warning: {\n       view: function (ctrl, args, children) {\n-        return (\n-          <div class='warning callout'>\n-            <p>{children}</p>\n-          </div>\n-        );\n+        return (<f.callout type=\"warning\" {...args}>{children}</f.callout>);\n       }\n     },\n \n     info: {\n       view: function (ctrl, args, children) {\n-        return (\n-          <div class='info callout'>\n-            <p>{children}</p>\n-          </div>\n-        );\n+        return (<f.callout type=\"info\" {...args}>{children}</f.callout>);\n       }\n     },\n \ndiff --git a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/helpers/mrequest.js b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/helpers/mrequest.js\nindex 96713de62f..d73b73a21a 100644\n--- a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/helpers/mrequest.js\n+++ b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/helpers/mrequest.js\n@@ -14,10 +14,14 @@\n  * limitations under the License.\n  */\n \n-define([], function () {\n+define(['jquery'], function ($) {\n   var setHeaders = function (xhr, version) {\n     xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n     xhr.setRequestHeader(\"Accept\", \"application/vnd.go.cd.\" + version + \"+json\");\n+    var csrfToken = $('meta[name=csrf-token]').attr('content');\n+    if (csrfToken) {\n+      xhr.setRequestHeader('X-CSRF-Token', csrfToken);\n+    }\n   };\n \n   return {\n@@ -34,6 +38,14 @@ define([], function () {\n       v4: function (xhr) {\n         setHeaders(xhr, 'v4');\n       }\n+    },\n+\n+    unwrapErrorExtractMessage: function (data) {\n+      if (data.message) {\n+        return data.message;\n+      } else {\n+        return \"There was an unknown error performing the operation\";\n+      }\n     }\n   };\n });\ndiff --git a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/elastic_profiles/elastic_profiles.js b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/elastic_profiles/elastic_profiles.js\nnew file mode 100644\nindex 0000000000..3d5294c94a\n--- /dev/null\n+++ b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/elastic_profiles/elastic_profiles.js\n@@ -0,0 +1,135 @@\n+/*\n+ * Copyright 2016 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+define([\n+  'mithril', 'lodash', 'string-plus', 'models/model_mixins', 'models/shared/plugin_configurations', 'helpers/mrequest', 'js-routes', 'models/validatable_mixin'\n+], function (m, _, s, Mixins, PluginConfigurations, mrequest, Routes, Validatable) {\n+\n+  var unwrapMessageOrProfile = function (data, xhr) {\n+    if (xhr.status === 422) {\n+      return new ElasticProfiles.Profile.fromJSON(data.data);\n+    } else {\n+      return mrequest.unwrapErrorExtractMessage(data, xhr);\n+    }\n+  };\n+\n+  var ElasticProfiles = function (data) {\n+    Mixins.HasMany.call(this, {\n+      factory:    ElasticProfiles.Profile.create,\n+      as:         'Profile',\n+      collection: data,\n+      uniqueOn:   'id'\n+    });\n+  };\n+\n+  ElasticProfiles.all = function () {\n+    return m.request({\n+      method:        \"GET\",\n+      url:           Routes.apiv1ElasticProfilesPath(),\n+      config:        mrequest.xhrConfig.v1,\n+      unwrapSuccess: function (data) {\n+        return ElasticProfiles.fromJSON(data['_embedded']['profiles']);\n+      },\n+      unwrapError:   mrequest.unwrapErrorExtractMessage\n+    });\n+  };\n+\n+  ElasticProfiles.Profile = function (data) {\n+    this.id         = m.prop(s.defaultToIfBlank(data.id, ''));\n+    this.pluginId   = m.prop(s.defaultToIfBlank(data.pluginId, ''));\n+    this.properties = s.collectionToJSON(m.prop(s.defaultToIfBlank(data.properties, new PluginConfigurations())));\n+    this.parent     = Mixins.GetterSetter();\n+    this.etag       = Mixins.GetterSetter();\n+\n+    Validatable.call(this, data);\n+\n+    this.validatePresenceOf('id');\n+    this.validatePresenceOf('pluginId');\n+\n+    this.update = function () {\n+      var profile = this;\n+      return m.request({\n+        method:      'PUT',\n+        url:         Routes.apiv1ElasticProfilePath(this.id()),\n+        config:      function (xhr) {\n+          mrequest.xhrConfig.v1(xhr);\n+          xhr.setRequestHeader('If-Match', profile.etag());\n+        },\n+        data:        JSON.parse(JSON.stringify(profile, s.snakeCaser)),\n+        unwrapError: unwrapMessageOrProfile\n+      });\n+    };\n+\n+    this.delete = function () {\n+      return m.request({\n+        method:        \"DELETE\",\n+        url:           Routes.apiv1ElasticProfilePath(this.id()),\n+        config:        mrequest.xhrConfig.v1,\n+        unwrapSuccess: function (data, xhr) {\n+          if (xhr.status === 200) {\n+            return data.message;\n+          }\n+        },\n+        unwrapError:   mrequest.unwrapErrorExtractMessage\n+      });\n+    };\n+\n+    this.create = function () {\n+      return m.request({\n+        method:      'POST',\n+        url:         Routes.apiv1ElasticProfilesPath(),\n+        config:      mrequest.xhrConfig.v1,\n+        data:        JSON.parse(JSON.stringify(this, s.snakeCaser)),\n+        unwrapError: unwrapMessageOrProfile\n+      });\n+    };\n+  };\n+\n+  ElasticProfiles.Profile.get = function (id) {\n+    return m.request({\n+      method:        'GET',\n+      url:           Routes.apiv1ElasticProfilePath(id),\n+      config:        mrequest.xhrConfig.v1,\n+      unwrapSuccess: function (data, xhr) {\n+        var profile = ElasticProfiles.Profile.fromJSON(data);\n+        profile.etag(xhr.getResponseHeader('ETag'));\n+        return profile;\n+      },\n+      unwrapError:   mrequest.unwrapErrorExtractMessage\n+    });\n+  };\n+\n+  ElasticProfiles.Profile.create = function (data) {\n+    return new ElasticProfiles.Profile(data);\n+  };\n+\n+  ElasticProfiles.Profile.fromJSON = function (data) {\n+    return new ElasticProfiles.Profile({\n+      id:         data.id,\n+      pluginId:   data.plugin_id,\n+      errors:     data.errors,\n+      properties: PluginConfigurations.fromJSON(data.properties)\n+    });\n+  };\n+\n+  Mixins.fromJSONCollection({\n+    parentType: ElasticProfiles,\n+    childType:  ElasticProfiles.Profile,\n+    via:        'addProfile'\n+  });\n+\n+  return ElasticProfiles;\n+});\n\\ No newline at end of file\ndiff --git a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/errors.js b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/errors.js\nindex 7899c1715b..e5f833f219 100644\n--- a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/errors.js\n+++ b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/errors.js\n@@ -14,7 +14,7 @@\n  * limitations under the License.\n  */\n \n-define(['mithril', 'lodash'], function (m, _) {\n+define(['mithril', 'lodash', 'string-plus'], function (m, _, s) {\n   var Errors = function (errors) {\n     errors = errors || {};\n \n@@ -40,9 +40,7 @@ define(['mithril', 'lodash'], function (m, _) {\n     };\n \n     this.errorsForDisplay = function (attrName) {\n-      return _.map(errors[attrName] || [], function (message) {\n-        return message + \".\";\n-      }).join(\" \");\n+      return _.map(errors[attrName] || [], s.terminateWithPeriod).join(\" \");\n     };\n   };\n \ndiff --git a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/pipeline_configs/plugin_infos.js b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/pipeline_configs/plugin_infos.js\nindex 7b0b822eb6..7788bab31b 100644\n--- a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/pipeline_configs/plugin_infos.js\n+++ b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/pipeline_configs/plugin_infos.js\n@@ -14,17 +14,17 @@\n  * limitations under the License.\n  */\n \n-define(['mithril', 'lodash', 'string-plus', 'helpers/mrequest', 'js-routes'], function (m, _, s, mrequest, Routes) {\n+define(['mithril', 'lodash', 'string-plus', 'helpers/mrequest', 'models/shared/image', 'js-routes'], function (m, _, s, mrequest, Image, Routes) {\n   var PluginInfos = m.prop([]);\n \n-  PluginInfos.init = function () {\n+  PluginInfos.init = function (type) {\n     var unwrap = function (response) {\n       return response._embedded.plugin_info;\n     };\n \n     return m.request({\n       method:        'GET',\n-      url:           Routes.apiv1AdminPluginInfoIndexPath(),\n+      url:           Routes.apiv1AdminPluginInfoIndexPath({'type': type}),\n       background:    true,\n       config:        mrequest.xhrConfig.v1,\n       unwrapSuccess: unwrap,\n@@ -55,17 +55,22 @@ define(['mithril', 'lodash', 'string-plus', 'helpers/mrequest', 'js-routes'], fu\n     this.version        = m.prop(data.version);\n     this.type           = m.prop(data.type);\n     this.configurations = data.pluggable_instance_settings ?\n-                            m.prop(s.defaultToIfBlank(data.pluggable_instance_settings.configurations, {})) :\n-                            m.prop({});\n+      m.prop(s.defaultToIfBlank(data.pluggable_instance_settings.configurations, {})) :\n+      m.prop({});\n     this.viewTemplate   = m.prop(s.defaultToIfBlank(view(data.pluggable_instance_settings).template, ''));\n+\n+    if (data.image) {\n+      this.image = m.prop(new Image(data.image.content_type, data.image.data));\n+    }\n   };\n \n   PluginInfos.PluginInfo.byId = function (id) {\n     return m.request({\n-      method: 'GET',\n-      url:    Routes.apiv1AdminPluginInfoPath({id: id}),\n-      config: mrequest.xhrConfig.v1,\n-      type:   PluginInfos.PluginInfo\n+      method:      'GET',\n+      url:         Routes.apiv1AdminPluginInfoPath({id: id}),\n+      config:      mrequest.xhrConfig.v1,\n+      type:        PluginInfos.PluginInfo,\n+      unwrapError: mrequest.unwrapErrorExtractMessage\n     });\n   };\n \ndiff --git a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/shared/image.js b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/shared/image.js\nnew file mode 100644\nindex 0000000000..bd5352bfeb\n--- /dev/null\n+++ b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/models/shared/image.js\n@@ -0,0 +1,28 @@\n+/*\n+ * Copyright 2016 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+define(['mithril'], function (m) {\n+  var Image = function (contentType, data) {\n+    this.contentType = m.prop(contentType);\n+    this.data        = m.prop(data);\n+\n+    this.toDataURI = function () {\n+      return \"data:\" + this.contentType() + \";base64,\" + this.data();\n+    };\n+  };\n+\n+  return Image;\n+});\n\\ No newline at end of file\ndiff --git a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/single_page_apps/elastic_profiles.js b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/single_page_apps/elastic_profiles.js\nnew file mode 100644\nindex 0000000000..172c5e7610\n--- /dev/null\n+++ b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/single_page_apps/elastic_profiles.js\n@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2016 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+require([\n+  'jquery', 'mithril',\n+  'js-routes',\n+  'views/elastic_profiles/elastic_profiles_widget',\n+  'models/pipeline_configs/plugin_infos',\n+  'foundation.util.mediaQuery', 'foundation.dropdownMenu', 'foundation.responsiveToggle', 'foundation.dropdown'\n+], function ($, m, JsRoutes,\n+             ElasticProfilesWidget, PluginInfos) {\n+\n+  $(function () {\n+    $(document).foundation();\n+\n+    m.sync([PluginInfos.init('elastic-agent')]).then(function () {\n+      m.mount($(\"#elastic-profiles\").get(0), ElasticProfilesWidget);\n+    });\n+  });\n+});\ndiff --git a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/views/agents/agents_widget.js.msx b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/views/agents/agents_widget.js.msx\nindex 59db732710..24721bde39 100644\n--- a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/views/agents/agents_widget.js.msx\n+++ b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/views/agents/agents_widget.js.msx\n@@ -233,7 +233,7 @@ define([\n \n       return (\n         <div onclick={ctrl.hideDropDownsAndMessage.bind(ctrl)}>\n-          <div class=\"agent-header-panel\">\n+          <div class=\"header-panel\">\n             <ButtonRowWidget isAnyAgentSelected={ ctrl.isAnyAgentSelected.bind(ctrl) }\n                              dropdown={args.vm.dropdown}\n                              selectedAgents={ ctrl.selectedAgents.bind(ctrl) }\ndiff --git a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/views/agents/button_row_widget.js.msx b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/views/agents/button_row_widget.js.msx\nindex dcb460a581..6114d1f486 100644\n--- a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/views/agents/button_row_widget.js.msx\n+++ b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/views/agents/button_row_widget.js.msx\n@@ -56,34 +56,30 @@ define(['mithril', 'lodash',\n             </f.column>\n \n             <f.column size={7}>\n-              <ul class=\"button-group agent-button-group\">\n+              <ul class=\"button-group header-panel-button-group\">\n                 <li>\n-                  <f.button class=\"button\"\n-                            onclick={args.onDelete}\n+                  <f.button onclick={args.onDelete}\n                             disabled={!args.isAnyAgentSelected()}>\n                     Delete\n                   </f.button>\n                 </li>\n \n                 <li>\n-                  <f.button class=\"button\"\n-                            onclick={args.onDisable}\n+                  <f.button onclick={args.onDisable}\n                             disabled={!args.isAnyAgentSelected()}>\n                     Disable\n                   </f.button>\n                 </li>\n \n                 <li>\n-                  <f.button class=\"button\"\n-                            onclick={args.onEnable}\n+                  <f.button onclick={args.onEnable}\n                             disabled={!args.isAnyAgentSelected()}>\n                     Enable\n                   </f.button>\n                 </li>\n \n                 <li class={ ctrl.dropdownClass('resource') }>\n-                  <f.button class=\"button\"\n-                            onclick={ctrl.resourcesButtonClicked}\n+                  <f.button onclick={ctrl.resourcesButtonClicked}\n                             disabled={!args.isAnyAgentSelected()}>\n                     Resources\n                   </f.button>\n@@ -95,8 +91,7 @@ define(['mithril', 'lodash',\n                 </li>\n \n                 <li class={ctrl.dropdownClass('environment')}>\n-                  <f.button class=\"button\"\n-                            onclick={ctrl.environmentsButtonClicked}\n+                  <f.button onclick={ctrl.environmentsButtonClicked}\n                             disabled={!args.isAnyAgentSelected()}>\n                     Environments\n                   </f.button>\ndiff --git a/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/views/elastic_profiles/elastic_profile_modal_body.js.msx b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/views/elastic_profiles/elastic_profile_modal_body.js.msx\nnew file mode 100644\nindex 0000000000..61f7594ef4\n--- /dev/null\n+++ b/server/webapp/WEB-INF/rails.new/app/assets/new_javascripts/views/elastic_profiles/elastic_profile_modal_body.js.msx\n@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2016 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+define([\n+  \"mithril\", 'lodash', 'jquery', 'helpers/form_helper', 'models/pipeline_configs/plugin_infos', 'models/elastic_profiles/elastic_profiles',\n+  'views/shared/angular_plugin'\n+], function (m, _, $, f, PluginInfos, ElasticProfiles, AngularPlugin) {\n+\n+  var autoComplete = function (model, attrName, selectCb) {\n+    return function (elem, isInitialized) {\n+      if (isInitialized) {\n+        return;\n+      }\n+\n+      var $inputElem = $($(elem).find(`input[data-prop-name='${attrName}']`));\n+      var values     = _.map(PluginInfos(), function (pi) {\n+        return pi.id();\n+      });\n+\n+      $inputElem.textcomplete([\n+        {\n+          match:   /([^\\s].*)$/,\n+          index:   1, // use the second match in the regex to extract the search term\n+          search:  function (term, callback) {\n+            term = term.toLowerCase();\n+            callback($.map(values, function (word) {\n+              return",
    "Adding checks for unclosed sql closeables": "diff --git a/build/qa/pmd-ruleset.xml b/build/qa/pmd-ruleset.xml\nindex 3947e8fe7b..edba7d484e 100644\n--- a/build/qa/pmd-ruleset.xml\n+++ b/build/qa/pmd-ruleset.xml\n@@ -85,6 +85,12 @@ under the License.\n     <rule ref=\"category/java/errorprone.xml/UnnecessaryConversionTemporary\" />\n     <rule ref=\"category/java/errorprone.xml/UnusedNullCheckInEquals\" />\n     <rule ref=\"category/java/errorprone.xml/UselessOperationOnImmutable\" />\n+    <rule ref=\"category/java/errorprone.xml/CloseResource\" >\n+        <properties>\n+            <!-- When calling the store to close, PMD wants the full prefix before the call to the method to match, so let's try to use common var names for store ... -->\n+            <property name=\"closeTargets\" value=\"releaseConnection,store.releaseConnection,closeQuietly,closeConnection,closeSafe,store.closeSafe,dataStore.closeSafe,getDataStore().closeSafe,close,closeResultSet,closeStmt,closeFinally,JDBCUtils.close\"/>\n+        </properties>\n+    </rule>\n \n     <rule ref=\"category/java/multithreading.xml/AvoidThreadGroup\" />\n     <rule ref=\"category/java/multithreading.xml/DontCallThreadRun\" />",
    "Updated @ since annotation , since 1 . 429 RC was cut before I could commit .": "diff --git a/core/src/main/java/hudson/tasks/Fingerprinter.java b/core/src/main/java/hudson/tasks/Fingerprinter.java\nindex e62a447f66..d62416b7a9 100644\n--- a/core/src/main/java/hudson/tasks/Fingerprinter.java\n+++ b/core/src/main/java/hudson/tasks/Fingerprinter.java\n@@ -419,7 +419,7 @@ public class Fingerprinter extends Recorder implements Serializable, DependecyDe\n          *\n          * @param includeMissing true if the original build should be included in\n          *  the result, even if it doesn't exist\n-         * @since 1.429\n+         * @since 1.430\n          */\n         public Map<AbstractProject,Integer> getDependencies(boolean includeMissing) {\n             Map<AbstractProject,Integer> r",
    "Added javadoc": "diff --git a/community/cypher/src/main/java/org/neo4j/cypher/javacompat/ExecutionResult.java b/community/cypher/src/main/java/org/neo4j/cypher/javacompat/ExecutionResult.java\nindex 9ff0e6d3eb6..e87d50727c2 100644\n--- a/community/cypher/src/main/java/org/neo4j/cypher/javacompat/ExecutionResult.java\n+++ b/community/cypher/src/main/java/org/neo4j/cypher/javacompat/ExecutionResult.java\n@@ -54,7 +54,8 @@ public class ExecutionResult implements Iterable<Map<String,Object>>\n     }\n \n     /**\n-     * Provides result objects from a single column of the result set.\n+     * Provides result objects from a single column of the result set. This method is best used for\n+     * single column results.\n      *\n      * @param n exact name of the column, as it appeared in the original query\n      * @param <T> desired type cast for the result objects",
    "Added second thread tests to QueryThreadLocalTest": "diff --git a/DaoTest/src/de/greenrobot/daotest/query/QueryThreadLocalTest.java b/DaoTest/src/de/greenrobot/daotest/query/QueryThreadLocalTest.java\nindex 614a42a..a44fb2d 100644\n--- a/DaoTest/src/de/greenrobot/daotest/query/QueryThreadLocalTest.java\n+++ b/DaoTest/src/de/greenrobot/daotest/query/QueryThreadLocalTest.java\n@@ -17,12 +17,15 @@\n  */\n package de.greenrobot.daotest.query;\n \n+import de.greenrobot.dao.DaoException;\n import de.greenrobot.dao.Query;\n+import de.greenrobot.dao.QueryBuilder;\n import de.greenrobot.daotest.TestEntity;\n import de.greenrobot.daotest.TestEntityDao.Properties;\n import de.greenrobot.daotest.entity.TestEntityTestBase;\n \n public class QueryThreadLocalTest extends TestEntityTestBase {\n+    private Query<TestEntity> queryFromOtherThread;\n \n     public void testGetForCurrentThread_SameInstance() {\n         Query<TestEntity> query = dao.queryBuilder().build();\n@@ -41,5 +44,81 @@ public class QueryThreadLocalTest extends TestEntityTestBase {\n         assertEquals(value, (int) entityFor1.getSimpleInteger());\n     }\n \n-    // TODO more tests\n+    public void testGetForCurrentThread_TwoThreads() throws InterruptedException {\n+        insert(3);\n+        createQueryFromOtherThread();\n+        Query<TestEntity> query = queryFromOtherThread.forCurrentThread();\n+        assertNotSame(queryFromOtherThread, query);\n+        query.setLimit(10);\n+        query.setOffset(0);\n+        assertEquals(getSimpleInteger(1), (int) query.uniqueOrThrow().getSimpleInteger());\n+        int expected = getSimpleInteger(2);\n+        query.setParameter(0, expected);\n+        assertEquals(expected, (int) query.list().get(0).getSimpleInteger());\n+        assertEquals(expected, (int) query.listLazy().get(0).getSimpleInteger());\n+        assertEquals(expected, (int) query.listLazyUncached().get(0).getSimpleInteger());\n+        assertEquals(expected, (int) query.unique().getSimpleInteger());\n+        assertEquals(expected, (int) query.uniqueOrThrow().getSimpleInteger());\n+    }\n+\n+    public void testThrowOutsideOwnerThread() throws InterruptedException {\n+        createQueryFromOtherThread();\n+        try {\n+            queryFromOtherThread.list();\n+            fail(\"Did not throw\");\n+        } catch (DaoException expected) {\n+        }\n+        try {\n+            queryFromOtherThread.listIterator();\n+            fail(\"Did not throw\");\n+        } catch (DaoException expected) {\n+        }\n+        try {\n+            queryFromOtherThread.listLazyUncached();\n+            fail(\"Did not throw\");\n+        } catch (DaoException expected) {\n+        }\n+        try {\n+            queryFromOtherThread.setLimit(2);\n+            fail(\"Did not throw\");\n+        } catch (DaoException expected) {\n+        }\n+        try {\n+            queryFromOtherThread.setOffset(2);\n+            fail(\"Did not throw\");\n+        } catch (DaoException expected) {\n+        }\n+        try {\n+            queryFromOtherThread.setParameter(0, 42);\n+            fail(\"Did not throw\");\n+        } catch (DaoException expected) {\n+        }\n+        try {\n+            queryFromOtherThread.unique();\n+            fail(\"Did not throw\");\n+        } catch (DaoException expected) {\n+        }\n+        try {\n+            queryFromOtherThread.uniqueOrThrow();\n+            fail(\"Did not throw\");\n+        } catch (DaoException expected) {\n+        }\n+    }\n+\n+    private void createQueryFromOtherThread() throws InterruptedException {\n+        Thread thread = new Thread() {\n+\n+            @Override\n+            public void run() {\n+                QueryBuilder<TestEntity> builder = dao.queryBuilder();\n+                builder.where(Properties.SimpleInteger.eq(getSimpleInteger(1)));\n+                builder.limit(10).offset(20);\n+                queryFromOtherThread = builder.build();\n+            }\n+        };\n+        thread.start();\n+        thread.join();\n+",
    "Bump the transport version": "diff --git a/pom.xml b/pom.xml\nindex 02c54eecc14..667113fbce8 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -1183,7 +1183,7 @@\n         <equinox.osgi.version>3.10.2.v20150203-1939</equinox.osgi.version>\n         <equinox.osgi.services.version>3.4.0.v20140312-2051</equinox.osgi.services.version>\n         <carbon.kernel.version>5.1.0</carbon.kernel.version>\n-        <transport.http.version>6.0.81</transport.http.version>\n+        <transport.http.version>6.0.84</transport.http.version>\n         <carbon.messaging.version>2.3.7</carbon.messaging.version>\n         <carbon.deployment.version>5.0.0</carbon.deployment.version>\n         <carbon.config.version>2.1.2</carbon.config.version>",
    "organized imports": "diff --git a/querydsl-hibernate-search/src/main/java/com/mysema/query/search/LuceneQuery.java b/querydsl-hibernate-search/src/main/java/com/mysema/query/search/LuceneQuery.java\nindex 3f319d48f..f7651a422 100644\n--- a/querydsl-hibernate-search/src/main/java/com/mysema/query/search/LuceneQuery.java\n+++ b/querydsl-hibernate-search/src/main/java/com/mysema/query/search/LuceneQuery.java\n@@ -11,7 +11,6 @@ import com.mysema.query.QueryModifiers;\n import com.mysema.query.SimpleProjectable;\r\n import com.mysema.query.SimpleQuery;\r\n import com.mysema.query.support.QueryMixin;\r\n-import com.mysema.query.support.SimpleQueryAdapter;\r\n import com.mysema.query.types.OrderSpecifier;\r\n import com.mysema.query.types.expr.EBoolean;\r\n import com.mysema.query.types.path.Path;\r",
    "add ( debug ) command to show toke information": "diff --git a/src/gwt/acesupport/acemixins/token_tooltip.js b/src/gwt/acesupport/acemixins/token_tooltip.js\nnew file mode 100644\nindex 0000000000..f77a3fe9ec\n--- /dev/null\n+++ b/src/gwt/acesupport/acemixins/token_tooltip.js\n@@ -0,0 +1,155 @@\n+/* ***** BEGIN LICENSE BLOCK *****\n+ * Distributed under the BSD license:\n+ *\n+ * Copyright (c) 2010, Ajax.org B.V.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *     * Redistributions of source code must retain the above copyright\n+ *       notice, this list of conditions and the following disclaimer.\n+ *     * Redistributions in binary form must reproduce the above copyright\n+ *       notice, this list of conditions and the following disclaimer in the\n+ *       documentation and/or other materials provided with the distribution.\n+ *     * Neither the name of Ajax.org B.V. nor the\n+ *       names of its contributors may be used to endorse or promote products\n+ *       derived from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\n+ * ***** END LICENSE BLOCK ***** */\n+\n+define(\"ace/token_tooltip\", [\"require\", \"exports\", \"module\"], function(require, exports, module) {\n+\n+var dom = require(\"ace/lib/dom\");\n+var oop = require(\"ace/lib/oop\");\n+var event = require(\"ace/lib/event\");\n+var Range = require(\"ace/range\").Range;\n+var Tooltip = require(\"ace/tooltip\").Tooltip;\n+\n+function TokenTooltip (editor) {\n+    if (editor.tokenTooltip)\n+        return;\n+    Tooltip.call(this, editor.container);\n+    editor.tokenTooltip = this;\n+    this.editor = editor;\n+\n+    this.update = this.update.bind(this);\n+    this.onMouseMove = this.onMouseMove.bind(this);\n+    this.onMouseOut = this.onMouseOut.bind(this);\n+    event.addListener(editor.renderer.scroller, \"mousemove\", this.onMouseMove);\n+    event.addListener(editor.renderer.content, \"mouseout\", this.onMouseOut);\n+}\n+\n+oop.inherits(TokenTooltip, Tooltip);\n+\n+(function(){\n+    this.token = {};\n+    this.range = new Range();\n+    \n+    this.update = function() {\n+        this.$timer = null;\n+        \n+        var r = this.editor.renderer;\n+        if (this.lastT - (r.timeStamp || 0) > 1000) {\n+            r.rect = null;\n+            r.timeStamp = this.lastT;\n+            this.maxHeight = window.innerHeight;\n+            this.maxWidth = window.innerWidth;\n+        }\n+\n+        var canvasPos = r.rect || (r.rect = r.scroller.getBoundingClientRect());\n+        var offset = (this.x + r.scrollLeft - canvasPos.left - r.$padding) / r.characterWidth;\n+        var row = Math.floor((this.y + r.scrollTop - canvasPos.top) / r.lineHeight);\n+        var col = Math.round(offset);\n+\n+        var screenPos = {row: row, column: col, side: offset - col > 0 ? 1 : -1};\n+        var session = this.editor.session;\n+        var docPos = session.screenToDocumentPosition(screenPos.row, screenPos.column);\n+        var token = session.getTokenAt(docPos.row, docPos.column);\n+\n+        if (!token && !session.getLine(docPos.row)) {\n+            token = {\n+                type: \"\",\n+                value: \"\",\n+                state: session.bgTokenizer.getState(0)\n+            };\n+        }\n+        if (!token) {\n+            session.removeMarker(this.marker);\n+            this.hide();\n+            return;\n+        }\n+\n+        var tokenText = token.type;\n+        if (token.state)\n+            tokenText += \"|\" + token.state;\n+        if (token.merge)\n+            tokenText += \"\\n  merge\";\n+        if (token.stateTransitions)\n+            tokenText += \"\\n  \" + token.stateTransitions.join(\"\\n  \");\n+\n+        if (this.tokenText != tokenText) {\n+            this.setText(tokenText);\n+            this.width = this.getWidth();\n+            this.height = this.getHeight();\n+            this.tokenText = tokenText;\n+        }\n+\n+        this.show(null, this.x, this.y);\n+\n+        this.token = token;\n+        session.removeMarker(this.marker);\n+        this.range = new Range(docPos.row, token.start, docPos.row, token.start + token.value.length);\n+        this.marker = session.addMarker(this.range, \"ace_bracket\", \"text\");\n+    };\n+    \n+    this.onMouseMove = function(e) {\n+        this.x = e.clientX;\n+        this.y = e.clientY;\n+        if (this.isOpen) {\n+            this.lastT = e.timeStamp;\n+            this.setPosition(this.x, this.y);\n+        }\n+        if (!this.$timer)\n+            this.$timer = setTimeout(this.update, 100);\n+    };\n+\n+    this.onMouseOut = function(e) {\n+        if (e && e.currentTarget.contains(e.relatedTarget))\n+            return;\n+        this.hide();\n+        this.editor.session.removeMarker(this.marker);\n+        this.$timer = clearTimeout(this.$timer);\n+    };\n+\n+    this.setPosition = function(x, y) {\n+        if (x + 10 + this.width > this.maxWidth)\n+            x = window.innerWidth - this.width - 10;\n+        if (y > window.innerHeight * 0.75 || y + 20 + this.height > this.maxHeight)\n+            y = y - this.height - 30;\n+\n+        Tooltip.prototype.setPosition.call(this, x + 10, y + 20);\n+    };\n+\n+    this.destroy = function() {\n+        this.onMouseOut();\n+        event.removeListener(this.editor.renderer.scroller, \"mousemove\", this.onMouseMove);\n+        event.removeListener(this.editor.renderer.content, \"mouseout\", this.onMouseOut);\n+        delete this.editor.tokenTooltip;\n+    };\n+\n+}).call(TokenTooltip.prototype);\n+\n+exports.TokenTooltip = TokenTooltip;\n+\n+});\ndiff --git a/src/gwt/src/org/rstudio/studio/client/workbench/commands/Commands.cmd.xml b/src/gwt/src/org/rstudio/studio/client/workbench/commands/Commands.cmd.xml\nindex 0207d524cc..9b6f5e46fc 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/commands/Commands.cmd.xml\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/commands/Commands.cmd.xml\n@@ -425,6 +425,8 @@ well as menu structures (for main menu and popup menus).\n             <cmd refid=\"updateCredentials\"/>\n             <cmd refid=\"diagnosticsReport\"/>\n             <separator/>\n+            <cmd refid=\"toggleEditorTokenInfo\"/>\n+            <separator/>\n             <cmd refid=\"debugDumpContents\"/>\n             <cmd refid=\"debugImportDump\"/>\n             <cmd refid=\"raiseException\"/>\n@@ -2518,5 +2520,9 @@ well as menu structures (for main menu and popup menus).\n         desc=\"Connect or disconnect accounts\"\n         visible=\"false\"\n         rebindable=\"false\"/>\n+        \n+   <cmd id=\"toggleEditorTokenInfo\"\n+        menuLabel=\"Toggle Editor Token Information\"\n+        rebindable=\"false\"/>\n \n </commands>\ndiff --git a/src/gwt/src/org/rstudio/studio/client/workbench/commands/Commands.java b/src/gwt/src/org/rstudio/studio/client/workbench/commands/Commands.java\nindex 67cb2db8b1..d0959ad5ad 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/commands/Commands.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/commands/Commands.java\n@@ -437,6 +437,7 @@ public abstract class\n    public abstract AppCommand layoutConsoleOnRight();\n    public abstract AppCommand paneLayout();\n    public abstract AppCommand maximizeConsole();\n+   public abstract AppCommand toggleEditorTokenInfo();\n    \n    public static final String KEYBINDINGS_PATH =\n          \"~/.R/keybindings/rstudio_commands.json\";\ndiff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex e2c54c2487..025f46f211 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n@@ -940,7 +940,6 @@ public class Source implements InsertSourceHandler,\n             });\n    }\n    \n-\n    @Handler\n    public void onNewSourceDoc()\n    {\ndiff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/AceEditor.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/AceEditor.java\nindex 96c09613b3..35a589bc9d 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/AceEditor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/AceEditor.java\n@@ -2799,6 +2799,20 @@ public class AceEditor implements DocDisplay,\n       return snippets_.onInsertSnippet();\n    }\n    \n+   public void toggleTokenInfo()\n+   {\n+      toggleTokenInfo(widget_.getEditor());\n+   }\n+   \n+   private static final native void toggleTokenInfo(AceEditorNative editor) /*-{\n+      if (editor.tokenTooltip && editor.tokenTooltip.destroy) {\n+         editor.tokenTooltip.destroy();\n+      } else {\n+         var TokenTooltip = $wnd.require(\"ace/token_tooltip\").TokenTooltip;\n+         editor.tokenTooltip = new TokenTooltip(editor);\n+      }\n+   }-*/;\n+   \n    private static final int DEBUG_CONTEXT_LINES = 2;\n    private final HandlerManager handlers_ = new HandlerManager(this);\n    private final AceEditorWidget widget_;\ndiff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/DocDisplay.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/DocDisplay.java\nindex 0d9fba5daf..13dc4a1176 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/DocDisplay.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/DocDisplay.java\n@@ -345,4 +345,6 @@ public interface DocDisplay extends HasValueChangeHandlers<Void>,\n    \n    void goToLineStart();\n    void goToLineEnd();\n+   \n+   void toggleTokenInfo();\n }\ndiff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex c509ca2afc..6b376ac6bf 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n@@ -5013,6 +5013,12 @@ public class TextEditingTarget implements\n       }\n    }\n    \n+   @Handler\n+   void onToggleEditorTokenInfo()\n+   {\n+      docDisplay_.toggleTokenInfo();\n+   }\n+   \n    boolean useScopeTreeFolding()\n    {\n       return docDisplay_.hasScopeTree();",
    "add supply interface in AccountCapsule": "diff --git a/src/main/java/org/tron/core/capsule/AccountCapsule.java b/src/main/java/org/tron/core/capsule/AccountCapsule.java\nindex 623998d0b..0348d4ed2 100644\n--- a/src/main/java/org/tron/core/capsule/AccountCapsule.java\n+++ b/src/main/java/org/tron/core/capsule/AccountCapsule.java\n@@ -329,6 +329,14 @@ public class AccountCapsule implements ProtoCapsule<Account>, Comparable<Account\n     return getInstance().getFrozenList();\n   }\n \n+  public int getFrozenSupplyCount() {\n+    return getInstance().getFrozenSupplyCount();\n+  }\n+\n+  public List<Frozen> getFrozenSupplyList() {\n+    return getInstance().getFrozenSupplyList();\n+  }\n+\n   public long getFrozenBalance() {\n     List<Frozen> frozenList = getFrozenList();\n     final long[] frozenBalance = {0};",
    "Allow obj meshes without texture coords .": "diff --git a/engine/src/main/java/org/terasology/rendering/assets/mesh/ObjMeshFormat.java b/engine/src/main/java/org/terasology/rendering/assets/mesh/ObjMeshFormat.java\nindex 1c35cdc89..bc33b2283 100644\n--- a/engine/src/main/java/org/terasology/rendering/assets/mesh/ObjMeshFormat.java\n+++ b/engine/src/main/java/org/terasology/rendering/assets/mesh/ObjMeshFormat.java\n@@ -69,10 +69,10 @@ public MeshData load(ResourceUrn urn, List<AssetDataFile> inputs) throws IOExcep\n             if (data.getVertices() == null) {\n                 throw new IOException(\"No vertices define\");\n             }\n-            //if (data.getNormals() == null || data.getNormals().size() != data.getVertices().size()) {\n-            //    throw new IOException(\"The number of normals does not match the number of vertices.\");\n-            //}\n-            if (data.getTexCoord0() == null || data.getTexCoord0().size() / 2 != data.getVertices().size() / 3) {\n+            if (!data.getNormals().isEmpty() && data.getNormals().size() != data.getVertices().size()) {\n+                throw new IOException(\"The number of normals does not match the number of vertices.\");\n+            }\n+            if (!data.getTexCoord0().isEmpty() && data.getTexCoord0().size() / 2 != data.getVertices().size() / 3) {\n                 throw new IOException(\"The number of tex coords does not match the number of vertices.\");\n             }\n ",
    "Renames occurrences of callParticipant to callPeer so that it would better reflect our new Call architecture that also includes conferencing and ConferenceMembers": "diff --git a/src/net/java/sip/communicator/impl/callhistory/CallRecordImpl.java b/src/net/java/sip/communicator/impl/callhistory/CallRecordImpl.java\nindex 4fb410ad3..c52728a86 100644\n--- a/src/net/java/sip/communicator/impl/callhistory/CallRecordImpl.java\n+++ b/src/net/java/sip/communicator/impl/callhistory/CallRecordImpl.java\n@@ -53,7 +53,7 @@ public Call getSourceCall()\n \n     /**\n      * Set the time when the call finishes\n-     * If some participant has no end Time set we set it also\n+     * If some peer has no end Time set we set it also\n      * @param endTime Date\n      */\n     public void setEndTime(Date endTime)\ndiff --git a/src/net/java/sip/communicator/impl/gui/main/call/CallManager.java b/src/net/java/sip/communicator/impl/gui/main/call/CallManager.java\nindex e4b98ba32..ccde718cc 100644\n--- a/src/net/java/sip/communicator/impl/gui/main/call/CallManager.java\n+++ b/src/net/java/sip/communicator/impl/gui/main/call/CallManager.java\n@@ -280,7 +280,7 @@ public void run()\n \n \n     /**\n-     * Answers all call participants in the given call.\n+     * Answers all call peers in the given call.\n      */\n     private static class AnswerCallThread\n         extends Thread\n@@ -295,22 +295,22 @@ public AnswerCallThread(Call call)\n         public void run()\n         {\n             ProtocolProviderService pps = call.getProtocolProvider();\n-            Iterator<CallPeer> participants = call.getCallPeers();\n+            Iterator<CallPeer> peers = call.getCallPeers();\n \n-            while (participants.hasNext())\n+            while (peers.hasNext())\n             {\n-                CallPeer participant = participants.next();\n+                CallPeer peer = peers.next();\n                 OperationSetBasicTelephony telephony =\n                     (OperationSetBasicTelephony) pps\n                         .getOperationSet(OperationSetBasicTelephony.class);\n \n                 try\n                 {\n-                    telephony.answerCallPeer(participant);\n+                    telephony.answerCallPeer(peer);\n                 }\n                 catch (OperationFailedException e)\n                 {\n-                    logger.error(\"Could not answer to : \" + participant\n+                    logger.error(\"Could not answer to : \" + peer\n                         + \" caused by the following exception: \" + e);\n                 }\n             }\n@@ -318,7 +318,7 @@ public void run()\n     }\n \n     /**\n-     * Hangups all call participants in the given call.\n+     * Hangups all call peers in the given call.\n      */\n     private static class HangupCallThread\n         extends Thread\n@@ -333,11 +333,11 @@ public HangupCallThread(Call call)\n         public void run()\n         {\n             ProtocolProviderService pps = call.getProtocolProvider();\n-            Iterator<CallPeer> participants = call.getCallPeers();\n+            Iterator<CallPeer> peers = call.getCallPeers();\n \n-            while (participants.hasNext())\n+            while (peers.hasNext())\n             {\n-                CallPeer participant = participants.next();\n+                CallPeer participant = peers.next();\n                 OperationSetBasicTelephony telephony =\n                     (OperationSetBasicTelephony) pps\n                         .getOperationSet(OperationSetBasicTelephony.class);\ndiff --git a/src/net/java/sip/communicator/impl/gui/main/call/ReceivedCallDialog.java b/src/net/java/sip/communicator/impl/gui/main/call/ReceivedCallDialog.java\nindex b14c8cc9a..0dbb05f78 100644\n--- a/src/net/java/sip/communicator/impl/gui/main/call/ReceivedCallDialog.java\n+++ b/src/net/java/sip/communicator/impl/gui/main/call/ReceivedCallDialog.java\n@@ -121,41 +121,40 @@ private void initComponents()\n      */\n     private void initCallLabel(JLabel callLabel)\n     {\n-        Iterator<CallPeer> participantsIter\n-            = incomingCall.getCallPeers();\n+        Iterator<CallPeer> peersIter = incomingCall.getCallPeers();\n \n-        boolean hasMoreParticipants = false;\n+        boolean hasMorePeers = false;\n         String text = \"\";\n \n         ImageIcon imageIcon =\n             ImageUtils.getScaledRoundedIcon(ImageLoader\n                 .getImage(ImageLoader.DEFAULT_USER_PHOTO), 40, 45);\n \n-        while (participantsIter.hasNext())\n+        while (peersIter.hasNext())\n         {\n-            CallPeer participant = participantsIter.next();\n+            CallPeer peer = peersIter.next();\n \n-            // More participants.\n-            if (participantsIter.hasNext())\n+            // More peers.\n+            if (peersIter.hasNext())\n             {\n                 text = callLabel.getText()\n-                    + participant.getDisplayName() + \", \";\n+                    + peer.getDisplayName() + \", \";\n \n-                hasMoreParticipants = true;\n+                hasMorePeers = true;\n             }\n-            // Only one participant.\n+            // Only one peer.\n             else\n             {\n                 text = callLabel.getText()\n-                    + participant.getDisplayName()\n+                    + peer.getDisplayName()\n                     + \" \"\n                     + GuiActivator.getResources().getI18NString(\"service.gui.IS_CALLING\");\n \n-                imageIcon = getParticipantImage(participant);\n+                imageIcon = getPeerImage(peer);\n             }\n         }\n \n-        if (hasMoreParticipants)\n+        if (hasMorePeers)\n             text += GuiActivator.getResources()\n                 .getI18NString(\"service.gui.ARE_CALLING\");\n \n@@ -186,21 +185,21 @@ else if (buttonName.equals(HANGUP_BUTTON))\n     }\n \n     /**\n-     * Returns the participant image.\n+     * Returns the peer image.\n      *\n-     * @param participant The call participant, for which we're returning an\n+     * @param peer The call peer, for which we're returning an\n      * image.\n-     * @return the participant image.\n+     * @return the peer image.\n      */\n-    private ImageIcon getParticipantImage(CallPeer participant)\n+    private ImageIcon getPeerImage(CallPeer peer)\n     {\n      ",
    "Add a verify step in do - release . sh": "diff --git a/do-release.sh b/do-release.sh\nindex f276238301..d1efe7f60d 100755\n--- a/do-release.sh\n+++ b/do-release.sh\n@@ -113,7 +113,10 @@ echo\n echo \"Updated stats in release notes:\"\n echo \"$STATS\"\n echo\n+echo \"Please verify docs/pages/release_notes.md\"\n echo\n+echo \"Press enter to continue...\"\n+read\n \n # install bundles needed for rendering release notes\n bundle install --with=release_notes_preprocessing --path vendor/bundle",
    "Add support for missing values in DL ( via mean imputation ) .": "diff --git a/src/main/java/hex/FrameTask.java b/src/main/java/hex/FrameTask.java\nindex a7b161c7e..f6e459b47 100644\n--- a/src/main/java/hex/FrameTask.java\n+++ b/src/main/java/hex/FrameTask.java\n@@ -23,6 +23,8 @@ public abstract class FrameTask<T extends FrameTask<T>> extends MRTask2<T>{\n   protected float _useFraction = 1.0f;\n   protected boolean _shuffle = false;\n \n+  protected boolean skipMissing() { return true; }\n+\n   public FrameTask(Key jobKey, DataInfo dinfo) {\n     this(jobKey,dinfo,null);\n   }\n@@ -556,10 +558,11 @@ public abstract class FrameTask<T extends FrameTask<T>> extends MRTask2<T>{\n         final long lr = r + chunks[0]._start;\n         if ((_dinfo._nfolds > 0 && (lr % _dinfo._nfolds) == _dinfo._foldId)\n                 || (skip_rng != null && skip_rng.nextFloat() > _useFraction))continue;\n-        for(Chunk c:chunks)if(c.isNA0(r))continue OUTER; // skip rows with NAs!\n+        for(Chunk c:chunks)if(skipMissing() && c.isNA0(r))continue OUTER; // skip rows with NAs!\n         ++num_processed_rows;\n         int i = 0, ncats = 0;\n         for(; i < _dinfo._cats; ++i){\n+          assert(!chunks[i].isNA0(r));\n           int c = (int)chunks[i].at80(r);\n           if(_dinfo._catLvls != null){ // some levels are ignored?\n             c = Arrays.binarySearch(_dinfo._catLvls[i],c);\n@@ -572,13 +575,14 @@ public abstract class FrameTask<T extends FrameTask<T>> extends MRTask2<T>{\n         }\n         final int n = chunks.length-_dinfo._responses;\n         for(;i < n;++i){\n-          double d = chunks[i].at0(r);\n+          double d = chunks[i].at0(r); //can be NA if skipMissing() == false\n           if(_dinfo._normMul != null) d = (d - _dinfo._normSub[i-_dinfo._cats])*_dinfo._normMul[i-_dinfo._cats];\n           nums[i-_dinfo._cats] = d;\n         }\n         for(i = 0; i < _dinfo._responses; ++i) {\n           response[i] = chunks[chunks.length-_dinfo._responses + i].at0(r);\n           if (_dinfo._normRespMul != null) response[i] = (response[i] - _dinfo._normRespSub[i])*_dinfo._normRespMul[i];\n+          if(Double.isNaN(response[i]))continue OUTER; // skip rows without a valid response (no supervised training possible)\n         }\n         long seed = offset + rrr*(end-start) + r;\n         if (outputs != null && outputs.length > 0)\ndiff --git a/src/main/java/hex/deeplearning/DeepLearningTask.java b/src/main/java/hex/deeplearning/DeepLearningTask.java\nindex 992003d6a..230c93319 100644\n--- a/src/main/java/hex/deeplearning/DeepLearningTask.java\n+++ b/src/main/java/hex/deeplearning/DeepLearningTask.java\n@@ -19,6 +19,8 @@ public class DeepLearningTask extends FrameTask<DeepLearningTask> {\n \n   int _chunk_node_count = 1;\n \n+  @Override protected boolean skipMissing() { return false; }\n+\n   public DeepLearningTask(hex.deeplearning.DeepLearningModel.DeepLearningModelInfo input, float fraction){this(input,fraction,null);}\n   private DeepLearningTask(hex.deeplearning.DeepLearningModel.DeepLearningModelInfo input, float fraction, H2OCountedCompleter cmp){\n     super(input.get_params().self(),input.data_info(),cmp);\n@@ -167,8 +169,13 @@ public class DeepLearningTask extends FrameTask<DeepLearningTask> {\n           if (training) {\n             for (int i = 1; i < neurons.length - 1; i++)\n               Arrays.fill(neurons[i]._e.raw(), 0);\n-            assert ((double) (int) responses[0] == responses[0]);\n-            final int target_label = (int) responses[0];\n+            int target_label;\n+            if (Double.isNaN(responses[0])) { //missing response\n+              target_label = Neurons.missing_int_value;\n+            } else {\n+              assert ((double) (int) responses[0] == responses[0]); //classification -> integer labels expected\n+              target_label = (int) responses[0];\n+            }\n             ((Neurons.Softmax) neurons[neurons.length - 1]).bprop(target_label);\n           }\n         } else {\n@@ -176,7 +183,12 @@ public class DeepLearningTask extends FrameTask<DeepLearningTask> {\n           if (training) {\n             for (int i = 1; i < neurons.length - 1; i++)\n               Arrays.fill(neurons[i]._e.raw(), 0);\n-            final float target_value = (float) responses[0];\n+            float target_value;\n+            if (Double.isNaN(responses[0])) { //missing response\n+              target_value = Neurons.missing_real_value;\n+            } else {\n+              target_value = (float) responses[0];\n+            }\n             ((Neurons.Linear) neurons[neurons.length - 1]).bprop(target_value);\n           }\n         }\ndiff --git a/src/main/java/hex/deeplearning/Neurons.java b/src/main/java/hex/deeplearning/Neurons.java\nindex 4050c6967..3eee80643 100644\n--- a/src/main/java/hex/deeplearning/Neurons.java\n+++ b/src/main/java/hex/deeplearning/Neurons.java\n@@ -5,7 +5,6 @@ import hex.deeplearning.DeepLearning.Loss;\n import water.Iced;\n import water.MemoryManager;\n import water.api.Request.API;\n-import water.util.Log;\n import water.util.Utils;\n \n import java.util.Arrays;\n@@ -89,16 +88,8 @@ public abstract class Neurons {\n \n   public DenseVector _avg_a;\n \n-//  /**\n-//   * We need a way to encode a missing value in the neural net forward/back-propagation scheme.\n-//   * For simplicity and performance, we simply use the largest values to encode a missing value.\n-//   * If we run into exactly one of those values with regular neural net updates, then we're very\n-//   * likely also running into overflow problems, which will trigger a NaN somewhere, which will be\n-//   * caught and lead to automatic job cancellation.\n-//   */\n-//  public static final int missing_int_value = Integer.MAX_VALUE; //encode missing label or target\n-//  public static final double missing_double_value = Double.MAX_VALUE; //encode missing input\n-\n+  public static final int missing_int_value = Integer.MAX_VALUE; //encode missing label\n+  public static final Float missing_real_value = Float.NaN; //encode missing regression target\n \n   /**\n    * Helper to check sanity of Neuron layers\n@@ -928,7 +919,7 @@ public abstract class Neurons {\n      * @param target actual class label\n      */\n     protected void bprop(int target) {\n-//      if (target == missing_int_value) return; //ignore missing response values\n+      assert (target != missing_int_value); // no correction of weights/biases for missing label\n       float m = momentum();\n       float r = _minfo.adaDelta() ? 0 : rate(_minfo.get_processed_total()) * (1f - m);\n       float g; //partial derivative dE/dy * dy/dnet\n@@ -966,7 +957,7 @@ public abstract class Neurons {\n      * @param target floating-point target value\n      */\n     protected void bprop(float target) {\n-//      if (target == missing_double_value) return;\n+      assert (target != missing_real_value);\n       if (params.loss != Loss.MeanSquare) throw new UnsupportedOperationException(\"Regression is only implemented for MeanSquare error.\");\n       final int row = 0;\n       // Computing partial derivative: dE/dnet = dE/dy * dy/dnet = dE/dy * 1",
    "Add test to ensure that . env works in Gradle .": "diff --git a/devtools/gradle/src/functionalTest/java/io/quarkus/gradle/devmode/DotEnvQuarkusDevModeConfigurationTest.java b/devtools/gradle/src/functionalTest/java/io/quarkus/gradle/devmode/DotEnvQuarkusDevModeConfigurationTest.java\nnew file mode 100644\nindex 00000000000..5a23dcb26bb\n--- /dev/null\n+++ b/devtools/gradle/src/functionalTest/java/io/quarkus/gradle/devmode/DotEnvQuarkusDevModeConfigurationTest.java\n@@ -0,0 +1,15 @@\n+package io.quarkus.gradle.devmode;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class DotEnvQuarkusDevModeConfigurationTest extends QuarkusDevGradleTestBase {\n+    @Override\n+    protected String projectDirectoryName() {\n+        return \"dotenv-config-java-module\";\n+    }\n+\n+    @Override\n+    protected void testDevMode() throws Exception {\n+        assertThat(getHttpResponse(\"/hello\")).contains(\"hey\");\n+    }\n+}\ndiff --git a/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/.env b/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/.env\nnew file mode 100644\nindex 00000000000..c1f759725f0\n--- /dev/null\n+++ b/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/.env\n@@ -0,0 +1 @@\n+GREETING_MESSAGE=hey\ndiff --git a/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/build.gradle b/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/build.gradle\nnew file mode 100644\nindex 00000000000..183d880b88a\n--- /dev/null\n+++ b/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/build.gradle\n@@ -0,0 +1,33 @@\n+plugins {\n+    id 'java'\n+    id 'io.quarkus'\n+}\n+\n+repositories {\n+     mavenLocal()\n+     mavenCentral()\n+}\n+\n+dependencies {\n+    implementation enforcedPlatform(\"${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}\")\n+    implementation 'io.quarkus:quarkus-resteasy'\n+\n+    testImplementation 'io.quarkus:quarkus-junit5'\n+    testImplementation 'io.rest-assured:rest-assured'\n+}\n+\n+group 'org.acme'\n+version '1.0.0-SNAPSHOT'\n+\n+compileJava {\n+    options.encoding = 'UTF-8'\n+    options.compilerArgs << '-parameters'\n+}\n+\n+compileTestJava {\n+    options.encoding = 'UTF-8'\n+}\n+\n+quarkusDev {\n+    workingDir = System.getProperty(\"java.io.tmpdir\")\n+}\ndiff --git a/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/gradle.properties b/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/gradle.properties\nnew file mode 100644\nindex 00000000000..ec2b6ef199c\n--- /dev/null\n+++ b/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/gradle.properties\n@@ -0,0 +1,2 @@\n+quarkusPlatformArtifactId=quarkus-bom\n+quarkusPlatformGroupId=io.quarkus\ndiff --git a/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/settings.gradle b/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/settings.gradle\nnew file mode 100644\nindex 00000000000..554eb4c4098\n--- /dev/null\n+++ b/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/settings.gradle\n@@ -0,0 +1,11 @@\n+pluginManagement {\n+    repositories {\n+        mavenLocal()\n+        mavenCentral()\n+        gradlePluginPortal()\n+    }\n+    plugins {\n+      id 'io.quarkus' version \"${quarkusPluginVersion}\"\n+    }\n+}\n+rootProject.name='code-with-quarkus'\ndiff --git a/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/src/main/java/org/acme/GreetingResource.java b/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/src/main/java/org/acme/GreetingResource.java\nnew file mode 100644\nindex 00000000000..6ac027d26dc\n--- /dev/null\n+++ b/devtools/gradle/src/functionalTest/resources/dotenv-config-java-module/src/main/java/org/acme/GreetingResource.java\n@@ -0,0 +1,21 @@\n+package org.acme;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+\n+@Path(\"/hello\")\n+public class GreetingResource {\n+\n+    @ConfigProperty(name = \"greeting.message\")\n+    String message;\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        return message;\n+    }\n+}",
    "updated expected output for UTs": "diff --git a/frontend/server/src/test/resources/inference_open_api.json b/frontend/server/src/test/resources/inference_open_api.json\nindex e0b601d2..702af168 100644\n--- a/frontend/server/src/test/resources/inference_open_api.json\n+++ b/frontend/server/src/test/resources/inference_open_api.json\n@@ -125,7 +125,7 @@\n         }\n       }\n     },\n-    \"/predictions/{model_name}\": {\n+    \"/predictions/{model_name}[/{model_version}]\": {\n       \"post\": {\n         \"description\": \"Predictions entry point for each model. Use OPTIONS method to get detailed model API input and output description.\",\n         \"operationId\": \"predictions\",\ndiff --git a/frontend/server/src/test/resources/management_open_api.json b/frontend/server/src/test/resources/management_open_api.json\nindex 79ff026d..7848c2e9 100644\n--- a/frontend/server/src/test/resources/management_open_api.json\n+++ b/frontend/server/src/test/resources/management_open_api.json\n@@ -448,9 +448,9 @@\n         }\n       }\n     },\n-    \"/models/{model_name}\": {\n+    \"/models/{model_name}[/{model_version}]\": {\n       \"get\": {\n-        \"description\": \"Provides detailed information about the specified model.\",\n+        \"description\": \"Provides detailed information about the specified version of a model. If no version is specified, returns the details of default version. If \\\"all\\\" is specified as version, returns the details about all the versions of the model.\",\n         \"operationId\": \"describeModel\",\n         \"parameters\": [\n           {\n@@ -461,6 +461,15 @@\n             \"schema\": {\n               \"type\": \"string\"\n             }\n+          },\n+          {\n+            \"in\": \"path\",\n+            \"name\": \"model_version\",\n+            \"description\": \"Version of model to describe.\",\n+            \"required\": true,\n+            \"schema\": {\n+              \"type\": \"string\"\n+            }\n           }\n         ],\n         \"responses\": {\n@@ -607,7 +616,7 @@\n         }\n       },\n       \"put\": {\n-        \"description\": \"Configure number of workers for a model, This is a asynchronous call by default. Caller need to call describeModel check if the model workers has been changed.\",\n+        \"description\": \"Configure number of workers for a specified version of a model. If no version is specified, this applies to the default version of the model. This is a asynchronous call by default. Caller need to call describeModel check if the model workers has been changed.\",\n         \"operationId\": \"setAutoScale\",\n         \"parameters\": [\n           {\n@@ -619,6 +628,15 @@\n               \"type\": \"string\"\n             }\n           },\n+          {\n+            \"in\": \"path\",\n+            \"name\": \"model_version\",\n+            \"description\": \"Version of model to describe.\",\n+            \"required\": true,\n+            \"schema\": {\n+              \"type\": \"string\"\n+            }\n+          },\n           {\n             \"in\": \"query\",\n             \"name\": \"min_worker\",\n@@ -818,7 +836,7 @@\n         }\n       },\n       \"delete\": {\n-        \"description\": \"Unregister a model from TorchServe. This is an asynchronous call by default. Caller can call listModels to confirm if all the works has be terminated.\",\n+        \"description\": \"Unregister the specified version of a model from TorchServe. If no version is specified, TorchServe tries to unregister the default version of the model and unregisters it if it is the only version available. This is an asynchronous call by default. Caller can call listModels to confirm if all the works has be terminated.\",\n         \"operationId\": \"unregisterModel\",\n         \"parameters\": [\n           {\n@@ -830,6 +848,15 @@\n               \"type\": \"string\"\n             }\n           },\n+          {\n+            \"in\": \"path\",\n+            \"name\": \"model_version\",\n+            \"description\": \"Version of model to unregister.\",\n+            \"required\": true,\n+            \"schema\": {\n+              \"type\": \"string\"\n+            }\n+          },\n           {\n             \"in\": \"query\",\n             \"name\": \"synchronous\",\n@@ -919,6 +946,35 @@\n               }\n             }\n           },\n+          \"400\": {\n+            \"description\": \"Model version not found\",\n+            \"content\": {\n+              \"application/json\": {\n+                \"schema\": {\n+                  \"type\": \"object\",\n+                  \"required\": [\n+                    \"code\",\n+                    \"type\",\n+                    \"message\"\n+                  ],\n+                  \"properties\": {\n+                    \"code\": {\n+                      \"type\": \"integer\",\n+                      \"description\": \"Error code.\"\n+                    },\n+                    \"type\": {\n+                      \"type\": \"string\",\n+                      \"description\": \"Error type.\"\n+                    },\n+                    \"message\": {\n+                      \"type\": \"string\",\n+                      \"description\": \"Error message.\"\n+                    }\n+                  }\n+                }\n+              }\n+            }\n+          },\n           \"408\": {\n             \"description\": \"Request Timeout Error\",\n             \"content\": {\n@@ -979,6 +1035,111 @@\n           }\n         }\n       }\n+    },\n+    \"/models/{model_name}/{model_version}/set-default\": {\n+      \"put\": {\n+        \"description\": \"Set default version of a model\",\n+        \"operationId\": \"setDefault\",\n+        \"parameters\": [\n+          {\n+         ",
    "Improve documentation": "diff --git a/README b/README\nindex b5db6e3c6..34a82e0b3 100644\n--- a/README\n+++ b/README\n@@ -15,7 +15,7 @@ Atmosphere is also availaible as part of the following framework:\n * Akka, event-driven, scalable and fault-tolerant architectures for the JVM\n * Google Widget Toolkit (GWT)\n \n-Browse our super easy Rest based PubSub sample and read on what is Atmosphere exactly.\n+Atmosphere ship with a JQuery Plug In that can be used with any Comet or WebSocket Framework:\n \n     http://is.gd/bJXhH\n ",
    "let the user to customize the 403 error page ( <issue_id> ) .": "diff --git a/README.txt b/README.txt\nindex c9977efb7c7..9ff5e59e856 100644\n--- a/README.txt\n+++ b/README.txt\n@@ -433,6 +433,9 @@ web.xml of source.war file and change them (see note1) appropriately.\n   - The file 'body_include' can be created under DATA_ROOT.\n     The contents of this file will be inserted above the footer of the web\n     application's \"Home\" page.\n+  - The file 'error_forbidden_include' can be created under DATA_ROOT.\n+    The contents of this file will be displayed as the error page when\n+    the user is forbidden to see a particular project with HTTP 403 code.\n \n \n 5.4.3 - Path Descriptions (optional)\ndiff --git a/src/org/opensolaris/opengrok/configuration/Configuration.java b/src/org/opensolaris/opengrok/configuration/Configuration.java\nindex e2d4619b757..0ec1c4d34be 100644\n--- a/src/org/opensolaris/opengrok/configuration/Configuration.java\n+++ b/src/org/opensolaris/opengrok/configuration/Configuration.java\n@@ -1014,6 +1014,30 @@ public final class Configuration {\n         return body;\n     }\n \n+    /**\n+     * The name of the file relative to the <var>DATA_ROOT</var>, which should\n+     * be included into the error page handling access forbidden errors - HTTP\n+     * code 403 Forbidden.\n+     */\n+    public static final String E_FORBIDDEN_INCLUDE_FILE = \"error_forbidden_include\";\n+\n+    private transient String eforbidden_content = null;\n+\n+    /**\n+     * Get the contents of the page for forbidden error page (403 Forbidden)\n+     * include file.\n+     *\n+     * @return an empty string if it could not be read successfully, the\n+     * contents of the file otherwise.\n+     * @see Configuration#E_FORBIDDEN_INCLUDE_FILE\n+     */\n+    public String getForbiddenIncludeFileContent() {\n+        if (eforbidden_content == null) {\n+            eforbidden_content = getFileContent(new File(getDataRoot(), E_FORBIDDEN_INCLUDE_FILE));\n+        }\n+        return eforbidden_content;\n+    }\n+\n     /**\n      * Get the eftar file, which contains definition tags.\n      *\ndiff --git a/web/WEB-INF/web.xml b/web/WEB-INF/web.xml\nindex d5249d94005..a9f9e0f75f4 100644\n--- a/web/WEB-INF/web.xml\n+++ b/web/WEB-INF/web.xml\n@@ -127,6 +127,15 @@\n <param-name>keepgenerated</param-name><param-value>true</param-value>\n </init-param>\n   </servlet>\n+  <servlet>\n+      <display-name>Forbidden error handler</display-name>\n+      <servlet-name>eforbidden</servlet-name>\n+      <jsp-file>/eforbidden.jsp</jsp-file>\n+      <init-param>\n+          <param-name>keepgenerated</param-name>\n+          <param-value>true</param-value>\n+      </init-param>\n+  </servlet>\n   <servlet-mapping>\n     <servlet-name>search</servlet-name>\n     <url-pattern>/search</url-pattern>\t\t<!-- SEARCH_P -->\n@@ -179,6 +188,10 @@\n     <servlet-name>enoent</servlet-name>\n     <url-pattern>/enoent</url-pattern>\t\t<!-- NOT_FOUND -->\n   </servlet-mapping>\n+  <servlet-mapping>\n+      <servlet-name>eforbidden</servlet-name>\n+      <url-pattern>/eforbidden</url-pattern>\t\t<!-- FORBIDDEN -->\n+  </servlet-mapping>\n   <error-page>\n     <error-code>404</error-code>\n     <location>/enoent</location>\n@@ -187,8 +200,12 @@\n     <error-code>500</error-code>\n     <location>/error</location>\n   </error-page>\n+  <error-page>\n+      <error-code>403</error-code>\n+      <location>/eforbidden</location>\n+  </error-page>\n   <jsp-config>\n-    <jsp-property-group>\n+      <jsp-property-group>\n       <url-pattern>*.jsp</url-pattern>\n       <trim-directive-whitespaces>true</trim-directive-whitespaces>\n     </jsp-property-group>\ndiff --git a/web/eforbidden.jsp b/web/eforbidden.jsp\nnew file mode 100644\nindex 00000000000..3d4121ab9a7\n--- /dev/null\n+++ b/web/eforbidden.jsp\n@@ -0,0 +1,30 @@\n+<%--\n+CDDL HEADER START\n+\n+The contents of this file are subject to the terms of the\n+Common Development and Distribution License (the \"License\").\n+You may not use this file except in compliance with the License.\n+\n+See LICENSE.txt included in this distribution for the specific\n+language governing permissions and limitations under the License.\n+\n+When distributing Covered Code, include this CDDL HEADER in each\n+file and include the License file at LICENSE.txt.\n+If applicable, add the following below this CDDL HEADER, with the\n+fields enclosed by brackets \"[]\" replaced with your own identifying\n+information: Portions Copyright [yyyy] [name of copyright owner]\n+\n+CDDL HEADER END\n+\n+Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.\n+--%><%@page  session=\"false\" isErrorPage=\"true\" import=\"\n+             org.opensolaris.opengrok.web.PageConfig\"\n+%><%\n+    /* ---------------------- eforbidden.jspf start --------------------- */\n+    {\n+%>\n+<%= PageConfig.get(request).getEnv().getConfiguration().getForbiddenIncludeFileContent()%>\n+<%\n+    }\n+    /* ---------------------- eforbidden.jspf end --------------------- */\n+%>",
    "Added feedback section": "diff --git a/README.md b/README.md\nindex ae0690ae3..dbb0e562d 100644\n--- a/README.md\n+++ b/README.md\n@@ -8,6 +8,11 @@ This is the official repository of AntennaPod, a podcast manager for Android.\n </a>\n [AntennaPod on fdroid.org](http://f-droid.org/repository/browse/?fdcategory=Multimedia&fdid=de.danoeh.antennapod&fdpage=1)\n \n+## Feedback\n+You can use the [AntennaPod Google Group](https://groups.google.com/forum/#!forum/antennapod) for discussions about the app.\n+\n+Bug reports and feature requests can be submitted [here](https://github.com/danieloeh/AntennaPod/issues/new) (please read the [instructions](https://github.com/danieloeh/AntennaPod/blob/master/CONTRIBUTING.md) on how to report a bug and how to submit a feature request first!).\n+\n ## License\n \n AntennaPod is licensed under the MIT License. You can find the license text in the LICENSE file.",
    "Adding \\' kswTextOn \\' and \\' kswTextOff \\' attributes": "diff --git a/SwitchButton/library/src/main/java/com/kyleduo/switchbutton/SwitchButton.java b/SwitchButton/library/src/main/java/com/kyleduo/switchbutton/SwitchButton.java\nindex 64f589a..6f30abe 100644\n--- a/SwitchButton/library/src/main/java/com/kyleduo/switchbutton/SwitchButton.java\n+++ b/SwitchButton/library/src/main/java/com/kyleduo/switchbutton/SwitchButton.java\n@@ -13,6 +13,9 @@ import android.graphics.RectF;\n import android.graphics.drawable.Drawable;\n import android.graphics.drawable.StateListDrawable;\n import android.support.v4.content.ContextCompat;\n+import android.text.Layout;\n+import android.text.StaticLayout;\n+import android.text.TextPaint;\n import android.util.AttributeSet;\n import android.view.MotionEvent;\n import android.view.SoundEffectConstants;\n@@ -52,7 +55,7 @@ public class SwitchButton extends CompoundButton {\n \n \tprivate int mCurrThumbColor, mCurrBackColor, mNextBackColor;\n \tprivate Drawable mCurrentBackDrawable, mNextBackDrawable;\n-\tprivate RectF mThumbRectF, mBackRectF, mSafeRectF;\n+\tprivate RectF mThumbRectF, mBackRectF, mSafeRectF, mTextOnRectF, mTextOffRectF;\n \tprivate Paint mPaint;\n \t// whether using Drawable for thumb or back\n \tprivate boolean mIsThumbUseDrawable, mIsBackUseDrawable;\n@@ -66,6 +69,11 @@ public class SwitchButton extends CompoundButton {\n \tprivate int mTouchSlop;\n \tprivate int mClickTimeout;\n \tprivate Paint mRectPaint;\n+\tprivate String mTextOn;\n+\tprivate String mTextOff;\n+\tprivate TextPaint mTextPaint;\n+\tprivate Layout mOnLayout;\n+\tprivate Layout mOffLayout;\n \n \tpublic SwitchButton(Context context, AttributeSet attrs, int defStyle) {\n \t\tsuper(context, attrs, defStyle);\n@@ -91,11 +99,15 @@ public class SwitchButton extends CompoundButton {\n \t\tmRectPaint.setStyle(Paint.Style.STROKE);\n \t\tmRectPaint.setStrokeWidth(getResources().getDisplayMetrics().density);\n \n+\t\tmTextPaint = getPaint();\n+\n \t\tmThumbRectF = new RectF();\n \t\tmBackRectF = new RectF();\n \t\tmSafeRectF = new RectF();\n \t\tmThumbSizeF = new PointF();\n \t\tmThumbMargin = new RectF();\n+\t\tmTextOnRectF = new RectF();\n+\t\tmTextOffRectF = new RectF();\n \n \t\tmProcessAnimator = ObjectAnimator.ofFloat(this, \"process\", 0, 0).setDuration(DEFAULT_ANIMATION_DURATION);\n \t\tmProcessAnimator.setInterpolator(new AccelerateDecelerateInterpolator());\n@@ -122,6 +134,8 @@ public class SwitchButton extends CompoundButton {\n \t\tint animationDuration = DEFAULT_ANIMATION_DURATION;\n \t\tboolean fadeBack = true;\n \t\tint tintColor = Integer.MIN_VALUE;\n+\t\tString textOn = null;\n+\t\tString textOff = null;\n \n \t\tTypedArray ta = attrs == null ? null : getContext().obtainStyledAttributes(attrs, R.styleable.SwitchButton);\n \t\tif (ta != null) {\n@@ -142,9 +156,15 @@ public class SwitchButton extends CompoundButton {\n \t\t\tanimationDuration = ta.getInteger(R.styleable.SwitchButton_kswAnimationDuration, animationDuration);\n \t\t\tfadeBack = ta.getBoolean(R.styleable.SwitchButton_kswFadeBack, true);\n \t\t\ttintColor = ta.getColor(R.styleable.SwitchButton_kswTintColor, tintColor);\n+\t\t\ttextOn = ta.getString(R.styleable.SwitchButton_kswTextOn);\n+\t\t\ttextOff = ta.getString(R.styleable.SwitchButton_kswTextOff);\n \t\t\tta.recycle();\n \t\t}\n \n+\t\t// text\n+\t\tmTextOn = textOn;\n+\t\tmTextOff = textOff;\n+\n \t\t// thumb drawable and color\n \t\tmThumbDrawable = thumbDrawable;\n \t\tmThumbColor = thumbColor;\n@@ -195,8 +215,19 @@ public class SwitchButton extends CompoundButton {\n \t\t}\n \t}\n \n+\n+\tprivate Layout makeLayout(CharSequence text) {\n+\t\treturn new StaticLayout(text, mTextPaint, (int) Math.ceil(Layout.getDesiredWidth(text, mTextPaint)), Layout.Alignment.ALIGN_NORMAL, 1.f, 0, false);\n+\t}\n+\n \t@Override\n \tprotected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n+\t\tif (mOnLayout == null) {\n+            mOnLayout = makeLayout(mTextOn == null ? \"\" : mTextOn);\n+        }\n+        if (mOffLayout == null) {\n+            mOffLayout = makeLayout(mTextOff == null ? \"\" : mTextOff);\n+        }\n \t\tsetMeasuredDimension(measureWidth(widthMeasureSpec), measureHeight(heightMeasureSpec));\n \t}\n \n@@ -279,6 +310,14 @@ public class SwitchButton extends CompoundButton {\n \t\tif (mBackDrawable != null) {\n \t\t\tmBackDrawable.setBounds((int) mBackRectF.left, (int) mBackRectF.top, (int) mBackRectF.right, (int) mBackRectF.bottom);\n \t\t}\n+\n+\t\tfloat marginOnX = Math.max(0, (mBackRectF.width() - mThumbRectF.width() - mOnLayout.getWidth()) / 2);\n+\t\tfloat marginOnY = Math.max(0, (mBackRectF.height() - mOnLayout.getHeight()) / 2);\n+\t\tmTextOnRectF.set(mBackRectF.left + marginOnX, mBackRectF.top + marginOnY, mBackRectF.right - mThumbRectF.width() - marginOnX, mBackRectF.bottom - marginOnY);\n+\n+\t\tfloat marginOffX = Math.max(0, (mBackRectF.width() - mThumbRectF.width() - mOffLayout.getWidth()) / 2);\n+\t\tfloat marginOffY = Math.max(0, (mBackRectF.height() - mOffLayout.getHeight()) / 2);\n+\t\tmTextOffRectF.set(mBackRectF.left + mThumbRectF.width() + marginOffX, mBackRectF.top + marginOffY, mBackRectF.right - marginOffX, mBackRectF.bottom - marginOffY);\n \t}\n \n \t@Override\n@@ -324,6 +363,14 @@ public class SwitchButton extends CompoundButton {\n \t\t\t}\n \t\t}\n \n+\t\t// text\n+\t\tLayout switchText = isChecked() ? mOnLayout : mOffLayout;\n+\t\tRectF textRectF = isChecked() ? mTextOnRectF : mTextOffRectF;\n+\t\tcanvas.save();\n+\t\tcanvas.translate(textRectF.left, textRectF.top);\n+\t\tswitchText.draw(canvas);\n+\t\tcanvas.restore();\n+\n \t\t// thumb\n \t\tmPresentThumbRectF.set(mThumbRectF);\n \t\tmPresentThumbRectF.offset(mProcess * mSafeRectF.width(), 0);\n@@ -340,6 +387,8 @@ public class SwitchButton extends CompoundButton {\n \t\t\tcanvas.drawRect(mBackRectF, mRectPaint);\n \t\t\tmRectPaint.setColor(Color.parseColor(\"#0000FF\"));\n \t\t\tcanvas.drawRect(mPresentThumbRectF, mRectPaint);\n+\t\t\tmRectPaint.setColor(Color.parseColor(\"#00CC00\"));\n+\t\t\tcanvas.drawRect(isChecked() ? mTextOnRectF : mTextOffRectF, mRectPaint);\n \t\t}\n \t}\n \ndiff --git a/SwitchButton/library/src/main/res/values/attrs.xml b/SwitchButton/library/src/main/res/values/attrs.xml\nindex 8dcc647..b8af9b9 100644\n--- a/SwitchButton/library/src/main/res/values/attrs.xml\n+++ b/SwitchButton/library/src/main/res/values/attrs.xml\n@@ -19,6 +19,8 @@\n \t\t<attr name=\"kswBackMeasureRatio\" format=\"float\"/>\n \t\t<attr name=\"kswAnimationDuration\" format=\"integer\"/>\n \t\t<attr name=\"kswTintColor\" format=\"color|reference\"/>\n+\t\t<attr name=\"kswTextOn\" format=\"string\"/>\n+\t\t<attr name=\"kswTextOff\" format=\"string\"/>\n \t</declare-styleable>\n \n </resources>\n\\ No newline at end of file",
    "Remove jboss - jaxws - api_2 . 2 and move to jboss - jaxws - api_2 . 3 for Java EE 8 .": "diff --git a/feature-pack/pom.xml b/feature-pack/pom.xml\nindex 0925053b9b..e39cdfb817 100644\n--- a/feature-pack/pom.xml\n+++ b/feature-pack/pom.xml\n@@ -1352,11 +1352,6 @@\n             <artifactId>jboss-saaj-api_1.3_spec</artifactId>\n         </dependency>\n \n-        <dependency>\n-            <groupId>org.jboss.spec.javax.xml.ws</groupId>\n-            <artifactId>jboss-jaxws-api_2.2_spec</artifactId>\n-        </dependency>\n-\n         <dependency>\n             <groupId>org.jboss.spec.javax.xml.ws</groupId>\n             <artifactId>jboss-jaxws-api_2.3_spec</artifactId>\ndiff --git a/feature-pack/src/license/full-feature-pack-licenses.xml b/feature-pack/src/license/full-feature-pack-licenses.xml\nindex fd94c8b292..ad839e0832 100644\n--- a/feature-pack/src/license/full-feature-pack-licenses.xml\n+++ b/feature-pack/src/license/full-feature-pack-licenses.xml\n@@ -3586,22 +3586,6 @@\n         </license>\n       </licenses>\n     </dependency>\n-    <dependency>\n-      <groupId>org.jboss.spec.javax.xml.ws</groupId>\n-      <artifactId>jboss-jaxws-api_2.2_spec</artifactId>\n-      <licenses>\n-        <license>\n-          <name>Common Development and Distribution License 1.0</name>\n-          <url>http://repository.jboss.org/licenses/cddl.txt</url>\n-          <distribution>repo</distribution>\n-        </license>\n-        <license>\n-          <name>GNU General Public License, Version 2 with the Classpath Exception</name>\n-          <url>http://repository.jboss.org/licenses/gpl-2.0-ce.txt</url>\n-          <distribution>repo</distribution>\n-        </license>\n-      </licenses>\n-    </dependency>\n     <dependency>\n       <groupId>org.jboss.spec.javax.xml.ws</groupId>\n       <artifactId>jboss-jaxws-api_2.3_spec</artifactId>\ndiff --git a/feature-pack/src/main/resources/modules/system/layers/base/javax/xml/ws/api/main/module.xml b/feature-pack/src/main/resources/modules/system/layers/base/javax/xml/ws/api/main/module.xml\nindex 1bb4254ca9..8e46c73eae 100644\n--- a/feature-pack/src/main/resources/modules/system/layers/base/javax/xml/ws/api/main/module.xml\n+++ b/feature-pack/src/main/resources/modules/system/layers/base/javax/xml/ws/api/main/module.xml\n@@ -31,16 +31,6 @@\n     </dependencies>\n \n     <resources>\n-        <artifact name=\"${org.jboss.spec.javax.xml.ws:jboss-jaxws-api_2.3_spec}\">\n-            <conditions>\n-              <property-equal name=\"ee8.preview.mode\" value=\"true\"/>\n-            </conditions>\n-        </artifact>\n-        <artifact name=\"${org.jboss.spec.javax.xml.ws:jboss-jaxws-api_2.2_spec}\">\n-            <conditions>\n-              <property-not-equal name=\"ee8.preview.mode\" value=\"true\"/>\n-            </conditions>\n-        </artifact>\n-\n+        <artifact name=\"${org.jboss.spec.javax.xml.ws:jboss-jaxws-api_2.3_spec}\"/>\n     </resources>\n </module>\ndiff --git a/galleon-pack/pom.xml b/galleon-pack/pom.xml\nindex 7f408147e8..bad1fd7b3c 100644\n--- a/galleon-pack/pom.xml\n+++ b/galleon-pack/pom.xml\n@@ -1524,11 +1524,6 @@\n             <artifactId>jboss-saaj-api_1.3_spec</artifactId>\n         </dependency>\n \n-        <dependency>\n-            <groupId>org.jboss.spec.javax.xml.ws</groupId>\n-            <artifactId>jboss-jaxws-api_2.2_spec</artifactId>\n-        </dependency>\n-\n         <dependency>\n             <groupId>org.jboss.spec.javax.xml.ws</groupId>\n             <artifactId>jboss-jaxws-api_2.3_spec</artifactId>\ndiff --git a/pom.xml b/pom.xml\nindex b513c769ff..61a7cb1146 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -328,7 +328,6 @@\n         <version.org.jboss.spec.javax.xml.bind.jboss-jaxb-api_2.3_spec>1.0.1.Final</version.org.jboss.spec.javax.xml.bind.jboss-jaxb-api_2.3_spec>\n         <version.org.jboss.spec.javax.xml.rpc.jboss-jaxrpc-api_1.1_spec>1.0.2.Final</version.org.jboss.spec.javax.xml.rpc.jboss-jaxrpc-api_1.1_spec>\n         <version.org.jboss.spec.javax.xml.soap.jboss-saaj-api_1.3_spec>1.0.6.Final</version.org.jboss.spec.javax.xml.soap.jboss-saaj-api_1.3_spec>\n-        <version.org.jboss.spec.javax.xml.ws.jboss-jaxws-api_2.2_spec>2.0.5.Final</version.org.jboss.spec.javax.xml.ws.jboss-jaxws-api_2.2_spec>\n         <version.org.jboss.spec.javax.xml.ws.jboss-jaxws-api_2.3_spec>1.0.0.Final</version.org.jboss.spec.javax.xml.ws.jboss-jaxws-api_2.3_spec>\n         <version.org.jboss.weld.weld>3.0.4.Final</version.org.jboss.weld.weld>\n         <version.org.jboss.weld.weld-api>3.0.SP3</version.org.jboss.weld.weld-api>\n@@ -5099,12 +5098,6 @@\n                 <version>${version.org.jboss.spec.javax.xml.soap.jboss-saaj-api_1.3_spec}</version>\n             </dependency>\n \n-            <dependency>\n-                <groupId>org.jboss.spec.javax.xml.ws</groupId>\n-                <artifactId>jboss-jaxws-api_2.2_spec</artifactId>\n-                <version>${version.org.jboss.spec.javax.xml.ws.jboss-jaxws-api_2.2_spec}</version>\n-            </dependency>\n-\n             <dependency>\n                 <groupId>org.jboss.spec.javax.xml.ws</groupId>\n                 <artifactId>jboss-jaxws-api_2.3_spec</artifactId>",
    "Remove unnecessary guard and move check for emptiness inside doCommit to ensure ordering also of empty chunks .": "diff --git a/searchlib/src/vespa/searchlib/transactionlog/domain.cpp b/searchlib/src/vespa/searchlib/transactionlog/domain.cpp\nindex 6d251a2a30e..fdee9dc1a24 100644\n--- a/searchlib/src/vespa/searchlib/transactionlog/domain.cpp\n+++ b/searchlib/src/vespa/searchlib/transactionlog/domain.cpp\n@@ -341,7 +341,6 @@ Domain::startCommit(DoneCallback onDone) {\n     vespalib::MonitorGuard guard(_currentChunkMonitor);\n     if ( !_currentChunk->empty() ) {\n         auto completed = grabCurrentChunk(guard);\n-        assert(completed);\n         completed->setCommitDoneCallback(std::move(onDone));\n         CommitResult result(completed->createCommitResult());\n         commitChunk(std::move(completed), guard);\n@@ -355,9 +354,7 @@ Domain::commitIfFull(const vespalib::MonitorGuard &guard) {\n     if (_currentChunk->sizeBytes() > _config.getChunkSizeLimit()) {\n         auto completed = std::move(_currentChunk);\n         _currentChunk = std::make_unique<CommitChunk>(_config.getChunkSizeLimit(), completed->stealCallbacks());\n-        if (completed) {\n-            commitChunk(std::move(completed), guard);\n-        }\n+        commitChunk(std::move(completed), guard);\n     }\n }\n \n@@ -369,20 +366,18 @@ Domain::grabCurrentChunk(const vespalib::MonitorGuard & guard) {\n     return chunk;\n }\n \n-bool\n+void\n Domain::commitChunk(std::unique_ptr<CommitChunk> chunk, const vespalib::MonitorGuard & chunkOrderGuard) {\n     assert(chunkOrderGuard.monitors(_currentChunkMonitor));\n-    if ( ! chunk->getPacket().empty()) {\n-        _singleCommitter->execute( makeLambdaTask([this, chunk = std::move(chunk)]() mutable {\n-            doCommit(std::move(chunk));\n-        }));\n-        return true;\n-    }\n-    return false;\n+    _singleCommitter->execute( makeLambdaTask([this, chunk = std::move(chunk)]() mutable {\n+        doCommit(std::move(chunk));\n+    }));\n }\n \n void\n Domain::doCommit(std::unique_ptr<CommitChunk> chunk) {\n+    if (chunk->empty()) return;\n+\n     const Packet & packet = chunk->getPacket();\n     vespalib::nbostream_longlivedbuf is(packet.getHandle().data(), packet.getHandle().size());\n     Packet::Entry entry;\ndiff --git a/searchlib/src/vespa/searchlib/transactionlog/domain.h b/searchlib/src/vespa/searchlib/transactionlog/domain.h\nindex 5bd11ea2bdf..041ec27cf23 100644\n--- a/searchlib/src/vespa/searchlib/transactionlog/domain.h\n+++ b/searchlib/src/vespa/searchlib/transactionlog/domain.h\n@@ -59,7 +59,7 @@ private:\n     void commitIfFull(const vespalib::MonitorGuard & guard);\n \n     std::unique_ptr<CommitChunk> grabCurrentChunk(const vespalib::MonitorGuard & guard);\n-    bool commitChunk(std::unique_ptr<CommitChunk> chunk, const vespalib::MonitorGuard & chunkOrderGuard);\n+    void commitChunk(std::unique_ptr<CommitChunk> chunk, const vespalib::MonitorGuard & chunkOrderGuard);\n     void doCommit(std::unique_ptr<CommitChunk> chunk);\n     SerialNum begin(const vespalib::LockGuard & guard) const;\n     SerialNum end(const vespalib::LockGuard & guard) const;",
    "encoding and contenty type handling <issue_id>": "diff --git a/core/src/main/java/fi/iki/elonen/NanoHTTPD.java b/core/src/main/java/fi/iki/elonen/NanoHTTPD.java\nindex 3279a92..780c588 100644\n--- a/core/src/main/java/fi/iki/elonen/NanoHTTPD.java\n+++ b/core/src/main/java/fi/iki/elonen/NanoHTTPD.java\n@@ -468,11 +468,15 @@ public abstract class NanoHTTPD {\n         }\n     }\n \n-    private static final String CHARSET_REGEX = \"[ |\\t]*(charset)[ |\\t]*=[ |\\t]*['|\\\"]?([^\\\"^'^;]*)['|\\\"]?\";\n+    private static final String CONTENT_REGEX = \"[ |\\t]*([^/^ ^;^,]+/[^ ^;^,]+)\";\n+\n+    private static final Pattern MIME_PATTERN = Pattern.compile(CONTENT_REGEX, Pattern.CASE_INSENSITIVE);\n+\n+    private static final String CHARSET_REGEX = \"[ |\\t]*(charset)[ |\\t]*=[ |\\t]*['|\\\"]?([^\\\"^'^;^,]*)['|\\\"]?\";\n \n     private static final Pattern CHARSET_PATTERN = Pattern.compile(CHARSET_REGEX, Pattern.CASE_INSENSITIVE);\n \n-    private static final String BOUNDARY_REGEX = \"[ |\\t]*(boundary)[ |\\t]*=[ |\\t]*['|\\\"]?([^\\\"^'^;]*)['|\\\"]?\";\n+    private static final String BOUNDARY_REGEX = \"[ |\\t]*(boundary)[ |\\t]*=[ |\\t]*['|\\\"]?([^\\\"^'^;^,]*)['|\\\"]?\";\n \n     private static final Pattern BOUNDARY_PATTERN = Pattern.compile(BOUNDARY_REGEX, Pattern.CASE_INSENSITIVE);\n \n@@ -625,7 +629,7 @@ public abstract class NanoHTTPD {\n                     NanoHTTPD.LOG.log(Level.FINE, \"no protocol version specified, strange. Assuming HTTP/1.1.\");\n                 }\n                 String line = in.readLine();\n-                while (line != null && line.trim().length() > 0) {\n+                while (line != null && !line.trim().isEmpty()) {\n                     int p = line.indexOf(':');\n                     if (p >= 0) {\n                         headers.put(line.substring(0, p).trim().toLowerCase(Locale.US), line.substring(p + 1).trim());\n@@ -1041,28 +1045,23 @@ public abstract class NanoHTTPD {\n                 // in data section, too, read it:\n                 if (Method.POST.equals(this.method)) {\n                     String contentType = \"\";\n+                    String encoding = \"UTF-8\";\n                     String contentTypeHeader = this.headers.get(\"content-type\");\n-\n-                    StringTokenizer st = null;\n                     if (contentTypeHeader != null) {\n-                        st = new StringTokenizer(contentTypeHeader, \",; \");\n-                        if (st.hasMoreTokens()) {\n-                            contentType = st.nextToken();\n-                        }\n+                        contentType = getDetailFromContentHeader(contentTypeHeader, MIME_PATTERN, \"\", 1);\n+                        encoding = getDetailFromContentHeader(contentTypeHeader, CHARSET_PATTERN, \"US-ASCII\", 2);\n                     }\n-\n                     if (\"multipart/form-data\".equalsIgnoreCase(contentType)) {\n-                        // Handle multipart/form-data\n-                        if (!st.hasMoreTokens()) {\n+                        String boundary = getDetailFromContentHeader(contentTypeHeader, BOUNDARY_PATTERN, null, 2);\n+                        if (boundary == null) {\n                             throw new ResponseException(Response.Status.BAD_REQUEST,\n                                     \"BAD REQUEST: Content type is multipart/form-data but boundary missing. Usage: GET /example/file.html\");\n                         }\n-                        decodeMultipartFormData(getAttributeFromContentHeader(contentTypeHeader, BOUNDARY_PATTERN, null), //\n-                                getAttributeFromContentHeader(contentTypeHeader, CHARSET_PATTERN, \"US-ASCII\"), fbuf, this.parms, files);\n+                        decodeMultipartFormData(boundary, encoding, fbuf, this.parms, files);\n                     } else {\n                         byte[] postBytes = new byte[fbuf.remaining()];\n                         fbuf.get(postBytes);\n-                        String postLine = new String(postBytes).trim();\n+                        String postLine = new String(postBytes, encoding).trim();\n                         // Handle application/x-www-form-urlencoded\n                         if (\"application/x-www-form-urlencoded\".equalsIgnoreCase(contentType)) {\n                             decodeParms(postLine, this.parms);\n@@ -1081,9 +1080,9 @@ public abstract class NanoHTTPD {\n             }\n         }\n \n-        private String getAttributeFromContentHeader(String contentTypeHeader, Pattern pattern, String defaultValue) {\n+        private String getDetailFromContentHeader(String contentTypeHeader, Pattern pattern, String defaultValue, int group) {\n             Matcher",
    "removed timeout against remote connections": "diff --git a/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java b/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java\nindex ed5babe4ec..6239596b40 100755\n--- a/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java\n+++ b/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java\n@@ -153,6 +153,10 @@ public class OConsoleDatabaseApp extends OrientConsole implements OCommandOutput\n \r\n     OGlobalConfiguration.STORAGE_KEEP_OPEN.setValue(false);\r\n \r\n+    // DISABLE THE NETWORK AND STORAGE TIMEOUTS\r\n+    OGlobalConfiguration.STORAGE_LOCK_TIMEOUT.setValue(0);\r\n+    OGlobalConfiguration.NETWORK_LOCK_TIMEOUT.setValue(0);\r\n+\r\n     properties.put(\"limit\", \"20\");\r\n     properties.put(\"debug\", \"false\");\r\n     properties.put(\"maxBinaryDisplay\", \"160\");\r",
    "Rewrite HashMap and LinkedHashMap based on translated apache harmony versions . . Change on 2012 / 11 / 08 by kstanger @ kstanger .": "diff --git a/jre_emul/Classes/java/util/HashMap.h b/jre_emul/Classes/java/util/HashMap.h\nindex 5feb0f775..8dae5d82a 100644\n--- a/jre_emul/Classes/java/util/HashMap.h\n+++ b/jre_emul/Classes/java/util/HashMap.h\n@@ -7,16 +7,22 @@\n //\n \n #import <Foundation/Foundation.h>\n+#import \"java/io/Serializable.h\"\n+#import \"java/util/AbstractMap.h\"\n #import \"java/util/Map.h\"\n \n @class JavaUtilHashMap_Entry;\n \n-// An implementation for the java.util.Map protocol, using a\n-// NSMutableDictionary delegate. Its constructors are defined by HashMap, so\n-// that this class can potentially be a drop-in replacement.\n-@interface JavaUtilHashMap : NSObject < JavaUtilMap, NSMutableCopying > {\n- @private\n-  NSMutableDictionary *dictionary_;\n+// An implementation for the java.util.Map protocol, based on the java harmony\n+// implementation.\n+@interface JavaUtilHashMap : JavaUtilAbstractMap < JavaUtilMap, NSCopying, JavaIoSerializable > {\n+ @public\n+  int elementCount_;\n+  JavaUtilHashMap_Entry **elementData_;\n+  int elementDataLength_;\n+  int modCount_;\n+  float loadFactor_;\n+  int threshold_;\n }\n \n - (id)initWithInt:(int)capacity;\ndiff --git a/jre_emul/Classes/java/util/HashMap.m b/jre_emul/Classes/java/util/HashMap.m\nindex 522b7ce83..47fb04254 100644\n--- a/jre_emul/Classes/java/util/HashMap.m\n+++ b/jre_emul/Classes/java/util/HashMap.m\n@@ -2,533 +2,692 @@\n //  HashMap.m\n //  JreEmulation\n //\n-//  Created by Tom Ball on 1/27/12.\n+//  Created by Keith Stanger on 10/19/12.\n //  Copyright 2012 Google, Inc. All rights reserved.\n //\n \n+#import \"java/lang/CloneNotSupportedException.h\"\n #import \"java/lang/IllegalArgumentException.h\"\n #import \"java/lang/IllegalStateException.h\"\n #import \"java/lang/NullPointerException.h\"\n+#import \"java/util/Collection.h\"\n+#import \"java/util/ConcurrentModificationException.h\"\n #import \"java/util/HashMap_PackagePrivate.h\"\n+#import \"java/util/Iterator.h\"\n #import \"java/util/Map.h\"\n-#import \"IOSList.h\"\n-#import \"IOSSet.h\"\n-#import \"JreEmulation.h\"\n-#import <CoreFoundation/CFDictionary.h>\n+#import \"java/util/NoSuchElementException.h\"\n+#import \"java/util/Set.h\"\n \n @implementation JavaUtilHashMap\n \n-#define JavaUtilHashMap_DEFAULT_SIZE 16\n+@synthesize elementCount = elementCount_;\n+@synthesize elementData = elementData_;\n+@synthesize elementDataLength = elementDataLength_;\n+@synthesize modCount = modCount_;\n+@synthesize loadFactor = loadFactor_;\n+@synthesize threshold = threshold_;\n \n-@synthesize dictionary = dictionary_;\n-\n-// Private initializer.\n-// We need this with a unique name to avoid clashing with subclasses.\n-- (id)initJavaUtilHashMapWithCapacity:(int)capacity {\n-  if (capacity < 0) {\n-    id exception = [[JavaLangIllegalArgumentException alloc] init];\n-#if ! __has_feature(objc_arc)\n-    [exception autorelease];\n-#endif\n-    @throw exception;\n-  }\n-  self = [super init];\n-  if (self) {\n-    dictionary_ = (ARCBRIDGE_TRANSFER NSMutableDictionary *)\n-    CFDictionaryCreateMutable(NULL, capacity,\n-        &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);\n-  }\n-  return self;\n-}\n \n - (id)init {\n-  return [self initWithInt:JavaUtilHashMap_DEFAULT_SIZE];\n+  return [self initJavaUtilHashMapWithInt:JavaUtilHashMap_DEFAULT_SIZE\n+                                withFloat:JavaUtilHashMap_DEFAULT_LOAD_FACTOR];\n }\n \n - (id)initWithInt:(int)capacity {\n-  return [self initJavaUtilHashMapWithCapacity:capacity];\n+  return [self initJavaUtilHashMapWithInt:capacity withFloat:JavaUtilHashMap_DEFAULT_LOAD_FACTOR];\n }\n \n-- (id)initWithInt:(int)capacity withFloat:(float)loadFactor {\n-  if (loadFactor <= 0) {\n-    id exception = [[JavaLangIllegalArgumentException alloc] init];\n-#if ! __has_feature(objc_arc)\n-    [exception autorelease];\n-#endif\n-    @throw exception;\n++ (int)calculateCapacityWithInt:(int)x {\n+  if (x >= 1 << 30) {\n+    return 1 << 30;\n+  }\n+  if (x == 0) {\n+    return 16;\n   }\n-  return [self initJavaUtilHashMapWithCapacity:capacity];\n+  x = x - 1;\n+  x |= x >> 1;\n+  x |= x >> 2;\n+  x |= x >> 4;\n+  x |= x >> 8;\n+  x |= x >> 16;\n+  return x + 1;\n }\n \n-- (id)initWithJavaUtilMap:(id<JavaUtilMap>)map {\n-  if (!map) {\n-    id exception = [[JavaLangNullPointerException alloc] init];\n-#if ! __has_feature(objc_arc)\n-    [exception autorelease];\n-#endif\n-    @throw exception;\n-  }\n-  int size = [map size];\n-  self = [self initJavaUtilHashMapWithCapacity:size];\n-  if (self) {\n-    if ([map isMemberOfClass:[JavaUtilHashMap class]]) {\n-      JavaUtilHashMap *other = (JavaUtilHashMap *) map;\n-#if ! __has_feature(objc_arc)\n-      [dictionary_ release];\n-#endif\n-      dictionary_ = (ARCBRIDGE_TRANSFER NSMutableDictionary *)\n-          CFDictionaryCreateMutable(NULL, size,\n-          &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);\n-      for(id key in [other->dictionary_ allKeys]) {\n-        CFDictionarySetValue((ARCBRIDGE CFMutableDictionaryRef) dictionary_,\n-            (ARCBRIDGE void *) key,\n-            (ARCBRIDGE void *) [other->dictionary_ objectForKey:key]);\n-      }\n-    } else {\n-      [self putAllImpl:map];\n+- (id)initJavaUtilHashMapWithInt:(int)capacity\n+                       withFloat:(float)loadFactor {\n+  if ((self = [super init])) {\n+    modCount_ = 0;\n+    if (capacity >= 0 && loadFactor > 0) {\n+      capacity = [JavaUtilHashMap calculateCapacityWithInt:capacity];\n+      elementCount_ = 0;\n+      free(elementData_);\n+      elementData_ = (JavaUtilHashMap_Entry **) calloc(capacity, sizeof(JavaUtilHashMap_Entry *));\n+      elementDataLength_ = capacity;\n+      self.loadFactor = loadFactor;\n+      [self computeThreshold];\n+    }\n+    else {\n+      @throw [[[JavaLangIllegalArgumentException alloc] init] autorelease];\n     }\n   }\n   return self;\n }\n \n-#pragma mark -\n+- (id)initWithInt:(int)capacity\n+        withFloat:(float)loadFactor {\n+  return [self initJavaUtilHashMapWithInt:capacity withFloat:loadFactor];\n+}\n+\n+- (id)initWithJavaUtilMap:(id<JavaUtilMap>)map {\n+  if ((self = [self initJavaUtilHashMapWithInt:\n+      [JavaUtilHashMap calculateCapacityWithInt:[((id<JavaUtilMap>) NIL_CHK(map)) size]]\n+      withFloat:JavaUtilHashMap_DEFAULT_LOAD_FACTOR])) {\n+    [self putAllImplWithJavaUtilMap:map];\n+  }\n+  return self;\n+}\n \n - (void)clear {\n-  [dictionary_ removeAllObjects];\n+  if (elementCount_ > 0) {\n+    elementCount_ = 0;\n+    for (int i = 0; i < elementDataLength_; i++) {\n+      JavaUtilHashMap_Entry *entry = elementData_[i];\n+      elementData_[i] = nil;\n+      while (entry != nil) {\n+        JavaUtilHashMap_Entry *next = entry->next_;\n+        [entry release];\n+        entry = next;\n+      }\n+    }\n+    modCount_++;\n+  }\n }\n \n-id nullify(id object) {\n-  return object == [NSNull null] ? nil : object;\n+- (void)copyAllPropertiesTo:(id)copy {\n+  [super copyAllPropertiesTo:copy];\n+  JavaUtilHashMap *typedCopy = (JavaUtilHashMap *) copy;\n+  typedCopy.modCount = modCount_;\n+  typedCopy.loadFactor = loadFactor_;\n+  typedCopy.threshold = threshold_;\n }\n \n-id denullify(id object) {\n-  return object == nil ? [NSNull null] : object;\n+- (id)clone {\n+  @try {\n+    JavaUtilHashMap *map = (JavaUtilHashMap *) [super clone];\n+    map.elementCount = 0;\n+    map.elementData =\n+        (JavaUtilHashMap_Entry **) calloc(elementDataLength_, sizeof(JavaUtilHashMap_Entry *));\n+    map.elementDataLength = elementDataLength_;\n+    [map putAllWithJavaUtilMap:self];\n+    return map;\n+  }\n+  @catch (JavaLangCloneNotSupportedException *e) {\n+    return nil;\n+  }\n+}\n+\n+- (void)computeThreshold {\n+  threshold_ = (int) (elementDataLength_ * loadFactor_);\n }\n \n - (BOOL)containsKeyWithId:(id)key {\n-  return [dictionary_ objectForKey:denullify(key)] != nil;\n+  JavaUtilHashMap_Entry *m = [self getEntryWithId:key];\n+  return m != nil;\n }\n \n - (BOOL)containsValueWithId:(id)value {\n-  NSArray *keys = [dictionary_ allKeysForObject:denullify(value)];\n-  return [keys count] > 0;\n+  if (value != nil) {\n+    for (int i = 0; i < elementDataLength_; i++) {\n+      JavaUtilHashMap_Entry *entry = elementData_[i];\n+      while (entry != nil) {\n+        if ([JavaUtilHashMap areEqualValuesWithId:value withId:entry->value_]) {\n+          return YES;\n+        }\n+        entry = entry->next_;\n+      }\n+    }\n+  }\n+  else {\n+    for (int i = 0; i < elementDataLength_; i++) {\n+      JavaUtilHashMap_Entry *entry = elementData_[i];\n+      while (entry != nil) {\n+        if (entry->value_ == nil) {\n+          return YES;\n+        }\n+        entry = entry->next_;\n+      }\n+    }\n+  }\n+  return NO;\n }\n \n - (id<JavaUtilSet>)entrySet {\n-  id result = [[JavaUtilHashMap_EntrySet alloc] initWithJavaUtilHashMap:self];\n-#if ! __has_feature(objc_arc)\n-  [result autorelease];\n-#endif\n-  return result;\n+  return [[[JavaUtilHashMap_HashMapEntrySet alloc] initWithJavaUtilHashMap:self] autorelease];\n }\n \n - (id)getWithId:(id)key {\n-  id result = [dictionary_ objectForKey:denullify(key)];\n-  return nullify(result);\n+  JavaUtilHashMap_Entry *m = [self getEntryWithId:key];\n+  if (m != nil) {\n+    return m.value;\n+  }\n+  return nil;\n }\n \n-- (NSUInteger)hash {\n-  return [dictionary_ hash];\n+- (JavaUtilHashMap_Entry *)getEntryWithId:(id)key {\n+  JavaUtilHashMap_Entry *m;\n+  if (key == nil) {\n+    m = [self findNullKeyEntry];\n+  }\n+  else {\n+    int hash_ = [JavaUtilHashMap computeHashCodeWithId:key];\n+    int index = hash_ & (elementDataLength_ - 1);\n+    m = [self findNonNullKeyEntryWithId:key withInt:index withInt:hash_];\n+  }\n+  return m;\n }\n \n-- (BOOL)isEmpty {\n-  return [dictionary_ count] == 0;\n+- (JavaUtilHashMap_Entry *)findNonNullKeyEntryWithId:(id)key\n+                                             withInt:(int)index\n+                                             withInt:(int)keyHash {\n+  JavaUtilHashMap_Entry *m = elementData_[index];\n+  while (m != nil\n+      && (m->origKeyHash_ != keyHash || ![JavaUtilHashMap areEqualKeysWithId:key withId:m->key_])) {\n+    m = m->next_;\n+  }\n+  return m;\n }\n \n-- (BOOL)isEqual:(id)object {\n-  if ([object isKindOfClass:[JavaUtilHashMap class]]) {\n-    JavaUtilHashMap *other = (JavaUtilHashMap *) object;\n-    BOOL foo = [dictionary_ isEqualToDictionary:other->dictionary_];\n-    return foo;\n-  }\n-  return NO;\n+- (JavaUtilHashMap_Entry *)findNullKeyEntry {\n+  JavaUtilHashMap_Entry *m = elementData_[0];\n+  while (m != nil && m->key_ != nil) m = m->next_;\n+  return m;\n+}\n+\n+- (BOOL)isEmpty {\n+  return elementCount_ == 0;\n }\n \n - (id<JavaUtilSet>)keySet {\n-  id result = [[JavaUtilHashMap_KeySet alloc] initWithJavaUtilHashMap:self];\n-#if ! __has_feature(objc_arc)\n-  [result autorelease];\n-#endif\n-  return result;\n+  if (keySet__ == nil) {\n+    keySet__ = [[JavaUtilHashMap_KeySet alloc] initWithJavaUtilHashMap:self];\n+  }\n+  return keySet__;\n }\n \n - (id)putWithId:(id)key\n          withId:(id)value {\n-  key = denullify(key);\n-  value = denullify(value);\n-  id previous = [dictionary_ objectForKey:key];\n-\n-#if ! __has_feature(objc_arc)\n-  [[previous retain] autorelease];\n-#endif\n+  return [self putImplWithId:key withId:value];\n+}\n+\n+- (id)putImplWithId:(id)key\n+             withId:(id)value {\n+  JavaUtilHashMap_Entry *entry;\n+  if (key == nil) {\n+    entry = [self findNullKeyEntry];\n+    if (entry == nil) {\n+      modCount_++;\n+      entry = [self createHashedEntryWithId:nil withInt:0 withInt:0];\n+      if (++elementCount_ > threshold_) {\n+        [self rehash];\n+      }\n+    }\n+  }\n+  else {\n+    int hash_ = [JavaUtilHashMap computeHashCodeWithId:key];\n+    int index = hash_ & (elementDataLength_ - 1);\n+    entry = [self findNonNullKeyEntryWithId:key withInt:index withInt:hash_];\n+    if (entry == nil) {\n+      modCount_++;\n+      entry = [self createHashedEntryWithId:key withInt:index withInt:hash_];\n+      if (++elementCount_ > threshold_) {\n+        [self rehash];\n+      }\n+    }\n+  }\n+  id result = [entry->value_ autorelease];\n+  entry->value_ = [value retain];\n+  return result;\n+}\n \n-  // Use a CFDictionary function so the key is retained rather than copied,\n-  // as HashMap keys can't be required to be cloneable.\n-  CFDictionarySetValue((ARCBRIDGE CFMutableDictionaryRef) dictionary_,\n-                       (ARCBRIDGE void *) key, (ARCBRIDGE void *) value);\n-  return nullify(previous);\n+- (JavaUtilHashMap_Entry *)createHashedEntryWithId:(id)key\n+                                           withInt:(int)index\n+                                           withInt:(int)hash_ {\n+  JavaUtilHashMap_Entry *entry = [[JavaUtilHashMap_Entry alloc] initWithId:key withInt:hash_];\n+  entry->next_ = elementData_[index];\n+  elementData_[index] = entry;\n+  return entry;\n }\n \n - (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map {\n-  if (![map isEmpty]) {\n-    [self putAllImpl:map];\n+  if (![((id<JavaUtilMap>) NIL_CHK(map)) isEmpty]) {\n+    [self putAllImplWithJavaUtilMap:map];\n   }\n }\n \n-- (void)putAllImpl:(id<JavaUtilMap>)map {\n-  id<JavaUtilSet> entrySet = [map entrySet];\n-  id<JavaUtilIterator> iterator = [entrySet iterator];\n-\n-  // Throw NPE if null iterator, but only if there's something to iterate.\n-  if (!iterator) {\n-    id exception = [[JavaLangNullPointerException alloc] init];\n-#if ! __has_feature(objc_arc)\n-    [exception autorelease];\n-#endif\n-    @throw exception;\n+- (void)putAllImplWithJavaUtilMap:(id<JavaUtilMap>)map {\n+  int capacity = elementCount_ + [((id<JavaUtilMap>) NIL_CHK(map)) size];\n+  if (capacity > threshold_) {\n+    [self rehashWithInt:capacity];\n   }\n+  {\n+    id<JavaLangIterable> array__ = (id<JavaLangIterable>) [((id<JavaUtilMap>) NIL_CHK(map)) entrySet];\n+    if (!array__) {\n+      @throw [[[JavaLangNullPointerException alloc] init] autorelease];\n+    }\n+    id<JavaUtilIterator> iter__ = [array__ iterator];\n+    while ([iter__ hasNext]) {\n+      id<JavaUtilMap_Entry> entry = (id<JavaUtilMap_Entry>) [iter__ next];\n+      [self putImplWithId:((id) [((id<JavaUtilMap_Entry>) NIL_CHK(entry)) getKey]) withId:((id) [((id<JavaUtilMap_Entry>) NIL_CHK(entry)) getValue])];\n+    }\n+  }\n+}\n \n-  while ([iterator hasNext]) {\n-    id entry = [iterator next];\n-    [self putWithId:[entry getKey] withId:[entry getValue]];\n+- (void)rehashWithInt:(int)capacity {\n+  int length = [JavaUtilHashMap calculateCapacityWithInt:(capacity == 0 ? 1 : capacity << 1)];\n+  JavaUtilHashMap_Entry **newData = calloc(length, sizeof(JavaUtilHashMap_Entry *));\n+  for (int i = 0; i < elementDataLength_; i++) {\n+    JavaUtilHashMap_Entry *entry = elementData_[i];\n+    elementData_[i] = nil;\n+    while (entry != nil) {\n+      int index = entry->origKeyHash_ & (length - 1);\n+      JavaUtilHashMap_Entry *next = entry->next_;\n+      entry->next_ = newData[index];\n+      newData[index] = entry;\n+      entry = next;\n+    }\n   }\n+  free(elementData_);\n+  elementData_ = newData;\n+  elementDataLength_ = length;\n+  [self computeThreshold];\n+}\n+\n+- (void)rehash {\n+  [self rehashWithInt:elementDataLength_];\n }\n \n - (id)removeWithId:(id)key {\n-  key = denullify(key);\n-  id result = [dictionary_ objectForKey:key];\n-  if (result) {\n-#if ! __has_feature(objc_arc)\n-    [[result retain] autorelease];\n-#endif\n-    [dictionary_ removeObjectForKey:key];\n+  JavaUtilHashMap_Entry *entry = [self removeEntryWithId:key];\n+  if (entry != nil) {\n+    return entry.value;\n+  }\n+  return nil;\n+}\n+\n+- (void)removeEntryWithJavaUtilHashMap_Entry:(JavaUtilHashMap_Entry *)entry {\n+  int index = entry->origKeyHash_ & (elementDataLength_ - 1);\n+  JavaUtilHashMap_Entry *m = elementData_[index];\n+  if (m == entry) {\n+    elementData_[index] = entry->next_;\n+  }\n+  else {\n+    while (m->next_ != entry) {\n+      m = m->next_;\n+    }\n+    m->next_ = entry->next_;\n+  }\n+  modCount_++;\n+  elementCount_--;\n+  [entry autorelease];\n+}\n+\n+- (JavaUtilHashMap_Entry *)removeEntryWithId:(id)key {\n+  int index = 0;\n+  JavaUtilHashMap_Entry *entry;\n+  JavaUtilHashMap_Entry *last = nil;\n+  if (key != nil) {\n+    int hash_ = [JavaUtilHashMap computeHashCodeWithId:key];\n+    index = hash_ & (elementDataLength_ - 1);\n+    entry = elementData_[index];\n+    while (entry != nil\n+        && !(entry->origKeyHash_ == hash_\n+            && [JavaUtilHashMap areEqualKeysWithId:key withId:entry->key_])) {\n+      last = entry;\n+      entry = entry->next_;\n+    }\n   }\n-  return nullify(result);\n+  else {\n+    entry = elementData_[0];\n+    while (entry != nil && entry->key_ != nil) {\n+      last = entry;\n+      entry = entry->next_;\n+    }\n+  }\n+  if (entry == nil) {\n+    return nil;\n+  }\n+  if (last == nil) {\n+    elementData_[index] = entry->next_;\n+  } else {\n+    last->next_ = entry->next_;\n+  }\n+  modCount_++;\n+  elementCount_--;\n+  return [entry autorelease];\n }\n \n - (int)size {\n-  return [dictionary_ count];\n+  return elementCount_;\n }\n \n - (id<JavaUtilCollection>)values {\n-  id result = [[JavaUtilHashMap_Values alloc] initWithJavaUtilHashMap:self];\n-#if ! __has_feature(objc_arc)\n-  [result autorelease];\n-#endif\n-  return result;\n+  if (valuesCollection_ == nil) {\n+    valuesCollection_ = [[JavaUtilHashMap_ValuesCollection alloc] initWithJavaUtilHashMap:self];\n+  }\n+  return valuesCollection_;\n }\n \n-- (JavaUtilHashMap_Entry *)entry:(id)key {\n-  key = denullify(key);\n-  id value = [dictionary_ objectForKey:key];\n-  id result = [[JavaUtilHashMap_Entry alloc] initWithKey:key value:value];\n-#if ! __has_feature(objc_arc)\n-  [result autorelease];\n-#endif\n-  return result;\n++ (int)computeHashCodeWithId:(id)key {\n+  return [NIL_CHK(key) hash];\n }\n \n-- (id)mutableCopyWithZone:(NSZone *)zone {\n-  JavaUtilHashMap *copy = [[[self class] alloc] initWithJavaUtilMap:self];\n-  return copy;\n++ (BOOL)areEqualKeysWithId:(id)key1\n+                    withId:(id)key2 {\n+  return (key1 == key2) || [NIL_CHK(key1) isEqual:key2];\n }\n \n-- (id)clone {\n-  id result = [self mutableCopy];\n-#if ! __has_feature(objc_arc)\n-  [result autorelease];\n-#endif\n-  return result;\n++ (BOOL)areEqualValuesWithId:(id)value1\n+                      withId:(id)value2 {\n+  return (value1 == value2) || [NIL_CHK(value1) isEqual:value2];\n }\n \n - (id)copyWithZone:(NSZone *)zone {\n-  return [self mutableCopyWithZone:zone];\n+  return [self clone];\n }\n \n-- (NSString *)description {\n-  // Handle case where a map contains itself (legal, but weird).\n-  static BOOL recursing = NO;\n-  if (recursing) {\n-    return @\"(this Map)\";\n-  } else {\n-    BOOL wasRecursing = recursing;\n-    @try {\n-      recursing = YES;\n-      return [dictionary_ description];\n-    }\n-    @finally {\n-      recursing = wasRecursing;\n-    }\n-  }\n-}\n-\n-#if ! __has_feature(objc_arc)\n - (void)dealloc {\n-  [dictionary_ release];\n+  [self clear];\n+  free(elementData_);\n+  elementData_ = nil;\n   [super dealloc];\n }\n-#endif\n-\n-#pragma mark -\n \n @end\n \n-@implementation JavaUtilHashMap_Entry\n-\n-- (id)initWithKey:(id)key value:(id)value {\n-  return [super initWithId:key withId:value];\n-}\n \n-#pragma mark -\n-#pragma mark JavaUtilMap_Entry\n+@implementation JavaUtilHashMap_Entry\n \n-- (id)getKey {\n-  return nullify([super key]);\n+- (id)initWithId:(id)theKey\n+         withInt:(int)hash_ {\n+  if ((self = [super initWithId:theKey withId:nil])) {\n+    origKeyHash_ = hash_;\n+  }\n+  return self;\n }\n \n-- (id)getValue {\n-  return nullify([super value]);\n+- (id)initWithId:(id)theKey\n+          withId:(id)theValue {\n+  if ((self = [super initWithId:theKey withId:theValue])) {\n+    origKeyHash_ = (theKey == nil ? 0 : [JavaUtilHashMap computeHashCodeWithId:theKey]);\n+  }\n+  return self;\n }\n \n @end\n \n-@implementation JavaUtilHashMap_KeySet\n \n-@synthesize map = map_;\n+@implementation JavaUtilHashMap_AbstractMapIterator\n \n-- (id)initWithJavaUtilHashMap:(JavaUtilHashMap *)map {\n+@synthesize position = position_;\n+@synthesize expectedModCount = expectedModCount_;\n+@synthesize futureEntry = futureEntry_;\n+@synthesize currentEntry = currentEntry_;\n+@synthesize prevEntry = prevEntry_;\n+@synthesize associatedMap = associatedMap_;\n+\n+\n+- (id)initWithJavaUtilHashMap:(JavaUtilHashMap *)hm {\n   if ((self = [super init])) {\n-    map_ = map;\n+    position_ = 0;\n+    [associatedMap_ autorelease];\n+    associatedMap_ = [hm retain];\n+    expectedModCount_ = ((JavaUtilHashMap *) NIL_CHK(hm)).modCount;\n+    futureEntry_ = nil;\n   }\n   return self;\n }\n \n-- (int)size {\n-  return [map_ size];\n+- (BOOL)hasNext {\n+  if (futureEntry_ != nil) {\n+    return YES;\n+  }\n+  while (position_ < associatedMap_.elementDataLength) {\n+    if (associatedMap_.elementData[position_] == nil) {\n+      position_++;\n+    }\n+    else {\n+      return YES;\n+    }\n+  }\n+  return NO;\n }\n \n-- (void)clear {\n-  [map_ clear];\n+- (void)checkConcurrentMod {\n+  if (expectedModCount_ != ((JavaUtilHashMap *) NIL_CHK(associatedMap_)).modCount) {\n+    @throw [[[JavaUtilConcurrentModificationException alloc] init] autorelease];\n+  }\n }\n \n-- (BOOL)removeWithId:(id)key {\n-  if ([map_ containsKeyWithId:key]) {\n-    [map_ removeWithId:key];\n-    return YES;\n+- (void)makeNext {\n+  [self checkConcurrentMod];\n+  if (![self hasNext]) {\n+    @throw [[[JavaUtilNoSuchElementException alloc] init] autorelease];\n+  }\n+  if (futureEntry_ == nil) {\n+    currentEntry_ = associatedMap_.elementData[position_++];\n+    futureEntry_ = currentEntry_->next_;\n+    prevEntry_ = nil;\n+  }\n+  else {\n+    if (currentEntry_ != nil) {\n+      prevEntry_ = currentEntry_;\n+    }\n+    currentEntry_ = futureEntry_;\n+    futureEntry_ = futureEntry_->next_;\n   }\n-  return NO;\n }\n \n-- (BOOL)containsWithId:(id)key {\n-  return [map_ containsKeyWithId:key];\n+- (void)remove {\n+  [self checkConcurrentMod];\n+  if (currentEntry_ == nil) {\n+    @throw [[[JavaLangIllegalStateException alloc] init] autorelease];\n+  }\n+  if (prevEntry_ == nil) {\n+    int index = currentEntry_->origKeyHash_ & (associatedMap_.elementDataLength - 1);\n+    associatedMap_.elementData[index] = associatedMap_.elementData[index]->next_;\n+  }\n+  else {\n+    prevEntry_->next_ = currentEntry_->next_;\n+  }\n+  [currentEntry_ autorelease];\n+  currentEntry_ = nil;\n+  expectedModCount_++;\n+  associatedMap_.modCount++;\n+  associatedMap_.elementCount--;\n }\n \n-- (id<JavaUtilIterator>)iterator {\n-  NSMutableArray *keyList = [[self.map.dictionary allKeys] mutableCopy];\n-#if ! __has_feature(objc_arc)\n-  [keyList autorelease];\n-#endif\n-  IOSIterator *keyIterator = [[IOSIterator alloc] initWithList:keyList];\n-#if ! __has_feature(objc_arc)\n-  [keyIterator autorelease];\n-#endif\n-  id iterator =\n-      [[JavaUtilHashMap_KeySetIterator alloc]\n-       initWithJavaUtilHashMap:self.map withIterator:keyIterator];\n-#if ! __has_feature(objc_arc)\n-  [iterator autorelease];\n-#endif\n-  return iterator;\n+- (void)dealloc {\n+  [associatedMap_ autorelease];\n+  [super dealloc];\n }\n \n @end\n \n-@implementation JavaUtilHashMap_EntrySet\n \n-- (BOOL)removeWithId:(id)object {\n-  if ([object conformsToProtocol:@protocol(JavaUtilMap_Entry)]) {\n-    id<JavaUtilMap_Entry> entry = (id<JavaUtilMap_Entry>) object;\n-    return [super removeWithId:[entry getKey]];\n-  }\n-  return NO;\n+@implementation JavaUtilHashMap_EntryIterator\n+\n+- (id)initWithJavaUtilHashMap:(JavaUtilHashMap *)map {\n+  return [super initWithJavaUtilHashMap:map];\n }\n \n-- (BOOL)containsWithId:(id)object {\n-  if ([object conformsToProtocol:@protocol(JavaUtilMap_Entry)]) {\n-    id<JavaUtilMap_Entry>entry = (id<JavaUtilMap_Entry>) object;\n-    return [super containsWithId:[entry getKey]];\n-  }\n-  return NO;\n+- (id<JavaUtilMap_Entry>)next {\n+  [self makeNext];\n+  return currentEntry_;\n }\n \n-- (id<JavaUtilIterator>)iterator {\n-  NSMutableArray *keyList = [[self.map.dictionary allKeys] mutableCopy];\n-#if ! __has_feature(objc_arc)\n-  [keyList autorelease];\n-#endif\n-  IOSIterator *keyIterator = [[IOSIterator alloc] initWithList:keyList];\n-#if ! __has_feature(objc_arc)\n-  [keyIterator autorelease];\n-#endif\n-  id iterator =\n-      [[JavaUtilHashMap_EntrySetIterator alloc]\n-       initWithJavaUtilHashMap:self.map withIterator:keyIterator];\n-#if ! __has_feature(objc_arc)\n-  [iterator autorelease];\n-#endif\n-  return iterator;\n+@end\n+\n+\n+@implementation JavaUtilHashMap_KeyIterator\n+\n+- (id)initWithJavaUtilHashMap:(JavaUtilHashMap *)map {\n+  return [super initWithJavaUtilHashMap:map];\n+}\n+\n+- (id)next {\n+  [self makeNext];\n+  return ((JavaUtilHashMap_Entry *) NIL_CHK(currentEntry_)).key;\n+}\n+\n+@end\n+\n+\n+@implementation JavaUtilHashMap_ValueIterator\n+\n+- (id)initWithJavaUtilHashMap:(JavaUtilHashMap *)map {\n+  return [super initWithJavaUtilHashMap:map];\n+}\n+\n+- (id)next {\n+  [self makeNext];\n+  return ((JavaUtilHashMap_Entry *) NIL_CHK(currentEntry_)).value;\n }\n \n @end\n \n-@implementation JavaUtilHashMap_KeySetIterator\n \n-@synthesize map = map_;\n-@synthesize iterator = iterator_;\n+@implementation JavaUtilHashMap_HashMapEntrySet\n \n-- (id)initWithJavaUtilHashMap:(JavaUtilHashMap *)map\n-                 withIterator:(IOSIterator *)iterator {\n+- (id)initWithJavaUtilHashMap:(JavaUtilHashMap *)hm {\n   if ((self = [super init])) {\n-    map_ = map;\n-    iterator_ = iterator;\n-    lastKey_ = nil;\n+    [associatedMap_ autorelease];\n+    associatedMap_ = [hm retain];\n   }\n   return self;\n }\n \n-- (BOOL)hasNext {\n-  return [iterator_ hasNext];\n+- (JavaUtilHashMap *)hashMap {\n+  return associatedMap_;\n }\n \n-- (id)next {\n-  lastKey_ = [iterator_ next];\n-  return lastKey_;\n+- (int)size {\n+  return ((JavaUtilHashMap *) NIL_CHK(associatedMap_)).elementCount;\n }\n \n-- (void)remove {\n-  if (!lastKey_) {\n-    id exception = [[JavaLangIllegalStateException alloc] init];\n-#if ! __has_feature(objc_arc)\n-    [exception autorelease];\n-#endif\n-    @throw exception;\n+- (void)clear {\n+  [((JavaUtilHashMap *) NIL_CHK(associatedMap_)) clear];\n+}\n+\n+- (BOOL)removeWithId:(id)object {\n+  if ([object conformsToProtocol: @protocol(JavaUtilMap_Entry)]) {\n+    id<JavaUtilMap_Entry> oEntry = (id<JavaUtilMap_Entry>) object;\n+    JavaUtilHashMap_Entry *entry = [associatedMap_ getEntryWithId:[oEntry getKey]];\n+    if ([JavaUtilHashMap_HashMapEntrySet valuesEqWithJavaUtilHashMap_Entry:entry\n+                                                     withJavaUtilMap_Entry:oEntry]) {\n+      [associatedMap_ removeEntryWithJavaUtilHashMap_Entry:entry];\n+      return YES;\n+    }\n   }\n-  [map_ removeWithId:lastKey_];\n-  lastKey_ = nil;\n+  return NO;\n }\n \n-- (NSString *)description {\n-  return [iterator_ description];\n+- (BOOL)containsWithId:(id)object {\n+  if ([object conformsToProtocol: @protocol(JavaUtilMap_Entry)]) {\n+    id<JavaUtilMap_Entry> oEntry = (id<JavaUtilMap_Entry>) object;\n+    JavaUtilHashMap_Entry *entry = [associatedMap_ getEntryWithId:[oEntry getKey]];\n+    return [JavaUtilHashMap_HashMapEntrySet valuesEqWithJavaUtilHashMap_Entry:entry\n+                                                        withJavaUtilMap_Entry:oEntry];\n+  }\n+  return NO;\n }\n \n-@end\n++ (BOOL)valuesEqWithJavaUtilHashMap_Entry:(JavaUtilHashMap_Entry *)entry\n+                    withJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)oEntry {\n+  return (entry != nil)\n+      && ((entry->value_ == nil) ? ([oEntry getValue] == nil)\n+          : ([JavaUtilHashMap areEqualValuesWithId:entry->value_ withId:[oEntry getValue]]));\n+}\n \n-@implementation JavaUtilHashMap_EntrySetIterator\n+- (id<JavaUtilIterator>)iterator {\n+  return [[[JavaUtilHashMap_EntryIterator alloc] initWithJavaUtilHashMap:associatedMap_] autorelease];\n+}\n \n-- (id)next {\n-  id key = [self.iterator next];\n-  id value = [self.map getWithId:key];\n-  id result = [[JavaUtilHashMap_Entry alloc] initWithKey:key value:value];\n-#if ! __has_feature(objc_arc)\n-  [result autorelease];\n-#endif\n-  return result;\n+- (void)dealloc {\n+  [associatedMap_ autorelease];\n+  [super dealloc];\n }\n \n @end\n \n-@implementation JavaUtilHashMap_Values\n \n-@synthesize map = map_;\n+@implementation JavaUtilHashMap_KeySet\n \n-- (id)initWithJavaUtilHashMap:(JavaUtilHashMap *)map {\n-  if ((self = [super init])) {\n-    map_ = map;\n-  }\n-  return self;\n+- (BOOL)containsWithId:(id)object {\n+  return [outer_ containsKeyWithId:object];\n }\n \n - (int)size {\n-  return [map_ size];\n+  return [outer_ size];\n }\n \n - (void)clear {\n-  [map_ clear];\n+  [outer_ clear];\n }\n \n-- (BOOL)containsWithId:(id)object {\n-  return [map_ containsValueWithId:object];\n+- (BOOL)removeWithId:(id)key {\n+  JavaUtilHashMap_Entry *entry = [outer_ removeEntryWithId:key];\n+  return entry != nil;\n }\n \n - (id<JavaUtilIterator>)iterator {\n-  NSMutableArray *valueList = [[self.map.dictionary allValues] mutableCopy];\n-#if ! __has_feature(objc_arc)\n-  [valueList autorelease];\n-#endif\n-  IOSIterator *valueIterator = [[IOSIterator alloc] initWithList:valueList];\n-#if ! __has_feature(objc_arc)\n-  [valueIterator autorelease];\n-#endif\n-  id iterator = [[JavaUtilHashMap_ValuesIterator alloc]\n-                 initWithJavaUtilHashMap:self.map withIterator:valueIterator];\n-#if ! __has_feature(objc_arc)\n-  [iterator autorelease];\n-#endif\n-  return iterator;\n-}\n-\n-- (BOOL)removeWithId:(id)value {\n-  if ([map_ containsValueWithId:value]) {\n-    for (id key in [map_.dictionary allKeysForObject:value]) {\n-      [map_ removeWithId:key];\n-      return YES;\n-    }\n+  return [[[JavaUtilHashMap_KeyIterator alloc] initWithJavaUtilHashMap:outer_] autorelease];\n+}\n+\n+- (id)initWithJavaUtilHashMap:(JavaUtilHashMap *)outer {\n+  if ((self = [super init])) {\n+    [outer_ autorelease];\n+    outer_ = [outer retain];\n   }\n-  return NO;\n+  return self;\n+}\n+\n+- (void)dealloc {\n+  [outer_ autorelease];\n+  [super dealloc];\n }\n \n @end\n \n-@implementation JavaUtilHashMap_ValuesIterator\n \n-@synthesize map = map_;\n+@implementation JavaUtilHashMap_ValuesCollection\n \n-- (id)initWithJavaUtilHashMap:(JavaUtilHashMap *)map\n-                 withIterator:(IOSIterator *)iterator {\n-  if ((self = [super init])) {\n-    map_ = map;\n-    iterator_ = iterator;\n-    lastValue_ = nil;\n-  }\n-  return self;\n+- (BOOL)containsWithId:(id)object {\n+  return [outer_ containsValueWithId:object];\n }\n \n-- (BOOL)hasNext {\n-  return [iterator_ hasNext];\n+- (int)size {\n+  return [outer_ size];\n }\n \n-- (id)next {\n-  lastValue_ = [iterator_ next];\n-  return lastValue_;\n+- (void)clear {\n+  [outer_ clear];\n",
    "Add link to appendix from error handling .": "diff --git a/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc\nindex 4833f5652b..c43771b1f8 100644\n--- a/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc\n+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc\n@@ -14,66 +14,96 @@ Also, you can define your own properties.\n \n \n \n-== Core properties\n-\n+[[common-application-properties-core]]\n+== Core properties [[core-properties]]\n include::{generated-resources-root}/config-docs/core.adoc[]\n \n-== Cache properties\n \n+\n+[[common-application-properties-cache]]\n+== Cache properties [[cache-properties]]\n include::{generated-resources-root}/config-docs/cache.adoc[]\n \n-== Mail properties\n \n+\n+[[common-application-properties-mail]]\n+== Mail properties [[mail-properties]]\n include::{generated-resources-root}/config-docs/mail.adoc[]\n \n-== JSON properties\n \n+\n+[[common-application-properties-json]]\n+== JSON properties [[json-properties]]\n include::{generated-resources-root}/config-docs/json.adoc[]\n \n-== Data properties\n \n+\n+[[common-application-properties-data]]\n+== Data properties [[data-properties]]\n include::{generated-resources-root}/config-docs/data.adoc[]\n \n-== Transaction properties\n \n+\n+[[common-application-properties-transaction]]\n+== Transaction properties [[transaction-properties]]\n include::{generated-resources-root}/config-docs/transaction.adoc[]\n \n-== Data migration properties\n \n+\n+[[common-application-properties-data-migration]]\n+== Data migration properties [[data-migration-properties]]\n include::{generated-resources-root}/config-docs/data-migration.adoc[]\n \n-== Integration properties\n \n+\n+[[common-application-properties-integration]]\n+== Integration properties [[integration-properties]]\n include::{generated-resources-root}/config-docs/integration.adoc[]\n \n-== Web properties\n \n+\n+[[common-application-properties-web]]\n+== Web properties [[web-properties]]\n include::{generated-resources-root}/config-docs/web.adoc[]\n \n-== Templating properties\n \n+\n+[[common-application-properties-templating]]\n+== Templating properties [[templating-properties]]\n include::{generated-resources-root}/config-docs/templating.adoc[]\n \n-== Server properties\n \n+\n+[[common-application-properties-server]]\n+== Server properties [[server-properties]]\n include::{generated-resources-root}/config-docs/server.adoc[]\n \n-== Security properties\n \n+\n+[[common-application-properties-security]]\n+== Security properties [[security-properties]]\n include::{generated-resources-root}/config-docs/security.adoc[]\n \n-== RSocket properties\n \n+\n+[[common-application-properties-rsocket]]\n+== RSocket properties [[rsocket-properties]]\n include::{generated-resources-root}/config-docs/rsocket.adoc[]\n \n-== Actuator properties\n \n+\n+[[common-application-properties-actuator]]\n+== Actuator properties [[actuator-properties]]\n include::{generated-resources-root}/config-docs/actuator.adoc[]\n \n-== Devtools properties\n \n+\n+[[common-application-properties-devtools]]\n+== Devtools properties [[devtools-properties]]\n include::{generated-resources-root}/config-docs/devtools.adoc[]\n \n-== Testing properties\n \n+\n+[[common-application-properties-testing]]\n+== Testing properties [[testing-properties]]\n include::{generated-resources-root}/config-docs/testing.adoc[]\ndiff --git a/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc\nindex 18988385b9..51d3b72fc2 100644\n--- a/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc\n+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc\n@@ -2346,6 +2346,10 @@ If you have this problem, you can reorder the classpath in the IDE to place the\n By default, Spring Boot provides an `/error` mapping that handles all errors in a sensible way, and it is registered as a \"`global`\" error page in the servlet container.\n For machine clients, it produces a JSON response with details of the error, the HTTP status, and the exception message.\n For browser clients, there is a \"`whitelabel`\" error view that renders the same data in HTML format (to customize it, add a `View` that resolves to `error`).\n+\n+There are a number of `server.error` properties that can be set if you want to customize the default error handling behavior.\n+See the <<appendix-application-properties.adoc#common-application-properties-server, \"`Server Properties`\">> section of the Appendix.  \n+\n To replace the default behavior completely, you can implement `ErrorController` and register a bean definition of that type or add a bean of type `ErrorAttributes` to use the existing mechanism but replace the contents.\n \n TIP: The `BasicErrorController` can be used as a base class for a custom `ErrorController`.",
    "Revert release plugin changes .": "diff --git a/assembly/pom.xml b/assembly/pom.xml\nindex cd81a376b9..76cd48ce81 100644\n--- a/assembly/pom.xml\n+++ b/assembly/pom.xml\n@@ -3,7 +3,7 @@\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-parent</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <groupId>org.tachyonproject</groupId>\n   <artifactId>tachyon-assemblies</artifactId>\ndiff --git a/clients/client/pom.xml b/clients/client/pom.xml\nindex e5edd61807..f1a3fd58ce 100644\n--- a/clients/client/pom.xml\n+++ b/clients/client/pom.xml\n@@ -3,7 +3,7 @@\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-clients</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <groupId>org.tachyonproject</groupId>\n   <artifactId>tachyon-client</artifactId>\ndiff --git a/clients/pom.xml b/clients/pom.xml\nindex 4b6c5e20fe..c44d36f5ef 100644\n--- a/clients/pom.xml\n+++ b/clients/pom.xml\n@@ -1,9 +1,10 @@\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-parent</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-clients</artifactId>\n   <packaging>pom</packaging>\ndiff --git a/clients/unshaded/pom.xml b/clients/unshaded/pom.xml\nindex d98d2b689d..7a90c025b6 100644\n--- a/clients/unshaded/pom.xml\n+++ b/clients/unshaded/pom.xml\n@@ -3,7 +3,7 @@\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-clients</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-client-unshaded</artifactId>\n   <packaging>jar</packaging>\ndiff --git a/common/pom.xml b/common/pom.xml\nindex 75ecfedf8f..1d2e885e2a 100644\n--- a/common/pom.xml\n+++ b/common/pom.xml\n@@ -1,9 +1,10 @@\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-parent</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-common</artifactId>\n   <packaging>jar</packaging>\ndiff --git a/examples/pom.xml b/examples/pom.xml\nindex ecb63530cc..c6019674d6 100644\n--- a/examples/pom.xml\n+++ b/examples/pom.xml\n@@ -3,7 +3,7 @@\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-parent</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-examples</artifactId>\n   <packaging>jar</packaging>\ndiff --git a/integration-tests/pom.xml b/integration-tests/pom.xml\nindex fc3440f351..0b2806b4b3 100644\n--- a/integration-tests/pom.xml\n+++ b/integration-tests/pom.xml\n@@ -1,9 +1,11 @@\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-parent</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-integration-tests</artifactId>\n   <packaging>jar</packaging>\n@@ -214,7 +216,7 @@\n             <groupId>org.apache.maven.plugins</groupId>\n             <artifactId>maven-compiler-plugin</artifactId>\n             <configuration>\n-              <testExcludes combine.self=\"override\" />\n+              <testExcludes combine.self=\"override\"/>\n             </configuration>\n           </plugin>\n         </plugins>\ndiff --git a/minicluster/pom.xml b/minicluster/pom.xml\nindex 53825dc888..465342d8ae 100644\n--- a/minicluster/pom.xml\n+++ b/minicluster/pom.xml\n@@ -1,8 +1,10 @@\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <parent>\n     <artifactId>tachyon-parent</artifactId>\n     <groupId>org.tachyonproject</groupId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <modelVersion>4.0.0</modelVersion>\n \ndiff --git a/pom.xml b/pom.xml\nindex 99f01e6a65..26309fabf6 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -2,7 +2,7 @@\n   <modelVersion>4.0.0</modelVersion>\n   <groupId>org.tachyonproject</groupId>\n   <artifactId>tachyon-parent</artifactId>\n-  <version>0.7.1-SNAPSHOT</version>\n+  <version>0.7.0-SNAPSHOT</version>\n   <packaging>pom</packaging>\n   <name>Tachyon Parent</name>\n   <description>Parent POM of Tachyon project: a Reliable Memory Centric Distributed Storage System</description>\ndiff --git a/servers/pom.xml b/servers/pom.xml\nindex 39d06b0c45..d875ff9ce2 100644\n--- a/servers/pom.xml\n+++ b/servers/pom.xml\n@@ -1,9 +1,10 @@\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-parent</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-servers</artifactId>\n   <packaging>jar</packaging>\ndiff --git a/shell/pom.xml b/shell/pom.xml\nindex 8992588abf..ae9dcd50c0 100644\n--- a/shell/pom.xml\n+++ b/shell/pom.xml\n@@ -3,7 +3,7 @@\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-parent</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-shell</artifactId>\n   <packaging>jar</packaging>\ndiff --git a/underfs/glusterfs/pom.xml b/underfs/glusterfs/pom.xml\nindex fd0a59e4f8..5d21326147 100644\n--- a/underfs/glusterfs/pom.xml\n+++ b/underfs/glusterfs/pom.xml\n@@ -1,9 +1,10 @@\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-underfs</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-underfs-glusterfs</artifactId>\n   <name>Tachyon Under File System - Gluster FS</name>\ndiff --git a/underfs/hdfs/pom.xml b/underfs/hdfs/pom.xml\nindex b8fa76e907..d3788a7709 100644\n--- a/underfs/hdfs/pom.xml\n+++ b/underfs/hdfs/pom.xml\n@@ -1,9 +1,10 @@\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-underfs</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-underfs-hdfs</artifactId>\n   <name>Tachyon Under File System - HDFS</name>\ndiff --git a/underfs/local/pom.xml b/underfs/local/pom.xml\nindex ac867dfd92..62d2298512 100644\n--- a/underfs/local/pom.xml\n+++ b/underfs/local/pom.xml\n@@ -1,9 +1,10 @@\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-underfs</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-underfs-local</artifactId>\n   <name>Tachyon Under File System - Local FS</name>\ndiff --git a/underfs/pom.xml b/underfs/pom.xml\nindex 91381959cd..795b192577 100644\n--- a/underfs/pom.xml\n+++ b/underfs/pom.xml\n@@ -1,9 +1,10 @@\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-parent</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-underfs</artifactId>\n   <packaging>pom</packaging>\ndiff --git a/underfs/s3/pom.xml b/underfs/s3/pom.xml\nindex 4f18103a13..08c3c03552 100644\n--- a/underfs/s3/pom.xml\n+++ b/underfs/s3/pom.xml\n@@ -1,9 +1,10 @@\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-underfs</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-underfs-s3</artifactId>\n   <name>Tachyon Under File System - S3</name>\ndiff --git a/underfs/swift/pom.xml b/underfs/swift/pom.xml\nindex a1834e9d08..4283f2b395 100644\n--- a/underfs/swift/pom.xml\n+++ b/underfs/swift/pom.xml\n@@ -1,9 +1,10 @@\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n     <groupId>org.tachyonproject</groupId>\n     <artifactId>tachyon-underfs</artifactId>\n-    <version>0.7.1-SNAPSHOT</version>\n+    <version>0.7.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>tachyon-underfs-swift</artifactId>\n   <name>Tachyon Under File System - Swift</name>",
    "Adds HTTP request utilities .": "diff --git a/crepecake/build.gradle b/crepecake/build.gradle\nindex 6c62c19c..3b4dbb05 100644\n--- a/crepecake/build.gradle\n+++ b/crepecake/build.gradle\n@@ -15,6 +15,7 @@ repositories {\n \n dependencies {\n     compile gradleApi()\n+    compile 'com.google.http-client:google-http-client:1.23.0'\n     compile 'org.apache.commons:commons-compress:1.15'\n     compile 'com.google.guava:guava:23.5-jre'\n     compile 'com.fasterxml.jackson.core:jackson-databind:2.9.2'\ndiff --git a/crepecake/src/main/java/com/google/cloud/tools/crepecake/blob/InputStreamBlob.java b/crepecake/src/main/java/com/google/cloud/tools/crepecake/blob/InputStreamBlob.java\nindex cb9c21fd..363f7f75 100644\n--- a/crepecake/src/main/java/com/google/cloud/tools/crepecake/blob/InputStreamBlob.java\n+++ b/crepecake/src/main/java/com/google/cloud/tools/crepecake/blob/InputStreamBlob.java\n@@ -45,6 +45,8 @@ class InputStreamBlob implements Blob {\n \n   @Override\n   public BlobDescriptor writeTo(OutputStream outputStream) throws IOException {\n-    return writeFromInputStream(inputStream, outputStream);\n+    try (InputStream inputStream = this.inputStream) {\n+      return writeFromInputStream(inputStream, outputStream);\n+    }\n   }\n }\ndiff --git a/crepecake/src/main/java/com/google/cloud/tools/crepecake/http/BlobHttpContent.java b/crepecake/src/main/java/com/google/cloud/tools/crepecake/http/BlobHttpContent.java\nnew file mode 100644\nindex 00000000..94d0f179\n--- /dev/null\n+++ b/crepecake/src/main/java/com/google/cloud/tools/crepecake/http/BlobHttpContent.java\n@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2017 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.crepecake.http;\n+\n+import com.google.api.client.http.HttpContent;\n+import com.google.cloud.tools.crepecake.blob.Blob;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+\n+/** {@link Blob}-backed {@link HttpContent}. */\n+class BlobHttpContent implements HttpContent {\n+\n+  private final Blob blob;\n+\n+  BlobHttpContent(Blob blob) {\n+    this.blob = blob;\n+  }\n+\n+  @Override\n+  public long getLength() throws IOException {\n+    // Returns negative value for unknown length.\n+    return -1;\n+  }\n+\n+  @Override\n+  public String getType() {\n+    // TODO: This should return the actual Content-Type.\n+    return null;\n+  }\n+\n+  @Override\n+  public boolean retrySupported() {\n+    return false;\n+  }\n+\n+  @Override\n+  public void writeTo(OutputStream outputStream) throws IOException {\n+    blob.writeTo(outputStream);\n+  }\n+}\ndiff --git a/crepecake/src/main/java/com/google/cloud/tools/crepecake/http/Connection.java b/crepecake/src/main/java/com/google/cloud/tools/crepecake/http/Connection.java\nnew file mode 100644\nindex 00000000..a61e322a\n--- /dev/null\n+++ b/crepecake/src/main/java/com/google/cloud/tools/crepecake/http/Connection.java\n@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2017 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.crepecake.http;\n+\n+import com.google.api.client.http.GenericUrl;\n+import com.google.api.client.http.HttpMethods;\n+import com.google.api.client.http.HttpRequestFactory;\n+import com.google.api.client.http.HttpResponse;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.common.annotations.VisibleForTesting;\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.net.URL;\n+\n+/**\n+ * Sends an HTTP {@link Request} and stores the {@link Response}.\n+ *\n+ * <p>Example usage:\n+ *\n+ * <pre>{@code\n+ * try (Connection connection = new Connection(url)) {\n+ *   Response response = connection.get(request);\n+ *   // ... process the response\n+ * }\n+ * }</pre>\n+ */\n+public class Connection implements Closeable {\n+\n+  private static final HttpRequestFactory HTTP_REQUEST_FACTORY =\n+      new NetHttpTransport().createRequestFactory();\n+\n+  private final HttpRequestFactory requestFactory;\n+\n+  private HttpResponse httpResponse;\n+\n+  /** The URL to send the request to. */\n+  private GenericUrl url;\n+\n+  /**\n+   * Make sure to wrap with a try-with-resource to ensure that the connection is closed after usage.\n+   */\n+  public Connection(URL url) throws IOException {\n+    this(url, HTTP_REQUEST_FACTORY);\n+  }\n+\n+  @VisibleForTesting\n+  Connection(URL url, HttpRequestFactory requestFactory) {\n+    this.url = new GenericUrl(url);\n+    this.requestFactory = requestFactory;\n+  }\n+\n+  @Override\n+  public void close() throws IOException {\n+    if (httpResponse == null) {\n+      return;\n+    }\n+\n+    httpResponse.disconnect();\n+  }\n+\n+  /** Sends the request with method GET. */\n+  public Response get(Request request) throws IOException {\n+    return send(HttpMethods.GET, request);\n+  }\n+\n+  /** Sends the request with method POST. */\n+  public Response post(Request request) throws IOException {\n+    return send(HttpMethods.POST, request);\n+  }\n+\n+  /** Sends the request with method PUT. */\n+  public Response put(Request request) throws IOException {\n+    return send(HttpMethods.PUT, request);\n+  }\n+\n+  /** Sends the request. */\n+  private Response send(String httpMethod, Request request) throws IOException {\n+    httpResponse =\n+        requestFactory\n+            .buildRequest(httpMethod, url, request.getHttpContent())\n+            .setHeaders(request.getHeaders())\n+            .execute();\n+    return new Response(httpResponse);\n+  }\n+}\ndiff --git a/crepecake/src/main/java/com/google/cloud/tools/crepecake/http/Request.java b/crepecake/src/main/java/com/google/cloud/tools/crepecake/http/Request.java\nnew file mode 100644\nindex 00000000..6e17a0ec\n--- /dev/null\n+++ b/crepecake/src/main/java/com/google/cloud/tools/crepecake/http/Request.java\n@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2017 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.crepecake.http;\n+\n+import com.google.api.client.http.HttpHeaders;\n+import com.google.cloud.tools.crepecake.blob.Blob;\n+import javax.annotation.Nullable;\n+\n+/** Holds an HTTP request. */\n+public class Request {\n+\n+  /** The HTTP request headers. */\n+  private final HttpHeaders headers = new HttpHeaders();\n+\n+  /** The HTTP request body. */\n+  @Nullable private BlobHttpContent body;\n+\n+  public HttpHeaders getHeaders() {\n+    return headers;\n+  }\n+\n+  @Nullable\n+  public BlobHttpContent getHttpContent() {\n+    return body;\n+  }\n+\n+  /** Sets the {@code Content-Type} header. */\n+  public Request setContentType(String contentType) {\n+    headers.setContentType(contentType);\n+    return this;\n+  }\n+\n+  public Request setBody(Blob body) {\n+    this.body = new BlobHttpContent(body);\n+    return this;\n+  }\n+}\ndiff --git a/crepecake/src/main/java/com/google/cloud/tools/crepecake/http/Response.java b/crepecake/src/main/java/com/google/cloud/tools/crepecake/http/Response.java\nnew file mode 100644\nindex 00000000..ecd00d87\n--- /dev/null\n+++ b/crepecake/src/main/java/com/google/cloud/tools/crepecake/http/Response.java\n@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2017 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.crepecake.http;\n+\n+import com.google.api.client.http.HttpResponse;\n+import com.google.cloud.tools.crepecake.blob.Blob;\n+import com.google.cloud.tools.crepecake.blob.Blobs;\n+import java.io.IOException;\n+import java.util.List;\n+\n+/** Holds an HTTP response. */\n+public class Response {\n+\n+  private final HttpResponse httpResponse;\n+\n+  Response(HttpResponse httpResponse) {\n+    this.httpResponse = httpResponse;\n+  }\n+\n+  /** Gets the HTTP status code of the response. */\n+  public int getStatusCode() {\n+    return httpResponse.getStatusCode();\n+  }\n+\n+  /** Gets a header in the response. */\n+  public List<String> getHeader(String headerName) {\n+    return httpResponse.getHeaders().getHeaderStringValues(headerName);\n+  }\n+\n+  /** Gets the HTTP response body as a {@link Blob}. */\n+  public Blob getBody() throws IOException {\n+    return Blobs.from(httpResponse.getContent());\n+  }\n+}\ndiff --git a/crepecake/src/test/java/com/google/cloud/tools/crepecake/blob/BlobTest.java b/crepecake/src/test/java/com/google/cloud/tools/crepecake/blob/BlobTest.java\nindex 359029da..90599990 100644\n--- a/crepecake/src/test/java/com/google/cloud/tools/crepecake/blob/BlobTest.java\n+++ b/crepecake/src/test/java/com/google/cloud/tools/crepecake/blob/BlobTest.java\n@@ -38,33 +38,33 @@ public class BlobTest {\n \n   @Test\n   public void testEmpty() throws IOException, DigestException {\n-    verifyBlobStreamWriteTo(\"\", Blobs.empty());\n+    verifyBlobWriteTo(\"\", Blobs.empty());\n   }\n \n   @Test\n   public void testFromInputStream() throws IOException, DigestException {\n     String expected = \"crepecake\";\n     InputStream inputStream = new ByteArrayInputStream(expected.getBytes(Charsets.UTF_8));\n-    verifyBlobStreamWriteTo(expected, Blobs.from(inputStream));\n+    verifyBlobWriteTo(expected, Blobs.from(inputStream));\n   }\n \n   @Test\n   public void testFromFile() throws IOException, DigestException, URISyntaxException {\n     File fileA = new File(Resources.getResource(\"fileA\").toURI());\n     String expected = new String(Files.readAllBytes(fileA.toPath()), Charsets.UTF_8);\n-    verifyBlobStreamWriteTo(expected, Blobs.from(fileA));\n+    verifyBlobWriteTo(expected, Blobs.from(fileA));\n   }\n \n   @Test\n   public void testFromString_hashing() throws IOException, DigestException {\n     String expected = \"crepecake\";\n-    verifyBlobStreamWriteTo(expected, Blobs.from(expected, true));\n+    verifyBlobWriteTo(expected, Blobs.from(expected, true));\n   }\n \n   @Test\n   public void testFromString_noHashing() throws IOException, DigestException {\n     String expected = \"crepecake\";\n-    verifyBlobStreamWriteTo(expected, Blobs.from(expected, false));\n+    verifyBlobWriteTo(expected, Blobs.from(expected, false));\n   }\n \n   @Test\n@@ -73,12 +73,11 @@ public class BlobTest {\n \n     BlobWriter writer = outputStream -> outputStream.write(expected.getBytes(Charsets.UTF_8));\n \n-    verifyBlobStreamWriteTo(expected, Blobs.from(writer));\n+    verifyBlobWriteTo(expected, Blobs.from(writer));\n   }\n \n   /** Checks that the {@link Blob} streams the expected string. */\n-  private void verifyBlobStreamWriteTo(String expected, Blob blob)\n-      throws IOException, DigestException {\n+  private void verifyBlobWriteTo(String expected, Blob blob) throws IOException, DigestException {\n     OutputStream outputStream = new ByteArrayOutputStream();\n     BlobDescriptor blobDescriptor = blob.writeTo(outputStream);\n \ndiff --git a/crepecake/src/test/java/com/google/cloud/tools/crepecake/http/ConnectionTest.java b/crepecake/src/test/java/com/google/cloud/tools/crepecake/http/ConnectionTest.java\nnew file mode 100644\nindex 00000000..87c27042\n--- /dev/null\n+++ b/crepecake/src/test/java/com/google/cloud/tools/crepecake/http/ConnectionTest.java\n@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2017 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.crepecake.http;\n+\n+import com.google.api.client.http.GenericUrl;\n+import com.google.api.client.http.HttpHeaders;\n+import com.google.api.client.http.HttpMethods;\n+import com.google.api.client.http.HttpRequest;\n+import com.google.api.client.http.HttpRequestFactory;\n+import com.google.api.client.http.HttpResponse;\n+import com.google.cloud.tools.crepecake.blob.Blob;\n+import com.google.cloud.tools.crepecake.blob.Blobs;\n+import com.google.common.base.Charsets;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+/** Tests for {@link Connection}. */\n+@RunWith(MockitoJUnitRunner.class)\n+public class ConnectionTest {\n+\n+  @Mock private HttpRequestFactory mockHttpRequestFactory;\n+  @Mock private HttpRequest mockHttpRequest;\n+  @Mock private HttpResponse mockHttpResponse;\n+\n+  private final ArgumentCaptor<HttpHeaders> httpHeadersArgumentCaptor =\n+      ArgumentCaptor.forClass(HttpHeaders.class);\n+  private final ArgumentCaptor<BlobHttpContent> blobHttpContentArgumentCaptor =\n+      ArgumentCaptor.forClass(BlobHttpContent.class);\n+\n+  private final GenericUrl fakeUrl = new GenericUrl(\"http://crepecake/fake/url\");\n+  private final Request fakeRequest = new Request();\n+\n+  @Before\n+  public void setUpMocksAndFakes() throws IOException {\n+    Blob fakeBlob = Blobs.from(\"crepecake\", false);\n+    fakeRequest.setBody(fakeBlob);\n+    fakeRequest.setContentType(\"fake.content.type\");\n+\n+    Mockito.when(\n+            mockHttpRequestFactory.buildRequest(\n+                Mockito.any(String.class), Mockito.eq(fakeUrl), Mockito.any(BlobHttpContent.class)))\n+        .thenReturn(mockHttpRequest);\n+\n+    Mockito.when(mockHttpRequest.setHeaders(Mockito.any(HttpHeaders.class)))\n+        .thenReturn(mockHttpRequest);\n+    Mockito.when(mockHttpRequest.execute()).thenReturn(mockHttpResponse);\n+  }\n+\n+  @Test\n+  public void testGet() throws IOException {\n+    testSend(HttpMethods.GET, Connection::get);\n+  }\n+\n+  @Test\n+  public void testPost() throws IOException {\n+    testSend(HttpMethods.POST, Connection::post);\n+  }\n+\n+  @Test\n+  public void testPut() throws IOException {\n+    testSend(HttpMethods.PUT, Connection::put);\n+  }\n+\n+  @FunctionalInterface\n+  private interface SendFunction {\n+\n+    Response send(Connection connection, Request request) throws IOException;\n+  }\n+\n+  private void testSend(String httpMethod, SendFunction sendFunction) throws IOException {\n+    try (Connection connection = new Connection(fakeUrl.toURL(), mockHttpRequestFactory)) {\n+      sendFunction.send(connection, fakeRequest);\n+    }\n+\n+    Mockito.verify(mockHttpRequest).setHeaders(httpHeadersArgumentCaptor.capture());\n+    Mockito.verify(mockHttpResponse).disconnect();\n+\n+    Assert.assertEquals(\"fake.content.type\", httpHeadersArgumentCaptor.getValue().getContentType());\n+\n+    Mockito.verify(mockHttpRequestFactory)\n+        .buildRequest(\n+            Mockito.eq(httpMethod), Mockito.eq(fakeUrl), blobHttpContentArgumentCaptor.capture());\n+\n+    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n+    blobHttpContentArgumentCaptor.getValue().writeTo(byteArrayOutputStream);\n+\n+    Assert.assertEquals(\n+        \"crepecake\", new String(byteArrayOutputStream.toByteArray(), Charsets.UTF_8));\n+  }\n+}\ndiff --git a/crepecake/src/test/java/com/google/cloud/tools/crepecake/http/ResponseTest.java b/crepecake/src/test/java/com/google/cloud/tools/crepecake/http/ResponseTest.java\nnew file mode 100644\nindex 00000000..d7fd0782\n--- /dev/null\n+++ b/crepecake/src/test/java/com/google/cloud/tools/crepecake/http/ResponseTest.java\n@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2017 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.crepecake.http;\n+\n+import com.google.api.client.http.HttpResponse;\n+import com.google.cloud.tools.crepecake.blob.Blob;\n+import com.google.common.base.Charsets;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+/** Tests for {@link Response}. */\n+@RunWith(MockitoJUnitRunner.class)\n+public class ResponseTest {\n+\n+  @Mock private HttpResponse httpResponseMock;\n+\n+  @Test\n+  public void testGetContent() throws IOException {\n+    String expectedResponse = \"crepecake\\nis\\ngood!\";\n+    ByteArrayInputStream responseInputStream =\n+        new ByteArrayInputStream(expectedResponse.getBytes(Charsets.UTF_8));\n+\n+    Mockito.when(httpResponseMock.getContent()).thenReturn(responseInputStream);\n+\n+    Response response = new Response(httpResponseMock);\n+    Blob responseStream = response.getBody();\n+\n+    ByteArrayOutputStream responseOutputStream = new ByteArrayOutputStream();\n+    responseStream.writeTo(responseOutputStream);\n+\n+    Assert.assertEquals(\n+        expectedResponse, new String(responseOutputStream.toByteArray(), Charsets.UTF_8));\n+  }\n+}\ndiff --git a/crepecake/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker b/crepecake/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker\nnew file mode 100644\nindex 00000000..1f0955d4\n--- /dev/null\n+++ b/crepecake/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker\n@@ -0,0 +1 @@\n+mock-maker-inline",
    "Add separate icons for notifications": "diff --git a/OsmAnd/res/drawable-hdpi/ic_notification_bug.png b/OsmAnd/res/drawable-hdpi/ic_notification_bug.png\nnew file mode 100644\nindex 0000000000..564c70d5f0\nBinary files /dev/null and b/OsmAnd/res/drawable-hdpi/ic_notification_bug.png differ\ndiff --git a/OsmAnd/res/drawable-hdpi/ic_notification_pause.png b/OsmAnd/res/drawable-hdpi/ic_notification_pause.png\nnew file mode 100644\nindex 0000000000..06a3de8538\nBinary files /dev/null and b/OsmAnd/res/drawable-hdpi/ic_notification_pause.png differ\ndiff --git a/OsmAnd/res/drawable-hdpi/ic_notification_play.png b/OsmAnd/res/drawable-hdpi/ic_notification_play.png\nnew file mode 100644\nindex 0000000000..229cec462f\nBinary files /dev/null and b/OsmAnd/res/drawable-hdpi/ic_notification_play.png differ\ndiff --git a/OsmAnd/res/drawable-hdpi/ic_notification_rec_start.png b/OsmAnd/res/drawable-hdpi/ic_notification_rec_start.png\nnew file mode 100644\nindex 0000000000..0f30d5137a\nBinary files /dev/null and b/OsmAnd/res/drawable-hdpi/ic_notification_rec_start.png differ\ndiff --git a/OsmAnd/res/drawable-hdpi/ic_notification_rec_stop.png b/OsmAnd/res/drawable-hdpi/ic_notification_rec_stop.png\nnew file mode 100644\nindex 0000000000..b7ef972aca\nBinary files /dev/null and b/OsmAnd/res/drawable-hdpi/ic_notification_rec_stop.png differ\ndiff --git a/OsmAnd/res/drawable-hdpi/ic_notification_remove.png b/OsmAnd/res/drawable-hdpi/ic_notification_remove.png\nnew file mode 100644\nindex 0000000000..24628ad308\nBinary files /dev/null and b/OsmAnd/res/drawable-hdpi/ic_notification_remove.png differ\ndiff --git a/OsmAnd/res/drawable-hdpi/ic_notification_save.png b/OsmAnd/res/drawable-hdpi/ic_notification_save.png\nnew file mode 100644\nindex 0000000000..b1f8079540\nBinary files /dev/null and b/OsmAnd/res/drawable-hdpi/ic_notification_save.png differ\ndiff --git a/OsmAnd/res/drawable-hdpi/ic_notification_start_navigation.png b/OsmAnd/res/drawable-hdpi/ic_notification_start_navigation.png\nnew file mode 100644\nindex 0000000000..32074abb7c\nBinary files /dev/null and b/OsmAnd/res/drawable-hdpi/ic_notification_start_navigation.png differ\ndiff --git a/OsmAnd/res/drawable-hdpi/ic_notification_track.png b/OsmAnd/res/drawable-hdpi/ic_notification_track.png\nnew file mode 100644\nindex 0000000000..0baefc4016\nBinary files /dev/null and b/OsmAnd/res/drawable-hdpi/ic_notification_track.png differ\ndiff --git a/OsmAnd/res/drawable-mdpi/ic_notification_bug.png b/OsmAnd/res/drawable-mdpi/ic_notification_bug.png\nnew file mode 100644\nindex 0000000000..5e5643b6f3\nBinary files /dev/null and b/OsmAnd/res/drawable-mdpi/ic_notification_bug.png differ\ndiff --git a/OsmAnd/res/drawable-mdpi/ic_notification_pause.png b/OsmAnd/res/drawable-mdpi/ic_notification_pause.png\nnew file mode 100644\nindex 0000000000..312977f375\nBinary files /dev/null and b/OsmAnd/res/drawable-mdpi/ic_notification_pause.png differ\ndiff --git a/OsmAnd/res/drawable-mdpi/ic_notification_play.png b/OsmAnd/res/drawable-mdpi/ic_notification_play.png\nnew file mode 100644\nindex 0000000000..d8495cd4e3\nBinary files /dev/null and b/OsmAnd/res/drawable-mdpi/ic_notification_play.png differ\ndiff --git a/OsmAnd/res/drawable-mdpi/ic_notification_rec_start.png b/OsmAnd/res/drawable-mdpi/ic_notification_rec_start.png\nnew file mode 100644\nindex 0000000000..cc967a4b5b\nBinary files /dev/null and b/OsmAnd/res/drawable-mdpi/ic_notification_rec_start.png differ\ndiff --git a/OsmAnd/res/drawable-mdpi/ic_notification_rec_stop.png b/OsmAnd/res/drawable-mdpi/ic_notification_rec_stop.png\nnew file mode 100644\nindex 0000000000..1d8e04c9b1\nBinary files /dev/null and b/OsmAnd/res/drawable-mdpi/ic_notification_rec_stop.png differ\ndiff --git a/OsmAnd/res/drawable-mdpi/ic_notification_remove.png b/OsmAnd/res/drawable-mdpi/ic_notification_remove.png\nnew file mode 100644\nindex 0000000000..677c55bbef\nBinary files /dev/null and b/OsmAnd/res/drawable-mdpi/ic_notification_remove.png differ\ndiff --git a/OsmAnd/res/drawable-mdpi/ic_notification_save.png b/OsmAnd/res/drawable-mdpi/ic_notification_save.png\nnew file mode 100644\nindex 0000000000..105fff7874\nBinary files /dev/null and b/OsmAnd/res/drawable-mdpi/ic_notification_save.png differ\ndiff --git a/OsmAnd/res/drawable-mdpi/ic_notification_start_navigation.png b/OsmAnd/res/drawable-mdpi/ic_notification_start_navigation.png\nnew file mode 100644\nindex 0000000000..28999cac73\nBinary files /dev/null and b/OsmAnd/res/drawable-mdpi/ic_notification_start_navigation.png differ\ndiff --git a/OsmAnd/res/drawable-mdpi/ic_notification_track.png b/OsmAnd/res/drawable-mdpi/ic_notification_track.png\nnew file mode 100644\nindex 0000000000..5c73b24d47\nBinary files /dev/null and b/OsmAnd/res/drawable-mdpi/ic_notification_track.png differ\ndiff --git a/OsmAnd/res/drawable-xhdpi/ic_notification_bug.png b/OsmAnd/res/drawable-xhdpi/ic_notification_bug.png\nnew file mode 100644\nindex 0000000000..e018c7185c\nBinary files /dev/null and b/OsmAnd/res/drawable-xhdpi/ic_notification_bug.png differ\ndiff --git a/OsmAnd/res/drawable-xhdpi/ic_notification_pause.png b/OsmAnd/res/drawable-xhdpi/ic_notification_pause.png\nnew file mode 100644\nindex 0000000000..db625a70db\nBinary files /dev/null and b/OsmAnd/res/drawable-xhdpi/ic_notification_pause.png differ\ndiff --git a/OsmAnd/res/drawable-xhdpi/ic_notification_play.png b/OsmAnd/res/drawable-xhdpi/ic_notification_play.png\nnew file mode 100644\nindex 0000000000..2abc05a717\nBinary files /dev/null and b/OsmAnd/res/drawable-xhdpi/ic_notification_play.png differ\ndiff --git a/OsmAnd/res/drawable-xhdpi/ic_notification_rec_start.png b/OsmAnd/res/drawable-xhdpi/ic_notification_rec_start.png\nnew file mode 100644\nindex 0000000000..3900d9bef9\nBinary files /dev/null and b/OsmAnd/res/drawable-xhdpi/ic_notification_rec_start.png differ\ndiff --git a/OsmAnd/res/drawable-xhdpi/ic_notification_rec_stop.png b/OsmAnd/res/drawable-xhdpi/ic_notification_rec_stop.png\nnew file mode 100644\nindex 0000000000..bdd248430a\nBinary files /dev/null and b/OsmAnd/res/drawable-xhdpi/ic_notification_rec_stop.png differ\ndiff --git a/OsmAnd/res/drawable-xhdpi/ic_notification_remove.png b/OsmAnd/res/drawable-xhdpi/ic_notification_remove.png\nnew file mode 100644\nindex 0000000000..9fe2795b25\nBinary files /dev/null and b/OsmAnd/res/drawable-xhdpi/ic_notification_remove.png differ\ndiff --git a/OsmAnd/res/drawable-xhdpi/ic_notification_save.png b/OsmAnd/res/drawable-xhdpi/ic_notification_save.png\nnew file mode 100644\nindex 0000000000..806769eb4e\nBinary files /dev/null and b/OsmAnd/res/drawable-xhdpi/ic_notification_save.png differ\ndiff --git a/OsmAnd/res/drawable-xhdpi/ic_notification_start_navigation.png b/OsmAnd/res/drawable-xhdpi/ic_notification_start_navigation.png\nnew file mode 100644\nindex 0000000000..7de196ffe7\nBinary files /dev/null and b/OsmAnd/res/drawable-xhdpi/ic_notification_start_navigation.png differ\ndiff --git a/OsmAnd/res/drawable-xhdpi/ic_notification_track.png b/OsmAnd/res/drawable-xhdpi/ic_notification_track.png\nnew file mode 100644\nindex 0000000000..3dc288ee15\nBinary files /dev/null and b/OsmAnd/res/drawable-xhdpi/ic_notification_track.png differ\ndiff --git a/OsmAnd/res/drawable-xxhdpi/ic_notification_bug.png b/OsmAnd/res/drawable-xxhdpi/ic_notification_bug.png\nnew file mode 100644\nindex 0000000000..e5437a3b61\nBinary files /dev/null and b/OsmAnd/res/drawable-xxhdpi/ic_notification_bug.png differ\ndiff --git a/OsmAnd/res/drawable-xxhdpi/ic_notification_pause.png b/OsmAnd/res/drawable-xxhdpi/ic_notification_pause.png\nnew file mode 100644\nindex 0000000000..aaa8c7ae61\nBinary files /dev/null and b/OsmAnd/res/drawable-xxhdpi/ic_notification_pause.png differ\ndiff --git a/OsmAnd/res/drawable-xxhdpi/ic_notification_play.png b/OsmAnd/res/drawable-xxhdpi/ic_notification_play.png\nnew file mode 100644\nindex 0000000000..6377557d41\nBinary files /dev/null and b/OsmAnd/res/drawable-xxhdpi/ic_notification_play.png differ\ndiff --git a/OsmAnd/res/drawable-xxhdpi/ic_notification_rec_start.png b/OsmAnd/res/drawable-xxhdpi/ic_notification_rec_start.png\nnew file mode 100644\nindex 0000000000..ee8aa4686b\nBinary files /dev/null and b/OsmAnd/res/drawable-xxhdpi/ic_notification_rec_start.png differ\ndiff --git a/OsmAnd/res/drawable-xxhdpi/ic_notification_rec_stop.png b/OsmAnd/res/drawable-xxhdpi/ic_notification_rec_stop.png\nnew file mode 100644\nindex 0000000000..081b9e4e2b\nBinary files /dev/null and b/OsmAnd/res/drawable-xxhdpi/ic_notification_rec_stop.png differ\ndiff --git a/OsmAnd/res/drawable-xxhdpi/ic_notification_remove.png b/OsmAnd/res/drawable-xxhdpi/ic_notification_remove.png\nnew file mode 100644\nindex 0000000000..47b4502def\nBinary files /dev/null and b/OsmAnd/res/drawable-xxhdpi/ic_notification_remove.png differ\ndiff --git a/OsmAnd/res/drawable-xxhdpi/ic_notification_save.png b/OsmAnd/res/drawable-xxhdpi/ic_notification_save.png\nnew file mode 100644\nindex 0000000000..801bfde509\nBinary files /dev/null and b/OsmAnd/res/drawable-xxhdpi/ic_notification_save.png differ\ndiff --git a/OsmAnd/res/drawable-xxhdpi/ic_notification_start_navigation.png b/OsmAnd/res/drawable-xxhdpi/ic_notification_start_navigation.png\nnew file mode 100644\nindex 0000000000..6f11a0a8b0\nBinary files /dev/null and b/OsmAnd/res/drawable-xxhdpi/ic_notification_start_navigation.png differ\ndiff --git a/OsmAnd/res/drawable-xxhdpi/ic_notification_track.png b/OsmAnd/res/drawable-xxhdpi/ic_notification_track.png\nnew file mode 100644\nindex 0000000000..3e122568e6\nBinary files /dev/null and b/OsmAnd/res/drawable-xxhdpi/ic_notification_track.png differ\ndiff --git a/OsmAnd/res/drawable-xxxhdpi/ic_notification_bug.png b/OsmAnd/res/drawable-xxxhdpi/ic_notification_bug.png\nnew file mode 100644\nindex 0000000000..a6c042579d\nBinary files /dev/null and b/OsmAnd/res/drawable-xxxhdpi/ic_notification_bug.png differ\ndiff --git a/OsmAnd/res/drawable-xxxhdpi/ic_notification_pause.png b/OsmAnd/res/drawable-xxxhdpi/ic_notification_pause.png\nnew file mode 100644\nindex 0000000000..83b313128c\nBinary files /dev/null and b/OsmAnd/res/drawable-xxxhdpi/ic_notification_pause.png differ\ndiff --git a/OsmAnd/res/drawable-xxxhdpi/ic_notification_play.png b/OsmAnd/res/drawable-xxxhdpi/ic_notification_play.png\nnew file mode 100644\nindex 0000000000..3cd5acda31\nBinary files /dev/null and b/OsmAnd/res/drawable-xxxhdpi/ic_notification_play.png differ\ndiff --git a/OsmAnd/res/drawable-xxxhdpi/ic_notification_rec_start.png b/OsmAnd/res/drawable-xxxhdpi/ic_notification_rec_start.png\nnew file mode 100644\nindex 0000000000..09ee4ab3f4\nBinary files /dev/null and b/OsmAnd/res/drawable-xxxhdpi/ic_notification_rec_start.png differ\ndiff --git a/OsmAnd/res/drawable-xxxhdpi/ic_notification_rec_stop.png b/OsmAnd/res/drawable-xxxhdpi/ic_notification_rec_stop.png\nnew file mode 100644\nindex 0000000000..7a0800a645\nBinary files /dev/null and b/OsmAnd/res/drawable-xxxhdpi/ic_notification_rec_stop.png differ\ndiff --git a/OsmAnd/res/drawable-xxxhdpi/ic_notification_remove.png b/OsmAnd/res/drawable-xxxhdpi/ic_notification_remove.png\nnew file mode 100644\nindex 0000000000..a9786bf09d\nBinary files /dev/null and b/OsmAnd/res/drawable-xxxhdpi/ic_notification_remove.png differ\ndiff --git a/OsmAnd/res/drawable-xxxhdpi/ic_notification_save.png b/OsmAnd/res/drawable-xxxhdpi/ic_notification_save.png\nnew file mode 100644\nindex 0000000000..420d64da77\nBinary files /dev/null and b/OsmAnd/res/drawable-xxxhdpi/ic_notification_save.png differ\ndiff --git a/OsmAnd/res/drawable-xxxhdpi/ic_notification_start_navigation.png b/OsmAnd/res/drawable-xxxhdpi/ic_notification_start_navigation.png\nnew file mode 100644\nindex 0000000000..be96a28e8f\nBinary files /dev/null and b/OsmAnd/res/drawable-xxxhdpi/ic_notification_start_navigation.png differ\ndiff --git a/OsmAnd/res/drawable-xxxhdpi/ic_notification_track.png b/OsmAnd/res/drawable-xxxhdpi/ic_notification_track.png\nnew file mode 100644\nindex 0000000000..15d610a1b8\nBinary files /dev/null and b/OsmAnd/res/drawable-xxxhdpi/ic_notification_track.png differ",
    "create connection manager method logs in debug mode .": "diff --git a/components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java b/components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java\nindex d1de0457021..b8b2b028d11 100644\n--- a/components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java\n+++ b/components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java\n@@ -397,7 +397,7 @@ public class HttpComponent extends HttpCommonComponent implements RestProducerFa\n         if (localConnectionsPerRoute > 0) {\n             answer.setDefaultMaxPerRoute(localConnectionsPerRoute);\n         }\n-        LOG.info(\"Created ClientConnectionManager {}\", answer);\n+        LOG.debug(\"Created ClientConnectionManager {}\", answer);\n \n         return answer;\n     }",
    "Remove endpoint annotation added where it shouldnt be": "diff --git a/management/src/main/java/io/micronaut/management/endpoint/info/InfoAggregator.java b/management/src/main/java/io/micronaut/management/endpoint/info/InfoAggregator.java\nindex ab2dc2d822..b2ec2cf328 100644\n--- a/management/src/main/java/io/micronaut/management/endpoint/info/InfoAggregator.java\n+++ b/management/src/main/java/io/micronaut/management/endpoint/info/InfoAggregator.java\n@@ -15,9 +15,6 @@\n  */\n package io.micronaut.management.endpoint.info;\n \n-import io.micronaut.context.env.Environment;\n-import io.micronaut.context.env.PropertySource;\n-import io.micronaut.management.endpoint.Endpoint;\n import org.reactivestreams.Publisher;\n \n /**\n@@ -27,7 +24,6 @@ import org.reactivestreams.Publisher;\n  * @author Zachary Klein\n  * @since 1.0\n  */\n-@Endpoint(\"info\")\n public interface InfoAggregator<T> {\n \n     /**\ndiff --git a/management/src/main/java/io/micronaut/management/endpoint/info/InfoEndpoint.java b/management/src/main/java/io/micronaut/management/endpoint/info/InfoEndpoint.java\nindex 74a6cdb599..f8af9fede9 100644\n--- a/management/src/main/java/io/micronaut/management/endpoint/info/InfoEndpoint.java\n+++ b/management/src/main/java/io/micronaut/management/endpoint/info/InfoEndpoint.java\n@@ -27,10 +27,9 @@ import org.reactivestreams.Publisher;\n  * @author Zachary Klein\n  * @since 1.0\n  */\n-@Endpoint(\"info\")\n+@Endpoint(InfoEndpoint.NAME)\n public class InfoEndpoint {\n \n-\n     public static final String NAME = \"info\";\n     public static final String PREFIX = EndpointConfiguration.PREFIX + \".\" + NAME;\n ",
    "IGNITE - 13039 Get rid of possibility to change final static fields - Fixes <issue_id> . . Signed - off - by : Alexey Goncharuk < alexey . goncharuk @ gmail . com >": "diff --git a/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetection.java b/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetection.java\nindex a904e5b6fe..576dec74d7 100644\n--- a/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetection.java\n+++ b/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetection.java\n@@ -52,7 +52,7 @@ import static org.apache.ignite.internal.processors.cache.transactions.IgniteTxM\n  */\n public class TxDeadlockDetection {\n     /** Deadlock detection maximum iterations. */\n-    private static final int DEADLOCK_TIMEOUT = getInteger(IGNITE_TX_DEADLOCK_DETECTION_TIMEOUT, 60000);\n+    private static int deadLockTimeout = getInteger(IGNITE_TX_DEADLOCK_DETECTION_TIMEOUT, 60000);\n \n     /** Sequence. */\n     private static final AtomicLong SEQ = new AtomicLong();\n@@ -229,7 +229,7 @@ public class TxDeadlockDetection {\n             this.topVer = topVer;\n             this.keys = keys;\n \n-            if (DEADLOCK_TIMEOUT > 0) {\n+            if (deadLockTimeout > 0) {\n                 timeoutObj = new DeadlockTimeoutObject();\n \n                 cctx.time().addTimeoutObject(timeoutObj);\n@@ -555,7 +555,7 @@ public class TxDeadlockDetection {\n              * Default constructor.\n              */\n             DeadlockTimeoutObject() {\n-                super(DEADLOCK_TIMEOUT);\n+                super(deadLockTimeout);\n             }\n \n             /** {@inheritDoc} */\n@@ -564,7 +564,7 @@ public class TxDeadlockDetection {\n \n                 IgniteLogger log = cctx.kernalContext().log(this.getClass());\n \n-                U.warn(log, \"Deadlock detection was timed out [timeout=\" + DEADLOCK_TIMEOUT + \", fut=\" + this + ']');\n+                U.warn(log, \"Deadlock detection was timed out [timeout=\" + deadLockTimeout + \", fut=\" + this + ']');\n \n                 onDone();\n             }\ndiff --git a/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetectionNoHangsTest.java b/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetectionNoHangsTest.java\nindex 27a07993d5..7a7651b6b5 100644\n--- a/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetectionNoHangsTest.java\n+++ b/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/transactions/TxDeadlockDetectionNoHangsTest.java\n@@ -89,12 +89,12 @@ public class TxDeadlockDetectionNoHangsTest extends GridCommonAbstractTest {\n     @Override protected void beforeTestsStarted() throws Exception {\n         super.beforeTestsStarted();\n \n-        GridTestUtils.setFieldValue(null, TxDeadlockDetection.class, \"DEADLOCK_TIMEOUT\", (int)(getTestTimeout() * 2));\n+        GridTestUtils.setFieldValue(TxDeadlockDetection.class, \"deadLockTimeout\", (int)(getTestTimeout() * 2));\n     }\n \n     /** {@inheritDoc} */\n     @Override protected void afterTestsStopped() throws Exception {\n-        GridTestUtils.setFieldValue(null, TxDeadlockDetection.class, \"DEADLOCK_TIMEOUT\",\n+        GridTestUtils.setFieldValue(TxDeadlockDetection.class, \"deadLockTimeout\",\n             getInteger(IGNITE_TX_DEADLOCK_DETECTION_TIMEOUT, 60000));\n     }\n \n@@ -113,14 +113,14 @@ public class TxDeadlockDetectionNoHangsTest extends GridCommonAbstractTest {\n         doTest(PESSIMISTIC);\n \n         try {\n-            GridTestUtils.setFieldValue(null, IgniteTxManager.class, \"DEADLOCK_MAX_ITERS\", 0);\n+            GridTestUtils.setFieldValue(IgniteTxManager.class, \"DEADLOCK_MAX_ITERS\", 0);\n \n             assertFalse(grid(0).context().cache().context().tm().deadlockDetectionEnabled());\n \n             doTest(PESSIMISTIC);\n         }\n         finally {\n-            GridTestUtils.setFieldValue(null, IgniteTxManager.class, \"DEADLOCK_MAX_ITERS\",\n+            GridTestUtils.setFieldValue(IgniteTxManager.class, \"DEADLOCK_MAX_ITERS\",\n                 IgniteSystemProperties.getInteger(IGNITE_TX_DEADLOCK_DETECTION_MAX_ITERS, 1000));\n         }\n     }\n@@ -135,14 +135,14 @@ public class TxDeadlockDetectionNoHangsTest extends GridCommonAbstractTest {\n         doTest(OPTIMISTIC);\n \n         try {\n-            GridTestUtils.setFieldValue(null, IgniteTxManager.class, \"DEADLOCK_MAX_ITERS\", 0);\n+            GridTestUtils.setFieldValue(IgniteTxManager.class, \"DEADLOCK_MAX_ITERS\", 0);\n \n             assertFalse(grid(0).context().cache().context().tm().deadlockDetectionEnabled());\n \n             doTest(OPTIMISTIC);\n         }\n         finally {\n-            GridTestUtils.setFieldValue(null, IgniteTxManager.class, \"DEADLOCK_MAX_ITERS\",\n+            GridTestUtils.setFieldValue(IgniteTxManager.class, \"DEADLOCK_MAX_ITERS\",\n                 IgniteSystemProperties.getInteger(IGNITE_TX_DEADLOCK_DETECTION_MAX_ITERS, 1000));\n         }\n     }\ndiff --git a/modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java b/modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java\nindex f7993226b6..608c52aa4c 100644\n--- a/modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java\n+++ b/modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java\n@@ -34,10 +34,8 @@ import java.net.InetAddress;\n import java.net.MulticastSocket;\n import java.net.ServerSocket;\n import java.nio.file.attribute.PosixFilePermission;\n-import java.security.AccessController;\n import java.security.GeneralSecurityException;\n import java.security.KeyStore;\n-import java.security.PrivilegedAction;\n import java.sql.Connection;\n import java.sql.DriverManager;\n import java.sql.SQLException;\n@@ -1621,27 +1619,6 @@ public final class GridTestUtils {\n         return field.get(obj);\n     }\n \n-    /**\n-     * Change static final fields.\n-     * @param field Need to be changed.\n-     * @param newVal New value.\n-     * @throws Exception If failed.\n-     */\n-    public static void setFieldValue(Field field, Object newVal) throws Exception {\n-        field.setAccessible(true);\n-        Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n-\n-        AccessController.doPrivileged(new PrivilegedAction() {\n-            @Override public Object run() {\n-                modifiersField.setAccessible(true);\n-                return null;\n-            }\n-        });\n-\n-        modifiersField.setInt(field, field.getModifiers() & ~Modifier.FINAL);\n-        field.set(null, newVal);\n-    }\n-\n     /**\n      * Get inner class by its name from the enclosing class.\n      *\n@@ -1674,6 +1651,18 @@ public final class GridTestUtils {\n \n             Field field = cls.getDeclaredField(fieldName);\n \n+            boolean isFinal = (field.getModifiers() & Modifier.FINAL) != 0;\n+\n+            boolean isStatic = (field.getModifiers() & Modifier.STATIC) != 0;\n+\n+            /**\n+             * http://java.sun.com/docs/books/jls/third_edition/html/memory.html#17.5.3\n+             * If a final field is initialized to a compile-time constant in the field declaration,\n+             *   changes to the final field may not be observed.\n+             */\n+            if (isFinal && isStatic)\n+                throw new IgniteException(\"Modification of static final field through reflection.\");\n+\n             boolean accessible = field.isAccessible();\n \n             if (!accessible)\n@@ -1708,6 +1697,16 @@ public final class GridTestUtils {\n \n             boolean isFinal = (field.getModifiers() & Modifier.FINAL) != 0;\n \n+            boolean isStatic = (field.getModifiers() & Modifier.STATIC) != 0;\n+\n+            /**\n+             * http://java.sun.com/docs/books/jls/third_edition/html/memory.html#17.5.3\n+             * If a final field is initialized to a compile-time constant in the field declaration,\n+             *   changes to the final field may not be observed.\n+             */\n+            if (isFinal && isStatic)\n+                throw new IgniteException(\"Modification of static final field through reflection.\");\n+\n             if (isFinal) {\n                 Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n \ndiff --git a/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/twostep/AbstractReducer.java b/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/twostep/AbstractReducer.java\nindex dfb23d736a..3b08fe1d0b 100644\n--- a/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/twostep/AbstractReducer.java\n+++ b/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/twostep/AbstractReducer.java\n@@ -54,16 +54,16 @@ public abstract class AbstractReducer implements Reducer {\n     static final int MAX_FETCH_SIZE = getInteger(IGNITE_SQL_MERGE_TABLE_MAX_SIZE, 10_000);\n \n     /** */\n-    static final int PREFETCH_SIZE = getInteger(IGNITE_SQL_MERGE_TABLE_PREFETCH_SIZE, 1024);\n+    static int prefetchSize = getInteger(IGNITE_SQL_MERGE_TABLE_PREFETCH_SIZE, 1024);\n \n     static {\n-        if (!U.isPow2(PREFETCH_SIZE)) {\n-            throw new IllegalArgumentException(IGNITE_SQL_MERGE_TABLE_PREFETCH_SIZE + \" (\" + PREFETCH_SIZE +\n+        if (!U.isPow2(prefetchSize)) {\n+            throw new IllegalArgumentException(IGNITE_SQL_MERGE_TABLE_PREFETCH_SIZE + \" (\" + prefetchSize +\n                 \") must be positive and a power of 2.\");\n         }\n \n-        if (PREFETCH_SIZE >= MAX_FETCH_SIZE) {\n-            throw new IllegalArgumentException(IGNITE_SQL_MERGE_TABLE_PREFETCH_SIZE + \" (\" + PREFETCH_SIZE +\n+        if (prefetchSize >= MAX_FETCH_SIZE) {\n+            throw new IllegalArgumentException(IGNITE_SQL_MERGE_TABLE_PREFETCH_SIZE + \" (\" + prefetchSize +\n                 \") must be less than \" + IGNITE_SQL_MERGE_TABLE_MAX_SIZE + \" (\" + MAX_FETCH_SIZE + \").\");\n         }\n     }\n@@ -102,7 +102,7 @@ public abstract class AbstractReducer implements Reducer {\n     AbstractReducer(GridKernalContext ctx) {\n         this.ctx = ctx;\n \n-        fetched = new ReduceBlockList<>(PREFETCH_SIZE);\n+        fetched = new ReduceBlockList<>(prefetchSize);\n     }\n \n     /** {@inheritDoc} */\n@@ -191,7 +191,7 @@ public abstract class AbstractReducer implements Reducer {\n      * @param evictedBlock Evicted block.\n      */\n     protected void onBlockEvict(@NotNull List<Row> evictedBlock) {\n-        assert evictedBlock.size() == PREFETCH_SIZE;\n+        assert evictedBlock.size() == prefetchSize;\n \n         // Remember the last row (it will be max row) from the evicted block.\n         lastEvictedRow = requireNonNull(last(evictedBlock));\ndiff --git a/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java b/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java\nindex 92e0739a06..15dd2e1323 100644\n--- a/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java\n+++ b/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/IgniteSqlSplitterSelfTest.java\n@@ -567,7 +567,7 @@ public class IgniteSqlSplitterSelfTest extends AbstractIndexingCommonTest {\n             Integer.class, Value.class));\n \n         try {\n-            GridTestUtils.setFieldValue(null, AbstractReducer.class, \"PREFETCH_SIZE\", 8);\n+            GridTestUtils.setFieldValue(AbstractReducer.class, \"prefetchSize\", 8);\n \n             Random rnd = new GridRandom();\n \n@@ -617,7 +617,7 @@ public class IgniteSqlSplitterSelfTest extends AbstractIndexingCommonTest {\n             }\n         }\n         finally {\n-            GridTestUtils.setFieldValue(null, AbstractReducer.class, \"PREFETCH_SIZE\", 1024);\n+            GridTestUtils.setFieldValue(AbstractReducer.class, \"prefetchSize\", 1024);\n \n             c.destroy();\n         }\ndiff --git a/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/RetryCauseMessageSelfTest.java b/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/RetryCauseMessageSelfTest.java\nindex 62f5f32d57..a1f670e57f 100644\n--- a/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/RetryCauseMessageSelfTest.java\n+++ b/modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/twostep/RetryCauseMessageSelfTest.java\n@@ -96,7 +96,7 @@ public class RetryCauseMessageSelfTest extends AbstractIndexingCommonTest {\n     public void testSynthCacheWasNotFoundMessage() {\n         GridMapQueryExecutor mapQryExec = GridTestUtils.getFieldValue(h2Idx, IgniteH2Indexing.class, \"mapQryExec\");\n \n-        GridTestUtils.setFieldValue(h2Idx, IgniteH2Indexing.class, \"mapQryExec\",\n+        GridTestUtils.setFieldValue(h2Idx, \"mapQryExec\",\n             new MockGridMapQueryExecutor() {\n                 @Override public void onQueryRequest(ClusterNode node, GridH2QueryRequest qryReq)\n                     throws IgniteCheckedException {\n@@ -121,7 +121,7 @@ public class RetryCauseMessageSelfTest extends AbstractIndexingCommonTest {\n             return;\n         }\n         finally {\n-            GridTestUtils.setFieldValue(h2Idx, IgniteH2Indexing.class, \"mapQryExec\", mapQryExec);\n+            GridTestUtils.setFieldValue(h2Idx, \"mapQryExec\", mapQryExec);\n         }\n         fail();\n     }\n@@ -135,7 +135,7 @@ public class RetryCauseMessageSelfTest extends AbstractIndexingCommonTest {\n \n         final ConcurrentMap<PartitionReservationKey, GridReservable> reservations = reservations(h2Idx);\n \n-        GridTestUtils.setFieldValue(h2Idx, IgniteH2Indexing.class, \"mapQryExec\",\n+        GridTestUtils.setFieldValue(h2Idx, \"mapQryExec\",\n             new MockGridMapQueryExecutor() {\n                 @Override public void onQueryRequest(ClusterNode node, GridH2QueryRequest qryReq)\n                     throws IgniteCheckedException {\n@@ -166,7 +166,7 @@ public class RetryCauseMessageSelfTest extends AbstractIndexingCommonTest {\n             return;\n         }\n         finally {\n-            GridTestUtils.setFieldValue(h2Idx, IgniteH2Indexing.class, \"mapQryExec\", mapQryExec);\n+            GridTestUtils.setFieldValue(h2Idx, \"mapQryExec\", mapQryExec);\n         }\n         fail();\n     }\n@@ -181,7 +181,7 @@ public class RetryCauseMessageSelfTest extends AbstractIndexingCommonTest {\n \n         final GridKernalContext ctx = GridTestUtils.getFieldValue(mapQryExec, GridMapQueryExecutor.class, \"ctx\");\n \n-        GridTestUtils.setFieldValue(h2Idx, IgniteH2Indexing.class, \"mapQryExec\",\n+        GridTestUtils.setFieldValue(h2Idx, \"mapQryExec\",\n             new MockGridMapQueryExecutor() {\n                 @Override public void onQueryRequest(ClusterNode node, GridH2QueryRequest qryReq) throws IgniteCheckedException {\n                     GridCacheContext<?, ?> cctx = ctx.cache().context().cacheContext(qryReq.caches().get(0));\n@@ -211,7 +211,7 @@ public class RetryCauseMessageSelfTest extends AbstractIndexingCommonTest {\n             return;\n         }\n         finally {\n-            GridTestUtils.setFieldValue(h2Idx, IgniteH2Indexing.class, \"mapQryExec\", mapQryExec);\n+            GridTestUtils.setFieldValue(h2Idx, \"mapQryExec\", mapQryExec);\n         }\n         fail();\n     }\n@@ -225,7 +225,7 @@ public class RetryCauseMessageSelfTest extends AbstractIndexingCommonTest {\n \n         final GridKernalContext ctx = GridTestUtils.getFieldValue(mapQryExec, GridMapQueryExecutor.class, \"ctx\");\n \n-        GridTestUtils.setFieldValue(h2Idx, IgniteH2Indexing.class, \"mapQryExec\",\n+        GridTestUtils.setFieldValue(h2Idx, \"mapQryExec\",\n             new MockGridMapQueryExecutor() {\n                 @Override public void onQueryRequest(ClusterNode node, GridH2QueryRequest qryReq)\n                     throws IgniteCheckedException {\n@@ -256,7 +256,7 @@ public class RetryCauseMessageSelfTest extends AbstractIndexingCommonTest {\n             return;\n         }\n         finally {\n-            GridTestUtils.setFieldValue(h2Idx, IgniteH2Indexing.class, \"mapQryExec\", mapQryExec);\n+            GridTestUtils.setFieldValue(h2Idx, \"mapQryExec\", mapQryExec);\n         }\n         fail();\n     }\n@@ -270,7 +270,7 @@ public class RetryCauseMessageSelfTest extends AbstractIndexingCommonTest {\n \n         final ConcurrentMap<PartitionReservationKey, GridReservable> reservations = reservations(h2Idx);\n \n-        GridTestUtils.setFieldValue(h2Idx, IgniteH2Indexing.class, \"mapQryExec\",\n+        GridTestUtils.setFieldValue(h2Idx, \"mapQryExec\",\n             new MockGridMapQueryExecutor() {\n                 @Override public void onQueryRequest(ClusterNode node, GridH2QueryRequest qryReq)\n                     throws IgniteCheckedException {\n@@ -300,7 +300,7 @@ public class RetryCauseMessageSelfTest extends AbstractIndexingCommonTest {\n             return;\n         }\n         finally {\n-            GridTestUtils.setFieldValue(h2Idx, IgniteH2Indexing.class, \"mapQryExec\", mapQryExec);\n+            GridTestUtils.setFieldValue(h2Idx, \"mapQryExec\", mapQryExec);\n         }\n         fail();\n     }\n@@ -316,7 +316,7 @@ public class RetryCauseMessageSelfTest extends AbstractIndexingCommonTest {\n         final IgniteLogger logger = GridTestUtils.getFieldValue(rdcQryExec, GridReduceQueryExecutor.class, \"log\");\n         final GridKernalContext ctx = GridTestUtils.getFieldValue(rdcQryExec, GridReduceQueryExecutor.class, \"ctx\");\n \n-        GridTestUtils.setFieldValue(rdcQryExec, GridReduceQueryExecutor.class, \"mapper\",\n+        GridTestUtils.setFieldValue(rdcQryExec, \"mapper\",\n             new ReducePartitionMapper(ctx, logger) {\n                 @Override public ReducePartitionMapResult nodesForPartitions(List<Integer> cacheIds,\n             ",
    "Propagate partition properties for full outer join .": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/Partitioning.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/Partitioning.java\nindex d7b6854725..681f94dd6b 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/Partitioning.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/Partitioning.java\n@@ -16,6 +16,8 @@ package com.facebook.presto.sql.planner;\n import com.facebook.presto.Session;\n import com.facebook.presto.metadata.Metadata;\n import com.facebook.presto.spi.predicate.NullableValue;\n+import com.facebook.presto.sql.tree.Expression;\n+import com.facebook.presto.sql.tree.SymbolReference;\n import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.google.common.collect.ImmutableList;\n@@ -32,6 +34,7 @@ import java.util.function.Function;\n \n import static com.google.common.base.MoreObjects.toStringHelper;\n import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Verify.verify;\n import static com.google.common.collect.ImmutableList.toImmutableList;\n import static com.google.common.collect.ImmutableSet.toImmutableSet;\n import static java.util.Objects.requireNonNull;\n@@ -51,7 +54,15 @@ public final class Partitioning\n     public static Partitioning create(PartitioningHandle handle, List<Symbol> columns)\n     {\n         return new Partitioning(handle, columns.stream()\n-                .map(ArgumentBinding::columnBinding)\n+                .map(Symbol::toSymbolReference)\n+                .map(ArgumentBinding::expressionBinding)\n+                .collect(toImmutableList()));\n+    }\n+\n+    public static Partitioning createWithExpressions(PartitioningHandle handle, List<Expression> expressions)\n+    {\n+        return new Partitioning(handle, expressions.stream()\n+                .map(ArgumentBinding::expressionBinding)\n                 .collect(toImmutableList()));\n     }\n \n@@ -160,13 +171,20 @@ public final class Partitioning\n \n     public boolean isPartitionedOn(Collection<Symbol> columns, Set<Symbol> knownConstants)\n     {\n-        // partitioned on (k_1, k_2, ..., k_n) => partitioned on (k_1, k_2, ..., k_n, k_n+1, ...)\n-        // can safely ignore all constant columns when comparing partition properties\n-        return arguments.stream()\n-                .filter(ArgumentBinding::isVariable)\n-                .map(ArgumentBinding::getColumn)\n-                .filter(symbol -> !knownConstants.contains(symbol))\n-                .allMatch(columns::contains);\n+        for (ArgumentBinding argument : arguments) {\n+            // partitioned on (k_1, k_2, ..., k_n) => partitioned on (k_1, k_2, ..., k_n, k_n+1, ...)\n+            // can safely ignore all constant columns when comparing partition properties\n+            if (argument.isConstant()) {\n+                continue;\n+            }\n+            if (!argument.isVariable()) {\n+                return false;\n+            }\n+            if (!knownConstants.contains(argument.getColumn()) && !columns.contains(argument.getColumn())) {\n+                return false;\n+            }\n+        }\n+        return true;\n     }\n \n     public boolean isEffectivelySinglePartition(Set<Symbol> knownConstants)\n@@ -194,11 +212,11 @@ public final class Partitioning\n                 .collect(toImmutableList()));\n     }\n \n-    public Optional<Partitioning> translate(Function<Symbol, Optional<Symbol>> translator, Function<Symbol, Optional<NullableValue>> constants)\n+    public Optional<Partitioning> translate(Translator translator)\n     {\n         ImmutableList.Builder<ArgumentBinding> newArguments = ImmutableList.builder();\n         for (ArgumentBinding argument : arguments) {\n-            Optional<ArgumentBinding> newArgument = argument.translate(translator, constants);\n+            Optional<ArgumentBinding> newArgument = argument.translate(translator);\n             if (!newArgument.isPresent()) {\n                 return Optional.empty();\n             }\n@@ -242,25 +260,43 @@ public final class Partitioning\n                 .toString();\n     }\n \n+    @Immutable\n+    public static final class Translator\n+    {\n+        private final Function<Symbol, Optional<Symbol>> columnTranslator;\n+        private final Function<Symbol, Optional<NullableValue>> constantTranslator;\n+        private final Function<Expression, Optional<Symbol>> expressionTranslator;\n+\n+        public Translator(\n+                Function<Symbol, Optional<Symbol>> columnTranslator,\n+                Function<Symbol, Optional<NullableValue>> constantTranslator,\n+                Function<Expression, Optional<Symbol>> expressionTranslator)\n+        {\n+            this.columnTranslator = requireNonNull(columnTranslator, \"columnTranslator is null\");\n+            this.constantTranslator = requireNonNull(constantTranslator, \"constantTranslator is null\");\n+            this.expressionTranslator = requireNonNull(expressionTranslator, \"expressionTranslator is null\");\n+        }\n+    }\n+\n     @Immutable\n     public static final class ArgumentBinding\n     {\n-        private final Symbol column;\n+        private final Expression expression;\n         private final NullableValue constant;\n \n         @JsonCreator\n         public ArgumentBinding(\n-                @JsonProperty(\"column\") Symbol column,\n+                @JsonProperty(\"expression\") Expression expression,\n                 @JsonProperty(\"constant\") NullableValue constant)\n         {\n-            this.column = column;\n+            this.expression = expression;\n             this.constant = constant;\n-            checkArgument((column == null) != (constant == null), \"Either column or constant must be set\");\n+            checkArgument((expression == null) != (constant == null), \"Either expression or constant must be set\");\n         }\n \n-        public static ArgumentBinding columnBinding(Symbol column)\n+        public static ArgumentBinding expressionBinding(Expression expression)\n         {\n-            return new ArgumentBinding(requireNonNull(column, \"column is null\"), null);\n+            return new ArgumentBinding(requireNonNull(expression, \"expression is null\"), null);\n         }\n \n         public static ArgumentBinding constantBinding(NullableValue constant)\n@@ -275,13 +311,19 @@ public final class Partitioning\n \n         public boolean isVariable()\n         {\n-            return column != null;\n+            return expression instanceof SymbolReference;\n         }\n \n-        @JsonProperty\n         public Symbol getColumn()\n         {\n-            return column;\n+            verify(expression instanceof SymbolReference, \"Expect the expression to be a SymbolReference\");\n+            return Symbol.from(expression);\n+        }\n+\n+        @JsonProperty\n+        public Expression getExpression()\n+        {\n+            return expression;\n         }\n \n         @JsonProperty\n@@ -295,25 +337,31 @@ public final class Partitioning\n             if (isConstant()) {\n                 return this;\n             }\n-            return columnBinding(translator.apply(column));\n+            return expressionBinding(translator.apply(Symbol.from(expression)).toSymbolReference());\n         }\n \n-        public Optional<ArgumentBinding> translate(Function<Symbol, Optional<Symbol>> translator, Function<Symbol, Optional<NullableValue>> constants)\n+        public Optional<ArgumentBinding> translate(Translator translator)\n         {\n             if (isConstant()) {\n                 return Optional.of(this);\n             }\n \n-            Optional<ArgumentBinding> newColumn = translator.apply(column)\n-                    .map(ArgumentBinding::columnBinding);\n+            if (!isVariable()) {\n+                return translator.expressionTranslator.apply(expression)\n+                        .map(Symbol::toSymbolReference)\n+                        .map(ArgumentBinding::expressionBinding);\n+            }\n+\n+            Optional<ArgumentBinding> newColumn = translator.columnTranslator.apply(Symbol.from(expression))\n+                    .map(Symbol::toSymbolReference)\n+                    .map(ArgumentBinding::expressionBinding);\n             if (newColumn.isPresent()) {\n                 return newColumn;\n             }\n-\n             // As a last resort, check for a constant mapping for the symbol\n             // Note: this MUST be last because we want to favor the symbol representation\n             // as it makes further optimizations possible.\n-            return constants.apply(column)\n+            return translator.constantTranslator.apply(Symbol.from(expression))\n                     .map(ArgumentBinding::constantBinding);\n         }\n \n@@ -323,7 +371,8 @@ public final class Partitioning\n             if (constant != null) {\n                 return constant.toString();\n             }\n-            return \"\\\"\" + column + \"\\\"\";\n+\n+            return expression.toString();\n         }\n \n         @Override\n@@ -336,14 +385,14 @@ public final class Partitioning\n                 return false;\n             }\n             ArgumentBinding that = (ArgumentBinding) o;\n-            return Objects.equals(column, that.column) &&\n+            return Objects.equals(expression, that.expression) &&\n                     Objects.equals(constant, that.constant);\n         }\n \n         @Override\n         public int hashCode()\n         {\n-            return Objects.hash(column, constant);\n+            return Objects.hash(expression, constant);\n         }\n     }\n }\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/ActualProperties.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/ActualProperties.java\nindex 762d8c6868..7747914b71 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/ActualProperties.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/ActualProperties.java\n@@ -21,6 +21,7 @@ import com.facebook.presto.spi.predicate.NullableValue;\n import com.facebook.presto.sql.planner.Partitioning;\n import com.facebook.presto.sql.planner.PartitioningHandle;\n import com.facebook.presto.sql.planner.Symbol;\n+import com.facebook.presto.sql.tree.Expression;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.ImmutableSet;\n@@ -153,17 +154,21 @@ public class ActualProperties\n \n     public ActualProperties translate(Function<Symbol, Optional<Symbol>> translator)\n     {\n-        Map<Symbol, NullableValue> translatedConstants = new HashMap<>();\n-        for (Map.Entry<Symbol, NullableValue> entry : constants.entrySet()) {\n-            Optional<Symbol> translatedKey = translator.apply(entry.getKey());\n-            if (translatedKey.isPresent()) {\n-                translatedConstants.put(translatedKey.get(), entry.getValue());\n-            }\n-        }\n         return builder()\n-                .global(global.translate(translator, symbol -> Optional.ofNullable(constants.get(symbol))))\n+                .global(global.translate(new Partitioning.Translator(translator, symbol -> Optional.ofNullable(constants.get(symbol)), expression -> Optional.empty())))\n                 .local(LocalProperties.translate(localProperties, translator))\n-                .constants(translatedConstants)\n+                .constants(translateConstants(translator))\n+                .build();\n+    }\n+\n+    public ActualProperties translate(\n+            Function<Symbol, Optional<Symbol>> translator,\n+            Function<Expression, Optional<Symbol>> expressionTranslator)\n+    {\n+        return builder()\n+                .global(global.translate(new Partitioning.Translator(translator, symbol -> Optional.ofNullable(constants.get(symbol)), expressionTranslator)))\n+                .local(LocalProperties.translate(localProperties, translator))\n+                .constants(translateConstants(translator))\n                 .build();\n     }\n \n@@ -199,6 +204,18 @@ public class ActualProperties\n         return new Builder(properties.global, properties.localProperties, properties.constants);\n     }\n \n+    private Map<Symbol, NullableValue> translateConstants(Function<Symbol, Optional<Symbol>> translator)\n+    {\n+        Map<Symbol, NullableValue> translatedConstants = new HashMap<>();\n+        for (Map.Entry<Symbol, NullableValue> entry : constants.entrySet()) {\n+            Optional<Symbol> translatedKey = translator.apply(entry.getKey());\n+            if (translatedKey.isPresent()) {\n+                translatedConstants.put(translatedKey.get(), entry.getValue());\n+            }\n+        }\n+        return translatedConstants;\n+    }\n+\n     public static class Builder\n     {\n         private Global global;\n@@ -448,11 +465,11 @@ public class ActualProperties\n             return (!streamPartitioning.isPresent() || streamPartitioning.get().isRepartitionEffective(keys, constants)) && !nullsAndAnyReplicated;\n         }\n \n-        private Global translate(Function<Symbol, Optional<Symbol>> translator, Function<Symbol, Optional<NullableValue>> constants)\n+        private Global translate(Partitioning.Translator translator)\n         {\n             return new Global(\n-                    nodePartitioning.flatMap(partitioning -> partitioning.translate(translator, constants)),\n-                    streamPartitioning.flatMap(partitioning -> partitioning.translate(translator, constants)),\n+                    nodePartitioning.flatMap(partitioning -> partitioning.translate(translator)),\n+                    streamPartitioning.flatMap(partitioning -> partitioning.translate(translator)),\n                     nullsAndAnyReplicated);\n         }\n \ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PreferredProperties.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PreferredProperties.java\nindex 7089a11370..d89aa005c9 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PreferredProperties.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PreferredProperties.java\n@@ -391,7 +391,7 @@ class PreferredProperties\n                 return Optional.of(new PartitioningProperties(newPartitioningColumns, Optional.empty(), nullsAndAnyReplicated));\n             }\n \n-            Optional<Partitioning> newPartitioning = partitioning.get().translate(translator, symbol -> Optional.empty());\n+            Optional<Partitioning> newPartitioning = partitioning.get().translate(new Partitioning.Translator(translator, symbol -> Optional.empty(), coalesceSymbols -> Optional.empty()));\n             if (!newPartitioning.isPresent()) {\n                 return Optional.empty();\n             }\ndiff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PropertyDerivations.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PropertyDerivations.java\nindex 66fc8bf9da..23964ab9c5 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PropertyDerivations.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PropertyDerivations.java\n@@ -31,6 +31,7 @@ import com.facebook.presto.sql.planner.DomainTranslator;\n import com.facebook.presto.sql.planner.ExpressionInterpreter;\n import com.facebook.presto.sql.planner.NoOpSymbolResolver;\n import com.facebook.presto.sql.planner.OrderingScheme;\n+import com.facebook.presto.sql.planner.Partitioning;\n import com.facebook.presto.sql.planner.Symbol;\n import com.facebook.presto.sql.planner.TypeProvider;\n import com.facebook.presto.sql.planner.optimizations.ActualProperties.Global;\n@@ -67,6 +68,7 @@ import com.facebook.presto.sql.planner.plan.TopNRowNumberNode;\n import com.facebook.presto.sql.planner.plan.UnnestNode;\n import com.facebook.presto.sql.planner.plan.ValuesNode;\n import com.facebook.presto.sql.planner.plan.WindowNode;\n+import com.facebook.presto.sql.tree.CoalesceExpression;\n import com.facebook.presto.sql.tree.Expression;\n import com.facebook.presto.sql.tree.NodeRef;\n import com.facebook.presto.sql.tree.SymbolReference;\n@@ -422,8 +424,22 @@ public class PropertyDerivations\n                             .unordered(unordered)\n                             .build();\n                 case FULL:\n-                    // We can't say anything about the partitioning scheme because any partition of\n-                    // a hash-partitioned join can produce nulls in case of a lack of matches\n+                    if (probeProperties.getNodePartitioning().isPresent()) {\n+                        Partitioning nodePartitioning = probeProperties.getNodePartitioning().get();\n+                        ImmutableList.Builder<Expression> coalesceExpressions = ImmutableList.builder();\n+                        for (Symbol column : nodePartitioning.getColumns()) {\n+                            for (JoinNode.EquiJoinClause equality : node.getCriteria()) {\n+                                if (equality.getLeft().equals(column) || equality.getRight().equals(column)) {\n+                                    coalesceExpressions.add(new CoalesceExpression(ImmutableList.of(equality.getLeft().toSymbolReference(), equality.getRight().toSymbolReference())));\n+                                }\n+                            }\n+                        }\n+\n+                        return ActualProperties.builder()\n+                                .global(partitionedOn(Partitioning.createWithExpressions(nodePartitioning.getHandle(), coalesceExpressions.build()), Optional.empty()))\n+                                .unordered(unordered)\n+                                .build();\n+                    }\n                     return ActualProperties.builder()\n                             .global(probeProperties.isSingleNode() ? singleStreamPartition() : arbitraryPartition())\n                             .unordered(unordered)\n@@ -606,7 +622,7 @@ public class PropertyDerivations\n \n             Map<Symbol, Symbol> identities = computeIdentityTranslations(node.getAssignments().getMap());\n \n-            ActualProperties translatedProperties = properties.translate(column -> Optional.ofNullable(identities.get(column)));\n+            ActualProperties translatedProperties = properties.translate(column -> Optional.ofNullable(identities.get(column)), expression -> rewriteExpression(node.getAssignments().getMap(), expression));\n \n             // Extract additional constants\n             Map<Symbol, NullableValue> constants = new HashMap<>();\n@@ -824,4 +840,28 @@ public class PropertyDerivations\n \n         return Optional.empty();\n     }\n+\n+    public static Optional<Symbol> rewriteExpression(Map<Symbol, Expression> assignments, Expression expression)\n+    {\n+        checkArgument(expression instanceof CoalesceExpression, \"The rewrite can only handle CoalesceExpression\");\n+        // We are using the property that the result of coalesce from full outer join keys would not be null despite of the order\n+        // of the arguments. Thus we extract and compare the symbols of the CoalesceExpression as a set rather than compare the\n+        // CoalesceExpression directly.\n+        for (Map.Entry<Symbol, Expression> entry : assignments.entrySet()) {\n+            if (entry.getValue() instanceof CoalesceExpression) {\n+                Set<Symbol> symbolsInAssignment = ((CoalesceExpression) entry.getValue()).getOperands().stream()\n+                        .filter(SymbolReference.class::isInstance)\n+                        .map(Symbol::from)\n+                        .collect(toImmutableSet());\n+                Set<Symbol> symbolInExpression = ((CoalesceExpression) expression).getOperands().stream()\n+                        .filter(SymbolReference.class::isInstance)\n+                        .map(Symbol::from)\n+                        .collect(toImmutableSet());\n+                if (symbolsInAssignment.containsAll(symbolInExpression)) {\n+                    return Optional.of(entry.getKey());\n+                }\n+            }\n+        }\n+        return Optional.empty();\n+    }\n }\ndiff --git a/presto-main/src/main/java/com/facebook/presto/util/GraphvizPrinter.java b/presto-main/src/main/java/com/facebook/presto/util/GraphvizPrinter.java\nindex e18789afeb..f9135dcff2 100644\n--- a/presto-main/src/main/java/com/facebook/presto/util/GraphvizPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/util/GraphvizPrinter.java\n@@ -309,7 +309,8 @@ public final class GraphvizPrinter\n         public Void visitExchange(ExchangeNode node, Void context)\n         {\n             List<ArgumentBinding> symbols = node.getOutputSymbols().stream()\n-         ",
    "Add functionality for retrieving logs": "diff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java b/configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java\nindex a8b4844ca43..585a1a67f4d 100644\n--- a/configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java\n@@ -36,6 +36,7 @@ import com.yahoo.vespa.config.server.configchange.RestartActions;\n import com.yahoo.vespa.config.server.deploy.DeployHandlerLogger;\n import com.yahoo.vespa.config.server.deploy.Deployment;\n import com.yahoo.vespa.config.server.http.CompressedApplicationInputStream;\n+import com.yahoo.vespa.config.server.http.LogRetriever;\n import com.yahoo.vespa.config.server.http.SimpleHttpFetcher;\n import com.yahoo.vespa.config.server.http.v2.PrepareResult;\n import com.yahoo.vespa.config.server.provision.HostProvisionerProvider;\n@@ -50,6 +51,7 @@ import com.yahoo.vespa.config.server.session.SilentDeployLogger;\n import com.yahoo.vespa.config.server.tenant.Rotations;\n import com.yahoo.vespa.config.server.tenant.Tenant;\n import com.yahoo.vespa.config.server.tenant.TenantRepository;\n+import com.yahoo.vespa.model.VespaModel;\n \n import java.io.File;\n import java.io.IOException;\n@@ -477,6 +479,13 @@ public class ApplicationRepository implements com.yahoo.config.provision.Deploye\n         return convergeChecker.servicesToCheck(getApplication(applicationId), uri, timeout);\n     }\n \n+    // ---------------- Logs ----------------------------------------------------------------\n+\n+    public HttpResponse getLogs(ApplicationId applicationId) {\n+        String logServerHostName = getLogServerHostname(applicationId);\n+        return LogRetriever.getLogs(logServerHostName);\n+    }\n+\n     // ---------------- Session operations ----------------------------------------------------------------\n \n     /**\n@@ -690,6 +699,13 @@ public class ApplicationRepository implements com.yahoo.config.provision.Deploye\n         }\n     }\n \n+    private String getLogServerHostname(ApplicationId applicationId) {\n+        Application application = getApplication(applicationId);\n+        VespaModel model = (VespaModel) application.getModel();\n+        String logServerHostname = model.getAdmin().getLogserver().getHostName();\n+        return logServerHostname;\n+    }\n+\n     /** Returns version to use when deploying application in given environment */\n     static Version decideVersion(ApplicationId application, Environment environment, Version targetVersion, boolean bootstrap) {\n         if (environment.isManuallyDeployed() &&\ndiff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/http/LogRetriever.java b/configserver/src/main/java/com/yahoo/vespa/config/server/http/LogRetriever.java\nnew file mode 100644\nindex 00000000000..f4952b5b9fc\n--- /dev/null\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/http/LogRetriever.java\n@@ -0,0 +1,41 @@\n+package com.yahoo.vespa.config.server.http;\n+\n+import com.yahoo.container.jdisc.HttpResponse;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClientBuilder;\n+import org.apache.http.util.EntityUtils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+\n+public class LogRetriever {\n+\n+    private final static Logger log = Logger.getLogger(LogRetriever.class.getName());\n+\n+    public static HttpResponse getLogs(String logServerHostname) {\n+        HttpGet get = new HttpGet(logServerHostname);\n+        try (CloseableHttpClient httpClient = HttpClientBuilder.create().build()) {\n+            org.apache.http.HttpResponse response = httpClient.execute(get);\n+            String responseBody = EntityUtils.toString(response.getEntity(), \"UTF-8\");\n+            return new HttpResponse(response.getStatusLine().getStatusCode()) {\n+                @Override\n+                public void render(OutputStream outputStream) throws IOException {\n+                    if (response.getEntity() != null ) outputStream.write(responseBody.getBytes());\n+                }\n+            };\n+        } catch (IOException e) {\n+            log.log(Level.WARNING, \"Failed to retrieve logs from log server\", e);\n+            return new HttpResponse(404) {\n+                @Override\n+                public void render(OutputStream outputStream) throws IOException {\n+                    outputStream.write(e.toString().getBytes());\n+                }\n+            };\n+        }\n+\n+    }\n+}\ndiff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/http/v2/ApplicationHandler.java b/configserver/src/main/java/com/yahoo/vespa/config/server/http/v2/ApplicationHandler.java\nindex 2004ab95144..b65cb370f93 100644\n--- a/configserver/src/main/java/com/yahoo/vespa/config/server/http/v2/ApplicationHandler.java\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/http/v2/ApplicationHandler.java\n@@ -96,6 +96,10 @@ public class ApplicationHandler extends HttpHandler {\n             return applicationRepository.filedistributionStatus(applicationId, timeout);\n         }\n \n+        if (isLogRequest(request)) {\n+            return applicationRepository.getLogs(applicationId);\n+        }\n+\n         return new GetApplicationResponse(Response.Status.OK, applicationRepository.getApplicationGeneration(applicationId));\n     }\n \n@@ -140,7 +144,13 @@ public class ApplicationHandler extends HttpHandler {\n                 \"http://*/application/v2/tenant/*/application/*/environment/*/region/*/instance/*/serviceconverge/*\",\n                 \"http://*/application/v2/tenant/*/application/*/environment/*/region/*/instance/*/clustercontroller/*/status/*\",\n                 \"http://*/application/v2/tenant/*/application/*/environment/*/region/*/instance/*\",\n-                \"http://*/application/v2/tenant/*/application/*\");\n+                \"http://*/application/v2/tenant/*/application/*\",\n+                \"http://*/application/v2/tenant/*/application/*/logs\");\n+    }\n+\n+    private static boolean isLogRequest(HttpRequest request) {\n+        return getBindingMatch(request).groupCount() == 4 &&\n+                request.getUri().getPath().endsWith(\"/logs\");\n     }\n \n     private static boolean isServiceConvergeListRequest(HttpRequest request) {\ndiff --git a/configserver/src/main/resources/configserver-app/services.xml b/configserver/src/main/resources/configserver-app/services.xml\nindex 8a99869e69a..60dd7b0cea2 100644\n--- a/configserver/src/main/resources/configserver-app/services.xml\n+++ b/configserver/src/main/resources/configserver-app/services.xml\n@@ -147,6 +147,8 @@\n       <binding>https://*/application/v2/tenant/*/application/*/environment/*/region/*/instance/*</binding>\n       <binding>http://*/application/v2/tenant/*/application/*</binding>\n       <binding>https://*/application/v2/tenant/*/application/*</binding>\n+      <binding>http://*/application/v2/tenant/*/application/*/logs</binding>\n+      <binding>https://*/application/v2/tenant/*/application/*/logs</binding>\n     </handler>\n     <handler id='com.yahoo.vespa.config.server.http.v2.HttpGetConfigHandler' bundle='configserver'>\n       <binding>http://*/config/v2/tenant/*/application/*/*</binding>\ndiff --git a/configserver/src/test/java/com/yahoo/vespa/config/server/http/LogRetrieverTest.java b/configserver/src/test/java/com/yahoo/vespa/config/server/http/LogRetrieverTest.java\nnew file mode 100644\nindex 00000000000..2c3622e3dac\n--- /dev/null\n+++ b/configserver/src/test/java/com/yahoo/vespa/config/server/http/LogRetrieverTest.java\n@@ -0,0 +1,46 @@\n+package com.yahoo.vespa.config.server.http;\n+\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+import com.yahoo.container.jdisc.HttpResponse;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.okJson;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n+import static org.junit.Assert.assertEquals;\n+\n+public class LogRetrieverTest {\n+\n+    private String logServerHostName = \"http://localhost:8080/\";\n+    @Rule\n+    public final WireMockRule wireMock = new WireMockRule(options().port(8080), true);\n+\n+    @Test\n+    public void testThatLogHandlerPropagatesResponseBody() throws IOException {\n+        String expectedBody = \"{logs-json}\";\n+        stubFor(get(urlEqualTo(\"/\")).willReturn(okJson(expectedBody)));\n+        HttpResponse response = LogRetriever.getLogs(logServerHostName);\n+        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n+        response.render(byteArrayOutputStream);\n+        assertEquals(expectedBody, byteArrayOutputStream.toString());\n+        assertEquals(200, response.getStatus());\n+    }\n+\n+    @Test\n+    public void testThatNotFoundLogServerReturns404() throws IOException {\n+        stubFor(get(urlEqualTo(\"/\")).willReturn(aResponse().withStatus(200)));\n+        HttpResponse response = LogRetriever.getLogs(\"http://wrong-host:8080/\");\n+        assertEquals(404, response.getStatus());\n+    }\n+\n+\n+\n+}\n\\ No newline at end of file\ndiff --git a/container-core/src/main/java/com/yahoo/container/handler/LogHandler.java b/container-core/src/main/java/com/yahoo/container/handler/LogHandler.java\nnew file mode 100644\nindex 00000000000..474d7d7321a\n--- /dev/null\n+++ b/container-core/src/main/java/com/yahoo/container/handler/LogHandler.java\n@@ -0,0 +1,31 @@\n+package com.yahoo.container.handler;\n+\n+import com.fasterxml.jackson.core.JsonFactory;\n+import com.google.inject.Inject;\n+import com.yahoo.container.jdisc.HttpRequest;\n+import com.yahoo.container.jdisc.HttpResponse;\n+import com.yahoo.container.jdisc.ThreadedHttpRequestHandler;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.util.concurrent.Executor;\n+\n+public class LogHandler extends ThreadedHttpRequestHandler {\n+\n+    private static final String LOG_DIRECTORY = \"/home/y/logs/vespa/\";\n+\n+    @Inject\n+    public LogHandler(Executor executor) {\n+        super(executor);\n+    }\n+\n+    @Override\n+    public HttpResponse handle(HttpRequest request) {\n+\n+        return new HttpResponse(200) {\n+            @Override\n+            public void render(OutputStream outputStream) throws IOException {\n+                LogReader.writeToOutputStream(LOG_DIRECTORY, outputStream);\n+            }\n+        };\n+    }\n+}\ndiff --git a/container-core/src/main/java/com/yahoo/container/handler/LogReader.java b/container-core/src/main/java/com/yahoo/container/handler/LogReader.java\nnew file mode 100644\nindex 00000000000..e35ea748c0e\n--- /dev/null\n+++ b/container-core/src/main/java/com/yahoo/container/handler/LogReader.java\n@@ -0,0 +1,44 @@\n+package com.yahoo.container.handler;\n+\n+import com.fasterxml.jackson.core.JsonFactory;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import org.apache.commons.codec.binary.Base64;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import javax.xml.bind.DatatypeConverter;\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.io.OutputStreamWriter;\n+import java.nio.file.Files;\n+\n+public class LogReader {\n+\n+    protected static void writeToOutputStream(String logDirectory, OutputStream outputStream) throws IOException {\n+        OutputStreamWriter outputStreamWriter = new OutputStreamWriter(outputStream);\n+        JSONObject json = new JSONObject();\n+        File root = new File(logDirectory);\n+        try {\n+            traverse_folder(root, json);\n+        } catch (JSONException e) {\n+            outputStreamWriter.write(\"Failed to create log JSON\");\n+        }\n+        outputStreamWriter.write(json.toString());\n+        outputStreamWriter.close();\n+    }\n+\n+    private static void traverse_folder(File root, JSONObject json) throws IOException, JSONException {\n+        for(File child : root.listFiles()) {\n+            JSONObject childJson = new JSONObject();\n+            if(child.isFile()) {\n+                json.put(child.getName(), DatatypeConverter.printBase64Binary(Files.readAllBytes(child.toPath())));\n+            }\n+            else {\n+                json.put(child.getName(), childJson);\n+                traverse_folder(child, childJson);\n+            }\n+        }\n+    }\n+}\ndiff --git a/container-core/src/test/java/com/yahoo/container/handler/LogReaderTest.java b/container-core/src/test/java/com/yahoo/container/handler/LogReaderTest.java\nnew file mode 100644\nindex 00000000000..ff6ea74a411\n--- /dev/null\n+++ b/container-core/src/test/java/com/yahoo/container/handler/LogReaderTest.java\n@@ -0,0 +1,36 @@\n+package com.yahoo.container.handler;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.ByteArrayOutputStream;\n+\n+import static org.junit.Assert.*;\n+\n+public class LogReaderTest {\n+\n+    ByteArrayOutputStream outputStream;\n+\n+    @Before\n+    public void setup() {\n+        outputStream = new ByteArrayOutputStream();\n+    }\n+\n+    @Test\n+    public void testThatFilesAreWrittenCorrectlyToOutputStream() throws Exception{\n+        String logDirectory = \"src/test/resources/logfolder/\";\n+        LogReader.writeToOutputStream(logDirectory, outputStream);\n+        String expected = \"{\\\"subfolder\\\":{\\\"log2.log\\\":\\\"VGhpcyBpcyBhbm90aGVyIGxvZyBmaWxl\\\"},\\\"log1.log\\\":\\\"VGhpcyBpcyBvbmUgbG9nIGZpbGU=\\\"}\";\n+        String actual = new String(outputStream.toByteArray());\n+        assertEquals(expected, actual);\n+    }\n+\n+    @Test\n+    public void testNothingISWrittenToOutputStreamWithEmptyLogFolder() throws Exception {\n+        String logDirectory = \"src/test/resources/emptylogfolder/\";\n+        LogReader.writeToOutputStream(logDirectory, outputStream);\n+        String expected = \"{}\";\n+        String actual = new String(outputStream.toByteArray());\n+        assertEquals(expected, actual);\n+    }\n+}\n\\ No newline at end of file\ndiff --git a/container-core/src/test/resources/logfolder/log1.log b/container-core/src/test/resources/logfolder/log1.log\nnew file mode 100644\nindex 00000000000..bb85d5a4950\n--- /dev/null\n+++ b/container-core/src/test/resources/logfolder/log1.log\n@@ -0,0 +1 @@\n+This is one log file\n\\ No newline at end of file\ndiff --git a/container-core/src/test/resources/logfolder/subfolder/log2.log b/container-core/src/test/resources/logfolder/subfolder/log2.log\nnew file mode 100644\nindex 00000000000..aee6eaca2e8\n--- /dev/null\n+++ b/container-core/src/test/resources/logfolder/subfolder/log2.log\n@@ -0,0 +1 @@\n+This is another log file\n\\ No newline at end of file\ndiff --git a/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/configserver/ConfigServer.java b/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/configserver/ConfigServer.java\nindex 54e057e4187..eb10c78f891 100644\n--- a/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/configserver/ConfigServer.java\n+++ b/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/configserver/ConfigServer.java\n@@ -1,6 +1,7 @@\n // Copyright 2018 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n package com.yahoo.vespa.hosted.controller.api.integration.configserver;\n \n+import com.yahoo.container.jdisc.HttpResponse;\n import com.yahoo.vespa.hosted.controller.api.application.v4.model.DeployOptions;\n import com.yahoo.vespa.hosted.controller.api.application.v4.model.EndpointStatus;\n import com.yahoo.vespa.hosted.controller.api.identifiers.DeploymentId;\n@@ -41,6 +42,7 @@ public interface ConfigServer {\n \n     Map<?,?> getServiceApiResponse(String tenantName, String applicationName, String instanceName, String environment, String region, String serviceName, String restPath);\n \n+    HttpResponse getLogs(DeploymentId deployment);\n     /**\n      * Set new status on en endpoint in one zone.\n      *\ndiff --git a/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java b/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java\nindex 22809ac18bf..556d019d440 100644\n--- a/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java\n+++ b/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java\n@@ -169,6 +169,7 @@ public class ApplicationApiHandler extends LoggingRequestHandler {\n         if (path.matches(\"/application/v4/tenant/{tenant}\")) return tenant(path.get(\"tenant\"), request);\n         if (path.matches(\"/application/v4/tenant/{tenant}/application\")) return applications(path.get(\"tenant\"), request);\n         if (path.matches(\"/application/v4/tenant/{tenant}/application/{application}\")) return application(path.get(\"tenant\"), path.get(\"application\"), request);\n+        if (path.matches(\"/application/v4/tenant/{tenant}/application/{application}/environment/{environment}/region/{region}/instance/{instance}/logs\")) return logs(path.get(\"tenant\"), path.get(\"application\"), path.get(\"instance\"), path.get(\"environment\"), path.get(\"region\"));\n         if (path.matches(\"/application/v4/tenant/{tenant}/application/{application}/instance/{instance}/job\")) return JobControllerApiHandlerHelper.jobTypeResponse(controller, appIdFromPath(path), request.getUri());\n         if (path.matches(\"/application/v4/tenant/{tenant}/application/{application}/instance/{instance}/job/{jobtype}\")) return JobControllerApiHandlerHelper.runResponse(controller.jobController().runs(appIdFromPath(path), jobTypeFromPath(path)), request.getUri());\n         if (path.matches(\"/application/v4/tenant/{tenant}/application/{application}/instance/{instance}/job/{jobtype}/run/{number}\")) return JobControllerApiHandlerHelper.runDetailsResponse(controller.jobController(), runIdFromPath(path), request.getProperty(\"after\"));\n@@ -346,6 +347,14 @@ public class ApplicationApiHandler extends LoggingRequestHandler {\n         return new SlimeJsonResponse(slime);\n     }\n \n+    private HttpResponse logs(String tenantName, String applicationName, String instanceName, String environment, String region) {\n+        ApplicationId application = ApplicationId.from(tenantName, applicationName, instanceName);\n+        ZoneId zone = ZoneId.from(environment, region);\n+        DeploymentId deployment = new DeploymentId(application, zone);\n+        return controller.configServer().getLogs(deployment);\n+    }\n+\n+\n     private void toSlime(Cursor object, Application application, HttpRequest request) {\n         object.setString(\"application\", application.id().application().value());\n         object.setString(\"instance\", application.id().instance().value());\ndiff --git a/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/integration/ConfigServerMock.java b/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/integration/ConfigServerMock.java\nindex 458ba49f3e3..bd65465633e 100644\n--- a/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/integration/ConfigServerMock.java\n+++ b/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/integration/ConfigServerMock.java\n@@ -7,6 +7,7 @@ import com.yahoo.component.Version;\n import com.yahoo.config.provision.ApplicationId;\n import com.yahoo.config.provision.HostName;\n import com.yahoo.config.provision.NodeType;\n+import com.yahoo.container.jdisc.HttpResponse;\n import com.yahoo.vespa.hosted.controller.api.application.v4.model.DeployOptions;\n import com.yahoo.vespa.hosted.controller.api.application.v4.model.EndpointStatus;\n import com.yahoo.vespa.hosted.controller.api.application.v4.model.configserverbindings.ConfigChangeActions;\n@@ -25,7 +26,11 @@ import com.yahoo.vespa.hosted.controller.application.SystemApplication;\n import com.yahoo.vespa.serviceview.bindings.ApplicationView;\n import com.yahoo.vespa.serviceview.bindings.ClusterView;\n import com.yahoo.vespa.serviceview.bindings.ServiceView;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n \n+import java.io.IOException;\n+import java.io.OutputStream;\n import java.net.URI;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -292,6 +297,17 @@ public class ConfigServerMock extends AbstractComponent implements ConfigServer\n         return endpoints.getOrDefault(endpoint, result);\n     }\n \n+    @Override\n+    public HttpResponse getLogs(DeploymentId deployment) {\n+        return new HttpResponse(200) {\n+            @Override\n+            public void render(OutputStream outputStream) throws IOException {\n+                outputStream.write(\"{\\\"subfolder\\\":{\\\"log2.log\\\":\\\"VGhpcyBpcyBhbm90aGVyIGxvZyBmaWxl\\\"},\\\"log1.log\\\":\\\"VGhpcyBpcyBvbmUgbG9nIGZpbGU=\\\"}\".getBytes());\n+            }\n+        };\n+\n+    }\n+\n     public static class Application {\n \n         private final ApplicationId id;\ndiff --git a/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiTest.java b/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiTest.java\nindex 13092451d4b..03877cca30e 100644\n--- a/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiTest.java\n+++ b/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiTest.java\n@@ -330,6 +330,9 @@ public class ApplicationApiTest extends ControllerContainerTest {\n                                       .recursive(\"true\"),\n                               new File(\"application1-recursive.json\"));\n \n+        // GET logs\n+        tester.assertResponse(request(\"/application/v4/tenant/tenant2/application//application1/environment/prod/region/corp-us-east-1/instance/default/logs\", GET).userIdentity(USER_ID), new File(\"logs.json\"));\n+\n         // DELETE (cancel) ongoing change\n         tester.assertResponse(request(\"/application/v4/tenant/tenant1/application/application1/deploying\", DELETE)\n                                       .userIdentity(HOSTED_VESPA_OPERATOR),\ndiff --git a/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/application/responses/logs.json b/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/application/responses/logs.json\nnew file mode 100644\nindex 00000000000..398a62758ee\n--- /dev/null\n+++ b/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/application/responses/logs.json\n@@ -0,0 +1,5 @@\n+{\n+  \"subfolder\": {\n+    \"log2.log\":\"VGhpcyBpcyBhbm90aGVyIGxvZyBmaWxl\"},\n+  \"log1.log\":\"VGhpcyBpcyBvbmUgbG9nIGZpbGU=\"\n+}\n\\ No newline at end of file",
    "Added tag jdk8 - b66 for changeset bc221bce9150": "diff --git a/jaxp/.hgtags b/jaxp/.hgtags\nindex b8bde0dc729..7e7e54dfed2 100644\n--- a/jaxp/.hgtags\n+++ b/jaxp/.hgtags\n@@ -187,3 +187,4 @@ af9e8b0f1900b631a8a0fcccff9f1514fe58c808 jdk8-b59\n 192d8a244bc36427757866e9fb3a08938c0e674c jdk8-b63\n 27ab79568c34abf80958d5fa8c04fd1740d243da jdk8-b64\n 5cf3c69a93d6d088a1cdfa28031d4f0f9438c0de jdk8-b65\n+e6af1ad464e3d9b1154b9f9ed9a5373b97d129fc jdk8-b66",
    "Add XML anchor to fix documentation link .": "diff --git a/src/site/xdoc/manual/configuration.xml.vm b/src/site/xdoc/manual/configuration.xml.vm\nindex ca0bceb6b1..d1f485c4e4 100644\n--- a/src/site/xdoc/manual/configuration.xml.vm\n+++ b/src/site/xdoc/manual/configuration.xml.vm\n@@ -424,6 +424,7 @@ public class Bar {\n                 <td>Enables diagnostic information while loading plugins.</td>\n               </tr>\n             </table>\n+          <a name=\"XML\"/>\n           <p>\n             Log4j can be configured using two XML flavors; concise and strict. The",
    "Prepare next release v6 . 0 . 3 - SNAPSHOT": "diff --git a/version.txt b/version.txt\nindex 7a9f89d81..48157b245 100644\n--- a/version.txt\n+++ b/version.txt\n@@ -1 +1 @@\n-6.0.2\n\\ No newline at end of file\n+6.0.3-SNAPSHOT\n\\ No newline at end of file",
    "Added / ascend and / descend .": "diff --git a/src/WorldEdit.java b/src/WorldEdit.java\nindex 0fabd0353..63fb109d8 100644\n--- a/src/WorldEdit.java\n+++ b/src/WorldEdit.java\n@@ -94,6 +94,8 @@ public WorldEdit() {\n         commands.put(\"/editexpand\", \"<Dir> [Num] - Expands the selection\");\n         commands.put(\"/editcontract\", \"<Dir> [Num] - Contracts the selection\");\n         commands.put(\"/unstuck\", \"Go up to the first free spot\");\n+        commands.put(\"/ascend\", \"Go up one level\");\n+        commands.put(\"/descend\", \"Go dowm one level\");\n     }\n \n     /**\n@@ -202,6 +204,26 @@ public boolean performCommand(WorldEditPlayer player,\n             player.findFreePosition();\n             return true;\n \n+        // Ascend a level\n+        } else if(split[0].equalsIgnoreCase(\"/ascend\")) {\n+            checkArgs(split, 0, 0, split[0]);\n+            if (player.ascendLevel()) {\n+                player.print(\"Ascended a level.\");\n+            } else {\n+                player.printError(\"No free spot above you found.\");\n+            }\n+            return true;\n+\n+        // Descend a level\n+        } else if(split[0].equalsIgnoreCase(\"/descend\")) {\n+            checkArgs(split, 0, 0, split[0]);\n+            if (player.descendLevel()) {\n+                player.print(\"Descended a level.\");\n+            } else {\n+                player.printError(\"No free spot below you found.\");\n+            }\n+            return true;\n+\n         // Set edit position #1\n         } else if (split[0].equalsIgnoreCase(\"/editpos1\")) {\n             checkArgs(split, 0, 0, split[0]);\ndiff --git a/src/WorldEditPlayer.java b/src/WorldEditPlayer.java\nindex 45141d54b..11ffa6b81 100644\n--- a/src/WorldEditPlayer.java\n+++ b/src/WorldEditPlayer.java\n@@ -133,7 +133,7 @@ public void printError(String msg) {\n \n     /**\n      * Move the player.\n-     * \n+     *\n      * @param pos\n      * @param pitch\n      * @param yaw\n@@ -148,6 +148,21 @@ public void setPosition(Vector pos, float pitch, float yaw) {\n         player.teleportTo(loc);\n     }\n \n+    /**\n+     * Move the player.\n+     *\n+     * @param pos\n+     */\n+    public void setPosition(Vector pos) {\n+        Location loc = new Location();\n+        loc.x = pos.getX();\n+        loc.y = pos.getY();\n+        loc.z = pos.getZ();\n+        loc.rotX = (float)getYaw();\n+        loc.rotY = (float)getPitch();\n+        player.teleportTo(loc);\n+    }\n+\n     /**\n      * Find a position for the player to stand that is not inside a block.\n      * Blocks above the player will be iteratively tested until there is\n@@ -186,6 +201,73 @@ public void findFreePosition() {\n         }\n     }\n \n+    /**\n+     * Go up one level to the next free space above.\n+     *\n+     * @return true if a spot was found\n+     */\n+    public boolean ascendLevel() {\n+        int x = (int)Math.floor(player.getX());\n+        int y = (int)Math.floor(player.getY());\n+        int z = (int)Math.floor(player.getZ());\n+\n+        byte free = 0;\n+        byte spots = 0;\n+        boolean inFree = false;\n+\n+        while (y <= 129) {\n+            if (etc.getServer().getBlockIdAt(x, y, z) == 0) {\n+                free++;\n+            } else {\n+                free = 0;\n+                inFree = false;\n+            }\n+\n+            if (free == 2 && inFree == false) {\n+                inFree = true;\n+                spots++;\n+                if (y >= 129 || spots == 2) {\n+                    setPosition(new Vector(x + 0.5, y - 1, z + 0.5));\n+                    return true;\n+                }\n+            }\n+\n+            y++;\n+        }\n+\n+        return false;\n+    }\n+\n+    /**\n+     * Go up one level to the next free space above.\n+     *\n+     * @return true if a spot was found\n+     */\n+    public boolean descendLevel() {\n+        int x = (int)Math.floor(player.getX());\n+        int y = (int)Math.floor(player.getY()) - 1;\n+        int z =",
    "Remove BigArrays from SearchContext ( <issue_id> ) .": "diff --git a/server/src/main/java/org/elasticsearch/search/DefaultSearchContext.java b/server/src/main/java/org/elasticsearch/search/DefaultSearchContext.java\nindex ebb964bb648..6184b18048b 100644\n--- a/server/src/main/java/org/elasticsearch/search/DefaultSearchContext.java\n+++ b/server/src/main/java/org/elasticsearch/search/DefaultSearchContext.java\n@@ -28,11 +28,9 @@ import org.apache.lucene.search.MatchNoDocsQuery;\n import org.apache.lucene.search.Query;\n import org.elasticsearch.action.search.SearchShardTask;\n import org.elasticsearch.action.search.SearchType;\n-import org.elasticsearch.cluster.service.ClusterService;\n import org.elasticsearch.common.Nullable;\n import org.elasticsearch.common.lucene.search.Queries;\n import org.elasticsearch.common.unit.TimeValue;\n-import org.elasticsearch.common.util.BigArrays;\n import org.elasticsearch.index.IndexService;\n import org.elasticsearch.index.IndexSettings;\n import org.elasticsearch.index.cache.bitset.BitsetFilterCache;\n@@ -83,9 +81,7 @@ final class DefaultSearchContext extends SearchContext {\n     private final SearchShardTarget shardTarget;\n     private final LongSupplier relativeTimeSupplier;\n     private SearchType searchType;\n-    private final BigArrays bigArrays;\n     private final IndexShard indexShard;\n-    private final ClusterService clusterService;\n     private final IndexService indexService;\n     private final ContextIndexSearcher searcher;\n     private final DfsSearchResult dfsResult;\n@@ -146,8 +142,6 @@ final class DefaultSearchContext extends SearchContext {\n     DefaultSearchContext(ReaderContext readerContext,\n                          ShardSearchRequest request,\n                          SearchShardTarget shardTarget,\n-                         ClusterService clusterService,\n-                         BigArrays bigArrays,\n                          LongSupplier relativeTimeSupplier,\n                          TimeValue timeout,\n                          FetchPhase fetchPhase,\n@@ -157,14 +151,11 @@ final class DefaultSearchContext extends SearchContext {\n         this.fetchPhase = fetchPhase;\n         this.searchType = request.searchType();\n         this.shardTarget = shardTarget;\n-        // SearchContexts use a BigArrays that can circuit break\n-        this.bigArrays = bigArrays.withCircuitBreaking();\n         this.dfsResult = new DfsSearchResult(readerContext.id(), shardTarget, request);\n         this.queryResult = new QuerySearchResult(readerContext.id(), shardTarget, request);\n         this.fetchResult = new FetchSearchResult(readerContext.id(), shardTarget);\n         this.indexService = readerContext.indexService();\n         this.indexShard = readerContext.indexShard();\n-        this.clusterService = clusterService;\n \n         Engine.Searcher engineSearcher = readerContext.acquireSearcher(\"search\");\n         this.searcher = new ContextIndexSearcher(engineSearcher.getIndexReader(), engineSearcher.getSimilarity(),\n@@ -457,11 +448,6 @@ final class DefaultSearchContext extends SearchContext {\n         return this.indexShard;\n     }\n \n-    @Override\n-    public BigArrays bigArrays() {\n-        return bigArrays;\n-    }\n-\n     @Override\n     public BitsetFilterCache bitsetFilterCache() {\n         return indexService.cache().bitsetFilterCache();\ndiff --git a/server/src/main/java/org/elasticsearch/search/SearchService.java b/server/src/main/java/org/elasticsearch/search/SearchService.java\nindex 57f0da88afd..8c416d9b091 100644\n--- a/server/src/main/java/org/elasticsearch/search/SearchService.java\n+++ b/server/src/main/java/org/elasticsearch/search/SearchService.java\n@@ -768,8 +768,8 @@ public class SearchService extends AbstractLifecycleComponent implements IndexEv\n         try {\n             SearchShardTarget shardTarget = new SearchShardTarget(clusterService.localNode().getId(),\n                 reader.indexShard().shardId(), request.getClusterAlias(), OriginalIndices.NONE);\n-            searchContext = new DefaultSearchContext(reader, request, shardTarget, clusterService,\n-                bigArrays, threadPool::relativeTimeInMillis, timeout, fetchPhase, lowLevelCancellation);\n+            searchContext = new DefaultSearchContext(reader, request, shardTarget,\n+                threadPool::relativeTimeInMillis, timeout, fetchPhase, lowLevelCancellation);\n             // we clone the query shard context here just for rewriting otherwise we\n             // might end up with incorrect state since we are using now() or script services\n             // during rewrite and normalized / evaluate templates etc.\ndiff --git a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregationBuilder.java b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregationBuilder.java\nindex fe516114332..df13bb1d19c 100644\n--- a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregationBuilder.java\n+++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregationBuilder.java\n@@ -25,7 +25,6 @@ import org.elasticsearch.common.io.stream.StreamOutput;\n import org.elasticsearch.common.xcontent.LoggingDeprecationHandler;\n import org.elasticsearch.common.xcontent.ObjectParser;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n-import org.elasticsearch.index.query.QueryRewriteContext;\n import org.elasticsearch.search.aggregations.AggregationBuilder;\n import org.elasticsearch.search.aggregations.Aggregator.SubAggCollectionMode;\n import org.elasticsearch.search.aggregations.AggregatorFactories;\n@@ -401,11 +400,6 @@ public class TermsAggregationBuilder extends ValuesSourceAggregationBuilder<Term\n         return NAME;\n     }\n \n-    @Override\n-    protected AggregationBuilder doRewrite(QueryRewriteContext queryShardContext) throws IOException {\n-        return super.doRewrite(queryShardContext);\n-    }\n-\n     @Override\n     protected ValuesSourceRegistry.RegistryKey<?> getRegistryKey() {\n         return REGISTRY_KEY;\ndiff --git a/server/src/main/java/org/elasticsearch/search/aggregations/support/AggregationContext.java b/server/src/main/java/org/elasticsearch/search/aggregations/support/AggregationContext.java\nindex b5008f1e4ad..cc664811315 100644\n--- a/server/src/main/java/org/elasticsearch/search/aggregations/support/AggregationContext.java\n+++ b/server/src/main/java/org/elasticsearch/search/aggregations/support/AggregationContext.java\n@@ -230,6 +230,12 @@ public abstract class AggregationContext {\n      */\n     public abstract Analyzer getIndexAnalyzer(Function<String, NamedAnalyzer> unindexedFieldAnalyzer);\n \n+    /**\n+     * Is this request cacheable? Requests that have\n+     * non-deterministic queries or scripts aren't cachable.\n+     */\n+    public abstract boolean isCacheable();\n+\n     /**\n      * Implementation of {@linkplain AggregationContext} for production usage\n      * that wraps our ubiquitous {@link QueryShardContext} and anything else\n@@ -239,6 +245,7 @@ public abstract class AggregationContext {\n      */\n     public static class ProductionAggregationContext extends AggregationContext {\n         private final QueryShardContext context;\n+        private final BigArrays bigArrays;\n         private final Query topLevelQuery;\n         private final AggregationProfiler profiler;\n         private final MultiBucketConsumer multiBucketConsumer;\n@@ -277,6 +284,7 @@ public abstract class AggregationContext {\n             Supplier<Boolean> isCancelled\n         ) {\n             this.context = context;\n+            this.bigArrays = context.bigArrays().withCircuitBreaking();  // We can break in searches.\n             this.topLevelQuery = topLevelQuery;\n             this.profiler = profiler;\n             this.multiBucketConsumer = multiBucketConsumer;\n@@ -343,7 +351,7 @@ public abstract class AggregationContext {\n \n         @Override\n         public BigArrays bigArrays() {\n-            return context.bigArrays();\n+            return bigArrays;\n         }\n \n         @Override\n@@ -425,5 +433,10 @@ public abstract class AggregationContext {\n         public Analyzer getIndexAnalyzer(Function<String, NamedAnalyzer> unindexedFieldAnalyzer) {\n             return context.getIndexAnalyzer(unindexedFieldAnalyzer);\n         }\n+\n+        @Override\n+        public boolean isCacheable() {\n+            return context.isCacheable();\n+        }\n     }\n }\ndiff --git a/server/src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java b/server/src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java\nindex f3c6bcebc92..b4ae043bdb2 100644\n--- a/server/src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java\n+++ b/server/src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java\n@@ -25,7 +25,6 @@ import org.apache.lucene.search.Query;\n import org.elasticsearch.action.search.SearchShardTask;\n import org.elasticsearch.action.search.SearchType;\n import org.elasticsearch.common.unit.TimeValue;\n-import org.elasticsearch.common.util.BigArrays;\n import org.elasticsearch.index.cache.bitset.BitsetFilterCache;\n import org.elasticsearch.index.query.ParsedQuery;\n import org.elasticsearch.index.query.QueryShardContext;\n@@ -200,11 +199,6 @@ public abstract class FilteredSearchContext extends SearchContext {\n         return in.indexShard();\n     }\n \n-    @Override\n-    public BigArrays bigArrays() {\n-        return in.bigArrays();\n-    }\n-\n     @Override\n     public BitsetFilterCache bitsetFilterCache() {\n         return in.bitsetFilterCache();\ndiff --git a/server/src/main/java/org/elasticsearch/search/internal/SearchContext.java b/server/src/main/java/org/elasticsearch/search/internal/SearchContext.java\nindex 5a299ddfc22..59e9aabb648 100644\n--- a/server/src/main/java/org/elasticsearch/search/internal/SearchContext.java\n+++ b/server/src/main/java/org/elasticsearch/search/internal/SearchContext.java\n@@ -28,7 +28,6 @@ import org.elasticsearch.common.Nullable;\n import org.elasticsearch.common.lease.Releasable;\n import org.elasticsearch.common.lease.Releasables;\n import org.elasticsearch.common.unit.TimeValue;\n-import org.elasticsearch.common.util.BigArrays;\n import org.elasticsearch.index.cache.bitset.BitsetFilterCache;\n import org.elasticsearch.index.query.ParsedQuery;\n import org.elasticsearch.index.query.QueryShardContext;\n@@ -210,8 +209,6 @@ public abstract class SearchContext implements Releasable {\n \n     public abstract IndexShard indexShard();\n \n-    public abstract BigArrays bigArrays();  // TODO this is only used in aggs land and should be contained\n-\n     public abstract BitsetFilterCache bitsetFilterCache();\n \n     public abstract TimeValue timeout();\ndiff --git a/server/src/test/java/org/elasticsearch/index/SearchSlowLogTests.java b/server/src/test/java/org/elasticsearch/index/SearchSlowLogTests.java\nindex f587f867dc5..1378161bf26 100644\n--- a/server/src/test/java/org/elasticsearch/index/SearchSlowLogTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/SearchSlowLogTests.java\n@@ -32,7 +32,6 @@ import org.elasticsearch.common.logging.Loggers;\n import org.elasticsearch.common.logging.MockAppender;\n import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.common.unit.TimeValue;\n-import org.elasticsearch.common.util.BigArrays;\n import org.elasticsearch.index.query.QueryBuilders;\n import org.elasticsearch.index.shard.ShardId;\n import org.elasticsearch.search.builder.SearchSourceBuilder;\n@@ -82,10 +81,9 @@ public class SearchSlowLogTests extends ESSingleNodeTestCase {\n     }\n \n     protected SearchContext createSearchContext(IndexService indexService, String... groupStats) {\n-        BigArrays bigArrays = indexService.getBigArrays();\n         final ShardSearchRequest request =\n             new ShardSearchRequest(new ShardId(indexService.index(), 0), 0L, null);\n-        return new TestSearchContext(bigArrays, indexService) {\n+        return new TestSearchContext(indexService) {\n             @Override\n             public List<String> groupStats() {\n                 return Arrays.asList(groupStats);\ndiff --git a/server/src/test/java/org/elasticsearch/index/shard/SearchOperationListenerTests.java b/server/src/test/java/org/elasticsearch/index/shard/SearchOperationListenerTests.java\nindex 38292f61cca..2d3c1c7b36c 100644\n--- a/server/src/test/java/org/elasticsearch/index/shard/SearchOperationListenerTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/shard/SearchOperationListenerTests.java\n@@ -18,6 +18,7 @@\n  */\n package org.elasticsearch.index.shard;\n \n+import org.elasticsearch.index.query.QueryShardContext;\n import org.elasticsearch.search.internal.ReaderContext;\n import org.elasticsearch.search.internal.SearchContext;\n import org.elasticsearch.test.ESTestCase;\n@@ -139,7 +140,7 @@ public class SearchOperationListenerTests extends ESTestCase {\n         Collections.shuffle(indexingOperationListeners, random());\n         SearchOperationListener.CompositeListener compositeListener =\n             new SearchOperationListener.CompositeListener(indexingOperationListeners, logger);\n-        SearchContext ctx = new TestSearchContext(null);\n+        SearchContext ctx = new TestSearchContext((QueryShardContext) null);\n         compositeListener.onQueryPhase(ctx, timeInNanos.get());\n         assertEquals(0, preFetch.get());\n         assertEquals(0, preQuery.get());\ndiff --git a/server/src/test/java/org/elasticsearch/search/DefaultSearchContextTests.java b/server/src/test/java/org/elasticsearch/search/DefaultSearchContextTests.java\nindex 2f406a50bab..e4384bd344a 100644\n--- a/server/src/test/java/org/elasticsearch/search/DefaultSearchContextTests.java\n+++ b/server/src/test/java/org/elasticsearch/search/DefaultSearchContextTests.java\n@@ -34,9 +34,6 @@ import org.elasticsearch.cluster.metadata.IndexMetadata;\n import org.elasticsearch.common.UUIDs;\n import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.common.unit.TimeValue;\n-import org.elasticsearch.common.util.BigArrays;\n-import org.elasticsearch.common.util.MockBigArrays;\n-import org.elasticsearch.common.util.MockPageCacheRecycler;\n import org.elasticsearch.index.IndexService;\n import org.elasticsearch.index.IndexSettings;\n import org.elasticsearch.index.cache.IndexCache;\n@@ -49,7 +46,6 @@ import org.elasticsearch.index.query.ParsedQuery;\n import org.elasticsearch.index.query.QueryShardContext;\n import org.elasticsearch.index.shard.IndexShard;\n import org.elasticsearch.index.shard.ShardId;\n-import org.elasticsearch.indices.breaker.NoneCircuitBreakerService;\n import org.elasticsearch.search.internal.AliasFilter;\n import org.elasticsearch.search.internal.LegacyReaderContext;\n import org.elasticsearch.search.internal.ReaderContext;\n@@ -122,8 +118,6 @@ public class DefaultSearchContextTests extends ESTestCase {\n         when(indexService.getIndexSettings()).thenReturn(indexSettings);\n         when(mapperService.getIndexSettings()).thenReturn(indexSettings);\n \n-        BigArrays bigArrays = new MockBigArrays(new MockPageCacheRecycler(Settings.EMPTY), new NoneCircuitBreakerService());\n-\n         try (Directory dir = newDirectory();\n              RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n \n@@ -150,7 +144,7 @@ public class DefaultSearchContextTests extends ESTestCase {\n             ReaderContext readerWithoutScroll = new ReaderContext(\n                 newContextId(), indexService, indexShard, searcherSupplier.get(), randomNonNegativeLong(), false);\n             DefaultSearchContext contextWithoutScroll = new DefaultSearchContext(readerWithoutScroll, shardSearchRequest, target, null,\n-                bigArrays, null, timeout, null, false);\n+                timeout, null, false);\n             contextWithoutScroll.from(300);\n             contextWithoutScroll.close();\n \n@@ -166,7 +160,7 @@ public class DefaultSearchContextTests extends ESTestCase {\n             ReaderContext readerContext = new LegacyReaderContext(\n                 newContextId(), indexService, indexShard, searcherSupplier.get(), shardSearchRequest, randomNonNegativeLong());\n             DefaultSearchContext context1 = new DefaultSearchContext(readerContext, shardSearchRequest, target, null,\n-                bigArrays, null, timeout, null, false);\n+                timeout, null, false);\n             context1.from(300);\n             exception = expectThrows(IllegalArgumentException.class, () -> context1.preProcess(false));\n             assertThat(exception.getMessage(), equalTo(\"Batch size is too large, size must be less than or equal to: [\"\n@@ -200,7 +194,7 @@ public class DefaultSearchContextTests extends ESTestCase {\n                 newContextId(), indexService, indexShard, searcherSupplier.get(), randomNonNegativeLong(), false);\n             // rescore is null but sliceBuilder is not null\n             DefaultSearchContext context2 = new DefaultSearchContext(readerContext, shardSearchRequest, target,\n-                null, bigArrays, null, timeout, null, false);\n+                null, timeout, null, false);\n \n             SliceBuilder sliceBuilder = mock(SliceBuilder.class);\n             int numSlices = maxSlicesPerScroll + randomIntBetween(1, 100);\n@@ -217,7 +211,7 @@ public class DefaultSearchContextTests extends ESTestCase {\n             when(shardSearchRequest.indexBoost()).thenReturn(AbstractQueryBuilder.DEFAULT_BOOST);\n \n             DefaultSearchContext context3 = new DefaultSearchContext(readerContext, shardSearchRequest, target, null,\n-                bigArrays, null, timeout, null, false);\n+                timeout, null, false);\n             ParsedQuery parsedQuery = ParsedQuery.parsedMatchAllQuery();\n             context3.sliceBuilder(null).parsedQuery(parsedQuery).preProcess(false);\n             assertEquals(context3.query(), context3.buildFilteredQuery(parsedQuery.query()));\n@@ -229,7 +223,7 @@ public class DefaultSearchContextTests extends ESTestCase {\n             readerContext = new ReaderContext(newContextId(), indexService, indexShard,\n                 searcherSupplier.get(), randomNonNegativeLong(), false);\n             DefaultSearchContext context4 =\n-                new DefaultSearchContext(readerContext, shardSearchRequest, target, null, bigArrays, null, timeout, null, false);\n+                new DefaultSearchContext(readerContext, shardSearchRequest, target, null, timeout, null, false);\n             context4.sliceBuilder(new SliceBuilder(1,2)).parsedQuery(parsedQuery).preProcess(false);\n             Query query1 = context4.query();\n             context4.sliceBuilder(new SliceBuilder(0,2)).parsedQuery(parsedQuery).preProcess(false);\n@@ -256,8 +250,6 @@ public class DefaultSearchContextTests extends ESTestCase {\n \n         IndexService indexService = mock(IndexService.class);\n \n-        BigArrays bigArrays = new MockBigArrays(new MockPageCacheRecycler(Settings.EMPTY), new NoneCircuitBreakerService());\n-\n         try (Directory dir = newDirectory();\n              RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n \n@@ -282,7 +274,7 @@ public class DefaultSearchContextTests extends ESTestCase {\n             ReaderContext readerContext = new ReaderContext(\n                 newContextId(), indexService, indexShard, searcherSupplier, randomNonNegativeLong(), false);\n             DefaultSearchContext context = new DefaultSearchContext(readerContext, shardSearchRequest, target, null,\n-                bigArrays, null, timeout, null, false);\n+                timeout, null, false);\n \n             assertThat(context.searcher().hasCancellations(), is(false));\n             context.searcher().addQueryCancellation(() -> {});\ndiff --git a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregatorTests.java b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregatorTests.java\nindex 0cea28e5f4d..f6e01830700 100644\n--- a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregatorTests.java\n+++ b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregatorTests.java\n@@ -32,14 +32,10 @@ import org.elasticsearch.search.aggregations.AggregatorFactories;\n import org.elasticsearch.search.aggregations.AggregatorTestCase;\n import org.elasticsearch.search.aggregations.InternalAggregation;\n import org.elasticsearch.search.aggregations.LeafBucketCollector;\n-import org.elasticsearch.search.aggregations.MultiBucketConsumerService.MultiBucketConsumer;\n-import org.elasticsearch.search.aggregations.support.AggregationContext.ProductionAggregationContext;\n-import org.elasticsearch.search.internal.SearchContext;\n+import org.elasticsearch.search.aggregations.support.AggregationContext;\n \n import java.io.IOException;\n \n-import static org.mockito.Mockito.mock;\n-\n public class BucketsAggregatorTests extends AggregatorTestCase{\n \n     public BucketsAggregator buildMergeAggregator() throws IOException{\n@@ -53,12 +49,11 @@ public class BucketsAggregatorTests extends AggregatorTestCase{\n             try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                 IndexSearcher indexSearcher = new IndexSearcher(indexReader);\n \n-                SearchContext searchContext = createSearchContext(\n+                AggregationContext context = createAggregationContext(\n                     indexSearcher,\n                     null,\n                     new NumberFieldMapper.NumberFieldType(\"test\", NumberFieldMapper.NumberType.INTEGER)\n                 );\n-                ProductionAggregationContext context = new ProductionAggregationContext(searchContext, mock(MultiBucketConsumer.class));\n \n                 return new BucketsAggregator(\"test\", AggregatorFactories.EMPTY, context, null, null, null) {\n                     @Override\ndiff --git a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/adjacency/AdjacencyMatrixAggregationBuilderTests.java b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/adjacency/AdjacencyMatrixAggregationBuilderTests.java\nindex 9af7f6cc0c7..304e19636f1 100644\n--- a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/adjacency/AdjacencyMatrixAggregationBuilderTests.java\n+++ b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/adjacency/AdjacencyMatrixAggregationBuilderTests.java\n@@ -22,6 +22,7 @@ package org.elasticsearch.search.aggregations.bucket.adjacency;\n import org.elasticsearch.Version;\n import org.elasticsearch.cluster.metadata.IndexMetadata;\n import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.util.BigArrays;\n import org.elasticsearch.index.Index;\n import org.elasticsearch.index.IndexSettings;\n import org.elasticsearch.index.query.QueryBuilder;\n@@ -62,6 +63,7 @@ public class AdjacencyMatrixAggregationBuilderTests extends ESTestCase {\n         IndexSettings indexSettings = new IndexSettings(indexMetadata, Settings.EMPTY);\n         when(indexShard.indexSettings()).thenReturn(indexSettings);\n         when(queryShardContext.getIndexSettings()).thenReturn(indexSettings);\n+        when(queryShardContext.bigArrays()).thenReturn(BigArrays.NON_RECYCLING_INSTANCE);\n         when(indexShard.shardId()).thenReturn(new ShardId(new Index(\"test\", \"test\"), 1));\n         SearchContext context = new TestSearchContext(queryShardContext, indexShard);\n \ndiff --git a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramAggregatorTests.java b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramAggregatorTests.java\nindex 740b3271fe9..0dc026ecd42 100644\n--- a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramAggregatorTests.java\n+++ b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramAggregatorTests.java\n@@ -38,8 +38,8 @@ import org.elasticsearch.search.aggregations.Aggregator;\n import org.elasticsearch.search.aggregations.BucketOrder;\n import org.elasticsearch.search.aggregations.bucket.terms.StringTerms;\n import org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;\n+import org.elasticsearch.search.aggregations.support.AggregationContext;\n import org.elasticsearch.search.aggregations.support.AggregationInspectionHelper;\n-import org.elasticsearch.search.internal.SearchContext;\n import org.hamcrest.Matcher;\n \n import java.io.IOException;\n@@ -1210,7 +1210,7 @@ public class DateHistogramAggregatorTests extends DateHistogramAggregatorTestCas\n                 );\n             }\n             try (IndexReader reader = indexWriter.getReader()) {\n-                SearchContext context = createSearchContext(new IndexSearcher(reader), new MatchAllDocsQuery(), ft);\n+                AggregationContext context = createAggregationContext(new IndexSearcher(reader), new MatchAllDocsQuery(), ft);\n                 Aggregator agg = createAggregator(builder, context);\n                 Matcher<Aggregator> matcher = instanceOf(DateHistogramAggregator.FromDateRange.class);\n                 if (usesFromRange == false) {\ndiff --git a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java\nindex f5697e0153f..c119cc1e484 100644\n--- a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java\n+++ b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java\n@@ -88,11 +88,11 @@ import org.elasticsearch.search.aggregations.metrics.InternalTopHits;\n import org.elasticsearch.search.aggregations.metrics.TopHitsAggregationBuilder;\n import org.elasticsearch.search.aggregations.pipeline.BucketScriptPipelineAggregationBuilder;\n import org.elasticsearch.search.aggregations.pipeline.PipelineAggregator.PipelineTree;\n+import org.elasticsearch.search.aggregations.support.AggregationContext;\n import org.elasticsearch.search.aggregations.support.AggregationInspectionHelper;\n import org.elasticsearch.search.aggregations.support.CoreValuesSourceType;\n import org.elasticsearch.search.aggregations.support.ValueType;\n import org.elasticsearch.search.aggregations.support.ValuesSourceType;\n-import org.elasticsearch.search.internal.SearchContext;\n import org.elasticsearch.search.sort.FieldSortBuilder;\n import org.elasticsearch.search.sort.ScoreSortBuilder;\n import org.elasticsearch.test.geo.RandomGeoGenerator;\n@@ -142,7 +142,8 @@ public class TermsAggregatorTests extends AggregatorTestCase {\n         return new ScriptService(Settings.EMPTY, engines, ScriptModule.CORE_CONTEXTS);\n     }\n \n-    protected <A extends Aggregator> A createAggregator(AggregationBuilder aggregationBuilder, SearchContext context) throws IOException {\n+    protected <A extends Aggregator> A createAggregator(AggregationBuilder aggregationBuilder, AggregationContext context)\n+        throws IOException {\n         try {\n             if (randomizeAggregatorImpl) {\n                 TermsAggregatorFactory.COLLECT_SEGMENT_ORDS = randomBoolean();\n@@ -253,7 +254,7 @@ public class TermsAggregatorTests extends AggregatorTestCase {\n                             .order(BucketOrder.key(true));\n                         MappedFieldType fieldType = new KeywordFieldMapper.KeywordFieldType(\"string\");\n \n-                        SearchContext context = createSearchContext(indexSearcher, null, fieldType);\n+                        AggregationContext context = createAggregationContext(indexSearcher, null, fieldType);\n                         TermsAggregator aggregator = createAggregator(aggregationBuilder, context);\n                         aggregator.preCollection();\n                         indexSearcher.search(new MatchAllDocsQuery(), aggregator);\n@@ -322,7 +323,7 @@ public class TermsAggregatorTests extends AggregatorTestCase {\n                         .size(12)\n                         .order(BucketOrder.key(true));\n \n-                    SearchContext context = createSearchContext(indexSearcher, null, fieldType);\n+                    AggregationContext context = createAggregationContext(indexSearcher, null, fieldType);\n                     TermsAggregator aggregator = createAggregator(aggregationBuilder, context);\n                     aggregator.preCollection();\n                     indexSearcher.search(new MatchAllDocsQuery(), aggregator);\n@@ -357,7 +358,7 @@ public class TermsAggregatorTests extends AggregatorTestCase {\n                         .field(\"sv_field\")\n                         .order(BucketOrder.key(true));\n \n-                    context = createSearchContext(indexSearcher, null, fieldType2);\n+                    context = createAggregationContext(indexSearcher, null, fieldType2);\n                     aggregator = createAggregator(aggregationBuilder, context);\n                     aggregator.preCollection();\n                     indexSearcher.search(new MatchAllDocsQuery(), aggregator);\n@@ -381,7 +382,7 @@ public class TermsAggregatorTests extends AggregatorTestCase {\n                         .field(\"mv_field\")\n                         .order(BucketOrder.key(true));\n \n-                    context = createSearchContext(indexSearcher, null, fieldType);\n+                    context = createAggregationContext(indexSearcher, null, fieldType);\n                     aggregator = createAggregator(aggregationBuilder, context);\n                     aggregator.preCollection();\n                     indexSearcher.search(new MatchAllDocsQuery(), aggregator);\n@@ -410,7 +411,7 @@ public class TermsAggregatorTests extends AggregatorTestCase {\n                         .includeExclude(new IncludeExclude(null, \"val00.+\"))\n                         .field(\"mv_field\")\n                         .order(BucketOrder.key(true));\n-                    context = createSearchContext(indexSearcher, null, fieldType);\n+                    context = createAggregationContext(indexSearcher, null, fieldType);\n                     aggregator = createAggregator(aggregationBuilder, context);\n                     aggregator.preCollection();\n                     indexSearcher.search(new MatchAllDocsQuery(), aggregator);\n@@ -427,7",
    "Remove the ` arguments ` check from the linter for now , until it \\' s better documented and gives clearer advice to the user . . - - - - - - - - - - - - - .": "diff --git a/src/com/google/javascript/jscomp/LintPassConfig.java b/src/com/google/javascript/jscomp/LintPassConfig.java\nindex a2939a56f..d718bcd10 100644\n--- a/src/com/google/javascript/jscomp/LintPassConfig.java\n+++ b/src/com/google/javascript/jscomp/LintPassConfig.java\n@@ -17,7 +17,6 @@ package com.google.javascript.jscomp;\n \n import com.google.common.collect.ImmutableList;\n import com.google.javascript.jscomp.NodeTraversal.Callback;\n-import com.google.javascript.jscomp.lint.CheckArguments;\n import com.google.javascript.jscomp.lint.CheckEmptyStatements;\n import com.google.javascript.jscomp.lint.CheckEnums;\n import com.google.javascript.jscomp.lint.CheckInterfaces;\n@@ -79,7 +78,6 @@ class LintPassConfig extends PassConfig.PassConfigDelegate {\n           return new CombinedCompilerPass(\n               compiler,\n               ImmutableList.<Callback>of(\n-                  new CheckArguments(compiler),\n                   new CheckEmptyStatements(compiler),\n                   new CheckEnums(compiler),\n                   new CheckInterfaces(compiler),",
    "Add timing for better test reliability": "diff --git a/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkBackground.java b/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkBackground.java\nindex 8527a148..5aa13537 100644\n--- a/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkBackground.java\n+++ b/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkBackground.java\n@@ -34,7 +34,6 @@ import org.testng.annotations.Test;\n import java.util.Arrays;\n import java.util.List;\n import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicLong;\n \n public class TestFrameworkBackground extends BaseClassForTests\n@@ -127,11 +126,12 @@ public class TestFrameworkBackground extends BaseClassForTests\n     @Test\n     public void testCuratorCallbackOnError() throws Exception\n     {\n-\n+        Timing timing = new Timing();\n         CuratorFramework client = CuratorFrameworkFactory.builder()\n             .connectString(server.getConnectString())\n-            .sessionTimeoutMs(60000)\n-            .retryPolicy(new RetryNTimes(1, 1000)).build();\n+            .sessionTimeoutMs(timing.session())\n+            .connectionTimeoutMs(timing.connection())\n+            .retryPolicy(new RetryOneTime(1000)).build();\n         final CountDownLatch latch = new CountDownLatch(1);\n         try\n         {\n@@ -154,7 +154,7 @@ public class TestFrameworkBackground extends BaseClassForTests\n             // Attempt to retrieve children list\n             client.getChildren().inBackground(curatorCallback).forPath(\"/\");\n             // Check if the callback has been called with a correct return code\n-            Assert.assertTrue(latch.await(10, TimeUnit.SECONDS), \"Callback has not been called by curator !\");\n+            Assert.assertTrue(timing.awaitLatch(latch), \"Callback has not been called by curator !\");\n         }\n         finally\n         {",
    "update README . md": "diff --git a/README.md b/README.md\nindex 2941e99..1d3d53b 100644\n--- a/README.md\n+++ b/README.md\n@@ -55,6 +55,9 @@ Elasticsearch-SQL\n **5.6.4** [![5.6.4 Build Status](https://travis-ci.org/NLPchina/elasticsearch-sql.svg?branch=elastic5.6.4)](https://travis-ci.org/NLPchina/elasticsearch-sql)\n **5.6.5** [![5.6.5 Build Status](https://travis-ci.org/NLPchina/elasticsearch-sql.svg?branch=elastic5.6.5)](https://travis-ci.org/NLPchina/elasticsearch-sql)\n **6.0.0** [![6.0.0 Build Status](https://travis-ci.org/NLPchina/elasticsearch-sql.svg?branch=elastic6.0.0)](https://travis-ci.org/NLPchina/elasticsearch-sql)\n+**6.0.1** [![6.0.1 Build Status](https://travis-ci.org/NLPchina/elasticsearch-sql.svg?branch=elastic6.0.1)](https://travis-ci.org/NLPchina/elasticsearch-sql)\n+**6.1.0** [![6.1.0 Build Status](https://travis-ci.org/NLPchina/elasticsearch-sql.svg?branch=elastic6.1.0)](https://travis-ci.org/NLPchina/elasticsearch-sql)\n+**6.1.1** [![6.1.1 Build Status](https://travis-ci.org/NLPchina/elasticsearch-sql.svg?branch=elastic6.1.1)](https://travis-ci.org/NLPchina/elasticsearch-sql)\n \n Query elasticsearch using familiar SQL syntax.\n You can also use ES functions in SQL.\n@@ -123,6 +126,9 @@ Versions\n | 5.6.4                 | 5.6.4.0        | delete commands not supported  | elastic5.6.4 |\n | 5.6.5                 | 5.6.5.0        | delete commands not supported  | elastic5.6.5 |\n | 6.0.0                 | 6.0.0.0        |                                | elastic6.0.0 |\n+| 6.0.1                 | 6.0.1.0        |                                | elastic6.0.1 |\n+| 6.1.0                 | 6.1.0.0        |                                | elastic6.1.0 |\n+| 6.1.1                 | 6.1.1.0        |                                | elastic6.1.1 |\n \n ### Elasticsearch 1.x\n ````\n@@ -332,6 +338,21 @@ Versions\n ./bin/elasticsearch-plugin install https://github.com/NLPchina/elasticsearch-sql/releases/download/6.0.0.0/elasticsearch-sql-6.0.0.0.zip\n ````\n \n+### Elasticsearch 6.0.1\n+````\n+./bin/elasticsearch-plugin install https://github.com/NLPchina/elasticsearch-sql/releases/download/6.0.1.0/elasticsearch-sql-6.0.1.0.zip\n+````\n+\n+### Elasticsearch 6.1.0\n+````\n+./bin/elasticsearch-plugin install https://github.com/NLPchina/elasticsearch-sql/releases/download/6.1.0.0/elasticsearch-sql-6.1.0.0.zip\n+````\n+\n+### Elasticsearch 6.1.1\n+````\n+./bin/elasticsearch-plugin install https://github.com/NLPchina/elasticsearch-sql/releases/download/6.1.1.0/elasticsearch-sql-6.1.1.0.zip\n+````\n+\n After doing this, you need to restart the Elasticsearch server. Otherwise you may get errors like `Invalid index name [sql], must not start with '']; \",\"status\":400}`.\n \n ## Basic Usage",
    "remove outdated comment": "diff --git a/languagetool-core/pom.xml b/languagetool-core/pom.xml\nindex e56a7dac85..63ba77cfc4 100644\n--- a/languagetool-core/pom.xml\n+++ b/languagetool-core/pom.xml\n@@ -82,7 +82,6 @@\n             <version>${morfologik.version}</version>\n         </dependency>\n         <dependency>\n-            <!-- Note: if you update morfologik here, remember to also update morfologik-tools in languagetool-standalone -->\n             <groupId>org.carrot2</groupId>\n             <artifactId>morfologik-speller</artifactId>\n             <version>${morfologik.version}</version>",
    "Confusing error message in case of missing / empty .": "diff --git a/maven-core/src/main/java/org/apache/maven/lifecycle/internal/LifecyclePluginResolver.java b/maven-core/src/main/java/org/apache/maven/lifecycle/internal/LifecyclePluginResolver.java\nindex 956e71723..f02552aec 100644\n--- a/maven-core/src/main/java/org/apache/maven/lifecycle/internal/LifecyclePluginResolver.java\n+++ b/maven-core/src/main/java/org/apache/maven/lifecycle/internal/LifecyclePluginResolver.java\n@@ -19,6 +19,9 @@\n  * under the License.\n  */\n \n+import java.util.HashMap;\n+import java.util.Map;\n+\n import org.apache.maven.execution.MavenSession;\n import org.apache.maven.model.Plugin;\n import org.apache.maven.model.PluginManagement;\n@@ -30,9 +33,6 @@\n import org.codehaus.plexus.component.annotations.Component;\n import org.codehaus.plexus.component.annotations.Requirement;\n \n-import java.util.HashMap;\n-import java.util.Map;\n-\n /**\n  * @since 3.0\n  * @author Benjamin Bentmann\n@@ -46,7 +46,6 @@ public class LifecyclePluginResolver\n     @Requirement\n     private PluginVersionResolver pluginVersionResolver;\n \n-\n     public LifecyclePluginResolver( PluginVersionResolver pluginVersionResolver )\n     {\n         this.pluginVersionResolver = pluginVersionResolver;\n@@ -65,9 +64,8 @@ public void resolveMissingPluginVersions( MavenProject project, MavenSession ses\n         {\n             if ( plugin.getVersion() == null )\n             {\n-                PluginVersionRequest request =\n-                    new DefaultPluginVersionRequest( plugin, session.getRepositorySession(),\n-                                                     project.getRemotePluginRepositories() );\n+                PluginVersionRequest request = new DefaultPluginVersionRequest( plugin, session.getRepositorySession(),\n+                                                                                project.getRemotePluginRepositories() );\n                 plugin.setVersion( pluginVersionResolver.resolve( request ).getVersion() );\n             }\n             versions.put( plugin.getKey(), plugin.getVersion() );\ndiff --git a/maven-core/src/main/java/org/apache/maven/plugin/version/internal/DefaultPluginVersionResolver.java b/maven-core/src/main/java/org/apache/maven/plugin/version/internal/DefaultPluginVersionResolver.java\nindex f11ee956a..82e32fb31 100644\n--- a/maven-core/src/main/java/org/apache/maven/plugin/version/internal/DefaultPluginVersionResolver.java\n+++ b/maven-core/src/main/java/org/apache/maven/plugin/version/internal/DefaultPluginVersionResolver.java\n@@ -87,8 +87,6 @@ public class DefaultPluginVersionResolver\n     public PluginVersionResult resolve( PluginVersionRequest request )\n         throws PluginVersionResolutionException\n     {\n-        logger.debug( \"Resolving plugin version for \" + request.getGroupId() + \":\" + request.getArtifactId() );\n-\n         PluginVersionResult result = resolveFromProject( request );\n \n         if ( result == null )\n@@ -103,8 +101,8 @@ public PluginVersionResult resolve( PluginVersionRequest request )\n         }\n         else if ( logger.isDebugEnabled() )\n         {\n-            logger.debug( \"Resolved plugin version for \" + request.getGroupId() + \":\" + request.getArtifactId()\n-                + \" to \" + result.getVersion() + \" from POM \" + request.getPom() );\n+            logger.debug( \"Resolved plugin version for \" + request.getGroupId() + \":\" + request.getArtifactId() + \" to \"\n+                + result.getVersion() + \" from POM \" + request.getPom() );\n         }\n \n         return result;\ndiff --git a/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java b/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java\nindex 1d3a0f668..cea2a743e 100644\n--- a/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java\n+++ b/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java\n@@ -83,17 +83,18 @@ public void validateRawModel( Model m, ModelBuildingRequest request, ModelProble\n             validateStringNotEmpty( \"parent.groupId\", problems, Severity.FATAL, Version.BASE, parent.getGroupId(),\n                                     parent );\n \n-            validateStringNotEmpty( \"parent.artifactId\", problems, Severity.FATAL, Version.BASE,\n-                                    parent.getArtifactId(), parent );\n+            validateStringNotEmpty( \"parent.artifactId\", problems, Severity.FATAL, Version.BASE, parent.getArtifactId(),\n+                                    parent );\n \n             validateStringNotEmpty( \"parent.version\", problems, Severity.FATAL, Version.BASE, parent.getVersion(),\n                                     parent );\n \n-            if ( equals( parent.getGroupId(), m.getGroupId() )\n-                && equals( parent.getArtifactId(), m.getArtifactId() ) )\n+            if ( equals( parent.getGroupId(), m.getGroupId() ) && equals( parent.getArtifactId(), m.getArtifactId() ) )\n             {\n-                addViolation( problems, Severity.FATAL, Version.BASE, \"parent.artifactId\", null, \"must be changed\"\n-                    + \", the parent element cannot have the same groupId:artifactId as the project.\", parent );\n+                addViolation( problems, Severity.FATAL, Version.BASE, \"parent.artifactId\", null,\n+                              \"must be changed\"\n+                                  + \", the parent element cannot have the same groupId:artifactId as the project.\",\n+                              parent );\n             }\n         }\n \n@@ -101,6 +102,14 @@ && equals( parent.getArtifactId(), m.getArtifactId() ) )\n         {\n             Severity errOn30 = getSeverity( request, ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0 );\n \n+            // [MNG-6074] Maven should produce an error if no model version has been set in a POM file used to build an\n+            // effective model.\n+            //\n+            // As of 3.4, the model version is mandatory even in raw models. The XML element still is optional in the\n+            // XML schema and this will not change anytime soon. We do not want to build effective models based on\n+            // models without a version starting with 3.4.\n+            validateStringNotEmpty( \"modelVersion\", problems, Severity.ERROR, Version.V20, m.getModelVersion(), m );\n+\n             validateEnum( \"modelVersion\", problems, Severity.ERROR, Version.V20, m.getModelVersion(), null, m,\n                           \"4.0.0\" );\n \n@@ -157,23 +166,23 @@ && equals( parent.getArtifactId(), m.getArtifactId() ) )\n                                   \"must be unique but found duplicate profile with id \" + profile.getId(), profile );\n                 }\n \n-                validate30RawProfileActivation( problems, profile.getActivation(), profile.getId(), prefix\n-                    + \".activation\", request );\n+                validate30RawProfileActivation( problems, profile.getActivation(), profile.getId(),\n+                                                prefix + \".activation\", request );\n \n                 validate20RawDependencies( problems, profile.getDependencies(), prefix + \".dependencies.dependency\",\n-                                         request );\n+                                           request );\n \n                 if ( profile.getDependencyManagement() != null )\n                 {\n-                    validate20RawDependencies( problems, profile.getDependencyManagement().getDependencies(), prefix\n-                        + \".dependencyManagement.dependencies.dependency\", request );\n+                    validate20RawDependencies( problems, profile.getDependencyManagement().getDependencies(),\n+                                               prefix + \".dependencyManagement.dependencies.dependency\", request );\n                 }\n \n                 validateRawRepositories( problems, profile.getRepositories(), prefix + \".repositories.repository\",\n-                                      request );\n+                                         request );\n \n-                validateRawRepositories( problems, profile.getPluginRepositories(), prefix\n-                    + \".pluginRepositories.pluginRepository\", request );\n+                validateRawRepositories( problems, profile.getPluginRepositories(),\n+                                         prefix + \".pluginRepositories.pluginRepository\", request );\n \n                 BuildBase buildBase = profile.getBuild();\n                 if ( buildBase != null )\n@@ -184,7 +193,7 @@ && equals( parent.getArtifactId(), m.getArtifactId() ) )\n                     if ( mngt != null )\n                     {\n                         validate20RawPlugins( problems, mngt.getPlugins(), prefix + \".pluginManagement.plugins.plugin\",\n-                                            request );\n+                                              request );\n                     }\n                 }\n             }\n@@ -223,11 +232,8 @@ else if ( StringUtils.isNotEmpty( file.getMissing() ) )\n \n             if ( path.contains( \"${project.basedir}\" ) )\n             {\n-                addViolation( problems,\n-                              Severity.WARNING,\n-                              Version.V30,\n-                              prefix + ( missing ? \".file.missing\" : \".file.exists\" ),\n-                              null,\n+                addViolation( problems, Severity.WARNING, Version.V30,\n+                              prefix + ( missing ? \".file.missing\" : \".file.exists\" ), null,\n                               \"Failed to interpolate file location \" + path + \" for profile \" + sourceHint\n                                   + \": ${project.basedir} expression not supported during profile activation, \"\n                                   + \"use ${basedir} instead\",\n@@ -235,15 +241,9 @@ else if ( StringUtils.isNotEmpty( file.getMissing() ) )\n             }\n             else if ( hasProjectExpression( path ) )\n             {\n-                addViolation( problems,\n-                              Severity.WARNING,\n-                              Version.V30,\n-                              prefix + ( missing ? \".file.missing\" : \".file.exists\" ),\n-                              null,\n-                              \"Failed to interpolate file location \"\n-                                  + path\n-                                  + \" for profile \"\n-                                  + sourceHint\n+                addViolation( problems, Severity.WARNING, Version.V30,\n+                              prefix + ( missing ? \".file.missing\" : \".file.exists\" ), null,\n+                              \"Failed to interpolate file location \" + path + \" for profile \" + sourceHint\n                                   + \": ${project.*} expressions are not supported during profile activation\",\n                               file.getLocation( missing ? \"missing\" : \"exists\" ) );\n             }\n@@ -251,7 +251,7 @@ else if ( hasProjectExpression( path ) )\n     }\n \n     private void validate20RawPlugins( ModelProblemCollector problems, List<Plugin> plugins, String prefix,\n-                                     ModelBuildingRequest request )\n+                                       ModelBuildingRequest request )\n     {\n         Severity errOn31 = getSeverity( request, ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_1 );\n \n@@ -259,6 +259,27 @@ private void validate20RawPlugins( ModelProblemCollector problems, List<Plugin>\n \n         for ( Plugin plugin : plugins )\n         {\n+            if ( plugin.getGroupId() == null\n+                || ( plugin.getGroupId() != null && plugin.getGroupId().trim().isEmpty() ) )\n+            {\n+                addViolation( problems, Severity.FATAL, Version.V20, prefix + \".(groupId:artifactId)\", null,\n+                              \"groupId of a plugin must be defined. \", plugin );\n+            }\n+\n+            if ( plugin.getArtifactId() == null\n+                || ( plugin.getArtifactId() != null && plugin.getArtifactId().trim().isEmpty() ) )\n+            {\n+                addViolation( problems, Severity.FATAL, Version.V20, prefix + \".(groupId:artifactId)\", null,\n+                              \"artifactId of a plugin must be defined. \", plugin );\n+            }\n+\n+            // This will catch cases like <version></version> or <version/>\n+            if ( plugin.getVersion() != null && plugin.getVersion().trim().isEmpty() )\n+            {\n+                addViolation( problems, Severity.FATAL, Version.V20, prefix + \".(groupId:artifactId)\", null,\n+                              \"version of a plugin must be defined. \", plugin );\n+            }\n+\n             String key = plugin.getKey();\n \n             Plugin existing = index.get( key );\n@@ -279,9 +300,9 @@ private void validate20RawPlugins( ModelProblemCollector problems, List<Plugin>\n             {\n                 if ( !executionIds.add( exec.getId() ) )\n                 {\n-                    addViolation( problems, Severity.ERROR, Version.V20, prefix + \"[\" + plugin.getKey()\n-                        + \"].executions.execution.id\", null, \"must be unique but found duplicate execution with id \"\n-                        + exec.getId(), exec );\n+                    addViolation( problems, Severity.ERROR, Version.V20,\n+                                  prefix + \"[\" + plugin.getKey() + \"].executions.execution.id\", null,\n+                                  \"must be unique but found duplicate execution with id \" + exec.getId(), exec );\n                 }\n             }\n         }\n@@ -302,9 +323,8 @@ public void validateEffectiveModel( Model m, ModelBuildingRequest request, Model\n         {\n             if ( !\"pom\".equals( m.getPackaging() ) )\n             {\n-                addViolation( problems, Severity.ERROR, Version.BASE, \"packaging\", null,\n-                              \"with value '\" + m.getPackaging() + \"' is invalid. Aggregator projects \"\n-                                  + \"require 'pom' as packaging.\", m );\n+                addViolation( problems, Severity.ERROR, Version.BASE, \"packaging\", null, \"with value '\"\n+                    + m.getPackaging() + \"' is invalid. Aggregator projects \" + \"require 'pom' as packaging.\", m );\n             }\n \n             for ( int i = 0, n = m.getModules().size(); i < n; i++ )\n@@ -364,8 +384,8 @@ public void validateEffectiveModel( Model m, ModelBuildingRequest request, Model\n                     validate20PluginVersion( \"build.plugins.plugin.version\", problems, p.getVersion(), p.getKey(), p,\n                                              request );\n \n-",
    "add return value errorprone annotations": "diff --git a/netty/src/main/java/io/grpc/netty/GrpcSslContexts.java b/netty/src/main/java/io/grpc/netty/GrpcSslContexts.java\nindex a39925619..d87615fb3 100644\n--- a/netty/src/main/java/io/grpc/netty/GrpcSslContexts.java\n+++ b/netty/src/main/java/io/grpc/netty/GrpcSslContexts.java\n@@ -33,6 +33,7 @@ package io.grpc.netty;\n \n import static com.google.common.base.Preconditions.checkArgument;\n \n+import com.google.errorprone.annotations.CanIgnoreReturnValue;\n import io.grpc.ExperimentalApi;\n import io.netty.handler.codec.http2.Http2SecurityUtil;\n import io.netty.handler.ssl.ApplicationProtocolConfig;\n@@ -133,6 +134,7 @@ public class GrpcSslContexts {\n    * Set ciphers and APN appropriate for gRPC. Precisely what is set is permitted to change, so if\n    * an application requires particular settings it should override the options set here.\n    */\n+  @CanIgnoreReturnValue\n   public static SslContextBuilder configure(SslContextBuilder builder) {\n     return configure(builder, defaultSslProvider());\n   }\n@@ -142,6 +144,7 @@ public class GrpcSslContexts {\n    * an application requires particular settings it should override the options set here.\n    */\n   @ExperimentalApi(\"https://github.com/grpc/grpc-java/issues/1784\")\n+  @CanIgnoreReturnValue\n   public static SslContextBuilder configure(SslContextBuilder builder, SslProvider provider) {\n     return builder.sslProvider(provider)\n                   .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE)\ndiff --git a/netty/src/main/java/io/grpc/netty/NettyChannelBuilder.java b/netty/src/main/java/io/grpc/netty/NettyChannelBuilder.java\nindex aec7b0f7e..a0fb0733d 100644\n--- a/netty/src/main/java/io/grpc/netty/NettyChannelBuilder.java\n+++ b/netty/src/main/java/io/grpc/netty/NettyChannelBuilder.java\n@@ -39,6 +39,7 @@ import static io.grpc.internal.GrpcUtil.DEFAULT_KEEPALIVE_TIMEOUT_NANOS;\n \n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.Preconditions;\n+import com.google.errorprone.annotations.CanIgnoreReturnValue;\n import io.grpc.Attributes;\n import io.grpc.ExperimentalApi;\n import io.grpc.NameResolver;\n@@ -57,6 +58,7 @@ import java.net.SocketAddress;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n+import javax.annotation.CheckReturnValue;\n import javax.annotation.Nullable;\n import javax.net.ssl.SSLException;\n \n@@ -64,6 +66,7 @@ import javax.net.ssl.SSLException;\n  * A builder to help simplify construction of channels using the Netty transport.\n  */\n @ExperimentalApi(\"https://github.com/grpc/grpc-java/issues/1784\")\n+@CanIgnoreReturnValue\n public final class NettyChannelBuilder\n     extends AbstractManagedChannelImplBuilder<NettyChannelBuilder> {\n   public static final int DEFAULT_FLOW_CONTROL_WINDOW = 1048576; // 1MiB\n@@ -91,6 +94,7 @@ public final class NettyChannelBuilder\n    * generally be preferred over this method, since that API permits delaying DNS lookups and\n    * noticing changes to DNS.\n    */\n+  @CheckReturnValue\n   public static NettyChannelBuilder forAddress(SocketAddress serverAddress) {\n     return new NettyChannelBuilder(serverAddress);\n   }\n@@ -98,6 +102,7 @@ public final class NettyChannelBuilder\n   /**\n    * Creates a new builder with the given host and port.\n    */\n+  @CheckReturnValue\n   public static NettyChannelBuilder forAddress(String host, int port) {\n     return new NettyChannelBuilder(host, port);\n   }\n@@ -106,22 +111,27 @@ public final class NettyChannelBuilder\n    * Creates a new builder with the given target string that will be resolved by\n    * {@link io.grpc.NameResolver}.\n    */\n+  @CheckReturnValue\n   public static NettyChannelBuilder forTarget(String target) {\n     return new NettyChannelBuilder(target);\n   }\n \n+  @CheckReturnValue\n   NettyChannelBuilder(String host, int port) {\n     this(GrpcUtil.authorityFromHostAndPort(host, port));\n   }\n \n+  @CheckReturnValue\n   NettyChannelBuilder(String target) {\n     super(target);\n   }\n \n+  @CheckReturnValue\n   NettyChannelBuilder(SocketAddress address) {\n     super(address, getAuthorityFromAddress(address));\n   }\n \n+  @CheckReturnValue\n   private static String getAuthorityFromAddress(SocketAddress address) {\n     if (address instanceof InetSocketAddress) {\n       InetSocketAddress inetAddress = (InetSocketAddress) address;\n@@ -258,6 +268,7 @@ public final class NettyChannelBuilder\n   }\n \n   @Override\n+  @CheckReturnValue\n   protected ClientTransportFactory buildTransportFactory() {\n     return new NettyTransportFactory(dynamicParamsFactory, channelType, channelOptions,\n         negotiationType, sslContext, eventLoopGroup, flowControlWindow, maxInboundMessageSize(),\n@@ -265,6 +276,7 @@ public final class NettyChannelBuilder\n   }\n \n   @Override\n+  @CheckReturnValue\n   protected Attributes getNameResolverParams() {\n     int defaultPort;\n     switch (negotiationType) {\n@@ -287,6 +299,7 @@ public final class NettyChannelBuilder\n   }\n \n   @VisibleForTesting\n+  @CheckReturnValue\n   static ProtocolNegotiator createProtocolNegotiator(\n       String authority,\n       NegotiationType negotiationType,\n@@ -306,6 +319,7 @@ public final class NettyChannelBuilder\n     return negotiator;\n   }\n \n+  @CheckReturnValue\n   private static ProtocolNegotiator createProtocolNegotiatorByType(\n       String authority,\n       NegotiationType negotiationType,\n@@ -329,11 +343,13 @@ public final class NettyChannelBuilder\n     }\n   }\n \n+  @CheckReturnValue\n   interface OverrideAuthorityChecker {\n     String checkAuthority(String authority);\n   }\n \n   @Override\n+  @CheckReturnValue\n   protected String checkAuthority(String authority) {\n     if (authorityChecker != null) {\n       return authorityChecker.checkAuthority(authority);\n@@ -346,10 +362,12 @@ public final class NettyChannelBuilder\n   }\n \n   interface TransportCreationParamsFilterFactory {\n+    @CheckReturnValue\n     TransportCreationParamsFilter create(\n         SocketAddress targetServerAddress, String authority, @Nullable String userAgent);\n   }\n \n+  @CheckReturnValue\n   interface TransportCreationParamsFilter {\n     SocketAddress getTargetServerAddress();\n \n@@ -363,6 +381,7 @@ public final class NettyChannelBuilder\n   /**\n    * Creates Netty transports. Exposed for internal use, as it should be private.\n    */\n+  @CheckReturnValue\n   private static final class NettyTransportFactory implements ClientTransportFactory {\n     private final TransportCreationParamsFilterFactory transportCreationParamsFilterFactory;\n     private final Class<? extends Channel> channelType;\n@@ -446,6 +465,7 @@ public final class NettyChannelBuilder\n       }\n     }\n \n+    @CheckReturnValue\n     private final class DynamicNettyTransportParams implements TransportCreationParamsFilter {\n \n       private final SocketAddress targetServerAddress;\ndiff --git a/netty/src/main/java/io/grpc/netty/NettyServerBuilder.java b/netty/src/main/java/io/grpc/netty/NettyServerBuilder.java\nindex 3b8739fb1..fae56650d 100644\n--- a/netty/src/main/java/io/grpc/netty/NettyServerBuilder.java\n+++ b/netty/src/main/java/io/grpc/netty/NettyServerBuilder.java\n@@ -35,6 +35,7 @@ import static com.google.common.base.Preconditions.checkArgument;\n import static io.grpc.internal.GrpcUtil.DEFAULT_MAX_MESSAGE_SIZE;\n \n import com.google.common.base.Preconditions;\n+import com.google.errorprone.annotations.CanIgnoreReturnValue;\n import io.grpc.ExperimentalApi;\n import io.grpc.Internal;\n import io.grpc.internal.AbstractServerImplBuilder;\n@@ -46,6 +47,7 @@ import io.netty.handler.ssl.SslContext;\n import java.io.File;\n import java.net.InetSocketAddress;\n import java.net.SocketAddress;\n+import javax.annotation.CheckReturnValue;\n import javax.annotation.Nullable;\n import javax.net.ssl.SSLException;\n \n@@ -53,6 +55,7 @@ import javax.net.ssl.SSLException;\n  * A builder to help simplify the construction of a Netty-based GRPC server.\n  */\n @ExperimentalApi(\"https://github.com/grpc/grpc-java/issues/1784\")\n+@CanIgnoreReturnValue\n public final class NettyServerBuilder extends AbstractServerImplBuilder<NettyServerBuilder> {\n   public static final int DEFAULT_FLOW_CONTROL_WINDOW = 1048576; // 1MiB\n \n@@ -75,6 +78,7 @@ public final class NettyServerBuilder extends AbstractServerImplBuilder<NettySer\n    * @param port the port on which the server is to be bound.\n    * @return the server builder.\n    */\n+  @CheckReturnValue\n   public static NettyServerBuilder forPort(int port) {\n     return new NettyServerBuilder(port);\n   }\n@@ -85,14 +89,17 @@ public final class NettyServerBuilder extends AbstractServerImplBuilder<NettySer\n    * @param address the socket address on which the server is to be bound.\n    * @return the server builder\n    */\n+  @CheckReturnValue\n   public static NettyServerBuilder forAddress(SocketAddress address) {\n     return new NettyServerBuilder(address);\n   }\n \n+  @CheckReturnValue\n   private NettyServerBuilder(int port) {\n     this.address = new InetSocketAddress(port);\n   }\n \n+  @CheckReturnValue\n   private NettyServerBuilder(SocketAddress address) {\n     this.address = address;\n   }\n@@ -221,6 +228,7 @@ public final class NettyServerBuilder extends AbstractServerImplBuilder<NettySer\n   }\n \n   @Override\n+  @CheckReturnValue\n   protected NettyServer buildTransportServer() {\n     ProtocolNegotiator negotiator = protocolNegotiator;\n     if (negotiator == null) {\ndiff --git a/netty/src/main/java/io/grpc/netty/WriteQueue.java b/netty/src/main/java/io/grpc/netty/WriteQueue.java\nindex f909feb83..2b3f77e6c 100644\n--- a/netty/src/main/java/io/grpc/netty/WriteQueue.java\n+++ b/netty/src/main/java/io/grpc/netty/WriteQueue.java\n@@ -33,6 +33,7 @@ package io.grpc.netty;\n \n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.Preconditions;\n+import com.google.errorprone.annotations.CanIgnoreReturnValue;\n import io.netty.channel.Channel;\n import io.netty.channel.ChannelFuture;\n import io.netty.channel.ChannelPromise;\n@@ -87,6 +88,7 @@ class WriteQueue {\n    * @param flush true if a flush of the write should be schedule, false if a later call to\n    *              enqueue will schedule the flush.\n    */\n+  @CanIgnoreReturnValue\n   ChannelFuture enqueue(QueuedCommand command, boolean flush) {\n     return enqueue(command, channel.newPromise(), flush);\n   }\n@@ -99,6 +101,7 @@ class WriteQueue {\n    * @param flush true if a flush of the write should be schedule, false if a later call to\n    *              enqueue will schedule the flush.\n    */\n+  @CanIgnoreReturnValue\n   ChannelFuture enqueue(QueuedCommand command, ChannelPromise promise, boolean flush) {\n     // Detect erroneous code that tries to reuse command objects.\n     Preconditions.checkArgument(command.promise() == null, \"promise must not be set on command\");\ndiff --git a/netty/src/main/java/io/grpc/netty/package-info.java b/netty/src/main/java/io/grpc/netty/package-info.java\nindex da4e374c1..cc7805e07 100644\n--- a/netty/src/main/java/io/grpc/netty/package-info.java\n+++ b/netty/src/main/java/io/grpc/netty/package-info.java\n@@ -33,4 +33,5 @@\n  * The main transport implementation based on <a target=\"_blank\" href=\"http://netty.io\">Netty</a>,\n  * for both the client and the server.\n  */\n+@javax.annotation.CheckReturnValue\n package io.grpc.netty;\ndiff --git a/netty/src/test/java/io/grpc/netty/NettyClientHandlerTest.java b/netty/src/test/java/io/grpc/netty/NettyClientHandlerTest.java\nindex df6260e59..5ccdd90ce 100644\n--- a/netty/src/test/java/io/grpc/netty/NettyClientHandlerTest.java\n+++ b/netty/src/test/java/io/grpc/netty/NettyClientHandlerTest.java\n@@ -60,6 +60,7 @@ import com.google.common.base.Ticker;\n import com.google.common.collect.ImmutableList;\n import com.google.common.io.ByteStreams;\n import com.google.common.util.concurrent.MoreExecutors;\n+import com.google.errorprone.annotations.CanIgnoreReturnValue;\n import io.grpc.Metadata;\n import io.grpc.Status;\n import io.grpc.StatusException;\n@@ -536,6 +537,7 @@ public class NettyClientHandlerTest extends NettyHandlerTestBase<NettyClientHand\n     createStream();\n   }\n \n+  @CanIgnoreReturnValue\n   private ChannelFuture sendPing(PingCallback callback) {\n     return enqueue(new SendPingCommand(callback, MoreExecutors.directExecutor()));\n   }\n@@ -545,11 +547,13 @@ public class NettyClientHandlerTest extends NettyHandlerTestBase<NettyClientHand\n     channelRead(serializedSettings);\n   }\n \n+  @CanIgnoreReturnValue\n   private ChannelFuture createStream() throws Exception {\n     ChannelFuture future = enqueue(new CreateStreamCommand(grpcHeaders, streamTransportState));\n     return future;\n   }\n \n+  @CanIgnoreReturnValue\n   private ChannelFuture cancelStream(Status status) throws Exception {\n     return enqueue(new CancelClientStreamCommand(streamTransportState, status));\n   }\ndiff --git a/netty/src/test/java/io/grpc/netty/NettyClientTransportTest.java b/netty/src/test/java/io/grpc/netty/NettyClientTransportTest.java\nindex e99fa859d..f2b4fc4d8 100644\n--- a/netty/src/test/java/io/grpc/netty/NettyClientTransportTest.java\n+++ b/netty/src/test/java/io/grpc/netty/NettyClientTransportTest.java\n@@ -145,7 +145,7 @@ public class NettyClientTransportTest {\n   public void addDefaultUserAgent() throws Exception {\n     startServer();\n     NettyClientTransport transport = newTransport(newNegotiator());\n-    transport.start(clientTransportListener);\n+    callMeMaybe(transport.start(clientTransportListener));\n \n     // Send a single RPC and wait for the response.\n     new Rpc(transport).halfClose().waitForResponse();\n@@ -169,7 +169,7 @@ public class NettyClientTransportTest {\n         DEFAULT_WINDOW_SIZE, DEFAULT_MAX_MESSAGE_SIZE, GrpcUtil.DEFAULT_MAX_HEADER_LIST_SIZE,\n         authority, null /* user agent */);\n     transports.add(transport);\n-    transport.start(clientTransportListener);\n+    callMeMaybe(transport.start(clientTransportListener));\n \n     // verify SO_LINGER has been set\n     ChannelConfig config = transport.channel().config();\n@@ -182,7 +182,7 @@ public class NettyClientTransportTest {\n     startServer();\n     NettyClientTransport transport = newTransport(newNegotiator(),\n         DEFAULT_MAX_MESSAGE_SIZE, GrpcUtil.DEFAULT_MAX_HEADER_LIST_SIZE, \"testUserAgent\");\n-    transport.start(clientTransportListener);\n+    callMeMaybe(transport.start(clientTransportListener));\n \n     new Rpc(transport, new Metadata()).halfClose().waitForResponse();\n \n@@ -199,7 +199,7 @@ public class NettyClientTransportTest {\n     // Allow the response payloads of up to 1 byte.\n     NettyClientTransport transport = newTransport(newNegotiator(),\n         1, GrpcUtil.DEFAULT_MAX_HEADER_LIST_SIZE, null);\n-    transport.start(clientTransportListener);\n+    callMeMaybe(transport.start(clientTransportListener));\n \n     try {\n       // Send a single RPC and wait for the response.\n@@ -224,7 +224,7 @@ public class NettyClientTransportTest {\n     ProtocolNegotiator negotiator = newNegotiator();\n     for (int index = 0; index < 2; ++index) {\n       NettyClientTransport transport = newTransport(negotiator);\n-      transport.start(clientTransportListener);\n+      callMeMaybe(transport.start(clientTransportListener));\n     }\n \n     // Send a single RPC on each transport.\n@@ -245,7 +245,7 @@ public class NettyClientTransportTest {\n     startServer(1, GrpcUtil.DEFAULT_MAX_HEADER_LIST_SIZE);\n \n     NettyClientTransport transport = newTransport(newNegotiator());\n-    transport.start(clientTransportListener);\n+    callMeMaybe(transport.start(clientTransportListener));\n \n     // Send a dummy RPC in order to ensure that the updated SETTINGS_MAX_CONCURRENT_STREAMS\n     // has been received by the remote endpoint.\n@@ -281,7 +281,7 @@ public class NettyClientTransportTest {\n \n     NettyClientTransport transport =\n         newTransport(newNegotiator(), DEFAULT_MAX_MESSAGE_SIZE, 1, null);\n-    transport.start(clientTransportListener);\n+    callMeMaybe(transport.start(clientTransportListener));\n \n     try {\n       // Send a single RPC and wait for the response.\n@@ -300,7 +300,7 @@ public class NettyClientTransportTest {\n     startServer(100, 1);\n \n     NettyClientTransport transport = newTransport(newNegotiator());\n-    transport.start(clientTransportListener);\n+    callMeMaybe(transport.start(clientTransportListener));\n \n     try {\n       // Send a single RPC and wait for the response.\n@@ -338,7 +338,7 @@ public class NettyClientTransportTest {\n   public void clientStreamGetsAttributes() throws Exception {\n     startServer();\n     NettyClientTransport transport = newTransport(newNegotiator());\n-    transport.start(clientTransportListener);\n+    callMeMaybe(transport.start(clientTransportListener));\n     Rpc rpc = new Rpc(transport).halfClose();\n     rpc.waitForResponse();\n \n@@ -392,6 +392,12 @@ public class NettyClientTransportTest {\n     authority = GrpcUtil.authorityFromHostAndPort(address.getHostString(), address.getPort());\n   }\n \n+  private void callMeMaybe(Runnable r) {\n+    if (r != null) {\n+      r.run();\n+    }\n+  }\n+\n   private static class Rpc {\n     static final String MESSAGE = \"hello\";\n     static final MethodDescriptor<String, String> METHOD =\ndiff --git a/netty/src/test/java/io/grpc/netty/NettyHandlerTestBase.java b/netty/src/test/java/io/grpc/netty/NettyHandlerTestBase.java\nindex 8a82c38b0..a16db1413 100644\n--- a/netty/src/test/java/io/grpc/netty/NettyHandlerTestBase.java\n+++ b/netty/src/test/java/io/grpc/netty/NettyHandlerTestBase.java\n@@ -39,6 +39,7 @@ import static org.mockito.Mockito.spy;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import com.google.errorprone.annotations.CanIgnoreReturnValue;\n import io.grpc.internal.MessageFramer;\n import io.grpc.internal.StatsTraceContext;\n import io.grpc.internal.WritableBuffer;\n@@ -221,6 +222,7 @@ public abstract class NettyHandlerTestBase<T extends Http2ConnectionHandler> {\n     return handler().connection();\n   }\n \n+  @CanIgnoreReturnValue\n   protected final ChannelFuture enqueue(WriteQueue.QueuedCommand command) {\n     ChannelFuture future = writeQueue.enqueue(command, newPromise(), true);\n     channel.runPendingTasks();",
    "Disable language server tests temporarily": "diff --git a/language-server/modules/langserver-compiler/src/test/resources/testng.xml b/language-server/modules/langserver-compiler/src/test/resources/testng.xml\nindex b673d226d12..e6d67a90c3a 100644\n--- a/language-server/modules/langserver-compiler/src/test/resources/testng.xml\n+++ b/language-server/modules/langserver-compiler/src/test/resources/testng.xml\n@@ -27,7 +27,7 @@ under the License.\n             </run>\n         </groups>\n         <packages>\n-            <package name=\"org.ballerinalang.langserver.compiler.*\"/>\n+            <!--<package name=\"org.ballerinalang.langserver.compiler.*\"/>-->\n         </packages>\n     </test>\n </suite>\ndiff --git a/language-server/modules/langserver-core/pom.xml b/language-server/modules/langserver-core/pom.xml\nindex f68a8c1f8bb..8e3d9514eb6 100644\n--- a/language-server/modules/langserver-core/pom.xml\n+++ b/language-server/modules/langserver-core/pom.xml\n@@ -114,6 +114,14 @@\n             <type>zip</type>\n             <classifier>ballerina-binary-repo</classifier>\n         </dependency>\n+        <dependency>\n+            <groupId>com.fasterxml.jackson.core</groupId>\n+            <artifactId>jackson-databind</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.fasterxml.jackson.dataformat</groupId>\n+            <artifactId>jackson-dataformat-yaml</artifactId>\n+        </dependency>\n     </dependencies>\n \n     <build>\ndiff --git a/language-server/modules/langserver-core/spotbugs-exclude.xml b/language-server/modules/langserver-core/spotbugs-exclude.xml\nindex 89d0595ddda..3ecf338c9c0 100644\n--- a/language-server/modules/langserver-core/spotbugs-exclude.xml\n+++ b/language-server/modules/langserver-core/spotbugs-exclude.xml\n@@ -76,4 +76,10 @@\n             <Bug pattern=\"RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\" />\n         </OR>\n     </Match>\n+    <Match>\n+        <Class name=\"org.ballerinalang.langserver.extensions.ballerina.document.BallerinaDocumentServiceImpl\" />\n+    </Match>\n+    <Match>\n+        <Class name=\"org.ballerinalang.langserver.extensions.ballerina.document.BallerinaServiceListResponse\" />\n+    </Match>\n </FindBugsFilter>\n\\ No newline at end of file\ndiff --git a/language-server/modules/langserver-core/src/test/resources/testng.xml b/language-server/modules/langserver-core/src/test/resources/testng.xml\nindex 34999820466..e6630d827f2 100644\n--- a/language-server/modules/langserver-core/src/test/resources/testng.xml\n+++ b/language-server/modules/langserver-core/src/test/resources/testng.xml\n@@ -27,7 +27,7 @@ under the License.\n             </run>\n         </groups>\n         <packages>\n-            <package name=\"org.ballerinalang.langserver.*\"/>\n+            <!--<package name=\"org.ballerinalang.langserver.*\"/>-->\n         </packages>\n     </test>\n </suite>",
    "Handle refvalue in else block": "diff --git a/bvm/ballerina-core/src/main/java/org/ballerinalang/model/values/BValueArray.java b/bvm/ballerina-core/src/main/java/org/ballerinalang/model/values/BValueArray.java\nindex 58eb9fe6be7..f3428239ddc 100644\n--- a/bvm/ballerina-core/src/main/java/org/ballerinalang/model/values/BValueArray.java\n+++ b/bvm/ballerina-core/src/main/java/org/ballerinalang/model/values/BValueArray.java\n@@ -167,6 +167,9 @@ public class BValueArray extends BNewArray implements Serializable {\n         } else if (type.getTag() == TypeTags.STRING_TAG) {\n             stringValues = (String[]) newArrayInstance(String.class);\n             Arrays.fill(stringValues, BLangConstants.STRING_EMPTY_VALUE);\n+        } else {\n+            refValues = (BRefType[]) newArrayInstance(BRefType.class);\n+            Arrays.fill(refValues, type.getZeroValue());\n         }\n \n         super.arrayType = new BArrayType(type, size);",
    "Add section .": "diff --git a/xdocs/changes.xml b/xdocs/changes.xml\nindex a47baf5e71..8975cae401 100644\n--- a/xdocs/changes.xml\n+++ b/xdocs/changes.xml\n@@ -81,6 +81,8 @@ citizen in JMeter, you can now test your expressions very easily</h4>\n <figure width=\"573\" height=\"444\" image=\"changes/2.10/06_http_request_delete_method.png\"></figure>\n </p>\n \n+<h4>* Best-practices section has been improved, ensure you read it to get the most out of JMeter</h4>\n+\n <h3><u>GUI and ergonomy Improvements:</u></h3>\n \n ",
    "Removed unused font": "diff --git a/omniNotes/src/main/assets/fonts/AndroidClockMono-Thin.ttf b/omniNotes/src/main/assets/fonts/AndroidClockMono-Thin.ttf\ndeleted file mode 100644\nindex 188d4c08..00000000\nBinary files a/omniNotes/src/main/assets/fonts/AndroidClockMono-Thin.ttf and /dev/null differ",
    "Make cpu time tracking in OperatorStats configurable with .": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java b/presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java\nindex 493ceffa29..1192b3b75f 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java\n@@ -46,6 +46,20 @@ public class QueryManagerConfig\n     private int remoteTaskMaxConsecutiveErrorCount = 10;\n     private Duration remoteTaskMinErrorDuration = new Duration(2, TimeUnit.MINUTES);\n \n+    private boolean taskCpuTimerEnabled = true;\n+\n+    public boolean isTaskCpuTimerEnabled()\n+    {\n+        return taskCpuTimerEnabled;\n+    }\n+\n+    @Config(\"task.cpu-timer-enabled\")\n+    public QueryManagerConfig setTaskCpuTimerEnabled(boolean taskCpuTimerEnabled)\n+    {\n+        this.taskCpuTimerEnabled = taskCpuTimerEnabled;\n+        return this;\n+    }\n+\n     public boolean isCoordinator()\n     {\n         return coordinator;\ndiff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\nindex de1800365f..8474ea1a13 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\n@@ -118,7 +118,8 @@ public class SqlTaskExecution\n             ExecutorService notificationExecutor,\n             DataSize maxTaskMemoryUsage,\n             DataSize operatorPreAllocatedMemory,\n-            QueryMonitor queryMonitor)\n+            QueryMonitor queryMonitor,\n+            boolean cpuTimerEnabled)\n     {\n         SqlTaskExecution task = new SqlTaskExecution(session,\n                 taskId,\n@@ -130,7 +131,8 @@ public class SqlTaskExecution\n                 maxTaskMemoryUsage,\n                 operatorPreAllocatedMemory,\n                 queryMonitor,\n-                notificationExecutor\n+                notificationExecutor,\n+                cpuTimerEnabled\n         );\n \n         try (SetThreadName setThreadName = new SetThreadName(\"Task-%s\", taskId)) {\n@@ -149,7 +151,8 @@ public class SqlTaskExecution\n             DataSize maxTaskMemoryUsage,\n             DataSize operatorPreAllocatedMemory,\n             QueryMonitor queryMonitor,\n-            Executor notificationExecutor)\n+            Executor notificationExecutor,\n+            boolean cpuTimerEnabled)\n     {\n         try (SetThreadName setThreadName = new SetThreadName(\"Task-%s\", taskId)) {\n             this.taskId = checkNotNull(taskId, \"taskId is null\");\n@@ -173,7 +176,7 @@ public class SqlTaskExecution\n                     session,\n                     checkNotNull(maxTaskMemoryUsage, \"maxTaskMemoryUsage is null\"),\n                     checkNotNull(operatorPreAllocatedMemory, \"operatorPreAllocatedMemory is null\"),\n-                    true);\n+                    cpuTimerEnabled);\n \n             this.sharedBuffer = new SharedBuffer(checkNotNull(maxBufferSize, \"maxBufferSize is null\"));\n \ndiff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskManager.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskManager.java\nindex 763c912387..7f8ee8b240 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskManager.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskManager.java\n@@ -80,6 +80,7 @@ public class SqlTaskManager\n     private final DataSize operatorPreAllocatedMemory;\n     private final Duration infoCacheTime;\n     private final Duration clientTimeout;\n+    private final boolean cpuTimerEnabled;\n \n     private final ConcurrentMap<TaskId, TaskInfo> taskInfos = new ConcurrentHashMap<>();\n     private final ConcurrentMap<TaskId, TaskExecution> tasks = new ConcurrentHashMap<>();\n@@ -115,6 +116,7 @@ public class SqlTaskManager\n         this.operatorPreAllocatedMemory = config.getOperatorPreAllocatedMemory();\n         this.infoCacheTime = config.getInfoMaxAge();\n         this.clientTimeout = config.getClientTimeout();\n+        this.cpuTimerEnabled = config.isTaskCpuTimerEnabled();\n \n         taskNotificationExecutor = Executors.newCachedThreadPool(threadsNamed(\"task-notification-%d\"));\n         taskNotificationExecutorMBean = new ThreadPoolExecutorMBean((ThreadPoolExecutor) taskNotificationExecutor);\n@@ -304,7 +306,8 @@ public class SqlTaskManager\n                         taskNotificationExecutor,\n                         maxTaskMemoryUsage,\n                         operatorPreAllocatedMemory,\n-                        queryMonitor\n+                        queryMonitor,\n+                        cpuTimerEnabled\n                 );\n                 tasks.put(taskId, taskExecution);\n             }\n@@ -389,7 +392,7 @@ public class SqlTaskManager\n ",
    "Implement Handler # removeCallbacks": "diff --git a/src/main/java/com/xtremelabs/robolectric/shadows/ShadowHandler.java b/src/main/java/com/xtremelabs/robolectric/shadows/ShadowHandler.java\nindex edc74343d..4c00d9727 100644\n--- a/src/main/java/com/xtremelabs/robolectric/shadows/ShadowHandler.java\n+++ b/src/main/java/com/xtremelabs/robolectric/shadows/ShadowHandler.java\n@@ -18,7 +18,8 @@ import static com.xtremelabs.robolectric.Robolectric.shadowOf;\n @SuppressWarnings({\"UnusedDeclaration\"})\n @Implements(Handler.class)\n public class ShadowHandler {\n-    @RealObject private Handler realHandler;\n+    @RealObject\n+    private Handler realHandler;\n \n     private Looper looper = Looper.myLooper();\n \n@@ -67,6 +68,16 @@ public class ShadowHandler {\n         return sendMessage(msg);\n     }\n \n+    @Implementation\n+    public final Looper getLooper() {\n+        return looper;\n+    }\n+\n+    @Implementation\n+    public final void removeCallbacks(java.lang.Runnable r) {\n+        shadowOf(looper).getScheduler().remove(r);\n+    }\n+\n     /**\n      * @deprecated use {@link #idleMainLooper()} instead\n      */\ndiff --git a/src/main/java/com/xtremelabs/robolectric/util/Scheduler.java b/src/main/java/com/xtremelabs/robolectric/util/Scheduler.java\nindex 81c3dd902..548ce6ede 100644\n--- a/src/main/java/com/xtremelabs/robolectric/util/Scheduler.java\n+++ b/src/main/java/com/xtremelabs/robolectric/util/Scheduler.java\n@@ -3,6 +3,7 @@ package com.xtremelabs.robolectric.util;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n+import java.util.ListIterator;\n \n public class Scheduler {\n     private List<PostedRunnable> postedRunnables = new ArrayList<PostedRunnable>();\n@@ -36,6 +37,16 @@ public class Scheduler {\n         postDelayed(runnable, 0);\n     }\n \n+    public void remove(Runnable runnable) {\n+        ListIterator<PostedRunnable> iterator = postedRunnables.listIterator();\n+        while (iterator.hasNext()) {\n+            PostedRunnable next = iterator.next();\n+            if (next.runnable == runnable) {\n+                iterator.remove();\n+            }\n+        }\n+    }\n+\n     public boolean advanceToLastPostedRunnable() {\n         if (enqueuedTaskCount() < 1) {\n             return false;\ndiff --git a/src/test/java/com/xtremelabs/robolectric/shadows/HandlerTest.java b/src/test/java/com/xtremelabs/robolectric/shadows/HandlerTest.java\nindex abfaa309c..31161c040 100644\n--- a/src/test/java/com/xtremelabs/robolectric/shadows/HandlerTest.java\n+++ b/src/test/java/com/xtremelabs/robolectric/shadows/HandlerTest.java\n@@ -95,6 +95,19 @@ public class HandlerTest {\n         assertThat(scratchRunnable.wasRun, equalTo(true));\n     }\n \n+    @Test\n+    public void testRemoveCallbacks() throws Exception {\n+        Handler handler = new Handler();\n+        ShadowLooper shadowLooper = shadowOf(handler.getLooper());\n+        shadowLooper.pause();\n+        handler.post(scratchRunnable);\n+        handler.removeCallbacks(scratchRunnable);\n+\n+        shadowLooper.unPause();\n+\n+        assertThat(scratchRunnable.wasRun, equalTo(false));\n+    }\n+\n     @Test\n     public void testPostDelayedThenRunMainLooperToNextTask_shouldRunOneTask() throws Exception {\n         new Handler().postDelayed(scratchRunnable, 1);\n@@ -146,9 +159,9 @@ public class HandlerTest {\n \n     @Test\n     public void sendEmptyMessageHandler() {\n-        \n+\n         final Handler handler = new Handler(new Handler.Callback() {\n-            \n+\n             @Override\n             public boolean handleMessage(Message message) {\n                 throw new UnsupportedOperationException(\"Method not implemented\");\ndiff --git a/src/test/java/com/xtremelabs/robolectric/shadows/LooperTest.java b/src/test/java/com/xtremelabs/robolectric/shadows/LooperTest.java\nindex 4de9e526e..25664afb0 100644\n--- a/src/test/java/com/xtremelabs/robolectric/shadows/LooperTest.java\n+++ b/src/test/java/com/xtremelabs/robolectric/shadows/LooperTest.java\n@@ -2,7 +2,6 @@ package com.xtremelabs.robolectric.shadows;\n \n import android.os.Handler;\n import android.os.Looper;\n-import com.xtremelabs.robolectric.Robolectric;\n import com.xtremelabs.robolectric.WithTestDefaultsRunner;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n@@ -21,7 +20,7 @@ public class LooperTest {\n \n     @Test\n     public void idleMainLooper_executesScheduledTasks() {\n-        final boolean[] wasRun = new boolean[] {false};\n+        final boolean[] wasRun = new boolean[]{false};\n         new Handler().postDelayed(new Runnable() {\n             @Override\n             public void run() {\ndiff --git a/src/test/java/com/xtremelabs/robolectric/util/SchedulerTest.java b/src/test/java/com/xtremelabs/robolectric/util/SchedulerTest.java\nindex 89675ccb0..2ecda5ef5 100644\n--- a/src/test/java/com/xtremelabs/robolectric/util/SchedulerTest.java\n+++ b/src/test/java/com/xtremelabs/robolectric/util/SchedulerTest.java\n@@ -81,6 +81,19 @@ public class SchedulerTest {\n         transcript.assertEventsSoFar(\"three\");\n     }\n \n+    @Test\n+    public void removeShouldRemoveAllInstancesOfRunnableFromQueue() throws Exception {\n+        scheduler.post(new TestRunnable());\n+        TestRunnable runnable = new TestRunnable();\n+        scheduler.post(runnable);\n+        scheduler.post(runnable);\n+        assertThat(scheduler.enqueuedTaskCount(), equalTo(3));\n+        scheduler.remove(runnable);\n+        assertThat(scheduler.enqueuedTaskCount(), equalTo(1));\n+        scheduler.advanceToLastPostedRunnable();\n+        assertThat(runnable.wasRun, equalTo(false));\n+    }\n+\n     @Test\n     public void resetShouldUnPause() throws Exception {\n         scheduler.pause();",
    "removed opengl multi - sampling constants": "diff --git a/core/src/processing/core/PConstants.java b/core/src/processing/core/PConstants.java\nindex 46f5682a7..5d19fbec4 100644\n--- a/core/src/processing/core/PConstants.java\n+++ b/core/src/processing/core/PConstants.java\n@@ -531,9 +531,9 @@ public interface PConstants {\n   // hints - hint values are positive for the alternate version,\n   // negative of the same value returns to the normal/default state\n \n-  static final int DISABLE_OPENGL_2X_SMOOTH    =  1;\n-  static final int ENABLE_OPENGL_2X_SMOOTH     = -1;\n-  static final int ENABLE_OPENGL_4X_SMOOTH     =  2;\n+//  static final int DISABLE_OPENGL_2X_SMOOTH    =  1;\n+//  static final int ENABLE_OPENGL_2X_SMOOTH     = -1;\n+//  static final int ENABLE_OPENGL_4X_SMOOTH     =  2;\n \n   static final int ENABLE_NATIVE_FONTS         =  3;\n   static final int DISABLE_NATIVE_FONTS         = -3;",
    "include value from interaction in search results .": "diff --git a/htroot/Triple_p.html b/htroot/Triple_p.html\nindex f00d2cfa4..0765ebd0f 100644\n--- a/htroot/Triple_p.html\n+++ b/htroot/Triple_p.html\n@@ -63,6 +63,15 @@\n \t<h2>Query</h2>\r\n \t<form action=\"Triple_p.html\" method=\"post\" enctype=\"multipart/form-data\">\r\n     \r\n+    <textarea name=\"query\" cols=\"100\" rows=\"10\">\r\n+    #[query]#\r\n+    </textarea>\r\n+\r\n+\t<input type=\"submit\" value=\"Query\" />\r\n+\t\r\n+\t</form>\r\n+\t<form action=\"Triple_p.csv\" method=\"post\" enctype=\"multipart/form-data\">\r\n+    \r\n     <textarea name=\"query\" cols=\"100\" rows=\"10\">\r\n     #[query]#\r\n     </textarea>\r\ndiff --git a/htroot/Triple_p.java b/htroot/Triple_p.java\nindex 2662cbf28..c50df2067 100644\n--- a/htroot/Triple_p.java\n+++ b/htroot/Triple_p.java\n@@ -40,13 +40,13 @@ public class Triple_p {\n \t\tprop.put(\"display\", 1); // Fixed to 1\n \t\tprop.putHTML(\"mode_output\", \"no query performed\");\n \t\t\n-\t\tString q = \"PREFIX lln: <http://virtual.liebel-lab.org/n#>\\n\"+\n+\t\tString q = \"PREFIX lln: <http://virtual.x/>\\n\"+\n \"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n\"+\n \"PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\\n\"+\n \"SELECT ?resource ?pa\\n\"+\n \"WHERE {\\n\"+\n-\t\"?resource lln:percentageofarea ?pa .\\n\"+\n-\"FILTER (xsd:float (?pa) > 3.000)\\n\"+\n+\t\"?resource lln:hasvalue ?pa .\\n\"+\n+\"FILTER (xsd:float (?pa) > 21.000)\\n\"+\n \"}\";\n \n \t\tif (post != null) {\n@@ -106,17 +106,29 @@ public class Triple_p {\n \n \t\t\t\t\tprop.putHTML(\"mode_rdfdump\", sos.toString());\n \t\t\t\t\t\n-\n+\t\t\t\t\tint scount = 0;\n+\t\t\t\t\twhile (resultSet.hasNext()) {\n+\t\t\t\t\t\tQuerySolution s = resultSet.next();\n+\t\t\t\t\t\tprop.put(\"entries_\"+scount+\"_s\", s.getResource(null).getURI());\n+\t\t\t\t\t\tprop.put(\"entries_\"+scount+\"_p\", s.getResource(null).getURI());\n+\t\t\t\t\t\tprop.put(\"entries_\"+scount+\"_o\", s.getResource(null).getURI());\n+\t\t\t\t\t\tscount ++;\n+\t\t\t\t\t}\n \t\t\t\t\t\n+\t\t\t\t\tprop.putHTML(\"entries\", \"\"+scount);\n \t\t\t\t\t\n \t\t\t\t\tfor (String s: resultSet.getResultVars()) {\n \t\t\t\t\t\t\n \t\t\t\t\t\tprop.putHTML(\"mode_output_\"+count+\"_caption\", s);\n \t\t\t\t\t\tcount ++;\n \t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\n+\t\t\t\t\t\n \t\t\t\t\t } catch (Exception e) {\n \t\t\t\t\t\t prop.putHTML(\"mode_rdfdump\", \"error\");\n \t\t\t\t\t }\n+\t\t\t\t\t \n+\t\t\t\t\t \n \t\t\t\t\t\t\t\t\t\n \t\t\t\t\tprop.putHTML(\"mode_output\", \"\"+count);\n \ndiff --git a/htroot/interaction/OverlayInteraction.html b/htroot/interaction/OverlayInteraction.html\nindex da7dee359..d3fea7278 100644\n--- a/htroot/interaction/OverlayInteraction.html\n+++ b/htroot/interaction/OverlayInteraction.html\n@@ -52,9 +52,32 @@ border-bottom: 1px solid #ffffff;\n \n </div>\n \n-<div id=\"sidebar-document\" class=\"sci_panel\" style=\"top: 110px;\">\n+<!-- <div id=\"sidebar-document\" class=\"sci_panel\" style=\"top: 110px;\">\n \n-<p>document</p> <img src=\"/currentyacypeer/env/grafics/bad.png\" onclick=\"contribution (document.location.href, 'like document', '#[username]#'); return false\">\n+document <img src=\"/currentyacypeer/env/grafics/bad.png\" width=\"16px\" height=\"16px\" onclick=\"contribution (document.location.href, 'like document', '#[username]#'); return false\">\n+\n+</div> -->\n+\n+<div id=\"sidebar-element\" class=\"sci_panel\" style=\"top: 110px;\">\n+\n+<input id=\"SliderSingle\" type=\"slider\" name=\"price\" value=\"20\" />\n+\n+<script type=\"text/javascript\" charset=\"utf-8\">\n+\t$(\"#SliderSingle\").slider(\n+\t\t{\n+\t\t\tfrom: 0,\n+\t\t\tto: 100,\n+\t\t\tstep: 2.5,\n+\t\t\tround: 1,\n+\t\t\tformat: { format: '##.0', locale: 'de'},\n+\t\t\tdimension: '&nbsp;',\n+\t\t\tskin: 'round',\n+\t\t\tonstatechange: function(value) {\n+\t\t\t\ttriple ('#[link]#', '#[link]#', 'http://virtual.x/hasvalue', value, '#[username]#');\n+\t\t\t\t}\n+\t\t}\n+\t);\n+</script>\n \n </div>\n \ndiff --git a/htroot/yacysearchitem.html b/htroot/yacysearchitem.html\nindex de0086832..82e425ed1 100644\n--- a/htroot/yacysearchitem.html\n+++ b/htroot/yacysearchitem.html\n@@ -2,7 +2,7 @@\n   <div class=\"searchresults\">\n   <h4 class=\"linktitle\">\n   <img width=\"16\" height=\"16\" src=\"ViewImage.png?width=16&amp;height=16&amp;code=#[faviconCode]#\" id=\"f#[urlhash]#\" class=\"favicon\" style=\"width:16px; height:16px;\" alt=\"\" />\n-  <a href=\"#[link]#\" target=\"#[target]#\">#[title]#</a></h4>\n+  <a href=\"#[link]#\" target=\"#[target]#\">#[title]#</a> #[value]#</h4>\n   <div class=\"urlactions\">\n     #(heuristic)#::\n     <img width=\"16\" height=\"9\" src=\"/env/grafics/heuristic_redundant.gif\" title=\"heuristic:#[name]# (redundant)\" style=\"width:16px; height:9px;\" alt=\"heuristic:#[name]# (redundant)\"/>::\ndiff --git a/htroot/yacysearchitem.java b/htroot/yacysearchitem.java\nindex 9604d2a5e..3c0f4d665 100644\n--- a/htroot/yacysearchitem.java\n+++ b/htroot/yacysearchitem.java\n@@ -34,6 +34,7 @@ import net.yacy.cora.document.Classification.ContentDomain;\n import net.yacy.cora.protocol.HeaderFramework;\n import net.yacy.cora.protocol.RequestHeader;\n import net.yacy.cora.protocol.RequestHeader.FileType;\n+import net.yacy.interaction.Interaction;\n import net.yacy.kelondro.data.meta.DigestURI;\n import net.yacy.kelondro.logging.Log;\n import net.yacy.kelondro.util.Formatter;\n@@ -141,8 +142,44 @@ public class yacysearchitem {\n             prop.putHTML(\"content_title\", result.title());\n             prop.putXML(\"content_title-xml\", result.title());\n             prop.putJSON(\"content_title-json\", result.title());\n-            prop.putHTML(\"content_link\", resultUrlstring);\n             prop.putHTML(\"content_showPictures_link\", resultUrlstring);\n+            //prop.putHTML(\"content_link\", resultUrlstring);\n+\n+// START interaction\n+            String modifyURL = resultUrlstring;\n+\t\t\tif (sb.getConfigBool(\"proxyURL.useforresults\", false)) {\n+\t\t\t\t// check if url is allowed to view\n+\t\t\t\tif (sb.getConfig(\"proxyURL.rewriteURLs\", \"all\").equals(\"all\")) {\n+\t\t\t\t\tmodifyURL = \"./proxy.html?url=\"+modifyURL;\n+\t\t\t\t}\n+\n+\t\t\t\t// check if url is allowed to view\n+\t\t\t\tif (sb.getConfig(\"proxyURL.rewriteURLs\", \"all\").equals(\"domainlist\")) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tif (sb.crawlStacker.urlInAcceptedDomain(new DigestURI (modifyURL)) == null) {\n+\t\t\t\t\t\t\tmodifyURL = \"./proxy.html?url=\"+modifyURL;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} catch (MalformedURLException e) {\n+\t\t\t\t\t\t// TODO Auto-generated catch block\n+\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\tif (sb.getConfig(\"proxyURL.rewriteURLs\", \"all\").equals(\"yacy\")) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tif ((new DigestURI (modifyURL).getHost().endsWith(\".yacy\"))) {\n+\t\t\t\t\t\t\tmodifyURL = \"./proxy.html?url=\"+modifyURL;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} catch (MalformedURLException e) {\n+\t\t\t\t\t\t// TODO Auto-generated catch block\n+\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+            prop.putHTML(\"content_link\", modifyURL);\n+            prop.putHTML(\"content_value\", Interaction.getTriple(result.urlstring(), \"http://virtual.x/hasvalue\"));\n+// END interaction\n+\n             prop.putHTML(\"content_target\", target);\n             if (faviconURL != null && fileType == FileType.HTML) sb.loader.loadIfNotExistBackground(faviconURL, 1024 * 1024 * 10);\n             prop.putHTML(\"content_faviconCode\", sb.licensedURLs.aquireLicense(faviconURL)); // acquire license for favicon url loading\ndiff --git a/source/net/yacy/interaction/Interaction.java b/source/net/yacy/interaction/Interaction.java\nindex 285537b50..6bdf0b117 100644\n--- a/source/net/yacy/interaction/Interaction.java\n+++ b/source/net/yacy/interaction/Interaction.java\n@@ -463,6 +463,23 @@ public static String Triple(String url, String s, String p, String o, String fro\n \treturn \"\";    \r\n }\r\n \r\n+public static String getTriple(String s, String p) {\r\n+\r\n+\tfinal Switchboard sb = Switchboard.getSwitchboard();\r\n+\r\n+\tResource r = TripleStore.model.getResource(s);\r\n+\tProperty pr = TripleStore.model.getProperty(p);\r\n+\t\r\n+\tStmtIterator iter = TripleStore.model.listStatements(r, pr, (Resource) null);\r\n+\t\r\n+\twhile (iter.hasNext()) {\r\n+\t\treturn (iter.nextStatement().getObject().toString());\r\n+\t}\r\n+\t\r\n+\treturn \"\";\r\n+ \r\n+}\r\n+\r\n public static String GetContribution(String url) {\r\n \t\r\n \tfinal Switchboard sb = Switchboard.getSwitchboard();\r",
    "Fix some exceptions in block service handler .": "diff --git a/servers/src/main/java/tachyon/worker/block/BlockLockManager.java b/servers/src/main/java/tachyon/worker/block/BlockLockManager.java\nindex 5f68466571..88f4e7123c 100644\n--- a/servers/src/main/java/tachyon/worker/block/BlockLockManager.java\n+++ b/servers/src/main/java/tachyon/worker/block/BlockLockManager.java\n@@ -4,9 +4,9 @@\n  * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n  * copy of the License at\n- * \n+ *\n  * http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software distributed under the License\n  * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n  * or implied. See the License for the specific language governing permissions and limitations under\ndiff --git a/servers/src/main/java/tachyon/worker/block/BlockServiceHandler.java b/servers/src/main/java/tachyon/worker/block/BlockServiceHandler.java\nindex de28f47c74..b30f7fdfdc 100644\n--- a/servers/src/main/java/tachyon/worker/block/BlockServiceHandler.java\n+++ b/servers/src/main/java/tachyon/worker/block/BlockServiceHandler.java\n@@ -22,6 +22,7 @@ import org.apache.thrift.TException;\n \n import tachyon.Users;\n import tachyon.thrift.FileAlreadyExistException;\n+import tachyon.thrift.FileDoesNotExistException;\n import tachyon.thrift.OutOfSpaceException;\n import tachyon.thrift.TachyonException;\n import tachyon.thrift.WorkerService;\n@@ -233,7 +234,7 @@ public class BlockServiceHandler implements WorkerService.Iface {\n       long lockId = mWorker.lockBlock(userId, blockId);\n       return mWorker.readBlock(userId, blockId, lockId);\n     } catch (IOException ioe) {\n-      throw new TException(ioe);\n+      throw new FileDoesNotExistException(\"Block \" + blockId + \" does not exist on this worker.\");\n     }\n   }\n \n@@ -273,7 +274,7 @@ public class BlockServiceHandler implements WorkerService.Iface {\n       // TODO: Maybe add a constant for anyTier?\n       return mWorker.createBlock(userId, blockId, 1, initialBytes);\n     } catch (IOException ioe) {\n-      throw new TException(ioe);\n+      throw new OutOfSpaceException(\"Failed to allocate \" + initialBytes + \" for user \" + userId);\n     }\n   }\n \n@@ -291,7 +292,7 @@ public class BlockServiceHandler implements WorkerService.Iface {\n       mWorker.requestSpace(userId, blockId, requestBytes);\n       return true;\n     } catch (IOException ioe) {\n-      throw new TException(ioe);\n+      return false;\n     }\n   }\n \ndiff --git a/servers/src/main/java/tachyon/worker/block/meta/StorageDir.java b/servers/src/main/java/tachyon/worker/block/meta/StorageDir.java\nindex 0bc0c67f70..b829aab743 100644\n--- a/servers/src/main/java/tachyon/worker/block/meta/StorageDir.java\n+++ b/servers/src/main/java/tachyon/worker/block/meta/StorageDir.java\n@@ -4,9 +4,9 @@\n  * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n  * copy of the License at\n- * \n+ *\n  * http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software distributed under the License\n  * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n  * or implied. See the License for the specific language governing permissions and limitations under\n@@ -257,6 +257,7 @@ public class StorageDir {\n           mUserIdToTempBlockIdsMap.remove(userId);\n         }\n         reclaimSpace(tempBlockMeta.getBlockSize());\n+        return;\n       }\n     }\n     throw new IOException(\"Failed to remove TempBlockMeta: No owner userId associated\");",
    "Add popup in case the utxo balance does not match the bsq balance": "diff --git a/core/src/main/java/bisq/core/dao/monitoring/DaoStateMonitoringService.java b/core/src/main/java/bisq/core/dao/monitoring/DaoStateMonitoringService.java\nindex f99d7ea355..5abf862979 100644\n--- a/core/src/main/java/bisq/core/dao/monitoring/DaoStateMonitoringService.java\n+++ b/core/src/main/java/bisq/core/dao/monitoring/DaoStateMonitoringService.java\n@@ -20,6 +20,7 @@ package bisq.core.dao.monitoring;\n import bisq.core.dao.DaoSetupService;\n import bisq.core.dao.monitoring.model.DaoStateBlock;\n import bisq.core.dao.monitoring.model.DaoStateHash;\n+import bisq.core.dao.monitoring.model.UtxoMismatch;\n import bisq.core.dao.monitoring.network.DaoStateNetworkService;\n import bisq.core.dao.monitoring.network.messages.GetDaoStateHashesRequest;\n import bisq.core.dao.monitoring.network.messages.NewDaoStateHashMessage;\n@@ -40,6 +41,9 @@ import javax.inject.Inject;\n \n import org.apache.commons.lang3.ArrayUtils;\n \n+import javafx.collections.FXCollections;\n+import javafx.collections.ObservableList;\n+\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Optional;\n@@ -88,6 +92,8 @@ public class DaoStateMonitoringService implements DaoSetupService, DaoStateListe\n     private boolean parseBlockChainComplete;\n     @Getter\n     private boolean isInConflict;\n+    @Getter\n+    private ObservableList<UtxoMismatch> utxoMismatches = FXCollections.observableArrayList();\n \n \n     ///////////////////////////////////////////////////////////////////////////////////////////\n@@ -142,13 +148,13 @@ public class DaoStateMonitoringService implements DaoSetupService, DaoStateListe\n         long totalBurntFee = daoStateService.getTotalBurntFee();\n         long compensationIssuance = daoStateService.getTotalIssuedAmount(IssuanceType.COMPENSATION);\n         long reimbursementIssuance = daoStateService.getTotalIssuedAmount(IssuanceType.REIMBURSEMENT);\n-        long totalConfiscatedAmount = daoStateService.getTotalAmountOfConfiscatedTxOutputs();\n+        long totalInvalidAmount = daoStateService.getBurnedBsqOfAllInvalidTxs();\n         // confiscated funds are still in the utxo set\n         long sumUtxo = daoStateService.getUnspentTxOutputMap().values().stream().mapToLong(BaseTxOutput::getValue).sum();\n-        long sumBsq = genesisTotalSupply + compensationIssuance + reimbursementIssuance - totalBurntFee;\n+        long sumBsq = genesisTotalSupply + compensationIssuance + reimbursementIssuance - totalBurntFee - totalInvalidAmount;\n \n         if (sumBsq != sumUtxo) {\n-            throw new RuntimeException(\"There is a mismatch between the UTXO set and the DAO state. Please contact the Bisq devlopers.\");\n+            utxoMismatches.add(new UtxoMismatch(block.getHeight(), sumUtxo, sumBsq));\n         }\n     }\n \ndiff --git a/core/src/main/java/bisq/core/dao/monitoring/model/UtxoMismatch.java b/core/src/main/java/bisq/core/dao/monitoring/model/UtxoMismatch.java\nnew file mode 100644\nindex 0000000000..1509023c92\n--- /dev/null\n+++ b/core/src/main/java/bisq/core/dao/monitoring/model/UtxoMismatch.java\n@@ -0,0 +1,33 @@\n+/*\n+ * This file is part of Bisq.\n+ *\n+ * Bisq is free software: you can redistribute it and/or modify it\n+ * under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or (at\n+ * your option) any later version.\n+ *\n+ * Bisq is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n+ * License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with Bisq. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package bisq.core.dao.monitoring.model;\n+\n+import lombok.Value;\n+\n+@Value\n+public class UtxoMismatch {\n+    private final int height;\n+    private final long sumUtxo;\n+    private final long sumBsq;\n+\n+    public UtxoMismatch(int height, long sumUtxo, long sumBsq) {\n+        this.height = height;\n+        this.sumUtxo = sumUtxo;\n+        this.sumBsq = sumBsq;\n+    }\n+}\ndiff --git a/desktop/src/main/java/bisq/desktop/main/dao/monitor/daostate/DaoStateMonitorView.java b/desktop/src/main/java/bisq/desktop/main/dao/monitor/daostate/DaoStateMonitorView.java\nindex e5b9cb79d1..722a44684f 100644\n--- a/desktop/src/main/java/bisq/desktop/main/dao/monitor/daostate/DaoStateMonitorView.java\n+++ b/desktop/src/main/java/bisq/desktop/main/dao/monitor/daostate/DaoStateMonitorView.java\n@@ -19,6 +19,7 @@ package bisq.desktop.main.dao.monitor.daostate;\n \n import bisq.desktop.common.view.FxmlView;\n import bisq.desktop.main.dao.monitor.StateMonitorView;\n+import bisq.desktop.main.overlays.Overlay;\n import bisq.desktop.main.overlays.popups.Popup;\n import bisq.desktop.util.FormBuilder;\n \n@@ -28,11 +29,16 @@ import bisq.core.dao.governance.period.PeriodService;\n import bisq.core.dao.monitoring.DaoStateMonitoringService;\n import bisq.core.dao.monitoring.model.DaoStateBlock;\n import bisq.core.dao.monitoring.model.DaoStateHash;\n+import bisq.core.dao.monitoring.model.UtxoMismatch;\n import bisq.core.dao.state.DaoStateService;\n import bisq.core.locale.Res;\n \n+import bisq.common.util.Utilities;\n+\n import javax.inject.Inject;\n \n+import javafx.collections.ListChangeListener;\n+\n import java.util.Map;\n import java.util.stream.Collectors;\n \n@@ -40,6 +46,9 @@ import java.util.stream.Collectors;\n public class DaoStateMonitorView extends StateMonitorView<DaoStateHash, DaoStateBlock, DaoStateBlockListItem, DaoStateInConflictListItem>\n         implements DaoStateMonitoringService.Listener {\n     private final DaoStateMonitoringService daoStateMonitoringService;\n+    private ListChangeListener<UtxoMismatch> utxoMismatchListChangeListener;\n+    private Overlay warningPopup;\n+\n \n     ///////////////////////////////////////////////////////////////////////////////////////////\n     // Constructor, lifecycle\n@@ -59,6 +68,8 @@ public class DaoStateMonitorView extends StateMonitorView<DaoStateHash, DaoState\n \n     @Override\n     public void initialize() {\n+        utxoMismatchListChangeListener = c -> updateUtxoMismatches();\n+\n         FormBuilder.addTitledGroupBg(root, gridRow, 3, Res.get(\"dao.monitor.daoState.headline\"));\n \n         statusTextField = FormBuilder.addTopLabelTextField(root, ++gridRow,\n@@ -71,7 +82,11 @@ public class DaoStateMonitorView extends StateMonitorView<DaoStateHash, DaoState\n     @Override\n     protected void activate() {\n         super.activate();\n+\n         daoStateMonitoringService.addListener(this);\n+        daoStateMonitoringService.getUtxoMismatches().addListener(utxoMismatchListChangeListener);\n+\n+        updateUtxoMismatches();\n \n         resyncButton.setOnAction(e -> daoFacade.resyncDao(() ->\n                 new Popup<>().attention(Res.get(\"setting.preferences.dao.resync.popup\"))\n@@ -84,7 +99,9 @@ public class DaoStateMonitorView extends StateMonitorView<DaoStateHash, DaoState\n     @Override\n     protected void deactivate() {\n         super.deactivate();\n+\n         daoStateMonitoringService.removeListener(this);\n+        daoStateMonitoringService.getUtxoMismatches().removeListener(utxoMismatchListChangeListener);\n     }\n \n \n@@ -185,4 +202,28 @@ public class DaoStateMonitorView extends StateMonitorView<DaoStateHash, DaoState\n     protected void requestHashesFromGenesisBlockHeight(String peerAddress) {\n         daoStateMonitoringService.requestHashesFromGenesisBlockHeight(peerAddress);\n     }\n+\n+\n+    ///////////////////////////////////////////////////////////////////////////////////////////\n+    // Private\n+    ///////////////////////////////////////////////////////////////////////////////////////////\n+\n+    private void updateUtxoMismatches() {\n+        if (!daoStateMonitoringService.getUtxoMismatches().isEmpty()) {\n+            StringBuilder sb = new StringBuilder();\n+            daoStateMonitoringService.getUtxoMismatches().forEach(e -> {\n+                sb.append(\"\\n\").append(Res.get(\"dao.monitor.daoState.utxoConflicts.blockHeight\", e.getHeight())).append(\"\\n\")\n+                        .append(Res.get(\"dao.monitor.daoState.utxoConflicts.sumUtxo\", e.getSumUtxo() / 100)).append(\"\\n\")\n+                        .append(Res.get(\"dao.monitor.daoState.utxoConflicts.sumBsq\", e.getSumBsq() / 100));\n+            });\n+\n+            if (warningPopup == null) {\n+                warningPopup = new Popup<>().headLine(Res.get(\"dao.monitor.daoState.utxoConflicts\"))\n+                        .warning(Utilities.toTruncatedString(sb.toString(), 500, false)).onClose(() -> {\n+                            warningPopup = null;\n+                        });\n+                warningPopup.show();\n+            }\n+        }\n+    }\n }",
    "Execute tests with $ JAVA_HOME .": "diff --git a/pom.xml b/pom.xml\nindex 772d7ef6578..d28060f8cd7 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -47,6 +47,7 @@\n         <tests.heap.size>512m</tests.heap.size>\n         <tests.heapdump.path>${basedir}/logs/</tests.heapdump.path>\n         <tests.topn>5</tests.topn>\n+        <jvm.executable>${java.home}${file.separator}bin${file.separator}java</jvm.executable>\n         <execution.hint.file>.local-${project.version}-execution-hints.log</execution.hint.file>\n \n         <!-- Properties used for building RPM & DEB packages (see common/packaging.properties) -->\n@@ -444,7 +445,7 @@\n               </execution>\n             </executions>\n             <configuration>\n-              <executable>java</executable>\n+              <executable>${jvm.executable></executable>\n               <arguments>\n                 <argument>-classpath</argument>\n                 <classpath/>\n@@ -516,6 +517,7 @@\n                             <goal>junit4</goal>\n                         </goals>\n                        ",
    "Move the checklists in the templates to the bottom .": "diff --git a/.github/issue_template.md b/.github/issue_template.md\nindex 23d1c7d33b..55dca93962 100644\n--- a/.github/issue_template.md\n+++ b/.github/issue_template.md\n@@ -1,13 +1,3 @@\n-###### Research\n-*Enter an [ x ] character to confirm the points below:*\n-\n-[  ] I have read the [support page](https://ankidroid.org/docs/help.html) and am reporting a bug or enhancement request specific to AnkiDroid\n-\n-[  ] I have checked the [manual](https://ankidroid.org/docs/manual.html) and the [FAQ](https://github.com/ankidroid/Anki-Android/wiki/FAQ) and could not find a solution to my issue\n-\n-[  ] I have searched for similar existing issues here and on the user forum\n-\n-\n ###### Reproduction Steps\n \n 1. \n@@ -26,4 +16,12 @@\n ###### Debug info\n Refer to the [support page](https://ankidroid.org/docs/help.html) if you are unsure where to get the \"debug info\".\n \n+###### Research\n+*Enter an [ x ] character to confirm the points below:*\n+\n+[  ] I have read the [support page](https://ankidroid.org/docs/help.html) and am reporting a bug or enhancement request specific to AnkiDroid\n+\n+[  ] I have checked the [manual](https://ankidroid.org/docs/manual.html) and the [FAQ](https://github.com/ankidroid/Anki-Android/wiki/FAQ) and could not find a solution to my issue\n+\n+[  ] I have searched for similar existing issues here and on the user forum\n \ndiff --git a/.github/pull_request_template.md b/.github/pull_request_template.md\nindex f1d7d7a8cf..8c621e16d7 100644\n--- a/.github/pull_request_template.md\n+++ b/.github/pull_request_template.md\n@@ -1,13 +1,5 @@\n ## Pull Request template\n \n-Please, go through these checks before you submit a PR.\n-\n-- [ ] You have not changed whitespace unnecessarily (it makes diffs hard to read)\n-- [ ] You have a descriptive commit message with a short title (first line, max 50 chars).\n-- [ ] Your code follows the style of the project (e.g. never omit braces in `if` statements) \n-- [ ] You have commented your code, particularly in hard-to-understand areas\n-- [ ] You have performed a self-review of your own code\n-\n ## Purpose / Description\n _Describe the problem or feature and motivation_\n \n@@ -25,3 +17,12 @@ Please describe the tests that you ran to verify your changes. Provide instructi\n _Describe the research stage_\n \n _Links to blog posts, patterns, libraries or addons used to solve this problem_\n+\n+## Checklist\n+_Please, go through these checks before submitting the PR._\n+\n+- [ ] You have not changed whitespace unnecessarily (it makes diffs hard to read)\n+- [ ] You have a descriptive commit message with a short title (first line, max 50 chars).\n+- [ ] Your code follows the style of the project (e.g. never omit braces in `if` statements) \n+- [ ] You have commented your code, particularly in hard-to-understand areas\n+- [ ] You have performed a self-review of your own code",
    "Migrate product verification failing test to unit test case": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestRegexpFunctions.java b/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestRegexpFunctions.java\nindex 52deae518b..a1d24f34a6 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestRegexpFunctions.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestRegexpFunctions.java\n@@ -30,6 +30,7 @@ import java.util.List;\n \n import static com.facebook.presto.spi.StandardErrorCode.INVALID_FUNCTION_ARGUMENT;\n import static com.facebook.presto.spi.type.BooleanType.BOOLEAN;\n+import static com.facebook.presto.spi.type.VarcharType.createUnboundedVarcharType;\n import static com.facebook.presto.spi.type.VarcharType.createVarcharType;\n import static com.facebook.presto.sql.analyzer.RegexLibrary.JONI;\n import static com.facebook.presto.sql.analyzer.RegexLibrary.RE2J;\n@@ -133,6 +134,8 @@ public class TestRegexpFunctions\n         assertInvalidFunction(\"REGEXP_REPLACE('xxx', '(?<name>x)', '${}')\", INVALID_FUNCTION_ARGUMENT);\n         assertInvalidFunction(\"REGEXP_REPLACE('xxx', '(?<name>x)', '${0}')\", INVALID_FUNCTION_ARGUMENT);\n         assertInvalidFunction(\"REGEXP_REPLACE('xxx', '(?<name>x)', '${nam}')\", INVALID_FUNCTION_ARGUMENT);\n+\n+        assertFunction(\"REGEXP_REPLACE(VARCHAR 'x', '.*', 'xxxxx')\", createUnboundedVarcharType(), \"xxxxxxxxxx\");\n     }\n \n     @Test",
    "Updated relnotes .": "diff --git a/docs/source/about/release-notes.rst b/docs/source/about/release-notes.rst\nindex 8a5a7dfe0..b3c053287 100644\n--- a/docs/source/about/release-notes.rst\n+++ b/docs/source/about/release-notes.rst\n@@ -31,6 +31,7 @@ v0.3.0-SNAPSHOT\n   require applications to open a single port.\n * Added ``http.adminUsername`` and ``http.adminPassword`` to allow for Basic HTTP Authentication\n   for the admin servlet.\n+* Upgraded to Metrics 2.1.0.\n \n .. _rel-0.2.1:\n ",
    "Improved layout of Addfeedactivity": "diff --git a/res/layout/addfeed.xml b/res/layout/addfeed.xml\nindex 7036bcbf9..016bc621f 100644\n--- a/res/layout/addfeed.xml\n+++ b/res/layout/addfeed.xml\n@@ -1,32 +1,47 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-\tandroid:layout_width=\"fill_parent\"\n-\tandroid:layout_height=\"fill_parent\"\n-\tandroid:orientation=\"vertical\" >\n-\t<TextView\n-\t\tandroid:id=\"@+id/txtvFeedurl\"\n-\t\tandroid:text=\"@string/feedurl_label\"\n-\t\tandroid:layout_width=\"fill_parent\"\n-\t\tandroid:layout_height=\"wrap_content\"\n-\t\t/>\n-\t<EditText android:id=\"@+id/etxtFeedurl\"\n-\t\tandroid:layout_width=\"fill_parent\"\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"fill_parent\"\n+    android:layout_height=\"fill_parent\"\n+    android:orientation=\"vertical\" >\n+\n+    <TextView\n+        android:id=\"@+id/txtvFeedurl\"\n+        android:layout_width=\"fill_parent\"\n         android:layout_height=\"wrap_content\"\n-        android:autoText=\"false\"\n-        android:capitalize=\"none\"/>\n-\t<LinearLayout\n-\t\tandroid:layout_width=\"match_parent\"\n-\t\tandroid:layout_height=\"wrap_content\"\n-\t\tandroid:orientation=\"horizontal\">\n-\t\t<Button android:id=\"@+id/butConfirm\"\n-\t\t\tandroid:text=\"@string/confirm_label\"\n-\t\t\tandroid:layout_width=\"0px\"\n-\t\t\tandroid:layout_height=\"wrap_content\"\n-\t\t\tandroid:layout_weight=\"1\"/>\n-\t\t<Button android:id=\"@+id/butCancel\"\n-\t\t\tandroid:layout_width=\"0px\"\n-\t\t\tandroid:layout_height=\"wrap_content\"\n-\t\t\tandroid:layout_weight=\"1\"\n-\t\t\tandroid:text=\"@string/cancel_label\"/>\n-\t</LinearLayout>\n-</LinearLayout>\n+        android:layout_alignParentTop=\"true\"\n+        android:layout_margin=\"8dp\"\n+        android:text=\"@string/txtvfeedurl_label\" />\n+\n+    <EditText\n+        android:id=\"@+id/etxtFeedurl\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_below=\"@id/txtvFeedurl\"\n+        android:layout_margin=\"8dp\"\n+        android:hint=\"@string/feedurl_label\"\n+        android:inputType=\"textUri\" />\n+\n+    <LinearLayout\n+        android:id=\"@+id/footer\"\n+        style=\"@android:style/ButtonBar\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_alignParentBottom=\"true\"\n+        android:orientation=\"horizontal\" >\n+\n+        <Button\n+            android:id=\"@+id/butConfirm\"\n+            android:layout_width=\"0px\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_weight=\"1\"\n+            android:text=\"@string/confirm_label\" />\n+\n+        <Button\n+            android:id=\"@+id/butCancel\"\n+            android:layout_width=\"0px\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_weight=\"1\"\n+            android:text=\"@string/cancel_label\" />\n+    </LinearLayout>\n+\n+</RelativeLayout>\n\\ No newline at end of file\ndiff --git a/res/values/strings.xml b/res/values/strings.xml\nindex 138ca38d6..1c8f382a1 100644\n--- a/res/values/strings.xml\n+++ b/res/values/strings.xml\n@@ -67,5 +67,6 @@\n     <string name=\"error_label\">Error</string>\n     <string name=\"error_msg_prefix\">An error occured:</string>\n     <string name=\"download_error_connection_error\">Connection error</string>\n+    <string name=\"txtvfeedurl_label\">Type in the URL of the Feed here:</string>\n \n </resources>\n\\ No newline at end of file",
    "add concept of embedded document and integrated in record deserializations": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocument.java b/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocument.java\nindex 492910291a..2fdb99ba99 100755\n--- a/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocument.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocument.java\n@@ -335,6 +335,11 @@ public interface ODatabaseDocument extends ODatabase<ORecord> {\n \r\n   OElement newElement(final String className);\r\n \r\n+  OElement newEmbeddedElement();\r\n+\r\n+  OElement newEmbeddedElement(final String className);\r\n+\r\n+\r\n   /**\r\n    * Creates a new Edge of type E\r\n    *\r\ndiff --git a/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentAbstract.java b/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentAbstract.java\nindex 4ac4f5892e..2d59eee968 100755\n--- a/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentAbstract.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentAbstract.java\n@@ -1420,6 +1420,16 @@ public abstract class ODatabaseDocumentAbstract extends OListenerManger<ODatabas\n     return new ODocument(this, iClassName);\n   }\n \n+  @Override\n+  public OElement newEmbeddedElement() {\n+    return new ODocumentEmbedded(this);\n+  }\n+\n+  @Override\n+  public OElement newEmbeddedElement(String className) {\n+    return new ODocumentEmbedded(className, this);\n+  }\n+\n   @Override\n   public OElement newElement() {\n     return newInstance();\ndiff --git a/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentTx.java b/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentTx.java\nindex 2483bb49b0..18916e2b06 100755\n--- a/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentTx.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentTx.java\n@@ -528,6 +528,18 @@ public class ODatabaseDocumentTx implements ODatabaseDocumentInternal {\n     return internal.newElement(className);\n   }\n \n+  @Override\n+  public OElement newEmbeddedElement() {\n+    checkOpenness();\n+    return internal.newEmbeddedElement();\n+  }\n+\n+  @Override\n+  public OElement newEmbeddedElement(String className) {\n+    checkOpenness();\n+    return internal.newEmbeddedElement(className);\n+  }\n+\n   public boolean isUseLightweightEdges() {\n     return internal.isUseLightweightEdges();\n   }\ndiff --git a/core/src/main/java/com/orientechnologies/orient/core/record/impl/ODocumentEmbedded.java b/core/src/main/java/com/orientechnologies/orient/core/record/impl/ODocumentEmbedded.java\nnew file mode 100644\nindex 0000000000..ec501c55eb\n--- /dev/null\n+++ b/core/src/main/java/com/orientechnologies/orient/core/record/impl/ODocumentEmbedded.java\n@@ -0,0 +1,27 @@\n+package com.orientechnologies.orient.core.record.impl;\n+\n+import com.orientechnologies.orient.core.db.ODatabaseSession;\n+\n+public class ODocumentEmbedded extends ODocument {\n+\n+  public ODocumentEmbedded() {\n+    super();\n+  }\n+\n+  public ODocumentEmbedded(String clazz) {\n+    super(clazz);\n+  }\n+\n+  public ODocumentEmbedded(String clazz, ODatabaseSession session) {\n+    super(clazz, session);\n+  }\n+\n+  public ODocumentEmbedded(ODatabaseSession session) {\n+    super(session);\n+  }\n+\n+  @Override\n+  public boolean isEmbedded() {\n+    return true;\n+  }\n+}\ndiff --git a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerBinaryV0.java b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerBinaryV0.java\nindex 137e72e683..aeed61a7c6 100755\n--- a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerBinaryV0.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerBinaryV0.java\n@@ -35,6 +35,7 @@ import com.orientechnologies.orient.core.metadata.schema.*;\n import com.orientechnologies.orient.core.metadata.security.OPropertyEncryption;\n import com.orientechnologies.orient.core.record.ORecordInternal;\n import com.orientechnologies.orient.core.record.impl.ODocument;\n+import com.orientechnologies.orient.core.record.impl.ODocumentEmbedded;\n import com.orientechnologies.orient.core.record.impl.ODocumentEntry;\n import com.orientechnologies.orient.core.record.impl.ODocumentInternal;\n import com.orientechnologies.orient.core.serialization.ODocumentSerializable;\n@@ -399,7 +400,7 @@ public class ORecordSerializerBinaryV0 implements ODocumentSerializer {\n   }\n \n   protected Object deserializeEmbeddedAsDocument(final BytesContainer bytes, final ORecordElement owner) {\n-    Object value = new ODocument();\n+    Object value = new ODocumentEmbedded();\n     deserializeWithClassName((ODocument) value, bytes);\n     if (((ODocument) value).containsField(ODocumentSerializable.CLASS_NAME)) {\n       String className = ((ODocument) value).field(ODocumentSerializable.CLASS_NAME);\ndiff --git a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerBinaryV1.java b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerBinaryV1.java\nindex b615e0f21e..7e4dd53b32 100755\n--- a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerBinaryV1.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerBinaryV1.java\n@@ -15,6 +15,7 @@ import com.orientechnologies.orient.core.metadata.schema.*;\n import com.orientechnologies.orient.core.metadata.security.OPropertyEncryption;\n import com.orientechnologies.orient.core.record.ORecordInternal;\n import com.orientechnologies.orient.core.record.impl.ODocument;\n+import com.orientechnologies.orient.core.record.impl.ODocumentEmbedded;\n import com.orientechnologies.orient.core.record.impl.ODocumentEntry;\n import com.orientechnologies.orient.core.record.impl.ODocumentInternal;\n import com.orientechnologies.orient.core.serialization.ODocumentSerializable;\n@@ -1014,7 +1015,7 @@ public class ORecordSerializerBinaryV1 implements ODocumentSerializer {\n   }\n \n   protected Object deserializeEmbeddedAsDocument(final BytesContainer bytes, final ORecordElement owner) {\n-    Object value = new ODocument();\n+    Object value = new ODocumentEmbedded();\n     deserializeWithClassName((ODocument) value, bytes);\n     if (((ODocument) value).containsField(ODocumentSerializable.CLASS_NAME)) {\n       String className = ((ODocument) value).field(ODocumentSerializable.CLASS_NAME);\ndiff --git a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerNetworkV0.java b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerNetworkV0.java\nindex 91405dc875..830cd10bc8 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerNetworkV0.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerNetworkV0.java\n@@ -38,6 +38,7 @@ import com.orientechnologies.orient.core.metadata.security.OPropertyEncryption;\n import com.orientechnologies.orient.core.record.ORecord;\n import com.orientechnologies.orient.core.record.ORecordInternal;\n import com.orientechnologies.orient.core.record.impl.ODocument;\n+import com.orientechnologies.orient.core.record.impl.ODocumentEmbedded;\n import com.orientechnologies.orient.core.record.impl.ODocumentEntry;\n import com.orientechnologies.orient.core.record.impl.ODocumentInternal;\n import com.orientechnologies.orient.core.serialization.ODocumentSerializable;\n@@ -315,7 +316,7 @@ public class ORecordSerializerNetworkV0 implements ODocumentSerializer {\n       value = new Date(savedTime);\n       break;\n     case EMBEDDED:\n-      value = new ODocument();\n+      value = new ODocumentEmbedded();\n       deserialize((ODocument) value, bytes);\n       if (((ODocument) value).containsField(ODocumentSerializable.CLASS_NAME)) {\n         String className = ((ODocument) value).field(ODocumentSerializable.CLASS_NAME);\ndiff --git a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerNetworkV37.java b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerNetworkV37.java\nindex 01f997caaf..500bac9316 100755\n--- a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerNetworkV37.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerNetworkV37.java\n@@ -251,7 +251,7 @@ public class ORecordSerializerNetworkV37 implements ORecordSerializer {\n       value = new Date(savedTime);\n       break;\n     case EMBEDDED:\n-      value = new ODocument();\n+      value = new ODocumentEmbedded();\n       deserialize((ODocument) value, bytes);\n       if (((ODocument) value).containsField(ODocumentSerializable.CLASS_NAME)) {\n         String className = ((ODocument) value).field(ODocumentSerializable.CLASS_NAME);\ndiff --git a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/string/ORecordSerializerJSON.java b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/string/ORecordSerializerJSON.java\nindex 75746792de..ee3b3a79bf 100755\n--- a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/string/ORecordSerializerJSON.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/string/ORecordSerializerJSON.java\n@@ -43,10 +43,7 @@ import com.orientechnologies.orient.core.metadata.schema.OType;\n import com.orientechnologies.orient.core.record.ORecord;\r\n import com.orientechnologies.orient.core.record.ORecordInternal;\r\n import com.orientechnologies.orient.core.record.ORecordStringable;\r\n-import com.orientechnologies.orient.core.record.impl.OBlob;\r\n-import com.orientechnologies.orient.core.record.impl.ODocument;\r\n-import com.orientechnologies.orient.core.record.impl.ODocumentHelper;\r\n-import com.orientechnologies.orient.core.record.impl.ODocumentInternal;\r\n+import com.orientechnologies.orient.core.record.impl.*;\r\n import com.orientechnologies.orient.core.serialization.serializer.OJSONWriter;\r\n import com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper;\r\n import com.orientechnologies.orient.core.util.ODateHelper;\r\n@@ -497,7 +494,7 @@ public class ORecordSerializerJSON extends ORecordSerializerStringAbstract {\n         }\r\n \r\n       case EMBEDDED:\r\n-        return fromString(iFieldValueAsString);\r\n+        return fromString(iFieldValueAsString, new ODocumentEmbedded(), null);\r\n \r\n       case DATE:\r\n         if (iFieldValueAsString == null || iFieldValueAsString.equals(\"\"))\r\ndiff --git a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/string/OStringSerializerEmbedded.java b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/string/OStringSerializerEmbedded.java\nindex 9ba9c4db03..587299d1df 100755\n--- a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/string/OStringSerializerEmbedded.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/string/OStringSerializerEmbedded.java\n@@ -23,6 +23,7 @@ import com.orientechnologies.common.exception.OException;\n import com.orientechnologies.common.log.OLogManager;\r\n import com.orientechnologies.orient.core.exception.OSerializationException;\r\n import com.orientechnologies.orient.core.record.impl.ODocument;\r\n+import com.orientechnologies.orient.core.record.impl.ODocumentEmbedded;\r\n import com.orientechnologies.orient.core.serialization.ODocumentSerializable;\r\n import com.orientechnologies.orient.core.serialization.OSerializableStream;\r\n import com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerSchemaAware2CSV;\r\n@@ -43,7 +44,7 @@ public class OStringSerializerEmbedded implements OStringSerializer {\n       // NULL VALUE\r\n       return null;\r\n \r\n-    final ODocument instance = new ODocument();\r\n+    final ODocument instance = new ODocumentEmbedded();\r\n     try {\r\n       ORecordSerializerSchemaAware2CSV.INSTANCE.fromStream(iStream.getBytes(\"UTF-8\"), instance, null);\r\n     } catch (UnsupportedEncodingException e) {\r\n@@ -67,7 +68,7 @@ public class OStringSerializerEmbedded implements OStringSerializer {\n     if (ODocumentSerializable.class.isAssignableFrom(clazz)) {\r\n       try {\r\n         final ODocumentSerializable documentSerializable = (ODocumentSerializable) clazz.newInstance();\r\n-        final ODocument docClone = new ODocument();\r\n+        final ODocument docClone = new ODocumentEmbedded();\r\n         instance.copyTo(docClone);\r\n         docClone.removeField(ODocumentSerializable.CLASS_NAME);\r\n         documentSerializable.fromDocument(docClone);\r\ndiff --git a/tests/src/test/java/com/orientechnologies/orient/test/database/auto/SQLSelectTest.java b/tests/src/test/java/com/orientechnologies/orient/test/database/auto/SQLSelectTest.java\nindex dfc132be71..3cb32d4d6a 100755\n--- a/tests/src/test/java/com/orientechnologies/orient/test/database/auto/SQLSelectTest.java\n+++ b/tests/src/test/java/com/orientechnologies/orient/test/database/auto/SQLSelectTest.java\n@@ -254,7 +254,7 @@ public class SQLSelectTest extends AbstractSelectTest {\n \n     List<ODocument> resultset = executeQuery(\"select coll[name='Jay'] as value from Profile where coll is not null\", database);\n     Assert.assertEquals(resultset.size(), 1);\n-    Assert.assertEquals(resultset.get(0).field(\"value\").getClass(), ODocument.class);\n+    Assert.assertTrue(resultset.get(0).field(\"value\") instanceof ODocument);\n     Assert.assertEquals(((ODocument) resultset.get(0).field(\"value\")).field(\"name\"), \"Jay\");\n \n     doc.delete();\n@@ -273,7 +273,7 @@ public class SQLSelectTest extends AbstractSelectTest {\n \n     List<ODocument> resultset = executeQuery(\"select coll[name='Jay'] as value from Profile where coll is not null\", database);\n     Assert.assertEquals(resultset.size(), 1);\n-    Assert.assertEquals(resultset.get(0).field(\"value\").getClass(), ODocument.class);\n+    Assert.assertTrue(resultset.get(0).field(\"value\") instanceof ODocument);\n     Assert.assertEquals(((ODocument) resultset.get(0).field(\"value\")).field(\"name\"), \"Jay\");\n \n     doc.delete();",
    "add the method ProjectUtils . toIoFiles ( . . )": "diff --git a/sonar-plugin-api/src/main/java/org/sonar/api/resources/ProjectUtils.java b/sonar-plugin-api/src/main/java/org/sonar/api/resources/ProjectUtils.java\nindex f2f9b0511e4..bf89e3f8d6a 100644\n--- a/sonar-plugin-api/src/main/java/org/sonar/api/resources/ProjectUtils.java\n+++ b/sonar-plugin-api/src/main/java/org/sonar/api/resources/ProjectUtils.java\n@@ -19,6 +19,11 @@\n  */\n package org.sonar.api.resources;\n \n+import com.google.common.collect.Lists;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n /**\n  * @TODO Actually this class incorrectly named, because provides information not about project, but about Java project.\n  *       And seems that only core plugins use this class.\n@@ -52,4 +57,15 @@ public final class ProjectUtils {\n     }\n     return null;\n   }\n+\n+  /**\n+   * @since 2.7\n+   */\n+  public static List<java.io.File> toIoFiles(Collection<InputFile> inputFiles) {\n+    List<java.io.File> files = Lists.newArrayList();\n+    for (InputFile inputFile : inputFiles) {\n+      files.add(inputFile.getFile());\n+    }\n+    return files;\n+  }\n }",
    "Remove unused class .": "diff --git a/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/support/SearchRequestEquivalence.java b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/support/SearchRequestEquivalence.java\ndeleted file mode 100644\nindex cc063d56920..00000000000\n--- a/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/support/SearchRequestEquivalence.java\n+++ /dev/null\n@@ -1,49 +0,0 @@\n-/*\n- * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n- * or more contributor license agreements. Licensed under the Elastic License;\n- * you may not use this file except in compliance with the Elastic License.\n- */\n-package org.elasticsearch.xpack.watcher.support;\n-\n-import org.elasticsearch.action.search.SearchRequest;\n-import org.elasticsearch.common.Nullable;\n-import org.elasticsearch.common.bytes.BytesArray;\n-import org.elasticsearch.common.bytes.BytesReference;\n-import org.elasticsearch.common.io.stream.BytesStreamOutput;\n-\n-import java.util.Arrays;\n-\n-import static org.elasticsearch.xpack.watcher.support.Exceptions.illegalState;\n-\n-\n-/**\n- * The only true way today to compare search request object (outside of core) is to\n- * serialize it and compare the serialized output. this is heavy obviously, but luckily we\n- * don't compare search requests in normal runtime... we only do it in the tests. The is here basically\n- * due to the lack of equals/hashcode support in SearchRequest in core.\n- */\n-public final class SearchRequestEquivalence {\n-\n-    public static final SearchRequestEquivalence INSTANCE = new SearchRequestEquivalence();\n-\n-    private SearchRequestEquivalence() {\n-    }\n-\n-    public boolean equivalent(@Nullable SearchRequest a, @Nullable SearchRequest b) {\n-        return a == b ? true : (a != null && b != null ? this.doEquivalent(a, b) : false);\n-    }\n-\n-    protected boolean doEquivalent(SearchRequest r1, SearchRequest r2) {\n-        try {\n-            BytesStreamOutput output1 = new BytesStreamOutput();\n-            r1.writeTo(output1);\n-            byte[] bytes1 = BytesReference.toBytes(output1.bytes());\n-            output1.reset();\n-            r2.writeTo(output1);\n-            byte[] bytes2 = BytesReference.toBytes(output1.bytes());\n-            return Arrays.equals(bytes1, bytes2);\n-        } catch (Exception e) {\n-            throw illegalState(\"could not compare search requests\", e);\n-        }\n-    }\n-}",
    "Remove unused flag .": "diff --git a/flags/src/main/java/com/yahoo/vespa/flags/Flags.java b/flags/src/main/java/com/yahoo/vespa/flags/Flags.java\nindex 815fcda6ee7..57228dfe49d 100644\n--- a/flags/src/main/java/com/yahoo/vespa/flags/Flags.java\n+++ b/flags/src/main/java/com/yahoo/vespa/flags/Flags.java\n@@ -193,11 +193,6 @@ public class Flags {\n             \"Takes effect on next node agent tick (but does not clear existing failure reports)\",\n             HOSTNAME);\n   \n-    public static final UnboundBooleanFlag DISABLE_CM3 = defineFeatureFlag(\n-            \"disable-cm3\", false,\n-            \"Whether to disable CM3.\", \"Takes effect on next host admin tick\",\n-            HOSTNAME);\n-\n     public static final UnboundBooleanFlag GENERATE_L4_ROUTING_CONFIG = defineFeatureFlag(\n             \"generate-l4-routing-config\", false,\n             \"Whether routing nodes should generate",
    "Fixing more tests": "diff --git a/jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/driver/WebSocketEventDriver.java b/jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/driver/WebSocketEventDriver.java\nindex 8eedb92f16..03afd9846b 100644\n--- a/jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/driver/WebSocketEventDriver.java\n+++ b/jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/driver/WebSocketEventDriver.java\n@@ -129,17 +129,24 @@ public class WebSocketEventDriver implements Parser.Listener\n             {\n                 case CLOSE:\n                 {\n-                    if (events.onClose != null)\n+                    if (events.onClose == null)\n                     {\n-                        byte payload[] = frame.getPayloadData();\n-                        int statusCode = CloseUtil.getStatusCode(payload);\n-                        String reason = CloseUtil.getReason(payload);\n-                        events.onClose.call(websocket,connection,statusCode,reason);\n+                        // not interested in close events\n+                        return;\n                     }\n+                    byte payload[] = frame.getPayloadData();\n+                    int statusCode = CloseUtil.getStatusCode(payload);\n+                    String reason = CloseUtil.getReason(payload);\n+                    events.onClose.call(websocket,connection,statusCode,reason);\n                     return;\n                 }\n                 case BINARY:\n                 {\n+                    if (events.onBinary == null)\n+                    {\n+                        // not interested in binary events\n+                        return;\n+                    }\n                     if (events.onBinary.isStreaming())\n                     {\n                         boolean needsNotification = false;\n@@ -205,6 +212,11 @@ public class WebSocketEventDriver implements Parser.Listener\n                 }\n                 case TEXT:\n                 {\n+                    if (events.onText == null)\n+                    {\n+                        // not interested in text events\n+                        return;\n+                    }\n                     if (events.onText.isStreaming())\n       ",
    "Added custom actions for showing the shortcuts menu and adding a quick action on the home screen .": "diff --git a/src/com/android/launcher3/BubbleTextView.java b/src/com/android/launcher3/BubbleTextView.java\nindex 3d91306f8..33b3ad347 100644\n--- a/src/com/android/launcher3/BubbleTextView.java\n+++ b/src/com/android/launcher3/BubbleTextView.java\n@@ -56,11 +56,12 @@ public class BubbleTextView extends TextView\n \n     private static SparseArray<Theme> sPreloaderThemes = new SparseArray<Theme>(2);\n \n-    private static final float SHADOW_LARGE_RADIUS = 4.0f;\n-    private static final float SHADOW_SMALL_RADIUS = 1.75f;\n-    private static final float SHADOW_Y_OFFSET = 2.0f;\n-    private static final int SHADOW_LARGE_COLOUR = 0xDD000000;\n-    private static final int SHADOW_SMALL_COLOUR = 0xCC000000;\n+    // Dimensions in DP\n+    private static final float AMBIENT_SHADOW_RADIUS = 2.5f;\n+    private static final float KEY_SHADOW_RADIUS = 1f;\n+    private static final float KEY_SHADOW_OFFSET = 0.5f;\n+    private static final int AMBIENT_SHADOW_COLOR = 0x33000000;\n+    private static final int KEY_SHADOW_COLOR = 0x66000000;\n \n     private static final int DISPLAY_WORKSPACE = 0;\n     private static final int DISPLAY_ALL_APPS = 1;\n@@ -136,6 +137,10 @@ public class BubbleTextView extends TextView\n             // Draw the background itself as the parent is drawn twice.\n             mBackground = getBackground();\n             setBackground(null);\n+\n+            // Set shadow layer as the larger shadow to that the textView does not clip the shadow.\n+            float density = getResources().getDisplayMetrics().density;\n+            setShadowLayer(density * AMBIENT_SHADOW_RADIUS, 0, 0, AMBIENT_SHADOW_COLOR);\n         } else {\n             mBackground = null;\n         }\n@@ -144,10 +149,6 @@ public class BubbleTextView extends TextView\n         mStylusEventHelper = new StylusEventHelper(new SimpleOnStylusPressListener(this), this);\n \n         mOutlineHelper = HolographicOutlineHelper.obtain(getContext());\n-        if (mCustomShadowsEnabled) {\n-            setShadowLayer(SHADOW_LARGE_RADIUS, 0.0f, SHADOW_Y_OFFSET, SHADOW_LARGE_COLOUR);\n-        }\n-\n         setAccessibilityDelegate(mLauncher.getAccessibilityDelegate());\n     }\n \n@@ -408,13 +409,15 @@ public class BubbleTextView extends TextView\n         }\n \n         // We enhance the shadow by drawing the shadow twice\n-        getPaint().setShadowLayer(SHADOW_LARGE_RADIUS, 0.0f, SHADOW_Y_OFFSET, SHADOW_LARGE_COLOUR);\n+        float density = getResources().getDisplayMetrics().density;\n+        getPaint().setShadowLayer(density * AMBIENT_SHADOW_RADIUS, 0, 0, AMBIENT_SHADOW_COLOR);\n         super.draw(canvas);\n         canvas.save(Canvas.CLIP_SAVE_FLAG);\n         canvas.clipRect(getScrollX(), getScrollY() + getExtendedPaddingTop(),\n                 getScrollX() + getWidth(),\n                 getScrollY() + getHeight(), Region.Op.INTERSECT);\n-        getPaint().setShadowLayer(SHADOW_SMALL_RADIUS, 0.0f, 0.0f, SHADOW_SMALL_COLOUR);\n+        getPaint().setShadowLayer(\n+                density * KEY_SHADOW_RADIUS, 0.0f, density * KEY_SHADOW_OFFSET, KEY_SHADOW_COLOR);\n         super.draw(canvas);\n         canvas.restore();\n     }\ndiff --git a/src/com/android/launcher3/allapps/AllAppsContainerView.java b/src/com/android/launcher3/allapps/AllAppsContainerView.java\nindex 8b1f95087..428f78401 100644\n--- a/src/com/android/launcher3/allapps/AllAppsContainerView.java\n+++ b/src/com/android/launcher3/allapps/AllAppsContainerView.java\n@@ -210,6 +210,7 @@ public class AllAppsContainerView extends BaseContainerView implements DragSourc\n      */\n     public void addApps(List<AppInfo> apps) {\n         mApps.addApps(apps);\n+        mSearchBarController.refreshSearchResult();\n     }\n \n     /**\n@@ -217,6 +218,7 @@ public class AllAppsContainerView extends BaseContainerView implements DragSourc\n      */\n     public void updateApps(List<AppInfo> apps) {\n         mApps.updateApps(apps);\n+        mSearchBarController.refreshSearchResult();\n     }\n \n     /**\n@@ -224,6 +226,7 @@ public class AllAppsContainerView extends BaseContainerView implements DragSourc\n      */\n     public void removeApps(List<AppInfo> apps) {\n         mApps.removeApps(apps);\n+        mSearchBarController.refreshSearchResult();\n     }\n \n     public void setSearchBarVisible(boolean visible) {\ndiff --git a/src/com/android/launcher3/allapps/AllAppsSearchBarController.java b/src/com/android/launcher3/allapps/AllAppsSearchBarController.java\nindex ac3593238..e75210b93 100644\n--- a/src/com/android/launcher3/allapps/AllAppsSearchBarController.java\n+++ b/src/com/android/launcher3/allapps/AllAppsSearchBarController.java\n@@ -45,6 +45,7 @@ public abstract class AllAppsSearchBarController\n     protected AlphabeticalAppsList mApps;\n     protected Callbacks mCb;\n     protected ExtendedEditText mInput;\n+    private String mQuery;\n \n     protected DefaultAppSearchAlgorithm mSearchAlgorithm;\n     protected InputMethodManager mInputMethodManager;\n@@ -90,14 +91,23 @@ public abstract class AllAppsSearchBarController\n \n     @Override\n     public void afterTextChanged(final Editable s) {\n-        String query = s.toString();\n-        if (query.isEmpty()) {\n+        mQuery = s.toString();\n+        if (mQuery.isEmpty()) {\n             mSearchAlgorithm.cancel(true);\n             mCb.clearSearchResult();\n         } else {\n             mSearchAlgorithm.cancel(false);\n-            mSearchAlgorithm.doSearch(query, mCb);\n+            mSearchAlgorithm.doSearch(mQuery, mCb);\n+        }\n+    }\n+\n+    protected void refreshSearchResult() {\n+        if (mQuery == null) {\n+            return;\n         }\n+        // If play store continues auto updating an app, we want to show partial result.\n+      ",
    "add more tests": "diff --git a/core/cas-server-core-authentication-mfa-api/src/main/java/org/apereo/cas/authentication/trigger/PredicatedPrincipalAttributeMultifactorAuthenticationTrigger.java b/core/cas-server-core-authentication-mfa-api/src/main/java/org/apereo/cas/authentication/trigger/PredicatedPrincipalAttributeMultifactorAuthenticationTrigger.java\nindex 6b2a94c2c0..4f5e383e5b 100644\n--- a/core/cas-server-core-authentication-mfa-api/src/main/java/org/apereo/cas/authentication/trigger/PredicatedPrincipalAttributeMultifactorAuthenticationTrigger.java\n+++ b/core/cas-server-core-authentication-mfa-api/src/main/java/org/apereo/cas/authentication/trigger/PredicatedPrincipalAttributeMultifactorAuthenticationTrigger.java\n@@ -19,6 +19,7 @@ import org.springframework.context.ApplicationContext;\n import org.springframework.core.Ordered;\n \n import javax.servlet.http.HttpServletRequest;\n+\n import java.util.Comparator;\n import java.util.Optional;\n import java.util.function.Predicate;\n@@ -37,6 +38,7 @@ public class PredicatedPrincipalAttributeMultifactorAuthenticationTrigger implem\n     private static final Class[] PREDICATE_CTOR_PARAMETERS = {Object.class, Object.class, Object.class, Object.class};\n \n     private final CasConfigurationProperties casProperties;\n+\n     private final ApplicationContext applicationContext;\n \n     private int order = Ordered.LOWEST_PRECEDENCE;\ndiff --git a/core/cas-server-core-authentication-mfa-api/src/test/java/org/apereo/cas/authentication/MultifactorAuthenticationTestsSuite.java b/core/cas-server-core-authentication-mfa-api/src/test/java/org/apereo/cas/authentication/MultifactorAuthenticationTestsSuite.java\nindex 308895c191..c2c6454f9f 100644\n--- a/core/cas-server-core-authentication-mfa-api/src/test/java/org/apereo/cas/authentication/MultifactorAuthenticationTestsSuite.java\n+++ b/core/cas-server-core-authentication-mfa-api/src/test/java/org/apereo/cas/authentication/MultifactorAuthenticationTestsSuite.java\n@@ -12,6 +12,7 @@ import org.apereo.cas.authentication.mfa.trigger.AuthenticationAttributeMultifac\n import org.apereo.cas.authentication.mfa.trigger.GlobalMultifactorAuthenticationTriggerTests;\n import org.apereo.cas.authentication.mfa.trigger.GroovyScriptMultifactorAuthenticationTriggerTests;\n import org.apereo.cas.authentication.mfa.trigger.HttpRequestMultifactorAuthenticationTriggerTests;\n+import org.apereo.cas.authentication.mfa.trigger.PredicatedPrincipalAttributeMultifactorAuthenticationTriggerTests;\n import org.apereo.cas.authentication.mfa.trigger.PrincipalAttributeMultifactorAuthenticationTriggerTests;\n import org.apereo.cas.authentication.mfa.trigger.RegisteredServiceMultifactorAuthenticationTriggerTests;\n import org.apereo.cas.authentication.mfa.trigger.RegisteredServicePrincipalAttributeMultifactorAuthenticationTriggerTests;\n@@ -38,6 +39,7 @@ import org.junit.runner.RunWith;\n     AdaptiveMultifactorAuthenticationTriggerTests.class,\n     GlobalMultifactorAuthenticationTriggerTests.class,\n     MultifactorAuthenticationUtilsTests.class,\n+    PredicatedPrincipalAttributeMultifactorAuthenticationTriggerTests.class,\n     ScriptedRegisteredServiceMultifactorAuthenticationTriggerTests.class,\n     RegisteredServiceMultifactorAuthenticationTriggerTests.class,\n     RegisteredServicePrincipalAttributeMultifactorAuthenticationTriggerTests.class,\ndiff --git a/core/cas-server-core-authentication-mfa-api/src/test/java/org/apereo/cas/authentication/mfa/trigger/GroovyScriptMultifactorAuthenticationTriggerTests.java b/core/cas-server-core-authentication-mfa-api/src/test/java/org/apereo/cas/authentication/mfa/trigger/GroovyScriptMultifactorAuthenticationTriggerTests.java\nindex 1de953fb7d..3464387306 100644\n--- a/core/cas-server-core-authentication-mfa-api/src/test/java/org/apereo/cas/authentication/mfa/trigger/GroovyScriptMultifactorAuthenticationTriggerTests.java\n+++ b/core/cas-server-core-authentication-mfa-api/src/test/java/org/apereo/cas/authentication/mfa/trigger/GroovyScriptMultifactorAuthenticationTriggerTests.java\n@@ -28,4 +28,35 @@ public class GroovyScriptMultifactorAuthenticationTriggerTests extends BaseMulti\n         val result = trigger.isActivated(authentication, registeredService, this.httpRequest, mock(Service.class));\n         assertTrue(result.isPresent());\n     }\n+\n+    @Test\n+    public void verifyScriptDoesNotExist() {\n+        val props = new CasConfigurationProperties();\n+        var trigger = new GroovyScriptMultifactorAuthenticationTrigger(props, applicationContext);\n+        var result = trigger.isActivated(authentication, registeredService, this.httpRequest, mock(Service.class));\n+        assertFalse(result.isPresent());\n+        \n+        props.getAuthn().getMfa().setGroovyScript(new ClassPathResource(\"DoesNotExist.groovy\"));\n+        trigger = new GroovyScriptMultifactorAuthenticationTrigger(props, applicationContext);\n+        result = trigger.isActivated(authentication, registeredService, this.httpRequest, mock(Service.class));\n+        assertFalse(result.isPresent());\n+    }\n+\n+    @Test\n+    public void verifyBadInputParameters() {\n+        val props = new CasConfigurationProperties();\n+        props.getAuthn().getMfa().setGroovyScript(new ClassPathResource(\"GroovyMfaTrigger.groovy\"));\n+\n+        var trigger = new GroovyScriptMultifactorAuthenticationTrigger(props, applicationContext);\n+        var result = trigger.isActivated(null, registeredService, this.httpRequest, mock(Service.class));\n+        assertFalse(result.isPresent());\n+\n+        result = trigger.isActivated(authentication, null, this.httpRequest, mock(Service.class));\n+        assertFalse(result.isPresent());\n+\n+        result = trigger.isActivated(authentication, registeredService, this.httpRequest, null);\n+        assertFalse(result.isPresent());\n+\n+        trigger.destroy();\n+    }\n }\ndiff --git a/core/cas-server-core-authentication-mfa-api/src/test/java/org/apereo/cas/authentication/mfa/trigger/PredicatedPrincipalAttributeMultifactorAuthenticationTriggerTests.java b/core/cas-server-core-authentication-mfa-api/src/test/java/org/apereo/cas/authentication/mfa/trigger/PredicatedPrincipalAttributeMultifactorAuthenticationTriggerTests.java\nnew file mode 100644\nindex 0000000000..52491d71ff\n--- /dev/null\n+++ b/core/cas-server-core-authentication-mfa-api/src/test/java/org/apereo/cas/authentication/mfa/trigger/PredicatedPrincipalAttributeMultifactorAuthenticationTriggerTests.java\n@@ -0,0 +1,31 @@\n+package org.apereo.cas.authentication.mfa.trigger;\n+\n+import org.apereo.cas.authentication.principal.Service;\n+import org.apereo.cas.authentication.trigger.PredicatedPrincipalAttributeMultifactorAuthenticationTrigger;\n+import org.apereo.cas.configuration.CasConfigurationProperties;\n+\n+import lombok.val;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.core.io.ClassPathResource;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.*;\n+\n+/**\n+ * This is {@link PredicatedPrincipalAttributeMultifactorAuthenticationTriggerTests}.\n+ *\n+ * @author Misagh Moayyed\n+ * @since 6.2.0\n+ */\n+@Tag(\"MFA\")\n+public class PredicatedPrincipalAttributeMultifactorAuthenticationTriggerTests extends BaseMultifactorAuthenticationTriggerTests {\n+    @Test\n+    public void verifyOperationByHeader() {\n+        val props = new CasConfigurationProperties();\n+        props.getAuthn().getMfa().setGlobalPrincipalAttributePredicate(new ClassPathResource(\"GroovyPredicate.groovy\"));\n+        val trigger = new PredicatedPrincipalAttributeMultifactorAuthenticationTrigger(props, this.applicationContext);\n+        val result = trigger.isActivated(authentication, registeredService, this.httpRequest, mock(Service.class));\n+        assertTrue(result.isPresent());\n+    }\n+}\ndiff --git a/core/cas-server-core-authentication-mfa-api/src/test/resources/GroovyPredicate.groovy b/core/cas-server-core-authentication-mfa-api/src/test/resources/GroovyPredicate.groovy\nnew file mode 100644\nindex 0000000000..d71d049a13\n--- /dev/null\n+++ b/core/cas-server-core-authentication-mfa-api/src/test/resources/GroovyPredicate.groovy\n@@ -0,0 +1,18 @@\n+import groovy.transform.TupleConstructor\n+import org.apereo.cas.authentication.principal.Principal\n+import org.apereo.cas.authentication.principal.Service\n+\n+import java.util.function.Predicate\n+\n+@TupleConstructor\n+class GroovyPredicate implements Predicate {\n+    Object service;\n+    Object principal;\n+    Object providers\n+    Object logger;\n+\n+    @Override\n+    boolean test(final Object o) {\n+        return true\n+    }\n+}\ndiff --git a/core/cas-server-core-util-api/src/main/java/org/apereo/cas/util/crypto/GlibcCryptPasswordEncoder.java b/core/cas-server-core-util-api/src/main/java/org/apereo/cas/util/crypto/GlibcCryptPasswordEncoder.java\nindex 9fb0506815..62b251c478 100644\n--- a/core/cas-server-core-util-api/src/main/java/org/apereo/cas/util/crypto/GlibcCryptPasswordEncoder.java\n+++ b/core/cas-server-core-util-api/src/main/java/org/apereo/cas/util/crypto/GlibcCryptPasswordEncoder.java\n@@ -22,7 +22,9 @@ public class GlibcCryptPasswordEncoder implements PasswordEncoder {\n     private static final int SALT_LENGTH = 8;\r\n \r\n     private final String encodingAlgorithm;\r\n+\r\n     private final int strength;\r\n+\r\n     private String secret;\r\n \r\n     @Override\r\ndiff --git a/core/cas-server-core-util-api/src/main/java/org/apereo/cas/util/scripting/ScriptingUtils.java b/core/cas-server-core-util-api/src/main/java/org/apereo/cas/util/scripting/ScriptingUtils.java\nindex a4a7c0903a..94957ace83 100644\n--- a/core/cas-server-core-util-api/src/main/java/org/apereo/cas/util/scripting/ScriptingUtils.java\n+++ b/core/cas-server-core-util-api/src/main/java/org/apereo/cas/util/scripting/ScriptingUtils.java\n@@ -522,7 +522,7 @@ public class ScriptingUtils {\n                 return classLoader.parseClass(script);\n             });\n \n-            LOGGER.debug(\"Preparing constructor arguments [{}] for resource [{}]\", args, resource);\n+            LOGGER.trace(\"Preparing constructor arguments [{}] for resource [{}]\", args, resource);\n             val ctor = clazz.getDeclaredConstructor(constructorArgs);\n             val result = ctor.newInstance(args);\n \ndiff --git a/core/cas-server-core-util-api/src/test/java/org/apereo/cas/util/crypto/GlibcCryptPasswordEncoderTests.java b/core/cas-server-core-util-api/src/test/java/org/apereo/cas/util/crypto/GlibcCryptPasswordEncoderTests.java\nindex f37d162b92..51bf91c159 100644\n--- a/core/cas-server-core-util-api/src/test/java/org/apereo/cas/util/crypto/GlibcCryptPasswordEncoderTests.java\n+++ b/core/cas-server-core-util-api/src/test/java/org/apereo/cas/util/crypto/GlibcCryptPasswordEncoderTests.java\n@@ -17,6 +17,25 @@ public class GlibcCryptPasswordEncoderTests {\n \r\n     private static final String PASSWORD_CLEAR = \"12345abcDEF!$\";\r\n \r\n+    private static boolean testEncodingRoundtrip(final String algorithm) {\r\n+        val encoder = new GlibcCryptPasswordEncoder(algorithm, 0, null);\r\n+\r\n+        val passwordHash = encoder.encode(PASSWORD_CLEAR);\r\n+        LOGGER.debug(\"Password [{}] was encoded by algorithm [{}] to hash [{}]\", PASSWORD_CLEAR, algorithm, passwordHash);\r\n+\r\n+        val match = encoder.matches(PASSWORD_CLEAR, passwordHash);\r\n+        LOGGER.debug(\"Does password [{}] match original password [{}]: [{}]\", passwordHash, PASSWORD_CLEAR, match);\r\n+\r\n+        return match;\r\n+    }\r\n+\r\n+    private static boolean testMatchWithDifferentSalt(final String algorithm, final String encodedPassword) {\r\n+        val encoder = new GlibcCryptPasswordEncoder(algorithm, 0, null);\r\n+        val match = encoder.matches(PASSWORD_CLEAR, encodedPassword);\r\n+        LOGGER.debug(\"Does password [{}] match original password [{}]: [{}]\", encodedPassword, PASSWORD_CLEAR, match);\r\n+        return match;\r\n+    }\r\n+\r\n     @Test\r\n     public void sha512EncodingTest() {\r\n         assertTrue(testEncodingRoundtrip(\"SHA-512\"));\r\n@@ -45,23 +64,4 @@ public class GlibcCryptPasswordEncoderTests {\n         assertTrue(testMatchWithDifferentSalt(\"aB\", \"aB4fMcNOggJoQ\"));\r\n     }\r\n \r\n-    private static boolean testEncodingRoundtrip(final String algorithm) {\r\n-        val encoder = new GlibcCryptPasswordEncoder(algorithm, 0, null);\r\n-\r\n-        val passwordHash = encoder.encode(PASSWORD_CLEAR);\r\n-        LOGGER.debug(\"Password [{}] was encoded by algorithm [{}] to hash [{}]\", PASSWORD_CLEAR, algorithm, passwordHash);\r\n-\r\n-        val match = encoder.matches(PASSWORD_CLEAR, passwordHash);\r\n-        LOGGER.debug(\"Does password [{}] match original password [{}]: [{}]\", passwordHash, PASSWORD_CLEAR, match);\r\n-\r\n-        return match;\r\n-    }\r\n-\r\n-    private static boolean testMatchWithDifferentSalt(final String algorithm, final String encodedPassword) {\r\n-        val encoder = new GlibcCryptPasswordEncoder(algorithm, 0, null);\r\n-        val match = encoder.matches(PASSWORD_CLEAR, encodedPassword);\r\n-        LOGGER.debug(\"Does password [{}] match original password [{}]: [{}]\", encodedPassword, PASSWORD_CLEAR, match);\r\n-        return match;\r\n-    }\r\n-\r\n }\r\ndiff --git a/gradle.properties b/gradle.properties\nindex 43ec97ec74..1f78ecdedb 100644\n--- a/gradle.properties\n+++ b/gradle.properties\n@@ -56,7 +56,7 @@ istackVersion=3.0.10\n spotbugsVersion=4.0.0\n spotbugsContribVersion=7.4.7\n findbugsSecVersion=1.10.1\n-checkstyleVersion=8.29\n+checkstyleVersion=8.30\n gradleRetryVersion=1.1.1\n gradleGitVersion=2.2.2\n gradleLombokVersion=3.3.0\ndiff --git a/support/cas-server-support-aup-jdbc/src/test/java/org/apereo/cas/aup/BaseJdbcAcceptableUsagePolicyRepositoryTests.java b/support/cas-server-support-aup-jdbc/src/test/java/org/apereo/cas/aup/BaseJdbcAcceptableUsagePolicyRepositoryTests.java\nindex 78d13579f3..e9022de979 100644\n--- a/support/cas-server-support-aup-jdbc/src/test/java/org/apereo/cas/aup/BaseJdbcAcceptableUsagePolicyRepositoryTests.java\n+++ b/support/cas-server-support-aup-jdbc/src/test/java/org/apereo/cas/aup/BaseJdbcAcceptableUsagePolicyRepositoryTests.java\n@@ -95,11 +95,6 @@ public abstract class BaseJdbcAcceptableUsagePolicyRepositoryTests extends BaseA\n     @Autowired\r\n     protected CasConfigurationProperties casProperties;\r\n \r\n-    @Override\r\n-    public boolean hasLiveUpdates() {\r\n-        return false;\r\n-    }\r\n-\r\n     protected String determinePrincipalId(final String actualPrincipalId, final Map<String, List<Object>> profileAttributes) {\r\n         val aupProperties = casProperties.getAcceptableUsagePolicy();\r\n         val jdbcAupRepository = new JdbcAcceptableUsagePolicyRepository(ticketRegistrySupport.getObject(),\r\n@@ -120,4 +115,9 @@ public abstract class BaseJdbcAcceptableUsagePolicyRepositoryTests extends BaseA\n     public AcceptableUsagePolicyRepository getAcceptableUsagePolicyRepository() {\r\n         return acceptableUsagePolicyRepository.getObject();\r\n     }\r\n+\r\n+    @Override\r\n+    public boolean hasLiveUpdates() {\r\n+        return false;\r\n+    }\r\n }\r\ndiff --git a/support/cas-server-support-aup-jdbc/src/test/java/org/apereo/cas/aup/JdbcAcceptableUsagePolicyRepositoryAdvancedTests.java b/support/cas-server-support-aup-jdbc/src/test/java/org/apereo/cas/aup/JdbcAcceptableUsagePolicyRepositoryAdvancedTests.java\nindex 300a30709e..0646c6f5ed 100644\n--- a/support/cas-server-support-aup-jdbc/src/test/java/org/apereo/cas/aup/JdbcAcceptableUsagePolicyRepositoryAdvancedTests.java\n+++ b/support/cas-server-support-aup-jdbc/src/test/java/org/apereo/cas/aup/JdbcAcceptableUsagePolicyRepositoryAdvancedTests.java\n@@ -49,7 +49,7 @@ public class JdbcAcceptableUsagePolicyRepositoryAdvancedTests extends BaseJdbcAc\n             }\r\n         }\r\n     }\r\n-    \r\n+\r\n     @AfterEach\r\n     public void cleanup() throws SQLException {\r\n         try (val c = this.acceptableUsagePolicyDataSource.getObject().getConnection()) {\r\n@@ -65,14 +65,14 @@ public class JdbcAcceptableUsagePolicyRepositoryAdvancedTests extends BaseJdbcAc\n         verifyRepositoryAction(\"casuser\",\r\n             CollectionUtils.wrap(\"aupAccepted\", List.of(\"false\"), \"email\", List.of(\"CASuser@example.org\")));\r\n     }\r\n-    \r\n+\r\n     @Test\r\n     public void determinePrincipalIdWithAdvancedConfig() {\r\n         val principalId = determinePrincipalId(\"casuser\",\r\n             CollectionUtils.wrap(\"aupAccepted\", List.of(\"false\"), \"email\", List.of(\"CASuser@example.org\")));\r\n         assertEquals(\"CASuser@example.org\", principalId);\r\n     }\r\n-    \r\n+\r\n     @Test\r\n     public void raiseMissingPrincipalAttributeError() {\r\n         val exception = assertThrows(IllegalStateException.class,\r\n@@ -80,29 +80,29 @@ public class JdbcAcceptableUsagePolicyRepositoryAdvancedTests extends BaseJdbcAc\n                 List.of(\"CASuser@example.org\"))));\r\n         assertTrue(exception.getMessage().contains(\"cannot be found\"));\r\n     }\r\n-    \r\n+\r\n     @Test\r\n     public void raiseEmptyPrincipalAttributeError() {\r\n         val exception = assertThrows(IllegalStateException.class,\r\n             () -> raiseException(CollectionUtils.wrap(\"aupAccepted\", List.of(\"false\"), \"email\", new ArrayList<>())));\r\n         assertTrue(exception.getMessage().contains(\"empty or multi-valued with an empty element\"));\r\n     }\r\n-    \r\n+\r\n     private void raiseException(final Map<String, List<Object>> profileAttributes) {\r\n         val aupProperties = casProperties.getAcceptableUsagePolicy();\r\n         val jdbcAupRepository = new JdbcAcceptableUsagePolicyRepository(ticketRegistrySupport.getObject(),\r\n-                aupProperties.getAupAttributeName(),\r\n+            aupProperties.getAupAttributeName(),\r\n             acceptableUsagePolicyDataSource.getObject(), aupProperties);\r\n-        \r\n+\r\n         val context = new MockRequestContext();\r\n         val request = new MockHttpServletRequest();\r\n         context.setExternalContext(new ServletExternalContext(new MockServletContext(), request, new MockHttpServletResponse()));\r\n-        \r\n+\r\n         val c = CoreAuthenticationTestUtils.getCredentialsWithSameUsernameAndPassword(\"casuser\");\r\n         val principal = CoreAuthenticationTestUtils.getPrincipal(c.getId(), profileAttributes);\r\n         val auth = CoreAuthenticationTestUtils.getAuthentication(principal);\r\n         WebUtils.putAuthentication(auth, context);\r\n-        \r\n+\r\n         jdbcAupRepository.determinePrincipalId(context, c);\r\n     }\r\n }\r\ndiff --git a/support/cas-server-support-openid/src/main/java/org/apereo/cas/support/openid/web/mvc/SmartOpenIdController.java b/support/cas-server-support-openid/src/main/java/org/apereo/cas/support/openid/web/mvc/SmartOpenIdController.java\nindex 6452a2d6a0..dbcc5a0cf6 100644\n--- a/support/cas-server-support-openid/src/main/java/org/apereo/cas/support/openid/web/mvc/SmartOpenIdController.java\n+++ b/support/cas-server-support-openid/src/main/java/org/apereo/cas/support/openid/web/mvc/SmartOpenIdController.java\n@@ -15,6 +15,7 @@ import org.springframework.web.servlet.View;\n \r\n import javax.servlet.http.HttpServletRequest;\r\n import javax.servlet.http.HttpServletResponse;\r\n+\r\n import java.io.Serializable;\r\n import java.util.HashMap;\r\n import java.util.Map;\r\n@@ -33,6 +34,7 @@ public class SmartOpenIdController extends AbstractDelegateController implements\n     private static final long serialVersionUID = -594058549445950430L;\r\n \r\n     private final transient ServerManager serverManager;\r\n+\r\n     private final transient View successView;\r\n \r\n     /**\r\n@@ -62,12 +64,6 @@ public class SmartOpenIdController extends AbstractDelegateController implements\n         return responseParams;\r\n     }\r\n \r\n-    @Override\r\n-    protected ModelAndView handleRequestInternal(final HttpServletRequest request, final HttpServletResponse response) {\r\n-        val parameters = new HashMap<String, String>(getAssociationResponse(request));\r\n-        return new ModelAndView(this.successView, parameters);\r\n-    }\r\n-\r\n     @Override\r\n     public boolean canHandle(final HttpServletRequest request, final HttpServletResponse response) {\r\n         val openIdMode = request.getParameter(OpenIdProtocolConstants.OPENID_MODE);\r\n@@ -78,4 +74,10 @@ public class SmartOpenIdController extends AbstractDelegateController implements\n         LOGGER.info(\"Cannot handle request. openid.mode : [{}]\", openIdMode);\r\n         return false;\r\n     }\r\n+\r\n+    @Override\r\n+    protected ModelAndView handleRequestInternal(final HttpServletRequest request, final HttpServletResponse response) {\r\n+        val parameters = new HashMap<String, String>(getAssociationResponse(request));\r\n+        return new ModelAndView(this.successView, parameters);\r\n+    }\r\n }\r\ndiff --git a/support/cas-server-support-spnego-webflow/src/main/java/org/apereo/cas/web/flow/client/LdapSpnegoKnownClientSystemsFilterAction.java b/support/cas-server-support-spnego-webflow/src/main/java/org/apereo/cas/web/flow/client/LdapSpnegoKnownClientSystemsFilterAction.java\nindex 88873317d8..cfe20537e5 100644\n--- a/support/cas-server-support-spnego-webflow/src/main/java/org/apereo/cas/web/flow/client/LdapSpnegoKnownClientSystemsFilterAction.java\n+++ b/support/cas-server-support-spnego-webflow/src/main/java/org/apereo/cas/web/flow/client/LdapSpnegoKnownClientSystemsFilterAction.java\n@@ -25,6 +25,7 @@ public class LdapSpnegoKnownClientSystemsFilterAction extends BaseSpnegoKnownCli\n      * The must-have attribute name.\r\n      */\r\n     private final String spnegoAttributeName;\r\n+\r\n     private final SearchOperation searchOperation;\r\n \r\n     /**\r\ndiff --git a/support/cas-server-support-spnego-webflow/src/main/java/org/apereo/cas/web/flow/config/SpnegoWebflowActionsConfiguration.java b/support/cas-server-support-spnego-webflow/src/main/java/org/apereo/cas/web/flow/config/SpnegoWebflowActionsConfiguration.java\nindex 4e5d36dcc2..5c8886ecd2 100644\n--- a/support/cas-server-support-spnego-webflow/src/main/java/org/apereo/cas/web/flow/config/SpnegoWebflowActionsConfiguration.java\n+++ b/support/cas-server-support-spnego-webflow/src/main/java/org/apereo/cas/web/flow/config/SpnegoWebflowActionsConfiguration.java\n@@ -102,7 +102,7 @@ public class SpnegoWebflowActionsConfiguration {\n         val searchRequest = LdapUtils.newLdaptiveSearchRequest(spnegoProperties.getLdap().getBaseDn(), filter);\r\n         val searchOperation = new SearchOperation(connectionFactory, searchRequest);\r\n         searchOperation.setTemplate(filter);\r\n-        \r\n+\r\n         return new LdapSpnegoKnownClientSystemsFilterAction(RegexUtils.createPattern(spnegoProperties.getIpsToCheckPattern()),\r\n             spnegoProperties.getAlternativeRemoteHostAttribute(),\r\n             Beans.newDuration(spnegoProperties.getDnsTimeout()).toMillis(),\r",
    "Fixed a bug that lead to stack overflows in certain situations .": "diff --git a/src/components/org/apache/jmeter/control/RandomController.java b/src/components/org/apache/jmeter/control/RandomController.java\nindex ed7fdc0f7f..4e26c4d4c8 100644\n--- a/src/components/org/apache/jmeter/control/RandomController.java\n+++ b/src/components/org/apache/jmeter/control/RandomController.java\n@@ -89,6 +89,7 @@ public class RandomController\n \t */\n \tprotected void incrementCurrent()\n \t{\n+\t\tsuper.incrementCurrent();\n \t\tcurrent = rand.nextInt(this.getSubControllers().size());\n \t}\n ",
    "Make CharStream . init ( CharStream ) required ( in the Swift runtime ) . .": "diff --git a/runtime/Swift/Sources/Antlr4/Lexer.swift b/runtime/Swift/Sources/Antlr4/Lexer.swift\nindex e47aa1a93..453d92aac 100644\n--- a/runtime/Swift/Sources/Antlr4/Lexer.swift\n+++ b/runtime/Swift/Sources/Antlr4/Lexer.swift\n@@ -92,7 +92,7 @@ open class Lexer: Recognizer<LexerATNSimulator>, TokenSource {\n         self._tokenFactorySourcePair.tokenSource = self\n     }\n \n-    public init(_ input: CharStream) {\n+    public required init(_ input: CharStream) {\n         self._input = input\n         self._tokenFactorySourcePair = TokenSourceAndStream()\n         super.init()\ndiff --git a/runtime/Swift/Sources/Antlr4/LexerInterpreter.swift b/runtime/Swift/Sources/Antlr4/LexerInterpreter.swift\nindex 99d9f72d8..815ee5c3a 100644\n--- a/runtime/Swift/Sources/Antlr4/LexerInterpreter.swift\n+++ b/runtime/Swift/Sources/Antlr4/LexerInterpreter.swift\n@@ -18,19 +18,6 @@ public class LexerInterpreter: Lexer {\n     internal final var _decisionToDFA: [DFA]\n     internal final var _sharedContextCache = PredictionContextCache()\n \n-//   public override init() {\n-//    super.init()}\n-\n-//    public  convenience   init(_ input : CharStream) {\n-//        self.init()\n-//        self._input = input;\n-//        self._tokenFactorySourcePair = (self, input);\n-//    }\n-    //@Deprecated\n-    public convenience init(_ grammarFileName: String, _ tokenNames: Array<String?>?, _ ruleNames: Array<String>, _ channelNames: Array<String>, _ modeNames: Array<String>, _ atn: ATN, _ input: CharStream) throws {\n-        try self.init(grammarFileName, Vocabulary.fromTokenNames(tokenNames), ruleNames, channelNames, modeNames, atn, input)\n-    }\n-\n     public init(_ grammarFileName: String, _ vocabulary: Vocabulary, _ ruleNames: Array<String>, _ channelNames: Array<String>, _ modeNames: Array<String>, _ atn: ATN, _ input: CharStream) throws {\n \n         self.grammarFileName = grammarFileName\n@@ -54,6 +41,10 @@ public class LexerInterpreter: Lexer {\n         }\n     }\n \n+    public required init(_ input: CharStream) {\n+        fatalError(\"Use the other initializer\")\n+    }\n+\n     override\n     public func getATN() -> ATN {\n         return atn\ndiff --git a/tool/resources/org/antlr/v4/tool/templates/codegen/Swift/Swift.stg b/tool/resources/org/antlr/v4/tool/templates/codegen/Swift/Swift.stg\nindex 2cae8daf2..6586a3878 100755\n--- a/tool/resources/org/antlr/v4/tool/templates/codegen/Swift/Swift.stg\n+++ b/tool/resources/org/antlr/v4/tool/templates/codegen/Swift/Swift.stg\n@@ -964,7 +964,7 @@ open class <lexer.name>: <superClass; null=\"Lexer\"> {\n         return <lexer.name>.VOCABULARY\n     }\n \n-\tpublic override init(_ input: CharStream) {\n+\tpublic required init(_ input: CharStream) {\n \t    RuntimeMetaData.checkVersion(\"<lexerFile.ANTLRVersion>\", RuntimeMetaData.VERSION)\n \t\tsuper.init(input)\n \t\t_interp = LexerATNSimulator(self, <lexer.name>._ATN, <lexer.name>._decisionToDFA, <lexer.name>._sharedContextCache)",
    "Remove references to obsolete bdb property from example configs .": "diff --git a/config/single_node_cluster/config/server.properties b/config/single_node_cluster/config/server.properties\nindex 37f9c3244..eb74fffb2 100644\n--- a/config/single_node_cluster/config/server.properties\n+++ b/config/single_node_cluster/config/server.properties\n@@ -9,7 +9,8 @@ http.enable=true\n socket.enable=true\n \n # BDB\n-bdb.sync.transactions=false\n+bdb.write.transactions=false\n+bdb.flush.transactions=false\n bdb.cache.size=1G\n \n # Mysql\ndiff --git a/config/test_config1/config/server.properties b/config/test_config1/config/server.properties\nindex b5dfe8392..b2862ad9b 100644\n--- a/config/test_config1/config/server.properties\n+++ b/config/test_config1/config/server.properties\n@@ -10,7 +10,8 @@ socket.enable=true\n jmx.enable=true\n \n # BDB\n-bdb.sync.transactions=false\n+bdb.write.transactions=false\n+bdb.flush.transactions=false\n bdb.cache.size=100MB\n \n # Mysql\ndiff --git a/config/test_config2/config/server.properties b/config/test_config2/config/server.properties\nindex fa8f77eb9..c423f7c8f 100644\n--- a/config/test_config2/config/server.properties\n+++ b/config/test_config2/config/server.properties\n@@ -1,5 +1,6 @@\n # The size of the in-memory cache used by bdb\n-bdb.sync.transactions=false\n+bdb.write.transactions=false\n+bdb.flush.transactions=false\n bdb.cache.size=100MB\n \n max.threads=100",
    "Resolve spinlock issue in AcceptorExecutor thread ( <issue_id> )": "diff --git a/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java b/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java\nindex e5baae40..42fadd87 100644\n--- a/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java\n+++ b/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java\n@@ -222,13 +222,14 @@ class AcceptorExecutor<ID, T> {\n                 drainReprocessQueue();\n                 drainAcceptorQueue();\n \n-                if (!isShutdown.get()) {\n-                    // If all queues are empty, block for a while on the acceptor queue\n-                    if (reprocessQueue.isEmpty() && acceptorQueue.isEmpty() && pendingTasks.isEmpty()) {\n-                        TaskHolder<ID, T> taskHolder = acceptorQueue.poll(10, TimeUnit.MILLISECONDS);\n-                        if (taskHolder != null) {\n-                            appendTaskHolder(taskHolder);\n-                        }\n+                if (isShutdown.get()) {\n+                    break;\n+                }\n+         ",
    "throw JWTDecodeException when date claim format is invalid": "diff --git a/lib/src/main/java/com/auth0/jwt/impl/PayloadDeserializer.java b/lib/src/main/java/com/auth0/jwt/impl/PayloadDeserializer.java\nindex 3806887..8f872cb 100644\n--- a/lib/src/main/java/com/auth0/jwt/impl/PayloadDeserializer.java\n+++ b/lib/src/main/java/com/auth0/jwt/impl/PayloadDeserializer.java\n@@ -65,9 +65,12 @@ class PayloadDeserializer extends StdDeserializer<Payload> {\n \n     Date getDateFromSeconds(Map<String, JsonNode> tree, String claimName) {\n         JsonNode node = tree.get(claimName);\n-        if (node == null || node.isNull() || !node.canConvertToLong()) {\n+        if (node == null || node.isNull()) {\n             return null;\n         }\n+        if (!node.canConvertToLong()) {\n+            throw new JWTDecodeException(String.format(\"The claim '%s' contained an unexpected value.\", claimName));\n+        }\n         final long ms = node.asLong() * 1000;\n         return new Date(ms);\n     }\ndiff --git a/lib/src/test/java/com/auth0/jwt/JWTDecoderTest.java b/lib/src/test/java/com/auth0/jwt/JWTDecoderTest.java\nindex a482685..e164dc0 100644\n--- a/lib/src/test/java/com/auth0/jwt/JWTDecoderTest.java\n+++ b/lib/src/test/java/com/auth0/jwt/JWTDecoderTest.java\n@@ -275,7 +275,7 @@ public class JWTDecoderTest {\n \n     @Test\n     public void shouldGetAvailableClaims() throws Exception {\n-        DecodedJWT jwt = JWT.decode(\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoiMTIzNDU2Nzg5MCIsIm5iZiI6IjEyMzQ1Njc4OTAiLCJqdGkiOiJodHRwczovL2p3dC5pby8iLCJhdWQiOiJodHRwczovL2RvbWFpbi5hdXRoMC5jb20iLCJzdWIiOiJsb2dpbiIsImlzcyI6ImF1dGgwIiwiZXh0cmFDbGFpbSI6IkpvaG4gRG9lIn0.TX9Ct4feGp9YyeGK9Zl91tO0YBOrguJ4As9jeqgHdZQ\");\n+        DecodedJWT jwt = JWT.decode(\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjEyMzQ1Njc4OTAsImlhdCI6MTIzNDU2Nzg5MCwibmJmIjoxMjM0NTY3ODkwLCJqdGkiOiJodHRwczovL2p3dC5pby8iLCJhdWQiOiJodHRwczovL2RvbWFpbi5hdXRoMC5jb20iLCJzdWIiOiJsb2dpbiIsImlzcyI6ImF1dGgwIiwiZXh0cmFDbGFpbSI6IkpvaG4gRG9lIn0.2_0nxDPJwOk64U5V5V9pt8U92jTPJbGsHYQ35HYhbdE\");\n         assertThat(jwt, is(notNullValue()));\n         assertThat(jwt.getClaims(), is(notNullValue()));\n         assertThat(jwt.getClaims(), is(instanceOf(Map.class)));\ndiff --git a/lib/src/test/java/com/auth0/jwt/impl/PayloadDeserializerTest.java b/lib/src/test/java/com/auth0/jwt/impl/PayloadDeserializerTest.java\nindex 014ae83..7fe9145 100644\n--- a/lib/src/test/java/com/auth0/jwt/impl/PayloadDeserializerTest.java\n+++ b/lib/src/test/java/com/auth0/jwt/impl/PayloadDeserializerTest.java\n@@ -198,13 +198,15 @@ public class PayloadDeserializerTest {\n     }\n \n     @Test\n-    public void shouldGetNullDateWhenParsingNonNumericNode() throws Exception {\n+    public void shouldThrowWhenParsingNonNumericNode() throws Exception {\n+        exception.expect(JWTDecodeException.class);\n+        exception.expectMessage(\"The claim 'key' contained an unexpected value.\");\n+\n         Map<String, JsonNode> tree = new HashMap<>();\n         TextNode node = new TextNode(\"123456789\");\n         tree.put(\"key\", node);\n \n-        Date date = deserializer.getDateFromSeconds(tree, \"key\");\n-        assertThat(date, is(nullValue()));\n+        deserializer.getDateFromSeconds(tree, \"key\");\n     }\n \n     @Test",
    "Added tag jdk8 - b41 for changeset c029c972396c": "diff --git a/.hgtags b/.hgtags\nindex e583046c16..bd28104aa7 100644\n--- a/.hgtags\n+++ b/.hgtags\n@@ -162,3 +162,4 @@ b3a91113026c99b0da010d41055719ab0d8938f0 jdk8-b37\n 4cc5610a6dd6227da766ebf9742eb11ff5ded6c0 jdk8-b38\n 35a5397278779a2f8f3013f81586dc8f30cb149d jdk8-b39\n 6e4e654931b976304bf6e7b4d0d6db8f75bac5d9 jdk8-b40\n+c029c972396cea042a0dc67c0f7ccf2fe68007d4 jdk8-b41",
    "Reduced visibility for Sum , Min , Max , Mean combine Fns .": "diff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Max.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Max.java\nindex f6460b6d12..91851bcbe9 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Max.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Max.java\n@@ -212,14 +212,7 @@ public class Max {\n \n   /////////////////////////////////////////////////////////////////////////////\n \n-  /**\n-   * A {@code CombineFn} that computes the maximum of a collection of elements of type {@code T}\n-   * using an arbitrary {@link Comparator}, useful as an argument to {@link Combine#globally} or\n-   * {@link Combine#perKey}.\n-   *\n-   * @param <T> the type of the values being compared\n-   */\n-  public static class MaxFn<T> extends BinaryCombineFn<T> {\n+  private static class MaxFn<T> extends BinaryCombineFn<T> {\n \n     private final T identity;\n     private final Comparator<? super T> comparator;\n@@ -248,11 +241,7 @@ public class Max {\n     }\n   }\n \n-  /**\n-   * A {@code CombineFn} that computes the maximum of a collection of {@code Integer}s, useful as an\n-   * argument to {@link Combine#globally} or {@link Combine#perKey}.\n-   */\n-  public static class MaxIntegerFn extends Combine.BinaryCombineIntegerFn {\n+  private static class MaxIntegerFn extends Combine.BinaryCombineIntegerFn {\n \n     @Override\n     public int apply(int left, int right) {\n@@ -265,11 +254,7 @@ public class Max {\n     }\n   }\n \n-  /**\n-   * A {@code CombineFn} that computes the maximum of a collection of {@code Long}s, useful as an\n-   * argument to {@link Combine#globally} or {@link Combine#perKey}.\n-   */\n-  public static class MaxLongFn extends Combine.BinaryCombineLongFn {\n+  private static class MaxLongFn extends Combine.BinaryCombineLongFn {\n \n     @Override\n     public long apply(long left, long right) {\n@@ -282,11 +267,7 @@ public class Max {\n     }\n   }\n \n-  /**\n-   * A {@code CombineFn} that computes the maximum of a collection of {@code Double}s, useful as an\n-   * argument to {@link Combine#globally} or {@link Combine#perKey}.\n-   */\n-  public static class MaxDoubleFn extends Combine.BinaryCombineDoubleFn {\n+  private static class MaxDoubleFn extends Combine.BinaryCombineDoubleFn {\n \n     @Override\n     public double apply(double left, double right) {\ndiff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Mean.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Mean.java\nindex 17dbe6cf42..5e7c00317a 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Mean.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Mean.java\n@@ -101,17 +101,7 @@ public class Mean {\n \n   /////////////////////////////////////////////////////////////////////////////\n \n-  /**\n-   * A {@code Combine.CombineFn} that computes the arithmetic mean\n-   * (a.k.a. average) of an {@code Iterable} of numbers of type\n-   * {@code N}, useful as an argument to {@link Combine#globally} or\n-   * {@link Combine#perKey}.\n-   *\n-   * <p>Returns {@code Double.NaN} if combining zero elements.\n-   *\n-   * @param <NumT> the type of the {@code Number}s being combined\n-   */\n-  public static class MeanFn<NumT extends Number>\n+  private static class MeanFn<NumT extends Number>\n   extends Combine.AccumulatingCombineFn<NumT, CountSum<NumT>, Double> {\n     /**\n      * Constructs a combining function that computes the mean over\ndiff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Min.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Min.java\nindex 47d831ceb7..109f4e5cb5 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Min.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Min.java\n@@ -212,14 +212,7 @@ public class Min {\n \n   /////////////////////////////////////////////////////////////////////////////\n \n-  /**\n-   * A {@code CombineFn} that computes the maximum of a collection of elements of type {@code T}\n-   * using an arbitrary {@link Comparator}, useful as an argument to {@link Combine#globally} or\n-   * {@link Combine#perKey}.\n-   *\n-   * @param <T> the type of the values being compared\n-   */\n-  public static class MinFn<T> extends BinaryCombineFn<T> {\n+  private static class MinFn<T> extends BinaryCombineFn<T> {\n \n     private final T identity;\n     private final Comparator<? super T> comparator;\n@@ -248,11 +241,7 @@ public class Min {\n     }\n   }\n \n-  /**\n-   * A {@code CombineFn} that computes the minimum of a collection of {@code Integer}s, useful as an\n-   * argument to {@link Combine#globally} or {@link Combine#perKey}.\n-   */\n-  public static class MinIntegerFn extends Combine.BinaryCombineIntegerFn {\n+  private static class MinIntegerFn extends Combine.BinaryCombineIntegerFn {\n \n     @Override\n     public int apply(int left, int right) {\n@@ -265,11 +254,7 @@ public class Min {\n     }\n   }\n \n-  /**\n-   * A {@code CombineFn} that computes the minimum of a collection of {@code Long}s, useful as an\n-   * argument to {@link Combine#globally} or {@link Combine#perKey}.\n-   */\n-  public static class MinLongFn extends Combine.BinaryCombineLongFn {\n+  private static class MinLongFn extends Combine.BinaryCombineLongFn {\n \n     @Override\n     public long apply(long left, long right) {\n@@ -282,11 +267,7 @@ public class Min {\n     }\n   }\n \n-  /**\n-   * A {@code CombineFn} that computes the minimum of a collection of {@code Double}s, useful as an\n-   * argument to {@link Combine#globally} or {@link Combine#perKey}.\n-   */\n-  public static class MinDoubleFn extends Combine.BinaryCombineDoubleFn {\n+  private static class MinDoubleFn extends Combine.BinaryCombineDoubleFn {\n \n     @Override\n     public double apply(double left, double right) {\ndiff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Sum.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Sum.java\nindex 504473240d..ccade4db70 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Sum.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Sum.java\n@@ -140,12 +140,7 @@ public class Sum {\n \n   /////////////////////////////////////////////////////////////////////////////\n \n-  /**\n-   * A {@code SerializableFunction} that computes the sum of an\n-   * {@code Iterable} of {@code Integer}s, useful as an argument to\n-   * {@link Combine#globally} or {@link Combine#perKey}.\n-   */\n-  public static class SumIntegerFn extends Combine.BinaryCombineIntegerFn {\n+  private static class SumIntegerFn extends Combine.BinaryCombineIntegerFn {\n \n     @Override\n     public int apply(int a, int b) {\n@@ -158,12 +153,7 @@ public class Sum {\n     }\n   }\n \n-  /**\n-   * A {@code SerializableFunction} that computes the sum of an\n-   * {@code Iterable} of {@code Long}s, useful as an argument to\n-   * {@link Combine#globally} or {@link Combine#perKey}.\n-   */\n-  public static class SumLongFn extends Combine.BinaryCombineLongFn {\n+  private static class SumLongFn extends Combine.BinaryCombineLongFn {\n \n     @Override\n     public long apply(long a, long b) {\n@@ -176,12 +166,7 @@ public class Sum {\n     }\n   }\n \n-  /**\n-   * A {@code SerializableFunction} that computes the sum of an\n-   * {@code Iterable} of {@code Double}s, useful as an argument to\n-   * {@link Combine#globally} or {@link Combine#perKey}.\n-   */\n-  public static class SumDoubleFn extends Combine.BinaryCombineDoubleFn {\n+  private static class SumDoubleFn extends Combine.BinaryCombineDoubleFn {\n \n     @Override\n     public double apply(double a, double b) {",
    "Delete two import": "diff --git a/engine/src/main/java/org/terasology/rendering/nui/layers/ingame/PauseMenu.java b/engine/src/main/java/org/terasology/rendering/nui/layers/ingame/PauseMenu.java\nindex 02492aeba..972cd1253 100644\n--- a/engine/src/main/java/org/terasology/rendering/nui/layers/ingame/PauseMenu.java\n+++ b/engine/src/main/java/org/terasology/rendering/nui/layers/ingame/PauseMenu.java\n@@ -15,9 +15,7 @@\n  */\n package org.terasology.rendering.nui.layers.ingame;\n \n-import org.terasology.crashreporter.CrashReporter;\n import org.terasology.engine.GameEngine;\n-import org.terasology.engine.LoggingContext;\n import org.terasology.engine.modes.StateMainMenu;\n import org.terasology.registry.CoreRegistry;\n import org.terasology.rendering.nui.CoreScreenLayer;",
    "Use the latest NATS docker image 2 . 1 . 0": "diff --git a/components/camel-nats/src/test/java/org/apache/camel/component/nats/NatsAuthTestSupport.java b/components/camel-nats/src/test/java/org/apache/camel/component/nats/NatsAuthTestSupport.java\nindex aab94918a28..06d2b54c45e 100644\n--- a/components/camel-nats/src/test/java/org/apache/camel/component/nats/NatsAuthTestSupport.java\n+++ b/components/camel-nats/src/test/java/org/apache/camel/component/nats/NatsAuthTestSupport.java\n@@ -22,7 +22,7 @@ import org.testcontainers.containers.GenericContainer;\n \n public class NatsAuthTestSupport extends ContainerAwareTestSupport {\n \n-    public static final String CONTAINER_IMAGE = \"nats:2.0.4\";\n+    public static final String CONTAINER_IMAGE = \"nats:2.1.0\";\n     public static final String CONTAINER_NAME = \"nats-auth\";\n     public static final String USERNAME = \"admin\";\n     public static final String PASSWORD = \"password\";\ndiff --git a/components/camel-nats/src/test/java/org/apache/camel/component/nats/NatsAuthTokenTestSupport.java b/components/camel-nats/src/test/java/org/apache/camel/component/nats/NatsAuthTokenTestSupport.java\nindex 95c619fc542..84c8db5bb73 100644\n--- a/components/camel-nats/src/test/java/org/apache/camel/component/nats/NatsAuthTokenTestSupport.java\n+++ b/components/camel-nats/src/test/java/org/apache/camel/component/nats/NatsAuthTokenTestSupport.java\n@@ -22,7 +22,7 @@ import org.testcontainers.containers.GenericContainer;\n \n public class NatsAuthTokenTestSupport extends ContainerAwareTestSupport {\n \n-    public static final String CONTAINER_IMAGE = \"nats:2.0.4\";\n+    public static final String CONTAINER_IMAGE = \"nats:2.1.0\";\n     public static final String CONTAINER_NAME = \"nats-auth-token\";\n     public static final String TOKEN = \"!admin23456\";\n     \ndiff --git a/components/camel-nats/src/test/java/org/apache/camel/component/nats/NatsTestSupport.java b/components/camel-nats/src/test/java/org/apache/camel/component/nats/NatsTestSupport.java\nindex cbc849d8c40..deaa18737c2 100644\n--- a/components/camel-nats/src/test/java/org/apache/camel/component/nats/NatsTestSupport.java\n+++ b/components/camel-nats/src/test/java/org/apache/camel/component/nats/NatsTestSupport.java\n@@ -22,7 +22,7 @@ import org.testcontainers.containers.GenericContainer;\n \n public class NatsTestSupport extends ContainerAwareTestSupport {\n \n-    public static final String CONTAINER_IMAGE = \"nats:2.0.4\";\n+    public static final String CONTAINER_IMAGE = \"nats:2.1.0\";\n     public static final String CONTAINER_NAME = \"nats\";\n     \n     @Override",
    "Fix the layout issues with WearArcLayout & WearCurvedTextView .": "diff --git a/wear/wear/src/main/java/androidx/wear/widget/WearArcLayout.java b/wear/wear/src/main/java/androidx/wear/widget/WearArcLayout.java\nindex bd5948cdb48..0edbebf49ca 100644\n--- a/wear/wear/src/main/java/androidx/wear/widget/WearArcLayout.java\n+++ b/wear/wear/src/main/java/androidx/wear/widget/WearArcLayout.java\n@@ -287,6 +287,15 @@ public class WearArcLayout extends ViewGroup {\n         a.recycle();\n     }\n \n+    @Override\n+    public void requestLayout() {\n+        super.requestLayout();\n+\n+        for (int i = 0; i < getChildCount(); i++) {\n+            getChildAt(i).forceLayout();\n+        }\n+    }\n+\n     @Override\n     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n         // Need to derive the thickness of the curve from the children. We're a curve, so the\ndiff --git a/wear/wear/src/main/java/androidx/wear/widget/WearCurvedTextView.java b/wear/wear/src/main/java/androidx/wear/widget/WearCurvedTextView.java\nindex 6a3a8e57023..097dc1f90da 100644\n--- a/wear/wear/src/main/java/androidx/wear/widget/WearCurvedTextView.java\n+++ b/wear/wear/src/main/java/androidx/wear/widget/WearCurvedTextView.java\n@@ -189,6 +189,7 @@ public class WearCurvedTextView extends View implements WearArcLayout.ArcLayoutW\n         a.recycle();\n \n         applyTextAppearance(attributes);\n+        mPaint.setTextSize(mTextSize);\n     }\n \n     @Override\n@@ -237,12 +238,13 @@ public class WearCurvedTextView extends View implements WearArcLayout.ArcLayoutW\n         doUpdate();\n     }\n \n-    private void updatePaint() {\n-        mPaint.setTextSize(mTextSize);\n+    @Override\n+    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n+        super.onLayout(changed, l, t, r, b);\n+\n         mPaint.getTextBounds(mText, 0, mText.length(), mBounds);\n \n         // Note that ascent is negative.\n-\n         mPathRadius = min(getWidth(), getHeight()) / 2f\n                 + (mClockwise ? mPaint.getFontMetrics().ascent - getPaddingTop() :\n                 -mPaint.getFontMetrics().descent - getPaddingBottom());\n@@ -292,7 +294,6 @@ public class WearCurvedTextView extends View implements WearArcLayout.ArcLayoutW\n \n         mDirty = false;\n         mLastUsedTextAlignment = (int) getTextAlignment();\n-        mPaint.setTextSize(mTextSize);\n \n         if (mTextSweepDegrees <= mMaxSweepDegrees) {\n             mTextToDraw = mText;\n@@ -649,7 +650,6 @@ public class WearCurvedTextView extends View implements WearArcLayout.ArcLayoutW\n \n     private void doUpdate() {\n         mDirty = true;\n-        updatePaint();\n         requestLayout();\n         postInvalidate();\n     }\n@@ -735,6 +735,7 @@ public class WearCurvedTextView extends View implements WearArcLayout.ArcLayoutW\n     /** sets the text size for rendering the text */\n     public void setTextSize(float value) {\n         mTextSize = value;\n+        mPaint.setTextSize(mTextSize);\n         doUpdate();\n     }\n ",
    "Replace ConditionProfile . createBinaryProfile ( ) with ConditionProfile . create ( )": "diff --git a/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/intrinsics/llvm/LLVMExpect.java b/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/intrinsics/llvm/LLVMExpect.java\nindex 5b7f50bab4e..2ead0b1750c 100644\n--- a/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/intrinsics/llvm/LLVMExpect.java\n+++ b/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/intrinsics/llvm/LLVMExpect.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2016, 2019, Oracle and/or its affiliates.\n+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates.\n  *\n  * All rights reserved.\n  *\n@@ -104,6 +104,6 @@ public abstract class LLVMExpect {\n     }\n \n     static ConditionProfile getExpectConditionProfile() {\n-        return ConditionProfile.createBinaryProfile();\n+        return ConditionProfile.create();\n     }\n }\ndiff --git a/truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/parser/PEParser.java b/truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/parser/PEParser.java\nindex 1fee7a15618..27eeae4c99d 100644\n--- a/truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/parser/PEParser.java\n+++ b/truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/parser/PEParser.java\n@@ -355,7 +355,7 @@ final class Sequence4<T, A, B, C, D> extends SequenceBase<T> {\n \n final class Alternative<T> extends Element<T> {\n     @Children private final Element<? extends T>[] options;\n-    private final ConditionProfile seenEof = ConditionProfile.createBinaryProfile();\n+    private final ConditionProfile seenEof = ConditionProfile.create();\n \n     Alternative(Element<? extends T>[] options) {\n         this.options = options;\n@@ -398,7 +398,7 @@ final class Repetition<T, ListT, R> extends Element<R> {\n     private final Supplier<ListT> createList;\n     private final BiFunction<ListT, T, ListT> addToList;\n     private final Function<ListT, R> createResult;\n-    private final ConditionProfile seenEof = ConditionProfile.createBinaryProfile();\n+    private final ConditionProfile seenEof = ConditionProfile.create();\n \n     Repetition(Element<T> element, Supplier<ListT> createList, BiFunction<ListT, T, ListT> addToList, Function<ListT, R> createResult) {\n         this.element = element;\n@@ -433,7 +433,7 @@ final class Repetition<T, ListT, R> extends Element<R> {\n \n final class StackRepetition<T> extends Element<LexerList<T>> {\n     @Child private Element<T> element;\n-    private final ConditionProfile seenEof = ConditionProfile.createBinaryProfile();\n+    private final ConditionProfile seenEof = ConditionProfile.create();\n \n     StackRepetition(Element<T> element) {\n         this.element = element;\n@@ -469,7 +469,7 @@ final class OptionalElement<T, R> extends Element<R> {\n     @Child Element<T> element;\n     private final Function<T, R> hasValueAction;\n     private final Supplier<R> hasNoValueAction;\n-    private final ConditionProfile seenEof = ConditionProfile.createBinaryProfile();\n+    private final ConditionProfile seenEof = ConditionProfile.create();\n \n     OptionalElement(Element<T> element, Function<T, R> hasValueAction, Supplier<R> hasNoValueAction) {\n         this.element = element;\n@@ -501,7 +501,7 @@ final class OptionalElement<T, R> extends Element<R> {\n final class TokenReference<T> extends Element<T> {\n     private final byte token;\n     private final TokenFunction<T> action;\n-    private final ConditionProfile seenEof = ConditionProfile.createBinaryProfile();\n+    private final ConditionProfile seenEof = ConditionProfile.create();\n \n     TokenReference(byte token, TokenFunction<T> action) {\n         this.token = token;\ndiff --git a/truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotLimits.java b/truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotLimits.java\nindex d46cde75725..b87d126e4f7 100644\n--- a/truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotLimits.java\n+++ b/truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotLimits.java\n@@ -123,7 +123,7 @@ final class PolyglotLimits {\n         final EventContext eventContext;\n         final PolyglotEngineImpl engine;\n         final FrameSlot readContext;\n-        final ConditionProfile needsLookup = ConditionProfile.createBinaryProfile();\n+        final ConditionProfile needsLookup = ConditionProfile.create();\n         final FrameDescriptor descriptor;\n         @CompilationFinal private boolean seenInnerContext;\n \ndiff --git a/wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/memory/UnsafeWasmMemory.java b/wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/memory/UnsafeWasmMemory.java\nindex 4e8f4272eb5..8b6cfe96bde 100644\n--- a/wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/memory/UnsafeWasmMemory.java\n+++ b/wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/memory/UnsafeWasmMemory.java\n@@ -54,7 +54,7 @@ public class UnsafeWasmMemory extends WasmMemory {\n     private long startAddress;\n     private long pageSize;\n     private final long maxPageSize;\n-    private final ConditionProfile outOfBoundsAccesses = ConditionProfile.createBinaryProfile();\n+    private final ConditionProfile outOfBoundsAccesses = ConditionProfile.create();\n \n     public UnsafeWasmMemory(long initPageSize, long maxPageSize) {\n         try {",
    "Remove deprecated methods from GraphDatabaseFactory": "diff --git a/community/cypher/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala b/community/cypher/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala\nindex 77532f9c48b..ec8b315e80f 100644\n--- a/community/cypher/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala\n+++ b/community/cypher/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala\n@@ -1054,9 +1054,9 @@ order by a.COL1\"\"\")\n \n   private def createReadOnlyEngine(): ExecutionEngine = {\n     FileUtils.deleteRecursively(new File(\"target/readonly\"))\n-    val old = new TestGraphDatabaseFactory().newEmbeddedDatabase(\"target/readonly\")\n+    val old = new TestGraphDatabaseFactory().newEmbeddedDatabase( new File( \"target/readonly\" ) )\n     old.shutdown()\n-    val db = new TestGraphDatabaseFactory().newEmbeddedDatabaseBuilder(\"target/readonly\")\n+    val db = new TestGraphDatabaseFactory().newEmbeddedDatabaseBuilder( new File( \"target/readonly\" ) )\n       .setConfig( GraphDatabaseSettings.read_only, \"true\" )\n       .newGraphDatabase()\n     new ExecutionEngine(new GraphDatabaseCypherService(db))\ndiff --git a/community/cypher/cypher/src/test/scala/org/neo4j/cypher/IndexOpAcceptanceTest.scala b/community/cypher/cypher/src/test/scala/org/neo4j/cypher/IndexOpAcceptanceTest.scala\nindex 84fca67a234..21eddf2bbf9 100644\n--- a/community/cypher/cypher/src/test/scala/org/neo4j/cypher/IndexOpAcceptanceTest.scala\n+++ b/community/cypher/cypher/src/test/scala/org/neo4j/cypher/IndexOpAcceptanceTest.scala\n@@ -96,8 +96,9 @@ class IndexOpAcceptanceTest extends ExecutionEngineFunSuite with QueryStatistics\n   }\n \n   private def createDbWithFailedIndex: GraphDatabaseService = {\n-    new File(\"target/test-data/impermanent-db\").deleteAll()\n-    graph = new GraphDatabaseCypherService(new TestGraphDatabaseFactory().newEmbeddedDatabase(\"target/test-data/impermanent-db\"))\n+    val storeDir = new File(\"target/test-data/impermanent-db\")\n+    storeDir.deleteAll()\n+    graph = new GraphDatabaseCypherService(new TestGraphDatabaseFactory().newEmbeddedDatabase(storeDir))\n     eengine = new ExecutionEngine(graph)\n     execute(\"CREATE INDEX ON :Person(name)\")\n     execute(\"create (:Person {name:42})\")\n@@ -114,7 +115,7 @@ class IndexOpAcceptanceTest extends ExecutionEngineFunSuite with QueryStatistics\n     stream.write(65)\n     stream.close()\n \n-    graph = new GraphDatabaseCypherService(new TestGraphDatabaseFactory().newEmbeddedDatabase(\"target/test-data/impermanent-db\"))\n+    graph = new GraphDatabaseCypherService(new TestGraphDatabaseFactory().newEmbeddedDatabase(storeDir))\n     eengine = new ExecutionEngine(graph)\n     graph.getGraphDatabaseService\n   }\ndiff --git a/community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/CompilerComparisonTest.scala b/community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/CompilerComparisonTest.scala\nindex ea34b869c6d..a7d7aa9a67b 100644\n--- a/community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/CompilerComparisonTest.scala\n+++ b/community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/CompilerComparisonTest.scala\n@@ -379,7 +379,7 @@ class CompilerComparisonTest extends ExecutionEngineFunSuite with QueryStatistic\n \n   private def executionResults: Seq[DataSetResults] = (for ((dataSet, queries) <- queriesByDataSet) yield {\n     val (dataSetName, dataSetDir) = dataSet\n-    val db = new GraphDatabaseCypherService(new GraphDatabaseFactory().newEmbeddedDatabase(dataSetDir))\n+    val db = new GraphDatabaseCypherService(new GraphDatabaseFactory().newEmbeddedDatabase(new File(dataSetDir)))\n     try {\n       val queryResults = for ((queryName, queryText) <- queries) yield {\n         val results = for ((compilerName, compilerCreator) <- compilers) yield {\ndiff --git a/community/cypher/cypher/src/test/scala/org/neo4j/cypher/performance/DataImportTest.scala b/community/cypher/cypher/src/test/scala/org/neo4j/cypher/performance/DataImportTest.scala\nindex b5d884a645e..662d534ac24 100644\n--- a/community/cypher/cypher/src/test/scala/org/neo4j/cypher/performance/DataImportTest.scala\n+++ b/community/cypher/cypher/src/test/scala/org/neo4j/cypher/performance/DataImportTest.scala\n@@ -36,11 +36,10 @@ class DataImportTest extends CypherFunSuite {\n   // This test creates a database\n   ignore(\"createDatabase\") {\n     val sourceDir = new File(\"/Users/ata/Downloads/apa/ml-10M100K\")\n-    val targetDir = \"target/perf-graph.db\"\n-    val dir = new File(targetDir)\n-    deleteAll(dir)\n+    val targetDir = new File(\"target/perf-graph.db\")\n+    deleteAll(targetDir)\n \n-    dir.exists() should equal(false)\n+    targetDir.exists() should equal(false)\n \n     val (inserter, moviesId, moviesTitles, indexProvider, typeIdx) = createInserters(targetDir)\n \n@@ -82,7 +81,7 @@ class DataImportTest extends CypherFunSuite {\n     moviesId\n   }\n \n-  private def createInserters(targetDir: String) = {\n+  private def createInserters(targetDir: File) = {\n     val inserter = BatchInserters.inserter(targetDir)\n     val indexProvider = new LuceneBatchInserterIndexProviderNewImpl(inserter)\n \ndiff --git a/community/cypher/cypher/src/test/scala/org/neo4j/cypher/performance/PerformanceTest.scala b/community/cypher/cypher/src/test/scala/org/neo4j/cypher/performance/PerformanceTest.scala\nindex 31374c7b42c..2c54b8ce51e 100644\n--- a/community/cypher/cypher/src/test/scala/org/neo4j/cypher/performance/PerformanceTest.scala\n+++ b/community/cypher/cypher/src/test/scala/org/neo4j/cypher/performance/PerformanceTest.scala\n@@ -19,6 +19,7 @@\n  */\n package org.neo4j.cypher.performance\n \n+import java.io.File\n import java.util.Collections\n \n import org.neo4j.cypher.internal.frontend.v3_0.test_helpers.CypherFunSuite\n@@ -34,7 +35,7 @@ class PerformanceTest extends CypherFunSuite {\n \n   override def beforeEach() {\n     super.beforeEach()\n-    db = new GraphDatabaseFactory().newEmbeddedDatabase(\"target/db\")\n+    db = new GraphDatabaseFactory().newEmbeddedDatabase(new File(\"target/db\"))\n   }\n \n   override def afterEach() {\ndiff --git a/community/graph-algo/src/test/java/org/neo4j/graphalgo/path/AStarPerformanceIT.java b/community/graph-algo/src/test/java/org/neo4j/graphalgo/path/AStarPerformanceIT.java\nindex 8f6da1b91f6..a9166edaa8a 100644\n--- a/community/graph-algo/src/test/java/org/neo4j/graphalgo/path/AStarPerformanceIT.java\n+++ b/community/graph-algo/src/test/java/org/neo4j/graphalgo/path/AStarPerformanceIT.java\n@@ -74,7 +74,7 @@ public class AStarPerformanceIT\n                 new long[]{291, 86707},\n                 new long[]{188345, 158468}\n         };\n-        GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( directory.getAbsolutePath() );\n+        GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( directory.getAbsoluteFile() );\n         PathFinder<WeightedPath> algo = aStar( allTypesAndDirections(),\n                 doubleCostEvaluator( \"weight\", 0 ), GeoDataGenerator.estimateEvaluator() );\n         for ( int i = 0; i < 10; i++ )\ndiff --git a/community/graphviz/src/main/java/org/neo4j/visualization/graphviz/Script.java b/community/graphviz/src/main/java/org/neo4j/visualization/graphviz/Script.java\nindex 7759ad2134f..6abfe8533e9 100644\n--- a/community/graphviz/src/main/java/org/neo4j/visualization/graphviz/Script.java\n+++ b/community/graphviz/src/main/java/org/neo4j/visualization/graphviz/Script.java\n@@ -41,7 +41,7 @@ public class Script extends ConfigurationParser\n         super( format );\n     }\n \n-    protected String storeDir;\n+    protected File storeDir;\n \n     public static <S extends Script> S initialize( Class<S> scriptClass, String... args )\n     {\n@@ -115,7 +115,7 @@ public class Script extends ConfigurationParser\n         {\n             throw new UnsupportedOperationException( \"Could not initialize script\", e );\n         }\n-        script.storeDir = args[0];\n+        script.storeDir = new File( args[0] );\n         return script;\n     }\n \n@@ -154,7 +154,7 @@ public class Script extends ConfigurationParser\n         }\n     }\n \n-    protected String storeDir()\n+    protected File storeDir()\n     {\n         return storeDir;\n     }\ndiff --git a/community/import-tool/src/test/java/org/neo4j/tooling/ImportToolDocIT.java b/community/import-tool/src/test/java/org/neo4j/tooling/ImportToolDocIT.java\nindex 3d5508fe296..48d02f4a7a5 100644\n--- a/community/import-tool/src/test/java/org/neo4j/tooling/ImportToolDocIT.java\n+++ b/community/import-tool/src/test/java/org/neo4j/tooling/ImportToolDocIT.java\n@@ -104,7 +104,7 @@ public class ImportToolDocIT\n \n         // WHEN\n         String[] arguments = arguments(\n-                \"--into\", directory.absolutePath(),\n+                \"--into\", directory.absolutePath().getAbsolutePath(),\n                 \"--nodes\", movies.getAbsolutePath(),\n                 \"--nodes\", actors.getAbsolutePath(),\n                 \"--relationships\", roles.getAbsolutePath() );\n@@ -157,7 +157,7 @@ public class ImportToolDocIT\n \n         // WHEN\n         String[] arguments = arguments(\n-                \"--into\", directory.absolutePath(),\n+                \"--into\", directory.absolutePath().getAbsolutePath(),\n                 \"--nodes\", movies.getAbsolutePath(),\n                 \"--nodes\", actors.getAbsolutePath(),\n                 \"--relationships\", roles.getAbsolutePath(),\n@@ -224,7 +224,7 @@ public class ImportToolDocIT\n \n         // WHEN\n         String[] arguments = arguments(\n-                \"--into\", directory.absolutePath(),\n+                \"--into\", directory.absolutePath().getAbsolutePath(),\n                 \"--nodes\", moviesHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + movies.getAbsolutePath(),\n                 \"--nodes\", actorsHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + actors.getAbsolutePath(),\n                 \"--relationships\", rolesHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + roles.getAbsolutePath());\n@@ -299,7 +299,7 @@ public class ImportToolDocIT\n \n         // WHEN\n         String[] arguments = arguments(\n-                \"--into\", directory.absolutePath(),\n+                \"--into\", directory.absolutePath().getAbsolutePath(),\n                 \"--nodes\", moviesHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + moviesPart1.getAbsolutePath() +\n                         MULTI_FILE_DELIMITER + moviesPart2.getAbsolutePath(),\n                 \"--nodes\", actorsHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + actorsPart1.getAbsolutePath() +\n@@ -360,7 +360,7 @@ public class ImportToolDocIT\n         }\n         // WHEN\n         String[] arguments = arguments(\n-                \"--into\", directory.absolutePath(),\n+                \"--into\", directory.absolutePath().getAbsolutePath(),\n                 \"--nodes:\" + join( new String[] { \"Movie\" }, \":\" ),\n                     movies.getAbsolutePath(),\n                 \"--nodes:\" + join( new String[] { \"Movie\", \"Sequel\" }, \":\" ),\n@@ -416,7 +416,7 @@ public class ImportToolDocIT\n         }\n         // WHEN\n         String[] arguments = arguments(\n-                \"--into\", directory.absolutePath(),\n+                \"--into\", directory.absolutePath().getAbsolutePath(),\n                 \"--nodes\", movies.getAbsolutePath(),\n                 \"--nodes\", actors.getAbsolutePath(),\n                 \"--relationships:\" + join( new String[] { \"ACTED_IN\" }, \":\" ), roles.getAbsolutePath());\n@@ -468,7 +468,7 @@ public class ImportToolDocIT\n         }\n         // WHEN\n         String[] arguments = arguments(\n-                \"--into\", directory.absolutePath(),\n+                \"--into\", directory.absolutePath().getAbsolutePath(),\n                 \"--nodes\", movies.getAbsolutePath(),\n                 \"--nodes\", actors.getAbsolutePath(),\n                 \"--relationships:\" + join( new String[] { \"ACTED_IN\" }, \":\" ), roles.getAbsolutePath());\n@@ -523,7 +523,7 @@ public class ImportToolDocIT\n         // WHEN\n         File badFile = new File( directory.directory(), Configuration.BAD_FILE_NAME );\n         String[] arguments = arguments(\n-                \"--into\", directory.absolutePath(),\n+                \"--into\", directory.absolutePath().getAbsolutePath(),\n                 \"--nodes\", movies.getAbsolutePath(),\n                 \"--nodes\", actors.getAbsolutePath(),\n                 \"--relationships\", roles.getAbsolutePath() );\n@@ -556,7 +556,7 @@ public class ImportToolDocIT\n         // WHEN\n         File badFile = new File( directory.directory(), Configuration.BAD_FILE_NAME );\n         String[] arguments = arguments(\n-                \"--into\", directory.absolutePath(),\n+                \"--into\", directory.absolutePath().getAbsolutePath(),\n                 \"--nodes\", actors.getAbsolutePath(),\n                 \"--skip-duplicate-nodes\" );\n         importTool( arguments );\n@@ -604,7 +604,7 @@ public class ImportToolDocIT\n \n         // WHEN\n         String[] arguments = arguments(\n-                \"--into\", directory.absolutePath(),\n+                \"--into\", directory.absolutePath().getAbsolutePath(),\n                 \"--nodes\", movies.getAbsolutePath(),\n                 \"--nodes\", actors.getAbsolutePath(),\n                 \"--relationships\", roles.getAbsolutePath() );\n@@ -698,8 +698,8 @@ public class ImportToolDocIT\n         }\n         String documentationArgs = StringUtils.join( cleanedArguments, \" \" );\n         documentationArgs =\n-                documentationArgs.replace( dir + File.separator, \"\" ).replace( directory.absolutePath(),\n-                        \"path_to_target_directory\" );\n+                documentationArgs.replace( dir + File.separator, \"\" ).replace(\n+                        directory.absolutePath().getAbsolutePath(), \"path_to_target_directory\" );\n         String docsCommand = \"neo4j-import \" + documentationArgs;\n         try ( PrintStream out = new PrintStream( file( \"ops\", fileName ) ) )\n         {\ndiff --git a/community/io/src/test/java/org/neo4j/test/TargetDirectory.java b/community/io/src/test/java/org/neo4j/test/TargetDirectory.java\nindex b090cf66fff..3cbd2edb4ee 100644\n--- a/community/io/src/test/java/org/neo4j/test/TargetDirectory.java\n+++ b/community/io/src/test/java/org/neo4j/test/TargetDirectory.java\n@@ -73,9 +73,9 @@ public class TargetDirectory\n             return this;\n         }\n \n-        public String absolutePath()\n+        public File absolutePath()\n         {\n-            return directory().getAbsolutePath();\n+            return directory().getAbsoluteFile();\n         }\n \n         public File directory()\ndiff --git a/community/kernel/src/main/java/org/neo4j/graphdb/factory/GraphDatabaseFactory.java b/community/kernel/src/main/java/org/neo4j/graphdb/factory/GraphDatabaseFactory.java\nindex 691af8c0e07..d10fb09ca4d 100644\n--- a/community/kernel/src/main/java/org/neo4j/graphdb/factory/GraphDatabaseFactory.java\n+++ b/community/kernel/src/main/java/org/neo4j/graphdb/factory/GraphDatabaseFactory.java\n@@ -20,20 +20,16 @@\n package org.neo4j.graphdb.factory;\n \n import java.io.File;\n-import java.util.List;\n import java.util.Map;\n \n import org.neo4j.graphdb.GraphDatabaseService;\n-import org.neo4j.kernel.extension.KernelExtensionFactory;\n+import org.neo4j.graphdb.security.URLAccessRule;\n import org.neo4j.kernel.impl.factory.CommunityFacadeFactory;\n import org.neo4j.kernel.impl.factory.Edition;\n import org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory;\n import org.neo4j.kernel.monitoring.Monitors;\n-import org.neo4j.graphdb.security.URLAccessRule;\n import org.neo4j.logging.LogProvider;\n \n-import static java.util.Arrays.asList;\n-\n /**\n  * Creates a {@link org.neo4j.graphdb.GraphDatabaseService}.\n  * <p>\n@@ -64,32 +60,11 @@ public class GraphDatabaseFactory\n         return new GraphDatabaseFactoryState( getCurrentState() );\n     }\n \n-    /**\n-     * @deprecated use {@link #newEmbeddedDatabase(File)} instead.\n-     * @param storeDir the location of the database\n-     * @return the database\n-     */\n-    @Deprecated\n-    public GraphDatabaseService newEmbeddedDatabase( String storeDir )\n-    {\n-        return newEmbeddedDatabase( new File( storeDir ) );\n-    }\n-\n     public GraphDatabaseService newEmbeddedDatabase( File storeDir )\n     {\n         return newEmbeddedDatabaseBuilder( storeDir ).newGraphDatabase();\n     }\n \n-    /**\n-     * @deprecated use {@link #newEmbeddedDatabaseBuilder(File)} instead\n-     * @param storeDir the location of the database\n-     * @return a builder which is used to configure and start a database\n-     */\n-    @Deprecated\n-    public GraphDatabaseBuilder newEmbeddedDatabaseBuilder( String storeDir )\n-    {\n-        return newEmbeddedDatabaseBuilder( new File( storeDir ) );\n-    }\n \n     public GraphDatabaseBuilder newEmbeddedDatabaseBuilder( File storeDir )\n     {\n@@ -108,15 +83,10 @@ public class GraphDatabaseFactory\n     protected GraphDatabaseBuilder.DatabaseCreator createDatabaseCreator(\n             final File storeDir, final GraphDatabaseFactoryState state )\n     {\n-        return new GraphDatabaseBuilder.DatabaseCreator()\n-        {\n-            @Override\n-            public GraphDatabaseService newDatabase( Map<String,String> config )\n-            {\n-                config.put( \"unsupported.dbms.ephemeral\", \"false\" );\n-                GraphDatabaseFacadeFactory.Dependencies dependencies = state.databaseDependencies();\n-                return GraphDatabaseFactory.this.newDatabase( storeDir, config, dependencies );\n-            }\n+        return config -> {\n+            config.put( \"unsupported.dbms.ephemeral\", \"false\" );\n+            GraphDatabaseFacadeFactory.Dependencies dependencies = state.databaseDependencies();\n+            return GraphDatabaseFactory.this.newDatabase( storeDir, config, dependencies );\n         };\n     }\n \n@@ -130,57 +100,6 @@ public class GraphDatabaseFactory\n         return new CommunityFacadeFactory().newFacade( storeDir, config, dependencies );\n     }\n \n-    /**\n-     * @deprecated Manipulating kernel extensions is deprecated and will be moved to internal components.\n-     *\n-     * @return kernel extensions\n-     */\n-    @Deprecated\n-    public Iterable<KernelExtensionFactory<?>> getKernelExtension()\n-    {\n-        return getCurrentState().getKernelExtension();\n-    }\n-\n-    /**\n-     * @deprecated Manipulating kernel extensions is deprecated and will be moved to internal components.\n-     *\n-     * @param newKernelExtensions New kernel extensions to add\n-     * @return the factory\n-     */\n-    @Deprecated\n-    public GraphDatabaseFactory addKernelExtensions( Iterable<KernelExtensionFactory<?>> newKernelExtensions )\n-    {\n-        getCurrentState().addKernelExtensions( newKernelExtensions );\n-        return this;\n-    }\n-\n-    /**\n-     * @deprecated Manipulating kernel extensions is deprecated and will be moved to internal components.\n-     *\n-     * @param newKernelExtension New kernel extension too add\n-     * @return the factory\n-     */\n-    @Deprecated\n-    @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n-    public GraphDatabaseFactory addKernelExtension( KernelExtensionFactory<?> newKernelExtension )\n-    {\n-        List extensions = asList( newKernelExtension );\n-        return addKernelExtensions( extensions );\n-    }\n-\n-    /**\n-     * @deprecated Manipulating kernel extensions is deprecated and will be moved to internal components.\n-     *\n-     * @param newKernelExtensions New kernel extensions to set\n-     * @return the factory\n-     */\n-    @Deprecated\n-    public GraphDatabaseFactory setKernelExtensions( Iterable<KernelExtensionFactory<?>> newKernelExtensions )\n-    {\n-        getCurrentState().setKernelExtensions( newKernelExtensions );\n-        return this;\n-    }\n-\n     public GraphDatabaseFactory addURLAccessRule( String protocol, URLAccessRule rule )\n     {\n         getCurrentState().addURLAccessRule( protocol, rule );\ndiff --git a/community/kernel/src/main/java/org/neo4j/kernel/impl/util/dbstructure/DbStructureTool.java b/community/kernel/src/main/java/org/neo4j/kernel/impl/util/dbstructure/DbStructureTool.java\nindex 8ffb572de3e..bc7aa6b3d49 100644\n--- a/community/kernel/src/main/java/org/neo4j/kernel/impl/util/dbstructure/DbStructureTool.java\n+++ b/community/kernel/src/main/java/org/neo4j/kernel/impl/util/dbstructure/DbStructureTool.java\n@@ -57,7 +57,7 @@ public class DbStructureTool\n                 generatedClassWithPackage\n         );\n \n-        GraphDatabaseService graph = new GraphDatabaseFactory().newEmbeddedDatabase( dbDir );\n+        GraphDatabaseService graph = new GraphDatabaseFactory().newEmbeddedDatabase( new File( dbDir ) );\n         try\n         {\n             if ( writeToFile )\ndiff --git a/community/kernel/src/main/java/org/neo4j/kernel/internal/GraphDatabaseAPI.java b/community/kernel/src/main/java/org/neo4j/kernel/internal/GraphDatabaseAPI.java\nindex 2101f7638d9..3dda0f100a9 100644\n--- a/community/kernel/src/main/java/org/neo4j/kernel/internal/GraphDatabaseAPI.java\n+++ b/community/kernel/src/main/java/org/neo4j/kernel/internal/GraphDatabaseAPI.java\n@@ -48,6 +48,5 @@ public interface GraphDatabaseAPI extends GraphDatabaseService\n      */\n     URL validateURLAccess( URL url ) throws URLAccessValidationError;\n \n-    @Deprecated\n     String getStoreDir();\n }\ndiff --git a/community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/BatchInserters.java b/community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/BatchInserters.java\nindex 2c4c6bb7cf0..bf3f6b9927e 100644\n--- a/community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/BatchInserters.java\n+++ b/community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/BatchInserters.java\n@@ -35,19 +35,6 @@ import static org.neo4j.helpers.collection.MapUtil.stringMap;\n  */\n public final class BatchInserters\n {\n-    /**\n-     * Get a {@link BatchInserter} given a store directory.\n-     *\n-     * @param storeDir the store directory\n-     * @return a new {@link BatchInserter}\n-     * @deprecated use {@link #inserter(File)} instead\n-     */\n-    @Deprecated\n-    public static BatchInserter inserter( String storeDir )\n-    {\n-        return inserter( storeDir, stringMap() );\n-    }\n-\n     /**\n      * Get a {@link BatchInserter} given a store directory.\n      *\n@@ -57,21 +44,12 @@ public final class BatchInserters\n      */\n     public static BatchInserter inserter( File storeDir ) throws IOException\n     {\n-        return inserter( storeDir, new DefaultFileSystemAbstraction(), stringMap() );\n+        return inserter( storeDir, stringMap() );\n     }\n \n-    /**\n-     * Get a {@link BatchInserter} given a store directory.\n-     *\n-     * @param storeDir the store directory\n-     * @param config configuration settings to use\n-     * @return a new {@link BatchInserter}\n-     * @deprecated use {@link #inserter(File, Map)} instead\n-     */\n-    @Deprecated\n-    public static BatchInserter inserter( String storeDir, Map<String,String> config )\n+    public static BatchInserter inserter( File storeDir, FileSystemAbstraction fs ) throws IOException\n     {\n-        return inserter( storeDir, new DefaultFileSystemAbstraction(), config );\n+        return inserter( storeDir, fs, stringMap(), (Iterable) Service.load( KernelExtensionFactory.class )  );\n     }\n \n     /**\n@@ -84,96 +62,15 @@ public final class BatchInserters\n      */\n     public static BatchInserter inserter( File storeDir, Map<String,String> config ) throws IOException\n     {\n-        return inserter( storeDir, new DefaultFileSystemAbstraction(), config );\n+        return inserter( storeDir, new DefaultFileSystemAbstraction(), config, (Iterable) Service.load( KernelExtensionFactory.class ) );\n     }\n \n-    /**\n-     * @deprecated use {@link #inserter(File)} instead\n-     * @param storeDir the store directory\n-     * @param fileSystem the file system abstraction to use\n-     * @return a new {@link BatchInserter}\n-     */\n-    @Deprecated\n-    public static BatchInserter inserter( String storeDir, FileSystemAbstraction fileSystem )\n-    {\n-        return inserter( storeDir, fileSystem, stringMap() );\n-    }\n \n-    /**\n-     * Get a {@link BatchInserter} given a store directory.\n-     *\n-     * @param storeDir the store directory\n-     * @param fileSystem the file system abstraction to use\n-     * @return a new {@link BatchInserter}\n-     * @deprecated use {@link #inserter(File)} instead\n-     * @throws IOException if there is an IO error\n-     */\n-    @Deprecated\n-    public static BatchInserter inserter( File storeDir, FileSystemAbstraction fileSystem ) throws IOException\n+    public static BatchInserter inserter( File storeDir, FileSystemAbstraction fs, Map<String,String> config ) throws IOException\n     {\n-        return inserter( storeDir, fileSystem, stringMap() );\n+        return inserter( storeDir, fs, config, (Iterable) Service.load( KernelExtensionFactory.class )  );\n     }\n \n-    /**\n-     * @deprecated use {@link #inserter(File, Map)} instead\n-     * @param storeDir the store directory\n-     * @param fileSystem the file system abstraction to use\n-     * @param config configuration settings to use\n-     * @return a new {@link BatchInserter}\n-     */\n-    @Deprecated\n-    public static BatchInserter inserter( String storeDir, FileSystemAbstraction fileSystem,\n-            Map<String,String> config )\n-    {\n-        try\n-        {\n-            return inserter( new File( storeDir ), fileSystem, config );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-    }\n-\n-    /**\n-     * Get a {@link BatchInserter} given a store directory.\n-     *\n-     * @param storeDir the store directory\n-     * @param fileSystem the file system abstraction to use\n-     * @param config configuration settings to use\n-     * @return a new {@link BatchInserter}\n-     * @deprecated use {@link #inserter(File, Map)} instead\n-     * @throws IOException if there is",
    "Added testcase for Issue ACT - 950": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/RuntimeServiceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/RuntimeServiceTest.java\nindex 29707dbc86..fab9ced37f 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/RuntimeServiceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/RuntimeServiceTest.java\n@@ -219,6 +219,86 @@ public class RuntimeServiceTest extends PluggableActivitiTestCase {\n     }\n   }\n   \n+  /**\n+   * Testcase to reproduce ACT-950 (https://jira.codehaus.org/browse/ACT-950) \n+   */\n+  @Deployment\n+  public void testFindActiveActivityIdProcessWithErrorEventAndSubProcess() {\n+    ProcessInstance processInstance = processEngine.getRuntimeService().startProcessInstanceByKey(\"errorEventSubprocess\");\n+    \n+    List<String> activeActivities = runtimeService.getActiveActivityIds(processInstance.getId());\n+    assertEquals(3, activeActivities.size());\n+    \n+    List<Task> tasks = taskService.createTaskQuery().list();\n+    assertEquals(2, tasks.size());\n+    \n+    Task parallelUserTask = null;\n+    for (Task task : tasks) {\n+      if (!task.getName().equals(\"ParallelUserTask\") && !task.getName().equals(\"MainUserTask\")) {\n+        fail(\"Expected: <ParallelUserTask> or <MainUserTask> but was <\" + task.getName() + \">.\");\n+      }\n+      if (task.getName().equals(\"ParallelUserTask\")) {\n+        parallelUserTask = task;\n+      }\n+    }\n+    assertNotNull(parallelUserTask);\n+\n+    taskService.complete(parallelUserTask.getId());\n+    \n+    Execution execution = runtimeService.createExecutionQuery().processInstanceId(processInstance.getId()).activityId(\"subprocess1WaitBeforeError\").singleResult();\n+    runtimeService.signal(execution.getId());\n+    \n+    activeActivities = runtimeService.getActiveActivityIds(processInstance.getId());\n+    assertEquals(2, activeActivities.size());\n+    \n+    tasks = taskService.createTaskQuery().list();\n+    assertEquals(2, tasks.size());\n+    \n+    Task beforeErrorUserTask = null;\n+    for (Task task : tasks) {\n+      if (!task.getName().equals(\"BeforeError\") && !task.getName().equals(\"MainUserTask\")) {\n+        fail(\"Expected: <BeforeError> or <MainUserTask> but was <\" + task.getName() + \">.\");\n+      }\n+      if (task.getName().equals(\"BeforeError\")) {\n+        beforeErrorUserTask = task;\n+      }\n+    }\n+    assertNotNull(beforeErrorUserTask);\n+    \n+    taskService.complete(beforeErrorUserTask.getId());\n+    \n+    activeActivities = runtimeService.getActiveActivityIds(processInstance.getId());\n+    assertEquals(2, activeActivities.size());\n+    \n+    tasks = taskService.createTaskQuery().list();\n+    assertEquals(2, tasks.size());\n+\n+    Task afterErrorUserTask = null;\n+    for (Task task : tasks) {\n+      if (!task.getName().equals(\"AfterError\") && !task.getName().equals(\"MainUserTask\")) {\n+        fail(\"Expected: <AfterError> or <MainUserTask> but was <\" + task.getName() + \">.\");\n+      }\n+      if (task.getName().equals(\"AfterError\")) {\n+        afterErrorUserTask = task;\n+      }\n+    }\n+    assertNotNull(afterErrorUserTask);\n+    \n+    taskService.complete(afterErrorUserTask.getId());\n+    \n+    tasks = taskService.createTaskQuery().list();\n+    assertEquals(1, tasks.size());\n+    assertEquals(\"MainUserTask\", tasks.get(0).getName());\n+    \n+    activeActivities = runtimeService.getActiveActivityIds(processInstance.getId());\n+    assertEquals(1, activeActivities.size());\n+    assertEquals(\"MainUserTask\", activeActivities.get(0));\n+    \n+    taskService.complete(tasks.get(0).getId());\n+    \n+    assertProcessEnded(processInstance.getId());\n+  }\n+  \n   public void testSignalUnexistingExecututionId() {\n     try {\n       runtimeService.signal(\"unexistingExecutionId\");      \ndiff --git a/modules/activiti-engine/src/test/resources/org/activiti/engine/test/api/runtime/RuntimeServiceTest.testFindActiveActivityIdProcessWithErrorEventAndSubProcess.bpmn20.xml b/modules/activiti-engine/src/test/resources/org/activiti/engine/test/api/runtime/RuntimeServiceTest.testFindActiveActivityIdProcessWithErrorEventAndSubProcess.bpmn20.xml\nnew file mode 100644\nindex 0000000000..0650b280d8\n--- /dev/null\n+++ b/modules/activiti-engine/src/test/resources/org/activiti/engine/test/api/runtime/RuntimeServiceTest.testFindActiveActivityIdProcessWithErrorEventAndSubProcess.bpmn20.xml\n@@ -0,0 +1,76 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<definitions id=\"definitions\" xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"\r\n+  xmlns:activiti=\"http://activiti.org/bpmn\" targetNamespace=\"Examples\">\r\n+\r\n+  <process id=\"errorEventSubprocess\" name=\"ErrorEventSubprocess\">\r\n+  \r\n+    <startEvent id=\"startevent1\" name=\"Start\" />\r\n+    \r\n+    <subProcess id=\"subprocess1\" name=\"Sub Process\">\r\n+    \r\n+      <startEvent id=\"subprocess1startevent2\" name=\"Start\" />\r\n+      \r\n+      <sequenceFlow id=\"subprocess1flow2\" name=\"\" sourceRef=\"subprocess1startevent2\" targetRef=\"subprocess1parallelgateway1\" />\r\n+      \r\n+      <parallelGateway id=\"subprocess1parallelgateway1\" name=\"Parallel Gateway\" />\r\n+      \r\n+      <userTask id=\"subprocess1ParallelUserTask\" name=\"ParallelUserTask\" activiti:assignee=\"user1\" />\r\n+      \r\n+      <sequenceFlow id=\"subprocess1flow3\" name=\"\" sourceRef=\"subprocess1parallelgateway1\" targetRef=\"subprocess1ParallelUserTask\" />\r\n+      \r\n+      <endEvent id=\"subprocess1endevent1\" name=\"ErrorEnd\">\r\n+        <errorEventDefinition errorRef=\"err1\" />\r\n+      </endEvent>\r\n+      \r\n+      <endEvent id=\"subprocess1endevent2\" name=\"End\" />\r\n+      \r\n+      <sequenceFlow id=\"subprocess1flow6\" name=\"\" sourceRef=\"subprocess1ParallelUserTask\" targetRef=\"subprocess1endevent2\" />\r\n+      \r\n+      <receiveTask id=\"subprocess1WaitBeforeError\" name=\"WaitBeforeError\"/>\r\n+      \r\n+      <sequenceFlow id=\"subprocess1flow9\" name=\"\" sourceRef=\"subprocess1parallelgateway1\" targetRef=\"subprocess1WaitBeforeError\" />\r\n+      \r\n+      <userTask id=\"subprocess1BeforeError\" name=\"BeforeError\" />\r\n+      \r\n+      <sequenceFlow id=\"subprocess1flow10\" name=\"\" sourceRef=\"subprocess1WaitBeforeError\" targetRef=\"subprocess1BeforeError\" />\r\n+      \r\n+      <sequenceFlow id=\"subprocess1flow11\" name=\"\" sourceRef=\"subprocess1BeforeError\" targetRef=\"subprocess1endevent1\"/>\r\n+      \r\n+    </subProcess>\r\n+    \r\n+    <sequenceFlow id=\"flow1\" name=\"\" sourceRef=\"startevent1\" targetRef=\"parallelgateway2\" />\r\n+    \r\n+    <endEvent id=\"EndSuccess\" name=\"EndSuccess\" />\r\n+    \r\n+    <userTask id=\"AfterSuccess\" name=\"AfterSuccess\" />\r\n+    \r\n+    <sequenceFlow id=\"flow12\" name=\"\" sourceRef=\"subprocess1\" targetRef=\"AfterSuccess\" />\r\n+    \r\n+    <sequenceFlow id=\"flow13\" name=\"\" sourceRef=\"AfterSuccess\" targetRef=\"EndSuccess\" />\r\n+    \r\n+    <boundaryEvent id=\"boundaryerror1\" attachedToRef=\"subprocess1\">\r\n+      <errorEventDefinition errorRef=\"err1\" />\r\n+    </boundaryEvent>\r\n+    \r\n+    <userTask id=\"AfterError\" name=\"AfterError\" />\r\n+    \r\n+    <sequenceFlow id=\"flow14\" name=\"\" sourceRef=\"boundaryerror1\" targetRef=\"AfterError\" />\r\n+    \r\n+    <endEvent id=\"EndError\" name=\"EndError\" />\r\n+    \r\n+    <sequenceFlow id=\"flow15\" name=\"\" sourceRef=\"AfterError\" targetRef=\"EndError\" />\r\n+    \r\n+    <parallelGateway id=\"parallelgateway2\" name=\"Parallel Gateway\" />\r\n+    \r\n+    <sequenceFlow id=\"flow16\" name=\"\" sourceRef=\"parallelgateway2\" targetRef=\"subprocess1\" />\r\n+    \r\n+    <userTask id=\"MainUserTask\" name=\"MainUserTask\" activiti:assignee=\"user1\" />\r\n+    \r\n+    <sequenceFlow id=\"flow17\" name=\"\" sourceRef=\"parallelgateway2\" targetRef=\"MainUserTask\" />\r\n+    \r\n+    <endEvent id=\"EndMainUserTask\" name=\"EndMainUserTask\" />\r\n+    \r\n+    <sequenceFlow id=\"flow18\" name=\"\" sourceRef=\"MainUserTask\" targetRef=\"EndMainUserTask\"/>\r\n+  </process>\r\n+\r\n+</definitions>\n\\ No newline at end of file",
    "update version": "diff --git a/motan-extension/protocol-extension/motan-protocol-grpc/pom.xml b/motan-extension/protocol-extension/motan-protocol-grpc/pom.xml\nindex 09d4079..02db166 100644\n--- a/motan-extension/protocol-extension/motan-protocol-grpc/pom.xml\n+++ b/motan-extension/protocol-extension/motan-protocol-grpc/pom.xml\n@@ -14,7 +14,7 @@\n     <parent>\n         <groupId>com.weibo</groupId>\n         <artifactId>protocol-extension</artifactId>\n-        <version>0.2.2-SNAPSHOT</version>\n+        <version>0.2.3-SNAPSHOT</version>\n     </parent>\n     <artifactId>motan-protocol-grpc</artifactId>\n     <name>motan-protocol-grpc</name>",
    "Convert item and block maps in Toolbox to TIntObjectMaps": "diff --git a/api/src/main/java/org/geysermc/api/Geyser.java b/api/src/main/java/org/geysermc/api/Geyser.java\nindex 4bb13a41..37099339 100644\n--- a/api/src/main/java/org/geysermc/api/Geyser.java\n+++ b/api/src/main/java/org/geysermc/api/Geyser.java\n@@ -30,10 +30,6 @@ import org.geysermc.api.logger.Logger;\n import org.geysermc.api.plugin.PluginManager;\n \n import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.UUID;\n import java.util.concurrent.ScheduledExecutorService;\n \n public class Geyser {\ndiff --git a/connector/src/main/java/org/geysermc/connector/network/translators/item/ItemTranslator.java b/connector/src/main/java/org/geysermc/connector/network/translators/item/ItemTranslator.java\nindex 9bf5d3c4..437a8dc4 100644\n--- a/connector/src/main/java/org/geysermc/connector/network/translators/item/ItemTranslator.java\n+++ b/connector/src/main/java/org/geysermc/connector/network/translators/item/ItemTranslator.java\n@@ -85,7 +85,7 @@ public class ItemTranslator {\n     }\n \n     public ItemEntry getItem(ItemData data) {\n-        for (ItemEntry itemEntry : Toolbox.ITEM_ENTRIES.values()) {\n+        for (ItemEntry itemEntry : Toolbox.ITEM_ENTRIES.valueCollection()) {\n             if (itemEntry.getBedrockId() == data.getId() && itemEntry.getBedrockData() == data.getDamage()) {\n                 return itemEntry;\n             }\ndiff --git a/connector/src/main/java/org/geysermc/connector/utils/Toolbox.java b/connector/src/main/java/org/geysermc/connector/utils/Toolbox.java\nindex be32ada7..4aee4d70 100644\n--- a/connector/src/main/java/org/geysermc/connector/utils/Toolbox.java\n+++ b/connector/src/main/java/org/geysermc/connector/utils/Toolbox.java\n@@ -4,6 +4,8 @@ import com.fasterxml.jackson.databind.ObjectMapper;\n import com.nukkitx.network.VarInts;\n import com.nukkitx.protocol.bedrock.packet.StartGamePacket;\n import com.nukkitx.protocol.bedrock.v361.BedrockUtils;\n+import gnu.trove.map.TIntObjectMap;\n+import gnu.trove.map.hash.TIntObjectHashMap;\n import io.netty.buffer.ByteBuf;\n import io.netty.buffer.Unpooled;\n import org.geysermc.connector.console.GeyserLogger;\n@@ -19,8 +21,8 @@ public class Toolbox {\n     public static final Collection<StartGamePacket.ItemEntry> ITEMS;\n     public static final ByteBuf CACHED_PALLETE;\n \n-    public static final Map<Integer, ItemEntry> ITEM_ENTRIES;\n-    public static final Map<Integer, BlockEntry> BLOCK_ENTRIES;\n+    public static final TIntObjectMap<ItemEntry> ITEM_ENTRIES;\n+    public static final TIntObjectMap<BlockEntry> BLOCK_ENTRIES;\n \n     static {\n         InputStream stream = Toolbox.class.getClassLoader().getResourceAsStream(\"bedrock/cached_palette.json\");\n@@ -79,7 +81,7 @@ public class Toolbox {\n             ex.printStackTrace();\n         }\n \n-        Map<Integer, ItemEntry> itemEntries = new HashMap<>();\n+        TIntObjectMap<ItemEntry> itemEntries = new TIntObjectHashMap<>();\n         int itemIndex = 0;\n \n         for (Map.Entry<String, Map<String, Object>> itemEntry : items.entrySet()) {\n@@ -87,7 +89,7 @@ public class Toolbox {\n             itemIndex++;\n         }\n \n-        ITEM_ENTRIES = Collections.unmodifiableMap(itemEntries);\n+        ITEM_ENTRIES = itemEntries;\n \n         InputStream blockStream = Toolbox.class.getClassLoader().getResourceAsStream(\"blocks.json\");\n         ObjectMapper blockMapper = new ObjectMapper();\n@@ -99,7 +101,7 @@ public class Toolbox {\n             ex.printStackTrace();\n         }\n \n-        Map<Integer, BlockEntry> blockEntries = new HashMap<>();\n+        TIntObjectMap<BlockEntry> blockEntries = new TIntObjectHashMap<>();\n         int blockIndex = 0;\n \n         for (Map.Entry<String, Map<String, Object>> itemEntry : blocks.entrySet()) {\n@@ -113,6 +115,6 @@ public class Toolbox {\n             blockIndex++;\n         }\n \n-        BLOCK_ENTRIES = Collections.unmodifiableMap(blockEntries);\n+        BLOCK_ENTRIES = blockEntries;\n     }\n }\n\\ No newline at end of file",
    "Add tests to assert map identity of certain objects .": "diff --git a/nashorn/make/build.xml b/nashorn/make/build.xml\nindex 93342248de5..78a713bfc46 100644\n--- a/nashorn/make/build.xml\n+++ b/nashorn/make/build.xml\n@@ -282,6 +282,11 @@ grant codeBase \"file:/${basedir}/test/script/trusted/*\" {\n     permission java.security.AllPermission;\n };\n \n+grant codeBase \"file:/${basedir}/test/script/maptests/*\" {\n+    permission java.io.FilePermission \"${basedir}/test/script/maptests/*\",\"read\";\n+    permission java.lang.RuntimePermission \"nashorn.debugMode\";\n+};\n+\n grant codeBase \"file:/${basedir}/test/script/basic/*\" {\n     permission java.io.FilePermission \"${basedir}/test/script/-\", \"read\";\n     permission java.io.FilePermission \"$${user.dir}\", \"read\";\ndiff --git a/nashorn/make/project.properties b/nashorn/make/project.properties\nindex ad36744836b..d51e72e4180 100644\n--- a/nashorn/make/project.properties\n+++ b/nashorn/make/project.properties\n@@ -115,6 +115,7 @@ run.classpath=\\\n test.dir=test\n test.script.dir=test/script\n test.basic.dir=test/script/basic\n+test.maptests.dir=test/script/maptests\n test.error.dir=test/script/error\n test.sandbox.dir=test/script/sandbox\n test.trusted.dir=test/script/trusted\n@@ -125,7 +126,7 @@ testjfx.dir=${test.script.dir}/jfx\n testmarkdown.dir=${test.script.dir}/markdown\n \n test-sys-prop.test.dir=${test.dir}\n-test-sys-prop.test.js.roots=${test.basic.dir} ${test.error.dir} ${test.sandbox.dir} ${test.trusted.dir}\n+test-sys-prop.test.js.roots=${test.basic.dir} ${test.maptests.dir} ${test.error.dir} ${test.sandbox.dir} ${test.trusted.dir}\n test-sys-prop.test262.suite.dir=${test262.suite.dir}\n test-sys-prop.es5conform.testcases.dir=${test.external.dir}/ES5Conform/TestCases\n test-sys-prop.test.basic.dir=${test.basic.dir}\n@@ -278,7 +279,7 @@ run.test.jvmargs.octane.main=${run.test.jvmargs.common}\n run.test.jvmsecurityargs=-Xverify:all -Djava.security.manager -Djava.security.policy=${basedir}/build/nashorn.policy\n \n # VM options for script tests with @fork option\n-test-sys-prop.test.fork.jvm.options=${run.test.jvmargs.main} -Xmx${run.test.xmx} ${run.test.jvmsecurityargs}\n+test-sys-prop.test.fork.jvm.options=${run.test.jvmargs.main} -Xmx${run.test.xmx} ${run.test.jvmsecurityargs} -cp ${run.test.classpath}\n \n # path of rhino.jar for benchmarks\n rhino.jar=\ndiff --git a/nashorn/test/script/currently-failing/gettersetter.js b/nashorn/test/script/currently-failing/gettersetter.js\nnew file mode 100644\nindex 00000000000..88f6949233c\n--- /dev/null\n+++ b/nashorn/test/script/currently-failing/gettersetter.js\n@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2014 Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+/**\n+ * @test\n+ * @option -Dnashorn.debug=true\n+ * @fork\n+ */\n+\n+load(__DIR__ + \"maputil.js\");\n+\n+function Foo() {\n+    return {\n+       get foo() { return 42; },\n+       set foo(x) {}\n+    }\n+}\n+\n+var obj1 = Foo();\n+var obj2 = Foo();\n+\n+assertSameMap(obj1, obj2, \"Object literals before change\");\n+\n+Object.defineProperty(obj2, \"foo\", { get: function() { return 'hello' } });\n+assertSameMap(obj1, obj2);\n+\n+Object.defineProperty(obj2, \"foo\", { set: function(x) { print(x) } });\n+assertSameMap(obj1, obj2);\ndiff --git a/nashorn/test/script/maptests/builtins.js b/nashorn/test/script/maptests/builtins.js\nnew file mode 100644\nindex 00000000000..4de2ec9a8da\n--- /dev/null\n+++ b/nashorn/test/script/maptests/builtins.js\n@@ -0,0 +1,58 @@\n+/*\n+ * Copyright (c) 2014 Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+/**\n+ * @test\n+ * @option -Dnashorn.debug=true\n+ * @fork\n+ */\n+\n+load(__DIR__ + \"maputil.js\");\n+\n+// check that builtin objects share property map\n+\n+assertSameMap(new Boolean(true), new Boolean(false));\n+assertSameMap(new Number(3), new Number(Math.PI));\n+assertSameMap(new String('hello'), new String('world'));\n+assertSameMap(new Object(), new Object());\n+assertSameMap(/hello/, /world/);\n+// try w/without regexp flags\n+assertSameMap(/hello/i, /world/g);\n+assertSameMap(new Date(), new Date());\n+assertSameMap(new Date(2000, 1, 1), new Date(1972, 5, 6));\n+assertSameMap(Function(), Function());\n+assertSameMap(Function(\"x\", \"return x\"), Function(\"x\", \"return x*x\"));\n+assertSameMap(new Error(), new Error());\n+assertSameMap(new Error('foo'), new Error('bar'));\n+assertSameMap(new EvalError(), new EvalError());\n+assertSameMap(new EvalError('foo'), new EvalError('bar'));\n+assertSameMap(new RangeError(), new RangeError());\n+assertSameMap(new RangeError('foo'), new RangeError('bar'));\n+assertSameMap(new ReferenceError(), new ReferenceError());\n+assertSameMap(new ReferenceError('foo'), new ReferenceError('bar'));\n+assertSameMap(new SyntaxError(), new SyntaxError());\n+assertSameMap(new SyntaxError('foo'), new SyntaxError('bar'));\n+assertSameMap(new TypeError(), new TypeError());\n+assertSameMap(new TypeError('foo'), new TypeError('bar'));\n+assertSameMap(new URIError(), new URIError());\n+assertSameMap(new URIError('foo'), new URIError('bar'));\ndiff --git a/nashorn/test/script/maptests/constructor.js b/nashorn/test/script/maptests/constructor.js\nnew file mode 100644\nindex 00000000000..5722a3c15b9\n--- /dev/null\n+++ b/nashorn/test/script/maptests/constructor.js\n@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2014 Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+/**\n+ * @test\n+ * @option -Dnashorn.debug=true\n+ * @fork\n+ */\n+\n+load(__DIR__ + \"point.js\");\n+\n+// use constructor defined in a different script file\n+// These objects should share the map\n+assertSameMap(new Point(2, 3), new Point(43, 23));\n+assertSameMap(new Point(), new Point());\n+assertSameMap(new Point(), new Point(3, 1));\ndiff --git a/nashorn/test/script/maptests/maputil.js b/nashorn/test/script/maptests/maputil.js\nnew file mode 100644\nindex 00000000000..aa85d7f1220\n--- /dev/null\n+++ b/nashorn/test/script/maptests/maputil.js\n@@ -0,0 +1,38 @@\n+/*\n+ * Copyright (c) 2014 Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+/**\n+ * @subtest\n+ */\n+\n+function assertSameMap(obj1, obj2, msg) {\n+    if (! Debug.identical(Debug.map(obj1), Debug.map(obj2))) {\n+        fail(obj1.constructor + \" instances don't share map\");\n+    }\n+}\n+\n+function assertNotSameMap(obj1, obj2, msg) {\n+    if (Debug.identical(Debug.map(obj1), Debug.map(obj2))) {\n+        fail(obj1.constructor + \" and \" + obj2.constructor + \" instances share map\");\n+    }\n+}\ndiff --git a/nashorn/test/script/maptests/object_create.js b/nashorn/test/script/maptests/object_create.js\nnew file mode 100644\nindex 00000000000..1b1bd604c85\n--- /dev/null\n+++ b/nashorn/test/script/maptests/object_create.js\n@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2014 Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+/**\n+ * @test\n+ * @option -Dnashorn.debug=true\n+ * @fork\n+ */\n+\n+load(__DIR__ + \"maputil.js\");\n+\n+// Objects created by Object.create\n+var obj1 = Object.create(Object.prototype);\n+var obj2 = Object.create(Object.prototype);\n+assertSameMap(obj1, obj2);\n+\n+var proto = { foo: 233 };\n+obj1 = Object.create(proto);\n+obj2 = Object.create(proto);\n+assertSameMap(obj1, obj2);\ndiff --git a/nashorn/test/script/maptests/object_literals.js b/nashorn/test/script/maptests/object_literals.js\nnew file mode 100644\nindex 00000000000..c73d80140c7\n--- /dev/null\n+++ b/nashorn/test/script/maptests/object_literals.js\n@@ -0,0 +1,46 @@\n+/*\n+ * Copyright (c) 2014 Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+/**\n+ * @test\n+ * @option -Dnashorn.debug=true\n+ * @fork\n+ */\n+\n+load(__DIR__ + \"maputil.js\");\n+\n+// Object literals created at the same callsite\n+function makeObject() {\n+    return { foo: 34 }\n+}\n+assertSameMap(makeObject(), makeObject());\n+\n+function makeObject2() {\n+    return { foo: 42, bar: 'hello' }\n+}\n+assertSameMap(makeObject2(), makeObject2());\n+\n+// Object literals created at different callsites\n+assertSameMap({}, {});\n+assertSameMap({foo: 4}, {foo: 'hello'});\n+assertSameMap({foo: 34, bar: 'fdgd'}, {foo: 'world', bar: 54});\ndiff --git a/nashorn/test/script/maptests/point.js b/nashorn/test/script/maptests/point.js\nnew file mode 100644\nindex 00000000000..38b8fa2513a\n--- /dev/null\n+++ b/nashorn/test/script/maptests/point.js\n@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) 2014 Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+\n+/**\n+ * @subtest\n+ */\n+\n+function Point(x, y) {\n+   this.x =x; this.y =y;\n+}\n+\n+Point.prototype.toString = function() {\n+    return \"(\" + this.x + \",\" + this.y + \")\";\n+}\n+\n+Point.prototype.modulus = function() {\n+    return Math.sqrt(this.x*this.x + this.y*this.y);\n+}\n+\n+Point.prototype.argument = function() {\n+    return Math.atan2(this.y, this.x);\n+}\n+\n+load(__DIR__ + \"maputil.js\");\n+\n+assertSameMap(new Point(2, 3), new Point(43, 23));\n+assertSameMap(new Point(), new Point());\n+assertSameMap(new Point(), new Point(3, 1));\ndiff --git a/nashorn/test/script/maptests/property_add.js b/nashorn/test/script/maptests/property_add.js\nnew file mode 100644\nindex 00000000000..2026455459d\n--- /dev/null\n+++ b/nashorn/test/script/maptests/property_add.js\n@@ -0,0 +1,46 @@\n+/*\n+ * Copyright (c) 2014 Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+/**\n+ * @test\n+ * @option -Dnashorn.debug=true\n+ * @fork\n+ */\n+\n+load(__DIR__ + \"maputil.js\");\n+\n+function Foo() {}\n+\n+var obj1 = new Foo();\n+var obj2 = new Foo();\n+\n+assertSameMap(obj1, obj2);\n+\n+// property addition at same callsite\n+function addX(obj, val) {\n+   obj.x = val;\n+}\n+addX(obj1, 3);\n+addX(obj2, 'hello');\n+\n+assertSameMap(obj1, obj2);\ndiff --git a/nashorn/test/script/maptests/property_delete.js b/nashorn/test/script/maptests/property_delete.js\nnew file mode 100644\nindex 00000000000..e2824dd6315\n--- /dev/null\n+++ b/nashorn/test/script/maptests/property_delete.js\n@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2014 Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+/**\n+ * @test\n+ * @option -Dnashorn.debug=true\n+ * @fork\n+ */\n+\n+load(__DIR__ + \"maputil.js\");\n+\n+function Foo() {\n+    this.x = 33;\n+}\n+\n+var obj1 = new Foo();\n+var obj2 = new Foo();\n+\n+assertSameMap(obj1, obj2);\n+\n+// property deletion at same callsite\n+function deleteX(obj) {\n+   delete obj.x;\n+}\n+deleteX(obj1);\n+deleteX(obj2);\n+\n+assertSameMap(obj1, obj2);\ndiff --git a/nashorn/test/script/maptests/proto.js b/nashorn/test/script/maptests/proto.js\nnew file mode 100644\nindex 00000000000..afb59509a0a\n--- /dev/null\n+++ b/nashorn/test/script/maptests/proto.js\n@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2014 Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+/**\n+ * @test\n+ * @option -Dnashorn.debug=true\n+ * @fork\n+ */\n+\n+load(__DIR__ + \"maputil.js\");\n+\n+// add/delete property to proto (direct/indirect) should\n+// not affect the property map of the objects\n+\n+var proto2 = { foo: 334 }\n+var proto  = Object.create(proto2);\n+proto.bar = \"hello\";\n+\n+var obj1 = Object.create(proto);\n+var obj2 = Object.create(proto);\n+\n+assertSameMap(obj1, obj2);\n+\n+proto.newX = 'world';\n+assertSameMap(obj1, obj2);\n+\n+delete proto.newX;\n+assertSameMap(obj1, obj2);\n+\n+proto2.newX = \"foo\";\n+assertSameMap(obj1, obj2);\n+\n+delete proto2.newX;\n+assertSameMap(obj1, obj2);\n+\n+",
    "Add support for SO_REUSEPORT in native transport .": "diff --git a/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c\nindex 6d7c407f74..d8b3184454 100644\n--- a/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c\n+++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c\n@@ -27,6 +27,7 @@\n #include <unistd.h>\n #include <arpa/inet.h>\n #include <fcntl.h>\n+#include <sys/utsname.h>\n #include \"io_netty_channel_epoll_Native.h\"\n \n \n@@ -896,6 +897,10 @@ JNIEXPORT void JNICALL Java_io_netty_channel_epoll_Native_setReuseAddress(JNIEnv\n     setOption(env, fd, SOL_SOCKET, SO_REUSEADDR, &optval, sizeof(optval));\n }\n \n+JNIEXPORT void JNICALL Java_io_netty_channel_epoll_Native_setReusePort(JNIEnv * env, jclass clazz, jint fd, jint optval) {\n+    setOption(env, fd, SOL_SOCKET, SO_REUSEPORT, &optval, sizeof(optval));\n+}\n+\n JNIEXPORT void JNICALL Java_io_netty_channel_epoll_Native_setTcpNoDelay(JNIEnv *env, jclass clazz, jint fd, jint optval) {\n     setOption(env, fd, IPPROTO_TCP, TCP_NODELAY, &optval, sizeof(optval));\n }\n@@ -940,6 +945,14 @@ JNIEXPORT jint JNICALL Java_io_netty_channel_epoll_Native_isReuseAddresss(JNIEnv\n     return optval;\n }\n \n+JNIEXPORT jint JNICALL Java_io_netty_channel_epoll_Native_isReusePort(JNIEnv *env, jclass clazz, jint fd) {\n+    int optval;\n+    if (getOption(env, fd, SOL_SOCKET, SO_REUSEPORT, &optval, sizeof(optval)) == -1) {\n+        return -1;\n+    }\n+    return optval;\n+}\n+\n JNIEXPORT jint JNICALL Java_io_netty_channel_epoll_Native_isTcpNoDelay(JNIEnv *env, jclass clazz, jint fd) {\n     int optval;\n     if (getOption(env, fd, IPPROTO_TCP, TCP_NODELAY, &optval, sizeof(optval)) == -1) {\n@@ -991,3 +1004,16 @@ JNIEXPORT jint JNICALL Java_io_netty_channel_epoll_Native_getTrafficClass(JNIEnv\n     }\n     return optval;\n }\n+\n+JNIEXPORT jstring JNICALL Java_io_netty_channel_epoll_Native_kernelVersion(JNIEnv *env, jclass clazz) {\n+    struct utsname name;\n+\n+    int res = uname(&name);\n+    if (res == 0) {\n+        return (*env)->NewStringUTF(env, name.release);\n+    }\n+    int err = errno;\n+    throwRuntimeException(env, exceptionMessage(\"Error during uname(...): \", err));\n+    return NULL;\n+\n+}\ndiff --git a/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.h b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.h\nindex 6b6943da45..a82107ee02 100644\n--- a/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.h\n+++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.h\n@@ -48,6 +48,7 @@ jlong Java_io_netty_channel_epoll_Native_sendfile(JNIEnv *env, jclass clazz, jin\n jobject Java_io_netty_channel_epoll_Native_remoteAddress(JNIEnv * env, jclass clazz, jint fd);\n jobject Java_io_netty_channel_epoll_Native_localAddress(JNIEnv * env, jclass clazz, jint fd);\n void Java_io_netty_channel_epoll_Native_setReuseAddress(JNIEnv * env, jclass clazz, jint fd, jint optval);\n+void Java_io_netty_channel_epoll_Native_setReusePort(JNIEnv * env, jclass clazz, jint fd, jint optval);\n void Java_io_netty_channel_epoll_Native_setTcpNoDelay(JNIEnv *env, jclass clazz, jint fd, jint optval);\n void Java_io_netty_channel_epoll_Native_setReceiveBufferSize(JNIEnv *env, jclass clazz, jint fd, jint optval);\n void Java_io_netty_channel_epoll_Native_setSendBufferSize(JNIEnv *env, jclass clazz, jint fd, jint optval);\n@@ -56,9 +57,11 @@ void Java_io_netty_channel_epoll_Native_setTcpCork(JNIEnv *env, jclass clazz, ji\n void Java_io_netty_channel_epoll_Native_setSoLinger(JNIEnv *env, jclass clazz, jint fd, jint optval);\n void Java_io_netty_channel_epoll_Native_setTrafficClass(JNIEnv *env, jclass clazz, jint fd, jint optval);\n jint Java_io_netty_channel_epoll_Native_isReuseAddresss(JNIEnv *env, jclass clazz, jint fd);\n+jint Java_io_netty_channel_epoll_Native_isReusePort(JNIEnv *env, jclass clazz, jint fd);\n jint Java_io_netty_channel_epoll_Native_isTcpNoDelay(JNIEnv *env, jclass clazz, jint fd);\n jint Java_io_netty_channel_epoll_Native_getReceiveBufferSize(JNIEnv * env, jclass clazz, jint fd);\n jint Java_io_netty_channel_epoll_Native_getSendBufferSize(JNIEnv *env, jclass clazz, jint fd);\n jint Java_io_netty_channel_epoll_Native_isTcpCork(JNIEnv *env, jclass clazz, jint fd);\n jint Java_io_netty_channel_epoll_Native_getSoLinger(JNIEnv *env, jclass clazz, jint fd);\n jint Java_io_netty_channel_epoll_Native_getTrafficClass(JNIEnv *env, jclass clazz, jint fd);\n+jstring Java_io_netty_channel_epoll_Native_kernelVersion(JNIEnv *env, jclass clazz);\ndiff --git a/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOption.java b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOption.java\nindex 58f189641f..060874563b 100644\n--- a/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOption.java\n+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOption.java\n@@ -21,6 +21,8 @@ public final class EpollChannelOption {\n     private static final Class<EpollChannelOption> T = EpollChannelOption.class;\n \n     public static final ChannelOption<Boolean> TCP_CORK = ChannelOption.valueOf(T, \"TCP_CORK\");\n+    public static final ChannelOption<Boolean> SO_REUSEPORT = ChannelOption.valueOf(T, \"SO_REUSEPORT\");\n \n     private EpollChannelOption() { }\n+\n }\ndiff --git a/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java\nindex fb851e1ab8..ae5d545b87 100644\n--- a/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java\n+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java\n@@ -20,7 +20,6 @@ import io.netty.channel.ChannelPipeline;\n import io.netty.channel.ChannelPromise;\n import io.netty.channel.EventLoop;\n import io.netty.channel.socket.ServerSocketChannel;\n-import io.netty.channel.socket.ServerSocketChannelConfig;\n \n import java.net.InetSocketAddress;\n import java.net.SocketAddress;\n@@ -55,7 +54,7 @@ public final class EpollServerSocketChannel extends AbstractEpollChannel impleme\n     }\n \n     @Override\n-    public ServerSocketChannelConfig config() {\n+    public EpollServerSocketChannelConfig config() {\n         return config;\n     }\n \ndiff --git a/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannelConfig.java b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannelConfig.java\nindex 791a65b46a..9b8a947def 100644\n--- a/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannelConfig.java\n+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannelConfig.java\n@@ -29,7 +29,7 @@ import static io.netty.channel.ChannelOption.SO_BACKLOG;\n import static io.netty.channel.ChannelOption.SO_RCVBUF;\n import static io.netty.channel.ChannelOption.SO_REUSEADDR;\n \n-final class EpollServerSocketChannelConfig extends DefaultChannelConfig\n+public final class EpollServerSocketChannelConfig extends DefaultChannelConfig\n         implements ServerSocketChannelConfig {\n \n     private final EpollServerSocketChannel channel;\n@@ -42,7 +42,7 @@ final class EpollServerSocketChannelConfig extends DefaultChannelConfig\n \n     @Override\n     public Map<ChannelOption<?>, Object> getOptions() {\n-        return getOptions(super.getOptions(), SO_RCVBUF, SO_REUSEADDR, SO_BACKLOG);\n+        return getOptions(super.getOptions(), SO_RCVBUF, SO_REUSEADDR, SO_BACKLOG, EpollChannelOption.SO_REUSEPORT);\n     }\n \n     @SuppressWarnings(\"unchecked\")\n@@ -57,7 +57,9 @@ final class EpollServerSocketChannelConfig extends DefaultChannelConfig\n         if (option == SO_BACKLOG) {\n             return (T) Integer.valueOf(getBacklog());\n         }\n-\n+        if (option == EpollChannelOption.SO_REUSEPORT) {\n+            return (T) Boolean.valueOf(isReusePort());\n+        }\n         return super.getOption(option);\n     }\n \n@@ -71,6 +73,8 @@ final class EpollServerSocketChannelConfig extends DefaultChannelConfig\n             setReuseAddress((Boolean) value);\n         } else if (option == SO_BACKLOG) {\n             setBacklog((Integer) value);\n+        } else if (option == EpollChannelOption.SO_REUSEPORT) {\n+            setReusePort((Boolean) value);\n         } else {\n             return super.setOption(option, value);\n         }\n@@ -84,7 +88,7 @@ final class EpollServerSocketChannelConfig extends DefaultChannelConfig\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setReuseAddress(boolean reuseAddress) {\n+    public EpollServerSocketChannelConfig setReuseAddress(boolean reuseAddress) {\n         Native.setReuseAddress(channel.fd, reuseAddress ? 1 : 0);\n         return this;\n     }\n@@ -95,14 +99,14 @@ final class EpollServerSocketChannelConfig extends DefaultChannelConfig\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setReceiveBufferSize(int receiveBufferSize) {\n+    public EpollServerSocketChannelConfig setReceiveBufferSize(int receiveBufferSize) {\n         Native.setReceiveBufferSize(channel.fd, receiveBufferSize);\n \n         return this;\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setPerformancePreferences(int connectionTime, int latency, int bandwidth) {\n+    public EpollServerSocketChannelConfig setPerformancePreferences(int connectionTime, int latency, int bandwidth) {\n         return this;\n     }\n \n@@ -112,7 +116,7 @@ final class EpollServerSocketChannelConfig extends DefaultChannelConfig\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setBacklog(int backlog) {\n+    public EpollServerSocketChannelConfig setBacklog(int backlog) {\n         if (backlog < 0) {\n             throw new IllegalArgumentException(\"backlog: \" + backlog);\n         }\n@@ -121,56 +125,76 @@ final class EpollServerSocketChannelConfig extends DefaultChannelConfig\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setConnectTimeoutMillis(int connectTimeoutMillis) {\n+    public EpollServerSocketChannelConfig setConnectTimeoutMillis(int connectTimeoutMillis) {\n         super.setConnectTimeoutMillis(connectTimeoutMillis);\n         return this;\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setMaxMessagesPerRead(int maxMessagesPerRead) {\n+    public EpollServerSocketChannelConfig setMaxMessagesPerRead(int maxMessagesPerRead) {\n         super.setMaxMessagesPerRead(maxMessagesPerRead);\n         return this;\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setWriteSpinCount(int writeSpinCount) {\n+    public EpollServerSocketChannelConfig setWriteSpinCount(int writeSpinCount) {\n         super.setWriteSpinCount(writeSpinCount);\n         return this;\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setAllocator(ByteBufAllocator allocator) {\n+    public EpollServerSocketChannelConfig setAllocator(ByteBufAllocator allocator) {\n         super.setAllocator(allocator);\n         return this;\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setRecvByteBufAllocator(RecvByteBufAllocator allocator) {\n+    public EpollServerSocketChannelConfig setRecvByteBufAllocator(RecvByteBufAllocator allocator) {\n         super.setRecvByteBufAllocator(allocator);\n         return this;\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setAutoRead(boolean autoRead) {\n+    public EpollServerSocketChannelConfig setAutoRead(boolean autoRead) {\n         super.setAutoRead(autoRead);\n         return this;\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setWriteBufferHighWaterMark(int writeBufferHighWaterMark) {\n+    public EpollServerSocketChannelConfig setWriteBufferHighWaterMark(int writeBufferHighWaterMark) {\n         super.setWriteBufferHighWaterMark(writeBufferHighWaterMark);\n         return this;\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setWriteBufferLowWaterMark(int writeBufferLowWaterMark) {\n+    public EpollServerSocketChannelConfig setWriteBufferLowWaterMark(int writeBufferLowWaterMark) {\n         super.setWriteBufferLowWaterMark(writeBufferLowWaterMark);\n         return this;\n     }\n \n     @Override\n-    public ServerSocketChannelConfig setMessageSizeEstimator(MessageSizeEstimator estimator) {\n+    public EpollServerSocketChannelConfig setMessageSizeEstimator(MessageSizeEstimator estimator) {\n         super.setMessageSizeEstimator(estimator);\n         return this;\n     }\n+\n+    /**\n+     * Returns {@code true} if the SO_REUSEPORT option is set.\n+     */\n+    public boolean isReusePort() {\n+        return Native.isReusePort(channel.fd) == 1;\n+    }\n+\n+    /**\n+     * Set the SO_REUSEPORT option on the underlying Channel. This will allow to bind multiple\n+     * {@link EpollSocketChannel}s to the same port and so accept connections with multiple threads.\n+     *\n+     * Be aware this method needs be called before {@link EpollSocketChannel#bind(java.net.SocketAddress)} to have\n+     * any affect.\n+     */\n+    public EpollServerSocketChannelConfig setReusePort(boolean reusePort) {\n+        Native.setReusePort(channel.fd, reusePort ? 1 : 0);\n+        return this;\n+    }\n+\n }\ndiff --git a/transport-native-epoll/src/main/java/io/netty/channel/epoll/Native.java b/transport-native-epoll/src/main/java/io/netty/channel/epoll/Native.java\nindex 43f7cfeebb..0a9532ede4 100644\n--- a/transport-native-epoll/src/main/java/io/netty/channel/epoll/Native.java\n+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/Native.java\n@@ -127,6 +127,7 @@ final class Native {\n     public static native int getSendBufferSize(int fd);\n     public static native int isKeepAlive(int fd);\n     public static native int isReuseAddress(int fd);\n+    public static native int isReusePort(int fd);\n     public static native int isTcpNoDelay(int fd);\n     public static native int isTcpCork(int fd);\n     public static native int getSoLinger(int fd);\n@@ -135,12 +136,14 @@ final class Native {\n     public static native void setKeepAlive(int fd, int keepAlive);\n     public static native void setReceiveBufferSize(int fd, int receiveBufferSize);\n     public static native void setReuseAddress(int fd, int reuseAddress);\n+    public static native void setReusePort(int fd, int reuseAddress);\n     public static native void setSendBufferSize(int fd, int sendBufferSize);\n     public static native void setTcpNoDelay(int fd, int tcpNoDelay);\n     public static native void setTcpCork(int fd, int tcpCork);\n     public static native void setSoLinger(int fd, int soLinger);\n     public static native void setTrafficClass(int fd, int tcpNoDelay);\n \n+    public static native String kernelVersion();\n     private Native() {\n         // utility\n     }\ndiff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollReuseAddrTest.java b/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollReuseAddrTest.java\nnew file mode 100644\nindex 0000000000..5b5fc5a5ff\n--- /dev/null\n+++ b/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollReuseAddrTest.java\n@@ -0,0 +1,132 @@\n+/*\n+ * Copyright 2014 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.channel.epoll;\n+\n+import io.netty.bootstrap.ServerBootstrap;\n+import io.netty.channel.ChannelFuture;\n+import io.netty.channel.ChannelHandler;\n+import io.netty.channel.ChannelHandlerAdapter;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.ChannelInboundHandlerAdapter;\n+import io.netty.channel.ChannelOption;\n+import io.netty.testsuite.util.TestUtils;\n+import org.junit.Assert;\n+import org.junit.Assume;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.net.InetSocketAddress;\n+import java.net.Socket;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+public class EpollReuseAddrTest {\n+    private static final int MAJOR;\n+    private static final int MINOR;\n+    private static final int BUGFIX;\n+    static {\n+        String kernelVersion = Native.kernelVersion();\n+        int index = kernelVersion.indexOf(\"-\");\n+        if (index > -1) {\n+            kernelVersion = kernelVersion.substring(0, index);\n+        }\n+        String[] versionParts = kernelVersion.split(\"\\\\.\");\n+        if (versionParts.length == 3) {\n+            MAJOR = Integer.parseInt(versionParts[0]);\n+            MINOR = Integer.parseInt(versionParts[1]);\n+            BUGFIX = Integer.parseInt(versionParts[2]);\n+        } else {\n+            throw new IllegalStateException();\n+        }\n+    }\n+\n+    @Test\n+    public void testMultipleBindWithoutReusePortFails() {\n+        Assume.assumeTrue(versionEqOrGt(3, 9, 0));\n+        ServerBootstrap bootstrap = createBootstrap();\n+        ChannelFuture future = bootstrap.bind().syncUninterruptibly();\n+        try {\n+            bootstrap.bind().syncUninterruptibly();\n+            Assert.fail();\n+        } catch (Exception e) {\n+            Assert.assertTrue(e instanceof IOException);\n+        }\n+        future.channel().close().syncUninterruptibly();\n+    }\n+\n+    @Test(timeout = 10000)\n+    public void testMultipleBind() throws Exception {\n+        Assume.assumeTrue(versionEqOrGt(3, 9, 0));\n+        ServerBootstrap bootstrap = createBootstrap();\n+        bootstrap.option(EpollChannelOption.SO_REUSEPORT, true);\n+        final AtomicBoolean accepted1 = new AtomicBoolean();\n+        bootstrap.childHandler(new TestHandler(accepted1));\n+        ChannelFuture future = bootstrap.bind().syncUninterruptibly();\n+\n+        final AtomicBoolean accepted2 = new AtomicBoolean();\n+        bootstrap.childHandler(new TestHandler(accepted2));\n+        ChannelFuture future2 = bootstrap.bind().syncUninterruptibly();\n+        InetSocketAddress address = (InetSocketAddress) future2.channel().localAddress();\n+\n+        while (!accepted1.get() || !accepted2.get()) {\n+            Socket socket = new Socket(address.getAddress(), address.getPort());\n+            socket.setReuseAddress(true);\n+            socket.close();\n+        }\n+        future.channel().close().syncUninterruptibly();\n+        future2.channel().close().syncUninterruptibly();\n+    }\n+\n+    private ServerBootstrap createBootstrap() {\n+        ServerBootstrap bootstrap = new ServerBootstrap();\n+        bootstrap.group(EpollSocketTestPermutation.EPOLL_BOSS_GROUP, EpollSocketTestPermutation.EPOLL_WORKER_GROUP);\n+        bootstrap.channel(EpollServerSocketChannel.class);\n+        bootstrap.childHandler(new ChannelHandlerAdapter() { });\n+        bootstrap.option(ChannelOption.SO_REUSEADDR, true);\n+        InetSocketAddress address = new InetSocketAddress(TestUtils.getFreePort());\n+        bootstrap.localAddress(address);\n+        return bootstrap;\n+    }\n+\n+    private static boolean versionEqOrGt(int major, int minor, int bugfix)  {\n+        if (MAJOR > major) {\n+            return true;\n+        } else if (MAJOR == major) {\n+            if (MINOR > minor) {\n+                return true;\n+            } else if (MINOR == minor) {\n+                if (BUGFIX >= bugfix) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    @ChannelHandler.Sharable\n+    private static class TestHandler extends ChannelInboundHandlerAdapter {\n+        private final AtomicBoolean accepted;\n+\n+        TestHandler(AtomicBoolean accepted) {\n+            this.accepted = accepted;\n+        }\n+\n+        @Override\n+        public void channelActive(ChannelHandlerContext ctx) throws Exception {\n+            accepted.set(true);\n+            ctx.close();\n+        }\n+    }\n+}\ndiff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTestPermutation.java b/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTestPermutation.java\nindex a452a956e4..e08562e5e6 100644\n--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTestPermutation.java\n+++ b/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTestPermutation.java\n@@ -32,9 +32,9 @@ class EpollSocketTestPermutation extends SocketTestPermutation {\n \n     static final SocketTestPermutation INSTANCE = new EpollSocketTestPermutation();\n \n-    private final EventLoopGroup epollBossGroup =\n+    static final EventLoopGroup EPOLL_BOSS_GROUP =\n             new EpollEventLoopGroup(BOSSES, new DefaultThreadFactory(\"testsuite-epoll-boss\", true));\n-    private final EventLoopGroup epollWorkerGroup =\n+    static final EventLoopGroup EPOLL_WORKER_GROUP =\n             new EpollEventLoopGroup(WORKERS, new DefaultThreadFactory(\"testsuite-epoll-worker\", true));\n \n     @Override\n@@ -54,7 +54,7 @@ class EpollSocketTestPermutation extends SocketTestPermutation {\n                 new BootstrapFactory<ServerBootstrap>() {\n                     @Override\n                     public ServerBootstrap newInstance() {\n-                        return new ServerBootstrap().group(epollBossGroup, epollWorkerGroup)\n+                        return new ServerBootstrap().group(EPOLL_BOSS_GROUP, EPOLL_WORKER_GROUP)\n                                 .channel(EpollServerSocketChannel.class);\n                     }\n                 },\n@@ -74,7 +74,7 @@ class EpollSocketTestPermutation extends SocketTestPermutation {\n                 new BootstrapFactory<Bootstrap>() {\n                     @Override\n                     public Bootstrap newInstance() {\n-                        return new Bootstrap().group(epollWorkerGroup).channel(EpollSocketChannel.class);\n+                        return new Bootstrap().group(EPOLL_WORKER_GROUP).channel(EpollSocketChannel.class);\n                     }\n                 },\n                 new BootstrapFactory<Bootstrap>() {",
    "Add an unchecked exception for JSON .": "diff --git a/AnkiDroid/src/main/java/com/ichi2/utils/JSONException.java b/AnkiDroid/src/main/java/com/ichi2/utils/JSONException.java\nnew file mode 100644\nindex 0000000000..1d4bef5a7e\n--- /dev/null\n+++ b/AnkiDroid/src/main/java/com/ichi2/utils/JSONException.java\n@@ -0,0 +1,39 @@\n+package com.ichi2.utils;\n+\n+\n+\n+/**\n+   Similar to JSONException in meaning, but unchecked */\n+public class JSONException extends RuntimeException {\n+\n+    private JSONException exc = null;\n+\n+    public JSONException(String s) {\n+        super(s);\n+    }\n+\n+    public JSONException() {\n+        super();\n+    }\n+\n+    public JSONException(Throwable e) {\n+        super(e);\n+    }\n+\n+    public JSONException(JSONException e) {\n+        super(e);\n+        exc = e;\n+    }\n+\n+    public JSONException asException() {\n+        if (exc!=null) {\n+            return exc;\n+        } else {\n+            return new JSONException(toString());\n+        }\n+    }\n+\n+    public void throwAsException() throws JSONException {\n+        throw asException();\n+    }\n+}",
    "added an example of using the SSL enabled components": "diff --git a/logback-examples/src/main/java/chapters/appenders/socket/ssl/SocketClient.java b/logback-examples/src/main/java/chapters/appenders/socket/ssl/SocketClient.java\nnew file mode 100644\nindex 000000000..f3da32c52\n--- /dev/null\n+++ b/logback-examples/src/main/java/chapters/appenders/socket/ssl/SocketClient.java\n@@ -0,0 +1,73 @@\n+/**\n+ * Logback: the reliable, generic, fast and flexible logging framework.\n+ * Copyright (C) 1999-2011, QOS.ch. All rights reserved.\n+ *\n+ * This program and the accompanying materials are dual-licensed under\n+ * either the terms of the Eclipse Public License v1.0 as published by\n+ * the Eclipse Foundation\n+ *\n+ *   or (per the licensee's choosing)\n+ *\n+ * under the terms of the GNU Lesser General Public License version 2.1\n+ * as published by the Free Software Foundation.\n+ */\n+package chapters.appenders.socket.ssl;\n+\n+import java.io.BufferedReader;\n+import java.io.InputStreamReader;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import ch.qos.logback.classic.LoggerContext;\n+import ch.qos.logback.classic.joran.JoranConfigurator;\n+\n+\n+/**\n+ * This application uses an SSLSocketAppender that log messages to a\n+ * server on a host and port specified by the user. It waits for the\n+ * user to type a message which will be sent to the server.\n+ * */\n+public class SocketClient {\n+  static void usage(String msg) {\n+    System.err.println(msg);\n+    System.err.println(\"Usage: java \" + SocketClient.class.getName() +\n+      \" configFile\\n\" +\n+      \"   configFile a logback configuration file\" +\n+      \"   in XML format.\");\n+    System.exit(1);\n+  }\n+\n+  static public void main(String[] args) throws Exception {\n+    if (args.length != 1) {\n+      usage(\"Wrong number of arguments.\");\n+    }\n+\n+    String configFile = args[0];\n+\n+    if (configFile.endsWith(\".xml\")) {\n+      LoggerContext lc = (LoggerContext) LoggerFactory.getILoggerFactory();\n+      JoranConfigurator configurator = new JoranConfigurator();\n+      lc.stop();\n+      configurator.setContext(lc);\n+      configurator.doConfigure(configFile);\n+    }\n+\n+    Logger logger = LoggerFactory.getLogger(SocketClient.class);\n+\n+    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n+\n+    while (true) {\n+      System.out.println(\n+        \"Type a message to send to log server. Type 'q' to quit.\");\n+\n+      String s = reader.readLine();\n+\n+      if (s.equals(\"q\")) {\n+        break;\n+      } else {\n+        logger.debug(s);\n+      }\n+    }\n+  }\n+}\ndiff --git a/logback-examples/src/main/java/chapters/appenders/socket/ssl/SocketServer.java b/logback-examples/src/main/java/chapters/appenders/socket/ssl/SocketServer.java\nnew file mode 100644\nindex 000000000..66e8a0355\n--- /dev/null\n+++ b/logback-examples/src/main/java/chapters/appenders/socket/ssl/SocketServer.java\n@@ -0,0 +1,54 @@\n+/**\n+ * Logback: the reliable, generic, fast and flexible logging framework.\n+ * Copyright (C) 1999-2011, QOS.ch. All rights reserved.\n+ *\n+ * This program and the accompanying materials are dual-licensed under\n+ * either the terms of the Eclipse Public License v1.0 as published by\n+ * the Eclipse Foundation\n+ *\n+ *   or (per the licensee's choosing)\n+ *\n+ * under the terms of the GNU Lesser General Public License version 2.1\n+ * as published by the Free Software Foundation.\n+ */\n+package chapters.appenders.socket.ssl;\n+\n+import org.slf4j.LoggerFactory;\n+\n+import ch.qos.logback.classic.LoggerContext;\n+import ch.qos.logback.classic.joran.JoranConfigurator;\n+\n+\n+/**\n+ * This application uses an SSLSocketServer that log messages to a\n+ * server on a host and port specified by the user. It waits for the\n+ * user to type a message which will be sent to the server.\n+ * */\n+public class SocketServer {\n+  static void usage(String msg) {\n+    System.err.println(msg);\n+    System.err.println(\"Usage: java \" + SocketServer.class.getName() +\n+      \" configFile\\n\" +\n+      \"   configFile a logback configuration file\" +\n+      \"   in XML format.\");\n+    System.exit(1);\n+  }\n+\n+  static public void main(String[] args) throws Exception {\n+    if (args.length != 1) {\n+      usage(\"Wrong number of arguments.\");\n+    }\n+\n+    String configFile = args[0];\n+\n+    if (configFile.endsWith(\".xml\")) {\n+      LoggerContext lc = (LoggerContext) LoggerFactory.getILoggerFactory();\n+      JoranConfigurator configurator = new JoranConfigurator();\n+      lc.stop();\n+      configurator.setContext(lc);\n+      configurator.doConfigure(configFile);\n+    }\n+\n+    Thread.sleep(Long.MAX_VALUE);\n+  }\n+}\ndiff --git a/logback-examples/src/main/java/chapters/appenders/socket/ssl/client.xml b/logback-examples/src/main/java/chapters/appenders/socket/ssl/client.xml\nnew file mode 100644\nindex 000000000..0dbc8fc8e\n--- /dev/null\n+++ b/logback-examples/src/main/java/chapters/appenders/socket/ssl/client.xml\n@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+\n+<!-- ==================================================================== -->\n+<!-- Sample SSLSocketAppender configuration.                                 -->\n+<!-- ==================================================================== -->\n+\n+<configuration debug=\"true\">\n+\t  \n+  <appender name=\"SOCKET\" class=\"ch.qos.logback.classic.net.SSLSocketAppender\">\n+    <remoteHost>${host}</remoteHost>\n+    <port>${port}</port>\n+    <reconnectionDelay>10000</reconnectionDelay>\n+    <ssl>\n+      <trustStore>\n+        <location>${truststore}</location>\n+        <passphrase>${passphrase}</passphrase>\n+      </trustStore>\n+    </ssl>\n+  </appender>\n+\n+  <root level=\"debug\">\n+    <appender-ref ref=\"SOCKET\" />\n+  </root>  \n+\n+</configuration>\n+\n+\n+\ndiff --git a/logback-examples/src/main/java/chapters/appenders/socket/ssl/keystore.jks b/logback-examples/src/main/java/chapters/appenders/socket/ssl/keystore.jks\nnew file mode 100644\nindex 000000000..274e4d159\nBinary files /dev/null and b/logback-examples/src/main/java/chapters/appenders/socket/ssl/keystore.jks differ\ndiff --git a/logback-examples/src/main/java/chapters/appenders/socket/ssl/server.xml b/logback-examples/src/main/java/chapters/appenders/socket/ssl/server.xml\nnew file mode 100644\nindex 000000000..aa7fe3757\n--- /dev/null\n+++ b/logback-examples/src/main/java/chapters/appenders/socket/ssl/server.xml\n@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+\n+<!-- ==================================================================== -->\n+<!-- Sample SSLSocketServer configuration.                                 -->\n+<!-- ==================================================================== -->\n+\n+<configuration debug=\"true\">\n+\n+  <server class=\"ch.qos.logback.classic.net.server.SSLSocketServer\">\n+    <port>${port}</port>\n+    <ssl>\n+      <keyStore>\n+        <location>${keystore}</location>\n+        <passphrase>${passphrase}</passphrase>\n+      </keyStore>\n+    </ssl>\n+  </server>\n+  \n+  <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">\n+    <encoder>\n+      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>\n+    </encoder>\n+  </appender>\n+  \n+  <root level=\"debug\">\n+    <appender-ref ref=\"CONSOLE\" />\n+  </root>\n+  \n+</configuration>\n+\n+\n+\ndiff --git a/logback-examples/src/main/java/chapters/appenders/socket/ssl/truststore.jks b/logback-examples/src/main/java/chapters/appenders/socket/ssl/truststore.jks\nnew file mode 100644\nindex 000000000..93498fb44\nBinary files /dev/null and b/logback-examples/src/main/java/chapters/appenders/socket/ssl/truststore.jks differ",
    "added teststubs": "diff --git a/sopremo/sopremo-common/src/test/java/eu/stratosphere/sopremo/jsondatamodel/JsonNodeTest.java b/sopremo/sopremo-common/src/test/java/eu/stratosphere/sopremo/jsondatamodel/JsonNodeTest.java\nnew file mode 100644\nindex 00000000000..2be4985fbdf\n--- /dev/null\n+++ b/sopremo/sopremo-common/src/test/java/eu/stratosphere/sopremo/jsondatamodel/JsonNodeTest.java\n@@ -0,0 +1,5 @@\n+package eu.stratosphere.sopremo.jsondatamodel;\n+\n+public class JsonNodeTest {\n+\t//generic tests for every JsonNode\n+}\ndiff --git a/sopremo/sopremo-common/src/test/java/eu/stratosphere/sopremo/jsondatamodel/TextNodeTest.java b/sopremo/sopremo-common/src/test/java/eu/stratosphere/sopremo/jsondatamodel/TextNodeTest.java\nnew file mode 100644\nindex 00000000000..01c4c779f4b\n--- /dev/null\n+++ b/sopremo/sopremo-common/src/test/java/eu/stratosphere/sopremo/jsondatamodel/TextNodeTest.java\n@@ -0,0 +1,5 @@\n+package eu.stratosphere.sopremo.jsondatamodel;\n+\n+public class TextNodeTest extends JsonNodeTest {\n+\n+}",
    "Rename DebugCsvSpec to match test naming convention .": "diff --git a/sql/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/DebugCsvSpec.java b/sql/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/DebugCsvSpecIT.java\nsimilarity index 88%\nrename from sql/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/DebugCsvSpec.java\nrename to sql/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/DebugCsvSpecIT.java\nindex cd061a5d0a6..ae567fe3bb9 100644\n--- a/sql/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/DebugCsvSpec.java\n+++ b/sql/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/DebugCsvSpecIT.java\n@@ -16,7 +16,7 @@ import java.sql.SQLException;\n import java.util.List;\n \n @TestLogging(\"org.elasticsearch.xpack.sql:TRACE\")\n-public class DebugCsvSpec extends CsvSpecIT {\n+public class DebugCsvSpecIT extends CsvSpecIT {\n \n     @ParametersFactory(shuffle = false, argumentFormatting = SqlSpecIT.PARAM_FORMATTING) // NOCOMMIT are we sure?!\n     public static List<Object[]> readScriptSpec() throws Exception {\n@@ -26,7 +26,7 @@ public class DebugCsvSpec extends CsvSpecIT {\n         return readScriptSpec(\"/debug.csv-spec\", parser);\n     }\n \n-    public DebugCsvSpec(String groupName, String testName, Integer lineNumber, Path source, CsvTestCase testCase) {\n+    public DebugCsvSpecIT(String groupName, String testName, Integer lineNumber, Path source, CsvTestCase testCase) {\n         super(groupName, testName, lineNumber, source, testCase);\n     }\n ",
    "Added hint about notification channel settings": "diff --git a/app/src/main/res/layout/fragment_options_notifications.xml b/app/src/main/res/layout/fragment_options_notifications.xml\nindex 909a0afdec..637b256c74 100644\n--- a/app/src/main/res/layout/fragment_options_notifications.xml\n+++ b/app/src/main/res/layout/fragment_options_notifications.xml\n@@ -144,6 +144,18 @@\n                 app:layout_constraintStart_toStartOf=\"parent\"\n                 app:layout_constraintTop_toBottomOf=\"@id/tvNotifyActionsPro\" />\n \n+            <TextView\n+                android:id=\"@+id/tvManageHint\"\n+                android:layout_width=\"0dp\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginEnd=\"48dp\"\n+                android:text=\"@string/title_advanced_notify_manage_hint\"\n+                android:textAppearance=\"@style/TextAppearance.AppCompat.Small\"\n+                android:textStyle=\"italic\"\n+                app:layout_constraintEnd_toEndOf=\"parent\"\n+                app:layout_constraintStart_toStartOf=\"parent\"\n+                app:layout_constraintTop_toBottomOf=\"@id/btnManage\" />\n+\n             <androidx.appcompat.widget.SwitchCompat\n                 android:id=\"@+id/swLight\"\n                 android:layout_width=\"match_parent\"\n@@ -151,7 +163,7 @@\n                 android:layout_marginTop=\"12dp\"\n                 android:text=\"@string/title_advanced_light\"\n                 app:layout_constraintStart_toStartOf=\"parent\"\n-                app:layout_constraintTop_toBottomOf=\"@id/btnManage\"\n+                app:layout_constraintTop_toBottomOf=\"@id/tvManageHint\"\n                 app:switchPadding=\"12dp\" />\n \n             <Button\ndiff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml\nindex 5ccfe79597..b4be65537d 100644\n--- a/app/src/main/res/values/strings.xml\n+++ b/app/src/main/res/values/strings.xml\n@@ -222,6 +222,7 @@\n     <string name=\"title_advanced_notify_action_flag\">Star</string>\n     <string name=\"title_advanced_notify_action_seen\">Read</string>\n     <string name=\"title_advanced_notify_action_hint\">At",
    "starting the next release": "diff --git a/app/src/processing/app/Base.java b/app/src/processing/app/Base.java\nindex 112c96193..df06857e6 100644\n--- a/app/src/processing/app/Base.java\n+++ b/app/src/processing/app/Base.java\n@@ -55,9 +55,9 @@ import processing.data.StringList;\n public class Base {\n   // Added accessors for 0218 because the UpdateCheck class was not properly\n   // updating the values, due to javac inlining the static final values.\n-  static private final int REVISION = 246;\n+  static private final int REVISION = 247;\n   /** This might be replaced by main() if there's a lib/version.txt file. */\n-  static private String VERSION_NAME = \"0246\"; //$NON-NLS-1$\n+  static private String VERSION_NAME = \"0247\"; //$NON-NLS-1$\n   /** Set true if this a proper release rather than a numbered revision. */\n \n   /** True if heavy debugging error/log messages are enabled */\ndiff --git a/build/shared/revisions.txt b/build/shared/revisions.txt\nindex 64143b349..11a3ded0a 100644\n--- a/build/shared/revisions.txt\n+++ b/build/shared/revisions.txt\n@@ -1,4 +1,4 @@\n-PROCESSING 3.0 (REV 0246) - 30 September 2015\n+PROCESSING 3.0 (REV 0246) - 30 September 2015, 3pm ET\n \n This one is huge. \n \ndiff --git a/core/done.txt b/core/done.txt\nindex edd46e6af..6e4efb735 100644\n--- a/core/done.txt\n+++ b/core/done.txt\n@@ -1,3 +1,38 @@\n+0246 the papal visit (3.0)\n+X implement high-performance/async image saving\n+X   Use PBOs for async texture copy\n+X   https://github.com/processing/processing/issues/3569\n+X   https://github.com/processing/processing/pull/3863\n+X   https://github.com/processing/processing/pull/3869\n+X Textures disappearing in beta 7 (might be WeakReference regression)\n+X   https://github.com/processing/processing/issues/3858\n+X   https://github.com/processing/processing/pull/3874\n+X   https://github.com/processing/processing/pull/3875\n+X Convert all documented hacky keys in OpenGL\n+X   https://github.com/processing/processing/pull/3888\n+X Frame size displays incorrectly if surface.setResizable(true)\n+X   https://github.com/processing/processing/issues/3868\n+X   https://github.com/processing/processing/pull/3880\n+X displayWidth, displayHeight, full screen, display number\n+X   https://github.com/processing/processing/pull/3893\n+X   https://github.com/processing/processing/issues/3865\n+X OpenGL with fullScreen() always opens on default display\n+X   https://github.com/processing/processing/issues/3889\n+X   https://github.com/processing/processing/issues/3797\n+X   https://github.com/processing/processing/pull/3892\n+\n+cleaning\n+o move AWT image loading into PImageAWT\n+o   look into how GL and FX will handle from there\n+o run only the necessary pieces on the EDT\n+o   in part because FX doesn't even use the EDT\n+o   re-check the Linux frame visibility stuff\n+X   cleaned most of this as far as we can go\n+o Ubuntu Unity prevents full screen from working properly\n+X   https://github.com/processing/processing/issues/3158\n+X   can't fix; upstream problem, added to the wiki\n+\n+\n 0245 core (3.0b7)\n X surface.setLocation(x,y) not working with the default renderer\n X   https://github.com/processing/processing/issues/3821\ndiff --git a/core/todo.txt b/core/todo.txt\nindex 2ec573242..c230e295d 100644\n--- a/core/todo.txt\n+++ b/core/todo.txt\n@@ -1,36 +1,4 @@\n-0246 the papal visit (3.0)\n-X implement high-performance/async image saving\n-X   Use PBOs for async texture copy\n-X   https://github.com/processing/processing/issues/3569\n-X   https://github.com/processing/processing/pull/3863\n-X   https://github.com/processing/processing/pull/3869\n-X Textures disappearing in beta 7 (might be WeakReference regression)\n-X   https://github.com/processing/processing/issues/3858\n-X   https://github.com/processing/processing/pull/3874\n-X   https://github.com/processing/processing/pull/3875\n-X Convert all documented hacky keys in OpenGL\n-X   https://github.com/processing/processing/pull/3888\n-X Frame size displays incorrectly if surface.setResizable(true)\n-X   https://github.com/processing/processing/issues/3868\n-X   https://github.com/processing/processing/pull/3880\n-X displayWidth, displayHeight, full screen, display number\n-X   https://github.com/processing/processing/pull/3893\n-X   https://github.com/processing/processing/issues/3865\n-X OpenGL with fullScreen() always opens on default display\n-X   https://github.com/processing/processing/issues/3889\n-X   https://github.com/processing/processing/issues/3797\n-X   https://github.com/processing/processing/pull/3892\n-\n-cleaning\n-o move AWT image loading into PImageAWT\n-o   look into how GL and FX will handle from there\n-o run only the necessary pieces on the EDT\n-o   in part because FX doesn't even use the EDT\n-o   re-check the Linux frame visibility stuff\n-X   cleaned most of this as far as we can go\n-o Ubuntu Unity prevents full screen from working properly\n-X   https://github.com/processing/processing/issues/3158\n-X   can't fix; upstream problem, added to the wiki\n+0247 (3.0.1)\n \n \n known\ndiff --git a/done.txt b/done.txt\nindex cde20c1b0..26cc9862c 100644\n--- a/done.txt\n+++ b/done.txt\n@@ -1,3 +1,114 @@\n+0246 the holy land (3.0)\n+X \"Saving\" messages never clear on \"Save As\"\n+X   https://github.com/processing/processing/issues/3861\n+X error checker/suggestions fixes\n+X   https://github.com/processing/processing/pull/3871\n+X   https://github.com/processing/processing/pull/3879\n+X contributions filter is ignored after clicking Install\n+X   https://github.com/processing/processing/issues/3826\n+X   https://github.com/processing/processing/pull/3872\n+X   https://github.com/processing/processing/pull/3883\n+X Exception in thread \"Contribution List Downloader\"\n+X   https://github.com/processing/processing/issues/3882\n+X   https://github.com/processing/processing/pull/3884\n+X Hide useless error in error checker\n+X   https://github.com/processing/processing/pull/3887\n+X grab bag of CM work from Jakub\n+X   https://github.com/processing/processing/issues/3895\n+X   https://github.com/processing/processing/pull/3897\n+X Clean up delete dir function\n+X   https://github.com/processing/processing/pull/3910\n+X don't follow symlinks when deleting directories\n+X   https://github.com/processing/processing/pull/3916\n+X show number of updates available in the footer\n+X   https://github.com/processing/processing/issues/3518\n+X   https://github.com/processing/processing/pull/3896\n+X   https://github.com/processing/processing/pull/3901\n+o   total number of updates available is not correct? (may be fixed)\n+o ArrayIndexOutOfBoundsException freak out when clicking the header line\n+o   think this was on name, with libraries, but not sure\n+X   should be fixed with the updates from Jakub\n+X error checker updates for toggle and listeners\n+X   https://github.com/processing/processing/pull/3915\n+X file file counting in the change detector\n+X   https://github.com/processing/processing/pull/3917\n+X   https://github.com/processing/processing/issues/3898\n+X   https://github.com/processing/processing/issues/3387\n+X Windows suggests \"Documents\" as a new location for the 3.0 sketchbook\n+X   maybe prevent users from accepting that?\n+X   https://github.com/processing/processing/issues/3920\n+\n+gui\n+X distinguish errors and warnings\n+X   https://github.com/processing/processing/issues/3406\n+X make breakpoints more prominent\n+X   https://github.com/processing/processing/issues/3307 (comp is set)\n+X clean up statusMessage() inside JavaEditor\n+o   do we want to bring back the delays?\n+X implement side gradient on the editor\n+X if fewer lines in sketch than can be shown in window, show ticks adjacent\n+X   error/warning location is awkward when no scroll bar is in use\n+X   when only one screen-full, show ticks at exact location\n+X   simpler/less confusing to not show at all? \n+X   MarkerColumn.recalculateMarkerPositions()\n+X   https://github.com/processing/processing/pull/3903\n+X Update status error/warning when changing the line\n+X   https://github.com/processing/processing/pull/3907\n+X Update status error/warning when changing the line\n+X   when moving away from an error/warning line, de-select it below\n+X   selecting a warning should also show the warning in the status area\n+X   https://github.com/processing/processing/pull/3907\n+X clicking an error or warning should give the focus back to the editor\n+X   https://github.com/processing/processing/pull/3905\n+X replace startup/about screen (1x and 2x versions)\n+X   change 'alpha' to correct name\n+X   also change the revision in the \"about processing\" dialog\n+X   https://github.com/processing/processing/issues/3665\n+X implement splash screen on OS X\n+X   http://www.randelshofer.ch/oop/javasplash/javasplash.html\n+X   also implement special retina version\n+X Fix placement and visual design when showing error on hover\n+X   https://github.com/processing/processing/issues/3173\n+X   implement custom tooltip for error/warning hover\n+X   applies to both MarkerColumn and JavaTextAreaPainter\n+X make gutter of console match error list\n+X   https://github.com/processing/processing/issues/3904\n+o bring back the # of updates on the update tab\n+o   use this instead of the 'icon' stuff?\n+o   or in addition, since only the 'updates' tab has it\n+X   https://github.com/processing/processing/issues/3855\n+X for updates available, have it be clickable to open the manager\n+X fix the design of the completions window\n+X   remove extra border around the outside\n+X   change font\n+X   add 2x version of the icons\n+X   change selection highlight color\n+o   put some margin around it\n+X   https://github.com/processing/processing/issues/3906\n+X completion panel\n+X   what should the background color be? \n+X   test fg/bg color on other operating systems\n+J   fix icon sizes/design\n+X set a better minimum size for the number of updates available\n+\n+earlier/cleaning\n+X list with contrib types separated is really wonky\n+o   do we keep the list?\n+o   does it even work for different contrib types?\n+X   cleaned this up in the last release\n+X remove the dated releases from download.processing.org\n+X new Android release (EditorButton constructor changed)\n+o JavaEditor has several null colors, remove color support\n+o   once the design is complete and we for sure do not need color\n+X remove deprecated methods\n+X do the right thing on passing around List vs ArrayList and others\n+o wonder if \"Save As\" is causing the problems with auto-reload\n+X   found and fixed\n+X look at the sound library https://github.com/wirsing/ProcessingSound\n+o   sound is not yet supported on Windows\n+X implement the new gui\n+\n+\n 0245 (3.0b7)\n X add jar files from 'code' folder to the library path\n X   Code editor wrongly detects errors for libraries in code folder\ndiff --git a/todo.txt b/todo.txt\nindex 6d4db7b94..e27b2b5f7 100644\n--- a/todo.txt\n+++ b/todo.txt\n@@ -1,112 +1,4 @@\n-0246 the holy land (3.0)\n-X \"Saving\" messages never clear on \"Save As\"\n-X   https://github.com/processing/processing/issues/3861\n-X error checker/suggestions fixes\n-X   https://github.com/processing/processing/pull/3871\n-X   https://github.com/processing/processing/pull/3879\n-X contributions filter is ignored after clicking Install\n-X   https://github.com/processing/processing/issues/3826\n-X   https://github.com/processing/processing/pull/3872\n-X   https://github.com/processing/processing/pull/3883\n-X Exception in thread \"Contribution List Downloader\"\n-X   https://github.com/processing/processing/issues/3882\n-X   https://github.com/processing/processing/pull/3884\n-X Hide useless error in error checker\n-X   https://github.com/processing/processing/pull/3887\n-X grab bag of CM work from Jakub\n-X   https://github.com/processing/processing/issues/3895\n-X   https://github.com/processing/processing/pull/3897\n-X Clean up delete dir function\n-X   https://github.com/processing/processing/pull/3910\n-X don't follow symlinks when deleting directories\n-X   https://github.com/processing/processing/pull/3916\n-X show number of updates available in the footer\n-X   https://github.com/processing/processing/issues/3518\n-X   https://github.com/processing/processing/pull/3896\n-X   https://github.com/processing/processing/pull/3901\n-o   total number of updates available is not correct? (may be fixed)\n-o ArrayIndexOutOfBoundsException freak out when clicking the header line\n-o   think this was on name, with libraries, but not sure\n-X   should be fixed with the updates from Jakub\n-X error checker updates for toggle and listeners\n-X   https://github.com/processing/processing/pull/3915\n-X file file counting in the change detector\n-X   https://github.com/processing/processing/pull/3917\n-X   https://github.com/processing/processing/issues/3898\n-X   https://github.com/processing/processing/issues/3387\n-X Windows suggests \"Documents\" as a new location for the 3.0 sketchbook\n-X   maybe prevent users from accepting that?\n-X   https://github.com/processing/processing/issues/3920\n-\n-gui\n-X distinguish errors and warnings\n-X   https://github.com/processing/processing/issues/3406\n-X make breakpoints more prominent\n-X   https://github.com/processing/processing/issues/3307 (comp is set)\n-X clean up statusMessage() inside JavaEditor\n-o   do we want to bring back the delays?\n-X implement side gradient on the editor\n-X if fewer lines in sketch than can be shown in window, show ticks adjacent\n-X   error/warning location is awkward when no scroll bar is in use\n-X   when only one screen-full, show ticks at exact location\n-X   simpler/less confusing to not show at all? \n-X   MarkerColumn.recalculateMarkerPositions()\n-X   https://github.com/processing/processing/pull/3903\n-X Update status error/warning when changing the line\n-X   https://github.com/processing/processing/pull/3907\n-X Update status error/warning when changing the line\n-X   when moving away from an error/warning line, de-select it below\n-X   selecting a warning should also show the warning in the status area\n-X   https://github.com/processing/processing/pull/3907\n-X clicking an error or warning should give the focus back to the editor\n-X   https://github.com/processing/processing/pull/3905\n-X replace startup/about screen (1x and 2x versions)\n-X   change 'alpha' to correct name\n-X   also change the revision in the \"about processing\" dialog\n-X   https://github.com/processing/processing/issues/3665\n-X implement splash screen on OS X\n-X   http://www.randelshofer.ch/oop/javasplash/javasplash.html\n-X   also implement special retina version\n-X Fix placement and visual design when showing error on hover\n-X   https://github.com/processing/processing/issues/3173\n-X   implement custom tooltip for error/warning hover\n-X   applies to both MarkerColumn and JavaTextAreaPainter\n-X make gutter of console match error list\n-X   https://github.com/processing/processing/issues/3904\n-o bring back the # of updates on the update tab\n-o   use this instead of the 'icon' stuff?\n-o   or in addition, since only the 'updates' tab has it\n-X   https://github.com/processing/processing/issues/3855\n-X for updates available, have it be clickable to open the manager\n-X fix the design of the completions window\n-X   remove extra border around the outside\n-X   change font\n-X   add 2x version of the icons\n-X   change selection highlight color\n-o   put some margin around it\n-X   https://github.com/processing/processing/issues/3906\n-X completion panel\n-X   what should the background color be? \n-X   test fg/bg color on other operating systems\n-J   fix icon sizes/design\n-X set a better minimum size for the number of updates available\n-\n-earlier/cleaning\n-X list with contrib types separated is really wonky\n-o   do we keep the list?\n-o   does it even work for different contrib types?\n-X   cleaned this up in the last release\n-X remove the dated releases from download.processing.org\n-X new Android release (EditorButton constructor changed)\n-o JavaEditor has several null colors, remove color support\n-o   once the design is complete and we for sure do not need color\n-X remove deprecated methods\n-X do the right thing on passing around List vs ArrayList and others\n-o wonder if \"Save As\" is causing the problems with auto-reload\n-X   found and fixed\n-X look at the sound library https://github.com/wirsing/ProcessingSound\n-o   sound is not yet supported on Windows\n-X implement the new gui\n+0247 (3.0.1)\n \n \n known issues",
    "tweaks QueueSupplier utils": "diff --git a/src/main/java/reactor/core/publisher/EventLoopProcessor.java b/src/main/java/reactor/core/publisher/EventLoopProcessor.java\nindex cb830ea52..ddd43abea 100644\n--- a/src/main/java/reactor/core/publisher/EventLoopProcessor.java\n+++ b/src/main/java/reactor/core/publisher/EventLoopProcessor.java\n@@ -23,7 +23,6 @@ import java.util.concurrent.ThreadFactory;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicInteger;\n import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;\n-import java.util.concurrent.atomic.AtomicLong;\n import java.util.function.Supplier;\n \n import org.reactivestreams.Processor;\n@@ -33,6 +32,7 @@ import reactor.core.flow.Cancellation;\n import reactor.core.flow.Loopback;\n import reactor.core.flow.MultiProducer;\n import reactor.core.flow.Receiver;\n+import reactor.core.queue.QueueSupplier;\n import reactor.core.queue.RingBuffer;\n import reactor.core.queue.Slot;\n import reactor.core.scheduler.Scheduler;\n@@ -104,7 +104,7 @@ abstract class EventLoopProcessor<IN> extends FluxProcessor<IN, IN>\n \t\t\tSupplier<Slot<IN>> factory,\n \t\t\tWaitStrategy strategy) {\n \n-\t\tif (!RingBuffer.isPowerOfTwo(bufferSize)) {\n+\t\tif (!QueueSupplier.isPowerOfTwo(bufferSize)) {\n \t\t\tthrow new IllegalArgumentException(\"bufferSize must be a power of 2 : \" + bufferSize);\n \t\t}\n \t\t\ndiff --git a/src/main/java/reactor/core/queue/MultiProducer.java b/src/main/java/reactor/core/queue/MultiProducer.java\nindex 451f83eb0..a269d7fc6 100644\n--- a/src/main/java/reactor/core/queue/MultiProducer.java\n+++ b/src/main/java/reactor/core/queue/MultiProducer.java\n@@ -54,7 +54,7 @@ final class MultiProducer extends RingBufferProducer\n     MultiProducer(int bufferSize, final WaitStrategy waitStrategy, Runnable spinObserver) {\n         super(bufferSize, waitStrategy, spinObserver);\n \n-        if (!RingBuffer.isPowerOfTwo(bufferSize)) {\n+        if (!QueueSupplier.isPowerOfTwo(bufferSize)) {\n             throw new IllegalArgumentException(\"bufferSize must be a power of 2\");\n         }\n \ndiff --git a/src/main/java/reactor/core/queue/QueueSupplier.java b/src/main/java/reactor/core/queue/QueueSupplier.java\nindex 96657e3c5..c4bd11804 100644\n--- a/src/main/java/reactor/core/queue/QueueSupplier.java\n+++ b/src/main/java/reactor/core/queue/QueueSupplier.java\n@@ -28,17 +28,17 @@ import reactor.core.util.PlatformDependent;\n  */\n public final class QueueSupplier<T> implements Supplier<Queue<T>> {\n \n-\tstatic final Supplier CLQ_SUPPLIER             = new QueueSupplier<>(Long.MAX_VALUE, false, false);\n-\tstatic final Supplier ONE_SUPPLIER             = new QueueSupplier<>(1, false, true);\n-\tstatic final Supplier XSRB_SUPPLIER            = new QueueSupplier<>(PlatformDependent.XS_BUFFER_SIZE, false, false);\n-\tstatic final Supplier SMALLRB_SUPPLIER         = new QueueSupplier<>(PlatformDependent.SMALL_BUFFER_SIZE, false, false);\n-\tstatic final Supplier WAITING_XSRB_SUPPLIER    = new QueueSupplier<>(PlatformDependent.XS_BUFFER_SIZE, true, false);\n-\tstatic final Supplier WAITING_SMALLRB_SUPPLIER = new QueueSupplier<>(PlatformDependent.SMALL_BUFFER_SIZE, true, false);\n-\n-\tfinal long    batchSize;\n-\tfinal boolean waiting;\n-\tfinal boolean multiproducer;\n-\n+\t/**\n+\t * Calculate the next power of 2, greater than or equal to x.<p> From Hacker's Delight, Chapter 3, Harry S. Warren\n+\t * Jr.\n+\t *\n+\t * @param x Value to round up\n+\t *\n+\t * @return The next power of 2 from x inclusive\n+\t */\n+\tpublic static int ceilingNextPowerOfTwo(final int x) {\n+\t\treturn 1 << (32 - Integer.numberOfLeadingZeros(x - 1));\n+\t}\n \n \t/**\n \t *\n@@ -84,7 +84,16 @@ public final class QueueSupplier<T> implements Supplier<Queue<T>> {\n \t\t}\n \t\treturn new QueueSupplier<>(batchSize, waiting, multiproducer);\n \t}\n-\t\n+\n+\t/**\n+\t * @param x the int to test\n+\t *\n+\t * @return true if x is a power of 2\n+\t */\n+\tpublic static boolean isPowerOfTwo(final int x) {\n+\t\treturn Integer.bitCount(x) == 1;\n+\t}\n+\n \t/**\n \t *\n \t * @param <T> the reified {@link Queue} generic type\n@@ -166,6 +175,9 @@ public final class QueueSupplier<T> implements Supplier<Queue<T>> {\n \t\t\treturn (Supplier<Queue<T>>) WAITING_XSRB_SUPPLIER;\n \t\t}\n \t}\n+\tfinal long    batchSize;\n+\tfinal boolean waiting;\n+\tfinal boolean multiproducer;\n \n \tQueueSupplier(long batchSize, boolean waiting, boolean multiproducer) {\n \t\tthis.batchSize = batchSize;\n@@ -198,17 +210,49 @@ public final class QueueSupplier<T> implements Supplier<Queue<T>> {\n \t}\n \n \tstatic final class OneQueue<T> extends AtomicReference<T> implements Queue<T> {\n-\t\t/** */\n-        private static final long serialVersionUID = -6079491923525372331L;\n-\n         @Override\n \t\tpublic boolean add(T t) {\n \n \t\t    while (!offer(t));\n-\t\t    \n+\n \t\t    return true;\n \t\t}\n \n+\t\t@Override\n+\t\tpublic boolean addAll(Collection<? extends T> c) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void clear() {\n+\t\t\tset(null);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic boolean contains(Object o) {\n+\t\t\treturn Objects.equals(get(), o);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic boolean containsAll(Collection<?> c) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic T element() {\n+\t\t\treturn get();\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic boolean isEmpty() {\n+\t\t\treturn get() == null;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic Iterator<T> iterator() {\n+\t\t\treturn new QueueIterator<>(this);\n+\t\t}\n+\n \t\t@Override\n \t\tpublic boolean offer(T t) {\n \t\t\tif (get() != null) {\n@@ -219,8 +263,8 @@ public final class QueueSupplier<T> implements Supplier<Queue<T>> {\n \t\t}\n \n \t\t@Override\n-\t\tpublic T remove() {\n-\t\t\treturn getAndSet(null);\n+\t\tpublic T peek() {\n+\t\t\treturn get();\n \t\t}\n \n \t\t@Override\n@@ -233,33 +277,28 @@ public final class QueueSupplier<T> implements Supplier<Queue<T>> {\n \t\t}\n \n \t\t@Override\n-\t\tpublic T element() {\n-\t\t\treturn get();\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic T peek() {\n-\t\t\treturn get();\n+\t\tpublic T remove() {\n+\t\t\treturn getAndSet(null);\n \t\t}\n \n \t\t@Override\n-\t\tpublic int size() {\n-\t\t\treturn get() == null ? 0 : 1;\n+\t\tpublic boolean remove(Object o) {\n+\t\t\treturn false;\n \t\t}\n \n \t\t@Override\n-\t\tpublic boolean isEmpty() {\n-\t\t\treturn get() == null;\n+\t\tpublic boolean removeAll(Collection<?> c) {\n+\t\t\treturn false;\n \t\t}\n \n \t\t@Override\n-\t\tpublic boolean contains(Object o) {\n-\t\t\treturn Objects.equals(get(), o);\n+\t\tpublic boolean retainAll(Collection<?> c) {\n+\t\t\treturn false;\n \t\t}\n \n \t\t@Override\n-\t\tpublic Iterator<T> iterator() {\n-\t\t\treturn new QueueIterator<>(this);\n+\t\tpublic int size() {\n+\t\t\treturn get() == null ? 0 : 1;\n \t\t}\n \n \t\t@Override\n@@ -283,36 +322,8 @@ public final class QueueSupplier<T> implements Supplier<Queue<T>> {\n \t\t\t}\n \t\t\treturn (T1[])toArray();\n \t\t}\n-\n-\t\t@Override\n-\t\tpublic boolean remove(Object o) {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic boolean containsAll(Collection<?> c) {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic boolean addAll(Collection<? extends T> c) {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic boolean removeAll(Collection<?> c) {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic boolean retainAll(Collection<?> c) {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic void clear() {\n-\t\t\tset(null);\n-\t\t}\n+\t\t/** */\n+        private static final long serialVersionUID = -6079491923525372331L;\n \t}\n \n \tstatic class QueueIterator<T> implements Iterator<T> {\n@@ -338,4 +349,10 @@ public final class QueueSupplier<T> implements Supplier<Queue<T>> {\n \t\t\tqueue.remove();\n \t\t}\n \t}\n+\tstatic final Supplier CLQ_SUPPLIER          = new QueueSupplier<>(Long.MAX_VALUE, false, false);\n+\tstatic final Supplier ONE_SUPPLIER          = new QueueSupplier<>(1, false, true);\n+\tstatic final Supplier XSRB_SUPPLIER         = new QueueSupplier<>(PlatformDependent.XS_BUFFER_SIZE, false, false);\n+\tstatic final Supplier SMALLRB_SUPPLIER      = new QueueSupplier<>(PlatformDependent.SMALL_BUFFER_SIZE, false, false);\n+\tstatic final Supplier WAITING_XSRB_SUPPLIER = new QueueSupplier<>(PlatformDependent.XS_BUFFER_SIZE, true, false);\n+\tstatic final Supplier WAITING_SMALLRB_SUPPLIER = new QueueSupplier<>(PlatformDependent.SMALL_BUFFER_SIZE, true, false);\n }\ndiff --git a/src/main/java/reactor/core/queue/RingBuffer.java b/src/main/java/reactor/core/queue/RingBuffer.java\nindex 868b809c1..01ab7a23c 100644\n--- a/src/main/java/reactor/core/queue/RingBuffer.java\n+++ b/src/main/java/reactor/core/queue/RingBuffer.java\n@@ -50,18 +50,6 @@ public abstract class RingBuffer<E> implements LongSupplier, Backpressurable {\n \t */\n \tpublic static final long     INITIAL_CURSOR_VALUE = -1L;\n \n-\t/**\n-\t * Calculate the next power of 2, greater than or equal to x.<p> From Hacker's Delight, Chapter 3, Harry S. Warren\n-\t * Jr.\n-\t *\n-\t * @param x Value to round up\n-\t *\n-\t * @return The next power of 2 from x inclusive\n-\t */\n-\tpublic static int ceilingNextPowerOfTwo(final int x) {\n-\t\treturn 1 << (32 - Integer.numberOfLeadingZeros(x - 1));\n-\t}\n-\n \t/**\n \t *\n \t * Create a\n@@ -106,17 +94,6 @@ public abstract class RingBuffer<E> implements LongSupplier, Backpressurable {\n \t\treturn createMultiProducer(EMITTED, bufferSize, WaitStrategy.blocking());\n \t}\n \n-\t/**\n-\t * Create a new multiple producer RingBuffer using the default wait strategy   {@link WaitStrategy#busySpin()}.\n-\t * @param factory used to create the events within the ring buffer.\n-\t * @param bufferSize number of elements to create within the ring buffer.\n-\t * @throws IllegalArgumentException if <tt>bufferSize</tt> is less than 1 or not a power of 2\n-\t * @see MultiProducer\n-\t */\n-\tpublic static <E> RingBuffer<E> createMultiProducer(Supplier<E> factory, int bufferSize) {\n-\t\treturn createMultiProducer(factory, bufferSize, WaitStrategy.busySpin());\n-\t}\n-\n \t/**\n \t * Create a new multiple producer RingBuffer with the specified wait strategy.\n \t * @param factory used to create the events within the ring buffer.\n@@ -143,7 +120,7 @@ public abstract class RingBuffer<E> implements LongSupplier, Backpressurable {\n \t\t\tint bufferSize,\n \t\t\tWaitStrategy waitStrategy, Runnable spinObserver) {\n \n-\t\tif (PlatformDependent.hasUnsafe() && isPowerOfTwo(bufferSize)) {\n+\t\tif (PlatformDependent.hasUnsafe() && QueueSupplier.isPowerOfTwo(bufferSize)) {\n \t\t\tMultiProducer sequencer = new MultiProducer(bufferSize, waitStrategy, spinObserver);\n \n \t\t\treturn new UnsafeRingBuffer<E>(factory, sequencer);\n@@ -195,16 +172,6 @@ public abstract class RingBuffer<E> implements LongSupplier, Backpressurable {\n \t\treturn createSingleProducer(EMITTED, bufferSize, WaitStrategy.busySpin());\n \t}\n \n-\t/**\n-\t * Create a new single producer RingBuffer using the default wait strategy  {@link WaitStrategy#busySpin()}.\n-\t * @param bufferSize number of elements to create within the ring buffer.\n-\t * @see MultiProducer\n-\t */\n-\t@SuppressWarnings(\"unchecked\")\n-\tpublic static <E> RingBuffer<Slot<E>> createSingleProducer(int bufferSize, Runnable spinObserver) {\n-\t\treturn createSingleProducer(EMITTED, bufferSize, WaitStrategy.busySpin(), spinObserver);\n-\t}\n-\n \t/**\n \t * Create a new single producer RingBuffer using the default wait strategy   {@link WaitStrategy#busySpin()}.\n \t * @param factory used to create the events within the ring buffer.\n@@ -244,7 +211,7 @@ public abstract class RingBuffer<E> implements LongSupplier, Backpressurable {\n \t\t\tRunnable spinObserver) {\n \t\tSingleProducerSequencer sequencer = new SingleProducerSequencer(bufferSize, waitStrategy, spinObserver);\n \n-\t\tif (PlatformDependent.hasUnsafe() && isPowerOfTwo(bufferSize)) {\n+\t\tif (PlatformDependent.hasUnsafe() && QueueSupplier.isPowerOfTwo(bufferSize)) {\n \t\t\treturn new UnsafeRingBuffer<>(factory, sequencer);\n \t\t}\n \t\telse {\n@@ -289,15 +256,6 @@ public abstract class RingBuffer<E> implements LongSupplier, Backpressurable {\n \t\treturn minimum;\n \t}\n \n-\t/**\n-\t * @param x the int to test\n-\t *\n-\t * @return true if x is a power of 2\n-\t */\n-\tpublic static boolean isPowerOfTwo(final int x) {\n-\t\treturn Integer.bitCount(x) == 1;\n-\t}\n-\n \t/**\n \t * Calculate the log base 2 of the supplied integer, essentially reports the location of the highest bit.\n \t *\ndiff --git a/src/main/java/reactor/core/queue/SpscArrayQueue.java b/src/main/java/reactor/core/queue/SpscArrayQueue.java\nindex ad1e7bb21..48cb0d627 100644\n--- a/src/main/java/reactor/core/queue/SpscArrayQueue.java\n+++ b/src/main/java/reactor/core/queue/SpscArrayQueue.java\n@@ -39,7 +39,7 @@ final class SpscArrayQueue<T> extends SpscArrayQueueP3<T> implements Queue<T> {\n     private static final long serialVersionUID = 494623116936946976L;\n \n     public SpscArrayQueue(int capacity) {\n-        super(RingBuffer.ceilingNextPowerOfTwo(capacity));\n+        super(QueueSupplier.ceilingNextPowerOfTwo(capacity));\n     }\n     \n     @Override\ndiff --git a/src/main/java/reactor/core/queue/SpscLinkedArrayQueue.java b/src/main/java/reactor/core/queue/SpscLinkedArrayQueue.java\nindex 413d204b6..b265cf6e6 100644\n--- a/src/main/java/reactor/core/queue/SpscLinkedArrayQueue.java\n+++ b/src/main/java/reactor/core/queue/SpscLinkedArrayQueue.java\n@@ -45,7 +45,7 @@ final class SpscLinkedArrayQueue<T> extends AbstractQueue<T> {\n     static final Object NEXT = new Object();\n     \n     public SpscLinkedArrayQueue(int linkSize) {\n-        int c = RingBuffer.ceilingNextPowerOfTwo(Math.min(2, linkSize));\n+        int c = QueueSupplier.ceilingNextPowerOfTwo(Math.min(2, linkSize));\n         this.producerArray = this.consumerArray = new AtomicReferenceArray<>(c + 1);\n         this.mask = c - 1;\n     }\ndiff --git a/src/main/java/reactor/core/queue/UnsafeRingBuffer.java b/src/main/java/reactor/core/queue/UnsafeRingBuffer.java\nindex 34f1653df..b7dfc4307 100644\n--- a/src/main/java/reactor/core/queue/UnsafeRingBuffer.java\n+++ b/src/main/java/reactor/core/queue/UnsafeRingBuffer.java\n@@ -61,7 +61,7 @@ abstract class RingBufferFields<E> extends RingBufferPad<E>\n         if (bufferSize < 1) {\n             throw new IllegalArgumentException(\"bufferSize must not be less than 1\");\n         }\n-        if (!RingBuffer.isPowerOfTwo(bufferSize))\n+        if (!QueueSupplier.isPowerOfTwo(bufferSize))\n         {\n             throw new IllegalArgumentException(\"bufferSize must be a power of 2\");\n         }\ndiff --git a/src/main/java/reactor/core/scheduler/OpenHashSet.java b/src/main/java/reactor/core/scheduler/OpenHashSet.java\nindex 456a11aca..2e2b09597 100644\n--- a/src/main/java/reactor/core/scheduler/OpenHashSet.java\n+++ b/src/main/java/reactor/core/scheduler/OpenHashSet.java\n@@ -25,7 +25,7 @@ package reactor.core.scheduler;\n import java.util.Arrays;\n import java.util.function.Consumer;\n \n-import reactor.core.queue.RingBuffer;\n+import reactor.core.queue.QueueSupplier;\n \n /**\n  * A simple open hash set with add, remove and clear capabilities only.\n@@ -55,7 +55,7 @@ final class OpenHashSet<T> {\n     @SuppressWarnings(\"unchecked\")\n     public OpenHashSet(int capacity, float loadFactor) {\n         this.loadFactor = loadFactor;\n-        int c = RingBuffer.ceilingNextPowerOfTwo(capacity);\n+        int c = QueueSupplier.ceilingNextPowerOfTwo(capacity);\n         this.mask = c - 1;\n         this.maxSize = (int)(loadFactor * c);\n         this.keys = (T[])new Object[c];",
    "Add HTML Id": "diff --git a/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/_operations.html.erb b/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/_operations.html.erb\nindex dec69e8c8f8..1236878d716 100644\n--- a/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/_operations.html.erb\n+++ b/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/_operations.html.erb\n@@ -16,7 +16,7 @@\n     <li><%= uninstall -%></li>\n   <% end %>\n   </ul>\n-  <input type=\"submit\" value=\"Cancel uninstalls\"/>\n+  <input type=\"submit\" value=\"Cancel uninstalls\" id=\"cancel-uninstall\"/>\n </p>\n </form>\n <% end %>\n@@ -28,7 +28,7 @@\n     <li><%= download -%></li>\n   <% end %>\n   </ul>\n-  <input type=\"submit\" value=\"Cancel pending installations\"/>\n+  <input type=\"submit\" value=\"Cancel pending installations\" id=\"cancel-pending-installations\"/>\n </p>\n </form>\n <% end %>\ndiff --git a/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/available.html.erb b/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/available.html.erb\nindex 6bc0f196fc7..9487480fb5a 100644\n--- a/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/available.html.erb\n+++ b/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/available.html.erb\n@@ -35,7 +35,7 @@ function installPlugin(key) {\n         plugin = update.plugin\n         release = update.release\n     %>\n-      <tr class=\"<%= cycle('even','odd', :name => category) -%>\">\n+      <tr class=\"<%= cycle('even','odd', :name => category) -%>\" id=\"select-<%= plugin.getKey() -%>\">\n         <td width=\"150\" nowrap>\n           <b><a href=\"#plugin\" onClick=\"showPlugin('<%= plugin.getKey() -%>');\"><%= h(plugin.getName()) -%></a></b>\n         </td>\ndiff --git a/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/index.html.erb b/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/index.html.erb\nindex 4d5f853e752..31d566f9073 100644\n--- a/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/index.html.erb\n+++ b/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/index.html.erb\n@@ -85,7 +85,7 @@\n           <tr>\n             <td colspan=\"2\">\n              <form method=\"post\" action=\"<%= ApplicationController.root_context -%>/updatecenter/uninstall?key=<%= plugin.getKey() -%>\" style=\"display: inline-block\">\n-               <input type=\"submit\" value=\"Uninstall\" class=\"red-button\"/>\n+               <input type=\"submit\" value=\"Uninstall\" class=\"red-button\" id=\"uninstall-<%= plugin.getKey() -%>\"/>\n              </form>\n               </td>\n             </tr>\ndiff --git a/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/updates.html.erb b/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/updates.html.erb\nindex 05a59b023a3..ad2891711b6 100644\n--- a/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/updates.html.erb\n+++ b/sonar-server/src/main/webapp/WEB-INF/app/views/updatecenter/updates.html.erb\n@@ -31,7 +31,7 @@ function upgradePlugin(key) {\n            updates.each_with_index do |update, index|\n             release=update.release\n        %>\n-        <tr class=\"<%= css -%>\">\n+        <tr class=\"<%= css -%>\" id=\"select_<%= plugin.getKey() -%>\">\n           <td width=\"1%\" nowrap><% if index==0 %><b><%= h(plugin.getName()) -%></b> <%= @installed_plugins[plugin.getKey()] -%> -> <% end %></td>\n           <td width=\"1%\" nowrap><b><%= release.getVersion() -%></b></td>\n           <td width=\"1%\" nowrap><%= release_date(release.getDate()) if release.getDate() -%></td>",
    "add entry point to xsd !": "diff --git a/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/config/ResourceServerBeanDefinitionParser.java b/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/config/ResourceServerBeanDefinitionParser.java\nindex adada9a5..0221fcfa 100755\n--- a/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/config/ResourceServerBeanDefinitionParser.java\n+++ b/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/config/ResourceServerBeanDefinitionParser.java\n@@ -47,7 +47,7 @@ public class ResourceServerBeanDefinitionParser extends ProviderBeanDefinitionPa\n \t\t}\n \t\tprotectedResourceFilterBean.addPropertyValue(\"authenticationManager\", authenticationManagerBean.getBeanDefinition());\n \t\tif (StringUtils.hasText(entryPointRef)) {\n-\t\t\tprotectedResourceFilterBean.addPropertyValue(\"authenticationEntryPoint\", entryPointRef);\n+\t\t\tprotectedResourceFilterBean.addPropertyReference(\"authenticationEntryPoint\", entryPointRef);\n \t\t}\n \n \t\treturn protectedResourceFilterBean.getBeanDefinition();\ndiff --git a/spring-security-oauth2/src/main/resources/org/springframework/security/oauth2/spring-security-oauth2-1.0.xsd b/spring-security-oauth2/src/main/resources/org/springframework/security/oauth2/spring-security-oauth2-1.0.xsd\nindex f2802bdd..0fca0112 100644\n--- a/spring-security-oauth2/src/main/resources/org/springframework/security/oauth2/spring-security-oauth2-1.0.xsd\n+++ b/spring-security-oauth2/src/main/resources/org/springframework/security/oauth2/spring-security-oauth2-1.0.xsd\n@@ -339,16 +339,11 @@\n \t\t\t\t\t\t</xs:annotation>\n \t\t\t\t\t</xs:attribute>\n \n-\t\t\t\t\t<xs:attribute name=\"serialization-service-ref\" type=\"xs:string\">\n+\t\t\t\t\t<xs:attribute name=\"entry-point-ref\" type=\"xs:string\">\n \t\t\t\t\t\t<xs:annotation>\n \t\t\t\t\t\t\t<xs:documentation>\n-\t\t\t\t\t\t\t\tThe reference to the bean that defines the\n-\t\t\t\t\t\t\t\tserialization service for\n-\t\t\t\t\t\t\t\tan OAuth 2 response\n-\t\t\t\t\t\t\t\tDefault\n-\t\t\t\t\t\t\t\tvalue is an\n-\t\t\t\t\t\t\t\tinstance of\n-\t\t\t\t\t\t\t\t\"org.springframework.security.oauth2.common.DefaultOAuth2SerializationService\".\n+\t\t\t\t\t\t\t\tThe reference to the bean that defines the entry point for failed authentications.  Defaults to a vanilla\n+\t\t\t\t\t\t\t\torg.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint.\n \t\t\t\t\t\t\t</xs:documentation>\n \t\t\t\t\t\t</xs:annotation>\n \t\t\t\t\t</xs:attribute>",
    "Add saveModel link to DL Model web page .": "diff --git a/src/main/java/hex/deeplearning/DeepLearningModel.java b/src/main/java/hex/deeplearning/DeepLearningModel.java\nindex 8e03aeca1..c193189a5 100644\n--- a/src/main/java/hex/deeplearning/DeepLearningModel.java\n+++ b/src/main/java/hex/deeplearning/DeepLearningModel.java\n@@ -1188,7 +1188,8 @@ public class DeepLearningModel extends Model implements Comparable<DeepLearningM\n             + water.api.Predict.link(_key, \"Score on dataset\") + \", \"\n             + DeepLearning.link(_dataKey, \"Compute new model\", null, responseName(), val_key)\n             + (actual_best_model_key != null && UKV.get(actual_best_model_key) != null && actual_best_model_key != _key ? \", \" + DeepLearningModelView.link(\"Go to best model\", actual_best_model_key) : \"\")\n-            + (jobKey == null || ((jobKey != null && UKV.get(jobKey) == null)) || (jobKey != null && UKV.get(jobKey) != null && Job.isEnded(jobKey)) ? \", <i class=\\\"icon-play\\\"></i>\" + DeepLearning.link(_dataKey, \"Continue training this model\", _key, responseName(), val_key) : \"\")\n+            + (jobKey == null || ((jobKey != null && UKV.get(jobKey) == null)) || (jobKey != null && UKV.get(jobKey) != null && Job.isEnded(jobKey)) ? \", <i class=\\\"icon-play\\\"></i>\" + DeepLearning.link(_dataKey, \"Continue training this model\", _key, responseName(), val_key) : \"\") + \", \"\n+            + UIUtils.qlink(SaveModel.class, \"model\", _key, \"Save model\") + \", \"\n             + \"</div>\");\n \n     DocGen.HTML.paragraph(sb, \"Model Key: \" + _key);",
    "using git config to set author for release commits rather than - - author option": "diff --git a/build/build_release.sh b/build/build_release.sh\nindex ed539dcef5..8fa8441c87 100755\n--- a/build/build_release.sh\n+++ b/build/build_release.sh\n@@ -95,10 +95,6 @@ echo \"  geowebcache = $gwc_ver\"\n echo \"maven/java settings:\"\n mvn -version\n \n-if [ ! -z $git_user ] && [ ! -z $git_email ]; then\n-  git_opts=\"--author='$git_user <$git_email>'\"\n-fi\n-\n # move to root of source tree\n pushd .. > /dev/null\n \n@@ -364,6 +360,16 @@ fi\n \n # git commit changes on the release branch\n pushd .. > /dev/null\n+\n+# setup the author, for some reason I can;t for the life of me get to this\n+# to work properly from a script using the --author option to git commit\n+git config --unset user.name\n+git config --unset user.email\n+if [ ! -z $git_user ] && [ ! -z $git_email ]; then\n+  git config user.name $git_user\n+  git config user.email $git_email\n+fi\n+\n git add . \n git commit $git_opts -m \"updating version numbers and release notes for $tag\" .\n popd > /dev/null",
    "Add support for float , byte , nil and any": "diff --git a/compiler/ballerina-backend-jvm/src/main/ballerina/compiler_backend_jvm/jvm_constants.bal b/compiler/ballerina-backend-jvm/src/main/ballerina/compiler_backend_jvm/jvm_constants.bal\nindex 3b7e816b94c..45bee4b4591 100644\n--- a/compiler/ballerina-backend-jvm/src/main/ballerina/compiler_backend_jvm/jvm_constants.bal\n+++ b/compiler/ballerina-backend-jvm/src/main/ballerina/compiler_backend_jvm/jvm_constants.bal\n@@ -193,10 +193,12 @@ const string MAP_VALUE = \"org/ballerinalang/jvm/values/MapValue\";\n const string ARRAY_VALUE = \"org/ballerinalang/jvm/values/ArrayValue\";\n const string OBJECT_VALUE = \"org/ballerinalang/jvm/values/ObjectValue\";\n const string STRING_VALUE = \"java/lang/String\";\n-const string OBJECT = \"java/lang/Object\";\n const string LONG_VALUE = \"java/lang/Long\";\n const string BOOLEAN_VALUE = \"java/lang/Boolean\";\n+const string DOUBLE_VALUE = \"java/lang/Double\";\n+const string BYTE_VALUE = \"java/lang/Byte\";\n \n+const string OBJECT = \"java/lang/Object\";\n const string MAP = \"java/util/Map\";\n const string LINKED_HASH_MAP = \"java/util/LinkedHashMap\";\n \ndiff --git a/compiler/ballerina-backend-jvm/src/main/ballerina/compiler_backend_jvm/jvm_instruction_gen.bal b/compiler/ballerina-backend-jvm/src/main/ballerina/compiler_backend_jvm/jvm_instruction_gen.bal\nindex 37812f77e1b..0c28b5f1a12 100644\n--- a/compiler/ballerina-backend-jvm/src/main/ballerina/compiler_backend_jvm/jvm_instruction_gen.bal\n+++ b/compiler/ballerina-backend-jvm/src/main/ballerina/compiler_backend_jvm/jvm_instruction_gen.bal\n@@ -27,6 +27,10 @@ type InstructionGenerator object {\n             int index = self.getJVMIndexOfVarRef(loadIns.lhsOp.variableDcl);\n             //io:println(\"Const Store Index is :::::::::::\", index);\n             self.mv.visitVarInsn(ASTORE, index);\n+        } else if (bType is bir:BTypeNil) {\n+            self.mv.visitInsn(ACONST_NULL);\n+            int index = self.getJVMIndexOfVarRef(loadIns.lhsOp.variableDcl);\n+            self.mv.visitVarInsn(ASTORE, index);\n         } else {\n             error err = error( \"JVM generation is not supported for type : \" + io:sprintf(\"%s\", bType));\n             panic err;\n@@ -44,16 +48,22 @@ type InstructionGenerator object {\n         if (bType is bir:BTypeInt) {\n             self.mv.visitVarInsn(LLOAD, rhsIndex);\n             self.mv.visitVarInsn(LSTORE, lhsLndex);\n-        } else if (bType is bir:BTypeBoolean) {\n-            self.mv.visitVarInsn(ILOAD, rhsIndex);\n-            self.mv.visitVarInsn(ISTORE, lhsLndex);\n+        } else if (bType is bir:BTypeFloat) {\n+            self.mv.visitVarInsn(DLOAD, rhsIndex);\n+            self.mv.visitVarInsn(DSTORE, lhsLndex);\n         } else if (bType is bir:BTypeString) {\n             self.mv.visitVarInsn(ALOAD, rhsIndex);\n             self.mv.visitVarInsn(ASTORE, lhsLndex);\n-        } else if (bType is bir:BArrayType) {\n-            self.mv.visitVarInsn(ALOAD, rhsIndex);\n-            self.mv.visitVarInsn(ASTORE, lhsLndex);\n-        } else if (bType is bir:BMapType) {\n+        } else if (bType is bir:BTypeBoolean) {\n+            self.mv.visitVarInsn(ILOAD, rhsIndex);\n+            self.mv.visitVarInsn(ISTORE, lhsLndex);\n+        } else if (bType is bir:BTypeByte) {\n+            self.mv.visitVarInsn(ILOAD, rhsIndex);\n+            self.mv.visitVarInsn(ISTORE, lhsLndex);\n+        } else if (bType is bir:BArrayType ||\n+                        bType is bir:BMapType ||\n+                        bType is bir:BTypeAny ||\n+                        bType is bir:BTypeNil) {\n             self.mv.visitVarInsn(ALOAD, rhsIndex);\n             self.mv.visitVarInsn(ASTORE, lhsLndex);\n         } else {\ndiff --git a/compiler/ballerina-backend-jvm/src/main/ballerina/compiler_backend_jvm/jvm_method_gen.bal b/compiler/ballerina-backend-jvm/src/main/ballerina/compiler_backend_jvm/jvm_method_gen.bal\nindex afef2790e21..f2b35e4afdf 100644\n--- a/compiler/ballerina-backend-jvm/src/main/ballerina/compiler_backend_jvm/jvm_method_gen.bal\n+++ b/compiler/ballerina-backend-jvm/src/main/ballerina/compiler_backend_jvm/jvm_method_gen.bal\n@@ -1,14 +1,11 @@\n function generateMethod(bir:Function func, jvm:ClassWriter cw) {\n     BalToJVMIndexMap indexMap = new;\n     string funcName = untaint func.name.value;\n-\n     int returnVarRefIndex = -1;\n \n     // generate method desc\n     string desc = getMethodDesc(func);\n-\n     jvm:MethodVisitor mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, funcName, desc, null, null);\n-\n     mv.visitCode();\n \n     // generate method body\n@@ -29,26 +26,7 @@ function generateMethod(bir:Function func, jvm:ClassWriter cw) {\n         var index = indexMap.getIndex(localVar);\n         if(localVar.kind != \"ARG\"){\n             bir:BType bType = localVar.typeValue;\n-            if (bType is bir:BTypeInt) {\n-                mv.visitInsn(LCONST_0);\n-                mv.visitVarInsn(LSTORE, index);\n-            } else if (bType is bir:BTypeBoolean) {\n-                mv.visitInsn(ICONST_0);\n-                mv.visitVarInsn(ISTORE, index);\n-            } else if (bType is bir:BTypeString) {\n-                mv.visitInsn(ACONST_NULL);\n-                mv.visitVarInsn(ASTORE, index);\n-            } else if (bType is bir:BMapType) {\n-                mv.visitInsn(ACONST_NULL);\n-                mv.visitVarInsn(ASTORE, index);\n-            } else if (bType is bir:BArrayType) {\n-                mv.visitInsn(ACONST_NULL);\n-                mv.visitVarInsn(ASTORE, index);\n-            } else {\n-                error err = error( \"JVM generation is not supported for type \" +\n-                                            io:sprintf(\"%s\", bType));\n-                panic err;\n-            }\n+            genDefaultValue(mv, bType, index);\n         }\n         k += 1;\n     }\n@@ -72,26 +50,7 @@ function generateMethod(bir:Function func, jvm:ClassWriter cw) {\n     if (!isVoidFunc) {\n         returnVarRefIndex = indexMap.getIndex(localVars[0]);\n         bir:BType returnType = func.typeValue.retType;\n-        if (returnType is bir:BTypeInt) {\n-            mv.visitInsn(LCONST_0);\n-            mv.visitVarInsn(LSTORE, returnVarRefIndex);\n-        } else if (returnType is bir:BTypeBoolean) {\n-            mv.visitInsn(ICONST_0);\n-            mv.visitVarInsn(ISTORE, returnVarRefIndex);\n-        } else if (returnType is bir:BTypeString) {\n-            mv.visitInsn(ACONST_NULL);\n-            mv.visitVarInsn(ASTORE, returnVarRefIndex);\n-        } else if (returnType is bir:BMapType) {\n-            mv.visitInsn(ACONST_NULL);\n-            mv.visitVarInsn(ASTORE, returnVarRefIndex);\n-        } else if (returnType is bir:BArrayType) {\n-            mv.visitInsn(ACONST_NULL);\n-            mv.visitVarInsn(ASTORE, returnVarRefIndex);\n-        } else {\n-            error err = error( \"JVM generation is not supported for type \" +\n-                                            io:sprintf(\"%s\", returnType));\n-            panic err;\n-        }\n+        genDefaultValue(mv, returnType, returnVarRefIndex);\n     }\n \n     // uncomment to test yield\n@@ -222,13 +181,19 @@ function generateMethod(bir:Function func, jvm:ClassWriter cw) {\n         if (bType is bir:BTypeInt) {\n             mv.visitFieldInsn(GETFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \"J\");\n             mv.visitVarInsn(LSTORE, index);\n-        } else if (bType is bir:BTypeBoolean) {\n-            mv.visitFieldInsn(GETFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \"Z\");\n-            mv.visitVarInsn(ISTORE, index);\n+        } else if (bType is bir:BTypeFloat) {\n+            mv.visitFieldInsn(GETFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \"D\");\n+            mv.visitVarInsn(DSTORE, index);\n         } else if (bType is bir:BTypeString) {\n             mv.visitFieldInsn(GETFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \n                     io:sprintf(\"L%s;\", STRING_VALUE));\n             mv.visitVarInsn(ASTORE, index);\n+        } else if (bType is bir:BTypeBoolean) {\n+            mv.visitFieldInsn(GETFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \"Z\");\n+            mv.visitVarInsn(ISTORE, index);\n+        } else if (bType is bir:BTypeByte) {\n+            mv.visitFieldInsn(GETFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \"B\");\n+            mv.visitVarInsn(ISTORE, index);\n         } else if (bType is bir:BMapType) {\n             mv.visitFieldInsn(GETFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \n                     io:sprintf(\"L%s;\", MAP_VALUE));\n@@ -237,6 +202,10 @@ function generateMethod(bir:Function func, jvm:ClassWriter cw) {\n             mv.visitFieldInsn(GETFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \n                     io:sprintf(\"L%s;\", ARRAY_VALUE));\n             mv.visitVarInsn(ASTORE, index);\n+        } else if (bType is bir:BTypeNil || bType is bir:BTypeAny) {\n+            mv.visitFieldInsn(GETFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \n+                    io:sprintf(\"L%s;\", OBJECT));\n+            mv.visitVarInsn(ASTORE, index);\n         } else {\n             error err = error( \"JVM generation is not supported for type \" +\n                                         io:sprintf(\"%s\", bType));\n@@ -266,13 +235,19 @@ function generateMethod(bir:Function func, jvm:ClassWriter cw) {\n         if (bType is bir:BTypeInt) {\n             mv.visitVarInsn(LLOAD, index);\n             mv.visitFieldInsn(PUTFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \"J\");\n-        } else if (bType is bir:BTypeBoolean) {\n-            mv.visitVarInsn(ILOAD, index);\n-            mv.visitFieldInsn(PUTFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \"Z\");\n+        } else if (bType is bir:BTypeFloat) {\n+            mv.visitVarInsn(DLOAD, index);\n+            mv.visitFieldInsn(PUTFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \"D\");\n         } else if (bType is bir:BTypeString) {\n             mv.visitVarInsn(ALOAD, index);\n             mv.visitFieldInsn(PUTFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"),\n                     io:sprintf(\"L%s;\", STRING_VALUE));\n+        } else if (bType is bir:BTypeBoolean) {\n+            mv.visitVarInsn(ILOAD, index);\n+            mv.visitFieldInsn(PUTFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \"Z\");\n+        } else if (bType is bir:BTypeByte) {\n+            mv.visitVarInsn(ILOAD, index);\n+            mv.visitFieldInsn(PUTFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"), \"B\");\n         } else if (bType is bir:BMapType) {\n             mv.visitVarInsn(ALOAD, index);\n             mv.visitFieldInsn(PUTFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"),\n@@ -281,6 +256,10 @@ function generateMethod(bir:Function func, jvm:ClassWriter cw) {\n             mv.visitVarInsn(ALOAD, index);\n             mv.visitFieldInsn(PUTFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"),\n                     io:sprintf(\"L%s;\", ARRAY_VALUE));\n+        } else if (bType is bir:BTypeNil || bType is bir:BTypeAny) {\n+            mv.visitVarInsn(ALOAD, index);\n+            mv.visitFieldInsn(PUTFIELD, frameName, localVar.name.value.replace(\"%\",\"_\"),\n+                    io:sprintf(\"L%s;\", OBJECT));\n         } else {\n             error err = error( \"JVM generation is not supported for type \" +\n                                         io:sprintf(\"%s\", bType));\n@@ -319,6 +298,38 @@ function generateMethod(bir:Function func, jvm:ClassWriter cw) {\n     mv.visitEnd();\n }\n \n+function genDefaultValue(jvm:MethodVisitor mv, bir:BType bType, int index) {\n+    if (bType is bir:BTypeInt) {\n+        mv.visitInsn(LCONST_0);\n+        mv.visitVarInsn(LSTORE, index);\n+    } else if (bType is bir:BTypeFloat) {\n+        mv.visitInsn(DCONST_0);\n+        mv.visitVarInsn(DSTORE, index);\n+    } else if (bType is bir:BTypeString) {\n+        mv.visitInsn(ACONST_NULL);\n+        mv.visitVarInsn(ASTORE, index);\n+    } else if (bType is bir:BTypeBoolean) {\n+        mv.visitInsn(ICONST_0);\n+        mv.visitVarInsn(ISTORE, index);\n+    } else if (bType is bir:BTypeByte) {\n+        mv.visitInsn(ICONST_0);\n+        mv.visitVarInsn(ISTORE, index);\n+    } else if (bType is bir:BMapType) {\n+        mv.visitInsn(ACONST_NULL);\n+        mv.visitVarInsn(ASTORE, index);\n+    } else if (bType is bir:BArrayType) {\n+        mv.visitInsn(ACONST_NULL);\n+        mv.visitVarInsn(ASTORE, index);\n+    } else if (bType is bir:BTypeNil || bType is bir:BTypeAny) {\n+        mv.visitInsn(ACONST_NULL);\n+        mv.visitVarInsn(ASTORE, index);\n+    } else {\n+        error err = error( \"JVM generation is not supported for type \" +\n+                                        io:sprintf(\"%s\", bType));\n+        panic err;\n+    }\n+}\n+\n function getMethodDesc(bir:Function func) returns string {\n     string desc = \"(Lorg/ballerina/jvm/Strand;\";\n     int i = 0;\n@@ -335,14 +346,22 @@ function getMethodDesc(bir:Function func) returns string {\n function getTypeDesc(bir:BType bType) returns string {\n     if (bType is bir:BTypeInt) {\n         return \"J\";\n+    } else if (bType is bir:BTypeFloat) {\n+        return \"D\";\n     } else if (bType is bir:BTypeString) {\n-        return \"Ljava/lang/String;\";\n+        return io:sprintf(\"L%s;\", STRING_VALUE);\n     } else if (bType is bir:BTypeBoolean) {\n         return \"Z\";\n+    } else if (bType is bir:BTypeByte) {\n+        return \"B\";\n+    } else if (bType is bir:BTypeNil) {\n+        return io:sprintf(\"L%s;\", OBJECT);\n     } else if (bType is bir:BMapType) {\n         return io:sprintf(\"L%s;\", OBJECT_VALUE);\n     } else if (bType is bir:BArrayType) {\n         return io:sprintf(\"L%s;\", ARRAY_VALUE);\n+    } else if (bType is bir:BTypeAny) {\n+        return io:sprintf(\"L%s;\", OBJECT);\n     } else {\n         error err = error( \"JVM generation is not supported for type \" + io:sprintf(\"%s\", bType));\n         panic err;\n@@ -350,18 +369,24 @@ function getTypeDesc(bir:BType bType) returns string {\n }\n \n function generateReturnType(bir:BType? bType) returns string {\n-    if (bType is bir:BTypeNil) {\n-        return \")V\";\n-    } else if (bType is bir:BTypeInt) {\n+    if (bType is bir:BTypeInt) {\n         return \")J\";\n+    } else if (bType is bir:BTypeFloat) {\n+        return \")D\";\n     } else if (bType is bir:BTypeString) {\n-        return \")Ljava/lang/String;\";\n+        return io:sprintf(\")L%s;\", STRING_VALUE);\n     } else if (bType is bir:BTypeBoolean) {\n         return \")Z\";\n+    } else if (bType is bir:BTypeByte) {\n+        return \")B\";\n+    } else if (bType is bir:BTypeNil) {\n+        return \")V\";\n     } else if (bType is bir:BArrayType) {\n         return io:sprintf(\")L%s;\", ARRAY_VALUE);\n     } else if (bType is bir:BMapType) {\n         return io:sprintf(\")L%s;\", OBJECT_VALUE);\n+    } else if (bType is bir:BTypeAny) {\n+        return io:sprintf(\")L%s;\", OBJECT);\n     } else {\n         error err = error( \"JVM generation is not supported for type \" + io:sprintf(\"%s\", bType));\n         panic err;\n@@ -420,8 +445,12 @@ function generateMainMethod(bir:Function userMainFunc, jvm:ClassWriter cw, bir:P\n         bir:BType returnType = userMainFunc.typeValue.retType;\n         if (returnType is bir:BTypeInt) {\n             mv.visitMethodInsn(INVOKEVIRTUAL, \"java/io/PrintStream\", \"println\", \"(J)V\", false);\n+        } else if (returnType is bir:BTypeFloat) {\n+            mv.visitMethodInsn(INVOKEVIRTUAL, \"java/io/PrintStream\", \"println\", \"(D)V\", false);\n         } else if (returnType is bir:BTypeBoolean) {\n             mv.visitMethodInsn(INVOKEVIRTUAL, \"java/io/PrintStream\", \"println\", \"(Z)V\", false);\n+        } else if (returnType is bir:BTypeByte) {\n+            mv.visitMethodInsn(INVOKEVIRTUAL, \"java/io/PrintStream\", \"println\", \"(I)V\", false);\n         } else {\n             mv.visitMethodInsn(INVOKEVIRTUAL, \"java/io/PrintStream\", \"println\", \"(Ljava/lang/Object;)V\", false);\n         }\n@@ -443,12 +472,24 @@ function generateCast(int paramIndex, bir:BType targetType, jvm:MethodVisitor mv\n \n     if (targetType is bir:BTypeInt) {\n         mv.visitMethodInsn(INVOKESTATIC, LONG_VALUE, \"parseLong\", \"(Ljava/lang/String;)J\", false);\n-    } if (targetType is bir:BTypeBoolean) {\n-        mv.visitMethodInsn(INVOKESTATIC, BOOLEAN_VALUE, \"parseBoolean\", \"(Ljava/lang/String;)Z\", false);\n+    } else if (targetType is bir:BTypeFloat) {\n+        mv.visitMethodInsn(INVOKESTATIC, DOUBLE_VALUE, \"parseDouble\", \"(Ljava/lang/String;)D\", false);\n     } else if (targetType is bir:BTypeString) {\n         mv.visitTypeInsn(CHECKCAST, STRING_VALUE);\n+    } else if (targetType is bir:BTypeBoolean) {\n+        mv.visitMethodInsn(INVOKESTATIC, BOOLEAN_VALUE, \"parseBoolean\", \"(Ljava/lang/String;)Z\", false);\n+    } else if (targetType is bir:BTypeByte) {\n+        mv.visitMethodInsn(INVOKESTATIC, BYTE_VALUE, \"parseByte\", \"(Ljava/lang/String;)B\", false);\n+    } else if (targetType is bir:BTypeNil) {\n+        // do nothing\n+        return;\n     } else if (targetType is bir:BArrayType) {\n         mv.visitTypeInsn(CHECKCAST, ARRAY_VALUE);\n+    } else if (targetType is bir:BMapType) {\n+        mv.visitTypeInsn(CHECKCAST, MAP_VALUE);\n+    } else if (targetType is bir:BTypeAny) {\n+        // do nothing\n+        return;\n     } else {\n         error err = error(\"JVM generation is not supported for type \" + io:sprintf(\"%s\", targetType));\n         panic err;\n@@ -503,18 +544,30 @@ function generateFrameClasses(bir:Package pkg, map<byte[]> pkgEntries) {\n             if (bType is bir:BTypeInt) {\n                 jvm:FieldVisitor fv = cw.visitField(ACC_PUBLIC, fieldName, \"J\");\n                 fv.visitEnd();\n-            } else if (bType is bir:BTypeBoolean) {\n+            } else if (bType is bir:BTypeFloat) {\n                 jvm:FieldVisitor fv = cw.visitField(ACC_PUBLIC, fieldName, \"Z\");\n                 fv.visitEnd();\n             } else if (bType is bir:BTypeString) {\n                 jvm:FieldVisitor fv = cw.visitField(ACC_PUBLIC, fieldName, io:sprintf(\"L%s;\", STRING_VALUE));\n                 fv.visitEnd();\n+            } else if (bType is bir:BTypeBoolean) {\n+                jvm:FieldVisitor fv = cw.visitField(ACC_PUBLIC, fieldName, \"D\");\n+                fv.visitEnd();\n+            } else if (bType is bir:BTypeByte) {\n+                jvm:FieldVisitor fv = cw.visitField(ACC_PUBLIC, fieldName, \"B\");\n+                fv.visitEnd();\n+            } else if (bType is bir:BTypeNil) {\n+                jvm:FieldVisitor fv = cw.visitField(ACC_PUBLIC, fieldName, io:sprintf(\"L%s;\", OBJECT));\n+                fv.visitEnd();\n             } else if (bType is bir:BMapType) {\n                 jvm:FieldVisitor fv = cw.visitField(ACC_PUBLIC, fieldName, io:sprintf(\"L%s;\", MAP_VALUE));\n                 fv.visitEnd();\n             } else if (bType is bir:BArrayType) {\n                 jvm:FieldVisitor fv = cw.visitField(ACC_PUBLIC, fieldName, io:sprintf(\"L%s;\", ARRAY_VALUE));\n                 fv.visitEnd();\n+            } else if (bType is bir:BTypeAny) {\n+                jvm:FieldVisitor fv = cw.visitField(ACC_PUBLIC, fieldName, io:sprintf(\"L%s;\", OBJECT));\n+ ",
    "Add improved streams bal files and tests based on updated grammar": "diff --git a/stdlib/streams/src/main/ballerina/streams/windows.bal b/stdlib/streams/src/main/ballerina/streams/windows.bal\nindex 10b77e8b843..06dc2c10cf9 100644\n--- a/stdlib/streams/src/main/ballerina/streams/windows.bal\n+++ b/stdlib/streams/src/main/ballerina/streams/windows.bal\n@@ -24,7 +24,7 @@ public type Window abstract object {\n \n     public function getCandidateEvents(\n                         StreamEvent originEvent,\n-                        (function (map<any> e1Data, map<any> e2Data) returns boolean)? conditionFunc,\n+                        (function (map<anydata> e1Data, map<anydata> e2Data) returns boolean)? conditionFunc,\n                         boolean isLHSTrigger = true)\n                         returns (StreamEvent?, StreamEvent?)[];\n };\n@@ -36,20 +36,22 @@ public type LengthWindow object {\n     public any[] windowParameters;\n     public function (StreamEvent[])? nextProcessPointer;\n \n-    public new(nextProcessPointer, windowParameters) {\n+    public function __init(function (StreamEvent[])? nextProcessPointer, any[] windowParameters) {\n+        self.nextProcessPointer = nextProcessPointer;\n+        self.windowParameters = windowParameters;\n         self.linkedList = new;\n         self.initParameters(windowParameters);\n         self.size = 0;\n     }\n \n     public function initParameters(any[] parameters) {\n-        if(parameters.length() == 1) {\n-            match parameters[0] {\n-                int value => self.size = value;\n-                any anyValue => {\n-                    error err = error(\"Length window expects an int parameter\");\n-                    panic err;\n-                }\n+        if (parameters.length() == 1) {\n+            any value = parameters[0];\n+            if (value is int) {\n+                self.size = value;\n+            } else {\n+                error err = error(\"Length window expects an int parameter\");\n+                panic err;\n             }\n         } else {\n             error err = error(\"Length window should only have one parameter (<int> \" +\n@@ -62,18 +64,10 @@ public type LengthWindow object {\n         StreamEvent[] outputEvents = [];\n         foreach event in streamEvents {\n             if (self.linkedList.getSize() == self.size) {\n-                match self.linkedList.removeFirst() {\n-                    StreamEvent streamEvent => {\n-                        outputEvents[outputEvents.length()] = streamEvent;\n-                    }\n \n-                    () => {\n-                        // do nothing\n-                    }\n-\n-                    any anyValue => {\n-                        // do nothing\n-                    }\n+                any? anyValue = self.linkedList.removeFirst();\n+                if (anyValue is StreamEvent) {\n+                    outputEvents[outputEvents.length()] = anyValue;\n                 }\n             }\n \n@@ -82,42 +76,33 @@ public type LengthWindow object {\n             expiredVeresionOfEvent.eventType = \"EXPIRED\";\n             self.linkedList.addLast(expiredVeresionOfEvent);\n         }\n-        match (self.nextProcessPointer) {\n-            function (StreamEvent[]) nxtProc => {\n-                nxtProc(outputEvents);\n-            }\n-            () => {\n-                //do nothing\n-            }\n+\n+        any nextProcessFuncPointer = self.nextProcessPointer;\n+        if (nextProcessFuncPointer is function (StreamEvent[])) {\n+            nextProcessFuncPointer.call(outputEvents);\n         }\n     }\n \n     public function getCandidateEvents(\n                         StreamEvent originEvent,\n-                        (function (map<any> e1Data, map<any> e2Data) returns boolean)? conditionFunc,\n+                        (function (map<anydata> e1Data, map<anydata> e2Data) returns boolean)? conditionFunc,\n                         boolean isLHSTrigger = true)\n                         returns (StreamEvent?, StreamEvent?)[] {\n         (StreamEvent?, StreamEvent?)[] events = [];\n         int i = 0;\n         foreach e in self.linkedList.asArray() {\n-            match e {\n-                StreamEvent s => {\n-                    StreamEvent lshEvent = (isLHSTrigger) ? originEvent : s;\n-                    StreamEvent rhsEvent = (isLHSTrigger) ? s : originEvent;\n-                    match (conditionFunc) {\n-                        function (map<any> e1Data, map<any> e2Data) returns boolean conditionCheckFunc => {\n-                            if (conditionCheckFunc(lshEvent.data, rhsEvent.data)) {\n-                                events[i] = (lshEvent, rhsEvent);\n-                                i += 1;\n-                            }\n-                        }\n-                        () => {\n-                            events[i] = (lshEvent, rhsEvent);\n-                            i += 1;\n-                        }\n+            if (e is StreamEvent) {\n+                StreamEvent lshEvent = (isLHSTrigger) ? originEvent : e;\n+                StreamEvent rhsEvent = (isLHSTrigger) ? e : originEvent;\n+\n+                if (conditionFunc is function (map<anydata> e1Data, map<anydata> e2Data) returns boolean) {\n+                    if (conditionFunc.call(lshEvent.data, rhsEvent.data)) {\n+                        events[i] = (lshEvent, rhsEvent);\n+                        i += 1;\n                     }\n-                }\n-                any a => {\n+                } else if (conditionFunc is ()) {\n+                    events[i] = (lshEvent, rhsEvent);\n+                    i += 1;\n                 }\n             }\n         }\n@@ -140,7 +125,9 @@ public type TimeWindow object {\n     public function (StreamEvent[])? nextProcessPointer;\n     public int lastTimestamp = -0x8000000000000000;\n \n-    public new(nextProcessPointer, windowParameters) {\n+    public function __init(function (StreamEvent[])? nextProcessPointer, any[] windowParameters) {\n+        self.nextProcessPointer = nextProcessPointer;\n+        self.windowParameters = windowParameters;\n         self.timeInMillis = 0;\n         self.expiredEventQueue = new;\n         self.timerQueue = new;\n@@ -148,13 +135,13 @@ public type TimeWindow object {\n     }\n \n     public function initParameters(any[] parameters) {\n-        if(parameters.length() == 1) {\n-            match parameters[0] {\n-                int value => self.timeInMillis = value;\n-                any anyValue => {\n-                    error err = error(\"Time window expects an int parameter\");\n-                    panic err;\n-                }\n+        if (parameters.length() == 1) {\n+            any parameter0 = parameters[0];\n+            if (parameter0 is int) {\n+                self.timeInMillis = parameter0;\n+            } else {\n+                error err = error(\"Time window expects an int parameter\");\n+                panic err;\n             }\n         } else {\n             error err = error(\"Time window should only have one parameter (<int> \" +\n@@ -173,14 +160,7 @@ public type TimeWindow object {\n             streamEventChunk.resetToFront();\n \n             while (streamEventChunk.hasNext()) {\n-                StreamEvent streamEvent;\n-                any? next = streamEventChunk.next();\n-                if (next is StreamEvent) {\n-                    streamEvent = next;\n-                } else {\n-                    return;\n-                }\n-\n+                StreamEvent streamEvent = <StreamEvent>streamEventChunk.next();\n                 int currentTime = time:currentTime().time;\n                 self.expiredEventQueue.resetToFront();\n \n@@ -202,7 +182,8 @@ public type TimeWindow object {\n                     self.expiredEventQueue.addLast(clonedEvent);\n \n                     if (self.lastTimestamp < clonedEvent.timestamp) {\n-                        task:Timer timer = new task:Timer(self.invokeProcess, self.handleError, self.timeInMillis,\n+                        task:Timer timer = new task:Timer(function () returns error? {return self.invokeProcess();},\n+                            function (error e) {self.handleError(e);}, self.timeInMillis,\n                             delay = self.timeInMillis - (time:currentTime().time - clonedEvent.timestamp));\n                         _ = timer.start();\n                         self.timerQueue.addLast(timer);\n@@ -214,31 +195,29 @@ public type TimeWindow object {\n             }\n             self.expiredEventQueue.resetToFront();\n         }\n-        match (self.nextProcessPointer) {\n-            function (StreamEvent[]) nxtProc => {\n-                if (streamEventChunk.getSize() != 0) {\n-                    StreamEvent[] events = [];\n-                    streamEventChunk.resetToFront();\n-                    while (streamEventChunk.hasNext()) {\n-                        StreamEvent streamEvent = getStreamEvent(streamEventChunk.next());\n-                        events[events.length()] = streamEvent;\n-                    }\n-                    nxtProc(events);\n+\n+        any nextProcessFuncPointer = self.nextProcessPointer;\n+        if (nextProcessFuncPointer is function (StreamEvent[])) {\n+            if (streamEventChunk.getSize() != 0) {\n+                StreamEvent[] events = [];\n+                streamEventChunk.resetToFront();\n+                while (streamEventChunk.hasNext()) {\n+                    StreamEvent streamEvent = getStreamEvent(streamEventChunk.next());\n+                    events[events.length()] = streamEvent;\n                 }\n-            }\n-            () => {\n-                //do nothing\n+                nextProcessFuncPointer.call(events);\n             }\n         }\n     }\n \n     public function invokeProcess() returns error? {\n-        StreamEvent timerEvent = new((\"timer\", {}), \"TIMER\", time:currentTime().time);\n+        map<anydata> data = {};\n+        StreamEvent timerEvent = new((\"timer\", data), \"TIMER\", time:currentTime().time);\n         StreamEvent[] timerEventWrapper = [];\n         timerEventWrapper[0] = timerEvent;\n         self.process(timerEventWrapper);\n         if (!self.timerQueue.isEmpty()) {\n-            task:Timer timer = check trap <task:Timer>self.timerQueue.removeFirst();\n+            task:Timer timer = <task:Timer>self.timerQueue.removeFirst();\n             _ = timer.stop();\n         }\n         return ();\n@@ -250,30 +229,24 @@ public type TimeWindow object {\n \n     public function getCandidateEvents(\n                         StreamEvent originEvent,\n-                        (function (map<any> e1Data, map<any> e2Data) returns boolean)? conditionFunc,\n+                        (function (map<anydata> e1Data, map<anydata> e2Data) returns boolean)? conditionFunc,\n                         boolean isLHSTrigger = true)\n                         returns (StreamEvent?, StreamEvent?)[] {\n         (StreamEvent?, StreamEvent?)[] events = [];\n         int i = 0;\n         foreach e in self.expiredEventQueue.asArray() {\n-            match e {\n-                StreamEvent s => {\n-                    StreamEvent lshEvent = (isLHSTrigger) ? originEvent : s;\n-                    StreamEvent rhsEvent = (isLHSTrigger) ? s : originEvent;\n-                    match (conditionFunc) {\n-                        function (map<any> e1Data, map<any> e2Data) returns boolean conditionCheckFunc => {\n-                            if (conditionCheckFunc(lshEvent.data, rhsEvent.data)) {\n-                                events[i] = (lshEvent, rhsEvent);\n-                                i += 1;\n-                            }\n-                        }\n-                        () => {\n-                            events[i] = (lshEvent, rhsEvent);\n-                            i += 1;\n-                        }\n+            if (e is StreamEvent) {\n+                StreamEvent lshEvent = (isLHSTrigger) ? originEvent : e;\n+                StreamEvent rhsEvent = (isLHSTrigger) ? e : originEvent;\n+\n+                if (conditionFunc is function (map<anydata> e1Data, map<anydata> e2Data) returns boolean) {\n+                    if (conditionFunc.call(lshEvent.data, rhsEvent.data)) {\n+                        events[i] = (lshEvent, rhsEvent);\n+                        i += 1;\n                     }\n-                }\n-                any a => {\n+                } else if (conditionFunc is ()) {\n+                    events[i] = (lshEvent, rhsEvent);\n+                    i += 1;\n                 }\n             }\n   ",
    "Added flipRegions method .": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileAtlas.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileAtlas.java\nindex b5e0647a4..fa32922ea 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileAtlas.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileAtlas.java\n@@ -121,4 +121,15 @@ public class TileAtlas implements Disposable {\n \r\n \t\treturn child;\r\n \t}\r\n+\r\n+\t/**\r\n+\t * Flips all regions in the atlas on the specified axis.\r\n+\t * @param x - if <code>true</code> region is flipped on the <b>x</b> axis \r\n+\t * @param y - if <code>true</code> region is flipped on the <b>y</b> axis \r\n+\t */\r\n+\tpublic void flipRegions(boolean x, boolean y) {\r\n+\t\tfor (TextureRegion region : regionsMap.values()) {\r\n+\t\t\tregion.flip(x, y);\r\n+\t\t}\r\n+\t}\r\n }\r",
    "Expose compilation tasks in the afterCompilation handler .": "diff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/FeatureImpl.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/FeatureImpl.java\nindex bf67d27d02d..ce7a943bc65 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/FeatureImpl.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/FeatureImpl.java\n@@ -46,6 +46,7 @@ import java.util.function.Predicate;\n import java.util.stream.Collectors;\n \n import com.oracle.svm.hosted.code.CEntryPointData;\n+import com.oracle.svm.hosted.code.CompileQueue;\n import org.graalvm.collections.Pair;\n import org.graalvm.compiler.debug.DebugContext;\n import org.graalvm.nativeimage.hosted.Feature;\n@@ -563,9 +564,16 @@ public class FeatureImpl {\n     }\n \n     public static class AfterCompilationAccessImpl extends CompilationAccessImpl implements Feature.AfterCompilationAccess {\n+        private Collection<CompileQueue.CompileTask> compilationTasks;\n+\n         AfterCompilationAccessImpl(FeatureHandler featureHandler, ImageClassLoader imageClassLoader, AnalysisUniverse aUniverse, HostedUniverse hUniverse, HostedMetaAccess hMetaAccess,\n-                        NativeImageHeap heap, DebugContext debugContext) {\n+                                   Collection<CompileQueue.CompileTask> compilationTasks, NativeImageHeap heap, DebugContext debugContext) {\n             super(featureHandler, imageClassLoader, aUniverse, hUniverse, hMetaAccess, heap, debugContext);\n+            this.compilationTasks = compilationTasks;\n+        }\n+\n+        public Collection<CompileQueue.CompileTask> getCompilationTasks() {\n+            return compilationTasks;\n         }\n     }\n \ndiff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java\nindex d8d8428251e..2face1e80e4 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java\n@@ -613,7 +613,7 @@ public class NativeImageGenerator {\n                 codeCache.layoutConstants();\n                 codeCache.layoutMethods(debug, imageName, bigbang, compilationExecutor);\n \n-                AfterCompilationAccessImpl config = new AfterCompilationAccessImpl(featureHandler, loader, aUniverse, hUniverse, hMetaAccess, heap, debug);\n+                AfterCompilationAccessImpl config = new AfterCompilationAccessImpl(featureHandler, loader, aUniverse, hUniverse, hMetaAccess, compileQueue.getCompilationTasks(), heap, debug);\n                 featureHandler.forEachFeature(feature -> feature.afterCompilation(config));\n             }\n             CodeCacheProvider codeCacheProvider = runtime.getRuntimeConfig().getBackendForNormalMethod().getProviders().getCodeCache();\ndiff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/code/CompileQueue.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/code/CompileQueue.java\nindex f9099678535..814f3a7e141 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/code/CompileQueue.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/code/CompileQueue.java\n@@ -28,6 +28,7 @@ import java.lang.annotation.Annotation;\n import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.HashMap;\n@@ -391,6 +392,10 @@ public class CompileQueue {\n         return phaseSuite;\n     }\n \n+    public Collection<CompileTask> getCompilationTasks() {\n+        return compilations.values();\n+    }\n+\n     private void printMethodHistogram() {\n         long sizeAllMethods = 0;\n         long sizeDeoptMethods = 0;",
    "Add some tests used to help track down performance issues . . git - svn - id : https : / / svn . apache . org / repos / asf / tomcat / trunk @ 1190383 13f79535 - 47bb - 0310 - 9956 - ffa450edef68": "diff --git a/test/org/apache/tomcat/util/http/TestParametersPerformance.java b/test/org/apache/tomcat/util/http/TestParametersPerformance.java\nnew file mode 100644\nindex 0000000000..9b6d4acb8a\n--- /dev/null\n+++ b/test/org/apache/tomcat/util/http/TestParametersPerformance.java\n@@ -0,0 +1,133 @@\n+/*\r\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ *  contributor license agreements.  See the NOTICE file distributed with\r\n+ *  this work for additional information regarding copyright ownership.\r\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ *  (the \"License\"); you may not use this file except in compliance with\r\n+ *  the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ *  Unless required by applicable law or agreed to in writing, software\r\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ *  See the License for the specific language governing permissions and\r\n+ *  limitations under the License.\r\n+ */\r\n+package org.apache.tomcat.util.http;\r\n+\r\n+import java.io.UnsupportedEncodingException;\r\n+import java.nio.charset.Charset;\r\n+import java.util.logging.Level;\r\n+import java.util.logging.LogManager;\r\n+\r\n+import static org.junit.Assert.assertEquals;\r\n+import org.junit.Test;\r\n+\r\n+import org.apache.tomcat.util.buf.B2CConverter;\r\n+\r\n+public class TestParametersPerformance {\r\n+\r\n+    @Test\r\n+    public void testProcessParametersByteArrayIntInt() {\r\n+        LogManager.getLogManager().getLogger(\"\").setLevel(Level.OFF);\r\n+        doTestProcessParametersMultiple(\"foo\".getBytes());\r\n+    }\r\n+\r\n+    private void doTestProcessParametersMultiple(byte[] input) {\r\n+        System.out.println(doTestProcessParameters(input, 10000));\r\n+        System.out.println(doTestProcessParameters(input, 20000));\r\n+        System.out.println(doTestProcessParameters(input, 40000));\r\n+        System.out.println(doTestProcessParameters(input, 80000));\r\n+        System.out.println(doTestProcessParameters(input, 160000));\r\n+        System.out.println(doTestProcessParameters(input, 320000));\r\n+        System.out.println(doTestProcessParameters(input, 640000));\r\n+        System.out.println(doTestProcessParameters(input, 1280000));\r\n+    }\r\n+\r\n+    private long doTestProcessParameters(byte[] input, int size) {\r\n+        assertEquals(input.length, 3);\r\n+\r\n+        Parameters p = new Parameters();\r\n+\r\n+        byte[] params = createParams(input, size);\r\n+        //byte[] input = createParams(8);\r\n+        p.setEncoding(\"ISO-8859-1\");\r\n+        long start = System.nanoTime();\r\n+        p.processParameters(params, 0, params.length);\r\n+        return System.nanoTime() - start;\r\n+    }\r\n+\r\n+    private byte[] createParams(byte[] input, int len) {\r\n+        byte[] result = new byte[len * 4 - 1];\r\n+\r\n+        for (int i = 0; i < len; i++) {\r\n+            result[i * 4] = input[0];\r\n+            result[i * 4 + 1] = input[1];\r\n+            result[i * 4 + 2] = input[2];\r\n+            if (i < len -1) {\r\n+                result[i * 4 + 3] = 38;\r\n+            }\r\n+        }\r\n+        return result;\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testCreateString() throws UnsupportedEncodingException {\r\n+        B2CConverter.getCharset(\"ISO-8859-1\");\r\n+        doCreateStringMultiple(\"foo\");\r\n+    }\r\n+\r\n+    private void doCreateStringMultiple(String input) {\r\n+        System.out.println(doCreateString(input, 10, true));\r\n+        System.out.println(doCreateString(input, 100, true));\r\n+        System.out.println(doCreateString(input, 1000, true));\r\n+        System.out.println(doCreateString(input, 10000, true));\r\n+        System.out.println(doCreateString(input, 100000, true));\r\n+        System.out.println(doCreateString(input, 1000000, true));\r\n+        System.out.println(doCreateString(input, 2000000, true));\r\n+        //System.out.println(doCreateString(input, 4000000, true));\r\n+        //System.out.println(doCreateString(input, 8000000, true));\r\n+        System.out.println(doCreateString(input, 10, false));\r\n+        System.out.println(doCreateString(input, 100, false));\r\n+        System.out.println(doCreateString(input, 1000, false));\r\n+        System.out.println(doCreateString(input, 10000, false));\r\n+        System.out.println(doCreateString(input, 100000, false));\r\n+        System.out.println(doCreateString(input, 1000000, false));\r\n+        System.out.println(doCreateString(input, 2000000, false));\r\n+        //System.out.println(doCreateString(input, 4000000, false));\r\n+        //System.out.println(doCreateString(input, 8000000, false));\r\n+    }\r\n+\r\n+    private long doCreateString(String input, int size,\r\n+            boolean defensiveCopyWorkAround) {\r\n+        int loops = 10000;\r\n+        byte[] inputBytes = input.getBytes();\r\n+        byte[] bytes = new byte[size];\r\n+        int inputLength = inputBytes.length;\r\n+\r\n+        System.arraycopy(inputBytes, 0, bytes, 0, inputLength);\r\n+\r\n+        String[] result = new String[loops];\r\n+        Charset charset = null;\r\n+        try {\r\n+            charset = B2CConverter.getCharset(\"ISO-8859-1\");\r\n+        } catch (UnsupportedEncodingException e) {\r\n+            // TODO Auto-generated catch block\r\n+            e.printStackTrace();\r\n+        }\r\n+\r\n+        long start = System.nanoTime();\r\n+        for (int i = 0; i < loops; i++) {\r\n+            if (defensiveCopyWorkAround) {\r\n+                byte[] tmp = new byte[inputLength];\r\n+                System.arraycopy(bytes, 0, tmp, 0, inputLength);\r\n+                result[i] = new String(tmp, 0, inputLength, charset);\r\n+            } else {\r\n+                result[i] = new String(bytes, 0, inputLength, charset);\r\n+            }\r\n+        }\r\n+\r\n+        return System.nanoTime() - start;\r\n+    }\r\n+}\r",
    "prepare release hudson - 1_110 .": "diff --git a/core/pom.xml b/core/pom.xml\nindex f90b7d7e8e..da843c813f 100644\n--- a/core/pom.xml\n+++ b/core/pom.xml\n@@ -3,7 +3,7 @@\n   <parent>\n     <groupId>org.jvnet.hudson.main</groupId>\n     <artifactId>pom</artifactId>\n-    <version>1.110-SNAPSHOT</version>\n+    <version>1.110</version>\n     <relativePath>../pom.xml</relativePath>\n   </parent>\n   \ndiff --git a/jnlp-agent/pom.xml b/jnlp-agent/pom.xml\nindex 0f4e841c7a..bab6fdce6c 100644\n--- a/jnlp-agent/pom.xml\n+++ b/jnlp-agent/pom.xml\n@@ -3,7 +3,7 @@\n   <parent>\n     <groupId>org.jvnet.hudson.main</groupId>\n     <artifactId>pom</artifactId>\n-    <version>1.110-SNAPSHOT</version>\n+    <version>1.110</version>\n     <relativePath>../pom.xml</relativePath>\n   </parent>\n   \ndiff --git a/maven-agent/pom.xml b/maven-agent/pom.xml\nindex a0680767dc..0cb093b1e0 100644\n--- a/maven-agent/pom.xml\n+++ b/maven-agent/pom.xml\n@@ -3,7 +3,7 @@\n   <parent>\n     <groupId>org.jvnet.hudson.main</groupId>\n     <artifactId>pom</artifactId>\n-    <version>1.110-SNAPSHOT</version>\n+    <version>1.110</version>\n     <relativePath>../pom.xml</relativePath>\n   </parent>\n   \ndiff --git a/maven-interceptor/pom.xml b/maven-interceptor/pom.xml\nindex cab7beef52..ecc99e5c0b 100644\n--- a/maven-interceptor/pom.xml\n+++ b/maven-interceptor/pom.xml\n@@ -3,7 +3,7 @@\n   <parent>\n     <groupId>org.jvnet.hudson.main</groupId>\n     <artifactId>pom</artifactId>\n-    <version>1.110-SNAPSHOT</version>\n+    <version>1.110</version>\n     <relativePath>../pom.xml</relativePath>\n   </parent>\n   \ndiff --git a/pom.xml b/pom.xml\nindex 129e310307..032f399853 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -9,7 +9,7 @@\n   \n   <groupId>org.jvnet.hudson.main</groupId>\n   <artifactId>pom</artifactId>\n-  <version>1.110-SNAPSHOT</version>\n+  <version>1.110</version>\n   <packaging>pom</packaging>\n   \n   <name>Hudson main module</name>\n@@ -28,6 +28,7 @@\n     <connection>scm:cvs:pserver:guest@cvs.dev.java.net:/cvs:hudson/hudson/main</connection>\n     <developerConnection>scm:cvs:pserver:kohsuke@cvs.dev.java.net:/cvs:hudson/hudson/main</developerConnection>\n     <url>https://hudson.dev.java.net/source/browse/hudson/hudson/main</url>\n+    <tag>hudson-1_110</tag>\n   </scm>\n   \n   <build>\ndiff --git a/remoting/pom.xml b/remoting/pom.xml\nindex 1bf847a2ba..9adc742c2e 100644\n--- a/remoting/pom.xml\n+++ b/remoting/pom.xml\n@@ -3,7 +3,7 @@\n   <parent>\n     <groupId>org.jvnet.hudson.main</groupId>\n     <artifactId>pom</artifactId>\n-    <version>1.110-SNAPSHOT</version>\n+    <version>1.110</version>\n     <relativePath>../pom.xml</relativePath>\n   </parent>\n   \ndiff --git a/war/pom.xml b/war/pom.xml\nindex a0f7a0053e..816f686976 100644\n--- a/war/pom.xml\n+++ b/war/pom.xml\n@@ -3,7 +3,7 @@\n   <parent>\n     <groupId>org.jvnet.hudson.main</groupId>\n     <artifactId>pom</artifactId>\n-    <version>1.110-SNAPSHOT</version>\n+    <version>1.110</version>\n     <relativePath>../pom.xml</relativePath>\n   </parent>\n   ",
    "Added tag jdk8u152 - b16 for changeset eade057fd8d0": "diff --git a/hotspot/.hgtags b/hotspot/.hgtags\nindex b9ee766f1a..3f843994e7 100644\n--- a/hotspot/.hgtags\n+++ b/hotspot/.hgtags\n@@ -1014,3 +1014,4 @@ cdfe7ec6f29293d7c2f64239518e8947733ad85c jdk8u152-b12\n 3dd92151df1b3b7c21756f241b49607024b6fe5a jdk8u152-b13\n 0a9d8db98fc5f0302da6520ba329f41baa092ae0 jdk8u152-b14\n c1bf165d3b27e864a9f8eec5bb0c1e746a972ad5 jdk8u152-b15\n+98b4b0661837817cc39047000e1a7efa6015af7c jdk8u152-b16",
    "Implement context switches and interrupts on macOS , FreeBSD , Solaris ( <issue_id> ) .": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 1a5f08962a..ae38b20a7a 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -1,7 +1,8 @@\n 3.5.0 (in progress)\n ================\n * [#446](https://github.com/oshi/oshi/pull/446): Add getChildProcesses to OperatingSystem. - [@jsimomaa](https://github.com/jsimomaa)\n-* [#447](https://github.com/oshi/oshi/pull/447): Added context switches and interrupts (linux/windows) - [@jpbempel](https://github.com/jpbempel).\n+* [#447](https://github.com/oshi/oshi/pull/447), [#471](https://github.com/oshi/oshi/pull/471): Added context switches and interrupts - [@jpbempel](https://github.com/jpbempel), [@dbwiddis](https://github.com/dbwiddis).\n+* Updated to JNA 4.5.1\n * Your contribution here.\n \n 3.4.5 (4/11/18)\ndiff --git a/oshi-core/pom.xml b/oshi-core/pom.xml\nindex f93a30de69..9b504939b8 100644\n--- a/oshi-core/pom.xml\n+++ b/oshi-core/pom.xml\n@@ -45,7 +45,7 @@\n \t\t<dependency>\n \t\t\t<groupId>net.java.dev.jna</groupId>\n \t\t\t<artifactId>jna-platform</artifactId>\n-\t\t\t<version>4.5.0</version>\n+\t\t\t<version>4.5.1</version>\n \t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.threeten</groupId>\ndiff --git a/oshi-core/src/main/java/oshi/hardware/CentralProcessor.java b/oshi-core/src/main/java/oshi/hardware/CentralProcessor.java\nindex ecb4617288..3d95b486fc 100644\n--- a/oshi-core/src/main/java/oshi/hardware/CentralProcessor.java\n+++ b/oshi-core/src/main/java/oshi/hardware/CentralProcessor.java\n@@ -69,7 +69,8 @@ public interface CentralProcessor extends Serializable {\n          */\r\n         SOFTIRQ(6),\r\n         /**\r\n-         * Time which the hypervisor dedicated for other guests in the system. Only supported on Linux.\r\n+         * Time which the hypervisor dedicated for other guests in the system.\r\n+         * Only supported on Linux.\r\n          */\r\n         STEAL(7);\r\n \r\n@@ -239,19 +240,19 @@ public interface CentralProcessor extends Serializable {\n      * Get System-wide CPU Load tick counters. Returns an array with seven\r\n      * elements representing either clock ticks or milliseconds (platform\r\n      * dependent) spent in User (0), Nice (1), System (2), Idle (3), IOwait (4),\r\n-     * Hardware interrupts (IRQ) (5), Software interrupts/DPC (SoftIRQ) (6), or Steal (7)\r\n-     * states. Use {@link TickType#getIndex()} to retrieve the appropriate\r\n-     * index. By measuring the difference between ticks across a time interval,\r\n-     * CPU load over that interval may be calculated.\r\n+     * Hardware interrupts (IRQ) (5), Software interrupts/DPC (SoftIRQ) (6), or\r\n+     * Steal (7) states. Use {@link TickType#getIndex()} to retrieve the\r\n+     * appropriate index. By measuring the difference between ticks across a\r\n+     * time interval, CPU load over that interval may be calculated.\r\n      *\r\n      * Nice and IOWait information is not available on Windows, and IOwait and\r\n      * IRQ information is not available on macOS, so these ticks will always be\r\n      * zero.\r\n      *\r\n      * To calculate overall Idle time using this method, include both Idle and\r\n-     * IOWait ticks. Similarly, IRQ, SoftIRQ, and Steal ticks should be added to the\r\n-     * System value to get the total. System ticks also include time executing\r\n-     * other virtual hosts (steal).\r\n+     * IOWait ticks. Similarly, IRQ, SoftIRQ, and Steal ticks should be added to\r\n+     * the System value to get the total. System ticks also include time\r\n+     * executing other virtual hosts (steal).\r\n      *\r\n      * @return An array of 7 long values representing time spent in User, Nice,\r\n      *         System, Idle, IOwait, IRQ, SoftIRQ, and Steal states.\r\n@@ -317,10 +318,9 @@ public interface CentralProcessor extends Serializable {\n      * than 1 second. If less than one second has elapsed since the last call of\r\n      * this method, it will return a calculation based on the tick counts and\r\n      * times of the previous two calls. If at least a second has elapsed, it\r\n-     * will return the average CPU load for the interval and update the\r\n-     * \"last called\" times. This method is intended to be used for periodic\r\n-     * polling (iterating over all processors) at intervals of 1 second or\r\n-     * longer.\r\n+     * will return the average CPU load for the interval and update the \"last\r\n+     * called\" times. This method is intended to be used for periodic polling\r\n+     * (iterating over all processors) at intervals of 1 second or longer.\r\n      *\r\n      * @return array of CPU load between 0 and 1 (100%) for each logical\r\n      *         processor\r\n@@ -332,23 +332,23 @@ public interface CentralProcessor extends Serializable {\n      * with {@link #getLogicalProcessorCount()} arrays, each containing seven\r\n      * elements representing either clock ticks or milliseconds (platform\r\n      * dependent) spent in User (0), Nice (1), System (2), Idle (3), IOwait (4),\r\n-     * Hardware interrupts (IRQ) (5), Software interrupts/DPC (SoftIRQ) (6), or Steal (7)\r\n-     * states. Use {@link TickType#getIndex()} to retrieve the appropriate\r\n-     * index. By measuring the difference between ticks across a time interval,\r\n-     * CPU load over that interval may be calculated.\r\n+     * Hardware interrupts (IRQ) (5), Software interrupts/DPC (SoftIRQ) (6), or\r\n+     * Steal (7) states. Use {@link TickType#getIndex()} to retrieve the\r\n+     * appropriate index. By measuring the difference between ticks across a\r\n+     * time interval, CPU load over that interval may be calculated.\r\n      *\r\n      * Nice and IOwait per processor information is not available on Windows,\r\n      * and IOwait and IRQ information is not available on macOS, so these ticks\r\n      * will always be zero.\r\n      *\r\n      * To calculate overall Idle time using this method, include both Idle and\r\n-     * IOWait ticks. Similarly, IRQ, SoftIRQ and Steal ticks should be added to the\r\n-     * System value to get the total. System ticks also include time executing\r\n-     * other virtual hosts (steal).\r\n+     * IOWait ticks. Similarly, IRQ, SoftIRQ and Steal ticks should be added to\r\n+     * the System value to get the total. System ticks also include time\r\n+     * executing other virtual hosts (steal).\r\n      *\r\n      * @return A 2D array of logicalProcessorCount x 7 long values representing\r\n-     *         time spent in User, Nice, System, Idle, IOwait, IRQ, SoftIRQ, and Steal\r\n-     *         states.\r\n+     *         time spent in User, Nice, System, Idle, IOwait, IRQ, SoftIRQ, and\r\n+     *         Steal states.\r\n      */\r\n     long[][] getProcessorCpuLoadTicks();\r\n \r\n@@ -390,13 +390,15 @@ public interface CentralProcessor extends Serializable {\n     int getPhysicalProcessorCount();\r\n \r\n     /**\r\n-     *  Get the number of context switches happened\r\n+     * Get the number of context switches which have occurred\r\n+     * \r\n      * @return The number of context switches\r\n      */\r\n     long getContextSwitches();\r\n \r\n     /**\r\n-     * Get the number of interrupts happened\r\n+     * Get the number of interrupts which have occurred\r\n+     * \r\n      * @return The number of interrupts\r\n      */\r\n     long getInterrupts();\r\ndiff --git a/oshi-core/src/main/java/oshi/hardware/platform/mac/MacCentralProcessor.java b/oshi-core/src/main/java/oshi/hardware/platform/mac/MacCentralProcessor.java\nindex 2a9710bbb5..cfa0703ffd 100644\n--- a/oshi-core/src/main/java/oshi/hardware/platform/mac/MacCentralProcessor.java\n+++ b/oshi-core/src/main/java/oshi/hardware/platform/mac/MacCentralProcessor.java\n@@ -28,6 +28,7 @@ import com.sun.jna.ptr.PointerByReference;\n \r\n import oshi.hardware.common.AbstractCentralProcessor;\r\n import oshi.jna.platform.mac.SystemB;\r\n+import oshi.jna.platform.mac.SystemB.VMMeter;\r\n import oshi.jna.platform.unix.CLibrary.Timeval;\r\n import oshi.util.ExecutingCommand;\r\n import oshi.util.FormatUtil;\r\n@@ -194,7 +195,14 @@ public class MacCentralProcessor extends AbstractCentralProcessor {\n      */\r\n     @Override\r\n     public long getContextSwitches() {\r\n-        return -1;\r\n+        int machPort = SystemB.INSTANCE.mach_host_self();\r\n+        VMMeter vmstats = new VMMeter();\r\n+        if (0 != SystemB.INSTANCE.host_statistics(machPort, SystemB.HOST_VM_INFO, vmstats,\r\n+                new IntByReference(vmstats.size()))) {\r\n+            LOG.error(\"Failed to update vmstats. Error code: \" + Native.getLastError());\r\n+            return -1;\r\n+        }\r\n+        return ParseUtil.unsignedIntToLong(vmstats.v_swtch);\r\n     }\r\n \r\n     /**\r\n@@ -202,6 +210,13 @@ public class MacCentralProcessor extends AbstractCentralProcessor {\n      */\r\n     @Override\r\n     public long getInterrupts() {\r\n-        return -1;\r\n+        int machPort = SystemB.INSTANCE.mach_host_self();\r\n+        VMMeter vmstats = new VMMeter();\r\n+        if (0 != SystemB.INSTANCE.host_statistics(machPort, SystemB.HOST_VM_INFO, vmstats,\r\n+                new IntByReference(vmstats.size()))) {\r\n+            LOG.error(\"Failed to update vmstats. Error code: \" + Native.getLastError());\r\n+            return -1;\r\n+        }\r\n+        return ParseUtil.unsignedIntToLong(vmstats.v_intr);\r\n     }\r\n }\r\ndiff --git a/oshi-core/src/main/java/oshi/hardware/platform/unix/freebsd/FreeBsdCentralProcessor.java b/oshi-core/src/main/java/oshi/hardware/platform/unix/freebsd/FreeBsdCentralProcessor.java\nindex 33cfe01256..4c5346f389 100644\n--- a/oshi-core/src/main/java/oshi/hardware/platform/unix/freebsd/FreeBsdCentralProcessor.java\n+++ b/oshi-core/src/main/java/oshi/hardware/platform/unix/freebsd/FreeBsdCentralProcessor.java\n@@ -264,7 +264,13 @@ public class FreeBsdCentralProcessor extends AbstractCentralProcessor {\n      */\r\n     @Override\r\n     public long getContextSwitches() {\r\n-        return -1;\r\n+        String name = \"vm.stats.sys.v_swtch\";\r\n+        IntByReference size = new IntByReference(Libc.INT_SIZE);\r\n+        Pointer p = new Memory(size.getValue());\r\n+        if (0 != Libc.INSTANCE.sysctlbyname(name, p, size, null, 0)) {\r\n+            return -1;\r\n+        }\r\n+        return ParseUtil.unsignedIntToLong(p.getInt(0));\r\n     }\r\n \r\n     /**\r\n@@ -272,6 +278,12 @@ public class FreeBsdCentralProcessor extends AbstractCentralProcessor {\n      */\r\n     @Override\r\n     public long getInterrupts() {\r\n-        return -1;\r\n+        String name = \"vm.stats.sys.v_intr\";\r\n+        IntByReference size = new IntByReference(Libc.INT_SIZE);\r\n+        Pointer p = new Memory(size.getValue());\r\n+        if (0 != Libc.INSTANCE.sysctlbyname(name, p, size, null, 0)) {\r\n+            return -1;\r\n+        }\r\n+        return ParseUtil.unsignedIntToLong(p.getInt(0));\r\n     }\r\n }\r\ndiff --git a/oshi-core/src/main/java/oshi/hardware/platform/unix/solaris/SolarisCentralProcessor.java b/oshi-core/src/main/java/oshi/hardware/platform/unix/solaris/SolarisCentralProcessor.java\nindex 20ea2923b1..702e1ae622 100644\n--- a/oshi-core/src/main/java/oshi/hardware/platform/unix/solaris/SolarisCentralProcessor.java\n+++ b/oshi-core/src/main/java/oshi/hardware/platform/unix/solaris/SolarisCentralProcessor.java\n@@ -206,7 +206,12 @@ public class SolarisCentralProcessor extends AbstractCentralProcessor {\n      */\r\n     @Override\r\n     public long getContextSwitches() {\r\n-        return -1;\r\n+        long swtch = 0;\r\n+        List<String> kstat = ExecutingCommand.runNative(\"kstat -p cpu_stat:::/pswitch\\\\\\\\|inv_swtch/\");\r\n+        for (String s : kstat) {\r\n+            swtch += ParseUtil.parseLastLong(s, 0L);\r\n+        }\r\n+        return swtch > 0 ? swtch : -1L;\r\n     }\r\n \r\n     /**\r\n@@ -214,6 +219,11 @@ public class SolarisCentralProcessor extends AbstractCentralProcessor {\n      */\r\n     @Override\r\n     public long getInterrupts() {\r\n-        return -1;\r\n+        long intr = 0;\r\n+        List<String> kstat = ExecutingCommand.runNative(\"kstat -p cpu_stat:::/intr/\");\r\n+        for (String s : kstat) {\r\n+            intr += ParseUtil.parseLastLong(s, 0L);\r\n+        }\r\n+        return intr > 0 ? intr : -1L;\r\n     }\r\n }\r\ndiff --git a/oshi-core/src/main/java/oshi/jna/platform/mac/SystemB.java b/oshi-core/src/main/java/oshi/jna/platform/mac/SystemB.java\nindex f0facbe1a2..10e748bc7c 100644\n--- a/oshi-core/src/main/java/oshi/jna/platform/mac/SystemB.java\n+++ b/oshi-core/src/main/java/oshi/jna/platform/mac/SystemB.java\n@@ -135,6 +135,65 @@ public interface SystemB extends CLibrary, com.sun.jna.platform.mac.SystemB {\n         }\n     }\n \n+    class VMMeter extends Structure {\n+        /*\n+         * General system activity.\n+         */\n+        public int v_swtch; /* context switches */\n+        public int v_trap; /* calls to trap */\n+        public int v_syscall; /* calls to syscall() */\n+        public int v_intr; /* device interrupts */\n+        public int v_soft; /* software interrupts */\n+        public int v_faults; /* total faults taken */\n+        /*\n+         * Virtual memory activity.\n+         */\n+        public int v_lookups; /* object cache lookups */\n+        public int v_hits; /* object cache hits */\n+        public int v_vm_faults; /* number of address memory faults */\n+        public int v_cow_faults; /* number of copy-on-writes */\n+        public int v_swpin; /* swapins */\n+        public int v_swpout; /* swapouts */\n+        public int v_pswpin; /* pages swapped in */\n+        public int v_pswpout; /* pages swapped out */\n+        public int v_pageins; /* number of pageins */\n+        public int v_pageouts; /* number of pageouts */\n+        public int v_pgpgin; /* pages paged in */\n+        public int v_pgpgout; /* pages paged out */\n+        public int v_intrans; /* intransit blocking page faults */\n+        public int v_reactivated; /*\n+                                   * number of pages reactivated from free list\n+                                   */\n+        public int v_rev; /* revolutions of the hand */\n+        public int v_scan; /* scans in page out daemon */\n+        public int v_dfree; /* pages freed by daemon */\n+        public int v_pfree; /* pages freed by exiting processes */\n+        public int v_zfod; /* pages zero filled on demand */\n+        public int v_nzfod; /* number of zfod's created */\n+        /*\n+         * Distribution of page usages.\n+         */\n+        public int v_page_size; /* page size in bytes */\n+        public int v_kernel_pages; /* number of pages in use by kernel */\n+        public int v_free_target; /* number of pages desired free */\n+        public int v_free_min; /* minimum number of pages desired free */\n+        public int v_free_count; /* number of pages free */\n+        public int v_wire_count; /* number of pages wired down */\n+        public int v_active_count; /* number of pages active */\n+        public int v_inactive_target; /* number of pages desired inactive */\n+        public int v_inactive_count; /* number of pages inactive */\n+\n+        @Override\n+        protected List<String> getFieldOrder() {\n+            return Arrays.asList(new String[] { \"v_swtch\", \"v_trap\", \"v_syscall\", \"v_intr\", \"v_soft\", \"v_faults\",\n+                    \"v_lookups\", \"v_hits\", \"v_vm_faults\", \"v_cow_faults\", \"v_swpin\", \"v_swpout\", \"v_pswpin\",\n+                    \"v_pswpout\", \"v_pageins\", \"v_pageouts\", \"v_pgpgin\", \"v_pgpgout\", \"v_intrans\", \"v_reactivated\",\n+                    \"v_rev\", \"v_scan\", \"v_dfree\", \"v_pfree\", \"v_zfod\", \"v_nzfod\", \"v_page_size\", \"v_kernel_pages\",\n+                    \"v_free_target\", \"v_free_min\", \"v_free_count\", \"v_wire_count\", \"v_active_count\",\n+                    \"v_inactive_target\", \"v_inactive_count\" });\n+        }\n+    }\n+\n     class RUsageInfoV2 extends Structure {\n         public byte[] ri_uuid = new byte[16];\n         public long ri_user_time;\ndiff --git a/oshi-core/src/main/java/oshi/util/ParseUtil.java b/oshi-core/src/main/java/oshi/util/ParseUtil.java\nindex 01eceff145..4a5db9abaa 100644\n--- a/oshi-core/src/main/java/oshi/util/ParseUtil.java\n+++ b/oshi-core/src/main/java/oshi/util/ParseUtil.java\n@@ -139,6 +139,24 @@ public class ParseUtil {\n         }\r\n     }\r\n \r\n+    /**\r\n+     * Parse the last element of a space-delimited string to a value\r\n+     *\r\n+     * @param s\r\n+     *            The string to parse\r\n+     * @param li\r\n+     *            Default long integer if not parsable\r\n+     * @return value or the given default if not parsable\r\n+     */\r\n+    public static long parseLastLong(String s, long li) {\r\n+        try {\r\n+            return Long.parseLong(parseLastString(s));\r\n+        } catch (NumberFormatException e) {\r\n+            LOG.trace(DEFAULT_LOG_MSG, s, e);\r\n+            return li;\r\n+        }\r\n+    }\r\n+\r\n     /**\r\n      * Parse the last element of a space-delimited string to a string\r\n      *\r\n@@ -548,5 +566,4 @@ public class ParseUtil {\n         buffer.append(original.substring(currIndex));\r\n         return buffer.toString();\r\n     }\r\n-\r\n }\r\ndiff --git a/oshi-core/src/test/java/oshi/hardware/CentralProcessorTest.java b/oshi-core/src/test/java/oshi/hardware/CentralProcessorTest.java\nindex ff27124ad7..bfcad08517 100644\n--- a/oshi-core/src/test/java/oshi/hardware/CentralProcessorTest.java\n+++ b/oshi-core/src/test/java/oshi/hardware/CentralProcessorTest.java\n@@ -100,10 +100,7 @@ public class CentralProcessorTest {\n         assertNotNull(p.getSystemSerialNumber());\r\n         assertTrue(p.getLogicalProcessorCount() >= p.getPhysicalProcessorCount());\r\n         assertTrue(p.getPhysicalProcessorCount() > 0);\r\n-\r\n-        if (Platform.isLinux() || Platform.isWindows()) {\r\n-            assertTrue(p.getContextSwitches() >= 0);\r\n-            assertTrue(p.getInterrupts() >= 0);\r\n-        }\r\n+        assertTrue(p.getContextSwitches() >= 0);\r\n+        assertTrue(p.getInterrupts() >= 0);\r\n     }\r\n }\r\ndiff --git a/oshi-core/src/test/java/oshi/util/ParseUtilTest.java b/oshi-core/src/test/java/oshi/util/ParseUtilTest.java\nindex 944944d39a..2d5539a6f2 100644\n--- a/oshi-core/src/test/java/oshi/util/ParseUtilTest.java\n+++ b/oshi-core/src/test/java/oshi/util/ParseUtilTest.java\n@@ -55,6 +55,12 @@ public class ParseUtilTest {\n         assertEquals(-1, ParseUtil.parseLastInt(\"foo : bar\", -1));\r\n         assertEquals(1, ParseUtil.parseLastInt(\"foo : 1\", 0));\r\n         assertEquals(2, ParseUtil.parseLastInt(\"foo\", 2));\r\n+        assertEquals(3, ParseUtil.parseLastInt(\"max_int plus one is 2147483648\", 3));\r\n+\r\n+        assertEquals(-1L, ParseUtil.parseLastLong(\"foo : bar\", -1L));\r\n+        assertEquals(1L, ParseUtil.parseLastLong(\"foo : 1\", 0L));\r\n+        assertEquals(2L, ParseUtil.parseLastLong(\"foo\", 2L));\r\n+        assertEquals(2147483648L, ParseUtil.parseLastLong(\"max_int plus one is 2147483648\", 3L));\r\n     }\r\n \r\n     /**\r\ndiff --git a/oshi-json/src/main/java/oshi/json/hardware/CentralProcessor.java b/oshi-json/src/main/java/oshi/json/hardware/CentralProcessor.java\nindex 14c2980515..f58dea1aa1 100644\n--- a/oshi-json/src/main/java/oshi/json/hardware/CentralProcessor.java\n+++ b/oshi-json/src/main/java/oshi/json/hardware/CentralProcessor.java\n@@ -259,10 +259,9 @@ public interface CentralProcessor extends OshiJsonObject {\n      * than 1 second. If less than one second has elapsed since the last call of\r\n      * this method, it will return a calculation based on the tick counts and\r\n      * times of the previous two calls. If at least a second has elapsed, it\r\n-     * will return the average CPU load for the interval and update the\r\n-     * \"last called\" times. This method is intended to be used for periodic\r\n-     * polling (iterating over all processors) at intervals of 1 second or\r\n-     * longer.\r\n+     * will return the average CPU load for the interval and update the \"last\r\n+     * called\" times. This method is intended to be used for periodic polling\r\n+     * (iterating over all processors) at intervals of 1 second or longer.\r\n      *\r\n      * @return array of CPU load between 0 and 1 (100%) for each logical\r\n      *         processor\r\n@@ -337,13 +336,15 @@ public interface CentralProcessor extends OshiJsonObject {\n     int getPhysicalProcessorCount();\r\n \r\n     /**\r\n-     *  Get the number of context switches happened\r\n+     * Get the number of context switches which have occurred\r\n+     * \r\n      * @return The number of context switches\r\n      */\r\n     long getContextSwitches();\r\n \r\n     /**\r\n-     * Get the number of interrupts happened\r\n+     * Get the number of interrupts which have occurred\r\n+     * \r\n      * @return The number of interrupts\r\n      */\r\n     long getInterrupts();\r\ndiff --git a/oshi-json/src/test/java/oshi/json/hardware/CentralProcessorTest.java b/oshi-json/src/test/java/oshi/json/hardware/CentralProcessorTest.java\nindex 38d6c2667b..655553559e 100644\n--- a/oshi-json/src/test/java/oshi/json/hardware/CentralProcessorTest.java\n+++ b/oshi-json/src/test/java/oshi/json/hardware/CentralProcessorTest.java\n@@ -100,10 +100,7 @@ public class CentralProcessorTest {\n         assertNotNull(p.getSystemSerialNumber());\r\n         assertTrue(p.getLogicalProcessorCount() >= p.getPhysicalProcessorCount());\r\n         assertTrue(p.getPhysicalProcessorCount() > 0);\r\n-\r\n-        if (Platform.isLinux() || Platform.isWindows()) {\r\n-            assertTrue(p.getContextSwitches() >= 0);\r\n-            assertTrue(p.getInterrupts() >= 0);\r\n-        }\r\n+        assertTrue(p.getContextSwitches() >= 0);\r\n+        assertTrue(p.getInterrupts() >= 0);\r\n     }\r\n }\r\ndiff --git a/oshi-json/src/test/resources/oshi.json.properties b/oshi-json/src/test/resources/oshi.json.properties\nindex 3d9d673c0c..634ee24b06 100644\n--- a/oshi-json/src/test/resources/oshi.json.properties\n+++ b/oshi-json/src/test/resources/oshi.json.properties\n@@ -141,6 +141,8 @@\n #    hardware.processor.processorCpuLoadBetweenTicks     = false\n #    hardware.processor.processorCpuLoadTicks            = false\n #    hardware.processor.systemUptime                     = false\n+#    hardware.processor.contextSwitches                  = false\n+#    hardware.processor.interrupts                       = false\n #  hardware.memory                                       = false\n #    hardware.memory.available                           = false\n #    hardware.memory.total                               = false",
    "Adds progress reporting for transforms ( <issue_id> ) ( <issue_id> ) .": "diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformProgress.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformProgress.java\nnew file mode 100644\nindex 00000000000..a4177a33487\n--- /dev/null\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformProgress.java\n@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.dataframe.transforms;\n+\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+\n+import java.util.Objects;\n+\n+import static org.elasticsearch.common.xcontent.ConstructingObjectParser.constructorArg;\n+import static org.elasticsearch.common.xcontent.ConstructingObjectParser.optionalConstructorArg;\n+\n+public class DataFrameTransformProgress {\n+\n+    public static final ParseField TOTAL_DOCS = new ParseField(\"total_docs\");\n+    public static final ParseField DOCS_REMAINING = new ParseField(\"docs_remaining\");\n+    public static final ParseField PERCENT_COMPLETE = new ParseField(\"percent_complete\");\n+\n+    public static final ConstructingObjectParser<DataFrameTransformProgress, Void> PARSER = new ConstructingObjectParser<>(\n+        \"data_frame_transform_progress\",\n+        true,\n+        a -> new DataFrameTransformProgress((Long) a[0], (Long)a[1], (Double)a[2]));\n+\n+    static {\n+        PARSER.declareLong(constructorArg(), TOTAL_DOCS);\n+        PARSER.declareLong(optionalConstructorArg(), DOCS_REMAINING);\n+        PARSER.declareDouble(optionalConstructorArg(), PERCENT_COMPLETE);\n+    }\n+\n+    public static DataFrameTransformProgress fromXContent(XContentParser parser) {\n+        return PARSER.apply(parser, null);\n+    }\n+\n+    private final long totalDocs;\n+    private final long remainingDocs;\n+    private final double percentComplete;\n+\n+    public DataFrameTransformProgress(long totalDocs, Long remainingDocs, double percentComplete) {\n+        this.totalDocs = totalDocs;\n+        this.remainingDocs = remainingDocs == null ? totalDocs : remainingDocs;\n+        this.percentComplete = percentComplete;\n+    }\n+\n+    public double getPercentComplete() {\n+        return percentComplete;\n+    }\n+\n+    public long getTotalDocs() {\n+        return totalDocs;\n+    }\n+\n+    public long getRemainingDocs() {\n+        return remainingDocs;\n+    }\n+\n+    @Override\n+    public boolean equals(Object other) {\n+        if (other == this) {\n+            return true;\n+        }\n+\n+        if (other == null || other.getClass() != getClass()) {\n+            return false;\n+        }\n+\n+        DataFrameTransformProgress that = (DataFrameTransformProgress) other;\n+        return Objects.equals(this.remainingDocs, that.remainingDocs)\n+            && Objects.equals(this.totalDocs, that.totalDocs)\n+            && Objects.equals(this.percentComplete, that.percentComplete);\n+    }\n+\n+    @Override\n+    public int hashCode(){\n+        return Objects.hash(remainingDocs, totalDocs, percentComplete);\n+    }\n+}\ndiff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformState.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformState.java\nindex 6bbc7a00b1b..352cbfb67fc 100644\n--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformState.java\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformState.java\n@@ -23,16 +23,14 @@ import org.elasticsearch.client.core.IndexerState;\n import org.elasticsearch.common.Nullable;\n import org.elasticsearch.common.ParseField;\n import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n-import org.elasticsearch.common.xcontent.ObjectParser;\n+import org.elasticsearch.common.xcontent.ObjectParser.ValueType;\n import org.elasticsearch.common.xcontent.XContentParser;\n \n import java.io.IOException;\n import java.util.Collections;\n-import java.util.HashMap;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Objects;\n-import java.util.SortedMap;\n-import java.util.TreeMap;\n \n import static org.elasticsearch.common.xcontent.ConstructingObjectParser.constructorArg;\n import static org.elasticsearch.common.xcontent.ConstructingObjectParser.optionalConstructorArg;\n@@ -44,33 +42,25 @@ public class DataFrameTransformState {\n     private static final ParseField CURRENT_POSITION = new ParseField(\"current_position\");\n     private static final ParseField CHECKPOINT = new ParseField(\"checkpoint\");\n     private static final ParseField REASON = new ParseField(\"reason\");\n+    private static final ParseField PROGRESS = new ParseField(\"progress\");\n \n     @SuppressWarnings(\"unchecked\")\n     public static final ConstructingObjectParser<DataFrameTransformState, Void> PARSER =\n             new ConstructingObjectParser<>(\"data_frame_transform_state\", true,\n                     args -> new DataFrameTransformState((DataFrameTransformTaskState) args[0],\n                         (IndexerState) args[1],\n-                        (HashMap<String, Object>) args[2],\n+                        (Map<String, Object>) args[2],\n                         (long) args[3],\n-                        (String) args[4]));\n+                        (String) args[4],\n+                        (DataFrameTransformProgress) args[5]));\n \n     static {\n-        PARSER.declareField(constructorArg(),\n-            p -> DataFrameTransformTaskState.fromString(p.text()),\n-            TASK_STATE,\n-            ObjectParser.ValueType.STRING);\n-        PARSER.declareField(constructorArg(), p -> IndexerState.fromString(p.text()), INDEXER_STATE, ObjectParser.ValueType.STRING);\n-        PARSER.declareField(optionalConstructorArg(), p -> {\n-            if (p.currentToken() == XContentParser.Token.START_OBJECT) {\n-                return p.map();\n-            }\n-            if (p.currentToken() == XContentParser.Token.VALUE_NULL) {\n-                return null;\n-            }\n-            throw new IllegalArgumentException(\"Unsupported token [\" + p.currentToken() + \"]\");\n-        }, CURRENT_POSITION, ObjectParser.ValueType.VALUE_OBJECT_ARRAY);\n+        PARSER.declareField(constructorArg(), p -> DataFrameTransformTaskState.fromString(p.text()), TASK_STATE, ValueType.STRING);\n+        PARSER.declareField(constructorArg(), p -> IndexerState.fromString(p.text()), INDEXER_STATE, ValueType.STRING);\n+        PARSER.declareField(optionalConstructorArg(), (p, c) -> p.mapOrdered(), CURRENT_POSITION, ValueType.OBJECT);\n         PARSER.declareLong(ConstructingObjectParser.optionalConstructorArg(), CHECKPOINT);\n         PARSER.declareString(ConstructingObjectParser.optionalConstructorArg(), REASON);\n+        PARSER.declareField(optionalConstructorArg(), DataFrameTransformProgress::fromXContent, PROGRESS, ValueType.OBJECT);\n     }\n \n     public static DataFrameTransformState fromXContent(XContentParser parser) throws IOException {\n@@ -80,19 +70,22 @@ public class DataFrameTransformState {\n     private final DataFrameTransformTaskState taskState;\n     private final IndexerState indexerState;\n     private final long checkpoint;\n-    private final SortedMap<String, Object> currentPosition;\n+    private final Map<String, Object> currentPosition;\n     private final String reason;\n+    private final DataFrameTransformProgress progress;\n \n     public DataFrameTransformState(DataFrameTransformTaskState taskState,\n                                    IndexerState indexerState,\n                                    @Nullable Map<String, Object> position,\n                                    long checkpoint,\n-                                   @Nullable String reason) {\n+                                   @Nullable String reason,\n+                                   @Nullable DataFrameTransformProgress progress) {\n         this.taskState = taskState;\n         this.indexerState = indexerState;\n-        this.currentPosition = position == null ? null : Collections.unmodifiableSortedMap(new TreeMap<>(position));\n+        this.currentPosition = position == null ? null : Collections.unmodifiableMap(new LinkedHashMap<>(position));\n         this.checkpoint = checkpoint;\n         this.reason = reason;\n+        this.progress = progress;\n     }\n \n     public IndexerState getIndexerState() {\n@@ -117,6 +110,11 @@ public class DataFrameTransformState {\n         return reason;\n     }\n \n+    @Nullable\n+    public DataFrameTransformProgress getProgress() {\n+        return progress;\n+    }\n+\n     @Override\n     public boolean equals(Object other) {\n         if (this == other) {\n@@ -132,13 +130,14 @@ public class DataFrameTransformState {\n         return Objects.equals(this.taskState, that.taskState) &&\n             Objects.equals(this.indexerState, that.indexerState) &&\n             Objects.equals(this.currentPosition, that.currentPosition) &&\n+            Objects.equals(this.progress, that.progress) &&\n             this.checkpoint == that.checkpoint &&\n             Objects.equals(this.reason, that.reason);\n     }\n \n     @Override\n     public int hashCode() {\n-        return Objects.hash(taskState, indexerState, currentPosition, checkpoint, reason);\n+        return Objects.hash(taskState, indexerState, currentPosition, checkpoint, reason, progress);\n     }\n \n }\ndiff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformStateAndStats.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformStateAndStats.java\nindex 938563796ca..9914a0e6331 100644\n--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformStateAndStats.java\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformStateAndStats.java\n@@ -57,7 +57,7 @@ public class DataFrameTransformStateAndStats {\n     private final DataFrameTransformCheckpointingInfo checkpointingInfo;\n \n     public DataFrameTransformStateAndStats(String id, DataFrameTransformState state, DataFrameIndexerTransformStats stats,\n-            DataFrameTransformCheckpointingInfo checkpointingInfo) {\n+                                           DataFrameTransformCheckpointingInfo checkpointingInfo) {\n         this.id = id;\n         this.transformState = state;\n         this.transformStats = stats;\ndiff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/DataFrameTransformIT.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/DataFrameTransformIT.java\nindex 3e564a86207..3d7f5e3dbcb 100644\n--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/DataFrameTransformIT.java\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/DataFrameTransformIT.java\n@@ -71,6 +71,7 @@ import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;\n import static org.hamcrest.Matchers.containsString;\n import static org.hamcrest.Matchers.empty;\n import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.greaterThan;\n import static org.hamcrest.Matchers.hasSize;\n import static org.hamcrest.Matchers.is;\n \n@@ -360,6 +361,10 @@ public class DataFrameTransformIT extends ESRestHighLevelClientTestCase {\n             assertEquals(DataFrameTransformTaskState.STARTED, stateAndStats.getTransformState().getTaskState());\n             assertEquals(null, stateAndStats.getTransformState().getReason());\n             assertNotEquals(zeroIndexerStats, stateAndStats.getTransformStats());\n+            assertNotNull(stateAndStats.getTransformState().getProgress());\n+            assertThat(stateAndStats.getTransformState().getProgress().getPercentComplete(), equalTo(100.0));\n+            assertThat(stateAndStats.getTransformState().getProgress().getTotalDocs(), greaterThan(0L));\n+            assertThat(stateAndStats.getTransformState().getProgress().getRemainingDocs(), equalTo(0L));\n         });\n     }\n }\ndiff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformProgressTests.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformProgressTests.java\nnew file mode 100644\nindex 00000000000..573e2ffdbb9\n--- /dev/null\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformProgressTests.java\n@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.dataframe.transforms;\n+\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.io.IOException;\n+\n+import static org.elasticsearch.test.AbstractXContentTestCase.xContentTester;\n+\n+public class DataFrameTransformProgressTests extends ESTestCase {\n+\n+    public void testFromXContent() throws IOException {\n+        xContentTester(this::createParser,\n+            DataFrameTransformProgressTests::randomInstance,\n+            DataFrameTransformProgressTests::toXContent,\n+            DataFrameTransformProgress::fromXContent)\n+           .supportsUnknownFields(true)\n+           .randomFieldsExcludeFilter(field -> field.startsWith(\"state\"))\n+           .test();\n+    }\n+\n+    public static DataFrameTransformProgress randomInstance() {\n+        long totalDocs = randomNonNegativeLong();\n+        Long docsRemaining = randomBoolean() ? null : randomLongBetween(0, totalDocs);\n+        double percentComplete = totalDocs == 0 ? 1.0 : docsRemaining == null ? 0.0 : 100.0*(double)(totalDocs - docsRemaining)/totalDocs;\n+        return new DataFrameTransformProgress(totalDocs, docsRemaining, percentComplete);\n+    }\n+\n+    public static void toXContent(DataFrameTransformProgress progress, XContentBuilder builder) throws IOException {\n+        builder.startObject();\n+        builder.field(DataFrameTransformProgress.TOTAL_DOCS.getPreferredName(), progress.getTotalDocs());\n+        builder.field(DataFrameTransformProgress.DOCS_REMAINING.getPreferredName(), progress.getRemainingDocs());\n+        builder.field(DataFrameTransformProgress.PERCENT_COMPLETE.getPreferredName(), progress.getPercentComplete());\n+        builder.endObject();\n+    }\n+}\ndiff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformStateAndStatsTests.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformStateAndStatsTests.java\nindex 88628699104..6ebdec5a690 100644\n--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformStateAndStatsTests.java\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformStateAndStatsTests.java\n@@ -40,9 +40,9 @@ public class DataFrameTransformStateAndStatsTests extends ESTestCase {\n \n     public static DataFrameTransformStateAndStats randomInstance() {\n         return new DataFrameTransformStateAndStats(randomAlphaOfLength(10),\n-                DataFrameTransformStateTests.randomDataFrameTransformState(),\n-                DataFrameIndexerTransformStatsTests.randomStats(),\n-                DataFrameTransformCheckpointingInfoTests.randomDataFrameTransformCheckpointingInfo());\n+            DataFrameTransformStateTests.randomDataFrameTransformState(),\n+            DataFrameIndexerTransformStatsTests.randomStats(),\n+            DataFrameTransformCheckpointingInfoTests.randomDataFrameTransformCheckpointingInfo());\n     }\n \n     public static void toXContent(DataFrameTransformStateAndStats stateAndStats, XContentBuilder builder) throws IOException {\ndiff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformStateTests.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformStateTests.java\nindex 7d1d713a127..4ada50c20d2 100644\n--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformStateTests.java\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/DataFrameTransformStateTests.java\n@@ -24,7 +24,7 @@ import org.elasticsearch.common.xcontent.XContentBuilder;\n import org.elasticsearch.test.ESTestCase;\n \n import java.io.IOException;\n-import java.util.HashMap;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n \n import static org.elasticsearch.test.AbstractXContentTestCase.xContentTester;\n@@ -46,7 +46,8 @@ public class DataFrameTransformStateTests extends ESTestCase {\n             randomFrom(IndexerState.values()),\n             randomPositionMap(),\n             randomLongBetween(0,10),\n-            randomBoolean() ? null : randomAlphaOfLength(10));\n+            randomBoolean() ? null : randomAlphaOfLength(10),\n+            randomBoolean() ? null : DataFrameTransformProgressTests.randomInstance());\n     }\n \n     public static void toXContent(DataFrameTransformState state, XContentBuilder builder) throws IOException {\n@@ -60,6 +61,10 @@ public class DataFrameTransformStateTests extends ESTestCase {\n         if (state.getReason() != null) {\n             builder.field(\"reason\", state.getReason());\n         }\n+        if (state.getProgress() != null) {\n+            builder.field(\"progress\");\n+            DataFrameTransformProgressTests.toXContent(state.getProgress(), builder);\n+        }\n         builder.endObject();\n     }\n \n@@ -68,7 +73,7 @@ public class DataFrameTransformStateTests extends ESTestCase {\n             return null;\n         }\n         int numFields = randomIntBetween(1, 5);\n-        Map<String, Object> position = new HashMap<>();\n+        Map<String, Object> position = new LinkedHashMap<>();\n         for (int i = 0; i < numFields; i++) {\n             Object value;\n             if (randomBoolean()) {\ndiff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/hlrc/DataFrameTransformProgressTests.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/hlrc/DataFrameTransformProgressTests.java\nnew file mode 100644\nindex 00000000000..be589a63248\n--- /dev/null\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/hlrc/DataFrameTransformProgressTests.java\n@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.client.dataframe.transforms.hlrc;\n+\n+import org.elasticsearch.client.AbstractResponseTestCase;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.xpack.core.dataframe.transforms.DataFrameTransformProgress;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+\n+public class DataFrameTransformProgressTests extends AbstractResponseTestCase<\n+        DataFrameTransformProgress,\n+        org.elasticsearch.client.dataframe.transforms.DataFrameTransformProgress> {\n+\n+    public static DataFrameTransformProgress fromHlrc(\n+            org.elasticsearch.client.dataframe.transforms.DataFrameTransformProgress instance) {\n+        if (instance == null) {\n+            return null;\n+        }\n+        return new DataFrameTransformProgress(instance.getTotalDocs(), instance.getRemainingDocs());\n+    }\n+\n+    @Override\n+    protected DataFrameTransformProgress createServerTestInstance() {\n+        return DataFrameTransformStateTests.randomDataFrameTransformProgress();\n+    }\n+\n+    @Override\n+    protected org.elasticsearch.client.dataframe.transforms.DataFrameTransformProgress doParseToClientInstance(XContentParser parser) {\n+        return org.elasticsearch.client.dataframe.transforms.DataFrameTransformProgress.fromXContent(parser);\n+    }\n+\n+    @Override\n+    protected void assertInstances(DataFrameTransformProgress serverTestInstance,\n+                                   org.elasticsearch.client.dataframe.transforms.DataFrameTransformProgress clientInstance) {\n+        assertThat(serverTestInstance.getTotalDocs(), equalTo(clientInstance.getTotalDocs()));\n+        assertThat(serverTestInstance.getRemainingDocs(), equalTo(clientInstance.getRemainingDocs()));\n+        assertThat(serverTestInstance.getPercentComplete(), equalTo(clientInstance.getPercentComplete()));\n+    }\n+}\ndiff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/hlrc/DataFrameTransformStateTests.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/hlrc/DataFrameTransformStateTests.java\nindex 457c68d593e..4c80365bc53 100644\n--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/hlrc/DataFrameTransformStateTests.java\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/dataframe/transforms/hlrc/DataFrameTransformStateTests.java\n@@ -24,6 +24,7 @@ import org.elasticsearch.client.AbstractHlrcXContentTestCase;\n import org.elasticsearch.xpack.core.dataframe.transforms.DataFrameIndexerTransformStats;\n import org.elasticsearch.xpack.core.dataframe.transforms.DataFrameTransformCheckpointStats;\n import org.elasticsearch.xpack.core.dataframe.transforms.DataFrameTransformCheckpointingInfo;\n+import org.elasticsearch.xpack.core.dataframe.transforms.DataFrameTransformProgress;\n import org.elasticsearch.xpack.core.dataframe.transforms.DataFrameTransformState;\n import org.elasticsearch.xpack.core.dataframe.transforms.DataFrameTransformStateAndStats;\n import org.elasticsearch.xpack.core.dataframe.transforms.DataFrameTransformTaskState;\n@@ -40,7 +41,7 @@ public class DataFrameTransformStateTests extends AbstractHlrcXContentTestCase<D\n     public static DataFrameTransformState fromHlrc(org.elasticsearch.client.dataframe.transforms.DataFrameTransformState instance) {\n         return new DataFrameTransformState(DataFrameTransformTaskState.fromString(instance.getTaskState().value()),\n                 IndexerState.fromString(instance.getIndexerState().value()), instance.getPosition(), instance.getCheckpoint(),\n-                instance.getReason());\n+                instance.getReason(), DataFrameTransformProgressTests.fromHlrc(instance.getProgress()));\n     }\n \n     @Override\n@@ -90,6 +91,12 @@ public class DataFrameTransformStateTests extends AbstractHlrcXContentTestCase<D\n         return new DataFrameTransformCheckpointStats(randomNonNegativeLong(), randomNonNegativeLong());\n     }\n \n+    public static DataFrameTransformProgress randomDataFrameTransformProgress() {\n+        long totalDocs = randomNonNegativeLong();\n+        Long remainingDocs = randomBoolean() ? null : randomLongBetween(0, totalDocs);\n+        return new DataFrameTransformProgress(totalDocs, remainingDocs);\n+    }\n+\n     public static DataFrameIndexerTransformStats randomStats(String transformId) {\n         return new DataFrameIndexerTransformStats(transformId, randomLongBetween(10L, 10000L),\n             randomLongBetween(0L, 10000L), randomLongBetween(0L, 10000L), randomLongBetween(0L, 10000L), randomLongBetween(0L, 10000L),\n@@ -102,7 +109,8 @@ public class DataFrameTransformStateTests extends AbstractHlrcXContentTestCase<D\n             randomFrom(IndexerState.values()),\n             randomPosition(),\n             randomLongBetween(0,10),\n-            randomBoolean() ? null : randomAlphaOfLength(10));\n+            randomBoolean() ? null : randomAlphaOfLength(10),\n+            randomBoolean() ? null : randomDataFrameTransformProgress());\n     }\n \n     private static Map<String, Object> randomPosition() {\ndiff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/DataFrameTransformDocumentationIT.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/DataFrameTransformDocumentationIT.java\nindex b7d6967206c..daa9dc06fee 100644\n--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/DataFrameTransformDocumentationIT.java\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/DataFrameTransformDocumentationIT.java\n@@ -40,6 +40,7 @@ import org.elasticsearch.client.dataframe.StopDataFrameTransformRequest;\n import org.elasticsearch.client.dataframe.StopDataFrameTransformResponse;\n import org.elasticsearch.client.dataframe.transforms.DataFrameIndexerTransformStats;\n import org.elasticsearch.client.dataframe.transforms.DataFrameTransformConfig;\n+import org.elasticsearch.client.dataframe.transforms.DataFrameTransformProgress;\n import org.elasticsearch.client.dataframe.transforms.DataFrameTransformStateAndStats;\n import org.elasticsearch.client.dataframe.transforms.DataFrameTransformTaskState;\n import org.elasticsearch.client.dataframe.transforms.DestConfig;\n@@ -465,18 +466,21 @@ public class DataFrameTransformDocumentationIT extends ESRestHighLevelClientTest\n \n             // tag::get-data-frame-transform-stats-response\n             DataFrameTransformStateAndStats stateAndStats =\n-                    response.getTransformsStateAndStats().get(0);   // <1>\n+                response.getTransformsStateAndStats().get(0);   // <1>\n             DataFrameTransformTaskState taskState =\n                 stateAndStats.getTransformState().getTaskState(); // <2>\n             IndexerState indexerState =\n-                    stateAndStats.getTransformState().getIndexerState();  // <3>\n+                stateAndStats.getTransformState().getIndexerState();  // <3>\n             DataFrameIndexerTransformStats transformStats =\n-                    stateAndStats.getTransformStats();              // <4>\n+                stateAndStats.getTransformStats();              // <4>\n+            DataFrameTransformProgress progress =\n+                stateAndStats.getTransformState().getProgress(); // <5>\n             // end::get-data-frame-transform-stats-response\n \n             assertEquals(IndexerState.STOPPED, indexerState);\n             assertEquals(DataFrameTransformTaskState.STOPPED, taskState);\n             assertNotNull(transformStats);\n+            assertNull(progress);\n         }\n         {\n             // tag::get-data-frame-transform-stats-execute-listener\ndiff --git a/docs/java-rest/high-level/dataframe/get_data_frame_stats.asciidoc b/docs/java-rest/high-level/dataframe/get_data_frame_stats.asciidoc\nindex 2b377d22c81..cdc6254a4e4 100644\n--- a/docs/java-rest/high-level/dataframe/get_data_frame_stats.asciidoc\n+++ b/docs/java-rest/high-level/dataframe/get_data_frame_stats.asciidoc\n@@ -37,4 +37,6 @@ include-tagged::{doc-tests-file}[{api}-response]\n <1> The response contains a list of `DataFrameTransformStateAndStats` objects\n <2> The running state of the transform task e.g `started`\n <3> The running state of the transform indexer e.g `started`, `indexing`, etc.\n-<4> The transform progress statistics recording the number of documents indexed etc\n\\ No newline at end of file\n+<4> The overall transform statistics recording the number of documents indexed etc.\n+<5> The progress of the current run in the transform. Supplies the number of docs left until the next checkpoint\n+and the total number of docs expected.\n\\ No newline at end of file\ndiff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/transforms/DataFrameTransformProgress.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/transforms/DataFrameTransformProgress.java\nnew file mode 100644\nindex 00000000000..5b7346bca2a\n--- /dev/null\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/transforms/DataFrameTransformProgress.java\n@@ -0,0 +1,135 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.dataframe.transforms;\n+\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+import static org.elasticsearch.common.xcontent.ConstructingObjectParser.constructorArg;\n+import static org.elasticsearch.common.xcontent.ConstructingObjectParser.optionalConstructorArg;\n+\n+public class DataFrameTransformProgress implements Writeable, ToXContentObject {\n+\n+    private static final ParseField TOTAL_DOCS = new ParseField(\"total_docs\");\n+    private static final ParseField DOCS_REMAINING = new ParseField(\"docs_remaining\");\n+    private static final String PERCENT_COMPLETE = \"percent_complete\";\n+\n+    public static final ConstructingObjectParser<DataFrameTransformProgress, Void> PARSER = new ConstructingObjectParser<>(\n+        \"data_frame_transform_progress\",\n+        true,\n+        a -> new DataFrameTransformProgress((Long) a[0], (Long)a[1]));\n+\n+    static {\n+        PARSER.declareLong(constructorArg(), TOTAL_DOCS);\n+        PARSER.declareLong(optionalConstructorArg(), DOCS_REMAINING);\n+    }\n+\n+    private final long totalDocs;\n+    private long remainingDocs;\n+\n+    public DataFrameTransformProgress(long totalDocs, Long remainingDocs) {\n+        if (totalDocs < 0) {\n+            throw new IllegalArgumentException(\"[total_docs] must be >0.\");\n+        }\n+        this.totalDocs = totalDocs;\n+        if (remainingDocs != null && remainingDocs < 0) {\n+            throw new IllegalArgumentException(\"[docs_remaining] must be >0.\");\n+        }\n+        this.remainingDocs = remainingDocs == null ? totalDocs : remainingDocs;\n+    }\n+\n+  ",
    "Introducing branchless bin .": "diff --git a/jmh/src/main/java/org/roaringbitmap/needwork/RandomAccess.java b/jmh/src/main/java/org/roaringbitmap/needwork/RandomAccess.java\nnew file mode 100644\nindex 00000000..02bf1531\n--- /dev/null\n+++ b/jmh/src/main/java/org/roaringbitmap/needwork/RandomAccess.java\n@@ -0,0 +1,89 @@\n+package org.roaringbitmap.needwork;\n+\n+\n+import java.util.ArrayList;\n+import java.util.Random;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.roaringbitmap.RoaringBitmap;\n+import org.roaringbitmap.ZipRealDataRetriever;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.MICROSECONDS)\n+public class RandomAccess {\n+\n+    @Benchmark\n+    public int RoaringWithRun(BenchmarkState benchmarkState) {\n+        int answer = 0;\n+        for(int k : benchmarkState.queries) {\n+            if(benchmarkState.rc.contains(k))\n+                answer++;\n+        }\n+        return answer;\n+    }\n+\n+    @Benchmark\n+    public int Roaring(BenchmarkState benchmarkState) {\n+        int answer = 0;\n+        for(int k : benchmarkState.queries) {\n+            if(benchmarkState.ac.contains(k))\n+                answer++;\n+        }\n+        return answer;\n+    }\n+    \n+    @State(Scope.Benchmark)\n+    public static class BenchmarkState {\n+        @Param ({// putting the data sets in alpha. order\n+            \"census-income\", \"census1881\",\n+            \"dimension_008\", \"dimension_003\",\n+            \"dimension_033\", \"uscensus2000\",\n+            \"weather_sept_85\", \"wikileaks-noquotes\"\n+            ,\"census-income_srt\",\"census1881_srt\",\n+            \"weather_sept_85_srt\",\"wikileaks-noquotes_srt\"\n+        })\n+        String dataset;\n+        \n+        int[] queries = new int[1024];\n+        \n+\n+        ArrayList<RoaringBitmap> ac = new ArrayList<RoaringBitmap>();\n+\n+        ArrayList<RoaringBitmap> rc = new ArrayList<RoaringBitmap>();\n+\n+        public BenchmarkState() {\n+        }\n+                \n+        @Setup\n+        public void setup() throws Exception {\n+            ZipRealDataRetriever dataRetriever = new ZipRealDataRetriever(dataset);\n+            System.out.println();\n+            System.out.println(\"Loading files from \" + dataRetriever.getName());\n+            int universe = 0;\n+            \n+\n+            for (int[] data : dataRetriever.fetchBitPositions()) {\n+                RoaringBitmap basic = RoaringBitmap.bitmapOf(data);\n+                ac.add(basic.clone());\n+                int lv =  basic.getReverseIntIterator().next();\n+                if(lv > universe) universe = lv;\n+\n+                basic.runOptimize();\n+                rc.add(basic);\n+            }\n+            Random rand = new Random(123);\n+            for(int k = 0; k < queries.length; ++k)\n+                queries[k] = rand.nextInt(universe+1);\n+            System.out.println(\"loaded \"+rc.size()+\" bitmaps\");\n+        }\n+\n+    }\n+}\ndiff --git a/src/main/java/org/roaringbitmap/Util.java b/src/main/java/org/roaringbitmap/Util.java\nindex 5cd6a404..55e7f64b 100644\n--- a/src/main/java/org/roaringbitmap/Util.java\n+++ b/src/main/java/org/roaringbitmap/Util.java\n@@ -183,10 +183,43 @@ public final class Util {\n      * @return count\r\n      */\r\n     public static int unsignedBinarySearch(final short[] array, final int begin,\r\n-                                              final int end, final short k) {\r\n+            final int end,  final short k) {\r\n+        return branchlessUnsignedBinarySearch(array,begin,end, k);\r\n+    }\r\n+\r\n+    protected static int branchlessUnsignedBinarySearch(final short[] array, final int begin,\r\n+            final int end,  final short k) {\r\n         int ikey = toIntUnsigned(k);\r\n         // next line accelerates the possibly common case where the value would be inserted at the end\r\n         if((end>0) && (toIntUnsigned(array[end-1]) < ikey)) return - end - 1;\r\n+        int n = end - begin;\r\n+        if(n == 0) return -1;\r\n+        int pos = 0;\r\n+        while (n > 1) {\r\n+            final int half = n >>> 1;\r\n+            n -= half;\r\n+            final int index = pos + half;\r\n+            final int val = array[index + begin] & 0xFFFF;\r\n+            final int diff = val - ikey;\r\n+            final int mask = diff >> 31;\r\n+            final int addition = half & mask;\r\n+            pos += addition;\r\n+        }\r\n+        // next  line is upper bound\r\n+        if(toIntUnsigned(array[pos + begin]) < ikey) pos = pos + 1;\r\n+        if ((pos +begin < end) && (toIntUnsigned(array[pos + begin]) == ikey)) {\r\n+            return pos + begin;\r\n+        }\r\n+        return -(pos + begin + 1);\r\n+    }\r\n+\r\n+    protected static int branchyUnsignedBinarySearch(final short[] array,\r\n+            final int begin, final int end, final short k) {\r\n+        int ikey = toIntUnsigned(k);\r\n+        // next line accelerates the possibly common case where the value would\r\n+        // be inserted at the end\r\n+        if ((end > 0) && (toIntUnsigned(array[end - 1]) < ikey))\r\n+            return -end - 1;\r\n         int low = begin;\r\n         int high = end - 1;\r\n         while (low <= high) {\r\n@@ -202,7 +235,7 @@ public final class Util {\n         }\r\n         return -(low + 1);\r\n     }\r\n-\r\n+    \r\n     /**\r\n      * Compute the difference between two sorted lists and write the result to the provided\r\n      * output array\r\ndiff --git a/src/main/java/org/roaringbitmap/buffer/BufferUtil.java b/src/main/java/org/roaringbitmap/buffer/BufferUtil.java\nindex 4749650b..d962faff 100644\n--- a/src/main/java/org/roaringbitmap/buffer/BufferUtil.java\n+++ b/src/main/java/org/roaringbitmap/buffer/BufferUtil.java\n@@ -321,8 +321,54 @@ public final class BufferUtil {\n     protected static int toIntUnsigned(short x) {\r\n         return x & 0xFFFF;\r\n     }\r\n+    \r\n+    /**\r\n+     * Look for value k in buffer in the range [begin,end). If the value\r\n+     * is found, return its index. If not, return -(i+1) where i is the\r\n+     * index where the value would be inserted. \r\n+     * The buffer is assumed to contain sorted values where shorts are\r\n+     * interpreted as unsigned integers.\r\n+     * \r\n+     * @param array buffer where we search\r\n+     * @param begin first index (inclusive)\r\n+     * @param end last index (exclusive)\r\n+     * @param k value we search for\r\n+     * @return count\r\n+     */\r\n+    public static int unsignedBinarySearch(final ShortBuffer array, final int begin,\r\n+            final int end,  final short k) {\r\n+        return branchlessUnsignedBinarySearch(array,begin,end, k);\r\n+    }\r\n \r\n-    protected static int unsignedBinarySearch(final ShortBuffer array, final int begin,\r\n+    \r\n+    protected static int branchlessUnsignedBinarySearch(final ShortBuffer array, final int begin,\r\n+            final int end,  final short k) {\r\n+        int ikey = toIntUnsigned(k);\r\n+        // next line accelerates the possibly common case where the value would be inserted at the end\r\n+        if((end>0) && (toIntUnsigned(array.get(end-1)) < ikey)) return - end - 1;\r\n+        int n = end - begin;\r\n+        if(n == 0) return -1;\r\n+        int pos = 0;\r\n+        while (n > 1) {\r\n+            final int half = n >>> 1;\r\n+            n -= half;\r\n+            final int index = pos + half;\r\n+            final int val = array.get(index + begin) & 0xFFFF;\r\n+            final int diff = val - ikey;\r\n+            final int mask = diff >> 31;\r\n+            final int addition = half & mask;\r\n+            pos += addition;\r\n+        }\r\n+   ",
    "update readme": "diff --git a/README.md b/README.md\nindex 388d6da6..5af04420 100644\n--- a/README.md\n+++ b/README.md\n@@ -58,7 +58,11 @@ Regarding to hwo to access the server you just started, please refer to the READ\n Almost every server component has a configuration file in JSON format and a default config file is located in resources/config.\n \n This allows all components can be used out of the box but that might not be ideal for you. If you want to change the config, you\n-can create a folder in file system and use a system properties to point to that folder for your config.\n+can create a folder resources/config in your project and overwrite the default config of each components. One example is the\n+security.json in undertow-server-demo project to turn off the JWT token verification.\n+\n+For offcial deployment, you should copy your config files to a directory in file system and use a system properties to point\n+to that folder for your config.\n \n For example, create a folder in /home/steve/config and put all updated config files there. In order to let your server to lookup\n that folder for config, you need to pass in -Dundertow-server-config-dir=/home/steve/config when you start the server. Another way\n@@ -73,7 +77,37 @@ endpoints without putting token in the request header. In this case, you need to\n Note that you have to restart your terminal if you add JAVA_TOOL_OPTIONS to .bashrc and restart your IDE from the new terminal\n window.\n \n-## \n+## Start Server\n+\n+### In IDE\n+create a Java application that main class is com.networknt.server.Server and working\n+directory is your project root folder. You can debug your server just like a single POJO application.\n+\n+### From Maven\n+\n+mvn exec:exec\n+\n+### Copmmand Line\n+\n+For testing\n+```\n+java -jar target/demo-0.1.0.jar\n+```\n+\n+For production\n+\n+```\n+setsid java -jar demo-0.1.0.jar < /dev/zero & > /dev/null &\n+```\n+\n+## Stop Server\n+\n+you can use Ctrl+C to kill the server but for production use the following command\n \n+```\n+kill -s TERM <pid>\n+```\n \n+The server has a shutdown hook and the above command allow it to clean up. For example,\n+complete in-flight requests and close the database connections etc.\n \ndiff --git a/server/src/main/java/com/networknt/server/Server.java b/server/src/main/java/com/networknt/server/Server.java\nindex 496261c4..3e4baabb 100644\n--- a/server/src/main/java/com/networknt/server/Server.java\n+++ b/server/src/main/java/com/networknt/server/Server.java\n@@ -14,7 +14,6 @@ import io.undertow.Handlers;\n import io.undertow.Undertow;\n import io.undertow.UndertowOptions;\n import io.undertow.server.HttpHandler;\n-import io.undertow.server.handlers.PathTemplateHandler;\n import io.undertow.util.Headers;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -32,7 +31,6 @@ public class Server {\n     static protected boolean shutdownRequested = false;\n     static Undertow server = null;\n     static String configName = \"server\";\n-    public static PathTemplateHandler handler;\n \n     public static void main(final String[] args) {\n         logger.info(\"server starts\");",
    "add javadoc": "diff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/FieldAccessDescriptor.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/FieldAccessDescriptor.java\nindex ec83d92172..f61f49b2cb 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/FieldAccessDescriptor.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/FieldAccessDescriptor.java\n@@ -192,6 +192,7 @@ public abstract class FieldAccessDescriptor implements Serializable {\n     return union(fields);\n   }\n \n+  /** Return a descriptor that accesses the specified fields, renaming those fields. */\n   public static FieldAccessDescriptor withFieldNamesAs(Map<String, String> fieldNamesAs) {\n     List<FieldAccessDescriptor> fields = Lists.newArrayListWithCapacity(fieldNamesAs.size());\n     for (Map.Entry<String, String> entry : fieldNamesAs.entrySet()) {\n@@ -200,15 +201,29 @@ public abstract class FieldAccessDescriptor implements Serializable {\n     return union(fields);\n   }\n \n+  /**\n+   * Return a descriptor that accesses the specified field names as nested subfields of the\n+   * baseDescriptor.\n+   *\n+   * <p>This is only supported when baseDescriptor refers to a single field.\n+   */\n   public static FieldAccessDescriptor withFieldNames(\n       FieldAccessDescriptor baseDescriptor, String... fieldNames) {\n     return withFieldNames(baseDescriptor, Arrays.asList(fieldNames));\n   }\n \n+  /**\n+   * Return a descriptor that accesses the specified field names as nested subfields of the\n+   * baseDescriptor.\n+   *\n+   * <p>This is only supported when baseDescriptor refers to a single field.\n+   */\n   public static FieldAccessDescriptor withFieldNames(\n       FieldAccessDescriptor baseDescriptor, Iterable<String> fieldNames) {\n     if (baseDescriptor.getFieldsAccessed().isEmpty()\n         && baseDescriptor.getNestedFieldsAccessed().isEmpty()) {\n+      // If baseDescriptor is empty, this is no different than calling\n+      // withFieldNames(Iterable<String>);\n       return withFieldNames(fieldNames);\n     }\n     if (!baseDescriptor.getFieldsAccessed().isEmpty()) {\n@@ -226,11 +241,23 @@ public abstract class FieldAccessDescriptor implements Serializable {\n     }\n   }\n \n+  /**\n+   * Return a descriptor that accesses the specified field ids as nested subfields of the\n+   * baseDescriptor.\n+   *\n+   * <p>This is only supported when baseDescriptor refers to a single field.\n+   */\n   public static FieldAccessDescriptor withFieldIds(\n       FieldAccessDescriptor baseDescriptor, Integer... fieldIds) {\n     return withFieldIds(baseDescriptor, Arrays.asList(fieldIds));\n   }\n \n+  /**\n+   * Return a descriptor that accesses the specified field ids as nested subfields of the\n+   * baseDescriptor.\n+   *\n+   * <p>This is only supported when baseDescriptor refers to a single field.\n+   */\n   public static FieldAccessDescriptor withFieldIds(\n       FieldAccessDescriptor baseDescriptor, Iterable<Integer> fieldIds) {\n     if (baseDescriptor.getFieldsAccessed().isEmpty()",
    "Add unit test": "diff --git a/sonar-server/src/main/java/org/sonar/server/db/migrations/MassUpdater.java b/sonar-server/src/main/java/org/sonar/server/db/migrations/MassUpdater.java\nindex 0a603ab3a4a..8ebb52612f6 100644\n--- a/sonar-server/src/main/java/org/sonar/server/db/migrations/MassUpdater.java\n+++ b/sonar-server/src/main/java/org/sonar/server/db/migrations/MassUpdater.java\n@@ -37,7 +37,6 @@ import java.sql.*;\n public class MassUpdater {\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(MassUpdater.class);\n-  private static final String FAILURE_MESSAGE = \"Fail to migrate data\";\n   private static final int GROUP_SIZE = 1000;\n   private final Database db;\n \n@@ -104,14 +103,10 @@ public class MassUpdater {\n       }\n \n     } catch (SQLException e) {\n-      LOGGER.error(FAILURE_MESSAGE, e);\n       SqlUtil.log(LOGGER, e);\n-      throw MessageException.of(FAILURE_MESSAGE);\n-\n+      throw processError(e);\n     } catch (Exception e) {\n-      LOGGER.error(FAILURE_MESSAGE, e);\n-      throw MessageException.of(FAILURE_MESSAGE);\n-\n+      throw processError(e);\n     } finally {\n       DbUtils.closeQuietly(writeStatement);\n       DbUtils.closeQuietly(writeConnection);\n@@ -121,6 +116,12 @@ public class MassUpdater {\n     }\n   }\n \n+  private static MessageException processError(Exception e) {\n+    String message = String.format(\"Fail to migrate data, error is : %s\", e.getMessage());\n+    LOGGER.error(message, e);\n+    throw MessageException.of(message);\n+  }\n+\n   @VisibleForTesting\n   static String convertSelectSql(String selectSql, Database db){\n     String newSelectSql = selectSql;\ndiff --git a/sonar-server/src/test/java/org/sonar/server/db/migrations/MassUpdaterTest.java b/sonar-server/src/test/java/org/sonar/server/db/migrations/MassUpdaterTest.java\nindex 208c0d50687..f5aaeb81aed 100644\n--- a/sonar-server/src/test/java/org/sonar/server/db/migrations/MassUpdaterTest.java\n+++ b/sonar-server/src/test/java/org/sonar/server/db/migrations/MassUpdaterTest.java\n@@ -20,25 +20,146 @@\n \n package org.sonar.server.db.migrations;\n \n+import org.junit.ClassRule;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n-import org.mockito.Mock;\n import org.mockito.runners.MockitoJUnitRunner;\n+import org.sonar.api.utils.MessageException;\n import org.sonar.core.persistence.Database;\n+import org.sonar.core.persistence.TestDatabase;\n import org.sonar.core.persistence.dialect.Dialect;\n \n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n import static org.fest.assertions.Assertions.assertThat;\n+import static org.fest.assertions.Fail.fail;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n @RunWith(MockitoJUnitRunner.class)\n public class MassUpdaterTest {\n \n-  @Mock\n-  Database db;\n+  @ClassRule\n+  public static TestDatabase db = new TestDatabase().schema(MassUpdaterTest.class, \"schema.sql\");\n+\n+  static class Row {\n+    private Long id;\n+  }\n+\n+  @Test\n+  public void execute() throws Exception {\n+    db.prepareDbUnit(getClass(), \"migrate_data.xml\");\n+\n+    new MassUpdater(db.database()).execute(\n+      new MassUpdater.InputLoader<Row>() {\n+        @Override\n+        public String selectSql() {\n+          return \"SELECT i.id FROM issues i\";\n+        }\n+\n+        @Override\n+        public Row load(ResultSet rs) throws SQLException {\n+          Row row = new Row();\n+          row.id = SqlUtil.getLong(rs, 1);\n+          return row;\n+        }\n+      },\n+      new MassUpdater.InputConverter<Row>() {\n+        @Override\n+        public String updateSql() {\n+          return \"UPDATE issues SET severity=? WHERE id=?\";\n+        }\n+\n+        @Override\n+        public boolean convert(Row row, PreparedStatement updateStatement) throws SQLException {\n+          updateStatement.setString(1, \"MAJOR\");\n+          updateStatement.setLong(2, row.id);\n+          return true;\n+        }\n+      }\n+    );\n+\n+    db.assertDbUnit(getClass(), \"migrate_data_result.xml\", \"issues\");\n+  }\n+\n+  @Test\n+  public void fail_on_bad_sql_request() throws Exception {\n+    db.prepareDbUnit(getClass(), \"migrate_data.xml\");\n+\n+    try {\n+      new MassUpdater(db.database()).execute(\n+        new MassUpdater.InputLoader<Row>() {\n+          @Override\n+          public String selectSql() {\n+            return \"<INVALID QUERY>\";\n+          }\n+\n+          @Override\n+          public Row load(ResultSet rs) throws SQLException {\n+            return new Row();\n+          }\n+        },\n+        new MassUpdater.InputConverter<Row>() {\n+          @Override\n+          public String updateSql() {\n+            return \"<INVALID QUERY>\";\n+          }\n+\n+          @Override\n+          public boolean convert(Row row, PreparedStatement updateStatement) throws SQLException {\n+            return true;\n+          }\n+        }\n+      );\n+      fail();\n+    } catch (Exception e) {\n+      assertThat(e).isInstanceOf(MessageException.class);\n+    }\n+  }\n+\n+  @Test\n+  public void fail_on_unknown_error() throws Exception {\n+    db.prepareDbUnit(getClass(), \"migrate_data.xml\");\n+\n+    try {\n+      new MassUpdater(db.database()).execute(\n+        new MassUpdater.InputLoader<Row>() {\n+          @Override\n+          public String selectSql() {\n+            return \"SELECT i.id FROM issues i\";\n+          }\n+\n+          @Override\n+          public Row load(ResultSet rs) throws SQLException {\n+            Row row = new Row();\n+            row.id = SqlUtil.getLong(rs, 1);\n+            return row;\n+          }\n+        },\n+        new MassUpdater.InputConverter<Row>() {\n+          @Override\n+          public String updateSql() {\n+            throw new RuntimeException(\"Unknown error\");\n+          }\n+\n+          @Override\n+          public boolean convert(Row row, PreparedStatement updateStatement) throws SQLException {\n+            return true;\n+          }\n+        }\n+      );\n+      fail();\n+    } catch (Exception e) {\n+      assertThat(e).isInstanceOf(MessageException.class);\n+    }\n+  }\n \n   @Test\n   public void convert_select_sql() throws Exception {\n+    Database db = mock(Database.class);\n+\n     Dialect dialect = mock(Dialect.class);\n     when(dialect.getTrueSqlValue()).thenReturn(\"true\");\n     when(dialect.getFalseSqlValue()).thenReturn(\"false\");\ndiff --git a/sonar-server/src/test/resources/org/sonar/server/db/migrations/MassUpdaterTest/migrate_data.xml b/sonar-server/src/test/resources/org/sonar/server/db/migrations/MassUpdaterTest/migrate_data.xml\nnew file mode 100644\nindex 00000000000..5eb657bf6a2\n--- /dev/null\n+++ b/sonar-server/src/test/resources/org/sonar/server/db/migrations/MassUpdaterTest/migrate_data.xml\n@@ -0,0 +1,10 @@\n+<dataset>\n+\n+  <issues ID=\"1\" COMPONENT_ID=\"11\" ROOT_COMPONENT_ID=\"10\" RULE_ID=\"20\" SEVERITY=\"MINOR\" KEE=\"1\"\n+          ACTION_PLAN_KEY=\"[null]\" ASSIGNEE=\"[null]\" AUTHOR_LOGIN=\"[null]\" CHECKSUM=\"ABCDE\"\n+          EFFORT_TO_FIX=\"3.14\" ISSUE_ATTRIBUTES=\"[null]\" ISSUE_CLOSE_DATE=\"[null]\" ISSUE_CREATION_DATE=\"2012-01-05\"\n+          ISSUE_UPDATE_DATE=\"2012-01-05\" LINE=\"1234\" MANUAL_SEVERITY=\"[false]\" MESSAGE=\"the message\" REPORTER=\"[null]\"\n+          RESOLUTION=\"[null]\" STATUS=\"OPEN\" CREATED_AT=\"2012-01-05\" UPDATED_AT=\"2012-01-05\"\n+          TECHNICAL_DEBT=\"10\"/>\n+\n+</dataset>\ndiff --git a/sonar-server/src/test/resources/org/sonar/server/db/migrations/MassUpdaterTest/migrate_data_result.xml b/sonar-server/src/test/resources/org/sonar/server/db/migrations/MassUpdaterTest/migrate_data_result.xml\nnew file mode 100644\nindex 00000000000..ec1ac69511f\n--- /dev/null\n+++ b/sonar-server/src/test/resources/org/sonar/server/db/migrations/MassUpdaterTest/migrate_data_result.xml\n@@ -0,0 +1,10 @@\n+<dataset>\n+\n+  <issues ID=\"1\" COMPONENT_ID=\"11\" ROOT_COMPONENT_ID=\"10\" RULE_ID=\"20\" SEVERITY=\"MAJOR\" KEE=\"1\"\n+          ACTION_PLAN_KEY=\"[null]\" ASSIGNEE=\"[null]\" AUTHOR_LOGIN=\"[null]\" CHECKSUM=\"ABCDE\"\n+          EFFORT_TO_FIX=\"3.14\" ISSUE_ATTRIBUTES=\"[null]\" ISSUE_CLOSE_DATE=\"[null]\" ISSUE_CREATION_DATE=\"2012-01-05\"\n+          ISSUE_UPDATE_DATE=\"2012-01-05\" LINE=\"1234\" MANUAL_SEVERITY=\"[false]\" MESSAGE=\"the message\" REPORTER=\"[null]\"\n+          RESOLUTION=\"[null]\" STATUS=\"OPEN\" CREATED_AT=\"2012-01-05\" UPDATED_AT=\"2012-01-05\"\n+          TECHNICAL_DEBT=\"10\"/>\n+\n+</dataset>\ndiff --git a/sonar-server/src/test/resources/org/sonar/server/db/migrations/MassUpdaterTest/schema.sql b/sonar-server/src/test/resources/org/sonar/server/db/migrations/MassUpdaterTest/schema.sql\nnew file mode 100644\nindex 00000000000..f3f71cfa229\n--- /dev/null\n+++ b/sonar-server/src/test/resources/org/sonar/server/db/migrations/MassUpdaterTest/schema.sql\n@@ -0,0 +1,28 @@\n+-- 4.3\n+\n+CREATE TABLE \"ISSUES\" (\n+  \"ID\" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),\n+  \"KEE\" VARCHAR(50) UNIQUE NOT NULL,\n+  \"COMPONENT_ID\" INTEGER NOT NULL,\n+  \"ROOT_COMPONENT_ID\" INTEGER,\n+  \"RULE_ID\" INTEGER,\n+  \"SEVERITY\" VARCHAR(10),\n+  \"MANUAL_SEVERITY\" BOOLEAN NOT NULL,\n+  \"MESSAGE\" VARCHAR(4000),\n+  \"LINE\" INTEGER,\n+  \"EFFORT_TO_FIX\" DOUBLE,\n+  \"STATUS\" VARCHAR(20),\n+  \"RESOLUTION\" VARCHAR(20),\n+  \"CHECKSUM\" VARCHAR(1000),\n+  \"REPORTER\" VARCHAR(40),\n+  \"ASSIGNEE\" VARCHAR(40),\n+  \"AUTHOR_LOGIN\" VARCHAR(100),\n+  \"ACTION_PLAN_KEY\" VARCHAR(50) NULL,\n+  \"ISSUE_ATTRIBUTES\" VARCHAR(4000),\n+  \"ISSUE_CREATION_DATE\" TIMESTAMP,\n+  \"ISSUE_CLOSE_DATE\" TIMESTAMP,\n+  \"ISSUE_UPDATE_DATE\" TIMESTAMP,\n+  \"CREATED_AT\" TIMESTAMP,\n+  \"UPDATED_AT\" TIMESTAMP,\n+  \"TECHNICAL_DEBT\" INTEGER\n+);",
    "Remove unused import .": "diff --git a/sdk/src/main/java/com/google/cloud/dataflow/sdk/runners/worker/StreamingSideInputDoFnRunner.java b/sdk/src/main/java/com/google/cloud/dataflow/sdk/runners/worker/StreamingSideInputDoFnRunner.java\nindex 508fbaf697..4e4874bf8b 100644\n--- a/sdk/src/main/java/com/google/cloud/dataflow/sdk/runners/worker/StreamingSideInputDoFnRunner.java\n+++ b/sdk/src/main/java/com/google/cloud/dataflow/sdk/runners/worker/StreamingSideInputDoFnRunner.java\n@@ -28,7 +28,6 @@ import com.google.cloud.dataflow.sdk.transforms.windowing.BoundedWindow;\n import com.google.cloud.dataflow.sdk.transforms.windowing.WindowFn;\n import com.google.cloud.dataflow.sdk.util.DoFnInfo;\n import com.google.cloud.dataflow.sdk.util.DoFnRunner;\n-import com.google.cloud.dataflow.sdk.util.DoFnRunner.OutputManager;\n import com.google.cloud.dataflow.sdk.util.ExecutionContext.StepContext;\n import com.google.cloud.dataflow.sdk.util.SideInputReader;\n import com.google.cloud.dataflow.sdk.util.UserCodeException;",
    "Consolidate TR_ValidateStaticField .": "diff --git a/runtime/compiler/aarch64/codegen/J9AheadOfTimeCompile.cpp b/runtime/compiler/aarch64/codegen/J9AheadOfTimeCompile.cpp\nindex 113a2b911..2df43dfca 100644\n--- a/runtime/compiler/aarch64/codegen/J9AheadOfTimeCompile.cpp\n+++ b/runtime/compiler/aarch64/codegen/J9AheadOfTimeCompile.cpp\n@@ -1043,25 +1043,6 @@ uint8_t *J9::ARM64::AheadOfTimeCompile::initializeAOTRelocationHeader(TR::Iterat\n          }\n          break;\n \n-      case TR_ValidateStaticField:\n-         {\n-         *(uintptr_t*)cursor = (uintptr_t)relocation->getTargetAddress(); // Inlined site index\n-         cursor += SIZEPOINTER;\n-\n-         TR::AOTClassInfo *aotCI = (TR::AOTClassInfo*)relocation->getTargetAddress2();\n-         *(uintptr_t*)cursor = (uintptr_t) aotCI->_constantPool;\n-         cursor += SIZEPOINTER;\n-\n-         *(uintptr_t*)cursor = (uintptr_t) aotCI->_cpIndex;\n-         cursor += SIZEPOINTER;\n-\n-         void *romClass = (void *)fej9->getPersistentClassPointerFromClassPointer(aotCI->_clazz);\n-         uintptr_t romClassOffsetInSharedCache = self()->offsetInSharedCacheFromPointer(sharedCache, romClass);\n-         *(uintptr_t *)cursor = romClassOffsetInSharedCache;\n-         cursor += SIZEPOINTER;\n-         }\n-         break;\n-\n       case TR_ValidateArbitraryClass:\n          {\n          TR::AOTClassInfo *aotCI = (TR::AOTClassInfo*) relocation->getTargetAddress2();\ndiff --git a/runtime/compiler/arm/codegen/J9AheadOfTimeCompile.cpp b/runtime/compiler/arm/codegen/J9AheadOfTimeCompile.cpp\nindex 170fb4b0d..0e372691e 100644\n--- a/runtime/compiler/arm/codegen/J9AheadOfTimeCompile.cpp\n+++ b/runtime/compiler/arm/codegen/J9AheadOfTimeCompile.cpp\n@@ -490,25 +490,6 @@ uint8_t *J9::ARM::AheadOfTimeCompile::initializeAOTRelocationHeader(TR::Iterated\n          }\n          break;\n \n-      case TR_ValidateStaticField:\n-         {\n-         *(uintptr_t*)cursor = (uintptr_t)relocation->getTargetAddress(); // Inlined site index\n-         cursor += SIZEPOINTER;\n-\n-         TR::AOTClassInfo *aotCI = (TR::AOTClassInfo*)relocation->getTargetAddress2();\n-         *(uintptr_t*)cursor = (uintptr_t) aotCI->_constantPool;\n-         cursor += SIZEPOINTER;\n-\n-         *(uintptr_t*)cursor = (uintptr_t) aotCI->_cpIndex;\n-         cursor += SIZEPOINTER;\n-\n-         void *romClass = (void *)fej9->getPersistentClassPointerFromClassPointer(aotCI->_clazz);\n-         uintptr_t romClassOffsetInSharedCache = self()->offsetInSharedCacheFromPointer(sharedCache, romClass);\n-         *(uintptr_t *)cursor = romClassOffsetInSharedCache;\n-         cursor += SIZEPOINTER;\n-         }\n-         break;\n-\n       case TR_ValidateArbitraryClass:\n          {\n          TR::AOTClassInfo *aotCI = (TR::AOTClassInfo*) relocation->getTargetAddress2();\ndiff --git a/runtime/compiler/codegen/J9AheadOfTimeCompile.cpp b/runtime/compiler/codegen/J9AheadOfTimeCompile.cpp\nindex 6829c7798..e26754841 100644\n--- a/runtime/compiler/codegen/J9AheadOfTimeCompile.cpp\n+++ b/runtime/compiler/codegen/J9AheadOfTimeCompile.cpp\n@@ -399,6 +399,23 @@ J9::AheadOfTimeCompile::initializeCommonAOTRelocationHeader(TR::IteratedExternal\n          }\n          break;\n \n+      case TR_ValidateStaticField:\n+         {\n+         TR_RelocationRecordValidateStaticField *vsfRecord = reinterpret_cast<TR_RelocationRecordValidateStaticField *>(reloRecord);\n+\n+         uintptr_t inlinedSiteIndex = reinterpret_cast<uintptr_t>(relocation->getTargetAddress());\n+         TR::AOTClassInfo *aotCI = reinterpret_cast<TR::AOTClassInfo*>(relocation->getTargetAddress2());\n+\n+         void *romClass = reinterpret_cast<void *>(fej9->getPersistentClassPointerFromClassPointer(aotCI->_clazz));\n+         uintptr_t romClassOffsetInSharedCache = self()->offsetInSharedCacheFromPointer(sharedCache, romClass);\n+\n+         vsfRecord->setInlinedSiteIndex(reloTarget, inlinedSiteIndex);\n+         vsfRecord->setConstantPool(reloTarget, reinterpret_cast<uintptr_t>(aotCI->_constantPool));\n+         vsfRecord->setCpIndex(reloTarget, aotCI->_cpIndex);\n+         vsfRecord->setRomClassOffsetInSharedCache(reloTarget, romClassOffsetInSharedCache);\n+         }\n+         break;\n+\n       default:\n          return cursor;\n       }\n@@ -603,6 +620,22 @@ J9::AheadOfTimeCompile::dumpRelocationHeaderData(uint8_t *cursor, bool isVerbose\n          }\n          break;\n \n+      case TR_ValidateStaticField:\n+         {\n+         TR_RelocationRecordValidateStaticField *vsfRecord = reinterpret_cast<TR_RelocationRecordValidateStaticField *>(reloRecord);\n+\n+         self()->traceRelocationOffsets(cursor, offsetSize, endOfCurrentRecord, orderedPair);\n+         if (isVerbose)\n+            {\n+            traceMsg(self()->comp(), \"\\nValidation Relocation: InlineCallSite index = %d, Constant pool = %x, cpIndex = %d, ROM Class offset = %x\",\n+                                       vsfRecord->inlinedSiteIndex(reloTarget),\n+                                       vsfRecord->constantPool(reloTarget),\n+                                       vsfRecord->cpIndex(reloTarget),\n+                                       vsfRecord->romClassOffsetInSharedCache(reloTarget));\n+            }\n+         }\n+         break;\n+\n       default:\n          return cursor;\n       }\n@@ -1140,7 +1173,6 @@ J9::AheadOfTimeCompile::dumpRelocationData()\n                }\n             break;\n          case TR_ValidateClass:\n-         case TR_ValidateStaticField:\n             {\n             cursor++;        //unused field\n             if (is64BitTarget)\ndiff --git a/runtime/compiler/p/codegen/J9AheadOfTimeCompile.cpp b/runtime/compiler/p/codegen/J9AheadOfTimeCompile.cpp\nindex 41951e7e1..f66d99813 100644\n--- a/runtime/compiler/p/codegen/J9AheadOfTimeCompile.cpp\n+++ b/runtime/compiler/p/codegen/J9AheadOfTimeCompile.cpp\n@@ -1227,25 +1227,6 @@ uint8_t *J9::Power::AheadOfTimeCompile::initializeAOTRelocationHeader(TR::Iterat\n          }\n          break;\n \n-      case TR_ValidateStaticField:\n-         {\n-         *(uintptr_t*)cursor = (uintptr_t)relocation->getTargetAddress(); // Inlined site index\n-         cursor += SIZEPOINTER;\n-\n-         TR::AOTClassInfo *aotCI = (TR::AOTClassInfo*)relocation->getTargetAddress2();\n-         *(uintptr_t*)cursor = (uintptr_t) aotCI->_constantPool;\n-         cursor += SIZEPOINTER;\n-\n-         *(uintptr_t*)cursor = (uintptr_t) aotCI->_cpIndex;\n-         cursor += SIZEPOINTER;\n-\n-         void *romClass = (void *)fej9->getPersistentClassPointerFromClassPointer(aotCI->_clazz);\n-         uintptr_t romClassOffsetInSharedCache = self()->offsetInSharedCacheFromPointer(sharedCache, romClass);\n-         *(uintptr_t *)cursor = romClassOffsetInSharedCache;\n-         cursor += SIZEPOINTER;\n-         }\n-         break;\n-\n       case TR_ValidateArbitraryClass:\n          {\n          TR::AOTClassInfo *aotCI = (TR::AOTClassInfo*) relocation->getTargetAddress2();\ndiff --git a/runtime/compiler/x/codegen/J9AheadOfTimeCompile.cpp b/runtime/compiler/x/codegen/J9AheadOfTimeCompile.cpp\nindex cb3404dab..8b4ae04b4 100644\n--- a/runtime/compiler/x/codegen/J9AheadOfTimeCompile.cpp\n+++ b/runtime/compiler/x/codegen/J9AheadOfTimeCompile.cpp\n@@ -1021,25 +1021,6 @@ uint8_t *J9::X86::AheadOfTimeCompile::initializeAOTRelocationHeader(TR::Iterated\n          }\n          break;\n \n-      case TR_ValidateStaticField:\n-         {\n-         *(uintptr_t*)cursor = (uintptr_t) relocation->getTargetAddress(); // Inlined site index\n-         cursor += SIZEPOINTER;\n-\n-         TR::AOTClassInfo *aotCI = (TR::AOTClassInfo*)relocation->getTargetAddress2();\n-         *(uintptr_t*)cursor = (uintptr_t) aotCI->_constantPool;\n-         cursor += SIZEPOINTER;\n-\n-         *(uintptr_t*)cursor = (uintptr_t) aotCI->_cpIndex;\n-         cursor += SIZEPOINTER;\n-\n-         void *romClass = (void *)fej9->getPersistentClassPointerFromClassPointer(aotCI->_clazz);\n-         uintptr_t romClassOffsetInSharedCache = self()->offsetInSharedCacheFromPointer(sharedCache, romClass);\n-         *(uintptr_t *)cursor = romClassOffsetInSharedCache;\n-         cursor += SIZEPOINTER;\n-         }\n-         break;\n-\n       case TR_ValidateArbitraryClass:\n          {\n          TR::AOTClassInfo *aotCI = (TR::AOTClassInfo*) relocation->getTargetAddress2();\ndiff --git a/runtime/compiler/z/codegen/J9AheadOfTimeCompile.cpp b/runtime/compiler/z/codegen/J9AheadOfTimeCompile.cpp\nindex 3d5dd42ea..5eed91f22 100644\n--- a/runtime/compiler/z/codegen/J9AheadOfTimeCompile.cpp\n+++ b/runtime/compiler/z/codegen/J9AheadOfTimeCompile.cpp\n@@ -915,26 +915,6 @@ uint8_t *J9::Z::AheadOfTimeCompile::initializeAOTRelocationHeader(TR::IteratedEx\n          }\n          break;\n \n-      case TR_ValidateStaticField:\n-         {\n-\n-         *(uintptr_t*)cursor = (uintptr_t)relocation->getTargetAddress(); // Inlined site index\n-         cursor += SIZEPOINTER;\n-\n-         TR::AOTClassInfo *aotCI = (TR::AOTClassInfo*)relocation->getTargetAddress2();\n-         *(uintptr_t*)cursor = (uintptr_t) aotCI->_constantPool;\n-         cursor += SIZEPOINTER;\n-\n-         *(uintptr_t*)cursor = (uintptr_t) aotCI->_cpIndex;\n-         cursor += SIZEPOINTER;\n-\n-         void *romClass = (void *)fej9->getPersistentClassPointerFromClassPointer(aotCI->_clazz);\n-         uintptr_t romClassOffsetInSharedCache = self()->offsetInSharedCacheFromPointer(sharedCache, romClass);\n-         *(uintptr_t *)cursor = romClassOffsetInSharedCache;\n-         cursor += SIZEPOINTER;\n-     ",
    "Allow intrinsification of alias functions ( intrinsify both the alias and the target ) .": "diff --git a/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/LLVMFunctionDescriptor.java b/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/LLVMFunctionDescriptor.java\nindex 15a671407bb..ffcbd9511b8 100644\n--- a/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/LLVMFunctionDescriptor.java\n+++ b/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/LLVMFunctionDescriptor.java\n@@ -335,7 +335,6 @@ public final class LLVMFunctionDescriptor implements LLVMSymbol, LLVMInternalTru\n     }\n \n     public void define(LLVMIntrinsicProvider intrinsicProvider, NodeFactory nodeFactory) {\n-        assert intrinsicProvider.isIntrinsified(name);\n         Intrinsic intrinsification = new Intrinsic(intrinsicProvider, name, nodeFactory);\n         define(intrinsicProvider.getLibrary(), new LLVMFunctionDescriptor.IntrinsicFunction(intrinsification), true);\n     }\ndiff --git a/sulong/projects/com.oracle.truffle.llvm/src/com/oracle/truffle/llvm/Runner.java b/sulong/projects/com.oracle.truffle.llvm/src/com/oracle/truffle/llvm/Runner.java\nindex ac257d3f2a0..1a5f73f448c 100644\n--- a/sulong/projects/com.oracle.truffle.llvm/src/com/oracle/truffle/llvm/Runner.java\n+++ b/sulong/projects/com.oracle.truffle.llvm/src/com/oracle/truffle/llvm/Runner.java\n@@ -1087,14 +1087,12 @@ final class Runner {\n         for (LLVMParserResult parserResult : sulongLibraries) {\n             for (LLVMSymbol symbol : parserResult.getRuntime().getFileScope().values()) {\n                 if (symbol.isFunction() && intrinsicProvider.isIntrinsified(symbol.getName())) {\n-                    if (symbol instanceof LLVMAlias) {\n-                        throw new UnsupportedOperationException(\"Replacing an alias with an intrinsic is not supported at the moment\");\n-                    } else if (symbol instanceof LLVMFunctionDescriptor) {\n-                        LLVMFunctionDescriptor function = (LLVMFunctionDescriptor) symbol;\n-                        function.define(intrinsicProvider, parserResult.getRuntime().getNodeFactory());\n-                    } else {\n-                        throw new IllegalStateException(\"Unknown symbol: \" + symbol.getClass());\n-                    }\n+                    /*\n+                     * If `symbol` is an alias, `symbol.asFunction()` will follow the alias to the\n+                    ",
    "Fix test to remove temprorary dataroot": "diff --git a/test/org/opensolaris/opengrok/configuration/RuntimeEnvironmentTest.java b/test/org/opensolaris/opengrok/configuration/RuntimeEnvironmentTest.java\nindex e26b496d929..39ffa1ebd9c 100644\n--- a/test/org/opensolaris/opengrok/configuration/RuntimeEnvironmentTest.java\n+++ b/test/org/opensolaris/opengrok/configuration/RuntimeEnvironmentTest.java\n@@ -81,6 +81,7 @@ public class RuntimeEnvironmentTest {\n         String path = f.getCanonicalPath();\n         assertTrue(f.delete());\n         instance.setDataRoot(path);\n+        assertTrue(f.delete());\n         assertEquals(path, instance.getDataRootPath());\n         assertEquals(path, instance.getDataRootFile().getCanonicalPath());\n     }",
    "Removing sorting of JmsProducer properties ( <issue_id> )": "diff --git a/plugins/streaming/impls/jms/src/main/java/org/pentaho/di/trans/step/jms/JmsProducerMeta.java b/plugins/streaming/impls/jms/src/main/java/org/pentaho/di/trans/step/jms/JmsProducerMeta.java\nindex 5dc0f03364..cdf838897e 100644\n--- a/plugins/streaming/impls/jms/src/main/java/org/pentaho/di/trans/step/jms/JmsProducerMeta.java\n+++ b/plugins/streaming/impls/jms/src/main/java/org/pentaho/di/trans/step/jms/JmsProducerMeta.java\n@@ -103,8 +103,8 @@ public class JmsProducerMeta extends BaseSerializingMeta implements StepMetaInte\n   }\n \n   public void setPropertyValuesByName( Map<String, String> propertyValuesByName ) {\n-    this.propertyNames = conf( propertyValuesByName ).keys();\n-    this.propertyValues = conf( propertyValuesByName ).vals();\n+    this.propertyNames = new ArrayList<>( propertyValuesByName.keySet() );\n+    this.propertyValues = new ArrayList<>( propertyValuesByName.values() );\n   }\n \n   public Map<String, String> getPropertyValuesByName() {",
    "Add module maven - builder - support .": "diff --git a/maven-builder-support/pom.xml b/maven-builder-support/pom.xml\nnew file mode 100644\nindex 000000000..e70a34a50\n--- /dev/null\n+++ b/maven-builder-support/pom.xml\n@@ -0,0 +1,49 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.maven</groupId>\n+    <artifactId>maven</artifactId>\n+    <version>3.2.6-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>maven-builder-support</artifactId>\n+\n+  <name>Maven Settings</name>\n+  <description>Maven Builder Support</description>\n+\n+  <scm><!-- remove when git scm url format can accept artifact-id at the end, as automatically inherited -->\n+    <connection>scm:git:https://git-wip-us.apache.org/repos/asf/maven.git</connection>\n+    <developerConnection>scm:git:https://git-wip-us.apache.org/repos/asf/maven.git</developerConnection>\n+    <tag>HEAD</tag>\n+  </scm>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.codehaus.plexus</groupId>\n+      <artifactId>plexus-utils</artifactId>\n+    </dependency>\n+  </dependencies>\n+\n+</project>\ndiff --git a/maven-builder-support/src/main/java/org/apache/maven/building/FileSource.java b/maven-builder-support/src/main/java/org/apache/maven/building/FileSource.java\nnew file mode 100644\nindex 000000000..b201ee685\n--- /dev/null\n+++ b/maven-builder-support/src/main/java/org/apache/maven/building/FileSource.java\n@@ -0,0 +1,79 @@\n+package org.apache.maven.building;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+/**\n+ * Wraps an ordinary {@link File} as a source.\n+ *\n+ * @author Benjamin Bentmann\n+ */\n+public class FileSource\n+    implements Source\n+{\n+    private final File file;\n+\n+    /**\n+     * Creates a new source backed by the specified file.\n+     *\n+     * @param file The file, must not be {@code null}.\n+     */\n+    public FileSource( File file )\n+    {\n+        if ( file == null )\n+        {\n+            throw new IllegalArgumentException( \"no POM file specified\" );\n+        }\n+        this.file = file.getAbsoluteFile();\n+    }\n+\n+    @Override\n+    public InputStream getInputStream()\n+        throws IOException\n+    {\n+        return new FileInputStream( file );\n+    }\n+\n+    @Override\n+    public String getLocation()\n+    {\n+        return file.getPath();\n+    }\n+\n+    /**\n+     * Gets the file of this source.\n+     *\n+     * @return The underlying file, never {@code null}.\n+     */\n+    public File getFile()\n+    {\n+        return file;\n+    }\n+\n+    @Override\n+    public String toString()\n+    {\n+        return getLocation();\n+    }\n+}\ndiff --git a/maven-builder-support/src/main/java/org/apache/maven/building/Source.java b/maven-builder-support/src/main/java/org/apache/maven/building/Source.java\nnew file mode 100644\nindex 000000000..1f7510ba7\n--- /dev/null\n+++ b/maven-builder-support/src/main/java/org/apache/maven/building/Source.java\n@@ -0,0 +1,49 @@\n+package org.apache.maven.building;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+/**\n+ * Provides access to the contents of a source independently of the backing store (e.g. file system, database, memory).\n+ *\n+ * @author Benjamin Bentmann\n+ */\n+public interface Source\n+{\n+\n+    /**\n+     * Gets a byte stream to the source contents. Closing the returned stream is the responsibility of the caller.\n+     *\n+     * @return A byte stream to the source contents, never {@code null}.\n+     */\n+    InputStream getInputStream()\n+        throws IOException;\n+\n+    /**\n+     * Provides a user-friendly hint about the location of the source. This could be a local file path, a URI or just an\n+     * empty string. The intention is to assist users during error reporting.\n+     *\n+     * @return A user-friendly hint about the location of the source, never {@code null}.\n+     */\n+    String getLocation();\n+\n+}\ndiff --git a/maven-builder-support/src/main/java/org/apache/maven/building/StringSource.java b/maven-builder-support/src/main/java/org/apache/maven/building/StringSource.java\nnew file mode 100644\nindex 000000000..f9d87c0ba\n--- /dev/null\n+++ b/maven-builder-support/src/main/java/org/apache/maven/building/StringSource.java\n@@ -0,0 +1,90 @@\n+package org.apache.maven.building;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+/**\n+ * Wraps an ordinary {@link CharSequence} as a source.\n+ *\n+ * @author Benjamin Bentmann\n+ */\n+public class StringSource\n+    implements Source\n+{\n+\n+    private String content;\n+\n+    private String location;\n+\n+    /**\n+     * Creates a new source backed by the specified string.\n+     *\n+     * @param content The String representation, may be empty or {@code null}.\n+     */\n+    public StringSource( CharSequence content )\n+    {\n+        this( content, null );\n+    }\n+\n+    /**\n+     * Creates a new source backed by the specified string.\n+     *\n+     * @param content The String representation, may be empty or {@code null}.\n+     * @param location The location to report for this use, may be {@code null}.\n+     */\n+    public StringSource( CharSequence content, String location )\n+    {\n+        this.content = ( content != null ) ? content.toString() : \"\";\n+        this.location = ( location != null ) ? location : \"(memory)\";\n+    }\n+\n+    @Override\n+    public InputStream getInputStream()\n+        throws IOException\n+    {\n+        return new ByteArrayInputStream( content.getBytes( \"UTF-8\" ) );\n+    }\n+\n+    @Override\n+    public String getLocation()\n+    {\n+        return location;\n+    }\n+\n+    /**\n+     * Gets the content of this source.\n+     *\n+     * @return The underlying character stream, never {@code null}.\n+     */\n+    public String getContent()\n+    {\n+        return content;\n+    }\n+\n+    @Override\n+    public String toString()\n+    {\n+        return getLocation();\n+    }\n+\n+}\ndiff --git a/maven-builder-support/src/main/java/org/apache/maven/building/UrlSource.java b/maven-builder-support/src/main/java/org/apache/maven/building/UrlSource.java\nnew file mode 100644\nindex 000000000..7a6e9b09b\n--- /dev/null\n+++ b/maven-builder-support/src/main/java/org/apache/maven/building/UrlSource.java\n@@ -0,0 +1,80 @@\n+package org.apache.maven.building;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.URL;\n+\n+/**\n+ * Wraps an ordinary {@link URL} as a source.\n+ *\n+ * @author Benjamin Bentmann\n+ */\n+public class UrlSource\n+    implements Source\n+{\n+\n+    private URL url;\n+\n+    /**\n+     * Creates a new source backed by the specified URL.\n+     *\n+     * @param url The file, must not be {@code null}.\n+     */\n+    public UrlSource( URL url )\n+    {\n+        if ( url == null )\n+        {\n+            throw new IllegalArgumentException( \"no POM URL specified\" );\n+        }\n+        this.url = url;\n+    }\n+\n+    @Override\n+    public InputStream getInputStream()\n+        throws IOException\n+    {\n+        return url.openStream();\n+    }\n+\n+    @Override\n+    public String getLocation()\n+    {\n+        return url.toString();\n+    }\n+\n+    /**\n+     * Gets the URL of this source.\n+     *\n+     * @return The underlying URL, never {@code null}.\n+     */\n+    public URL getUrl()\n+    {\n+        return url;\n+    }\n+\n+    @Override\n+    public String toString()\n+    {\n+        return getLocation();\n+    }\n+\n+}\ndiff --git a/maven-model-builder/pom.xml b/maven-model-builder/pom.xml\nindex 8f29f5997..738f64fa7 100644\n--- a/maven-model-builder/pom.xml\n+++ b/maven-model-builder/pom.xml\n@@ -47,6 +47,10 @@\n       <groupId>org.apache.maven</groupId>\n       <artifactId>maven-model</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.maven</groupId>\n+      <artifactId>maven-builder-support</artifactId>\n+    </dependency>\n \n     <dependency>\n       <groupId>org.eclipse.sisu</groupId>\ndiff --git a/maven-model-builder/src/main/java/org/apache/maven/model/building/FileModelSource.java b/maven-model-builder/src/main/java/org/apache/maven/model/building/FileModelSource.java\nindex fcc85a81a..a2e114176 100644\n--- a/maven-model-builder/src/main/java/org/apache/maven/model/building/FileModelSource.java\n+++ b/maven-model-builder/src/main/java/org/apache/maven/model/building/FileModelSource.java\n@@ -20,20 +20,17 @@\n  */\n \n import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n import java.net.URI;\n \n+import org.apache.maven.building.FileSource;\n+\n /**\n  * Wraps an ordinary {@link File} as a model source.\n  *\n  * @author Benjamin Bentmann\n  */\n-public class FileModelSource\n-    implements ModelSource2\n+public class FileModelSource extends FileSource implements ModelSource2\n {\n-    private final File pomFile;\n \n     /**\n      * Creates a new model source backed by the specified file.\n@@ -42,45 +39,27 @@ public class FileModelSource\n      */\n     public FileModelSource( File pomFile )\n     {\n-        if ( pomFile == null )\n-        {\n-            throw new IllegalArgumentException( \"no POM file specified\" );\n-        }\n-        this.pomFile = pomFile.getAbsoluteFile();\n-    }\n-\n-    public InputStream getInputStream()\n-        throws IOException\n-    {\n-        return new FileInputStream( pomFile );\n-    }\n-\n-    public String getLocation()\n-    {\n-        return pomFile.getPath();\n+        super( pomFile );\n     }\n-\n+    \n     /**\n-     * Gets the POM file of this model source.\n-     *\n-     * @return The underlying POM file, never {@code null}.\n+     * \n+     * @return the file of this source\n+     * \n+     * @deprecated instead use {@link #getFile()}\n      */\n+    @Deprecated\n     public File getPomFile()\n     {\n-        return pomFile;\n+        return getFile();\n     }\n-\n+    \n     @Override\n-    public String toString()\n-    {\n-        return getLocation();\n-    }\n-\n     public ModelSource2 getRelatedSource( String relPath )\n     {\n         relPath = relPath.replace( '\\\\', File.separatorChar ).replace( '/', File.separatorChar );\n \n-        File relatedPom = new File( pomFile.getParentFile(), relPath );\n+        File relatedPom = new File( getFile().getParentFile(), relPath );\n \n         if ( relatedPom.isDirectory() )\n         {\n@@ -96,8 +75,9 @@ public ModelSource2 getRelatedSource( String relPath )\n         return null;\n     }\n \n+    @Override\n     public URI getLocationURI()\n     {\n-        return pomFile.toURI();\n+        return getFile().toURI();\n     }\n }\ndiff --git a/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelSource.java b/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelSource.java\nindex dc648bfb3..acb4651f8 100644\n--- a/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelSource.java\n+++ b/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelSource.java\n@@ -1,5 +1,7 @@\n package org.apache.maven.model.building;\n \n+import org.apache.maven.building.Source;\n+\n /*\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n@@ -19,8 +21,6 @@\n  * under the License.\n  */\n \n-import java.io.IOException;\n-import java.io.InputStream;\n \n /**\n  * Provides access to the contents of a POM independently of the backing store (e.g. file system, database, memory).\n@@ -30,24 +30,10 @@\n  *\n  * @author Benjamin Bentmann\n  * @see ModelSource2\n+ * @deprecated instead use {@link Source}\n  */\n-public interface ModelSource\n+@Deprecated\n+public interface ModelSource extends org.apache.maven.building.Source\n {\n \n-    /**\n-     * Gets a byte stream to the POM contents. Closing the returned stream is the responsibility of the caller.\n-     *\n-     * @return A byte stream to the POM contents, never {@code null}.\n-     */\n-    InputStream getInputStream()\n-        throws IOException;\n-\n-    /**\n-     * Provides a user-friendly hint about the location of the POM. This could be a local file path, a URI or just an\n-     * empty string. The intention is to assist users during error reporting.\n-     *\n-     * @return A user-friendly hint about the location of the POM, never {@code null}.\n-     */\n-    String getLocation();\n-\n }\ndiff --git a/maven-model-builder/src/main/java/org/apache/maven/model/building/StringModelSource.java b/maven-model-builder/src/main/java/org/apache/maven/model/building/StringModelSource.java\nindex edc4d3142..1d8406f4c 100644\n--- a/maven-model-builder/src/main/java/org/apache/maven/model/building/StringModelSource.java\n+++ b/maven-model-builder/src/main/java/org/apache/maven/model/building/StringModelSource.java\n@@ -1,5 +1,7 @@\n package org.apache.maven.model.building;\n \n+import org.apache.maven.building.StringSource;\n+\n /*\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n@@ -19,23 +21,19 @@\n  * under the License.\n  */\n \n-import java.io.ByteArrayInputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n \n /**\n  * Wraps an ordinary {@link CharSequence} as a model source.\n  *\n  * @author Benjamin Bentmann\n+ * \n+ * @deprecated instead use {@link StringSource}\n  */\n-public class StringModelSource\n+@Deprecated\n+public class StringModelSource extends org.apache.maven.building.StringSource\n     implements ModelSource\n {\n \n-    private String pom;\n-\n-    private String location;\n-\n     /**\n      * Creates a new model source backed by the specified string.\n      *\n@@ -54,35 +52,6 @@ public StringModelSource( CharSequence pom )\n      */\n     public StringModelSource( CharSequence pom, String location )\n     {\n-        this.pom = ( pom != null ) ? pom.toString() : \"\";\n-        this.location = ( location != null ) ? location : \"(memory)\";\n-    }\n-\n-    public InputStream getInputStream()\n-        throws IOException\n-    {\n-        return new ByteArrayInputStream( pom.getBytes( \"UTF-8\" ) );\n+        super( pom, location );\n     }\n-\n-    public String getLocation()\n-    {\n-        return location;\n-    }\n-\n-    /**\n-     * Gets the character sequence of this model source.\n-     *\n-     * @return The underlying character stream, never {@code null}.\n-     */\n-    public String getModel()\n-    {\n-        return pom;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return getLocation();\n-    }\n-\n }\ndiff --git a/maven-model-builder/src/main/java/org/apache/maven/model/building/UrlModelSource.java b/maven-model-builder/src/main/java/org/apache/maven/model/building/UrlModelSource.java\nindex 07058b3a0..6ed25ed12 100644\n--- a/maven-model-builder/src/main/java/org/apache/maven/model/building/UrlModelSource.java\n+++ b/maven-model-builder/src/main/java/org/apache/maven/model/building/UrlModelSource.java\n@@ -19,21 +19,21 @@\n  * under the License.\n  */\n \n-import java.io.IOException;\n-import java.io.InputStream;\n import java.net.URL;\n \n+import org.apache.maven.building.UrlSource;\n+\n /**\n  * Wraps an ordinary {@link URL} as a model source.\n  *\n  * @author Benjamin Bentmann\n+ * \n+ * @deprecated instead use {@link UrlSource}\n  */\n-public class UrlModelSource\n+@Deprecated\n+public class UrlModelSource extends org.apache.maven.building.UrlSource\n     implements ModelSource\n {\n-\n-    private URL pomUrl;\n-\n     /**\n      * Creates a new model source backed by the specified URL.\n      *\n@@ -41,38 +41,6 @@ public class UrlModelSource\n      */\n     public UrlModelSource( URL pomUrl )\n     {\n-        if ( pomUrl == null )\n-        {\n-            throw new IllegalArgumentException( \"no POM URL specified\" );\n-        }\n-        this.pomUrl = pomUrl;\n-    }\n-\n-    public InputStream getInputStream()\n-        throws IOException\n-    {\n-        return pomUrl.openStream();\n+        super( pomUrl );\n     }\n-\n-    public String getLocation()\n-    {\n-        return pomUrl.toString();\n-    }\n-\n-    /**\n-     * Gets the POM URL of this model source.\n-     *\n-     * @return The underlying POM URL, never {@code null}.\n-     */\n-    public URL getPomUrl()\n-    {\n-        return pomUrl;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return getLocation();\n-    }\n-\n }\ndiff --git a/maven-settings-builder/pom.xml b/maven-settings-builder/pom.xml\nindex 14cdeb31d..2d109f4cb 100644\n--- a/maven-settings-builder/pom.xml\n+++ b/maven-settings-builder/pom.xml\n@@ -40,6 +40,11 @@ under the License.\n   </scm>\n \n   <dependencies>\n+    <dependency>\n+      <groupId>org.apache.maven</groupId>\n+      <artifactId>maven-builder-support</artifactId>\n+    </dependency>\n+  \n     <dependency>\n       <groupId>org.codehaus.plexus</groupId>\n       <artifactId>plexus-utils</artifactId>\ndiff --git a/maven-settings-builder/src/main/java/org/apache/maven/settings/building/FileSettingsSource.java b/maven-settings-builder/src/main/java/org/apache/maven/settings/building/FileSettingsSource.java\nindex a821e0883..3c2d32acb 100644\n--- a/maven-settings-builder/src/main/java/org/apache/maven/settings/building/FileSettingsSource.java\n+++ b/maven-settings-builder/src/main/java/org/apache/maven/settings/building/FileSettingsSource.java\n@@ -20,21 +20,21 @@\n  */\n \n import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n+\n+import org.apache.maven.building.FileSource;\n \n /**\n  * Wraps an ordinary {@link File} as a settings source.\n  *\n  * @author Benjamin Bentmann\n+ * \n+ * @deprecated instead use {@link FileSource}\n  */\n-public class FileSettingsSource\n+@Deprecated\n+public class FileSettingsSource extends FileSource\n     implements SettingsSource\n {\n \n-    private File settingsFile;\n-\n     /**\n      * Creates a new settings source backed by the specified file.\n      *\n@@ -42,38 +42,18 @@ public class FileSettingsSource\n      */\n     public FileSettingsSource( File settingsFile )\n     {\n-        if ( settingsFile == null )\n-        {\n-            throw new IllegalArgumentException( \"no settings file specified\" );\n-        }\n-        this.settingsFile = settingsFile.getAbsoluteFile();\n-    }\n-\n-    public InputStream getInputStream()\n-        throws IOException\n-    {\n-        return new FileInputStream( settingsFile );\n-    }\n-\n-    public String getLocation()\n-    {\n-        return settingsFile.getPath();\n+        super( settingsFile );\n     }\n \n     /**\n      * Gets the settings file of this model source.\n      *\n      * @return The underlying settings file, never {@code null}.\n+     * @deprecated instead use {@link #getFile()}\n      */\n+    @Deprecated\n     public File getSettingsFile()\n     {\n-        return settingsFile;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return getLocation();\n+        return getFile();\n     }\n-\n }\ndiff --git a/maven-settings-builder/src/main/java/org/apache/maven/settings/building/SettingsSource.java b/maven-settings-builder/src/main/java/org/apache/maven/settings/building/SettingsSource.java\nindex 3297ab43a..413a3570a 100644\n--- a/maven-settings-builder/src/main/java/org/apache/maven/settings/building/SettingsSource.java\n+++ b/maven-settings-builder/src/main/java/org/apache/maven/settings/building/SettingsSource.java\n@@ -19,32 +19,17 @@\n  * under the License.\n  */\n \n-import java.io.IOException;\n-import java.io.InputStream;\n+import org.apache.maven.building.Source;\n \n /**\n  * Provides access to the contents of settings independently of the backing store (e.g. file system, database, memory).\n  *\n  * @author Benjamin Bentmann\n+ * \n+ * @deprecated instead use {@link Source}\n  */\n-public interface SettingsSource\n+@Deprecated\n+public interface SettingsSource extends Source\n {\n \n-    /**\n-     * Gets a byte stream to the settings contents. Closing the returned stream is the responsibility of the caller.\n-     * Note that each invocation of this method returns a new/fresh stream which represents the entire contents.\n-     *\n-     * @return A byte stream to the settings contents, never {@code null}.\n-     */\n-    InputStream getInputStream()\n-        throws IOException;\n-\n-    /**\n-     * Provides a user-friendly hint about the location of the settings. This could be a local file path, a URI or just\n-     * an empty string. The intention is to assist users during error reporting.\n-     *\n-     * @return A user-friendly hint about the location of the settings, never {@code null}.\n-     */\n-    String getLocation();\n-\n }\ndiff --git a/maven-settings-builder/src/main/java/org/apache/maven/settings/building/StringSettingsSource.java b/maven-settings-builder/src/main/java/org/apache/maven/settings/building/StringSettingsSource.java\nindex 5136f1bb2..dbe975806 100644\n--- a/maven-settings-builder/src/main/java/org/apache/maven/settings/building/StringSettingsSource.java\n+++ b/maven-settings-builder/src/main/java/org/apache/maven/settings/building/StringSettingsSource.java\n@@ -19,23 +19,20 @@\n  * under the License.\n  */\n \n-import java.io.ByteArrayInputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n+import org.apache.maven.building.StringSource;\n \n /**\n  * Wraps an ordinary {@link CharSequence} as a settings source.\n  *\n  * @author Benjamin Bentmann\n+ * \n+ * @deprecated instead use {@link StringSource}\n  */\n-public class StringSettingsSource\n+@Deprecated\n+public class StringSettingsSource extends StringSource\n     implements SettingsSource\n {\n \n-    private String settings;\n-\n-    private String location;\n-\n     /**\n      * Creates a new settings source backed by the specified string.\n      *\n@@ -54,35 +51,19 @@ public StringSettingsSource( CharSequence settings )\n      */\n     public StringSettingsSource( CharSequence settings, String location )\n     {\n-        this.settings = ( settings != null ) ? settings.toString() : \"\";\n-        this.location = ( location != null ) ? location : \"(memory)\";\n-    }\n-\n-    public InputStream getInputStream()\n-        throws IOException\n-    {\n-        return new ByteArrayInputStream( settings.getBytes( \"UTF-8\" ) );\n-    }\n-\n-    public String getLocation()\n-    {\n-        return location;\n+        super( settings, location );\n     }\n \n     /**\n      * Gets the character sequence of this settings source.\n      *\n      * @return The underlying character stream, never {@code null}.\n+     * @deprecated instead use {@link #getContent()}\n      */\n+ ",
    "Allow rocksdb . config . setter to be specified as a String or Class instance .": "diff --git a/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java b/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java\nindex deb5e8927a..4238490a8b 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java\n@@ -227,7 +227,7 @@ public class StreamsConfig extends AbstractConfig {\n \n     /** {@code rocksdb.config.setter} */\n     public static final String ROCKSDB_CONFIG_SETTER_CLASS_CONFIG = \"rocksdb.config.setter\";\n-    private static final String ROCKSDB_CONFIG_SETTER_CLASS_DOC = \"A Rocks DB config setter class that implements the <code>RocksDBConfigSetter</code> interface\";\n+    private static final String ROCKSDB_CONFIG_SETTER_CLASS_DOC = \"A Rocks DB config setter class or class name that implements the <code>RocksDBConfigSetter</code> interface\";\n \n     /** {@code security.protocol} */\n     public static final String SECURITY_PROTOCOL_CONFIG = CommonClientConfigs.SECURITY_PROTOCOL_CONFIG;\ndiff --git a/streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java b/streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java\nindex a01de775ca..7a0b6ee5ee 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java\n@@ -16,6 +16,7 @@\n  */\n package org.apache.kafka.streams.state.internals;\n \n+import org.apache.kafka.common.config.ConfigDef;\n import org.apache.kafka.common.serialization.Serde;\n import org.apache.kafka.common.utils.Bytes;\n import org.apache.kafka.common.utils.Utils;\n@@ -142,7 +143,12 @@ public class RocksDBStore<K, V> implements KeyValueStore<K, V> {\n         fOptions.setWaitForFlush(true);\n \n         final Map<String, Object> configs = context.appConfigs();\n-        final Class<RocksDBConfigSetter> configSetterClass = (Class<RocksDBConfigSetter>) configs.get(StreamsConfig.ROCKSDB_CONFIG_SETTER_CLASS_CONFIG);\n+        final Object configSetterValue = configs.get(StreamsConfig.ROCKSDB_CONFIG_SETTER_CLASS_CONFIG);\n+        final Class<RocksDBConfigSetter> configSetterClass = (Class<RocksDBConfigSetter>) ConfigDef.parseType(\n+                StreamsConfig.ROCKSDB_CONFIG_SETTER_CLASS_CONFIG,\n+                configSetterValue,\n+                ConfigDef.Type.CLASS);\n+\n         if (configSetterClass != null) {\n             final RocksDBConfigSetter configSetter = Utils.newInstance(configSetterClass);\n             configSetter.setConfig(name, options, configs);\ndiff --git a/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBStoreTest.java b/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBStoreTest.java\nnew file mode 100644\nindex 0000000000..c43a39a0a9\n--- /dev/null\n+++ b/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBStoreTest.java\n@@ -0,0 +1,103 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.streams.state.internals;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.kafka.common.serialization.Serde;\n+import org.apache.kafka.common.serialization.Serdes;\n+import org.apache.kafka.streams.StreamsConfig;\n+import org.apache.kafka.streams.processor.internals.RecordCollector;\n+import org.apache.kafka.streams.state.RocksDBConfigSetter;\n+import org.apache.kafka.test.MockProcessorContext;\n+import org.apache.kafka.test.TestUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.rocksdb.Options;\n+\n+public class RocksDBStoreTest {\n+    private final File tempDir = TestUtils.tempDirectory();\n+\n+    private RocksDBStore<String, String> subject;\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        subject = new RocksDBStore<>(\"test\", Serdes.String(), Serdes.String());\n+    }\n+\n+    @After\n+    public void tearDown() throws Exception {\n+        subject.close();\n+    }\n+\n+    @Test\n+    public void canSpecifyConfigSetterAsClass() throws Exception {\n+        final Map<String, Object> configs = new HashMap<>();\n+        configs.put(StreamsConfig.ROCKSDB_CONFIG_SETTER_CLASS_CONFIG, MockRocksDbConfigSetter.class);\n+        MockRocksDbConfigSetter.called = false;\n+        subject.openDB(new ConfigurableProcessorContext(tempDir, Serdes.String(), Serdes.String(),\n+                null, null, configs));\n+\n+        assertTrue(MockRocksDbConfigSetter.called);\n+    }\n+\n+    @Test\n+    public void canSpecifyConfigSetterAsString() throws Exception {\n+        final Map<String, Object> configs = new HashMap<>();\n+        configs.put(StreamsConfig.ROCKSDB_CONFIG_SETTER_CLASS_CONFIG, MockRocksDbConfigSetter.class.getName());\n+        MockRocksDbConfigSetter.called = false;\n+        subject.openDB(new ConfigurableProcessorContext(tempDir, Serdes.String(), Serdes.String(),\n+                null, null, configs));\n+\n+        assertTrue(MockRocksDbConfigSetter.called);\n+    }\n+\n+\n+    public static class MockRocksDbConfigSetter implements RocksDBConfigSetter {\n+        static boolean called;\n+\n+        @Override\n+        public void setConfig(final String storeName, final Options options, final Map<String, Object> configs) {\n+            called = true;\n+        }\n+    }\n+\n+\n+    private static class ConfigurableProcessorContext extends MockProcessorContext {\n+        final Map<String, Object> configs;\n+\n+        ConfigurableProcessorContext(final File stateDir,\n+                                     final Serde<?> keySerde,\n+                                     final Serde<?> valSerde,\n+                                     final RecordCollector collector,\n+                                     final ThreadCache cache,\n+                                     final Map<String, Object> configs) {\n+            super(stateDir, keySerde, valSerde, collector, cache);\n+            this.configs = configs;\n+        }\n+\n+        @Override\n+        public Map<String, Object> appConfigs() {\n+            return configs;\n+        }\n+    }\n+}",
    "remove unnecessary line": "diff --git a/src/com/ichi2/anki/StudyOptions.java b/src/com/ichi2/anki/StudyOptions.java\nindex c643511711..1f9fe46cc2 100644\n--- a/src/com/ichi2/anki/StudyOptions.java\n+++ b/src/com/ichi2/anki/StudyOptions.java\n@@ -1689,7 +1689,6 @@ public class StudyOptions extends Activity {\n     private void reloadDeck() {\n     \tDeck deck = AnkiDroidApp.deck(); \n     \tif (deck != null){\n-\t\tallTags = new String[0];\n     \t\tdeck.closeDeck();\n     \t\tAnkiDroidApp.setDeck(null);\n     \t}",
    "Create databaseManager before setup security module": "diff --git a/community/neo4j/src/main/java/org/neo4j/graphdb/facade/GraphDatabaseFacadeFactory.java b/community/neo4j/src/main/java/org/neo4j/graphdb/facade/GraphDatabaseFacadeFactory.java\nindex 567f00b8617..76437db077d 100644\n--- a/community/neo4j/src/main/java/org/neo4j/graphdb/facade/GraphDatabaseFacadeFactory.java\n+++ b/community/neo4j/src/main/java/org/neo4j/graphdb/facade/GraphDatabaseFacadeFactory.java\n@@ -166,13 +166,14 @@ public class GraphDatabaseFacadeFactory\n \n         Procedures procedures = setupProcedures( platform, edition, graphDatabaseFacade );\n         platform.dependencies.satisfyDependency( new NonTransactionalDbmsOperations( procedures ) );\n-        edition.setupSecurityModule( platform, procedures );\n \n         Logger msgLog = platform.logging.getInternalLog( getClass() ).infoLogger();\n         DatabaseManager databaseManager = edition.createDatabaseManager( graphDatabaseFacade, platform, edition, procedures, msgLog );\n         platform.life.add( databaseManager );\n         platform.dependencies.satisfyDependency( databaseManager );\n \n+        edition.setupSecurityModule( platform, procedures );\n+\n         platform.life.add( platform.globalKernelExtensions );\n         platform.life.add( createBoltServer( platform, edition, databaseManager ) );\n         platform.life.add( new VmPauseMonitorComponent( config, platform.logging.getInternalLog( VmPauseMonitorComponent.class ), platform.jobScheduler ) );",
    "Updating readme after publication on maven central": "diff --git a/README.md b/README.md\nindex 6e350f9..e79326a 100644\n--- a/README.md\n+++ b/README.md\n@@ -16,12 +16,10 @@ Just add the dependency to your maven project:\n <dependency>\n   <groupId>com.vdurmont<groupId>\n   <artifactId>emoji-java<artifactId>\n-  <version>1.0</version>\n+  <version>1.0.0</version>\n </dependency>\n ```\n \n-**The library is currently being published to the maven central repository. It may take a few days before the maven dependency is available.**\n-\n You can also download the project, build it with `mvn clean install` and add the generated jar to your buildpath.\n \n ## How to use it?",
    "Add check if trade have been dispute to protocol classes": "diff --git a/core/src/main/java/bisq/core/trade/protocol/BuyerAsMakerProtocol.java b/core/src/main/java/bisq/core/trade/protocol/BuyerAsMakerProtocol.java\nindex ec5d554793..19dde182b7 100644\n--- a/core/src/main/java/bisq/core/trade/protocol/BuyerAsMakerProtocol.java\n+++ b/core/src/main/java/bisq/core/trade/protocol/BuyerAsMakerProtocol.java\n@@ -212,6 +212,10 @@ public class BuyerAsMakerProtocol extends TradeProtocol implements BuyerProtocol\n     // User clicked the \"bank transfer started\" button\n     @Override\n     public void onFiatPaymentStarted(ResultHandler resultHandler, ErrorMessageHandler errorMessageHandler) {\n+        if (wasDisputed(errorMessageHandler)) {\n+            return;\n+        }\n+\n         if (trade.isDepositConfirmed() && !trade.isFiatSent()) {\n             buyerAsMakerTrade.setState(Trade.State.BUYER_CONFIRMED_IN_UI_FIAT_PAYMENT_INITIATED);\n             TradeTaskRunner taskRunner = new TradeTaskRunner(buyerAsMakerTrade,\ndiff --git a/core/src/main/java/bisq/core/trade/protocol/BuyerAsTakerProtocol.java b/core/src/main/java/bisq/core/trade/protocol/BuyerAsTakerProtocol.java\nindex 6665c001ec..5e4c17d256 100644\n--- a/core/src/main/java/bisq/core/trade/protocol/BuyerAsTakerProtocol.java\n+++ b/core/src/main/java/bisq/core/trade/protocol/BuyerAsTakerProtocol.java\n@@ -237,6 +237,10 @@ public class BuyerAsTakerProtocol extends TradeProtocol implements BuyerProtocol\n     // User clicked the \"bank transfer started\" button\n     @Override\n     public void onFiatPaymentStarted(ResultHandler resultHandler, ErrorMessageHandler errorMessageHandler) {\n+        if (wasDisputed(errorMessageHandler)) {\n+            return;\n+        }\n+\n         if (!trade.isFiatSent()) {\n             buyerAsTakerTrade.setState(Trade.State.BUYER_CONFIRMED_IN_UI_FIAT_PAYMENT_INITIATED);\n \ndiff --git a/core/src/main/java/bisq/core/trade/protocol/SellerAsMakerProtocol.java b/core/src/main/java/bisq/core/trade/protocol/SellerAsMakerProtocol.java\nindex 3a5ae4df9b..c7620fccf8 100644\n--- a/core/src/main/java/bisq/core/trade/protocol/SellerAsMakerProtocol.java\n+++ b/core/src/main/java/bisq/core/trade/protocol/SellerAsMakerProtocol.java\n@@ -204,6 +204,10 @@ public class SellerAsMakerProtocol extends TradeProtocol implements SellerProtoc\n     // User clicked the \"bank transfer received\" button, so we release the funds for payout\n     @Override\n     public void onFiatPaymentReceived(ResultHandler resultHandler, ErrorMessageHandler errorMessageHandler) {\n+        if (wasDisputed(errorMessageHandler)) {\n+            return;\n+        }\n+\n         if (trade.getPayoutTx() == null) {\n             sellerAsMakerTrade.setState(Trade.State.SELLER_CONFIRMED_IN_UI_FIAT_PAYMENT_RECEIPT);\n             TradeTaskRunner taskRunner = new TradeTaskRunner(sellerAsMakerTrade,\ndiff --git a/core/src/main/java/bisq/core/trade/protocol/SellerAsTakerProtocol.java b/core/src/main/java/bisq/core/trade/protocol/SellerAsTakerProtocol.java\nindex fd42d66b7c..6f2f9815c1 100644\n--- a/core/src/main/java/bisq/core/trade/protocol/SellerAsTakerProtocol.java\n+++ b/core/src/main/java/bisq/core/trade/protocol/SellerAsTakerProtocol.java\n@@ -196,6 +196,10 @@ public class SellerAsTakerProtocol extends TradeProtocol implements SellerProtoc\n     // User clicked the \"bank transfer received\" button, so we release the funds for payout\n     @Override\n     public void onFiatPaymentReceived(ResultHandler resultHandler, ErrorMessageHandler errorMessageHandler) {\n+        if (wasDisputed(errorMessageHandler)) {\n+            return;\n+        }\n+\n         if (trade.getPayoutTx() == null) {\n             sellerAsTakerTrade.setState(Trade.State.SELLER_CONFIRMED_IN_UI_FIAT_PAYMENT_RECEIPT);\n             TradeTaskRunner taskRunner = new TradeTaskRunner(sellerAsTakerTrade,\ndiff --git a/core/src/main/java/bisq/core/trade/protocol/TradeProtocol.java b/core/src/main/java/bisq/core/trade/protocol/TradeProtocol.java\nindex 4cf78045db..6c3d29b5d8 100644\n--- a/core/src/main/java/bisq/core/trade/protocol/TradeProtocol.java\n+++ b/core/src/main/java/bisq/core/trade/protocol/TradeProtocol.java\n@@ -345,6 +345,16 @@ public abstract class TradeProtocol {\n         cleanup();\n     }\n \n+    protected boolean wasDisputed(ErrorMessageHandler errorMessageHandler) {\n+        if (trade.getDisputeState() != Trade.DisputeState.NO_DISPUTE) {\n+            String msg = \"Dispute have been opened once. We do not allow anymore to confirm payment by button click.\";\n+            log.error(msg);\n+            errorMessageHandler.handleErrorMessage(msg);\n+            return true;\n+        }\n+        return false;\n+    }\n+\n     private void sendAckMessage(@Nullable TradeMessage tradeMessage, boolean result, @Nullable String errorMessage) {\n         // We complete at initial protocol setup with the setup listener tasks.\n         // Other cases are if we start from an UI event the task runner (payment started, confirmed).\ndiff --git a/desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java b/desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java\nindex fb03b413f8..6d1a288f11 100644\n--- a/desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java\n+++ b/desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java\n@@ -185,7 +185,7 @@ public class PendingTradesDataModel extends ActivatableDataModel {\n     }\n \n     public void onPaymentStarted(ResultHandler resultHandler, ErrorMessageHandler errorMessageHandler) {\n-        final Trade trade = getTrade();\n+        Trade trade = getTrade();\n         checkNotNull(trade, \"trade must not be null\");\n         checkArgument(trade instanceof BuyerTrade, \"Check failed: trade instanceof BuyerTrade\");\n         ((BuyerTrade) trade).onFiatPaymentStarted(resultHandler, errorMessageHandler);",
    "update killbill - server - update - list . properties for release .": "diff --git a/server/src/main/resources/update-checker/killbill-server-update-list.properties b/server/src/main/resources/update-checker/killbill-server-update-list.properties\nindex ebfb4e062a..f5aa67e83e 100644\n--- a/server/src/main/resources/update-checker/killbill-server-update-list.properties\n+++ b/server/src/main/resources/update-checker/killbill-server-update-list.properties\n@@ -1,71 +1,81 @@\n ## Top level keys\n # general.notice = This notice should rarely, if ever, be used as everyone will see it\n \n-## 0.8.7 -- latest release\n-0.8.7.updates           =\n-0.8.7.notices           = This is the latest GA release.\n+## 0.8.9 -- latest release\n+0.8.9.updates           =\n+0.8.9.notices           = This is the latest GA release.\n+0.8.9.release-notes     = http://kill-bill.org\n+\n+## 0.8.8\n+0.8.8.updates           = 0.8.9\n+0.8.8.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n+0.8.8.release-notes     = http://kill-bill.org\n+\n+## 0.8.7\n+0.8.7.updates           = 0.8.9\n+0.8.7.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.8.7.release-notes     = http://kill-bill.org\n \n ## 0.8.6\n-0.8.6.updates           = 0.8.7\n-0.8.6.notices           = We recommend upgrading to 0.8.7, our latest GA release.\n+0.8.6.updates           = 0.8.9\n+0.8.6.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.8.6.release-notes     = http://kill-bill.org\n \n ## 0.8.5\n-0.8.5.updates           = 0.8.7\n-0.8.5.notices           = We recommend upgrading to 0.8.7, our latest GA release.\n+0.8.5.updates           = 0.8.9\n+0.8.5.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.8.5.release-notes     = http://kill-bill.org\n \n ## 0.8.4\n-0.8.4.updates           = 0.8.7\n-0.8.4.notices           = We recommend upgrading to 0.8.7, our latest GA release.\n+0.8.4.updates           = 0.8.9\n+0.8.4.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.8.4.release-notes     = http://kill-bill.org\n \n ## 0.8.3\n-0.8.3.updates           = 0.8.7\n-0.8.3.notices           = We recommend upgrading to 0.8.7, our latest GA release.\n+0.8.3.updates           = 0.8.9\n+0.8.3.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.8.3.release-notes     = http://kill-bill.org\n \n ## 0.8.2\n-0.8.2.updates           = 0.8.7\n-0.8.2.notices           = We recommend upgrading to 0.8.7, our latest GA release.\n+0.8.2.updates           = 0.8.9\n+0.8.2.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.8.2.release-notes     = http://kill-bill.org\n \n ## 0.8.1\n-0.8.1.updates           = 0.8.7\n-0.8.1.notices           = We recommend upgrading to 0.8.7, our latest GA release.\n+0.8.1.updates           = 0.8.9\n+0.8.1.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.8.1.release-notes     = http://kill-bill.org\n \n ## 0.8.0\n-0.8.0.updates           = 0.8.7\n-0.8.0.notices           = We recommend upgrading to 0.8.7, our latest GA release.\n+0.8.0.updates           = 0.8.9\n+0.8.0.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.8.0.release-notes     = http://kill-bill.org\n \n ### 0.7.x series ###\n \n ## 0.7.2\n 0.7.2.updates           =\n-0.7.2.notices           = We recommend upgrading to 0.8.7, our latest GA release.\n+0.7.2.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.7.2.release-notes     = http://kill-bill.org\n \n ## 0.7.1\n 0.7.1.updates           = 0.7.2\n-0.7.1.notices           = We recommend upgrading to 0.8.7, our latest GA release.\n+0.7.1.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.7.1.release-notes     = http://kill-bill.org\n \n ## 0.7.0\n 0.7.0.updates           = 0.7.2\n-0.7.0.notices           = We recommend upgrading to 0.8.7, our latest GA release.\n+0.7.0.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.7.0.release-notes     = http://kill-bill.org\n \n ### 0.6.x series ###\n \n ## 0.6.17\n 0.6.17.updates           =\n-0.6.17.notices           = We recommend upgrading to 0.8.7, our latest GA release.\n+0.6.17.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.6.17.release-notes     = http://kill-bill.org\n \n ## 0.6.16\n 0.6.16.updates           = 0.6.17\n-0.6.16.notices           = We recommend upgrading to 0.8.7, our latest GA release.\n+0.6.16.notices           = We recommend upgrading to 0.8.9, our latest GA release.\n 0.6.16.release-notes     = http://kill-bill.org",
    "Remove unused imports in test code": "diff --git a/enterprise/users/src/test/java/io/crate/auth/AuthenticationIntegrationTest.java b/enterprise/users/src/test/java/io/crate/auth/AuthenticationIntegrationTest.java\nindex 616040ceb3..377c4f4e48 100644\n--- a/enterprise/users/src/test/java/io/crate/auth/AuthenticationIntegrationTest.java\n+++ b/enterprise/users/src/test/java/io/crate/auth/AuthenticationIntegrationTest.java\n@@ -19,7 +19,6 @@\n package io.crate.auth;\n \n import io.crate.integrationtests.SQLTransportIntegrationTest;\n-import io.crate.protocols.postgres.PGErrorStatus;\n import io.crate.testing.UseJdbc;\n import io.netty.handler.codec.http.HttpHeaderNames;\n import org.apache.http.client.methods.CloseableHttpResponse;\n@@ -39,11 +38,9 @@ import java.sql.SQLException;\n import java.util.Locale;\n import java.util.Properties;\n \n-import static io.crate.protocols.postgres.PGErrorStatus.INTERNAL_ERROR;\n import static io.crate.protocols.postgres.PGErrorStatus.INVALID_AUTHORIZATION_SPECIFICATION;\n import static io.crate.testing.Asserts.assertThrows;\n import static io.crate.testing.SQLErrorMatcher.isPGError;\n-import static io.crate.testing.SQLErrorMatcher.isSQLError;\n import static org.hamcrest.Matchers.containsString;\n import static org.hamcrest.Matchers.is;\n import static org.hamcrest.Matchers.notNullValue;\ndiff --git a/libs/dex/src/test/java/io/crate/data/AsyncFlatMapBatchIteratorTest.java b/libs/dex/src/test/java/io/crate/data/AsyncFlatMapBatchIteratorTest.java\nindex a2bc74643c..e589cc4df1 100644\n--- a/libs/dex/src/test/java/io/crate/data/AsyncFlatMapBatchIteratorTest.java\n+++ b/libs/dex/src/test/java/io/crate/data/AsyncFlatMapBatchIteratorTest.java\n@@ -26,13 +26,11 @@ import static org.hamcrest.Matchers.contains;\n import static org.junit.Assert.assertThat;\n \n import java.util.Arrays;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.TimeUnit;\n-import java.util.function.Function;\n import java.util.stream.Collectors;\n \n import org.junit.Test;\ndiff --git a/libs/sql-parser/src/test/java/io/crate/sql/tree/JoinUsingTests.java b/libs/sql-parser/src/test/java/io/crate/sql/tree/JoinUsingTests.java\nindex 75abac79a0..308f1a29e8 100644\n--- a/libs/sql-parser/src/test/java/io/crate/sql/tree/JoinUsingTests.java\n+++ b/libs/sql-parser/src/test/java/io/crate/sql/tree/JoinUsingTests.java\n@@ -27,7 +27,6 @@ import static org.junit.Assert.assertTrue;\n \n import java.util.ArrayList;\n import java.util.List;\n-import java.util.concurrent.ThreadLocalRandom;\n \n public class JoinUsingTests {\n \ndiff --git a/plugins/azure-discovery/src/test/java/io/crate/azure/AzureSimpleTests.java b/plugins/azure-discovery/src/test/java/io/crate/azure/AzureSimpleTests.java\nindex 842af70a5d..9b946132a0 100644\n--- a/plugins/azure-discovery/src/test/java/io/crate/azure/AzureSimpleTests.java\n+++ b/plugins/azure-discovery/src/test/java/io/crate/azure/AzureSimpleTests.java\n@@ -31,7 +31,6 @@ import org.junit.Test;\n import java.io.IOException;\n import java.util.Arrays;\n import java.util.Collection;\n-import java.util.Collections;\n \n import static org.hamcrest.Matchers.notNullValue;\n \ndiff --git a/server/src/main/java/io/crate/execution/dsl/phases/NodeOperationTree.java b/server/src/main/java/io/crate/execution/dsl/phases/NodeOperationTree.java\nindex 7f9c512302..fe13169ab0 100644\n--- a/server/src/main/java/io/crate/execution/dsl/phases/NodeOperationTree.java\n+++ b/server/src/main/java/io/crate/execution/dsl/phases/NodeOperationTree.java\n@@ -22,8 +22,6 @@\n \n package io.crate.execution.dsl.phases;\n \n-import io.crate.execution.dsl.phases.ExecutionPhase;\n-import io.crate.execution.dsl.phases.NodeOperation;\n \n import java.util.Collection;\n \ndiff --git a/server/src/main/java/io/crate/expression/reference/GatheringRefResolver.java b/server/src/main/java/io/crate/expression/reference/GatheringRefResolver.java\nindex f6b529595d..358ce76fc2 100644\n--- a/server/src/main/java/io/crate/expression/reference/GatheringRefResolver.java\n+++ b/server/src/main/java/io/crate/expression/reference/GatheringRefResolver.java\n@@ -24,7 +24,6 @@ package io.crate.expression.reference;\n \n import io.crate.data.Input;\n import io.crate.metadata.Reference;\n-import io.crate.expression.reference.ReferenceResolver;\n \n import java.util.function.Consumer;\n \ndiff --git a/server/src/main/java/org/elasticsearch/cluster/coordination/PendingClusterStateStats.java b/server/src/main/java/org/elasticsearch/cluster/coordination/PendingClusterStateStats.java\nindex e8f0fc2630..afef402951 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/coordination/PendingClusterStateStats.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/coordination/PendingClusterStateStats.java\n@@ -22,7 +22,6 @@ package org.elasticsearch.cluster.coordination;\n import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n import org.elasticsearch.common.io.stream.Writeable;\n-import org.elasticsearch.common.xcontent.ToXContent.Params;\n import org.elasticsearch.common.xcontent.ToXContentFragment;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n \ndiff --git a/server/src/main/java/org/elasticsearch/cluster/routing/allocation/RerouteExplanation.java b/server/src/main/java/org/elasticsearch/cluster/routing/allocation/RerouteExplanation.java\nindex 761096907d..bf0819cdf8 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/routing/allocation/RerouteExplanation.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/routing/allocation/RerouteExplanation.java\n@@ -23,7 +23,6 @@ import org.elasticsearch.cluster.routing.allocation.command.AllocationCommand;\n import org.elasticsearch.cluster.routing.allocation.decider.Decision;\n import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n-import org.elasticsearch.common.xcontent.ToXContent.Params;\n import org.elasticsearch.common.xcontent.ToXContentObject;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n \ndiff --git a/server/src/main/java/org/elasticsearch/cluster/routing/allocation/RoutingExplanations.java b/server/src/main/java/org/elasticsearch/cluster/routing/allocation/RoutingExplanations.java\nindex fe97b52429..728759df42 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/routing/allocation/RoutingExplanations.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/routing/allocation/RoutingExplanations.java\n@@ -22,7 +22,6 @@ package org.elasticsearch.cluster.routing.allocation;\n import org.elasticsearch.cluster.routing.allocation.decider.Decision;\n import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n-import org.elasticsearch.common.xcontent.ToXContent.Params;\n import org.elasticsearch.common.xcontent.ToXContentFragment;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n \ndiff --git a/server/src/main/java/org/elasticsearch/cluster/service/MasterService.java b/server/src/main/java/org/elasticsearch/cluster/service/MasterService.java\nindex aea3022eba..053cd979a9 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/service/MasterService.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/service/MasterService.java\n@@ -68,7 +68,6 @@ import org.elasticsearch.threadpool.ThreadPool;\n \n import io.crate.common.collections.Lists2;\n import io.crate.common.unit.TimeValue;\n-import static org.elasticsearch.common.util.concurrent.EsExecutors.daemonThreadFactory;\n \n public class MasterService extends AbstractLifecycleComponent {\n \ndiff --git a/server/src/main/java/org/elasticsearch/index/cache/query/DisabledQueryCache.java b/server/src/main/java/org/elasticsearch/index/cache/query/DisabledQueryCache.java\nindex df5158b6d7..d7c610dcc6 100644\n--- a/server/src/main/java/org/elasticsearch/index/cache/query/DisabledQueryCache.java\n+++ b/server/src/main/java/org/elasticsearch/index/cache/query/DisabledQueryCache.java\n@@ -23,7 +23,6 @@ import org.apache.lucene.search.QueryCachingPolicy;\n import org.apache.lucene.search.Weight;\n import org.elasticsearch.index.AbstractIndexComponent;\n import org.elasticsearch.index.IndexSettings;\n-import org.elasticsearch.index.cache.query.QueryCache;\n \n public class DisabledQueryCache extends AbstractIndexComponent implements QueryCache {\n \ndiff --git a/server/src/main/java/org/elasticsearch/index/cache/query/IndexQueryCache.java b/server/src/main/java/org/elasticsearch/index/cache/query/IndexQueryCache.java\nindex 77a32a6789..0f5597cc9c 100644\n--- a/server/src/main/java/org/elasticsearch/index/cache/query/IndexQueryCache.java\n+++ b/server/src/main/java/org/elasticsearch/index/cache/query/IndexQueryCache.java\n@@ -24,7 +24,6 @@ import org.apache.lucene.search.Weight;\n import org.elasticsearch.ElasticsearchException;\n import org.elasticsearch.index.AbstractIndexComponent;\n import org.elasticsearch.index.IndexSettings;\n-import org.elasticsearch.index.cache.query.QueryCache;\n import org.elasticsearch.indices.IndicesQueryCache;\n \n /**\ndiff --git a/server/src/main/java/org/elasticsearch/index/seqno/RetentionLease.java b/server/src/main/java/org/elasticsearch/index/seqno/RetentionLease.java\nindex c0fcd119c9..60d3b5971d 100644\n--- a/server/src/main/java/org/elasticsearch/index/seqno/RetentionLease.java\n+++ b/server/src/main/java/org/elasticsearch/index/seqno/RetentionLease.java\n@@ -28,7 +28,6 @@ import org.elasticsearch.common.io.stream.StreamOutput;\n import org.elasticsearch.common.io.stream.Writeable;\n import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n import org.elasticsearch.common.xcontent.ToXContentObject;\n-import org.elasticsearch.common.xcontent.ToXContent.Params;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n import org.elasticsearch.common.xcontent.XContentParser;\n \ndiff --git a/server/src/main/java/org/elasticsearch/snapshots/SnapshotId.java b/server/src/main/java/org/elasticsearch/snapshots/SnapshotId.java\nindex b80dfd94d7..3fb5ca8c93 100644\n--- a/server/src/main/java/org/elasticsearch/snapshots/SnapshotId.java\n+++ b/server/src/main/java/org/elasticsearch/snapshots/SnapshotId.java\n@@ -22,7 +22,6 @@ package org.elasticsearch.snapshots;\n import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n import org.elasticsearch.common.io.stream.Writeable;\n-import org.elasticsearch.common.xcontent.ToXContent.Params;\n import org.elasticsearch.common.xcontent.ToXContentObject;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n import org.elasticsearch.common.xcontent.XContentParser;\ndiff --git a/server/src/test/java/io/crate/analyze/CreateAlterTableStatementAnalyzerTest.java b/server/src/test/java/io/crate/analyze/CreateAlterTableStatementAnalyzerTest.java\nindex 38264575aa..d014ff9837 100644\n--- a/server/src/test/java/io/crate/analyze/CreateAlterTableStatementAnalyzerTest.java\n+++ b/server/src/test/java/io/crate/analyze/CreateAlterTableStatementAnalyzerTest.java\n@@ -59,7 +59,6 @@ import org.elasticsearch.index.IndexSettings;\n import org.elasticsearch.index.mapper.MapperService;\n import org.elasticsearch.test.ClusterServiceUtils;\n import org.hamcrest.Matchers;\n-import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.jupiter.api.Assertions;\ndiff --git a/server/src/test/java/io/crate/analyze/DropViewAnalyzerTest.java b/server/src/test/java/io/crate/analyze/DropViewAnalyzerTest.java\nindex 438011d329..23b7c3e438 100644\n--- a/server/src/test/java/io/crate/analyze/DropViewAnalyzerTest.java\n+++ b/server/src/test/java/io/crate/analyze/DropViewAnalyzerTest.java\n@@ -27,7 +27,6 @@ import io.crate.test.integration.CrateDummyClusterServiceUnitTest;\n import io.crate.testing.SQLExecutor;\n import org.junit.Test;\n \n-import static org.hamcrest.Matchers.contains;\n import static org.hamcrest.Matchers.empty;\n import static org.hamcrest.Matchers.is;\n \ndiff --git a/server/src/test/java/io/crate/analyze/SubSelectAnalyzerTest.java b/server/src/test/java/io/crate/analyze/SubSelectAnalyzerTest.java\nindex 7abd6ae806..1003565625 100644\n--- a/server/src/test/java/io/crate/analyze/SubSelectAnalyzerTest.java\n+++ b/server/src/test/java/io/crate/analyze/SubSelectAnalyzerTest.java\n@@ -44,7 +44,6 @@ import static io.crate.testing.SymbolMatchers.isFunction;\n import static io.crate.testing.SymbolMatchers.isLiteral;\n import static io.crate.testing.SymbolMatchers.isReference;\n import static io.crate.testing.TestingHelpers.isSQL;\n-import static io.crate.testing.TestingHelpers.printedTable;\n import static org.hamcrest.Matchers.contains;\n import static org.hamcrest.Matchers.instanceOf;\n import static org.hamcrest.Matchers.is;\ndiff --git a/server/src/test/java/io/crate/analyze/expressions/ExpressionAnalyzerTest.java b/server/src/test/java/io/crate/analyze/expressions/ExpressionAnalyzerTest.java\nindex 6633889956..bac5df09ea 100644\n--- a/server/src/test/java/io/crate/analyze/expressions/ExpressionAnalyzerTest.java\n+++ b/server/src/test/java/io/crate/analyze/expressions/ExpressionAnalyzerTest.java\n@@ -50,7 +50,6 @@ import io.crate.testing.SQLExecutor;\n import io.crate.testing.SqlExpressions;\n import io.crate.testing.T3;\n import io.crate.types.DataTypes;\n-import io.crate.types.StringType;\n import org.joda.time.Period;\n import org.junit.Before;\n import org.junit.Test;\ndiff --git a/server/src/test/java/io/crate/breaker/SizeEstimatorFactoryTest.java b/server/src/test/java/io/crate/breaker/SizeEstimatorFactoryTest.java\nindex bb98f9626e..39ab72cafb 100644\n--- a/server/src/test/java/io/crate/breaker/SizeEstimatorFactoryTest.java\n+++ b/server/src/test/java/io/crate/breaker/SizeEstimatorFactoryTest.java\n@@ -25,7 +25,6 @@ package io.crate.breaker;\n import io.crate.data.RowN;\n import io.crate.types.ArrayType;\n import io.crate.types.DataTypes;\n-import io.crate.types.ObjectType;\n import io.crate.types.RowType;\n \n import org.junit.Test;\ndiff --git a/server/src/test/java/io/crate/execution/ddl/tables/AlterTableOperationTest.java b/server/src/test/java/io/crate/execution/ddl/tables/AlterTableOperationTest.java\nindex 12b701ab0c..65b5ef6aab 100644\n--- a/server/src/test/java/io/crate/execution/ddl/tables/AlterTableOperationTest.java\n+++ b/server/src/test/java/io/crate/execution/ddl/tables/AlterTableOperationTest.java\n@@ -32,9 +32,6 @@ import static org.elasticsearch.cluster.metadata.IndexMetadata.SETTING_BLOCKS_WR\n import static org.elasticsearch.cluster.metadata.IndexMetadata.SETTING_NUMBER_OF_REPLICAS;\n import static org.elasticsearch.cluster.metadata.IndexMetadata.SETTING_NUMBER_OF_SHARDS;\n import static org.elasticsearch.cluster.metadata.IndexMetadata.SETTING_VERSION_CREATED;\n-import static org.hamcrest.Matchers.contains;\n-import static org.hamcrest.Matchers.containsInAnyOrder;\n-import static org.hamcrest.Matchers.is;\n \n public class AlterTableOperationTest extends ESTestCase {\n \ndiff --git a/server/src/test/java/io/crate/execution/engine/collect/CollectTaskTest.java b/server/src/test/java/io/crate/execution/engine/collect/CollectTaskTest.java\nindex d2371fd7ca..f5d26ab0cc 100644\n--- a/server/src/test/java/io/crate/execution/engine/collect/CollectTaskTest.java\n+++ b/server/src/test/java/io/crate/execution/engine/collect/CollectTaskTest.java\n@@ -23,9 +23,7 @@ package io.crate.execution.engine.collect;\n \n import static org.hamcrest.Matchers.is;\n import static org.junit.jupiter.api.Assertions.assertThrows;\n-import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.ArgumentMatchers.anyBoolean;\n-import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\ndiff --git a/server/src/test/java/io/crate/execution/engine/collect/MapSideDataCollectOperationTest.java b/server/src/test/java/io/crate/execution/engine/collect/MapSideDataCollectOperationTest.java\nindex b9dfc4f689..40c361f007 100644\n--- a/server/src/test/java/io/crate/execution/engine/collect/MapSideDataCollectOperationTest.java\n+++ b/server/src/test/java/io/crate/execution/engine/collect/MapSideDataCollectOperationTest.java\n@@ -33,7 +33,6 @@ import io.crate.metadata.CoordinatorTxnCtx;\n import io.crate.test.integration.CrateDummyClusterServiceUnitTest;\n import io.crate.testing.TestingRowConsumer;\n import io.crate.types.DataTypes;\n-import org.elasticsearch.common.settings.Settings;\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.rules.TemporaryFolder;\ndiff --git a/server/src/test/java/io/crate/execution/engine/distribution/DistributingConsumerTest.java b/server/src/test/java/io/crate/execution/engine/distribution/DistributingConsumerTest.java\nindex 39231d668c..5a120ecdb9 100644\n--- a/server/src/test/java/io/crate/execution/engine/distribution/DistributingConsumerTest.java\n+++ b/server/src/test/java/io/crate/execution/engine/distribution/DistributingConsumerTest.java\n@@ -37,8 +37,6 @@ import io.crate.testing.TestingBatchIterators;\n import io.crate.testing.TestingHelpers;\n import io.crate.testing.TestingRowConsumer;\n import io.crate.types.DataTypes;\n-import org.apache.logging.log4j.LogManager;\n-import org.apache.logging.log4j.Logger;\n import org.elasticsearch.action.ActionListener;\n import org.elasticsearch.common.breaker.CircuitBreakingException;\n import org.hamcrest.Matchers;\ndiff --git a/server/src/test/java/io/crate/execution/engine/indexing/BulkShardCreationLimiterTest.java b/server/src/test/java/io/crate/execution/engine/indexing/BulkShardCreationLimiterTest.java\nindex 82c9f1872a..483d965d6d 100644\n--- a/server/src/test/java/io/crate/execution/engine/indexing/BulkShardCreationLimiterTest.java\n+++ b/server/src/test/java/io/crate/execution/engine/indexing/BulkShardCreationLimiterTest.java\n@@ -25,10 +25,8 @@ package io.crate.execution.engine.indexing;\n import io.crate.breaker.RamAccounting;\n import io.crate.execution.dml.ShardRequest;\n import org.elasticsearch.test.ESTestCase;\n-import org.elasticsearch.common.io.stream.StreamInput;\n import org.junit.Test;\n \n-import java.io.IOException;\n \n import static org.hamcrest.Matchers.is;\n \ndiff --git a/server/src/test/java/io/crate/execution/jobs/CountTaskTest.java b/server/src/test/java/io/crate/execution/jobs/CountTaskTest.java\nindex 0bcbe894e8..4c77e26778 100644\n--- a/server/src/test/java/io/crate/execution/jobs/CountTaskTest.java\n+++ b/server/src/test/java/io/crate/execution/jobs/CountTaskTest.java\n@@ -35,7 +35,6 @@ import io.crate.planner.distribution.DistributionInfo;\n import io.crate.test.CauseMatcher;\n import org.elasticsearch.test.ESTestCase;\n import io.crate.testing.TestingRowConsumer;\n-import org.elasticsearch.index.Index;\n import org.junit.Test;\n \n import java.util.Collections;\ndiff --git a/server/src/test/java/io/crate/expression/operator/CIDROperatorTest.java b/server/src/test/java/io/crate/expression/operator/CIDROperatorTest.java\nindex 827ff04865..7e4dd20920 100644\n--- a/server/src/test/java/io/crate/expression/operator/CIDROperatorTest.java\n+++ b/server/src/test/java/io/crate/expression/operator/CIDROperatorTest.java\n@@ -24,9 +24,7 @@ package io.crate.expression.operator;\n \n import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n import io.crate.expression.symbol.Literal;\n-import org.junit.Rule;\n import org.junit.Test;\n-import org.junit.rules.ExpectedException;\n \n public class CIDROperatorTest extends AbstractScalarFunctionsTest {\n \ndiff --git a/server/src/test/java/io/crate/expression/operator/OrOperatorTest.java b/server/src/test/java/io/crate/expression/operator/OrOperatorTest.java\nindex 0009794c7a..b2746cd705 100644\n--- a/server/src/test/java/io/crate/expression/operator/OrOperatorTest.java\n+++ b/server/src/test/java/io/crate/expression/operator/OrOperatorTest.java\n@@ -3,8 +3,6 @@ package io.crate.expression.operator;\n import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n import org.junit.Test;\n \n-import static io.crate.testing.SymbolMatchers.isField;\n-import static io.crate.testing.SymbolMatchers.isFunction;\n import static io.crate.testing.SymbolMatchers.isLiteral;\n \n public class OrOperatorTest extends AbstractScalarFunctionsTest {\ndiff --git a/server/src/test/java/io/crate/expression/operator/RegexpMatchCaseInsensitiveOperatorTest.java b/server/src/test/java/io/crate/expression/operator/RegexpMatchCaseInsensitiveOperatorTest.java\nindex 06f808151a..bcd01f5180 100644\n--- a/server/src/test/java/io/crate/expression/operator/RegexpMatchCaseInsensitiveOperatorTest.java\n+++ b/server/src/test/java/io/crate/expression/operator/RegexpMatchCaseInsensitiveOperatorTest.java\n@@ -27,7 +27,6 @@ import io.crate.types.DataTypes;\n import org.junit.Test;\n \n import static org.hamcrest.Matchers.is;\n-import static org.hamcrest.Matchers.nullValue;\n \n public class RegexpMatchCaseInsensitiveOperatorTest extends AbstractScalarFunctionsTest {\n \ndiff --git a/server/src/test/java/io/crate/expression/reference/doc/IpColumnReferenceTest.java b/server/src/test/java/io/crate/expression/reference/doc/IpColumnReferenceTest.java\nindex 6573ca4e6c..b022353738 100644\n--- a/server/src/test/java/io/crate/expression/reference/doc/IpColumnReferenceTest.java\n+++ b/server/src/test/java/io/crate/expression/reference/doc/IpColumnReferenceTest.java\n@@ -37,9 +37,7 @@ import org.apache.lucene.search.TopDocs;\n import org.apache.lucene.util.BytesRef;\n import org.elasticsearch.common.network.InetAddresses;\n import org.hamcrest.Matchers;\n-import org.junit.Rule;\n import org.junit.Test;\n-import org.junit.rules.ExpectedException;\n \n import java.io.IOException;\n import java.net.InetAddress;\ndiff --git a/server/src/test/java/io/crate/expression/scalar/arithmetic/ArithmeticOverflowTest.java b/server/src/test/java/io/crate/expression/scalar/arithmetic/ArithmeticOverflowTest.java\nindex d34ce102dd..11af0d3ed1 100644\n--- a/server/src/test/java/io/crate/expression/scalar/arithmetic/ArithmeticOverflowTest.java\n+++ b/server/src/test/java/io/crate/expression/scalar/arithmetic/ArithmeticOverflowTest.java\n@@ -24,9 +24,7 @@ package io.crate.expression.scalar.arithmetic;\n \n import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n import io.crate.expression.symbol.Literal;\n-import org.junit.Rule;\n import org.junit.Test;\n-import org.junit.rules.ExpectedException;\n \n public class ArithmeticOverflowTest extends AbstractScalarFunctionsTest {\n \ndiff --git a/server/src/test/java/io/crate/expression/scalar/arithmetic/IntervalFunctionTest.java b/server/src/test/java/io/crate/expression/scalar/arithmetic/IntervalFunctionTest.java\nindex b643fc34fa..a11a2d902a 100644\n--- a/server/src/test/java/io/crate/expression/scalar/arithmetic/IntervalFunctionTest.java\n+++ b/server/src/test/java/io/crate/expression/scalar/arithmetic/IntervalFunctionTest.java\n@@ -22,7 +22,6 @@\n \n package io.crate.expression.scalar.arithmetic;\n \n-import io.crate.exceptions.ConversionException;\n import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n import org.hamcrest.Matchers;\n import org.joda.time.Period;\ndiff --git a/server/src/test/java/io/crate/expression/scalar/string/ChrFunctionTest.java b/server/src/test/java/io/crate/expression/scalar/string/ChrFunctionTest.java\nindex 00bfc159fe..eeed2b8ee5 100644\n--- a/server/src/test/java/io/crate/expression/scalar/string/ChrFunctionTest.java\n+++ b/server/src/test/java/io/crate/expression/scalar/string/ChrFunctionTest.java\n@@ -22,9 +22,7 @@\n \n package io.crate.expression.scalar.string;\n \n-import org.junit.Rule;\n import org.junit.Test;\n-import org.junit.rules.ExpectedException;\n \n import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n \ndiff --git a/server/src/test/java/io/crate/expression/scalar/string/StringPaddingFunctionTest.java b/server/src/test/java/io/crate/expression/scalar/string/StringPaddingFunctionTest.java\nindex 40c143dc23..31319ec500 100644\n--- a/server/src/test/java/io/crate/expression/scalar/string/StringPaddingFunctionTest.java\n+++ b/server/src/test/java/io/crate/expression/scalar/string/StringPaddingFunctionTest.java\n@@ -24,9 +24,7 @@ package io.crate.expression.scalar.string;\n \n import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n import io.crate.expression.symbol.Literal;\n-import org.junit.Rule;\n import org.junit.Test;\n-import org.junit.rules.ExpectedException;\n \n public class StringPaddingFunctionTest extends AbstractScalarFunctionsTest {\n \ndiff --git a/server/src/test/java/io/crate/expression/scalar/timestamp/TimezoneFunctionTest.java b/server/src/test/java/io/crate/expression/scalar/timestamp/TimezoneFunctionTest.java\nindex c921e93f35..1588254bc2 100644\n--- a/server/src/test/java/io/crate/expression/scalar/timestamp/TimezoneFunctionTest.java\n+++ b/server/src/test/java/io/crate/expression/scalar/timestamp/TimezoneFunctionTest.java\n@@ -25,9 +25,7 @@ package io.crate.expression.scalar.timestamp;\n import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n import io.crate.expression.symbol.Literal;\n import io.crate.types.DataTypes;\n-import org.junit.Rule;\n import org.junit.Test;\n-import org.junit.rules.ExpectedException;\n \n public class TimezoneFunctionTest extends AbstractScalarFunctionsTest {\n \ndiff --git a/server/src/test/java/io/crate/integrationtests/DDLIntegrationTest.java b/server/src/test/java/io/crate/integrationtests/DDLIntegrationTest.java\nindex 93f7078af3..24189615f8 100644\n--- a/server/src/test/java/io/crate/integrationtests/DDLIntegrationTest.java\n+++ b/server/src/test/java/io/crate/integrationtests/DDLIntegrationTest.java\n@@ -59,7 +59,6 @@ import io.crate.testing.SQLErrorMatcher;\n import io.crate.testing.TestingHelpers;\n import io.crate.testing.UseRandomizedSchema;\n import io.netty.handler.codec.http.HttpResponseStatus;\n-import static org.junit.jupiter.api.Assertions.assertThrows;\n \n @ESIntegTestCase.ClusterScope()\n @UseRandomizedSchema(random = false)\ndiff --git a/server/src/test/java/io/crate/integrationtests/PostgresITest.java b/server/src/test/java/io/crate/integrationtests/PostgresITest.java\nindex 8876321358..3839adc8e4 100644\n--- a/server/src/test/java/io/crate/integrationtests/PostgresITest.java\n+++ b/server/src/test/java/io/crate/integrationtests/PostgresITest.java\n@@ -25,14 +25,12 @@ package io.crate.integrationtests;\n import io.crate.action.sql.SQLOperations;\n import io.crate.execution.engine.collect.stats.JobsLogService;\n import io.crate.protocols.postgres.PostgresNetty;\n-import io.crate.testing.Asserts;\n import io.crate.testing.DataTypeTesting;\n import io.crate.testing.UseJdbc;\n import io.crate.types.DataTypes;\n \n import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.test.ESIntegTestCase;\n-import org.elasticsearch.test.junit.annotations.TestLogging;\n import org.hamcrest.Matchers;\n import org.junit.Before;\n import org.junit.BeforeClass;\ndiff --git a/server/src/test/java/io/crate/integrationtests/PromoteStaleReplicaITest.java b/server/src/test/java/io/crate/integrationtests/PromoteStaleReplicaITest.java\nindex b9bacb53d8..8ec45d0f6a 100644\n--- a/server/src/test/java/io/crate/integrationtests/PromoteStaleReplicaITest.java\n+++ b/server/src/test/java/io/crate/integrationtests/PromoteStaleReplicaITest.java\n@@ -27,7 +27,6 @@ import org.elasticsearch.node.Node;\n import org.elasticsearch.test.ESIntegTestCase;\n import org.junit.Test;\n \n-import java.util.Arrays;\n \n import static com.carrotsearch.randomizedtesting.RandomizedTest.$;\n import static io.crate.testing.TestingHelpers.printedTable;\ndiff --git a/server/src/test/java/io/crate/integrationtests/SQLTransportIntegrationTest.java b/server/src/test/java/io/crate/integrationtests/SQLTransportIntegrationTest.java\nindex c85617d908..bf0f73dc8d 100644\n--- a/server/src/test/java/io/crate/integrationtests/SQLTransportIntegrationTest.java\n+++ b/server/src/test/java/io/crate/integrationtests/SQLTransportIntegrationTest.java\n@@ -21,7 +21,6 @@\n \n package io.crate.integrationtests;\n \n-import com.carrotsearch.hppc.cursors.ObjectCursor;\n import com.carrotsearch.randomizedtesting.RandomizedContext;\n import com.carrotsearch.randomizedtesting.annotations.Listeners;\n import com.carrotsearch.randomizedtesting.annotations.TestGroup;\n@@ -84,7 +83,6 @@ import org.elasticsearch.action.admin.cluster.state.ClusterStateResponse;\n import org.elasticsearch.client.Client;\n import org.elasticsearch.client.Requests;\n import org.elasticsearch.cluster.metadata.IndexMetadata;\n-import org.elasticsearch.cluster.metadata.MappingMetadata;\n import org.elasticsearch.cluster.metadata.Metadata;\n import org.elasticsearch.cluster.service.ClusterService;\n import org.elasticsearch.common.Randomness;\n@@ -94,7 +92,6 @@ import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.common.transport.BoundTransportAddress;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n import org.elasticsearch.common.xcontent.XContentFactory;\n-import org.elasticsearch.http.netty4.Netty4HttpServerTransport;\n import org.elasticsearch.index.Index;\n import org.elasticsearch.index.IndexService;\n import org.elasticsearch.index.shard.IndexShard;\ndiff --git a/server/src/test/java/io/crate/integrationtests/SeqNoBasedOCCIntegrationTest.java b/server/src/test/java/io/crate/integrationtests/SeqNoBasedOCCIntegrationTest.java\nindex d84f590c2b..e91341fbb1 100644\n--- a/server/src/test/java/io/crate/integrationtests/SeqNoBasedOCCIntegrationTest.java\n+++ b/server/src/test/java/io/crate/integrationtests/SeqNoBasedOCCIntegrationTest.java\n@@ -22,14 +22,8 @@\n \n package io.crate.integrationtests;\n \n-import io.crate.exceptions.VersioninigValidationException;\n-import io.crate.protocols.postgres.PGErrorStatus;\n-import io.netty.handler.codec.http.HttpResponseStatus;\n import org.junit.Test;\n \n-import static io.crate.testing.Asserts.assertThrows;\n-import static io.crate.testing.SQLErrorMatcher.isSQLError;\n-import static org.hamcrest.Matchers.containsString;\n \n public class SeqNoBasedOCCIntegrationTest extends SQLTransportIntegrationTest {\n \ndiff --git a/server/src/test/java/io/crate/integrationtests/StaticInformationSchemaQueryTest.java b/server/src/test/java/io/crate/integrationtests/StaticInformationSchemaQueryTest.java\nindex ead9788dd8..5fa6acc270 100644\n--- a/server/src/test/java/io/crate/integrationtests/StaticInformationSchemaQueryTest.java\n+++ b/server/src/test/java/io/crate/integrationtests/StaticInformationSchemaQueryTest.java\n@@ -24,7 +24,6 @@ package io.crate.integrationtests;\n import org.junit.Before;\n import org.junit.Test;\n \n-import static io.crate.protocols.postgres.PGErrorStatus.INTERNAL_ERROR;\n import static io.crate.protocols.postgres.PGErrorStatus.UNDEFINED_TABLE;\n import static io.crate.testing.Asserts.assertThrows;\n import static io.crate.testing.SQLErrorMatcher.isSQLError;\ndiff --git a/server/src/test/java/io/crate/integrationtests/SubSelectIntegrationTest.java b/server/src/test/java/io/crate/integrationtests/SubSelectIntegrationTest.java\nindex 29969287ca..d49f890a62 100644\n--- a/server/src/test/java/io/crate/integrationtests/SubSelectIntegrationTest.java\n+++ b/server/src/test/java/io/crate/integrationtests/SubSelectIntegrationTest.java\n@@ -29,7 +29,6 @@ import io.crate.statistics.Stats;\n import io.crate.statistics.TableStats;\n import io.crate.testing.TestingHelpers;\n import org.elasticsearch.test.ESIntegTestCase;\n-import org.junit.Ignore;\n import org.junit.Test;\n \n import java.util.Arrays;\ndiff --git a/server/src/test/java/io/crate/integrationtests/SysClusterSettingsTest.java b/server/src/test/java/io/crate/integrationtests/SysClusterSettingsTest.java\nindex b22c0550bc..09f8039001 100644\n--- a/server/src/test/java/io/crate/integrationtests/SysClusterSettingsTest.java\n+++ b/server/src/test/java/io/crate/integrationtests/SysClusterSettingsTest.java\n@@ -27,7 +27,6 @@ import io.crate.execution.engine.indexing.ShardingUpsertExecutor;\n import io.crate.settings.CrateSetting;\n import io.crate.udc.service.UDCService;\n import org.elasticsearch.cluster.ClusterInfoService;\n-import org.elasticsearch.cluster.InternalClusterInfoService;\n import org.elasticsearch.common.settings.Setting;\n import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.common.unit.MemorySizeValue;\ndiff --git a/server/src/test/java/io/crate/integrationtests/TablesNeedUpgradeSysCheckTest.java b/server/src/test/java/io/crate/integrationtests/TablesNeedUpgradeSysCheckTest.java\nindex fcbd104e25..7ce3ce95eb 100644\n--- a/server/src/test/java/io/crate/integrationtests/TablesNeedUpgradeSysCheckTest.java\n+++ b/server/src/test/java/io/crate/integrationtests/TablesNeedUpgradeSysCheckTest.java\n@@ -26,10 +26,8 @@ import org.apache.lucene.util.TestUtil;\n import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.env.Environment;\n import org.elasticsearch.test.ESIntegTestCase;\n-import org.junit.After;\n import org.junit.Test;\n \n-import java.io.IOException;\n import java.io.InputStream;\n import java.nio.file.Files;\n import java.nio.file.Path;\ndiff --git a/server/src/test/java/io/crate/integrationtests/disruption/discovery/MasterDisruptionIT.java b/server/src/test/java/io/crate/integrationtests/disruption/discovery/MasterDisruptionIT.java\nindex 3ca8b78514..b5160b09ea 100644\n--- a/server/src/test/java/io/crate/integrationtests/disruption/discovery/MasterDisruptionIT.java\n+++ b/server/src/test/java/io/crate/integrationtests/disruption/discovery/MasterDisruptionIT.java\n@@ -48,7 +48,6 @@ import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.TimeUnit;\n \n-import com.carrotsearch.randomizedtesting.annotations.Repeat;\n \n import static io.crate.metadata.IndexParts.toIndexName;\n import static org.hamcrest.Matchers.equalTo;\ndiff --git a/server/src/test/java/io/crate/memory/OnHeapMemoryManagerTest.java b/server/src/test/java/io/crate/memory/OnHeapMemoryManagerTest.java\nindex 229beef430..0898ebd7fc 100644\n--- a/server/src/test/java/io/crate/memory/OnHeapMemoryManagerTest.java\n+++ b/server/src/test/java/io/crate/memory/OnHeapMemoryManagerTest.java\n@@ -22,7 +22,6 @@\n \n package io.crate.memory;\n \n-import io.netty.buffer.ByteBuf;\n import org.junit.Test;\n \n import java.util.concurrent.atomic.AtomicLong;\ndiff --git a/server/src/test/java/io/crate/metadata/sys/SysClusterTableInfoTest.java b/server/src/test/java/io/crate/metadata/sys/SysClusterTableInfoTest.java\nindex 00c6ff6336..336fa7eb06 100644\n--- a/server/src/test/java/io/crate/metadata/sys/SysClusterTableInfoTest.java\n+++ b/server/src/test/java/io/crate/metadata/sys/SysClusterTableInfoTest.java\n@@ -27,7 +27,6 @@ import io.crate.expression.reference.StaticTableReferenceResolver;\n import io.crate.license.LicenseService;\n import io.crate.metadata.ColumnIdent;\n import io.crate.metadata.settings.CrateSettings;\n-import io.crate.settings.CrateSetting;\n import io.crate.test.integration.CrateDummyClusterServiceUnitTest;\n import org.hamcrest.Matchers;\n import org.junit.Test;\ndiff --git a/server/src/test/java/io/crate/planner/SelectPlannerTest.java b/server/src/test/java/io/crate/planner/SelectPlannerTest.java\nindex 81b5b4ade3..86dec9c6ea 100644\n--- a/server/src/test/java/io/crate/planner/SelectPlannerTest.java\n+++ b/server/src/test/java/io/crate/planner/SelectPlannerTest.java\n@@ -63,7 +63,6 @@ import io.crate.planner.node.dql.QueryThenFetch;\n import io.crate.planner.node.dql.join.Join;\n import io.crate.planner.node.dql.join.JoinType;\n import io.crate.planner.operators.LogicalPlan;\n-import io.crate.protocols.postgres.PGErrorStatus;\n import io.crate.statistics.Stats;\n import io.crate.statistics.TableStats;\n import io.crate.test.integration.CrateDummyClusterServiceUnitTest;\n@@ -71,7 +70,6 @@ import io.crate.testing.SQLExecutor;\n import io.crate.testing.T3;\n import io.crate.testing.TestingHelpers;\n import io.crate.types.DataTypes;\n-import io.netty.handler.codec.http.HttpResponseStatus;\n import org.hamcrest.Matchers;\n import org.junit.After;\n import org.junit.Before;\n@@ -88,14 +86,12 @@ import java.util.stream.Collectors;\n \n import static io.crate.planner.operators.LogicalPlannerTest.isPlan;\n import static io.crate.testing.Asserts.assertThrows;\n-import static io.crate.testing.SQLErrorMatcher.isSQLError;\n import static io.crate.testing.SymbolMatchers.isFunction;\n import static io.crate.testing.SymbolMatchers.isLiteral;\n import static io.crate.testing.SymbolMatchers.isReference;\n import static io.crate.testing.TestingHelpers.isSQL;\n import static java.util.Collections.singletonList;\n import static org.hamcrest.Matchers.contains;\n-import static org.hamcrest.Matchers.containsString;\n import static org.hamcrest.Matchers.equalTo;\n import static org.hamcrest.Matchers.instanceOf;\n import static org.hamcrest.Matchers.is;\ndiff --git a/server/src/test/java/io/crate/planner/WhereClauseOptimizerTest.java b/server/src/test/java/io/crate/planner/WhereClauseOptimizerTest.java\nindex c8ff130b49..e88b8e3d8a 100644\n--- a/server/src/test/java/io/crate/planner/WhereClauseOptimizerTest.java\n+++ b/server/src/test/java/io/crate/planner/WhereClauseOptimizerTest.java\n@@ -38,7 +38,6 @@ import static io.crate.testing.TestingHelpers.isDocKey;\n import static java.util.Collections.singletonList;\n import static org.hamcrest.Matchers.contains;\n import static org.hamcrest.Matchers.containsInAnyOrder;\n-import static org.hamcrest.Matchers.empty;\n import static org.hamcrest.Matchers.is;\n \n public class WhereClauseOptimizerTest extends CrateDummyClusterServiceUnitTest{\ndiff --git a/server/src/test/java/io/crate/planner/consumer/GlobalAggregatePlannerTest.java b/server/src/test/java/io/crate/planner/consumer/GlobalAggregatePlannerTest.java\nindex 25aae87888..f77255b90a 100644\n--- a/server/src/test/java/io/crate/planner/consumer/GlobalAggregatePlannerTest.java\n+++ b/server/src/test/java/io/crate/planner/consumer/GlobalAggregatePlannerTest.java\n@@ -24,27 +24,22 @@ package io.crate.planner.consumer;\n \n import io.crate.analyze.TableDefinitions;\n import io.crate.data.Row1;\n-import io.crate.data.RowN;\n import io.crate.execution.dsl.projection.AggregationProjection;\n-import io.crate.execution.dsl.projection.EvalProjection;\n import io.crate.execution.dsl.projection.FilterProjection;\n import io.crate.execution.dsl.projection.Projection;\n import io.crate.execution.dsl.projection.TopNProjection;\n import io.crate.planner.node.dql.Collect;\n-import io.crate.planner.node.dql.join.Join;\n import io.crate.test.integration.CrateDummyClusterServiceUnitTest;\n import io.crate.testing.SQLExecutor;\n import io.crate.testing.T3;\n import org.hamcrest.Matchers;\n import org.junit.Before;\n-import org.junit.Ignore;\n import org.junit.Test;\n \n import java.util.List;\n import java.util.UUID;\n \n import static io.crate.testing.SymbolMatchers.isAggregation;\n-import static io.crate.testing.SymbolMatchers.isFunction;\n import static io.crate.testing.SymbolMatchers.isInputColumn;\n import static org.hamcrest.Matchers.contains;\n import static org.hamcrest.Matchers.instanceOf;\ndiff --git a/server/src/test/java/io/crate/planner/operators/CollectTest.java b/server/src/test/java/io/crate/planner/operators/CollectTest.java\nindex a39761952e..249a49764d 100644\n--- a/server/src/test/java/io/crate/planner/operators/CollectTest.java\n+++ b/server/src/test/java/io/crate/planner/operators/CollectTest.java\n@@ -26,7 +26,6 @@ import io.crate.analyze.WhereClause;\n import io.crate.analyze.relations.DocTableRelation;\n import io.crate.data.Row;\n import io.crate.expression.symbol.Symbol;\n-import io.crate.metadata.doc.DocTableInfo;\n import io.crate.statistics.TableStats;\n import io.crate.test.integration.CrateDummyClusterServiceUnitTest;\n import io.crate.testing.SQLExecutor;\ndiff --git a/server/src/test/java/io/crate/planner/optimizer/OptimizerTest.java b/server/src/test/java/io/crate/planner/optimizer/OptimizerTest.java\nindex c1c869638b..7aeb4d793c 100644\n--- a/server/src/test/java/io/crate/planner/optimizer/OptimizerTest.java\n+++ b/server/src/test/java/io/crate/planner/optimizer/OptimizerTest.java\n@@ -23,7 +23,6 @@\n package io.crate.planner.optimizer;\n \n import io.crate.metadata.SearchPath;\n-import io.crate.metadata.TransactionContext;\n import io.crate.metadata.settings.SessionSettings;\n import io.crate.planner.optimizer.rule.MergeFilters;\n import io.crate.planner.optimizer.rule.MoveFilterBeneathHashJoin;\ndiff --git a/server/src/test/java/io/crate/protocols/postgres/PostgresWireProtocolTest.java b/server/src/test/java/io/crate/protocols/postgres/PostgresWireProtocolTest.java\nindex 741279fc21..83aac0f0d0 100644\n--- a/server/src/test/java/io/crate/protocols/postgres/PostgresWireProtocolTest.java\n+++ b/server/src/test/java/io/crate/protocols/postgres/PostgresWireProtocolTest.java\n@@ -61,7 +61,6 @@ import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicBoolean;\ndiff --git a/server/src/test/java/io/crate/protocols/postgres/types/RegprocTypeTest.java b/server/src/test/java/io/crate/protocols/postgres/types/RegprocTypeTest.java\nindex 0b012c9023..2de89b7dff 100644\n--- a/server/src/test/java/io/crate/protocols/postgres/types/RegprocTypeTest.java\n+++ b/server/src/test/java/io/crate/protocols/postgres/types/RegprocTypeTest.java\n@@ -22,8 +22,6 @@\n \n package io.crate.protocols.postgres.types;\n \n-import io.crate.metadata.functions.Signature;\n-import io.crate.metadata.pgcatalog.OidHash;\n import io.crate.types.Regproc;\n import io.netty.buffer.ByteBuf;\n import io.netty.buffer.Unpooled;\ndiff --git a/server/src/test/java/io/crate/types/TypeConversionTest.java b/server/src/test/java/io/crate/types/TypeConversionTest.java\nindex 9637f85ce8..733fa2b23d 100644\n--- a/server/src/test/java/io/crate/types/TypeConversionTest.java\n+++ b/server/src/test/java/io/crate/types/TypeConversionTest.java\n@@ -32,7 +32,6 @@ import org.elasticsearch.test.ESTestCase;\n import org.junit.Test;\n \n import io.crate.common.collections.Lists2;\n-import org.elasticsearch.test.ESTestCase;\n \n public class TypeConversionTest extends ESTestCase {\n \ndiff --git a/server/src/test/java/org/elasticsearch/action/admin/indices/create/TransportCreatePartitionsActionTest.java b/server/src/test/java/org/elasticsearch/action/admin/indices/create/TransportCreatePartitionsActionTest.java\nindex a3e153c097..4c45137878 100644\n--- a/server/src/test/java/org/elasticsearch/action/admin/indices/create/TransportCreatePartitionsActionTest.java\n+++ b/server/src/test/java/org/elasticsearch/action/admin/indices/create/TransportCreatePartitionsActionTest.java\n@@ -42,8 +42,6 @@ import java.util.UUID;\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.TimeUnit;\n \n-import static io.crate.testing.Asserts.assertThrows;\n-import static org.hamcrest.Matchers.instanceOf;\n import static org.hamcrest.Matchers.is;\n \n public class TransportCreatePartitionsActionTest extends SQLTransportIntegrationTest {\ndiff --git a/server/src/test/java/org/elasticsearch/cluster/allocation/FilteringAllocationIT.java b/server/src/test/java/org/elasticsearch/cluster/allocation/FilteringAllocationIT.java\nindex 8c9aafd8ea..6d1e1acb9c 100644\n--- a/server/src/test/java/org/elasticsearch/cluster/allocation/FilteringAllocationIT.java\n+++ b/server/src/test/java/org/elasticsearch/cluster/allocation/FilteringAllocationIT.java\n@@ -27,7 +27,6 @@ import java.util.Collection;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import java.util.concurrent.TimeUnit;\n \n import org.elasticsearch.cluster.ClusterState;\n import org.elasticsearch.cluster.health.ClusterHealthStatus;\n@@ -44,7 +43,6 @@ import org.elasticsearch.plugins.Plugin;\n import org.elasticsearch.test.ESIntegTestCase.ClusterScope;\n import org.elasticsearch.test.ESIntegTestCase.Scope;\n import org.elasticsearch.test.InternalSettingsPlugin;\n-import org.junit.Ignore;\n import org.junit.Test;\n \n import io.crate.integrationtests.SQLTransportIntegrationTest;\ndiff --git a/server/src/test/java/org/elasticsearch/cluster/coordination/FollowersCheckerTests.java b/server/src/test/java/org/elasticsearch/cluster/coordination/FollowersCheckerTests.java\nindex 13d8ac1ca5..822336001b 100644\n--- a/server/src/test/java/org/elasticsearch/cluster/coordination/FollowersCheckerTests.java\n+++ b/server/src/test/java/org/elasticsearch/cluster/coordination/FollowersCheckerTests.java\n@@ -59,7 +59,6 @@ import java.util.function.Supplier;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n-import static java.util.Collections.emptySet;\n import static org.elasticsearch.cluster.coordination.FollowersChecker.FOLLOWER_CHECK_ACTION_NAME;\n import static org.elasticsearch.cluster.coordination.FollowersChecker.FOLLOWER_CHECK_INTERVAL_SETTING;\n import static org.elasticsearch.cluster.coordination.FollowersChecker.FOLLOWER_CHECK_RETRY_COUNT_SETTING;\ndiff --git a/server/src/test/java/org/elasticsearch/cluster/routing/allocation/AllocationCommandsTests.java b/server/src/test/java/org/elasticsearch/cluster/routing/allocation/AllocationCommandsTests.java\nindex 6b73099704..6a7d48e062 100644\n--- a/server/src/test/java/org/elasticsearch/cluster/routing/allocation/AllocationCommandsTests.java\n+++ b/server/src/test/java/org/elasticsearch/cluster/routing/allocation/AllocationCommandsTests.java\n@@ -73,7 +73,6 @@ import org.elasticsearch.index.Index;\n import org.elasticsearch.index.IndexNotFoundException;\n import org.elasticsearch.index.shard.ShardId;\n import org.elasticsearch.index.shard.ShardNotFoundException;\n-import org.junit.Ignore;\n import org.junit.Test;\n \n public class AllocationCommandsTests extends ESAllocationTestCase {\ndiff --git a/server/src/test/java/org/elasticsearch/cluster/service/MasterServiceTests.java b/server/src/test/java/org/elasticsearch/cluster/service/MasterServiceTests.java\nindex 89be6048af..160656c461 100644\n--- a/server/src/test/java/org/elasticsearch/cluster/service/MasterServiceTests.java\n+++ b/server/src/test/java/org/elasticsearch/cluster/service/MasterServiceTests.java\n@@ -35,7 +35,6 @@ import org.elasticsearch.cluster.LocalClusterUpdateTask;\n import org.elasticsearch.cluster.block.ClusterBlocks;\n import org.elasticsearch.cluster.node.DiscoveryNode;\n import org.elasticsearch.cluster.node.DiscoveryNodes;\n-import javax.annotation.Nullable;\n import org.elasticsearch.common.Priority;\n import io.crate.common.collections.Tuple;\n import org.elasticsearch.common.logging.Loggers;\n@@ -56,7 +55,6 @@ import org.junit.Before;\n import org.junit.BeforeClass;\n \n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\ndiff --git a/server/src/test/java/org/elasticsearch/gateway/GatewayIndexStateIT.java b/server/src/test/java/org/elasticsearch/gateway/GatewayIndexStateIT.java\nindex 4f063a1a3d..2e46520adc 100644\n--- a/server/src/test/java/org/elasticsearch/gateway/GatewayIndexStateIT.java\n+++ b/server/src/test/java/org/elasticsearch/gateway/GatewayIndexStateIT.java\n@@ -51,7 +51,6 @@ import org.elasticsearch.test.ESIntegTestCase;\n import org.elasticsearch.test.ESIntegTestCase.ClusterScope;\n import org.elasticsearch.test.ESIntegTestCase.Scope;\n import org.elasticsearch.test.InternalTestCluster.RestartCallback;\n-import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.IOException;\ndiff --git a/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java\nindex 1eb2a5f2ca..6c14b15002 100644\n--- a/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java\n@@ -89,7 +89,6 @@ import org.apache.logging.log4j.Logger;\n import org.apache.logging.log4j.core.LogEvent;\n import org.apache.logging.log4j.core.appender.AbstractAppender;\n import org.apache.logging.log4j.core.filter.RegexFilter;\n-import org.apache.lucene.codecs.lucene50.Lucene50StoredFieldsFormat;\n import org.apache.lucene.codecs.lucene87.Lucene87StoredFieldsFormat;\n import org.apache.lucene.document.Field;\n import org.apache.lucene.document.LongPoint;\ndiff --git a/server/src/test/java/org/elasticsearch/index/engine/TranslogHandler.java b/server/src/test/java/org/elasticsearch/index/engine/TranslogHandler.java\nindex 3ae436ff0b..2ab5dfb2ba 100644\n--- a/server/src/test/java/org/elasticsearch/index/engine/TranslogHandler.java\n+++ b/server/src/test/java/org/elasticsearch/index/engine/TranslogHandler.java\n@@ -28,7 +28,6 @@ import org.elasticsearch.index.analysis.IndexAnalyzers;\n import org.elasticsearch.index.analysis.NamedAnalyzer;\n import org.elasticsearch.index.mapper.DocumentMapper;\n import org.elasticsearch.index.mapper.MapperService;\n-import org.elasticsearch.index.mapper.Mapping;\n import org.elasticsearch.index.mapper.RootObjectMapper;\n import org.elasticsearch.index.mapper.SourceToParse;\n import org.elasticsearch.index.seqno.SequenceNumbers;\n@@ -40,8 +39,6 @@ import org.elasticsearch.indices.mapper.MapperRegistry;\n import io.crate.Constants;\n \n import java.io.IOException;\n-import java.util.HashMap;\n-import java.util.Map;\n \n import static java.util.Collections.emptyList;\n import static java.util.Collections.emptyMap;\ndiff --git a/server/src/test/java/org/elasticsearch/index/shard/IndexShardTestCase.java b/server/src/test/java/org/elasticsearch/index/shard/IndexShardTestCase.java\nindex 0864815ea0..05d4b84cbb 100644\n--- a/server/src/test/java/org/elasticsearch/index/shard/IndexShardTestCase.java\n+++ b/server/src/test/java/org/elasticsearch/index/shard/IndexShardTestCase.java\n@@ -21,7 +21,6 @@\n  */\n package org.elasticsearch.index.shard;\n \n-import org.apache.lucene.index.DirectoryReader;\n import org.apache.lucene.index.IndexNotFoundException;\n import org.apache.lucene.store.Directory;\n import org.elasticsearch.Version;\ndiff --git a/server/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java b/server/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java\nindex 61a79ee09b..1cf54189ef 100644\n--- a/server/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java\n@@ -68,7 +68,6 @@ import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicInteger;\n import java.util.concurrent.atomic.AtomicLong;\n import java.util.concurrent.atomic.AtomicReference;\n-import java.util.function.BiConsumer;\n import java.util.function.Consumer;\n import java.util.function.Function;\n import java.util.function.LongFunction;\ndiff --git a/server/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java b/server/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java\nindex a0d7a75a1f..3289191460 100644\n--- a/server/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java\n@@ -41,7 +41,6 @@ import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.common.unit.ByteSizeValue;\n import org.elasticsearch.common.xcontent.XContentType;\n import org.elasticsearch.index.VersionType;\n-import org.elasticsearch.index.engine.Engine.IndexResult;\n import org.elasticsearch.index.mapper.SourceToParse;\n import org.elasticsearch.index.seqno.SequenceNumbers;\n import org.elasticsearch.index.translog.TestTranslog;\ndiff --git a/server/src/test/java/org/elasticsearch/index/shard/RestoreOnlyRepository.java b/server/src/test/java/org/elasticsearch/index/shard/RestoreOnlyRepository.java\nindex 40f0d403d3..84d9197f2b 100644\n--- a/server/src/test/java/org/elasticsearch/index/shard/RestoreOnlyRepository.java\n+++ b/server/src/test/java/org/elasticsearch/index/shard/RestoreOnlyRepository.java\n@@ -23,7 +23,6 @@\n package org.elasticsearch.index.shard;\n \n import org.apache.lucene.index.IndexCommit;\n-import org.elasticsearch.Version;\n import org.elasticsearch.action.ActionListener;\n import org.elasticsearch.cluster.metadata.IndexMetadata;\n import org.elasticsearch.cluster.metadata.Metadata;\ndiff --git a/server/src/test/java/org/elasticsearch/index/translog/TranslogTests.java b/server/src/test/java/org/elasticsearch/index/translog/TranslogTests.java\nindex 3fffa8f829..ce3e032b28 100644\n--- a/server/src/test/java/org/elasticsearch/index/translog/TranslogTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/translog/TranslogTests.java\n@@ -88,7 +88,6 @@ import org.apache.lucene.codecs.CodecUtil;\n import org.apache.lucene.document.Field;\n import org.apache.lucene.document.NumericDocValuesField;\n import org.apache.lucene.document.TextField;\n-import org.apache.lucene.index.IndexFormatTooOldException;\n import org.apache.lucene.index.Term;\n import org.apache.lucene.mockfile.FilterFileChannel;\n import org.apache.lucene.mockfile.FilterFileSystemProvider;\ndiff --git a/server/src/test/java/org/elasticsearch/test/BackgroundIndexer.java b/server/src/test/java/org/elasticsearch/test/BackgroundIndexer.java\nindex 44436eb1c5..1142235e30 100644\n--- a/server/src/test/java/org/elasticsearch/test/BackgroundIndexer.java\n+++ b/server/src/test/java/org/elasticsearch/test/BackgroundIndexer.java\n@@ -49,7 +49,6 @@ import org.elasticsearch.common.util.concurrent.ConcurrentCollections;\n import org.junit.Assert;\n \n import io.crate.common.unit.TimeValue;\n-import io.crate.exceptions.Exceptions;\n import io.crate.testing.DataTypeTesting;\n import io.crate.types.DataTypes;\n \ndiff --git a/server/src/test/java/org/elasticsearch/test/FieldMaskingReader.java b/server/src/test/java/org/elasticsearch/test/FieldMaskingReader.java\nindex 3aba68868f..78bb3d9287 100644\n--- a/server/src/test/java/org/elasticsearch/test/FieldMaskingReader.java\n+++ b/server/src/test/java/org/elasticsearch/test/FieldMaskingReader.java\n@@ -23,7 +23,6 @@ import org.apache.lucene.index.FieldFilterLeafReader;\n import org.apache.lucene.index.FilterDirectoryReader;\n import org.apache.lucene.index.FilterLeafReader;\n import org.apache.lucene.index.LeafReader;\n-import org.apache.lucene.index.IndexReader.CacheHelper;\n \n import java.io.IOException;\n import java.util.Collections;\n@@ -67,4 +66,4 @@ public class FieldMaskingReader extends FilterDirectoryReader {\n     public CacheHelper getReaderCacheHelper() {\n         return in.getReaderCacheHelper();\n     }\n-}\n\\ No newline at end of file\n+}\ndiff --git a/server/src/test/java/org/elasticsearch/test/engine/MockEngineSupport.java b/server/src/test/java/org/elasticsearch/test/engine/MockEngineSupport.java\nindex 62ff7f47ad..11c690d4f2 100644\n--- a/server/src/test/java/org/elasticsearch/test/engine/MockEngineSupport.java\n+++ b/server/src/test/java/org/elasticsearch/test/engine/MockEngineSupport.java\n@@ -24,7 +24,6 @@ import org.apache.lucene.index.AssertingDirectoryReader;\n import org.apache.lucene.index.DirectoryReader;\n import org.apache.lucene.index.FilterDirectoryReader;\n import org.apache.lucene.index.IndexReader;\n-import org.apache.lucene.search.AssertingIndexSearcher;\n import org.apache.lucene.search.QueryCache;\n import org.apache.lucene.search.QueryCachingPolicy;\n import org.apache.lucene.util.LuceneTestCase;\ndiff --git a/server/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java b/server/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java\nindex f731be8e54..2628d8f0b9 100644\n--- a/server/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java\n+++ b/server/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java\n@@ -61,13 +61,10 @@ import static org.hamcrest.CoreMatchers.is;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.greaterThan;\n import static org.hamcrest.Matchers.hasItem;\n-import static org.hamcrest.Matchers.hasKey;\n import static org.hamcrest.Matchers.instanceOf;\n import static org.hamcrest.Matchers.not;\n-import static org.hamcrest.Matchers.notNullValue;\n import static org.junit.Assert.assertArrayEquals;\n import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\ndiff --git a/server/src/test/java/org/elasticsearch/test/store/MockFSDirectoryFactory.java b/server/src/test/java/org/elasticsearch/test/store/MockFSDirectoryFactory.java\nindex 8ba25857ed..c2484e0c28 100644\n--- a/server/src/test/java/org/elasticsearch/test/store/MockFSDirectoryFactory.java\n+++ b/server/src/test/java/org/elasticsearch/test/store/MockFSDirectoryFactory.java\n@@ -19,19 +19,16 @@\n \n package org.elasticsearch.test.store;\n \n-import com.carrotsearch.randomizedtesting.SeedUtils;\n import com.carrotsearch.randomizedtesting.generators.RandomPicks;\n import org.apache.logging.log4j.Logger;\n import org.apache.lucene.index.CheckIndex;\n import org.apache.lucene.store.BaseDirectoryWrapper;\n import org.apache.lucene.store.Directory;\n-import org.apache.lucene.store.LockFactory;\n import org.apache.lucene.store.LockObtainFailedException;\n import org.apache.lucene.store.MockDirectoryWrapper;\n import org.apache.lucene.util.LuceneTestCase;\n import org.apache.lucene.util.TestRuleMarkFailure;\n import org.elasticsearch.cluster.metadata.IndexMetadata;\n-import org.elasticsearch.common.inject.Inject;\n import org.elasticsearch.common.io.stream.BytesStreamOutput;\n import org.elasticsearch.common.lucene.Lucene;\n import org.elasticsearch.common.settings.Setting;\n@@ -52,7 +49,6 @@ import java.io.Closeable;\n import java.io.IOException;\n import java.io.PrintStream;\n import java.nio.charset.StandardCharsets;\n-import java.nio.file.Path;\n import java.util.Arrays;\n import java.util.Random;\n \ndiff --git a/server/src/test/java/org/elasticsearch/test/store/MockFSIndexStore.java b/server/src/test/java/org/elasticsearch/test/store/MockFSIndexStore.java\nindex 7e3e302ddb..d32249f32b 100644\n--- a/server/src/test/java/org/elasticsearch/test/store/MockFSIndexStore.java\n+++ b/server/src/test/java/org/elasticsearch/test/store/MockFSIndexStore.java\n@@ -26,13 +26,10 @@ import org.elasticsearch.common.settings.Setting;\n import org.elasticsearch.common.settings.Setting.Property;\n import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.index.IndexModule;\n-import org.elasticsearch.index.IndexSettings;\n import org.elasticsearch.index.shard.IndexEventListener;\n import org.elasticsearch.index.shard.IndexShard;\n import org.elasticsearch.index.shard.IndexShardState;\n import org.elasticsearch.index.shard.ShardId;\n-import org.elasticsearch.index.shard.ShardPath;\n-import org.elasticsearch.index.store.DirectoryService;\n import org.elasticsearch.plugins.IndexStorePlugin;\n import org.elasticsearch.plugins.Plugin;\n \n@@ -42,7 +39,6 @@ import java.util.EnumSet;\n import java.util.IdentityHashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.function.Function;\n \n public final class MockFSIndexStore {\n \ndiff --git a/server/src/test/java/org/elasticsearch/test/tasks/MockTaskManager.java b/server/src/test/java/org/elasticsearch/test/tasks/MockTaskManager.java\nindex 2482081b34..8103bc353c 100644\n--- a/server/src/test/java/org/elasticsearch/test/tasks/MockTaskManager.java\n+++ b/server/src/test/java/org/elasticsearch/test/tasks/MockTaskManager.java\n@@ -32,7 +32,6 @@ import org.elasticsearch.tasks.TaskManager;\n import org.elasticsearch.threadpool.ThreadPool;\n \n import java.util.Collection;\n-import java.util.Set;\n import java.util.concurrent.CopyOnWriteArrayList;\n \n /**\ndiff --git a/server/src/test/java/org/elasticsearch/test/transport/MockTransport.java b/server/src/test/java/org/elasticsearch/test/transport/MockTransport.java\nindex 7e29040cc4..e52e89907c 100644\n--- a/server/src/test/java/org/elasticsearch/test/transport/MockTransport.java\n+++ b/server/src/test/java/org/elasticsearch/test/transport/MockTransport.java\n@@ -30,7 +30,6 @@ import org.elasticsearch.common.component.LifecycleListener;\n import org.elasticsearch.common.io.stream.BytesStreamOutput;\n import org.elasticsearch.common.io.stream.NamedWriteableAwareStreamInput;\n import org.elasticsearch.common.io.stream.NamedWriteableRegistry;\n-import org.elasticsearch.common.lease.Releasable;\n import org.elasticsearch.common.settings.ClusterSettings;\n import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.common.transport.BoundTransportAddress;\ndiff --git a/server/src/test/java/org/elasticsearch/test/transport/MockTransportService.java b/server/src/test/java/org/elasticsearch/test/transport/MockTransportService.java\nindex c2fcc71587..97891eed7c 100644\n--- a/server/src/test/java/org/elasticsearch/test/transport/MockTransportService.java\n+++ b/server/src/test/java/org/elasticsearch/test/transport/MockTransportService.java\n@@ -28,7 +28,6 @@ import javax.annotation.Nullable;\n import org.elasticsearch.common.UUIDs;\n import org.elasticsearch.common.io.stream.BytesStreamOutput;\n import org.elasticsearch.common.io.stream.NamedWriteableRegistry;\n-import org.elasticsearch.common.lease.Releasable;\n import org.elasticsearch.common.network.NetworkService;\n import org.elasticsearch.common.settings.ClusterSettings;\n import org.elasticsearch.common.settings.Setting;\ndiff --git a/server/src/test/java/org/elasticsearch/transport/OutboundHandlerTests.java b/server/src/test/java/org/elasticsearch/transport/OutboundHandlerTests.java\nindex 4f2232a3cf..b0955b0f45 100644\n--- a/server/src/test/java/org/elasticsearch/transport/OutboundHandlerTests.java\n+++ b/server/src/test/java/org/elasticsearch/transport/OutboundHandlerTests.java\n@@ -20,7 +20,6 @@\n package org.elasticsearch.transport;\n \n import static org.hamcrest.CoreMatchers.instanceOf;\n-import static org.hamcrest.Matchers.contains;\n \n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n@@ -41,7 +40,6 @@ import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n import org.elasticsearch.common.transport.TransportAddress;\n import org.elasticsearch.common.util.BigArrays;\n-import org.elasticsearch.common.util.concurrent.ThreadContext;\n import org.elasticsearch.test.ESTestCase;\n import org.elasticsearch.threadpool.TestThreadPool;\n import org.elasticsearch.threadpool.ThreadPool;\ndiff --git a/server/src/test/java/org/elasticsearch/transport/TcpTransportTest.java b/server/src/test/java/org/elasticsearch/transport/TcpTransportTest.java\nindex 7f541a0208..51d96052e2 100644\n--- a/server/src/test/java/org/elasticsearch/transport/TcpTransportTest.java\n+++ b/server/src/test/java/org/elasticsearch/transport/TcpTransportTest.java\n@@ -20,7 +20,6 @@\n package org.elasticsearch.transport;\n \n import org.elasticsearch.Version;\n-import org.elasticsearch.action.ActionListener;\n import org.elasticsearch.cluster.node.DiscoveryNode;\n import org.elasticsearch.common.network.NetworkService;\n import org.elasticsearch.common.settings.Settings;\ndiff --git a/server/src/test/java/org/elasticsearch/transport/TransportKeepAliveTests.java b/server/src/test/java/org/elasticsearch/transport/TransportKeepAliveTests.java\nindex 47c9bb7cd1..ad122a3e06 100644\n--- a/server/src/test/java/org/elasticsearch/transport/TransportKeepAliveTests.java\n+++ b/server/src/test/java/org/elasticsearch/transport/TransportKeepAliveTests.java\n@@ -30,7 +30,6 @@ import java.util.ArrayDeque;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.Deque;\n-import java.util.concurrent.ScheduledFuture;\n \n import org.elasticsearch.common.AsyncBiFunction;\n import org.elasticsearch.common.bytes.BytesReference;",
    "Automated rollback of commit <issue_id> . . * * * Reason for rollback * * * .": "diff --git a/src/main/java/com/google/devtools/build/lib/rules/android/AndroidConfiguration.java b/src/main/java/com/google/devtools/build/lib/rules/android/AndroidConfiguration.java\nindex bc697ce828..49b8006280 100644\n--- a/src/main/java/com/google/devtools/build/lib/rules/android/AndroidConfiguration.java\n+++ b/src/main/java/com/google/devtools/build/lib/rules/android/AndroidConfiguration.java\n@@ -708,7 +708,7 @@ public class AndroidConfiguration extends BuildConfiguration.Fragment\n \n     @Option(\n         name = \"android_aapt\",\n-        defaultValue = \"auto\",\n+        defaultValue = \"aapt2\",\n         documentationCategory = OptionDocumentationCategory.TOOLCHAIN,\n         effectTags = {\n           OptionEffectTag.AFFECTS_OUTPUTS,\n@@ -968,7 +968,7 @@ public class AndroidConfiguration extends BuildConfiguration.Fragment\n           OptionMetadataTag.INCOMPATIBLE_CHANGE,\n           OptionMetadataTag.TRIGGERED_BY_ALL_INCOMPATIBLE_CHANGES\n         },\n-        defaultValue = \"false\",\n+        defaultValue = \"true\",\n         help =\n             \"Switch the Android rules to use aapt2 by default for resource processing. \"\n                 + \"To resolve issues when migrating your app to build with aapt2, see \"\ndiff --git a/src/main/java/com/google/devtools/build/lib/rules/android/AndroidRuleClasses.java b/src/main/java/com/google/devtools/build/lib/rules/android/AndroidRuleClasses.java\nindex df2a7a855e..8c083a4457 100644\n--- a/src/main/java/com/google/devtools/build/lib/rules/android/AndroidRuleClasses.java\n+++ b/src/main/java/com/google/devtools/build/lib/rules/android/AndroidRuleClasses.java\n@@ -856,6 +856,9 @@ public final class AndroidRuleClasses {\n           .add(attr(\"manifest_values\", STRING_DICT))\n           /* <!-- #BLAZE_RULE(android_binary).ATTRIBUTE(aapt_version) -->\n           Select the version of aapt for this rule.<br/>\n+\n+          This attribute only takes effect if you set `--android_aapt=auto`.<br/>\n+\n           Possible values:\n           <ul>\n               <li><code>aapt_version = \"aapt\"</code>: Use aapt (deprecated).</li>\ndiff --git a/src/test/java/com/google/devtools/build/lib/analysis/mock/BazelAnalysisMock.java b/src/test/java/com/google/devtools/build/lib/analysis/mock/BazelAnalysisMock.java\nindex 7d3d892d5e..2ff576ef11 100644\n--- a/src/test/java/com/google/devtools/build/lib/analysis/mock/BazelAnalysisMock.java\n+++ b/src/test/java/com/google/devtools/build/lib/analysis/mock/BazelAnalysisMock.java\n@@ -348,6 +348,7 @@ public final class BazelAnalysisMock extends AnalysisMock {\n         \"android_sdk(\",\n         \"    name = 'sdk',\",\n         \"    aapt = ':static_aapt_tool',\",\n+        \"    aapt2 = ':static_aapt2_tool',\",\n         \"    adb = ':static_adb_tool',\",\n         \"    aidl = ':static_aidl_tool',\",\n         \"    android_jar = ':android_runtime_jar',\",\ndiff --git a/src/test/java/com/google/devtools/build/lib/rules/android/AndroidAssetsTest.java b/src/test/java/com/google/devtools/build/lib/rules/android/AndroidAssetsTest.java\nindex 3d47cb9b8e..d714a3dee8 100644\n--- a/src/test/java/com/google/devtools/build/lib/rules/android/AndroidAssetsTest.java\n+++ b/src/test/java/com/google/devtools/build/lib/rules/android/AndroidAssetsTest.java\n@@ -57,9 +57,6 @@ public class AndroidAssetsTest extends ResourceTestBase {\n \n   @Test\n   public void testParseAapt2() throws Exception {\n-    mockAndroidSdkWithAapt2();\n-    useConfiguration(\"--android_sdk=//sdk:sdk\");\n-\n     RuleContext ruleContext = getRuleContext();\n     AndroidAssets assets = getLocalAssets();\n \n@@ -158,9 +155,6 @@ public class AndroidAssetsTest extends ResourceTestBase {\n \n   @Test\n   public void testMergeAapt2() throws Exception {\n-    mockAndroidSdkWithAapt2();\n-    useConfiguration(\"--android_sdk=//sdk:sdk\");\n-\n     RuleContext ruleContext = getRuleContext();\n     ParsedAndroidAssets parsed =\n         getLocalAssets().parse(AndroidDataContext.forNative(ruleContext), AndroidAaptVersion.AAPT2);\ndiff --git a/src/test/java/com/google/devtools/build/lib/rules/android/AndroidBinaryTest.java b/src/test/java/com/google/devtools/build/lib/rules/android/AndroidBinaryTest.java\nindex ed7a4903a0..e1d51406af 100644\n--- a/src/test/java/com/google/devtools/build/lib/rules/android/AndroidBinaryTest.java\n+++ b/src/test/java/com/google/devtools/build/lib/rules/android/AndroidBinaryTest.java\n@@ -877,6 +877,8 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testResourceShrinkingAction() throws Exception {\n+    useConfiguration(\"--android_aapt=aapt\");\n+\n     scratch.file(\"java/com/google/android/hello/BUILD\",\n         \"android_binary(name = 'hello',\",\n         \"               srcs = ['Foo.java'],\",\n@@ -933,8 +935,9 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n   }\n \n   @Test\n-  public void testResourceCycleShrinking() throws Exception {\n-    useConfiguration(\"--experimental_android_resource_cycle_shrinking=true\");\n+  public void testResourceCycleShrinkingWithAapt() throws Exception {\n+    useConfiguration(\"--android_aapt=aapt\", \"--experimental_android_resource_cycle_shrinking=true\");\n+\n     checkError(\n         \"java/a\",\n         \"a\",\n@@ -1326,6 +1329,9 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testFilteredResourcesInvalidFilter() throws Exception {\n+    // This test is an analysis-time check with aapt.\n+    useConfiguration(\"--android_aapt=aapt\");\n+\n     String badQualifier = \"invalid-qualifier\";\n \n     checkError(\n@@ -1340,6 +1346,9 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testFilteredResourcesInvalidResourceDir() throws Exception {\n+    // This test is an analysis-time check with aapt.\n+    useConfiguration(\"--android_aapt=aapt\");\n+\n     String badQualifierDir = \"values-invalid-qualifier\";\n \n     checkError(\n@@ -1359,10 +1368,6 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n         ImmutableList.of(\"res/values/foo.xml\", \"res/values-en/foo.xml\", \"res/values-fr/foo.xml\");\n     String dir = \"java/r/android\";\n \n-    mockAndroidSdkWithAapt2();\n-\n-    useConfiguration(\"--android_sdk=//sdk:sdk\");\n-\n     ConfiguredTarget binary =\n         scratchConfiguredTarget(\n             dir,\n@@ -1390,6 +1395,8 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testFilteredResourcesSimple() throws Exception {\n+    useConfiguration(\"--android_aapt=aapt\");\n+\n     testDirectResourceFiltering(\n         \"en\",\n         /* unexpectedQualifiers= */ ImmutableList.of(\"fr\"),\n@@ -1678,6 +1685,8 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n       String folderType,\n       String suffix)\n       throws Exception {\n+    // Filtering is done at the analysis time for aapt.\n+    useConfiguration(\"--android_aapt=aapt\");\n \n     List<String> unexpectedResources = new ArrayList<>();\n     for (String qualifier : unexpectedQualifiers) {\n@@ -1757,6 +1766,9 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testFilteredTransitiveResources() throws Exception {\n+    // Filtering is done at analysis time for aapt.\n+    useConfiguration(\"--android_aapt=aapt\");\n+\n     String matchingResource = \"res/values-en/foo.xml\";\n     String unqualifiedResource = \"res/values/foo.xml\";\n     String notMatchingResource = \"res/values-fr/foo.xml\";\n@@ -1799,6 +1811,9 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testFilteredTransitiveResourcesDifferentDensities() throws Exception {\n+    // Filtering is done at analysis time for aapt.\n+    useConfiguration(\"--android_aapt=aapt\");\n+\n     String dir = \"java/r/android\";\n \n     ConfiguredTarget binary =\n@@ -1846,6 +1861,9 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testFilteredResourcesAllFilteredOut() throws Exception {\n+    // Filtering is done at analysis time for aapt.\n+    useConfiguration(\"--android_aapt=aapt\");\n+\n     String dir = \"java/r/android\";\n \n     final String keptBaseDir = \"partly_filtered_dir\";\n@@ -2081,6 +2099,9 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testUseRClassGeneratorMultipleDeps() throws Exception {\n+    // This test assumes using aapt.\n+    useConfiguration(\"--android_aapt=aapt\");\n+\n     scratch.file(\n         \"java/r/android/BUILD\",\n         \"android_library(name = 'lib1',\",\n@@ -2515,6 +2536,7 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n         \"android_sdk(\",\n         \"    name = 'sdk',\",\n         \"    aapt = 'aapt',\",\n+        \"    aapt2 = 'aapt2',\",\n         \"    adb = 'adb',\",\n         \"    aidl = 'aidl',\",\n         \"    android_jar = 'android.jar',\",\n@@ -2553,6 +2575,7 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n         \"    name = 'sdk',\",\n         \"    build_tools_version = '24.0.0',\",\n         \"    aapt = 'aapt',\",\n+        \"    aapt2 = 'aapt2',\",\n         \"    adb = 'adb',\",\n         \"    aidl = 'aidl',\",\n         \"    android_jar = 'android.jar',\",\n@@ -3562,40 +3585,8 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n     assertContainsEvent(\"*super* busted package group\");\n   }\n \n-  @Test\n-  public void testAapt2WithoutAndroidSdk() throws Exception {\n-    useConfiguration(\"--android_aapt=aapt2\");\n-    checkError(\n-        \"java/a\",\n-        \"a\",\n-        \"aapt2 processing requested but not available on the android_sdk\",\n-        \"android_binary(\",\n-        \"    name = 'a',\",\n-        \"    srcs = ['A.java'],\",\n-        \"    manifest = 'AndroidManifest.xml',\",\n-        \"    resource_files = [ 'res/values/values.xml' ], \",\n-        \"    aapt_version = 'aapt2'\",\n-        \")\");\n-  }\n-\n-  @Test\n-  public void testAapt2FlagWithoutAndroidSdk() throws Exception {\n-    useConfiguration(\"--android_aapt=aapt2\");\n-    checkError(\n-        \"java/a\",\n-        \"a\",\n-        \"aapt2 processing requested but not available on the android_sdk\",\n-        \"android_binary(\",\n-        \"    name = 'a',\",\n-        \"    srcs = ['A.java'],\",\n-        \"    manifest = 'AndroidManifest.xml',\",\n-        \"    resource_files = [ 'res/values/values.xml' ], \",\n-        \")\");\n-  }\n-\n   @Test\n   public void testAapt2WithAndroidSdk() throws Exception {\n-    mockAndroidSdkWithAapt2();\n     scratch.file(\n         \"java/a/BUILD\",\n         \"android_binary(\",\n@@ -3606,17 +3597,20 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n         \"    aapt_version = 'aapt2'\",\n         \")\");\n \n-    useConfiguration(\"--android_sdk=//sdk:sdk\");\n     ConfiguredTarget a = getConfiguredTarget(\"//java/a:a\");\n     Artifact apk = getImplicitOutputArtifact(a, AndroidRuleClasses.ANDROID_RESOURCES_APK);\n \n     assertThat(getGeneratingSpawnActionArgs(apk))\n-        .containsAtLeast(\"--aapt2\", \"sdk/aapt2\", \"--tool\", \"AAPT2_PACKAGE\");\n+        .containsAtLeast(\n+            \"--aapt2\",\n+            // The path to aapt2 is different between Blaze and Bazel, so we omit it here.\n+            // It's safe to do so as we've already checked for the `--aapt2` flag.\n+            \"--tool\",\n+            \"AAPT2_PACKAGE\");\n   }\n \n   @Test\n   public void testAapt2WithAndroidSdkAndDependencies() throws Exception {\n-    mockAndroidSdkWithAapt2();\n     scratch.file(\n         \"java/b/BUILD\",\n         \"android_library(\",\n@@ -3637,7 +3631,6 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n         \"    aapt_version = 'aapt2'\",\n         \")\");\n \n-    useConfiguration(\"--android_sdk=//sdk:sdk\");\n     ConfiguredTarget a = getConfiguredTarget(\"//java/a:a\");\n     ConfiguredTarget b = getDirectPrerequisite(a, \"//java/b:b\");\n \n@@ -3648,7 +3641,12 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n     SpawnAction apkAction = getGeneratingSpawnAction(apk);\n     assertThat(getGeneratingSpawnActionArgs(apk))\n-        .containsAtLeast(\"--aapt2\", \"sdk/aapt2\", \"--tool\", \"AAPT2_PACKAGE\");\n+        .containsAtLeast(\n+            \"--aapt2\",\n+            // The path to aapt2 is different between Blaze and Bazel, so we omit it here.\n+            // It's safe to do so as we've already checked for the `--aapt2` flag.\n+            \"--tool\",\n+            \"AAPT2_PACKAGE\");\n \n     assertThat(apkAction.getInputs())\n         .contains(\n@@ -3662,7 +3660,6 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testAapt2ResourceShrinkingAction() throws Exception {\n-    mockAndroidSdkWithAapt2();\n     scratch.file(\n         \"java/com/google/android/hello/BUILD\",\n         \"android_binary(name = 'hello',\",\n@@ -3674,7 +3671,6 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n         \"               shrink_resources = 1,\",\n         \"               proguard_specs = ['proguard-spec.pro'],)\");\n \n-    useConfiguration(\"--android_sdk=//sdk:sdk\");\n     ConfiguredTargetAndData targetAndData =\n         getConfiguredTargetAndData(\"//java/com/google/android/hello:hello\");\n     ConfiguredTarget binary = targetAndData.getConfiguredTarget();\n@@ -3726,9 +3722,7 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testAapt2ResourceCycleShrinking() throws Exception {\n-    mockAndroidSdkWithAapt2();\n-    useConfiguration(\n-        \"--android_sdk=//sdk:sdk\", \"--experimental_android_resource_cycle_shrinking=true\");\n+    useConfiguration(\"--experimental_android_resource_cycle_shrinking=true\");\n     scratch.file(\n         \"java/com/google/android/hello/BUILD\",\n         \"android_binary(name = 'hello',\",\n@@ -3759,9 +3753,7 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testAapt2ResourceCycleShinkingWithoutResourceShrinking() throws Exception {\n-    mockAndroidSdkWithAapt2();\n-    useConfiguration(\n-        \"--android_sdk=//sdk:sdk\", \"--experimental_android_resource_cycle_shrinking=true\");\n+    useConfiguration(\"--experimental_android_resource_cycle_shrinking=true\");\n     checkError(\n         \"java/a\",\n         \"a\",\n@@ -4324,7 +4316,6 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testSkipParsingActionFlagGetsPropagated() throws Exception {\n-    mockAndroidSdkWithAapt2();\n     scratch.file(\n         \"java/b/BUILD\",\n         \"android_library(\",\n@@ -4345,7 +4336,7 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n         \"    aapt_version = 'aapt2'\",\n         \")\");\n \n-    useConfiguration(\"--android_sdk=//sdk:sdk\", \"--experimental_skip_parsing_action\");\n+    useConfiguration(\"--experimental_skip_parsing_action\");\n     ConfiguredTarget a = getConfiguredTarget(\"//java/a:a\");\n     ConfiguredTarget b = getDirectPrerequisite(a, \"//java/b:b\");\n \n@@ -4368,7 +4359,6 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void alwaysSkipParsingActionWithAapt2() throws Exception {\n-    mockAndroidSdkWithAapt2();\n     scratch.file(\n         \"java/b/BUILD\",\n         \"android_library(\",\n@@ -4389,7 +4379,6 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n         \"    aapt_version = 'aapt2'\",\n         \")\");\n \n-    useConfiguration(\"--android_sdk=//sdk:sdk\");\n     ConfiguredTarget a = getConfiguredTarget(\"//java/a:a\");\n     ConfiguredTarget b = getDirectPrerequisite(a, \"//java/b:b\");\n \n@@ -4412,7 +4401,6 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n \n   @Test\n   public void testAapt1BuildsWithAapt2Sdk() throws Exception {\n-    mockAndroidSdkWithAapt2();\n     scratch.file(\n         \"java/b/BUILD\",\n         \"android_library(\",\n@@ -4433,7 +4421,7 @@ public class AndroidBinaryTest extends AndroidBuildViewTestCase {\n         \"    aapt_version = 'aapt'\",\n         \")\");\n \n-    useConfiguration(\"--android_sdk=//sdk:sdk\", \"--experimental_skip_parsing_action\");\n+    useConfiguration(\"--android_aapt=aapt\", \"--experimental_skip_parsing_action\");\n     ConfiguredTarget a = getConfiguredTarget(\"//java/a:a\");\n     ConfiguredTarget b = getDirectPrerequisite(a, \"//java/b:b\");\n \ndiff --git a/src/test/java/com/google/devtools/build/lib/rules/android/AndroidBuildViewTestCase.java b/src/test/java/com/google/devtools/build/lib/rules/android/AndroidBuildViewTestCase.java\nindex a321f3cba8..4cc956a302 100644\n--- a/src/test/java/com/google/devtools/build/lib/rules/android/AndroidBuildViewTestCase.java\n+++ b/src/test/java/com/google/devtools/build/lib/rules/android/AndroidBuildViewTestCase.java\n@@ -52,19 +52,10 @@ import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import javax.annotation.Nullable;\n-import org.junit.Before;\n \n /** Common methods shared between Android related {@link BuildViewTestCase}s. */\n public abstract class AndroidBuildViewTestCase extends BuildViewTestCase {\n \n-  @Before\n-  public void setup() throws Exception {\n-    // Force tests to use aapt to unblock global aapt2 migration, until these\n-    // tests are migrated to use aapt2.\n-    // TODO(jingwen): https://github.com/bazelbuild/bazel/issues/6907\n-    useConfiguration(\"--android_aapt=aapt\");\n-  }\n-\n   protected Iterable<Artifact> getNativeLibrariesInApk(ConfiguredTarget target) {\n     return Iterables.filter(\n         getGeneratingAction(getCompressedUnsignedApk(target)).getInputs(),\n@@ -455,31 +446,4 @@ public abstract class AndroidBuildViewTestCase extends BuildViewTestCase {\n         .isNull();\n   }\n \n-  /**\n-   * Creates a mock SDK with aapt2.\n-   *\n-   * <p>You'll need to use a configuration pointing to it, such as \"--android_sdk=//sdk:sdk\", to use\n-   * it.\n-   */\n-  public void mockAndroidSdkWithAapt2() throws Exception {\n-    scratch.file(\n-        \"sdk/BUILD\",\n-        \"android_sdk(\",\n-        \"    name = 'sdk',\",\n-        \"    aapt = 'aapt',\",\n-        \"    aapt2 = 'aapt2',\",\n-        \"    adb = 'adb',\",\n-        \"    aidl = 'aidl',\",\n-        \"    android_jar = 'android.jar',\",\n-        \"    apksigner = 'apksigner',\",\n-        \"    dx = 'dx',\",\n-        \"    framework_aidl = 'framework_aidl',\",\n-        \"    main_dex_classes = 'main_dex_classes',\",\n-        \"    main_dex_list_creator = 'main_dex_list_creator',\",\n-        \"    proguard = 'proguard',\",\n-        \"    shrinked_android_jar = 'shrinked_android_jar',\",\n-        \"    zipalign = 'zipalign',\",\n-        \"    tags = ['__ANDROID_RULES_MIGRATION__'],\",\n-        \")\");\n-  }\n }\ndiff --git a/src/test/java/com/google/devtools/build/lib/rules/android/AndroidCommonTest.java b/src/test/java/com/google/devtools/build/lib/rules/android/AndroidCommonTest.java\nindex c317b429b9..81de74ddaf 100644\n--- a/src/test/java/com/google/devtools/build/lib/rules/android/AndroidCommonTest.java\n+++ b/src/test/java/com/google/devtools/build/lib/rules/android/AndroidCommonTest.java\n@@ -38,14 +38,6 @@ public class AndroidCommonTest extends BuildViewTestCase {\n     scratch.file(\"java/srcs/a.properties\", \"foo\");\n   }\n \n-  @Before\n-  public void setup() throws Exception {\n-    // Force tests to use aapt to unblock global aapt2 migration, until these\n-    // tests are migrated to use aapt2.\n-    // TODO(jingwen): https://github.com/bazelbuild/bazel/issues/6907\n-    useConfiguration(\"--android_aapt=aapt\");\n-  }\n-\n   // regression test for #3169099\n   @Test\n   public void testLibrarySrcs() throws Exception {\ndiff --git a/src/test/java/com/google/devtools/build/lib/rules/android/AndroidLibraryTest.java b/src/test/java/com/google/devtools/build/lib/rules/android/AndroidLibraryTest.java\nindex 96dd324b99..974e1359bd 100644\n--- a/src/test/java/com/google/devtools/build/lib/rules/android/AndroidLibraryTest.java\n+++ b/src/test/java/com/google/devtools/build/lib/rules/android/AndroidLibraryTest.java\n@@ -842,6 +842,7 @@ public class AndroidLibraryTest extends AndroidBuildViewTestCase {\n         \"android_sdk(\",\n         \"    name = 'sdk',\",\n         \"    aapt = 'aapt',\",\n+        \"    aapt2 = 'aapt2',\",\n         \"    adb = 'adb',\",\n         \"    aidl = 'aidl',\",\n         \"    aidl_lib = ':aidl_lib',\",\n@@ -1392,7 +1393,7 @@ public class AndroidLibraryTest extends AndroidBuildViewTestCase {\n                 .getActionForArtifactEndingWith(artifacts,\n                     \"/\" + resources.getJavaSourceJar().getFilename());\n     assertThat(resourceParserAction.getMnemonic()).isEqualTo(\"AndroidResourceParser\");\n-    assertThat(resourceClassJarAction.getMnemonic()).isEqualTo(\"AndroidResourceMerger\");\n+    assertThat(resourceClassJarAction.getMnemonic()).isEqualTo(\"AndroidCompiledResourceMerger\");\n     assertThat(resourceSrcJarAction.getMnemonic()).isEqualTo(\"AndroidResourceValidator\");\n     // Validator also generates an R.txt.\n     assertThat(resourceSrcJarAction.getOutputs()).contains(resources.getRTxt());\ndiff --git a/src/test/java/com/google/devtools/build/lib/rules/android/AndroidResourcesTest.java b/src/test/java/com/google/devtools/build/lib/rules/android/AndroidResourcesTest.java\nindex 08b79d0bfc..6b4f2a3fc9 100644\n--- a/src/test/java/com/google/devtools/build/lib/rules/android/AndroidResourcesTest.java\n+++ b/src/test/java/com/google/devtools/build/lib/rules/android/AndroidResourcesTest.java\n@@ -230,15 +230,14 @@ public class AndroidResourcesTest extends ResourceTestBase {\n \n   @Test\n   public void testParseNoCompile() throws Exception {\n-    useConfiguration(\"--android_aapt=aapt\");\n-\n     RuleContext ruleContext = getRuleContext();\n     ParsedAndroidResources parsed =\n         assertParse(\n             ruleContext,\n             DataBinding.contextFrom(\n                 ruleContext,\n-                ruleContext.getConfiguration().getFragment(AndroidConfiguration.class)));\n+                ruleContext.getConfiguration().getFragment(AndroidConfiguration.class)),\n+            AndroidAaptVersion.AAPT);\n \n     // Since we are not using aapt2, there should be no compiled symbols\n     assertThat(parsed.getCompiledSymbols()).isNull();\n@@ -252,11 +251,8 @@ public class AndroidResourcesTest extends ResourceTestBase {\n \n   @Test\n   public void testParseAndCompile() throws Exception {\n-    mockAndroidSdkWithAapt2();\n-    useConfiguration(\"--android_sdk=//sdk:sdk\", \"--android_aapt=aapt2\");\n-\n     RuleContext ruleContext = getRuleContext();\n-    ParsedAndroidResources parsed = assertParse(ruleContext);\n+    ParsedAndroidResources parsed = assertParse(ruleContext, AndroidAaptVersion.AAPT2);\n \n     assertThat(parsed.getCompiledSymbols()).isNotNull();\n \n@@ -276,12 +272,9 @@ public class AndroidResourcesTest extends ResourceTestBase {\n \n   @Test\n   public void testParseWithDataBinding() throws Exception {\n-    mockAndroidSdkWithAapt2();\n-    useConfiguration(\"--android_sdk=//sdk:sdk\", \"--android_aapt=aapt2\");\n-\n     RuleContext ruleContext = getRuleContextWithDataBinding();\n \n-    ParsedAndroidResources parsed = assertParse(ruleContext);\n+    ParsedAndroidResources parsed = assertParse(ruleContext, AndroidAaptVersion.AAPT2);\n \n     // The parse action should take resources and busybox artifacts in and output symbols\n     assertActionArtifacts(\n@@ -304,15 +297,13 @@ public class AndroidResourcesTest extends ResourceTestBase {\n \n   @Test\n   public void testMergeDataBinding() throws Exception {\n-    useConfiguration(\"--android_aapt=aapt\");\n-\n     RuleContext ruleContext = getRuleContextWithDataBinding();\n-    ParsedAndroidResources parsed = assertParse(ruleContext);\n+    ParsedAndroidResources parsed = assertParse(ruleContext, AndroidAaptVersion.AAPT);\n     MergedAndroidResources merged =\n         parsed.merge(\n             AndroidDataContext.forNative(ruleContext),\n             ResourceDependencies.empty(),\n-            AndroidAaptVersion.chooseTargetAaptVersion(ruleContext));\n+            AndroidAaptVersion.AAPT);\n \n     // Besides processed manifest, inherited values should be equal\n     assertThat(parsed).isEqualTo(new ParsedAndroidResources(merged, parsed.getStampedManifest()));\n@@ -338,12 +329,10 @@ public class AndroidResourcesTest extends ResourceTestBase {\n \n   @Test\n   public void testMergeCompiled() throws Exception {\n-    mockAndroidSdkWithAapt2();\n-    useConfiguration(\n-        \"--android_sdk=//sdk:sdk\", \"--android_aapt=aapt2\", \"--experimental_skip_parsing_action\");\n+    useConfiguration(\"--experimental_skip_parsing_action\");\n \n     RuleContext ruleContext = getRuleContext();\n-    ParsedAndroidResources parsed = assertParse(ruleContext);\n+    ParsedAndroidResources parsed = assertParse(ruleContext, AndroidAaptVersion.AAPT2);\n     MergedAndroidResources merged =\n         parsed.merge(\n             AndroidDataContext.forNative(ruleContext),\n@@ -382,14 +371,11 @@ public class AndroidResourcesTest extends ResourceTestBase {\n \n   @Test\n   public void testValidateAapt() throws Exception {\n-    useConfiguration(\"--android_aapt=aapt\");\n     RuleContext ruleContext = getRuleContext();\n \n-    MergedAndroidResources merged = makeMergedResources(ruleContext);\n+    MergedAndroidResources merged = makeMergedResources(ruleContext, AndroidAaptVersion.AAPT);\n     ValidatedAndroidResources validated =\n-        merged.validate(\n-            AndroidDataContext.forNative(ruleContext),\n-            AndroidAaptVersion.chooseTargetAaptVersion(ruleContext));\n+        merged.validate(AndroidDataContext.forNative(ruleContext), AndroidAaptVersion.AAPT);\n \n     // Inherited values should be equal\n     assertThat(merged).isEqualTo(new MergedAndroidResources(validated));\n@@ -410,15 +396,11 @@ public class AndroidResourcesTest extends ResourceTestBase {\n \n   @Test\n   public void testValidateAapt2() throws Exception {\n-    mockAndroidSdkWithAapt2();\n-    useConfiguration(\"--android_sdk=//sdk:sdk\", \"--android_aapt=aapt2\");\n     RuleContext ruleContext = getRuleContext();\n \n-    MergedAndroidResources merged = makeMergedResources(ruleContext);\n+    MergedAndroidResources merged = makeMergedResources(ruleContext, AndroidAaptVersion.AAPT2);\n     ValidatedAndroidResources validated =\n-        merged.validate(\n-            AndroidDataContext.forNative(ruleContext),\n-            AndroidAaptVersion.chooseTargetAaptVersion(ruleContext));\n+        merged.validate(AndroidDataContext.forNative(ruleContext), AndroidAaptVersion.AAPT2);\n \n     // Inherited values should be equal\n     assertThat(merged).isEqualTo(new MergedAndroidResources(validated));\n@@ -458,12 +440,12 @@ public class AndroidResourcesTest extends ResourceTestBase {\n \n     ProcessedAndroidData processedData =\n         ProcessedAndroidData.of(\n-            makeParsedResources(ruleContext),\n+            makeParsedResources(ruleContext, AndroidAaptVersion.AAPT),\n             AndroidAssets.from(ruleContext)\n                 .process(\n                     AndroidDataContext.forNative(ruleContext),\n                     AssetDependencies.empty(),\n-                    AndroidAaptVersion.chooseTargetAaptVersion(ruleContext)),\n+                    AndroidAaptVersion.AAPT),\n             manifest,\n             rTxt,\n             ruleContext.getImplicitOutputArtifact(AndroidRuleClasses.ANDROID_JAVA_SOURCE_JAR),\n@@ -518,8 +500,7 @@ public class AndroidResourcesTest extends ResourceTestBase {\n \n   @Test\n   public void test_incompatibleUseAapt2ByDefaultEnabled_targetsAapt2() throws Exception {\n-    mockAndroidSdkWithAapt2();\n-    useConfiguration(\"--android_sdk=//sdk:sdk\", \"--incompatible_use_aapt2_by_default\");\n+    useConfiguration(\"--incompatible_use_aapt2_by_default\");\n     RuleContext ruleContext =\n         getRuleContext(\n             \"android_binary\", \"aapt_version = 'auto',\", \"manifest = 'AndroidManifest.xml',\");\n@@ -527,30",
    "Create new terminal sessions with directory of active session .": "diff --git a/app/src/main/java/com/termux/app/TermuxActivity.java b/app/src/main/java/com/termux/app/TermuxActivity.java\nindex 0fe5b5d..c0517b6 100644\n--- a/app/src/main/java/com/termux/app/TermuxActivity.java\n+++ b/app/src/main/java/com/termux/app/TermuxActivity.java\n@@ -603,7 +603,9 @@ public final class TermuxActivity extends Activity implements ServiceConnection\n             new AlertDialog.Builder(this).setTitle(R.string.max_terminals_reached_title).setMessage(R.string.max_terminals_reached_message)\n                 .setPositiveButton(android.R.string.ok, null).show();\n         } else {\n-            TerminalSession newSession = mTermService.createTermSession(null, null, null, failSafe);\n+            TerminalSession currentSession = getCurrentTermSession();\n+            String workingDirectory = (currentSession == null) ? null : currentSession.getCwd();\n+            TerminalSession newSession = mTermService.createTermSession(null, null, workingDirectory, failSafe);\n             if (sessionName != null) {\n                 newSession.mSessionName = sessionName;\n             }\ndiff --git a/terminal-emulator/src/main/java/com/termux/terminal/TerminalSession.java b/terminal-emulator/src/main/java/com/termux/terminal/TerminalSession.java\nindex 5b82b0f..1743e84 100644\n--- a/terminal-emulator/src/main/java/com/termux/terminal/TerminalSession.java\n+++ b/terminal-emulator/src/main/java/com/termux/terminal/TerminalSession.java\n@@ -8,6 +8,7 @@ import android.system.Os;\n import android.system.OsConstants;\n import android.util.Log;\n \n+import java.io.File;\n import java.io.FileDescriptor;\n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n@@ -339,4 +340,25 @@ public final class TerminalSession extends TerminalOutput {\n         return mShellPid;\n     }\n \n+    /** Returns the shell's working directory or null if it was unavailable. */\n+    public String getCwd() {\n+        if (mShellPid < 1) {\n+            return null;\n+        }\n+        try {\n+            final String cwdSymlink = String.format(\"/proc/%s/cwd/\", mShellPid);\n+            String outputPath = new File(cwdSymlink).getCanonicalPath();\n+            if (!outputPath.endsWith(\"/\")) {\n+                outputPath += '/';\n+            }\n+            if (!cwdSymlink.equals(outputPath)) {\n+                return outputPath;\n+            }\n+        } catch (IOException | SecurityException e) {\n+            Log.e(EmulatorDebug.LOG_TAG, \"Error getting current directory\", e);\n+        }\n+        return null;\n+    }\n+\n+\n }",
    "Add shadow for Gallery with rudimentary support for key events": "diff --git a/src/main/java/com/xtremelabs/robolectric/Robolectric.java b/src/main/java/com/xtremelabs/robolectric/Robolectric.java\nindex 913b63168..9ca9696f5 100644\n--- a/src/main/java/com/xtremelabs/robolectric/Robolectric.java\n+++ b/src/main/java/com/xtremelabs/robolectric/Robolectric.java\n@@ -1,17 +1,50 @@\n package com.xtremelabs.robolectric;\n \n-import android.app.*;\n+import android.app.Activity;\n+import android.app.ActivityGroup;\n+import android.app.ActivityManager;\n+import android.app.AlarmManager;\n+import android.app.AlertDialog;\n+import android.app.Application;\n+import android.app.Dialog;\n+import android.app.KeyguardManager;\n+import android.app.ListActivity;\n+import android.app.Notification;\n+import android.app.NotificationManager;\n+import android.app.PendingIntent;\n+import android.app.ProgressDialog;\n+import android.app.Service;\n import android.appwidget.AppWidgetManager;\n import android.bluetooth.BluetoothAdapter;\n import android.bluetooth.BluetoothDevice;\n-import android.content.*;\n+import android.content.ContentResolver;\n+import android.content.ContentValues;\n+import android.content.Context;\n+import android.content.ContextWrapper;\n+import android.content.Intent;\n import android.content.pm.ResolveInfo;\n import android.content.res.AssetManager;\n import android.content.res.Configuration;\n import android.content.res.Resources;\n-import android.database.sqlite.*;\n-import android.graphics.*;\n-import android.graphics.drawable.*;\n+import android.database.sqlite.SQLiteCursor;\n+import android.database.sqlite.SQLiteDatabase;\n+import android.database.sqlite.SQLiteOpenHelper;\n+import android.database.sqlite.SQLiteProgram;\n+import android.database.sqlite.SQLiteQueryBuilder;\n+import android.database.sqlite.SQLiteStatement;\n+import android.graphics.Bitmap;\n+import android.graphics.Canvas;\n+import android.graphics.ColorMatrix;\n+import android.graphics.Matrix;\n+import android.graphics.Paint;\n+import android.graphics.Path;\n+import android.graphics.Rect;\n+import android.graphics.drawable.BitmapDrawable;\n+import android.graphics.drawable.ColorDrawable;\n+import android.graphics.drawable.Drawable;\n+import android.graphics.drawable.LayerDrawable;\n+import android.graphics.drawable.ShapeDrawable;\n+import android.graphics.drawable.StateListDrawable;\n import android.hardware.Camera;\n import android.hardware.SensorManager;\n import android.location.Geocoder;\n@@ -23,19 +56,68 @@ import android.net.ConnectivityManager;\n import android.net.NetworkInfo;\n import android.net.wifi.WifiInfo;\n import android.net.wifi.WifiManager;\n-import android.os.*;\n-import android.preference.*;\n+import android.os.Bundle;\n+import android.os.CountDownTimer;\n+import android.os.Handler;\n+import android.os.HandlerThread;\n+import android.os.Looper;\n+import android.os.Parcel;\n+import android.os.PowerManager;\n+import android.os.ResultReceiver;\n+import android.preference.DialogPreference;\n+import android.preference.ListPreference;\n+import android.preference.Preference;\n+import android.preference.PreferenceActivity;\n+import android.preference.PreferenceCategory;\n+import android.preference.PreferenceGroup;\n+import android.preference.PreferenceScreen;\n import android.telephony.SmsManager;\n import android.telephony.TelephonyManager;\n import android.text.ClipboardManager;\n import android.text.format.DateFormat;\n import android.text.method.PasswordTransformationMethod;\n-import android.view.*;\n+import android.view.Display;\n+import android.view.LayoutInflater;\n+import android.view.MenuInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewConfiguration;\n+import android.view.ViewGroup;\n import android.view.animation.Animation;\n import android.view.animation.AnimationUtils;\n import android.view.inputmethod.InputMethodManager;\n-import android.webkit.*;\n-import android.widget.*;\n+import android.webkit.CookieManager;\n+import android.webkit.CookieSyncManager;\n+import android.webkit.JsPromptResult;\n+import android.webkit.JsResult;\n+import android.webkit.SslErrorHandler;\n+import android.webkit.WebSettings;\n+import android.webkit.WebView;\n+import android.widget.AbsListView;\n+import android.widget.AbsSeekBar;\n+import android.widget.AdapterView;\n+import android.widget.ArrayAdapter;\n+import android.widget.CursorAdapter;\n+import android.widget.ExpandableListView;\n+import android.widget.Filter;\n+import android.widget.FrameLayout;\n+import android.widget.Gallery;\n+import android.widget.GridView;\n+import android.widget.ImageView;\n+import android.widget.ListView;\n+import android.widget.ProgressBar;\n+import android.widget.RatingBar;\n+import android.widget.RemoteViews;\n+import android.widget.ResourceCursorAdapter;\n+import android.widget.SeekBar;\n+import android.widget.SimpleCursorAdapter;\n+import android.widget.TabHost;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+import android.widget.VideoView;\n+import android.widget.ViewAnimator;\n+import android.widget.ViewFlipper;\n+import android.widget.ZoomButtonsController;\n import com.xtremelabs.robolectric.bytecode.RobolectricInternals;\n import com.xtremelabs.robolectric.bytecode.ShadowWrangler;\n import com.xtremelabs.robolectric.shadows.*;\n@@ -163,6 +245,7 @@ public class Robolectric {\n                 ShadowFilter.class,\n                 ShadowFloatMath.class,\n                 ShadowFrameLayout.class,\n+                ShadowGallery.class,\n                 ShadowGeocoder.class,\n                 ShadowGeoPoint.class,\n                 ShadowGridView.class,\n@@ -480,6 +563,10 @@ public class Robolectric {\n         return (ShadowFrameLayout) shadowOf_(instance);\n     }\n \n+    public static ShadowGallery shadowOf(Gallery instance) {\n+        return (ShadowGallery) shadowOf_(instance);\n+    }\n+\n     public static ShadowGeocoder shadowOf(Geocoder instance) {\n         return (ShadowGeocoder) shadowOf_(instance);\n     }\ndiff --git a/src/main/java/com/xtremelabs/robolectric/shadows/ShadowGallery.java b/src/main/java/com/xtremelabs/robolectric/shadows/ShadowGallery.java\nnew file mode 100644\nindex 000000000..43dbcebda\n--- /dev/null\n+++ b/src/main/java/com/xtremelabs/robolectric/shadows/ShadowGallery.java\n@@ -0,0 +1,27 @@\n+package com.xtremelabs.robolectric.shadows;\n+\n+import android.view.KeyEvent;\n+import android.widget.Gallery;\n+import com.xtremelabs.robolectric.internal.Implementation;\n+import com.xtremelabs.robolectric.internal.Implements;\n+import com.xtremelabs.robolectric.internal.RealObject;\n+\n+@Implements(Gallery.class)\n+public class ShadowGallery extends ShadowAbsSpinner {\n+\n+    @RealObject Gallery gallery;\n+\n+    @Implementation\n+    public boolean onKeyDown(int keyCode, KeyEvent event) {\n+        switch (keyCode) {\n+            case KeyEvent.KEYCODE_DPAD_RIGHT:\n+            case KeyEvent.KEYCODE_DPAD_LEFT:\n+                if (onKeyListener != null) {\n+                    onKeyListener.onKey(gallery, keyCode, event);\n+                }\n+                return true;\n+        }\n+        return false;\n+    }\n+\n+}\ndiff --git a/src/test/java/com/xtremelabs/robolectric/shadows/GalleryTest.java b/src/test/java/com/xtremelabs/robolectric/shadows/GalleryTest.java\nnew file mode 100644\nindex 000000000..97de42fcb\n--- /dev/null\n+++ b/src/test/java/com/xtremelabs/robolectric/shadows/GalleryTest.java\n@@ -0,0 +1,59 @@\n+package com.xtremelabs.robolectric.shadows;\n+\n+import android.view.KeyEvent;\n+import android.view.View;\n+import android.widget.Gallery;\n+import com.xtremelabs.robolectric.WithTestDefaultsRunner;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.hamcrest.CoreMatchers.equalTo;\n+import static org.hamcrest.CoreMatchers.sameInstance;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.junit.Assert.assertTrue;\n+\n+@RunWith(WithTestDefaultsRunner.class)\n+public class GalleryTest {\n+    private Gallery gallery;\n+    private TestOnKeyListener listener;\n+    private KeyEvent event;\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        gallery = new Gallery(null);\n+        listener = new TestOnKeyListener();\n+        gallery.setOnKeyListener(listener);\n+        event = new KeyEvent(1, 2);\n+    }\n+\n+    @Test\n+    public void onKeyDown_dPadRightShouldTriggerKeyEventDPadRight() throws Exception {\n+        assertTrue(gallery.onKeyDown(KeyEvent.KEYCODE_DPAD_RIGHT, event));\n+        assertThat(listener.keyCode, equalTo(KeyEvent.KEYCODE_DPAD_RIGHT));\n+        assertThat((Gallery) listener.view, sameInstance(gallery));\n+        assertThat(listener.event, sameInstance(event));\n+    }\n+\n+    @Test\n+    public void onKeyDown_dPadLeftShouldTriggerKeyEventListener() throws Exception {\n+        assertTrue(gallery.onKeyDown(KeyEvent.KEYCODE_DPAD_RIGHT, event));\n+        assertThat(listener.keyCode, equalTo(KeyEvent.KEYCODE_DPAD_RIGHT));\n+        assertThat((Gallery)listener.view, sameInstance(gallery));\n+        assertThat(listener.event, sameInstance(event));\n+    }\n+\n+    private static class TestOnKeyListener implements View.OnKeyListener {\n+        View view;\n+        int keyCode;\n+        KeyEvent event;\n+\n+        @Override\n+        public boolean onKey(View view, int keyCode, KeyEvent event) {\n+            this.view = view;\n+            this.keyCode = keyCode;\n+            this.event = event;\n+            return false;\n+        }\n+    }\n+}",
    "Add some comments": "diff --git a/sonar-core/src/main/java/org/sonar/core/plugins/PluginClassloaders.java b/sonar-core/src/main/java/org/sonar/core/plugins/PluginClassloaders.java\nindex 2b2c27600be..a53effc5c34 100644\n--- a/sonar-core/src/main/java/org/sonar/core/plugins/PluginClassloaders.java\n+++ b/sonar-core/src/main/java/org/sonar/core/plugins/PluginClassloaders.java\n@@ -123,6 +123,10 @@ public class PluginClassloaders {\n       }\n       return realm;\n     } catch (Throwable e) {\n+      // SONAR-3688\n+      // Throwable is explicitely caught instead of Exception in order to log the plugins\n+      // that are compiled for Java > 5. In such case java.lang.UnsupportedClassVersionError\n+      // is raised. \n       throw new SonarException(\"Fail to build the classloader of \" + plugin.getKey(), e);\n     }\n   }\n@@ -144,6 +148,10 @@ public class PluginClassloaders {\n       }\n       return true;\n     } catch (Throwable e) {\n+      // SONAR-3688\n+      // Throwable is explicitely caught instead of Exception in order to log the plugins\n+      // that are compiled for Java > 5. In such case java.lang.UnsupportedClassVersionError\n+      // is raised. \n       throw new SonarException(\"Fail to extend the plugin \" + plugin.getBasePlugin() + \" for \" + plugin.getKey(), e);\n     }\n   }\n@@ -208,8 +216,10 @@ public class PluginClassloaders {\n       return (Plugin) claz.newInstance();\n \n     } catch (Throwable e) {\n-      // Do not catch only Exception in order to detect the plugins compiled for Java > 5\n-      // (it raises a java.lang.UnsupportedClassVersionError)\n+      // SONAR-3688\n+      // Throwable is explicitely caught instead of Exception in order to log the plugins\n+      // that are compiled for Java > 5. In such case java.lang.UnsupportedClassVersionError\n+      // is raised. \n       throw new SonarException(\"Fail to load plugin \" + metadata.getKey(), e);\n     }\n   }",
    "remove cache - value doc parts": "diff --git a/hazelcast-documentation/src/CommonGotchas.md b/hazelcast-documentation/src/CommonGotchas.md\nindex f6ca05eaea..648dbef25d 100644\n--- a/hazelcast-documentation/src/CommonGotchas.md\n+++ b/hazelcast-documentation/src/CommonGotchas.md\n@@ -11,12 +11,12 @@ Hazelcast is the distributed implementation of several structures that exist in\n \n 2.  Hazelcast always return a clone copy of a value. Modifying the returned value does not change the actual value in the map (or multimap or list or set). You should put modified value back to make changes visible to all nodes.\n \n-```java\n-V value = map.get(key);\n-value.updateSomeProperty();\n-map.put(key, value);\n-```\n-If `cache-value` is true (default is true), Hazelcast caches that returned value for fast access in local node. Modifications done to this cached value without putting it back to map will be visible to only local node, successive `get` calls will return the same cached value. To reflect modifications to distributed map, you should put modified value back into map.\n+\n+    ```java\n+    V value = map.get(key);\n+    value.updateSomeProperty();\n+    map.put(key, value);\n+    ```\n \n 3.  Collections which return values of methods such as `IMap.keySet`, `IMap.values`, `IMap.entrySet`, `MultiMap.get`, `MultiMap.remove`, `IMap.keySet`, `IMap.values`, contain cloned values. These collections are NOT backup by related Hazelcast objects. So changes to the these are **NOT** reflected in the originals, and vice-versa.\n \ndiff --git a/hazelcast-documentation/src/FAQ.md b/hazelcast-documentation/src/FAQ.md\nnew file mode 100644\nindex 0000000000..61911ec194\n--- /dev/null\n+++ b/hazelcast-documentation/src/FAQ.md\n@@ -0,0 +1,252 @@\n+\n+\n+# Frequently Asked Questions\n+\n+**1\\. Why 271 as the Default Partition Count**\n+\n+The partition count 271, being a prime number, is a good choice since it will be distributed to the nodes almost evenly. For a small to medium sized cluster, the count 271 gives almost even partition distribution and optimal sized partitions.  As your cluster becomes bigger, this count should be made bigger to have evenly distributed partitions.\n+\n+**2\\. How Do Nodes Discover One Other**\n+\n+\n+When a node is started in a cluster, it will dynamically and automatically be discovered. There are three types of discovery.\n+\n+-\tOne is the multicast. Nodes in a cluster discover each other by multicast, by default. \n+-\tSecond is discovery by TCP/IP. The first node created in the cluster (leader) will form a list of IP addresses of other joining nodes and send this list to these nodes. So, nodes will know each other.\n+-\tAnd, if your application is placed on Amazon EC2, Hazelcast has an automatic discovery mechanism, as the third discovery type. You will just give your Amazon credentials and the joining node will be discovered automatically.\n+\n+Once nodes are discovered, all the communication between them will be via TCP/IP.\n+\n+**3\\. What Happens When a Node Goes Down**\n+\n+Once a node is gone (e.g.crashes) and since data in each node has a backup in other nodes:\n+\n+-\tFirst, the backups in other nodes are restored\n+-\tThen, data from these restored backups are recovered\n+-\tAnd finally, backups for these recovered data are formed\n+\n+So, eventually, no data is lost.\n+\n+\n+\n+**4\\. How Do I Choose Keys Properly**\n+\n+When you store a key & value in a distributed Map, Hazelcast serializes the key and value, and stores the byte array version of them in local ConcurrentHashMaps. These ConcurrentHashMaps use `equals` and `hashCode` methods of byte array version of your key. It does not take into account the actual `equals` and `hashCode` implementations of your objects. So it is important that you choose your keys in a proper way. \n+\n+Implementing `equals` and `hashCode` is not enough, it is also important that the object is always serialized into the same byte array. All primitive types like String, Long, Integer, etc. are good candidates for keys to be used in Hazelcast. An unsorted Set is an example of a very bad candidate because Java Serialization may serialize the same unsorted set in two different byte arrays.\n+\n+Note that the distributed Set and List store their entries as the keys in a distributed Map. So the notes above apply to the objects you store in Set and List.\n+\n+**4\\. How Do I Reflect Value Modification in Distributed Data Structures**\n+\n+Hazelcast always return a clone copy of a value. Modifying the returned value does not change the actual value in the map (or multimap, list, set). You should put the modified value back to make changes visible to all nodes.\n+\n+```java\n+V value = map.get(key);\n+value.updateSomeProperty();\n+map.put(key, value);\n+```\n+\n+Collections which return values of methods such as `IMap.keySet`, `IMap.values`, `IMap.entrySet`, `MultiMap.get`, `MultiMap.remove`, `IMap.keySet`, `IMap.values`, contain cloned values. These collections are NOT backup by related Hazelcast objects. So changes to the these are **NOT** reflected in the originals, and vice-versa.\n+\n+**5\\. How Do I Test My Hazelcast Cluster**\n+\n+Hazelcast allows you to create more than one instance on the same JVM. Each member is called `HazelcastInstance` and each will have its own configuration, socket and threads, i.e. you can treat them as totally separate instances. \n+\n+This enables us to write and run cluster unit tests on a single JVM. As you can use this feature for creating separate members different applications running on the same JVM (imagine running multiple web applications on the same JVM), you can also use this feature for testing Hazelcast cluster.\n+\n+Let's say you want to test if two members have the same size of a map.\n+\n+```java\n+@Test\n+public void testTwoMemberMapSizes() {\n+    // start the first member\n+    HazelcastInstance h1 = Hazelcast.newHazelcastInstance(null);\n+    // get the map and put 1000 entries\n+    Map map1 = h1.getMap(\"testmap\");\n+    for (int i = 0; i < 1000; i++) {\n+        map1.put(i, \"value\" + i);\n+    }\n+    // check the map size\n+    assertEquals(1000, map1.size());\n+    // start the second member\n+    HazelcastInstance h2 = Hazelcast.newHazelcastInstance(null);\n+    // get the same map from the second member\n+    Map map2 = h2.getMap(\"testmap\");\n+    // check the size of map2\n+    assertEquals(1000, map2.size());\n+    // check the size of map1 again\n+    assertEquals(1000, map1.size());\n+}\n+```\n+\n+In the test above, everything happens in the same thread. When developing multi-threaded test, coordination of the thread executions has to be carefully handled. Usage of `CountDownLatch` for thread coordination is highly recommended. You can certainly use other things. Here is an example where we need to listen for messages and make sure that we got these messages:\n+\n+```java\n+@Test\n+public void testTopic() {\n+    // start two member cluster\n+    HazelcastInstance h1 = Hazelcast.newHazelcastInstance(null);\n+    HazelcastInstance h2 = Hazelcast.newHazelcastInstance(null);\n+    String topicName = \"TestMessages\";\n+    // get a topic from the first member and add a messageListener\n+    ITopic<String> topic1 = h1.getTopic(topicName);\n+    final CountDownLatch latch1 = new CountDownLatch(1);\n+    topic1.addMessageListener(new MessageListener() {\n+        public void onMessage(Object msg) {\n+            assertEquals(\"Test1\", msg);\n+            latch1.countDown();\n+        }\n+    });\n+    // get a topic from the second member and add a messageListener\n+    ITopic<String> topic2 = h2.getTopic(topicName);\n+    final CountDownLatch latch2 = new CountDownLatch(2);\n+    topic2.addMessageListener(new MessageListener() {\n+        public void onMessage(Object msg) {\n+            assertEquals(\"Test1\", msg);\n+            latch2.countDown();\n+        }\n+    });\n+    // publish the first message, both should receive this\n+    topic1.publish(\"Test1\");\n+    // shutdown the first member\n+    h1.shutdown();\n+    // publish the second message, second member's topic should receive this\n+    topic2.publish(\"Test1\");\n+    try {\n+        // assert that the first member's topic got the message\n+        assertTrue(latch1.await(5, TimeUnit.SECONDS));\n+        // assert that the second members' topic got two messages\n+        assertTrue(latch2.await(5, TimeUnit.SECONDS));\n+    } catch (InterruptedException ignored) {\n+    }\n+}\n+```\n+You can surely start Hazelcast members with different configurations. Let's say we want to test if Hazelcast `LiteMember` can shutdown fine.\n+\n+```java\n+@Test(timeout = 60000)\n+public void shutdownLiteMember() {\n+    // first config for normal cluster member\n+    Config c1 = new XmlConfigBuilder().build();\n+    c1.setPortAutoIncrement(false);\n+    c1.setPort(5709);\n+    // second config for LiteMember\n+    Config c2 = new XmlConfigBuilder().build();\n+    c2.setPortAutoIncrement(false);\n+    c2.setPort(5710);\n+    // make sure to set LiteMember=true\n+    c2.setLiteMember(true);\n+    // start the normal member with c1\n+    HazelcastInstance hNormal = Hazelcast.newHazelcastInstance(c1);\n+    // start the LiteMember with different configuration c2\n+    HazelcastInstance hLite = Hazelcast.newHazelcastInstance(c2);\n+    hNormal.getMap(\"default\").put(\"1\", \"first\");\n+    assert hLite.getMap(\"default\").get(\"1\").equals(\"first\");\n+    hNormal.shutdown();\n+    hLite.shutdown();\n+}\n+```\n+Also remember to call `Hazelcast.shutdownAll()` after each test case to make sure that there is no other running member left from the previous tests.\n+\n+```java\n+@After\n+public void cleanup() throws Exception {\n+    Hazelcast.shutdownAll();\n+}\n+```\n+\n+For more information please [check our existing tests.](https://github.com/hazelcast/hazelcast/tree/master/hazelcast/src/test/java/com/hazelcast/cluster)\n+\n+\n+**6\\. When **`RuntimeInterruptedException`** is Thrown**\n+\n+Most of the Hazelcast operations throw an `RuntimeInterruptedException` (which is unchecked version of `InterruptedException`) if a user thread is interrupted while waiting a response. Hazelcast uses RuntimeInterruptedException to pass InterruptedException up through interfaces that do not have InterruptedException in their signatures. The users should be able to catch and handle `RuntimeInterruptedException` in such cases as if their threads are interrupted on a blocking operation.\n+\n+**7\\. When **`ConcurrentModificationException`** is Thrown**\n+\n+Some of Hazelcast operations can throw `ConcurrentModificationException` under transaction while trying to acquire a resource, although operation signatures do not define such an exception. Exception is thrown if resource cannot be acquired in a specific time. The users should be able to catch and handle `ConcurrentModificationException` while they are using Hazelcast transactions.\n+\n+\n+**8\\. How is the Split-Brain Syndrome Handled**\n+\n+Imagine that you have 10-node cluster and for some reason the network is divided into two in a way that 4 servers cannot see the other 6. As a result you ended up having two separate clusters; 4-node cluster and 6-node cluster. Members in each sub-cluster are thinking that the other nodes are dead even though they are not. This situation is called Network Partitioning (a.k.a. Split-Brain Syndrome).\n+\n+Since it is a network failure, there is no way to avoid it programatically and your application will run as two separate independent clusters. But we should be able to answer the following questions: \"What will happen after the network failure is fixed and connectivity is restored between these two clusters? Will these two clusters merge into one again? If they do, how are the data conflicts resolved, because you might end up having two different values for the same key in the same map?\"\n+\n+Here is how Hazelcast deals with it:\n+\n+1.  The oldest member of the cluster checks if there is another cluster with the same group-name and group-password in the network.\n+\n+2.  If the oldest member finds such cluster, then it figures out which cluster should merge to the other.\n+\n+3.  Each member of the merging cluster will do the following:\n+\n+\t-   pause\n+\n+\t-   take locally owned map entries\n+\n+\t-   close all of its network connections (detach from its cluster)\n+\n+\t-   join to the new cluster\n+\n+\t-   send merge request for each of its locally owned map entry\n+\n+\t-   resume\n+\n+So each member of the merging cluster is actually rejoining to the new cluster and sending merge request for each of its locally owned map entry. Two important points: \n+\n+-\tSmaller cluster will merge into the bigger one. If they have equal number of members then a hashing algorithm determines the merging cluster.\n+-\tEach cluster may have different versions of the same key in the same map. Destination cluster will decide how to handle merging entry based on the `MergePolicy` set for that map. There are built-in merge policies such as `PassThroughMergePolicy`, `PutIfAbsentMapMergePolicy`, `HigherHitsMapMergePolicy` and `LatestUpdateMapMergePolicy`. But you can develop your own merge policy by implementing `com.hazelcast.map.merge.MapMergePolicy`. You should set the full class name of your implementation to the merge-policy configuration.\n+\n+\n+```java\n+public interface MergePolicy {\n+    /**\n+    * Returns the value of the entry after the merge\n+    * of entries with the same key. Returning value can be\n+    * You should consider the case where existingEntry is null.\n+    *\n+    * @param mapName       name of the map\n+    * @param mergingEntry  entry merging into the destination cluster\n+    * @param existingEntry existing entry in the destination cluster\n+    * @return final value of the entry. If returns null then entry will be removed.\n+    */\n+    Object merge(String mapName, EntryView mergingEntry, EntryView existingEntry);\n+}\n+```\n+\n+Here is how merge policies are specified per map:\n+\n+```xml\n+<hazelcast>\n+    ...\n+    <map name=\"default\">\n+        <backup-count>1</backup-count>\n+        <eviction-policy>NONE</eviction-policy>\n+        <max-size>0</max-size>\n+        <eviction-percentage>25</eviction-percentage>\n+        <!--\n+            While recovering from split-brain (network partitioning),\n+            map entries in the small cluster will merge into the bigger cluster\n+            based on the policy set here. When an entry merge into the\n+            cluster, there might an existing entry with the same key already.\n+            Values of these entries might be different for that same key.\n+            Which value should be set for the key? Conflict is resolved by\n+            the policy set here. Default policy is hz.ADD_NEW_ENTRY\n+\n+            There are built-in merge policies such as\n+            There are built-in merge policies such as\n+            com.hazelcast.map.merge.PassThroughMergePolicy; entry will be added if there is no existing entry for the key.\n+            com.hazelcast.map.merge.PutIfAbsentMapMergePolicy ; entry will be added if the merging entry doesn't exist in the cluster.\n+            com.hazelcast.map.merge.HigherHitsMapMergePolicy ; entry with the higher hits wins.\n+            com.hazelcast.map.merge.LatestUpdateMapMergePolicy ; entry with the latest update wins.\n+        -->\n+        <merge-policy>MY_MERGE_POLICY_CLASS</merge-policy>\n+    </map>\n+\n+    ...\n+</hazelcast>\n+```\n+\n+",
    "prepare release 0 . 8 . 0": "diff --git a/pom.xml b/pom.xml\nindex ae7b7a84ad..2a3354b812 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -3,7 +3,7 @@\n   <modelVersion>4.0.0</modelVersion>\n   <name>Zeebe Util Root</name>\n   <artifactId>zb-util-root</artifactId>\n-  <version>0.8.0-SNAPSHOT</version>\n+  <version>0.8.0</version>\n   <packaging>pom</packaging>\n \n   <parent>\n@@ -63,7 +63,7 @@\n     <url>https://github.com/zeebe-io/zb-util</url>\n     <connection>scm:git:git@github.com:zeebe-io/zb-util.git</connection>\n     <developerConnection>scm:git:git@github.com:zeebe-io/zb-util.git</developerConnection>\n-    <tag>HEAD</tag>\n+    <tag>0.8.0</tag>\n   </scm>\n \n </project>\ndiff --git a/test-util/pom.xml b/test-util/pom.xml\nindex fa46f2cca0..7fe50bf02c 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -8,7 +8,7 @@\n   <parent>\n     <groupId>io.zeebe</groupId>\n     <artifactId>zb-util-root</artifactId>\n-    <version>0.8.0-SNAPSHOT</version>\n+    <version>0.8.0</version>\n     <relativePath>../</relativePath>\n   </parent>\n \ndiff --git a/util/pom.xml b/util/pom.xml\nindex d7d90932e9..d10c827c4e 100644\n--- a/util/pom.xml\n+++ b/util/pom.xml\n@@ -1,5 +1,4 @@\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n   <name>Zeebe Util</name>\n@@ -9,7 +8,7 @@\n   <parent>\n     <groupId>io.zeebe</groupId>\n     <artifactId>zb-util-root</artifactId>\n-    <version>0.8.0-SNAPSHOT</version>\n+    <version>0.8.0</version>\n     <relativePath>../</relativePath>\n   </parent>\n \ndiff --git a/zb-map/pom.xml b/zb-map/pom.xml\nindex 0726d7c8b7..e486a2c2d5 100644\n--- a/zb-map/pom.xml\n+++ b/zb-map/pom.xml\n@@ -8,7 +8,7 @@\n   <parent>\n     <groupId>io.zeebe</groupId>\n     <artifactId>zb-util-root</artifactId>\n-    <version>0.8.0-SNAPSHOT</version>\n+    <version>0.8.0</version>\n     <relativePath>../</relativePath>\n   </parent>\n ",
    "added xml preview code from master branch": "diff --git a/library/src/com/emilsjolander/components/stickylistheaders/StickyListHeadersListView.java b/library/src/com/emilsjolander/components/stickylistheaders/StickyListHeadersListView.java\nindex 6736b9c..184b96a 100644\n--- a/library/src/com/emilsjolander/components/stickylistheaders/StickyListHeadersListView.java\n+++ b/library/src/com/emilsjolander/components/stickylistheaders/StickyListHeadersListView.java\n@@ -203,6 +203,10 @@ public class StickyListHeadersListView extends ListView {\n \n \t@Override\n \tpublic void setAdapter(ListAdapter adapter) {\n+\t\tif (this.isInEditMode()) {\n+\t\t\tsuper.setAdapter(adapter);\n+\t\t\treturn;\n+\t\t}\n \t\tif(adapter == null){\n \t\t\tmAdapter = null;\n \t\t\treset();\ndiff --git a/sample/project.properties b/sample/project.properties\nindex 003959a..0a62d81 100644\n--- a/sample/project.properties\n+++ b/sample/project.properties\n@@ -12,4 +12,4 @@\n \n # Project target.\n target=android-16\n-android.library.reference.1=../Library\n+android.library.reference.1=../library\ndiff --git a/sample/res/layout/main.xml b/sample/res/layout/main.xml\nindex 92f6e33..641ec31 100644\n--- a/sample/res/layout/main.xml\n+++ b/sample/res/layout/main.xml\n@@ -1,5 +1,6 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     android:orientation=\"vertical\">\n@@ -12,7 +13,8 @@\n         android:clipToPadding=\"false\" \n         android:scrollbarStyle=\"outsideOverlay\"\n         android:fastScrollEnabled=\"true\"\n-        android:drawSelectorOnTop=\"true\" />\n+        android:drawSelectorOnTop=\"true\"\n+        tools:listitem=\"@layout/test_list_item_layout\" />\n     \n     <TextView \n         android:id=\"@+id/empty\"",
    "Fix an issue where a \\\" build \\\" command might hang after it finished , because sandbox directories could not be cleaned up . . - - .": "diff --git a/src/main/java/com/google/devtools/build/lib/sandbox/SandboxHelpers.java b/src/main/java/com/google/devtools/build/lib/sandbox/SandboxHelpers.java\nindex 004c8dffbc..de018b1dbf 100644\n--- a/src/main/java/com/google/devtools/build/lib/sandbox/SandboxHelpers.java\n+++ b/src/main/java/com/google/devtools/build/lib/sandbox/SandboxHelpers.java\n@@ -26,6 +26,8 @@ import com.google.devtools.build.lib.analysis.BlazeDirectories;\n import com.google.devtools.build.lib.analysis.config.BuildConfiguration;\n import com.google.devtools.build.lib.buildtool.BuildRequest;\n import com.google.devtools.build.lib.cmdline.Label;\n+import com.google.devtools.build.lib.events.Event;\n+import com.google.devtools.build.lib.events.EventHandler;\n import com.google.devtools.build.lib.standalone.StandaloneSpawnStrategy;\n import com.google.devtools.build.lib.util.Preconditions;\n import com.google.devtools.build.lib.vfs.Path;\n@@ -38,7 +40,10 @@ import java.util.concurrent.atomic.AtomicInteger;\n /** Helper methods that are shared by the different sandboxing strategies in this package. */\n final class SandboxHelpers {\n \n-  static void lazyCleanup(ExecutorService backgroundWorkers, final SandboxRunner runner) {\n+  static void lazyCleanup(\n+      ExecutorService backgroundWorkers,\n+      final EventHandler eventHandler,\n+      final SandboxRunner runner) {\n     // By deleting the sandbox directory in the background, we avoid having to wait for it to\n     // complete before returning from the action, which improves performance.\n     backgroundWorkers.execute(\n@@ -46,18 +51,15 @@ final class SandboxHelpers {\n           @Override\n           public void run() {\n             try {\n-              while (!Thread.currentThread().isInterrupted()) {\n-                try {\n-                  runner.cleanup();\n-                  return;\n-                } catch (IOException e2) {\n-                  // Sleep & retry.\n-                  Thread.sleep(250);\n-                }\n-              }\n-            } catch (InterruptedException e) {\n-              // Mark ourselves as interrupted and then exit.\n-              Thread.currentThread().interrupt();\n+              runner.cleanup();\n+            } catch (IOException e) {\n+              // Can't do anything except logging here. SandboxModule#afterCommand will try again\n+              // and alert the user if cleanup still fails.\n+              eventHandler.handle(\n+                  Event.warn(\n+                      String.format(\n+                          \"Could not delete sandbox directory after action execution: %s (%s)\",\n+                          runner.getSandboxPath(), e)));\n             }\n           }\n         });\ndiff --git a/src/main/java/com/google/devtools/build/lib/sandbox/SandboxModule.java b/src/main/java/com/google/devtools/build/lib/sandbox/SandboxModule.java\nindex 53c5c67bfb..df28aaf27c 100644\n--- a/src/main/java/com/google/devtools/build/lib/sandbox/SandboxModule.java\n+++ b/src/main/java/com/google/devtools/build/lib/sandbox/SandboxModule.java\n@@ -21,11 +21,13 @@ import com.google.devtools.build.lib.actions.ActionContextConsumer;\n import com.google.devtools.build.lib.actions.ActionContextProvider;\n import com.google.devtools.build.lib.buildtool.BuildRequest;\n import com.google.devtools.build.lib.buildtool.buildevent.BuildStartingEvent;\n-import com.google.devtools.build.lib.concurrent.ExecutorUtil;\n+import com.google.devtools.build.lib.events.Event;\n import com.google.devtools.build.lib.runtime.BlazeModule;\n import com.google.devtools.build.lib.runtime.Command;\n import com.google.devtools.build.lib.runtime.CommandEnvironment;\n import com.google.devtools.build.lib.util.Preconditions;\n+import com.google.devtools.build.lib.vfs.FileSystemUtils;\n+import com.google.devtools.build.lib.vfs.Path;\n import com.google.devtools.common.options.OptionsBase;\n import java.io.IOException;\n import java.util.concurrent.ExecutorService;\n@@ -35,18 +37,18 @@ import java.util.concurrent.Executors;\n  * This module provides the Sandbox spawn strategy.\n  */\n public final class SandboxModule extends BlazeModule {\n-  // Per-server state\n-  private ExecutorService backgroundWorkers;\n-\n   // Per-command state\n   private CommandEnvironment env;\n   private BuildRequest buildRequest;\n+  private ExecutorService backgroundWorkers;\n+  private SandboxOptions sandboxOptions;\n \n   @Override\n   public Iterable<ActionContextProvider> getActionContextProviders() {\n     Preconditions.checkNotNull(env);\n     Preconditions.checkNotNull(buildRequest);\n     Preconditions.checkNotNull(backgroundWorkers);\n+    sandboxOptions = buildRequest.getOptions(SandboxOptions.class);\n     try {\n       return ImmutableList.<ActionContextProvider>of(\n           SandboxActionContextProvider.create(env, buildRequest, backgroundWorkers));\n@@ -79,13 +81,46 @@ public final class SandboxModule extends BlazeModule {\n \n   @Override\n   public void afterCommand() {\n+    // We want to make sure that all sandbox directories are deleted after a command finishes or at\n+    // least the user gets notified if some of them can't be deleted. However we can't rely on the\n+    // background workers for that, because a) they can't log, and b) if a directory is undeletable,\n+    // the Runnable might never finish. So we cancel them and delete the remaining directories here,\n+    // where we have more control.\n+    backgroundWorkers.shutdownNow();\n+    if (sandboxOptions != null && !sandboxOptions.sandboxDebug) {\n+      Path sandboxRoot =\n+          env.getDirectories()\n+              .getOutputBase()\n+              .getRelative(env.getRuntime().getProductName() + \"-sandbox\");\n+      if (sandboxRoot.exists()) {\n+        try {\n+          for (Path child : sandboxRoot.getDirectoryEntries()) {\n+            try {\n+              FileSystemUtils.deleteTree(child);\n+            } catch (IOException e) {\n+              env.getReporter()\n+                  .handle(\n+                      Event.warn(\n+                          String.format(\n+                              \"Could not delete sandbox directory: %s (%s)\",\n+                              child.getPathString(), e)));\n+            }\n+          }\n+          sandboxRoot.delete();\n+        } catch (IOException e) {\n+          env.getReporter()\n+              .handle(\n+                  Event.warn(\n+                      String.format(\n+                          \"Could not delete %s directory: %s\", sandboxRoot.getBaseName(), e)));\n+        }\n+      }\n+    }\n+\n     env = null;\n     buildRequest = null;\n-\n-    // \"bazel clean\" will also try to delete the sandbox directories, leading to a race condition\n-    // if it is run right after a \"bazel build\". We wait for and shutdown the background worker pool\n-    // before continuing to avoid this.\n-    ExecutorUtil.interruptibleShutdown(backgroundWorkers);\n+    backgroundWorkers = null;\n+    sandboxOptions = null;\n   }\n \n   @Subscribe\ndiff --git a/src/main/java/com/google/devtools/build/lib/sandbox/SandboxRunner.java b/src/main/java/com/google/devtools/build/lib/sandbox/SandboxRunner.java\nindex 4bb2b95c1b..dabbf66aa8 100644\n--- a/src/main/java/com/google/devtools/build/lib/sandbox/SandboxRunner.java\n+++ b/src/main/java/com/google/devtools/build/lib/sandbox/SandboxRunner.java\n@@ -122,4 +122,8 @@ abstract class SandboxRunner {\n       FileSystemUtils.deleteTree(sandboxPath);\n     }\n   }\n+\n+  Path getSandboxPath() {\n+    return sandboxPath;\n+  }\n }\ndiff --git a/src/main/java/com/google/devtools/build/lib/sandbox/SandboxStrategy.java b/src/main/java/com/google/devtools/build/lib/sandbox/SandboxStrategy.java\nindex d02ffc22a6..b5d787c4be 100644\n--- a/src/main/java/com/google/devtools/build/lib/sandbox/SandboxStrategy.java\n+++ b/src/main/java/com/google/devtools/build/lib/sandbox/SandboxStrategy.java\n@@ -26,6 +26,7 @@ import com.google.devtools.build.lib.actions.Spawns;\n import com.google.devtools.build.lib.analysis.BlazeDirectories;\n import com.google.devtools.build.lib.buildtool.BuildRequest;\n import com.google.devtools.build.lib.events.Event;\n+import com.google.devtools.build.lib.events.EventHandler;\n import com.google.devtools.build.lib.util.Preconditions;\n import com.google.devtools.build.lib.vfs.Path;\n import com.google.devtools.build.lib.vfs.PathFragment;\n@@ -70,6 +71,7 @@ abstract class SandboxStrategy implements SandboxedSpawnActionContext {\n       SandboxRunner runner,\n       AtomicReference<Class<? extends SpawnActionContext>> writeOutputFiles)\n       throws ExecException, InterruptedException {\n+    EventHandler eventHandler = actionExecutionContext.getExecutor().getEventHandler();\n     try {\n       runner.run(\n           spawn.getArguments(),\n@@ -90,17 +92,14 @@ abstract class SandboxStrategy implements SandboxedSpawnActionContext {\n         } catch (IOException e) {\n           // Catch the IOException and turn it into an error message, otherwise this might hide an\n           // exception thrown during runner.run earlier.\n-          actionExecutionContext\n-              .getExecutor()\n-              .getEventHandler()\n-              .handle(\n-                  Event.error(\n-                      \"I/O exception while extracting output artifacts from sandboxed execution: \"\n-                          + e));\n+          eventHandler.handle(\n+              Event.error(\n+                  \"I/O exception while extracting output artifacts from sandboxed execution: \"\n+                      + e));\n         }\n       }\n       if (!sandboxOptions.sandboxDebug) {\n-        SandboxHelpers.lazyCleanup(backgroundWorkers, runner);\n+        SandboxHelpers.lazyCleanup(backgroundWorkers, eventHandler, runner);\n       }\n     }\n \ndiff --git a/src/test/shell/bazel/bazel_sandboxing_test.sh b/src/test/shell/bazel/bazel_sandboxing_test.sh\nindex 38b918979b..17e3d4fed2 100755\n--- a/src/test/shell/bazel/bazel_sandboxing_test.sh\n+++ b/src/test/shell/bazel/bazel_sandboxing_test.sh\n@@ -222,8 +222,7 @@ function test_sandbox_cleanup() {\n   bazel build examples/genrule:tools_work &> $TEST_log \\\n     || fail \"Hermetic genrule failed: examples/genrule:tools_work\"\n   bazel shutdown &> $TEST_log || fail \"bazel shutdown failed\"\n-  ls -la \"$(bazel info output_base)/bazel-sandbox\"\n-  if [[ \"$(ls -A \"$(bazel info execution_root)\"/bazel-sandbox)\" ]]; then\n+  if [[ \"$(ls -la \"$(bazel info output_base)/bazel-sandbox\")\" ]]; then\n     fail \"Build left files around afterwards\"\n   fi\n }",
    "implement transformation to RoaringBitmap via long [ ] as well": "diff --git a/src/main/java/org/roaringbitmap/BitSetUtil.java b/src/main/java/org/roaringbitmap/BitSetUtil.java\nindex ee6a96ed..f6ba8668 100644\n--- a/src/main/java/org/roaringbitmap/BitSetUtil.java\n+++ b/src/main/java/org/roaringbitmap/BitSetUtil.java\n@@ -1,190 +1,124 @@\n package org.roaringbitmap;\n \n+import java.util.Arrays;\n import java.util.BitSet;\n \n public class BitSetUtil {\n-\tstatic final int CHUNK_SIZE = 1 << 16;\n+\t// a block consists has a maximum of 1024 words, each representing 64 bits, thus representing at maximum 65536 bits\n+\tstatic final int BLOCK_LENGTH = 1024; \n \n \t/**\n-\t * Generate RoaringBitmap out of the given bitSet\n+\t * Generate RoaringBitmap out of the bitSet\n \t * \n-\t * @param bitset\n-\t * @return bitmap\n+\t * @param bitSet\n+\t * @return roaring bitmap\n \t */\n-\tstatic RoaringBitmap bitmapOf(final BitSet bitset) {\n-\t\t// dont make method public, so other parties wont use it.\n-\t\t// if daniel likes it, he will put it to RoaringBitmap :>\n-\t\tfinal int bitsetLength = bitset.length();\n-\t\tif (bitsetLength == 0) {\n+\tstatic RoaringBitmap bitmapOf(final BitSet bitSet) {\n+\t\tfinal int cardinality = bitSet.cardinality();\n+\t\tif (cardinality == 0) {\n \t\t\treturn new RoaringBitmap();\n+\t\t} else if (cardinality <= ArrayContainer.DEFAULT_MAX_SIZE) {\n+\t\t\t// if it is a tiny bitSet, we can directly build a arrayContainer, without an extra bitSet#toLongArray\n+\t\t\tfinal RoaringBitmap bitmap = new RoaringBitmap();\n+\t\t\tbitmap.highLowContainer.append((short)0, arrayContainerOf(cardinality, bitSet));\n+\t\t\treturn bitmap;\n+\t\t} else {\n+\t\t\treturn bitmapOf(cardinality, bitSet.toLongArray());\n \t\t}\n+\t}\n \n+\t/**\n+\t * Generate RoaringBitmap out of a long[], each long using little-endian representation of its bits \n+\t * \n+\t * @see BitSet#toLongArray() for an equivalent\n+\t * @param bitset\n+\t * @return roaring bitmap\n+\t */\n+    static RoaringBitmap bitmapOf(final long[] words) {\n+\t\tfinal int overallCardinality = cardinality(0, words.length, words);\n+\t\tif (overallCardinality == 0) {\n+\t\t\treturn new RoaringBitmap();\n+\t\t} else {\n+\t\t\treturn bitmapOf(overallCardinality, words);\n+\t\t}\n+    }\n+    \n+\tprivate static RoaringBitmap bitmapOf(final int cardinality, final long[] words) {\n+\t\t// split long[] into blocks. \n+\t\t// each block becomes a single container, if any bit is set\n \t\tfinal RoaringBitmap ans = new RoaringBitmap();\n-\n-\t\t// divide bitset in 1<<16 chunks\n-\t\tfinal int chunkSize = 1 << 16;\n-\t\tfor (int offset = 0; offset < bitsetLength; offset += chunkSize) {\n-\t\t\t// avoid empty container creation, if there is no bit in range anyways\n-\t\t\tif (BitSetUtil.any(offset, chunkSize, bitset)) {\n-\t\t\t\tfinal Container container = BitSetUtil.containerOf(offset, chunkSize, bitset);\n-\n-\t\t\t\t// it is always the first container, it never replaces or expands an existing one\n-\t\t\t\t// => index is always negative, no extra check needed\n-\t\t\t\tfinal short hb = Util.highbits(offset);\n-\t\t\t\tfinal int i = ans.highLowContainer.getIndex(hb);\n-\t\t\t\tans.highLowContainer.insertNewKeyValueAt(-i - 1, hb, container);\n+\t\tint containerIndex = 0;\n+\t\tint currentCardinality = 0;\n+\t\t\n+\t\t// for each block\n+\t\t// (unless we already have reached overall cardinality, e.g. when long[] is way longer and has no bits set, then we can skip everything else)\n+\t\tfor (int from = 0; from < words.length && currentCardinality < cardinality; from += BLOCK_LENGTH) {\n+\t\t\tfinal int to = Math.min(from + BLOCK_LENGTH, words.length);\n+\t\t\tfinal int blockCardinality = cardinality(from, to, words);\n+\t\t\tif (blockCardinality > 0) { \n+\t\t\t\tans.highLowContainer.insertNewKeyValueAt(containerIndex++, Util.highbits(from * Long.SIZE), BitSetUtil.containerOf(from, to, blockCardinality, words));\n+\t\t\t\tcurrentCardinality += blockCardinality;\n \t\t\t}\n \t\t}\n \t\treturn ans;\n \t}\n \n-\tprivate static Container containerOf(final int offset, final int length, final BitSet bitSet) {\n-\t\t// TODO: find a good way to decide between arraycontainer/bitmapcontainer and runcontainer, without using lots of allocations\n-\t\tfinal int cardinality = cardinality(offset, length, bitSet);\n-\t\tif (cardinality <= ArrayContainer.DEFAULT_MAX_SIZE) {\n-\t\t\t// containers with DEFAULT_MAX_SZE or less integers should be ArrayContainers\n-\t\t\treturn arrayContainerOf(offset, length, cardinality, bitSet);\n+\tprivate static Container containerOf(final int from, final int to, final int blockCardinality, final long[] words) {\n+\t\t// find the best container available\n+\t\tif (blockCardinality <= ArrayContainer.DEFAULT_MAX_SIZE) {\n+\t\t\t// containers with DEFAULT_MAX_SIZE or less integers should be ArrayContainers\n+\t\t\treturn arrayContainerOf(from, to, blockCardinality, words);\n+\t\t} else {\n+\t\t\t// otherwise use bitmap container, which is kinda the same as Bitset\n+\t\t\t// ideas for the future: \n+\t\t\t// - if blockCardinality is rather high, then runlength encoding via RunContainer might be the better choice) \n+\t\t\t// - (maybe there is also another way of recognizing high amount of repetition? i would rather scan the words once in the beginning and save memory at the end?)\t\n+\t\t\treturn new BitmapContainer(Arrays.copyOfRange(words, from, to), blockCardinality);\n \t\t}\n-\n-\t\tfinal int runs = BitSetUtil.nbrRuns(offset, length, bitSet);\n-\t\tif (runs == 0) {\n-\t\t\treturn new RunContainer();\n-\t\t}\n-\t\treturn runContainerOf(offset, length, runs, bitSet);\n \t}\n \n-\tprivate static ArrayContainer arrayContainerOf(final int offset, final int length, final int cardinality, final BitSet bs) {\n-\t\t// content is sorted, as BitSet is already sorted  \n+\tprivate static ArrayContainer arrayContainerOf(final int from, final int to, final int cardinality, final long[] words) {\n+\t\t// precondition: cardinality is max 4096\n \t\tfinal short[] content = new short[cardinality];\n-\t\tint j = 0;\n-\t\tfor (int i = bs.nextSetBit(offset), offsetLength = offset + length; i >= 0 && i < offsetLength; i = bs.nextSetBit(i + 1)) {\n-\t\t\tcontent[j++] = (short) (i - offset);\n-\t\t}\n-\t\treturn new ArrayContainer(content);\n-\t}\n-\n-\tprivate static RunContainer runContainerOf(final int offset, final int length, final int nbrRuns, final BitSet bs) {\n-\t\tif (nbrRuns == 0) {\n-\t\t\treturn new RunContainer(new short[0], 0);\n-\t\t}\n-\n-\t\tshort[] valueslength = new short[2 * nbrRuns];\n-\n-\t\tint index = -1;\n-\t\tint runLength = 0;\n-\t\tboolean finish = false;\n-\t\tint runs = 0;\n-\t\tfor (int i = bs.nextSetBit(offset), offsetLength = offset + length; i >= 0 && i < offsetLength; i = bs.nextSetBit(i + 1)) {\n-\t\t\t// operate on index i here\n-\t\t\tif (i == Integer.MAX_VALUE) {\n-\t\t\t\tif (index != -1) {\n-\t\t\t\t\tvalueslength[runs * 2] = (short) (index - offset);\n-\t\t\t\t\tvalueslength[runs * 2 + 1] = (short) runLength;\n-\t\t\t\t\truns++;\n-\t\t\t\t}\n-\t\t\t\tfinish = true;\n-\t\t\t\tbreak; // or (i+1) would overflow\n-\t\t\t}\n-\n-\t\t\tif (index == -1) {\n-\t\t\t\tindex = i;\n-\t\t\t\trunLength = 0;\n-\t\t\t} else {\n-\t\t\t\tif (index + runLength + 1 == i) {\n-\t\t\t\t\trunLength++;\n-\t\t\t\t} else {\n-\t\t\t\t\tvalueslength[runs * 2] = (short) (index - offset);\n-\t\t\t\t\tvalueslength[runs * 2 + 1] = (short) runLength;\n-\t\t\t\t\truns++;\n-\n-\t\t\t\t\tindex = i;\n-\t\t\t\t\trunLength = 0;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (index != -1 && !finish) {\n-\t\t\tvalueslength[runs * 2] = (short) (index - offset);\n-\t\t\tvalueslength[runs * 2 + 1] = (short) runLength;\n-\t\t\truns++;\n-\t\t}\n-\n-\t\treturn new RunContainer(valueslength, nbrRuns);\n-\t}\n-\n-\t/**\n-\t * How many runs of consecutive values are necessary to represents the set\n-\t * bits in the range of the bitSet\n-\t * \n-\t * @param offset\n-\t * @param length\n-\t * @param bitSet\n-\t * @return nbrruns\n-\t */\n-\tprivate static int nbrRuns(final int offset, final int length, final BitSet bitSet) {\n-\t\tint index = -1;\n-\t\tint runLength = 0;\n-\t\tboolean finish = false;\n-\t\tint runs = 0;\n-\t\tfor (int i = bitSet.nextSetBit(offset), offsetLength = offset + length; i >= 0 && i < offsetLength; i = bitSet.nextSetBit(i + 1)) {\n-\t\t\t// operate on index i here\n-\t\t\tif (i == Integer.MAX_VALUE) {\n-\t\t\t\tif (index != -1) {\n-\t\t\t\t\truns++;\n+\t\tint index = 0;\n+\t\t\t\t\t\t\n+\t\t// for each word, unless we already have reached cardinality\n+\t\tlong word = 0;\n+\t\tfor (int i = from, socket = 0; i < to && index < cardinality; i++, socket += Long.SIZE) { \n+\t\t\tif (words[i] == 0) continue;\n+\t\t\t\n+\t\t\t// for each bit, unless updated word has become 0 (no more bits left) or we already have reached cardinality\n+\t\t\tword = words[i];\n+\t\t\tfor (int bitIndex = 0; word != 0 && bitIndex < Long.SIZE && index < cardinality; word >>>= 1, bitIndex++) {\n+\t\t\t\t// TODO: does it make sense to start with (0+trailing zeros) or not worth the effort? \n+\t\t\t\t// (what could be the fastest way to iterate through the long?)\n+\t\t\t\tif ((word & 1l) != 0) {\n+\t\t\t\t\tcontent[index++] = (short)(socket + bitIndex);\n \t\t\t\t}\n-\t\t\t\tfinish = true;\n-\t\t\t\tbreak; // or (i+1) would overflow\n \t\t\t}\n-\n-\t\t\tif (index == -1) {\n-\t\t\t\tindex = i;\n-\t\t\t\trunLength = 0;\n-\t\t\t} else {\n-\t\t\t\tif (index + runLength + 1 == i) {\n-\t\t\t\t\trunLength++;\n-\t\t\t\t} else {\n-\t\t\t\t\truns++;\n-\t\t\t\t\tindex = i;\n-\t\t\t\t\trunLength = 0;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (index != -1 && !finish) {\n-\t\t\truns++;\n \t\t}\n-\t\treturn runs;\n-\t}\n-\n-\t/**\n-\t * Returns true, if any bit is set in range of the bitSet\n-\t * \n-\t * @param offset\n-\t * @param length\n-\t * @param bitSet\n-\t * @return true, if any bit is set in range of the bitSet\n-\t */\n-\tprivate static boolean any(final int offset, final int length, final BitSet bitSet) {\n-\t\tfinal int index = bitSet.nextSetBit(offset);\n-\t\treturn index >= 0 && index < offset + length;\n+\t\treturn new ArrayContainer(content);\n \t}\n \n-\t/**\n-\t * Counts set bits in the range of the bitSet\n-\t * \n-\t * @param offset\n-\t * @param length\n-\t * @param bitSet\n-\t * @return counted set bits in the range of the bitSet\n-\t */\n-\tprivate static int cardinality(final int offset, final int length, final BitSet bitSet) {\n-\t\tint cardinality = 0;\n-\t\tfor (int i = bitSet.nextSetBit(offset), offsetLength = offset + length; i >= 0 && i < offsetLength; i = bitSet.nextSetBit(i + 1)) {\n-\t\t\tif (i == Integer.MAX_VALUE) {\n-\t\t\t\tbreak; // or (i+1) would overflow\n-\t\t\t}\n-\t\t\tcardinality++;\n+\tprivate static ArrayContainer arrayContainerOf(final int cardinality, final BitSet bs) {\n+\t\tfinal short[] content = new short[cardinality];\n+\t\tint index = 0;\n+\t    for (int i = bs.nextSetBit(0); i >= 0; i = bs.nextSetBit(i+1)) {\n+\t             // operate on index i here\n+\t             if (i == Integer.MAX_VALUE) {\n+\t                 break; // or (i+1) would overflow\n+\t             }\n+\t             content[index++] = (short)i;\n+\t    }\n+\t    return new ArrayContainer(content);\n+\t};\n+\t\n+\n+\tprivate static int cardinality(final int from, final int to, final long[] words) {\n+\t\tint sum = 0;\n+\t\tfor (int i = from; i < to; i++) {\n+\t\t\tsum += Long.bitCount(words[i]);\n \t\t}\n-\t\treturn cardinality;\n+\t\treturn sum;\n \t}\n }\ndiff --git a/src/test/java/org/roaringbitmap/TestBitSetUtil.java b/src/test/java/org/roaringbitmap/TestBitSetUtil.java\nindex dae2cd13..b74da67d 100644\n--- a/src/test/java/org/roaringbitmap/TestBitSetUtil.java\n+++ b/src/test/java/org/roaringbitmap/TestBitSetUtil.java\n@@ -18,7 +18,36 @@ public class TestBitSetUtil {\n \t@Test\n \tpublic void testFullBitSet() {\n \t\tfinal BitSet bitset = new BitSet();\n-\t\tbitset.set(0, BitSetUtil.CHUNK_SIZE * 10);\n+\t\tfinal int nbits = BitSetUtil.BLOCK_LENGTH * Long.SIZE * 50;\n+\t\tbitset.set(0, nbits);\n+\t\tfinal RoaringBitmap bitmap = BitSetUtil.bitmapOf(bitset);\n+\t\tassertEqualBitsets(bitset, bitmap);\n+\t}\n+\t\n+\t@Test\n+\tpublic void testFlipFlapBetweenRandomFullAndEmptyBitSet() {\t\t\n+\t\tfinal Random random = new Random();\t\n+\t\tfinal int nbitsPerBlock = BitSetUtil.BLOCK_LENGTH * Long.SIZE;\n+\t\tfinal int blocks = 50;\n+\t\tfinal BitSet bitset = new BitSet(nbitsPerBlock*blocks);\n+\t\t\n+\t\t// i want a mix of empty blocks, randomly filled blocks and full blocks\n+\t\tfor (int block = 0; block < blocks * nbitsPerBlock; block+=nbitsPerBlock) {\n+\t\t\tint type = random.nextInt(3);\n+\t\t\tswitch(type) {\n+\t\t\t\tcase 0:\n+\t\t\t\t\t// a block with random set bits\n+\t\t\t\t\tappendRandomBitset(random, block, bitset, nbitsPerBlock);\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase 1:\n+\t\t\t\t\t// a full block\n+\t\t\t\t\tbitset.set(block, block+nbitsPerBlock);\n+\t\t\t\t\tbreak;\n+\t\t\t\tdefault:\n+\t\t\t\t\t// and an empty block; \n+\t\t\t\t\tbreak;\n+\t\t\t}\n+\t\t}\n \t\tfinal RoaringBitmap bitmap = BitSetUtil.bitmapOf(bitset);\n \t\tassertEqualBitsets(bitset, bitmap);\n \t}\n@@ -26,8 +55,10 @@ public class TestBitSetUtil {\n \t@Test\n \tpublic void testRandomBitmap() {\n \t\tfinal Random random = new Random();\n-\t\tfor (int i = 0; i < 10; i++) {\n-\t\t\tfinal BitSet bitset = randomBitset(random, random.nextInt(BitSetUtil.CHUNK_SIZE * 10));\n+\t\tfinal int runs = 500;\n+\t\tfinal int maxNbits = 500000;\n+\t\tfor (int i = 0; i < runs; i++) {\n+\t\t\tfinal BitSet bitset = randomBitset(random, random.nextInt(maxNbits));\n \t\t\tfinal RoaringBitmap bitmap = BitSetUtil.bitmapOf(bitset);\n \t\t\tassertEqualBitsets(bitset, bitmap);\n \t\t}\n@@ -41,11 +72,15 @@ public class TestBitSetUtil {\n \t\t}\n \t}\n \n-\tprivate static BitSet randomBitset(final Random random, final int length) {\n-\t\tfinal BitSet bitset = new BitSet();\n-\t\tfor (int i = 0; i < length; i++) {\n-\t\t\tbitset.set(i, random.nextBoolean());\n+\tprivate static BitSet appendRandomBitset(final Random random, final int offset, final BitSet bitset, final int nbits) {\n+\t\tfor (int i = 0; i < nbits; i++) {\n+\t\t\tbitset.set(offset+i, random.nextBoolean());\n \t\t}\n \t\treturn bitset;\n \t}\n+\tprivate static BitSet randomBitset(final Random random, final int length) {\n+\t\tfinal BitSet bitset = new BitSet();\n+\t\treturn appendRandomBitset(random, 0, bitset, length); \n+\t}\n+\n }",
    "Added selectable number format to inputs and outputs .": "diff --git a/distribution/ReleaseNotes.txt b/distribution/ReleaseNotes.txt\nindex 2efc7db9a..4d0b64526 100644\n--- a/distribution/ReleaseNotes.txt\n+++ b/distribution/ReleaseNotes.txt\n@@ -12,6 +12,7 @@ HEAD, planned as v0.16\n - Added a priority encoder component.\n - Added tooltips showing the actual value of wires.\n - Added a shortcut S to split a single wire into two wires.\n+- Added selectable number format to inputs and outputs.\n - Improved performance through more efficient decoupling of the GUI thread and the simulation thread.\n - Bug fixes\n   - Fixed a bug in the RAMSinglePortSel component: Write was not edge-triggered on WE. Now it is.\ndiff --git a/src/main/java/de/neemann/digital/core/io/In.java b/src/main/java/de/neemann/digital/core/io/In.java\nindex 7ee6abf4e..d18f5e396 100644\n--- a/src/main/java/de/neemann/digital/core/io/In.java\n+++ b/src/main/java/de/neemann/digital/core/io/In.java\n@@ -33,6 +33,7 @@ public class In implements Element {\n             .addAttribute(Keys.INPUT_DEFAULT)\n             .addAttribute(Keys.IS_HIGH_Z)\n             .addAttribute(Keys.DESCRIPTION)\n+            .addAttribute(Keys.INT_FORMAT)\n             .addAttribute(Keys.PINNUMBER);\n \n     private final ObservableValue output;\ndiff --git a/src/main/java/de/neemann/digital/core/io/Out.java b/src/main/java/de/neemann/digital/core/io/Out.java\nindex a935b31f1..daf62ed8c 100644\n--- a/src/main/java/de/neemann/digital/core/io/Out.java\n+++ b/src/main/java/de/neemann/digital/core/io/Out.java\n@@ -30,6 +30,7 @@ public class Out implements Element {\n             .addAttribute(Keys.BITS)\n             .addAttribute(Keys.LABEL)\n             .addAttribute(Keys.DESCRIPTION)\n+            .addAttribute(Keys.INT_FORMAT)\n             .addAttribute(Keys.PINNUMBER);\n \n     /**\ndiff --git a/src/main/java/de/neemann/digital/draw/shapes/InputShape.java b/src/main/java/de/neemann/digital/draw/shapes/InputShape.java\nindex 707446d78..2c49cf9e4 100644\n--- a/src/main/java/de/neemann/digital/draw/shapes/InputShape.java\n+++ b/src/main/java/de/neemann/digital/draw/shapes/InputShape.java\n@@ -9,6 +9,7 @@ import de.neemann.digital.core.element.ElementAttributes;\n import de.neemann.digital.core.element.Keys;\n import de.neemann.digital.core.element.PinDescriptions;\n import de.neemann.digital.core.io.In;\n+import de.neemann.digital.core.io.IntFormat;\n import de.neemann.digital.draw.elements.IOState;\n import de.neemann.digital.draw.elements.Pin;\n import de.neemann.digital.draw.elements.Pins;\n@@ -32,6 +33,7 @@ public class InputShape implements Shape {\n \n     private final String label;\n     private final PinDescriptions outputs;\n+    private final IntFormat format;\n     private IOState ioState;\n     private SingleValueDialog dialog;\n     private Value value;\n@@ -50,6 +52,8 @@ public class InputShape implements Shape {\n             this.label = attr.getLabel();\n         else\n             this.label = attr.getLabel() + \" (\" + pinNumber + \")\";\n+\n+        format = attr.get(Keys.INT_FORMAT);\n     }\n \n     @Override\n@@ -116,7 +120,7 @@ public class InputShape implements Shape {\n                 style = Style.getWireStyle(value);\n                 if (value.getBits() > 1) {\n                     Vector textPos = new Vector(-1 - SIZE, -4 - SIZE);\n-                    graphic.drawText(textPos, textPos.add(1, 0), value.getValueString(), Orientation.CENTERBOTTOM, Style.NORMAL);\n+                    graphic.drawText(textPos, textPos.add(1, 0), format.format(value), Orientation.CENTERBOTTOM, Style.NORMAL);\n                 }\n             }\n \ndiff --git a/src/main/java/de/neemann/digital/draw/shapes/OutputShape.java b/src/main/java/de/neemann/digital/draw/shapes/OutputShape.java\nindex e173b5266..2c3ded408 100644\n--- a/src/main/java/de/neemann/digital/draw/shapes/OutputShape.java\n+++ b/src/main/java/de/neemann/digital/draw/shapes/OutputShape.java\n@@ -5,6 +5,7 @@ import de.neemann.digital.core.Value;\n import de.neemann.digital.core.element.ElementAttributes;\n import de.neemann.digital.core.element.Keys;\n import de.neemann.digital.core.element.PinDescriptions;\n+import de.neemann.digital.core.io.IntFormat;\n import de.neemann.digital.draw.elements.IOState;\n import de.neemann.digital.draw.elements.Pin;\n import de.neemann.digital.draw.elements.Pins;\n@@ -38,6 +39,7 @@ public class OutputShape implements Shape {\n     public static final Vector RADL = new Vector(SIZE, SIZE);\n     private final String label;\n     private final PinDescriptions inputs;\n+    private final IntFormat format;\n     private IOState ioState;\n     private Value value;\n \n@@ -55,6 +57,8 @@ public class OutputShape implements Shape {\n             this.label = attr.getLabel();\n         else\n             this.label = attr.getLabel() + \" (\" + pinNumber + \")\";\n+\n+        format = attr.get(Keys.INT_FORMAT);\n     }\n \n     @Override\n@@ -88,7 +92,7 @@ public class OutputShape implements Shape {\n                 style = Style.getWireStyle(value);\n                 if (value.getBits() > 1) {\n                     Vector textPos = new Vector(1 + SIZE, -4 - SIZE);\n-                    graphic.drawText(textPos, textPos.add(1, 0), value.getValueString(), Orientation.CENTERBOTTOM, Style.NORMAL);\n+                    graphic.drawText(textPos, textPos.add(1, 0), format.format(value), Orientation.CENTERBOTTOM, Style.NORMAL);\n                 }\n             }\n \ndiff --git a/src/test/java/de/neemann/digital/core/io/IntFormatTest.java b/src/test/java/de/neemann/digital/core/io/IntFormatTest.java\nindex 4f3877289..8281eea39 100644\n--- a/src/test/java/de/neemann/digital/core/io/IntFormatTest.java\n+++ b/src/test/java/de/neemann/digital/core/io/IntFormatTest.java\n@@ -18,6 +18,7 @@ public class IntFormatTest extends TestCase {\n         assertEquals(\"FFFF\", IntFormat.hex.format(new Value(-1, 14)));\n         assertEquals(\"FFFF\", IntFormat.hex.format(new Value(-1, 15)));\n         assertEquals(\"FFFF\", IntFormat.hex.format(new Value(-1, 16)));\n+        assertEquals(\"FEDCBA9876543210\", IntFormat.hex.format(new Value(0xFEDCBA9876543210L, 64)));\n     }\n \n     public void testBin() throws Exception {",
    "Updated versions for pdfbox , fontbox , and jempbox": "diff --git a/build.gradle b/build.gradle\nindex 91f23273ee..40e814244c 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -71,9 +71,9 @@ dependencies {\n \n     compile 'org.swinglabs:swingx:1.6.1' // do not update, 1.6.5.1 is broken\n \n-    compile 'org.apache.pdfbox:pdfbox:1.8.10'\n-    compile 'org.apache.pdfbox:fontbox:1.8.10'\n-    compile 'org.apache.pdfbox:jempbox:1.8.10'\n+    compile 'org.apache.pdfbox:pdfbox:1.8.11'\n+    compile 'org.apache.pdfbox:fontbox:1.8.11'\n+    compile 'org.apache.pdfbox:jempbox:1.8.11'\n \n     compile 'commons-cli:commons-cli:1.3.1'\n ",
    "Add HTML IDs for integration tests": "diff --git a/sonar-server/src/main/webapp/WEB-INF/app/controllers/dashboard_controller.rb b/sonar-server/src/main/webapp/WEB-INF/app/controllers/dashboard_controller.rb\nindex 5c02d7a47e1..a4d9cce2c80 100644\n--- a/sonar-server/src/main/webapp/WEB-INF/app/controllers/dashboard_controller.rb\n+++ b/sonar-server/src/main/webapp/WEB-INF/app/controllers/dashboard_controller.rb\n@@ -119,7 +119,7 @@ class DashboardController < ApplicationController\n           prop.save!\n         end\n       end\n-      widget.resource_id=params[:resource_id]\n+      widget.resource_id=Project.by_key(params[:resource_id]).id\n       widget.configured=true\n       widget.save!\n       render :update do |page|\ndiff --git a/sonar-server/src/main/webapp/WEB-INF/app/views/dashboard/_widget_properties.html.erb b/sonar-server/src/main/webapp/WEB-INF/app/views/dashboard/_widget_properties.html.erb\nindex cdc03e0d892..bcac687922d 100644\n--- a/sonar-server/src/main/webapp/WEB-INF/app/views/dashboard/_widget_properties.html.erb\n+++ b/sonar-server/src/main/webapp/WEB-INF/app/views/dashboard/_widget_properties.html.erb\n@@ -1,7 +1,8 @@\n <% form_remote_tag :url => {:action => :save_widget, :wid => widget.id, :id => params[:id]},\n                    :method => :post,\n                    :update => {:failure => \"error#{widget.id}\"},\n-                   :failure => \"$('error#{widget.id}').show()\" do -%>\n+                   :failure => \"$('error#{widget.id}').show()\",\n+                   :id => \"form-edit-#{widget.key.parameterize}\" do -%>\n   <div id=\"error<%= widget.id -%>\" class=\"error\" style=\"display: none\"></div>\n   <table class=\"table width100\">\n     <tbody>\n@@ -14,7 +15,7 @@\n               :resource_type_property => 'supportsGlobalDashboards',\n               :selected_resource => widget.resource,\n               :width => '250px',\n-              :html_id => \"sel-prj-#{widget.id}\"} -%>\n+              :html_id => \"widget-select-prj-#{widget.key.parameterize}\"} -%>\n         </td>\n       </tr>\n     <% end %>\n@@ -33,7 +34,7 @@\n \n     <tr>\n       <td colspan=\"2\">\n-        <%= submit_tag message('save') %>\n+        <%= submit_tag message('save'), :id => \"widget-save-#{widget.key.parameterize}\" -%>\n         <% if widget.configured %>\n           <a href=\"#\" onClick=\"portal.cancelEditWidget(<%= widget.id -%>);return false;\"><%= message('cancel') -%></a>\n         <% end %>\ndiff --git a/sonar-server/src/main/webapp/stylesheets/dashboard.css b/sonar-server/src/main/webapp/stylesheets/dashboard.css\nindex f7216704e12..4572c090454 100644\n--- a/sonar-server/src/main/webapp/stylesheets/dashboard.css\n+++ b/sonar-server/src/main/webapp/stylesheets/dashboard.css\n@@ -46,7 +46,7 @@\n #dashboard .widget-title {\n   background-color: #4B9FD5;\n   color: #FEFEFE;\n-  padding: 3px 0 3px 5px;\n+  padding: 5px;\n   height: 16px;\n   line-height: 16px;\n   vertical-align: middle;",
    "Add info path to path group": "diff --git a/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/PathGroup.java b/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/PathGroup.java\nindex 95f394aefef..419344eae95 100644\n--- a/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/PathGroup.java\n+++ b/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/PathGroup.java\n@@ -51,7 +51,7 @@ enum PathGroup {\n     /** Paths used for user management on the tenant level. */\n     tenantUsers(Matcher.tenant,\n                 PathPrefix.api,\n-                \"/user/v1/tenant/{tenant}\"),\n+                \"/user/v1/tenant/{tenant}\", \"/user/v1/tenant/{tenant}/info/\"),\n \n     /** Paths used by tenant administrators. */\n     tenantInfo(Matcher.tenant,",
    "Remove filter connector BBE": "diff --git a/examples.txt b/examples.txt\nindex 5a821d8a83b..254e8a48ff0 100644\n--- a/examples.txt\n+++ b/examples.txt\n@@ -105,12 +105,8 @@ Task Appointment\n Config API\n String Template\n HTTP Redirects\n-Inbound Request with Multiparts\n-Outbound Request with Multiparts\n-Encode Nested BodyParts in Multipart\n-Decode Nested BodyParts in Multipart\n-Inbound Response with Multiparts\n-Outbound Response with Multiparts\n+Request with Multiparts\n+Response with Multiparts\n gRPC Unary Non Blocking\n grpc Unary Blocking\n grpc Secured Unary Blocking\ndiff --git a/examples/filter-connector/filter_connector.bal b/examples/filter-connector/filter_connector.bal\ndeleted file mode 100644\nindex 4d5543974ed..00000000000\n--- a/examples/filter-connector/filter_connector.bal\n+++ /dev/null\n@@ -1,55 +0,0 @@\n-import ballerina/io;\n-\n-@Description {value:\"This is the base connector you are going to decorate.\"}\n-connector StockQuoteConnector (int i) {\n-    action getStock (string ID) (int stockPrice) {\n-        //This value is returned by the base connector.\n-        //In a real world scenario, a backend service is called to get the result.\n-        return 999;\n-    }\n-}\n-\n-@Description {value:\"This is the filter connector, which will be decorating the base connector.\"}\n-connector CacheConnector<StockQuoteConnector stockC> (string j) {\n-    //For this example, the connector is pre-loaded with sample cache values that are stored in a map.\n-    map cachedKeys = {\"IBM\":350, \"WSO2\":300};\n-    action getStock (string ID) (int stockPrice) {\n-        int result = -1;\n-        // If the ID that was called is defined in the cache map, it returns the value assigned to the ID.\n-        //Else, it calls the functions in the base connector.\n-        if (cachedKeys[ID] != null) {\n-            result, _ = (int)cachedKeys[ID];\n-        } else {\n-            // If the ID that was called does not match the values in the cache, which is the functionality of the\n-            //filter connector, the base connectors functionality is called to check for the ID and its corresponding\n-            //value.\n-            //Once the value is found, it is stored in the 'cachedKeys' map.\n-            result = stockC.getStock(ID);\n-            cachedKeys[ID] = result;\n-        }\n-        return result;\n-    }\n-}\n-\n-function main (string... args) {\n-    // Create the 'StockQuoteConnector' that acts as the base connector and decorate it using the 'CacheConnector'\n-    // that acts as the filter connector.\n-    StockQuoteConnector stockQC = create StockQuoteConnector(5)\n-                                  with CacheConnector(\"Bob\");\n-\n-    // Invoke the action of the 'StockQuoteConnector' by passing 'WSO2' as the ID. Since WSO2 is stored\n-    //in the 'cachedKeys' map of the filter connector the respective price value is printed.\n-    int price = stockQC.getStock(\"WSO2\");\n-    io:println(price);\n-\n-    // Invoke the action of the 'StockQuoteConnector' by passing 'IBM' as the ID. Since IBM is stored in the\n-    // 'cachedKeys' map of the filter connector the respective price value is printed.\n-    price = stockQC.getStock(\"IBM\");\n-    io:println(price);\n-\n-    // Invoke the action of the 'StockQuoteConnector' by passing 'Ballerina' as the ID. Since 'Ballerina' is not stored\n-    // in the 'cachedKeys' map of the filter connector, the base connector functionality is called and the price defined\n-    //for it is printed.\n-    price = stockQC.getStock(\"Ballerina\");\n-    io:println(price);\n-}\ndiff --git a/examples/filter-connector/filter_connector.description b/examples/filter-connector/filter_connector.description\ndeleted file mode 100644\nindex 2865a9a3e5e..00000000000\n--- a/examples/filter-connector/filter_connector.description\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-//Filter connectors are used to decorate an existing connector with additional functionality.\n-//You can extend the functionality of a native or ballerina based connector using a filter connector without altering\n-//the original connector.\n\\ No newline at end of file\ndiff --git a/examples/filter-connector/filter_connector.out b/examples/filter-connector/filter_connector.out\ndeleted file mode 100644\nindex 535b6dbf22f..00000000000\n--- a/examples/filter-connector/filter_connector.out\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-$ ballerina run filter_connector.bal\n-300\n-350\n-999",
    "Create runtime invokers for SDF methods . .": "diff --git a/sdks/go/pkg/beam/core/runtime/exec/sdf_invokers.go b/sdks/go/pkg/beam/core/runtime/exec/sdf_invokers.go\nnew file mode 100644\nindex 0000000000..6beac0fbb3\n--- /dev/null\n+++ b/sdks/go/pkg/beam/core/runtime/exec/sdf_invokers.go\n@@ -0,0 +1,301 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package exec\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/core/funcx\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/core/sdf\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/core/util/reflectx\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/internal/errors\"\n+\t\"reflect\"\n+)\n+\n+// This file contains invokers for SDF methods. These invokers are based off\n+// exec.invoker which is used for regular DoFns. Since exec.invoker is\n+// specialized for DoFns it cannot be used for SDF methods. Instead, these\n+// invokers pare down the functionality to only what is essential for\n+// executing SDF methods, including per-element optimizations.\n+//\n+// Each SDF method invoker in this file is specific to a certain method, but\n+// they are all used the same way. Create an invoker with new[Method]Invoker\n+// in the Up method of an exec.Unit, and then invoke it with Invoke. Finally,\n+// call Reset on it when the bundle ends in FinishBundle.\n+//\n+// These invokers are not thread-safe.\n+\n+// cirInvoker is an invoker for CreateInitialRestriction.\n+type cirInvoker struct {\n+\tfn   *funcx.Fn\n+\targs []interface{} // Cache to avoid allocating new slices per-element.\n+\tcall func(elms *FullValue) (rest interface{})\n+}\n+\n+func newCreateInitialRestrictionInvoker(fn *funcx.Fn) (*cirInvoker, error) {\n+\tn := &cirInvoker{\n+\t\tfn:   fn,\n+\t\targs: make([]interface{}, len(fn.Param)),\n+\t}\n+\tif err := n.initCallFn(); err != nil {\n+\t\treturn nil, errors.WithContext(err, \"sdf CreateInitialRestriction invoker\")\n+\t}\n+\treturn n, nil\n+}\n+\n+func (n *cirInvoker) initCallFn() error {\n+\t// Expects a signature of the form:\n+\t// (key?, value) restriction\n+\t// TODO(BEAM-9643): Link to full documentation.\n+\tswitch fnT := n.fn.Fn.(type) {\n+\tcase reflectx.Func1x1:\n+\t\tn.call = func(elms *FullValue) interface{} {\n+\t\t\treturn fnT.Call1x1(elms.Elm)\n+\t\t}\n+\tcase reflectx.Func2x1:\n+\t\tn.call = func(elms *FullValue) interface{} {\n+\t\t\treturn fnT.Call2x1(elms.Elm, elms.Elm2)\n+\t\t}\n+\tdefault:\n+\t\tswitch len(n.fn.Param) {\n+\t\tcase 1:\n+\t\t\tn.call = func(elms *FullValue) interface{} {\n+\t\t\t\tn.args[0] = elms.Elm\n+\t\t\t\treturn n.fn.Fn.Call(n.args)[0]\n+\t\t\t}\n+\t\tcase 2:\n+\t\t\tn.call = func(elms *FullValue) interface{} {\n+\t\t\t\tn.args[0] = elms.Elm\n+\t\t\t\tn.args[1] = elms.Elm2\n+\t\t\t\treturn n.fn.Fn.Call(n.args)[0]\n+\t\t\t}\n+\t\tdefault:\n+\t\t\treturn errors.Errorf(\"CreateInitialRestriction fn %v has unexpected number of parameters: %v\",\n+\t\t\t\tn.fn.Fn.Name(), len(n.fn.Param))\n+\t\t}\n+\t}\n+\n+\treturn nil\n+}\n+\n+// Invoke calls CreateInitialRestriction with the given FullValue as the element\n+// and returns the resulting restriction.\n+func (n *cirInvoker) Invoke(elms *FullValue) (rest interface{}) {\n+\treturn n.call(elms)\n+}\n+\n+// Reset zeroes argument entries in the cached slice to allow values to be\n+// garbage collected after the bundle ends.\n+func (n *cirInvoker) Reset() {\n+\tfor i := range n.args {\n+\t\tn.args[i] = nil\n+\t}\n+}\n+\n+// srInvoker is an invoker for SplitRestriction.\n+type srInvoker struct {\n+\tfn   *funcx.Fn\n+\targs []interface{} // Cache to avoid allocating new slices per-element.\n+\tcall func(elms *FullValue, rest interface{}) (splits interface{})\n+}\n+\n+func newSplitRestrictionInvoker(fn *funcx.Fn) (*srInvoker, error) {\n+\tn := &srInvoker{\n+\t\tfn:   fn,\n+\t\targs: make([]interface{}, len(fn.Param)),\n+\t}\n+\tif err := n.initCallFn(); err != nil {\n+\t\treturn nil, errors.WithContext(err, \"sdf SplitRestriction invoker\")\n+\t}\n+\treturn n, nil\n+}\n+\n+func (n *srInvoker) initCallFn() error {\n+\t// Expects a signature of the form:\n+\t// (key?, value, restriction) []restriction\n+\t// TODO(BEAM-9643): Link to full documentation.\n+\tswitch fnT := n.fn.Fn.(type) {\n+\tcase reflectx.Func2x1:\n+\t\tn.call = func(elms *FullValue, rest interface{}) interface{} {\n+\t\t\treturn fnT.Call2x1(elms.Elm, rest)\n+\t\t}\n+\tcase reflectx.Func3x1:\n+\t\tn.call = func(elms *FullValue, rest interface{}) interface{} {\n+\t\t\treturn fnT.Call3x1(elms.Elm, elms.Elm2, rest)\n+\t\t}\n+\tdefault:\n+\t\tswitch len(n.fn.Param) {\n+\t\tcase 2:\n+\t\t\tn.call = func(elms *FullValue, rest interface{}) interface{} {\n+\t\t\t\tn.args[0] = elms.Elm\n+\t\t\t\tn.args[1] = rest\n+\t\t\t\treturn n.fn.Fn.Call(n.args)[0]\n+\t\t\t}\n+\t\tcase 3:\n+\t\t\tn.call = func(elms *FullValue, rest interface{}) interface{} {\n+\t\t\t\tn.args[0] = elms.Elm\n+\t\t\t\tn.args[1] = elms.Elm2\n+\t\t\t\tn.args[2] = rest\n+\t\t\t\treturn n.fn.Fn.Call(n.args)[0]\n+\t\t\t}\n+\t\tdefault:\n+\t\t\treturn errors.Errorf(\"SplitRestriction fn %v has unexpected number of parameters: %v\",\n+\t\t\t\tn.fn.Fn.Name(), len(n.fn.Param))\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+// Invoke calls SplitRestriction given a FullValue containing an element and\n+// the associated restriction, and returns a slice of split restrictions.\n+func (n *srInvoker) Invoke(elms *FullValue, rest interface{}) (splits []interface{}) {\n+\tret := n.call(elms, rest)\n+\n+\t// Return value is an interface{}, but we need to convert it to a []interface{}.\n+\tval := reflect.ValueOf(ret)\n+\ts := make([]interface{}, 0, val.Len())\n+\tfor i := 0; i < val.Len(); i++ {\n+\t\ts = append(s, val.Index(i).Interface())\n+\t}\n+\treturn s\n+}\n+\n+// Reset zeroes argument entries in the cached slice to allow values to be\n+// garbage collected after the bundle ends.\n+func (n *srInvoker) Reset() {\n+\tfor i := range n.args {\n+\t\tn.args[i] = nil\n+\t}\n+}\n+\n+// rsInvoker is an invoker for RestrictionSize.\n+type rsInvoker struct {\n+\tfn   *funcx.Fn\n+\targs []interface{} // Cache to avoid allocating new slices per-element.\n+\tcall func(elms *FullValue, rest interface{}) (size float64)\n+}\n+\n+func newRestrictionSizeInvoker(fn *funcx.Fn) (*rsInvoker, error) {\n+\tn := &rsInvoker{\n+\t\tfn:   fn,\n+\t\targs: make([]interface{}, len(fn.Param)),\n+\t}\n+\tif err := n.initCallFn(); err != nil {\n+\t\treturn nil, errors.WithContext(err, \"sdf RestrictionSize invoker\")\n+\t}\n+\treturn n, nil\n+}\n+\n+func (n *rsInvoker) initCallFn() error {\n+\t// Expects a signature of the form:\n+\t// (key?, value, restriction) float64\n+\t// TODO(BEAM-9643): Link to full documentation.\n+\tswitch fnT := n.fn.Fn.(type) {\n+\tcase reflectx.Func2x1:\n+\t\tn.call = func(elms *FullValue, rest interface{}) float64 {\n+\t\t\treturn fnT.Call2x1(elms.Elm, rest).(float64)\n+\t\t}\n+\tcase reflectx.Func3x1:\n+\t\tn.call = func(elms *FullValue, rest interface{}) float64 {\n+\t\t\treturn fnT.Call3x1(elms.Elm, elms.Elm2, rest).(float64)\n+\t\t}\n+\tdefault:\n+\t\tswitch len(n.fn.Param) {\n+\t\tcase 2:\n+\t\t\tn.call = func(elms *FullValue, rest interface{}) float64 {\n+\t\t\t\tn.args[0] = elms.Elm\n+\t\t\t\tn.args[1] = rest\n+\t\t\t\treturn n.fn.Fn.Call(n.args)[0].(float64)\n+\t\t\t}\n+\t\tcase 3:\n+\t\t\tn.call = func(elms *FullValue, rest interface{}) float64 {\n+\t\t\t\tn.args[0] = elms.Elm\n+\t\t\t\tn.args[1] = elms.Elm2\n+\t\t\t\tn.args[2] = rest\n+\t\t\t\treturn n.fn.Fn.Call(n.args)[0].(float64)\n+\t\t\t}\n+\t\tdefault:\n+\t\t\treturn errors.Errorf(\"RestrictionSize fn %v has unexpected number of parameters: %v\",\n+\t\t\t\tn.fn.Fn.Name(), len(n.fn.Param))\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+// Invoke calls RestrictionSize given a FullValue containing an element and\n+// the associated restriction, and returns a size.\n+func (n *rsInvoker) Invoke(elms *FullValue, rest interface{}) (size float64) {\n+\treturn n.call(elms, rest)\n+}\n+\n+// Reset zeroes argument entries in the cached slice to allow values to be\n+// garbage collected after the bundle ends.\n+func (n *rsInvoker) Reset() {\n+\tfor i := range n.args {\n+\t\tn.args[i] = nil\n+\t}\n+}\n+\n+// ctInvoker is an invoker for CreateTracker.\n+type ctInvoker struct {\n+\tfn   *funcx.Fn\n+\targs []interface{} // Cache to avoid allocating new slices per-element.\n+\tcall func(rest interface{}) sdf.RTracker\n+}\n+\n+func newCreateTrackerInvoker(fn *funcx.Fn) (*ctInvoker, error) {\n+\tn := &ctInvoker{\n+\t\tfn:   fn,\n+\t\targs: make([]interface{}, len(fn.Param)),\n+\t}\n+\tif err := n.initCallFn(); err != nil {\n+\t\treturn nil, errors.WithContext(err, \"sdf CreateTracker invoker\")\n+\t}\n+\treturn n, nil\n+}\n+\n+func (n *ctInvoker) initCallFn() error {\n+\t// Expects a signature of the form:\n+\t// (restriction) sdf.RTracker\n+\t// TODO(BEAM-9643): Link to full documentation.\n+\tswitch fnT := n.fn.Fn.(type) {\n+\tcase reflectx.Func1x1:\n+\t\tn.call = func(rest interface{}) sdf.RTracker {\n+\t\t\treturn fnT.Call1x1(rest).(sdf.RTracker)\n+\t\t}\n+\tdefault:\n+\t\tif len(n.fn.Param) != 1 {\n+\t\t\treturn errors.Errorf(\"CreateTracker fn %v has unexpected number of parameters: %v\",\n+\t\t\t\tn.fn.Fn.Name(), len(n.fn.Param))\n+\t\t}\n+\t\tn.call = func(rest interface{}) sdf.RTracker {\n+\t\t\tn.args[0] = rest\n+\t\t\treturn n.fn.Fn.Call(n.args)[0].(sdf.RTracker)\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+// Invoke calls CreateTracker given a restriction and returns an sdf.RTracker.\n+func (n *ctInvoker) Invoke(rest interface{}) sdf.RTracker {\n+\treturn n.call(rest)\n+}\n+\n+// Reset zeroes argument entries in the cached slice to allow values to be\n+// garbage collected after the bundle ends.\n+func (n *ctInvoker) Reset() {\n+\tfor i := range n.args {\n+\t\tn.args[i] = nil\n+\t}\n+}\ndiff --git a/sdks/go/pkg/beam/core/runtime/exec/sdf_invokers_test.go b/sdks/go/pkg/beam/core/runtime/exec/sdf_invokers_test.go\nnew file mode 100644\nindex 0000000000..29ae981bd5\n--- /dev/null\n+++ b/sdks/go/pkg/beam/core/runtime/exec/sdf_invokers_test.go\n@@ -0,0 +1,279 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements.  See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package exec\n+\n+import (\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/core/graph\"\n+\t\"github.com/google/go-cmp/cmp\"\n+\t\"testing\"\n+)\n+\n+// TestInvokes runs tests on each SDF method invoker, using the SDFs defined\n+// in this file. Tests both single-element and KV element cases.\n+func TestInvokes(t *testing.T) {\n+\t// Setup.\n+\tdfn, err := graph.NewDoFn(&Sdf{}, graph.NumMainInputs(graph.MainSingle))\n+\tif err != nil {\n+\t\tt.Fatalf(\"invalid function: %v\", err)\n+\t}\n+\tsdf := (*graph.SplittableDoFn)(dfn)\n+\n+\tdfn, err = graph.NewDoFn(&KvSdf{}, graph.NumMainInputs(graph.MainKv))\n+\tif err != nil {\n+\t\tt.Fatalf(\"invalid function: %v\", err)\n+\t}\n+\tkvsdf := (*graph.SplittableDoFn)(dfn)\n+\n+\t// Tests.\n+\tt.Run(\"createInitialRestrictionCallFn\", func(t *testing.T) {\n+\t\ttests := []struct {\n+\t\t\tname string\n+\t\t\tsdf  *graph.SplittableDoFn\n+\t\t\telms *FullValue\n+\t\t\twant Restriction\n+\t\t}{\n+\t\t\t{\"SingleElem\", sdf, &FullValue{Elm: 5}, Restriction{5}},\n+\t\t\t{\"KvElem\", kvsdf, &FullValue{Elm: 5, Elm2: 2}, Restriction{7}},\n+\t\t}\n+\t\tfor _, test := range tests {\n+\t\t\ttest := test\n+\t\t\tfn := test.sdf.CreateInitialRestrictionFn()\n+\t\t\tt.Run(test.name, func(t *testing.T) {\n+\t\t\t\tinvoker, err := newCreateInitialRestrictionInvoker(fn)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\tt.Fatalf(\"newCreateInitialRestrictionInvoker failed: %v\", err)\n+\t\t\t\t}\n+\t\t\t\tgot := invoker.Invoke(test.elms)\n+\t\t\t\tif !cmp.Equal(got, test.want) {\n+\t\t\t\t\tt.Errorf(\"Invoke(%v) has incorrect output: got: %v, want: %v\",\n+\t\t\t\t\t\ttest.elms, got, test.want)\n+\t\t\t\t}\n+\t\t\t\tinvoker.Reset()\n+\t\t\t\tfor i, arg := range invoker.args {\n+\t\t\t\t\tif arg != nil {\n+\t\t\t\t\t\tt.Errorf(\"Reset() failed to empty all args. args[%v] = %v\", i, arg)\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t})\n+\t\t}\n+\t})\n+\n+\tt.Run(\"invokeSplitRestriction\", func(t *testing.T) {\n+\t\ttests := []struct {\n+\t\t\tname string\n+\t\t\tsdf  *graph.SplittableDoFn\n+\t\t\telms *FullValue\n+\t\t\trest Restriction\n+\t\t\twant []interface{}\n+\t\t}{\n+\t\t\t{\n+\t\t\t\t\"SingleElem\",\n+\t\t\t\tsdf,\n+\t\t\t\t&FullValue{Elm: 5},\n+\t\t\t\tRestriction{3},\n+\t\t\t\t[]interface{}{Restriction{8}, Restriction{9}},\n+\t\t\t}, {\n+\t\t\t\t\"KvElem\",\n+\t\t\t\tkvsdf,\n+\t\t\t\t&FullValue{Elm: 5, Elm2: 2},\n+\t\t\t\tRestriction{3},\n+\t\t\t\t[]interface{}{Restriction{8}, Restriction{5}},\n+\t\t\t},\n+\t\t}\n+\t\tfor _, test := range tests {\n+\t\t\ttest := test\n+\t\t\tfn := test.sdf.SplitRestrictionFn()\n+\t\t\tt.Run(test.name, func(t *testing.T) {\n+\t\t\t\tinvoker, err := newSplitRestrictionInvoker(fn)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\tt.Fatalf(\"newSplitRestrictionInvoker failed: %v\", err)\n+\t\t\t\t}\n+\t\t\t\tgot := invoker.Invoke(test.elms, test.rest)\n+\t\t\t\tif !cmp.Equal(got, test.want) {\n+\t\t\t\t\tt.Errorf(\"Invoke(%v, %v) has incorrect output: got: %v, want: %v\",\n+\t\t\t\t\t\ttest.elms, test.rest, got, test.want)\n+\t\t\t\t}\n+\t\t\t\tinvoker.Reset()\n+\t\t\t\tfor i, arg := range invoker.args {\n+\t\t\t\t\tif arg != nil {\n+\t\t\t\t\t\tt.Errorf(\"Reset() failed to empty all args. args[%v] = %v\", i, arg)\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t})\n+\t\t}\n+\t})\n+\n+\tt.Run(\"invokeRestrictionSize\", func(t *testing.T) {\n+\t\ttests := []struct {\n+\t\t\tname string\n+\t\t\tsdf  *graph.SplittableDoFn\n+\t\t\telms *FullValue\n+\t\t\trest Restriction\n+\t\t\twant float64\n+\t\t}{\n+\t\t\t{\n+\t\t\t\t\"SingleElem\",\n+\t\t\t\tsdf,\n+\t\t\t\t&FullValue{Elm: 5},\n+\t\t\t\tRestriction{3},\n+\t\t\t\t8,\n+\t\t\t}, {\n+\t\t\t\t\"KvElem\",\n+\t\t\t\tkvsdf,\n+\t\t\t\t&FullValue{Elm: 5, Elm2: 2},\n+\t\t\t\tRestriction{3},\n+\t\t\t\t10,\n+\t\t\t},\n+\t\t}\n+\t\tfor _, test := range tests {\n+\t\t\ttest := test\n+\t\t\tfn := test.sdf.RestrictionSizeFn()\n+\t\t\tt.Run(test.name, func(t *testing.T) {\n+\t\t\t\tinvoker, err := newRestrictionSizeInvoker(fn)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\tt.Fatalf(\"newRestrictionSizeInvoker failed: %v\", err)\n+\t\t\t\t}\n+\t\t\t\tgot := invoker.Invoke(test.elms, test.rest)\n+\t\t\t\tif !cmp.Equal(got, test.want) {\n+\t\t\t\t\tt.Errorf(\"Invoke(%v, %v) has incorrect output: got: %v, want: %v\",\n+\t\t\t\t\t\ttest.elms, test.rest, got, test.want)\n+\t\t\t\t}\n+\t\t\t})\n+\t\t}\n+\t})\n+\n+\tt.Run(\"invokeCreateTracker\", func(t *testing.T) {\n+\t\ttests := []struct {\n+\t\t\tname string\n+\t\t\tsdf  *graph.SplittableDoFn\n+\t\t\trest Restriction\n+\t\t\twant *RTracker\n+\t\t}{\n+\t\t\t{\n+\t\t\t\t\"SingleElem\",\n+\t\t\t\tsdf,\n+\t\t\t\tRestriction{3},\n+\t\t\t\t&RTracker{\n+\t\t\t\t\tRestriction{3},\n+\t\t\t\t\t1,\n+\t\t\t\t},\n+\t\t\t}, {\n+\t\t\t\t\"KvElem\",\n+\t\t\t\tkvsdf,\n+\t\t\t\tRestriction{5},\n+\t\t\t\t&RTracker{\n+\t\t\t\t\tRestriction{5},\n+\t\t\t\t\t2,\n+\t\t\t\t},\n+\t\t\t},\n+\t\t}\n+\t\tfor _, test := range tests {\n+\t\t\ttest := test\n+\t\t\tfn := test.sdf.CreateTrackerFn()\n+\t\t\tt.Run(test.name, func(t *testing.T) {\n+\t\t\t\tinvoker, err := newCreateTrackerInvoker(fn)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\tt.Fatalf(\"newCreateTrackerInvoker failed: %v\", err)\n+\t\t\t\t}\n+\t\t\t\tgot := invoker.Invoke(test.rest)\n+\t\t\t\tif !cmp.Equal(got, test.want) {\n+\t\t\t\t\tt.Errorf(\"Invoke(%v) has incorrect output: got: %v, want: %v\",\n+\t\t\t\t\t\ttest.rest, got, test.want)\n+\t\t\t\t}\n+\t\t\t})\n+\t\t}\n+\t})\n+}\n+\n+type Restriction struct {\n+\tVal int\n+}\n+\n+// RTracker's methods can all be no-ops, we just need it to implement sdf.RTracker.\n+type RTracker struct {\n+\tRest Restriction\n+\tVal  int\n+}\n+\n+func (rt *RTracker) TryClaim(interface{}) bool                      { return false }\n+func (rt *RTracker) GetError() error                                { return nil }\n+func (rt *RTracker) TrySplit(fraction float64) (interface{}, error) { return nil, nil }\n+func (rt *RTracker) GetProgress() float64                           { return 0 }\n+func (rt *RTracker) IsDone() bool                                   { return false }\n+\n+// In order to test that these methods get called properly, each one has an\n+// implementation that lets us confirm that each argument was passed properly.\n+\n+type Sdf struct {\n+}\n+\n+// CreateInitialRestriction creates a restriction with the given value.\n+func (fn *Sdf) CreateInitialRestriction(i int) Restriction {\n+\treturn Restriction{i}\n+}\n+\n+// SplitRestriction outputs two restrictions, the first containing the sum of i\n+// and rest.Val, the second containing the same value plus 1.\n+func (fn *Sdf) SplitRestriction(i int, rest Restriction) []Restriction {\n+\treturn []Restriction{{rest.Val + i}, {rest.Val + i + 1}}\n+}\n+\n+// RestrictionSize returns the sum of i and rest.Val as a float64.\n+func (fn *Sdf) RestrictionSize(i int, rest Restriction) float64 {\n+\treturn (float64)(i + rest.Val)\n+}\n+\n+// CreateTracker creates an RTracker containing the given restriction and a Val\n+// of 1.\n+func (fn *Sdf) CreateTracker(rest Restriction) *RTracker {\n+\treturn &RTracker{rest, 1}\n+}\n+\n+// ProcessElement is a no-op, it's only included to pass validation.\n+func (fn *Sdf) ProcessElement(*RTracker, int) int {\n+\treturn 0\n+}\n+\n+type KvSdf struct {\n+}\n+\n+// CreateInitialRestriction creates a restriction with the sum of the given\n+// values.\n+func (fn *KvSdf) CreateInitialRestriction(i int, j int) Restriction {\n+\treturn Restriction{i + j}\n+}\n+\n+// SplitRestriction outputs two restrictions, the first containing the sum of i\n+// and rest.Val, the second containing the sum of j and rest.Val.\n+func (fn *KvSdf) SplitRestriction(i int, j int, rest Restriction) []Restriction {\n+\treturn []Restriction{{rest.Val + i}, {rest.Val + j}}\n+}\n+\n+// RestrictionSize returns the sum of i, j, and rest.Val as a float64.\n+func (fn *KvSdf) RestrictionSize(i int, j int, rest Restriction) float64 {\n+\treturn (float64)(i + j + rest.Val)\n+}\n+\n+// CreateTracker creates an RTracker containing the given restriction and a Val\n+// of 2.\n+func (fn *KvSdf) CreateTracker(rest Restriction) *RTracker {\n+\treturn &RTracker{rest, 2}\n+}\n+\n+// ProcessElement is a no-op, it's only included to pass validation.\n+func (fn *KvSdf) ProcessElement(*RTracker, int, int) int {\n+\treturn 0\n+}",
    "correct a few URLs in benchmark_config": "diff --git a/undertow/benchmark_config b/undertow/benchmark_config\nindex 47f4a943b..2d7d78b1d 100644\n--- a/undertow/benchmark_config\n+++ b/undertow/benchmark_config\n@@ -11,7 +11,7 @@\n     },\n     \"mysql\" : {\n       \"setup_file\": \"setup\",\n-      \"db_url\": \"/db\",\n+      \"db_url\": \"/db/mysql\",\n       \"query_url\": \"/db/mysql?queries=\",\n       \"fortune_url\": \"/fortunes/mysql\",\n       \"update_url\": \"/updates/mysql?queries=\",\n@@ -20,7 +20,7 @@\n     },\n     \"postgresql\" : {\n       \"setup_file\": \"setup\",\n-      \"db_url\": \"/db\",\n+      \"db_url\": \"/db/postgresql\",\n       \"query_url\": \"/db/postgresql?queries=\",\n       \"fortune_url\": \"/fortunes/postgresql\",\n       \"update_url\": \"/updates/postgresql?queries=\",\n@@ -29,7 +29,7 @@\n     },\n     \"mongodb\" : {\n       \"setup_file\": \"setup\",\n-      \"db_url\": \"/db\",\n+      \"db_url\": \"/db/mongodb\",\n       \"query_url\": \"/db/mongodb?queries=\",\n       \"fortune_url\": \"/fortunes/mongodb\",\n       \"update_url\": \"/updates/mongodb?queries=\",",
    "added missing keys .": "diff --git a/core/src/main/resources/lib/layout/layout.properties b/core/src/main/resources/lib/layout/layout.properties\nindex 2e364c5bbf..5df92c068d 100644\n--- a/core/src/main/resources/lib/layout/layout.properties\n+++ b/core/src/main/resources/lib/layout/layout.properties\n@@ -22,3 +22,6 @@\n \n searchBox.url=http://hudson.gotdns.com/wiki/display/HUDSON/Search+Box\n logout=log out\n+DISABLE\\ AUTO\\ REFRESH=\n+ENABLE\\ AUTO\\ REFRESH=\n+Page\\ generated=",
    "Add some useful methods to NodeList": "diff --git a/javaparser-core-generators/src/main/java/com/github/javaparser/generator/core/node/MainConstructorGenerator.java b/javaparser-core-generators/src/main/java/com/github/javaparser/generator/core/node/MainConstructorGenerator.java\nindex 1c6362c48..fb7419812 100644\n--- a/javaparser-core-generators/src/main/java/com/github/javaparser/generator/core/node/MainConstructorGenerator.java\n+++ b/javaparser-core-generators/src/main/java/com/github/javaparser/generator/core/node/MainConstructorGenerator.java\n@@ -44,7 +44,7 @@ public class MainConstructorGenerator extends NodeGenerator {\n             }\n         }\n \n-        body.getStatements().add(0, parseExplicitConstructorInvocationStmt(superCall.toString()));\n+        body.getStatements().addToTop(parseExplicitConstructorInvocationStmt(superCall.toString()));\n \n         body.addStatement(\"customInitialization();\");\n \ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/CompilationUnit.java b/javaparser-core/src/main/java/com/github/javaparser/ast/CompilationUnit.java\nindex 1360311ce..4caf6b7d8 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/CompilationUnit.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/CompilationUnit.java\n@@ -665,5 +665,4 @@ public final class CompilationUnit extends Node {\n         }\n         return super.replace(node, replacementNode);\n     }\n-\n }\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/Node.java b/javaparser-core/src/main/java/com/github/javaparser/ast/Node.java\nindex 250a372f5..2fb8fc501 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/Node.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/Node.java\n@@ -42,12 +42,11 @@ import com.github.javaparser.metamodel.PropertyMetaModel;\n import com.github.javaparser.printer.PrettyPrinter;\n import com.github.javaparser.printer.PrettyPrinterConfiguration;\n import com.github.javaparser.resolution.SymbolResolver;\n-\n import javax.annotation.Generated;\n import java.util.*;\n-\n import static com.github.javaparser.ast.Node.Parsedness.PARSED;\n import static java.util.Collections.unmodifiableList;\n+import com.github.javaparser.ast.Node;\n \n /**\n  * Base class for all nodes of the abstract syntax tree.\n@@ -676,5 +675,6 @@ public abstract class Node implements Cloneable, HasParentNode<Node>, Visitable,\n     }\n \n     // We need to expose it because we will need to use it to inject the SymbolSolver\n-    public static final DataKey<SymbolResolver> SYMBOL_RESOLVER_KEY = new DataKey<SymbolResolver>() { };\n+    public static final DataKey<SymbolResolver> SYMBOL_RESOLVER_KEY = new DataKey<SymbolResolver>() {\n+    };\n }\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/NodeList.java b/javaparser-core/src/main/java/com/github/javaparser/ast/NodeList.java\nindex 94154b1a7..2161f3378 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/NodeList.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/NodeList.java\n@@ -165,6 +165,51 @@ public class NodeList<N extends Node> implements List<N>, Iterable<N>, HasParent\n         innerList.add(index, node);\n     }\n \n+    /**\n+     * Inserts the node before all other nodes.\n+     */\n+    public NodeList<N> addToTop(N node) {\n+        add(0, node);\n+        return this;\n+    }\n+\n+    /**\n+     * Inserts the node after all other nodes. (This is simply an alias for add.)\n+     */\n+    public NodeList<N> addToBottom(N node) {\n+        add(node);\n+        return this;\n+    }\n+\n+    /**\n+     * Inserts the node after afterThisNode.\n+     *\n+     * @throws IllegalArgumentException when afterThisNode is not in this list.\n+     */\n+    public NodeList<N> addAfter(N node, N afterThisNode) {\n+        int i = indexOf(afterThisNode);\n+        if (i == -1) {\n+            throw new IllegalArgumentException(\"Can't find node to insert after.\");\n+        }\n+        add(i + 1, node);\n+        return this;\n+    }\n+\n+    /**\n+     * Inserts the node before beforeThisNode.\n+     *\n+     * @throws IllegalArgumentException when beforeThisNode is not in this list.\n+     */\n+    public NodeList<N> addBefore(N node, N beforeThisNode) {\n+        int i = indexOf(beforeThisNode);\n+        if (i == -1) {\n+            throw new IllegalArgumentException(\"Can't find node to insert before.\");\n+        }\n+        add(i, node);\n+        return this;\n+    }\n+\n+\n     @Override\n     public Optional<Node> getParentNode() {\n         return Optional.ofNullable(parentNode);\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/body/MethodDeclaration.java b/javaparser-core/src/main/java/com/github/javaparser/ast/body/MethodDeclaration.java\nindex ccda1673d..7aa2c9616 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/body/MethodDeclaration.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/body/MethodDeclaration.java\n@@ -50,7 +50,6 @@ import javax.annotation.Generated;\n import com.github.javaparser.TokenRange;\n import com.github.javaparser.resolution.Resolvable;\n import com.github.javaparser.resolution.declarations.ResolvedMethodDeclaration;\n-\n import java.util.function.Consumer;\n \n /**\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/type/ClassOrInterfaceType.java b/javaparser-core/src/main/java/com/github/javaparser/ast/type/ClassOrInterfaceType.java\nindex 5a7328de4..f9f028ccb 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/type/ClassOrInterfaceType.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/type/ClassOrInterfaceType.java\n@@ -42,7 +42,6 @@ import static java.util.stream.Collectors.joining;\n import javax.annotation.Generated;\n import com.github.javaparser.TokenRange;\n import com.github.javaparser.resolution.types.ResolvedReferenceType;\n-\n import java.util.function.Consumer;\n \n /**\n@@ -287,5 +286,4 @@ public final class ClassOrInterfaceType extends ReferenceType implements NodeWit\n     public ResolvedReferenceType resolve() {\n         return getSymbolResolver().resolve(this, ResolvedReferenceType.class);\n     }\n-\n }\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/type/IntersectionType.java b/javaparser-core/src/main/java/com/github/javaparser/ast/type/IntersectionType.java\nindex 8799e7470..8fb69f49b 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/type/IntersectionType.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/type/IntersectionType.java\n@@ -40,7 +40,6 @@ import javax.annotation.Generated;\n import com.github.javaparser.TokenRange;\n import com.github.javaparser.resolution.types.ResolvedIntersectionType;\n import com.github.javaparser.resolution.types.ResolvedReferenceType;\n-\n import java.util.function.Consumer;\n \n /**\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/type/PrimitiveType.java b/javaparser-core/src/main/java/com/github/javaparser/ast/type/PrimitiveType.java\nindex c88ad7b1d..aa64bba6d 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/type/PrimitiveType.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/type/PrimitiveType.java\n@@ -40,7 +40,6 @@ import javax.annotation.Generated;\n import com.github.javaparser.TokenRange;\n import com.github.javaparser.resolution.types.ResolvedPrimitiveType;\n import com.github.javaparser.resolution.types.ResolvedReferenceType;\n-\n import java.util.function.Consumer;\n \n /**\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/type/ReferenceType.java b/javaparser-core/src/main/java/com/github/javaparser/ast/type/ReferenceType.java\nindex 5b0d13b36..6aae58292 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/type/ReferenceType.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/type/ReferenceType.java\n@@ -30,7 +30,6 @@ import com.github.javaparser.metamodel.JavaParserMetaModel;\n import javax.annotation.Generated;\n import com.github.javaparser.TokenRange;\n import com.github.javaparser.resolution.types.ResolvedReferenceType;\n-\n import java.util.function.Consumer;\n \n /**\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/type/Type.java b/javaparser-core/src/main/java/com/github/javaparser/ast/type/Type.java\nindex 585bf029b..6c9a1500f 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/type/Type.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/type/Type.java\n@@ -35,10 +35,8 @@ import com.github.javaparser.TokenRange;\n import com.github.javaparser.resolution.Resolvable;\n import com.github.javaparser.resolution.SymbolResolver;\n import com.github.javaparser.resolution.types.ResolvedType;\n-\n import java.util.function.Consumer;\n import java.util.function.Supplier;\n-\n import static com.github.javaparser.utils.CodeGenerationUtils.f;\n \n /**\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/type/TypeParameter.java b/javaparser-core/src/main/java/com/github/javaparser/ast/type/TypeParameter.java\nindex 3d4f470b7..468c4626c 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/type/TypeParameter.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/type/TypeParameter.java\n@@ -40,7 +40,6 @@ import javax.annotation.Generated;\n import com.github.javaparser.TokenRange;\n import com.github.javaparser.resolution.declarations.ResolvedTypeParameterDeclaration;\n import com.github.javaparser.resolution.types.ResolvedTypeVariable;\n-\n import java.util.function.Consumer;\n \n /**\n@@ -55,8 +54,7 @@ import java.util.function.Consumer;\n  * @author Julio Vilmar Gesser\n  * @see com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters\n  */\n-public final class TypeParameter extends ReferenceType\n-        implements NodeWithSimpleName<TypeParameter>, NodeWithAnnotations<TypeParameter> {\n+public final class TypeParameter extends ReferenceType implements NodeWithSimpleName<TypeParameter>, NodeWithAnnotations<TypeParameter> {\n \n     private SimpleName name;\n \ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/type/UnionType.java b/javaparser-core/src/main/java/com/github/javaparser/ast/type/UnionType.java\nindex c60d2c443..c888af772 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/type/UnionType.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/type/UnionType.java\n@@ -40,7 +40,6 @@ import javax.annotation.Generated;\n import com.github.javaparser.TokenRange;\n import com.github.javaparser.resolution.types.ResolvedReferenceType;\n import com.github.javaparser.resolution.types.ResolvedUnionType;\n-\n import java.util.function.Consumer;\n \n /**\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/type/UnknownType.java b/javaparser-core/src/main/java/com/github/javaparser/ast/type/UnknownType.java\nindex 733fff848..1b34897af 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/type/UnknownType.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/type/UnknownType.java\n@@ -36,7 +36,6 @@ import com.github.javaparser.TokenRange;\n import com.github.javaparser.resolution.types.ResolvedReferenceType;\n import com.github.javaparser.resolution.types.ResolvedType;\n import com.github.javaparser.resolution.types.ResolvedUnionType;\n-\n import java.util.function.Consumer;\n \n /**\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/type/VoidType.java b/javaparser-core/src/main/java/com/github/javaparser/ast/type/VoidType.java\nindex 74420da36..9a17a15d4 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/type/VoidType.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/type/VoidType.java\n@@ -36,7 +36,6 @@ import javax.annotation.Generated;\n import com.github.javaparser.TokenRange;\n import com.github.javaparser.resolution.types.ResolvedUnionType;\n import com.github.javaparser.resolution.types.ResolvedVoidType;\n-\n import java.util.function.Consumer;\n \n /**\ndiff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/type/WildcardType.java b/javaparser-core/src/main/java/com/github/javaparser/ast/type/WildcardType.java\nindex fb23f7a36..69f2b2e90 100644\n--- a/javaparser-core/src/main/java/com/github/javaparser/ast/type/WildcardType.java\n+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/type/WildcardType.java\n@@ -38,7 +38,6 @@ import javax.annotation.Generated;\n import com.github.javaparser.TokenRange;\n import com.github.javaparser.resolution.types.ResolvedUnionType;\n import com.github.javaparser.resolution.types.ResolvedWildcard;\n-\n import java.util.function.Consumer;\n \n /**\ndiff --git a/javaparser-core/src/main/javacc-support/com/github/javaparser/GeneratedJavaParserSupport.java b/javaparser-core/src/main/javacc-support/com/github/javaparser/GeneratedJavaParserSupport.java\nindex e041e1ce4..476316c29 100644\n--- a/javaparser-core/src/main/javacc-support/com/github/javaparser/GeneratedJavaParserSupport.java\n+++ b/javaparser-core/src/main/javacc-support/com/github/javaparser/GeneratedJavaParserSupport.java\n@@ -60,7 +60,7 @@ class GeneratedJavaParserSupport {\n         if (list == null) {\n             list = new NodeList<>();\n         }\n-        list.add(0, obj);\n+        list.addToTop(obj);\n         return list;\n     }\n \ndiff --git a/javaparser-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java b/javaparser-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java\nindex a9e32efac..2c2ffcdaf 100644\n--- a/javaparser-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java\n+++ b/javaparser-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java\n@@ -226,4 +226,62 @@ public class NodeListTest {\n \n         assertEquals(\"[abc, bcd, cde]\", list.toString());\n     }\n+    \n+    @Test\n+    public void addToTop() {\n+        final NodeList<Name> list = nodeList(new Name(\"abc\"), new Name(\"bcd\"), new Name(\"cde\"));\n+\n+        list.addToTop(new Name(\"xxx\"));\n+        \n+        assertEquals(\"[xxx, abc, bcd, cde]\", list.toString());\n+    }\n+    \n+    @Test\n+    public void addToBottom() {\n+        final NodeList<Name> list = nodeList(new Name(\"abc\"), new Name(\"bcd\"), new Name(\"cde\"));\n+\n+        list.addToBottom(new Name(\"xxx\"));\n+        \n+        assertEquals(\"[abc, bcd, cde, xxx]\", list.toString());\n+    }\n+\n+    @Test\n+    public void addBefore() {\n+        Name n = new Name(\"bcd\");\n+        final NodeList<Name> list = nodeList(new Name(\"abc\"), n, new Name(\"cde\"));\n+\n+        list.addBefore(new Name(\"xxx\"), n);\n+        \n+        assertEquals(\"[abc, xxx, bcd, cde]\", list.toString());\n+    }\n+\n+    @Test\n+    public void addAfter() {\n+        Name n = new Name(\"bcd\");\n+        final NodeList<Name> list = nodeList(new Name(\"abc\"), n, new Name(\"cde\"));\n+\n+        list.addAfter(new Name(\"xxx\"), n);\n+        \n+        assertEquals(\"[abc, bcd, xxx, cde]\", list.toString());\n+    }\n+\n+    @Test\n+    public void addBeforeFirst() {\n+        Name abc = new Name(\"abc\");\n+        final NodeList<Name> list = nodeList(abc, new Name(\"bcd\"), new Name(\"cde\"));\n+\n+        list.addBefore(new Name(\"xxx\"), abc);\n+        \n+        assertEquals(\"[xxx, abc, bcd, cde]\", list.toString());\n+    }\n+\n+    @Test\n+    public void addAfterLast() {\n+        Name cde = new Name(\"cde\");\n+        final NodeList<Name> list = nodeList(new Name(\"abc\"), new Name(\"bcd\"), cde);\n+\n+        list.addAfter(new Name(\"xxx\"), cde);\n+        \n+        assertEquals(\"[abc, bcd, cde, xxx]\", list.toString());\n+    }\n }\ndiff --git a/javaparser-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java b/javaparser-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java\nindex 6492687a8..f7bfa52cb 100644\n--- a/javaparser-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java\n+++ b/javaparser-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java\n@@ -48,7 +48,7 @@ public class ModifierVisitorTest {\n             public Visitable visit(final StringLiteralExpr n, final Void arg) {\n                 String v = n.getValue();\n \n-                list.add(0, new StringLiteralExpr(\"extra \" + v));\n+                list.addToTop(new StringLiteralExpr(\"extra \" + v));\n                 list.remove(new StringLiteralExpr(\"t\"));\n \n                 if (v.equals(\"a\")) {\ndiff --git a/javaparser-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/ClassOrInterfaceDeclarationTransformationsTest.java b/javaparser-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/ClassOrInterfaceDeclarationTransformationsTest.java\nindex 2f07e334c..d7b7b45fa 100644\n--- a/javaparser-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/ClassOrInterfaceDeclarationTransformationsTest.java\n+++ b/javaparser-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/ClassOrInterfaceDeclarationTransformationsTest.java\n@@ -84,7 +84,7 @@ public class ClassOrInterfaceDeclarationTransformationsTest extends AbstractLexi\n     @Test\n     public void addingTypeParameterAsFirstWhenThereAreSome() throws IOException {\n         ClassOrInterfaceDeclaration cid = consider(\"class A<U> {}\");\n-        cid.getTypeParameters().add(0, new TypeParameter(\"T\", new NodeList<>()));\n+        cid.getTypeParameters().addToTop(new TypeParameter(\"T\", new NodeList<>()));\n         assertTransformedToString(\"class A<T, U> {}\", cid);\n     }\n ",
    "Do i18n and replace magic numbers with constants": "diff --git a/liquibase-core/src/main/java/liquibase/Liquibase.java b/liquibase-core/src/main/java/liquibase/Liquibase.java\nindex 8c17e9488..89c0390ad 100644\n--- a/liquibase-core/src/main/java/liquibase/Liquibase.java\n+++ b/liquibase-core/src/main/java/liquibase/Liquibase.java\n@@ -52,6 +52,8 @@ import java.io.*;\n import java.text.DateFormat;\n import java.util.*;\n \n+import static java.util.ResourceBundle.getBundle;\n+\n /**\n  * Primary facade class for interacting with Liquibase.\n  * The built in command line, Ant, Maven and other ways of running Liquibase are wrappers around methods in this class.\n@@ -59,6 +61,13 @@ import java.util.*;\n public class Liquibase {\n \n     private static final Logger LOG = LogService.getLog(Liquibase.class);\n+    protected static final int CHANGESET_ID_NUM_PARTS = 3;\n+    protected static final int CHANGESET_ID_AUTHOR_PART = 2;\n+    protected static final int CHANGESET_ID_CHANGESET_PART = 1;\n+    protected static final int CHANGESET_ID_CHANGELOG_PART = 0;\n+    private static ResourceBundle coreBundle = getBundle(\"liquibase/i18n/liquibase-core\");\n+    protected static final String MSG_COULD_NOT_RELEASE_LOCK = coreBundle.getString(\"could.not.release.lock\");\n+\n     protected Database database;\n     private DatabaseChangeLog databaseChangeLog;\n     private String changeLogFile;\n@@ -197,7 +206,7 @@ public class Liquibase {\n             try {\n                 lockService.releaseLock();\n             } catch (LockException e) {\n-                LOG.severe(LogType.LOG, \"Could not release lock\", e);\n+                LOG.severe(LogType.LOG, MSG_COULD_NOT_RELEASE_LOCK, e);\n             }\n             resetServices();\n         }\n@@ -302,7 +311,7 @@ public class Liquibase {\n             try {\n                 lockService.releaseLock();\n             } catch (LockException e) {\n-                LOG.severe(LogType.LOG, \"Could not release lock\", e);\n+                LOG.severe(LogType.LOG, MSG_COULD_NOT_RELEASE_LOCK, e);\n             }\n             resetServices();\n         }\n@@ -347,7 +356,7 @@ public class Liquibase {\n             try {\n                 lockService.releaseLock();\n             } catch (LockException e) {\n-                LOG.severe(LogType.LOG, \"Could not release lock\", e);\n+                LOG.severe(LogType.LOG, MSG_COULD_NOT_RELEASE_LOCK, e);\n             }\n             resetServices();\n         }\n@@ -633,7 +642,7 @@ public class Liquibase {\n         changeLogParameters.setContexts(contexts);\n         changeLogParameters.setLabels(labelExpression);\n \n-        /* We have no other choice than to save the current Executer here. */\n+        /* We have no other choice than to save the current Executor here. */\n         @SuppressWarnings(\"squid:S1941\")\n         Executor oldTemplate = ExecutorService.getInstance().getExecutor(database);\n         ExecutorService.getInstance().setExecutor(database, new LoggingExecutor(\n@@ -708,7 +717,7 @@ public class Liquibase {\n             try {\n                 lockService.releaseLock();\n             } catch (LockException e) {\n-                LOG.severe(LogType.LOG, \"Could not release lock\", e);\n+                LOG.severe(LogType.LOG, MSG_COULD_NOT_RELEASE_LOCK, e);\n             }\n         }\n         resetServices();\n@@ -797,7 +806,7 @@ public class Liquibase {\n             try {\n                 lockService.releaseLock();\n             } catch (LockException e) {\n-                LOG.severe(LogType.LOG, \"Could not release lock\", e);\n+                LOG.severe(LogType.LOG, MSG_COULD_NOT_RELEASE_LOCK, e);\n             }\n         }\n         resetServices();\n@@ -874,7 +883,7 @@ public class Liquibase {\n             try {\n                 lockService.releaseLock();\n             } catch (LockException e) {\n-                LOG.severe(LogType.LOG, \"Could not release lock\", e);\n+                LOG.severe(LogType.LOG, MSG_COULD_NOT_RELEASE_LOCK, e);\n             }\n             resetServices();\n         }\n@@ -945,7 +954,7 @@ public class Liquibase {\n             try {\n                 lockService.releaseLock();\n             } catch (LockException e) {\n-                LOG.severe(LogType.LOG, \"Could not release lock\", e);\n+                LOG.severe(LogType.LOG, MSG_COULD_NOT_RELEASE_LOCK, e);\n             }\n             resetServices();\n         }\n@@ -1085,7 +1094,7 @@ public class Liquibase {\n             try {\n                 lockService.releaseLock();\n             } catch (LockException e) {\n-                LOG.severe(LogType.LOG, \"Could not release lock\", e);\n+                LOG.severe(LogType.LOG, MSG_COULD_NOT_RELEASE_LOCK, e);\n             }\n             ExecutorService.getInstance().setExecutor(database, oldTemplate);\n             resetServices();\n@@ -1150,7 +1159,7 @@ public class Liquibase {\n             try {\n                 lockService.releaseLock();\n             } catch (LockException e) {\n-                LOG.severe(LogType.LOG, \"Could not release lock\", e);\n+                LOG.severe(LogType.LOG, MSG_COULD_NOT_RELEASE_LOCK, e);\n             }\n         }\n     }\n@@ -1167,7 +1176,7 @@ public class Liquibase {\n             try {\n                 lockService.releaseLock();\n             } catch (LockException e) {\n-                LOG.severe(LogType.LOG, \"Could not release",
    "added Turkish translations": "diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/annotation/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/annotation/messages_tr.properties\nnew file mode 100644\nindex 000000000..9bd32797e\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/annotation/messages_tr.properties\n@@ -0,0 +1,18 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+annotation.incorrect.style        = Anotasyon stili \\u015Fu \\u015Fekilde olmal\\u0131: ''{0}''.\n+annotation.missing.deprecated     = @java.lang.Deprecated anotasyonu ve @deprecated Javadoc etiketi (a\\u00E7\\u0131klamas\\u0131yla birlikte) birlikte kullan\\u0131lmal\\u0131.\n+annotation.missing.override       = @inheritDoc Javadoc etiketi kullan\\u0131ld\\u0131\\u011F\\u0131nda @java.lang.Override anotasyonu da kullan\\u0131lmal\\u0131.\n+annotation.not.valid.on           = {0} anotasyonu bu konumda ge\\u00E7erli de\\u011Fil.\n+annotation.package.location       = Paket anotasyonlar\\u0131 package-info.java dosyas\\u0131nda tan\\u0131mlanmal\\u0131.\n+annotation.parens.missing         = Anotasyonun kapatma parantezi ('')'') olmal\\u0131.\n+annotation.parens.present         = Anotasyonun kapatma parantezi ('')'') olmamal\\u0131.\n+annotation.trailing.comma.missing = Anotasyonun dizi de\\u011Ferlerini takip eden bir virg\\u00FCl kullan\\u0131lmal\\u0131d\\u0131r.\n+annotation.trailing.comma.present = Anotasyonun dizi de\\u011Ferlerini takip eden bir virg\\u00FCl kullan\\u0131lmamal\\u0131d\\u0131r.\n+\n+javadoc.duplicateTag = Tekrarlanm\\u0131\\u015F {0} etiketi.\n+javadoc.missing      = Javadoc a\\u00E7\\u0131klamas\\u0131 eksik.\n+\n+suppressed.warning.not.allowed = ''{0}'' uyar\\u0131s\\u0131 bu konumda bast\\u0131r\\u0131lamaz.\n+\n+tag.not.valid.on = {0} Javadoc etiketi bu konumda ge\\u00E7ersiz.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/blocks/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/blocks/messages_tr.properties\nnew file mode 100644\nindex 000000000..f5b5725af\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/blocks/messages_tr.properties\n@@ -0,0 +1,12 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+block.empty  = Bo\\u015F blok bulundu: {0}\n+block.nested = \\u0130\\u00E7 i\\u00E7e bloklar kullan\\u0131lmamal\\u0131d\\u0131r.\n+block.noStmt = Blok en az bir ifade i\\u00E7ermeli.\n+\n+line.alone    = ''{0}'' ifadesi sat\\u0131rda tek ba\\u015F\\u0131na olmal\\u0131.\n+line.new      = ''{0}'' ifadesi yeni sat\\u0131rda olmal\\u0131.\n+line.previous = ''{0}'' ifadesi \\u00F6nceki sat\\u0131rda olmal\\u0131.\n+line.same     = ''{0}'' ifadesi ayn\\u0131 sat\\u0131rda olmal\\u0131.\n+\n+needBraces = ''{0}'' yap\\u0131s\\u0131 s\\u00FCsl\\u00FC parantezler ('''{}''') kullanmal\\u0131.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/messages_tr.properties\nnew file mode 100644\nindex 000000000..45f0b6b99\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/messages_tr.properties\n@@ -0,0 +1,98 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+array.trailing.comma = Dizi, takip eden bir virg\\u00FCl i\\u00E7ermelidir.\n+\n+assignment.inner.avoid = Dahili atamalar kullan\\u0131lmamal\\u0131d\\u0131r.\n+\n+avoid.clone.method     = ''clone'' metodu kullan\\u0131lmamal\\u0131d\\u0131r.\n+avoid.finalizer.method = ''finalize'' metodu kullan\\u0131lmamal\\u0131d\\u0131r.\n+\n+covariant.equals = java.lang.Object s\\u0131n\\u0131f\\u0131n\\u0131n ''equals'' metodundan ba\\u015Fka bir ''equals'' metodu tan\\u0131mlanm\\u0131\\u015F, java.lang.Object s\\u0131n\\u0131f\\u0131ndan gelen ''equals'' metodu da ezilmelidir (override).\n+\n+declaration.order.access      = De\\u011Fi\\u015Fken, eri\\u015Fim seviyesine g\\u00F6re yanl\\u0131\\u015F s\\u0131rada tan\\u0131mlanm\\u0131\\u015F.\n+declaration.order.constructor = ''constructor'' tan\\u0131m\\u0131 yanl\\u0131\\u015F s\\u0131rada yap\\u0131lm\\u0131\\u015F.\n+declaration.order.instance    = De\\u011Fi\\u015Fken tan\\u0131m\\u0131 yanl\\u0131\\u015F s\\u0131rada yap\\u0131lm\\u0131\\u015F.\n+declaration.order.method      = Metot tan\\u0131m\\u0131 yanl\\u0131\\u015F s\\u0131rada yap\\u0131lm\\u0131\\u015F.\n+declaration.order.static      = ''static'' de\\u011Fi\\u015Fken tan\\u0131m\\u0131 yanl\\u0131\\u015F s\\u0131rada yap\\u0131lm\\u0131\\u015F.\n+\n+default.comes.last = ''switch'' i\\u00E7erisindeki ''default'' ifadesi son durum olarak yer almal\\u0131d\\u0131r.\n+\n+doublechecked.locking.avoid = Double-Checked Locking (DCL - lock mekanizmas\\u0131nda ikili kontrol) yap\\u0131lmam\\u0131\\u015F.\n+\n+empty.statement = Bo\\u015F ifade.\n+\n+equals.avoid.null           = ''equals'' metodunda kullan\\u0131lan harflerden olu\\u015Fan ifadeler ''equals'' metodunun sol taraf\\u0131nda yer almal\\u0131d\\u0131r.\n+equals.noHashCode           = ''equals'' metodu tan\\u0131mlayan s\\u0131n\\u0131flar ''hashCode'' metodunu da tan\\u0131mlamal\\u0131d\\u0131r.\n+\n+equalsIgnoreCase.avoid.null = ''equalsIgnoreCase'' metodunda kullan\\u0131lan harflerden olu\\u015Fan ifadeler ''equalsIgnoreCase'' metodunun sol taraf\\u0131nda yer almal\\u0131d\\u0131r.\n+\n+explicit.init = ''{0}'' de\\u011Fi\\u015Fkeni (verilmese bile zaten ilklendirme de\\u011Feri olan) ''{1}'' de\\u011Feriyle ilklendirilmi\\u015F.\n+\n+fall.through      = ''switch'' ifadesinin bir \\u00F6nceki durumundan a\\u015Fa\\u011F\\u0131 d\\u00FC\\u015Fme mevcut (''break'' kullan\\u0131lmam\\u0131\\u015F olabilir).\n+fall.through.last = ''switch'' ifadesinin son durumundan a\\u015Fa\\u011F\\u0131 d\\u00FC\\u015Fme mevcut (''break'' kullan\\u0131lmam\\u0131\\u015F olabilir).\n+\n+final.variable = ''{0}'' de\\u011Fi\\u015Fkeni ''final'' olarak tan\\u0131mlanmal\\u0131d\\u0131r.\n+\n+hidden.field = ''{0}'', ba\\u015Fka bir alan\\u0131 gizliyor.\n+\n+illegal.catch      = ''{0}'' istisnas\\u0131n\\u0131/hatas\\u0131n\\u0131 yakalamaya izin verilmiyor.\n+illegal.throw      = ''{0}'' istisnas\\u0131n\\u0131/hatas\\u0131n\\u0131 f\\u0131rlatmaya izin verilmiyor.\n+illegal.token      = ''{0}'' kullan\\u0131m\\u0131na izin verilmiyor.\n+illegal.token.text = \\u0130zin verilmeyen bir kal\\u0131p kullan\\u0131lm\\u0131\\u015F ''{0}''.\n+illegal.type       = ''{0}'' tipinde de\\u011Fi\\u015Fken, d\\u00F6n\\u00FC\\u015F de\\u011Feri ya da parametre tan\\u0131mlanmamal\\u0131d\\u0131r.\n+\n+inline.conditional.avoid = Sat\\u0131r i\\u00E7i ko\\u015Fullu ifadeler kullan\\u0131lmamal\\u0131d\\u0131r.\n+\n+instantiation.avoid = {0} s\\u0131n\\u0131f\\u0131n\\u0131n yeni nesnesi \\u00FCretilmemelidir.\n+\n+junit.method.name                = ''{0}'' metodu ''{1}'' olarak adland\\u0131r\\u0131lmal\\u0131d\\u0131r.\n+junit.method.parameters          = ''{0}'' metodu parametresiz olarak tan\\u0131mlanmal\\u0131.\n+junit.method.protected.or.public = ''{0}'' metodu ''public'' ya da ''protected'' olmal\\u0131.\n+junit.method.public.and.static   = ''{0}'' metodu ''static'' olarak tan\\u0131mlanmal\\u0131.\n+junit.method.return.type         = ''{0}'' metodunun d\\u00F6n\\u00FC\\u015F tipi ''{1}'' olmal\\u0131.\n+junit.method.static              = ''{0}'' metodu ''static'' olarak tan\\u0131mlanmamal\\u0131.\n+\n+magic.number = ''{0}'' say\\u0131s\\u0131 ''magic number''d\\u0131r. \\u00D6nce tan\\u0131mlanmal\\u0131, sonra kullan\\u0131lmal\\u0131.\n+\n+missing.ctor                = S\\u0131n\\u0131f, bir ''constructor'' tan\\u0131mlamal\\u0131.\n+missing.package.declaration = Paket tan\\u0131m\\u0131 yap\\u0131lmam\\u0131\\u015F.\n+missing.super.call          = ''{0}'' metodu ''super.{0}'' metodunu \\u00E7a\\u011F\\u0131rmal\\u0131.\n+missing.switch.default      = ''default'' olmadan ''switch'' kullan\\u0131lm\\u0131\\u015F.\n+\n+modified.control.variable = Kontrol de\\u011Fi\\u015Fkeninin de\\u011Feri de\\u011Fi\\u015Ftirilmi\\u015F.\n+\n+multiple.statements.line             = Her sat\\u0131rda sadece bir ifade olmal\\u0131d\\u0131r.\n+multiple.string.literal              = ''{0}'' de\\u011Feri dosyada {1} defa kullan\\u0131lm\\u0131\\u015F.\n+multiple.variable.declarations       = Her sat\\u0131rda sadece bir de\\u011Fi\\u015Fken tan\\u0131mlanmal\\u0131.\n+multiple.variable.declarations.comma = Her de\\u011Fi\\u015Fken tan\\u0131m\\u0131 kendi ifadesinde yer almal\\u0131.\n+\n+nested.for.depth = \\u0130\\u00E7 i\\u00E7e kullan\\u0131lan ''for'' say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+nested.if.depth  = \\u0130\\u00E7 i\\u00E7e kullan\\u0131lan ''if-else'' say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+nested.try.depth = \\u0130\\u00E7 i\\u00E7e kullan\\u0131lan ''try'' say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+\n+package.dir.mismatch = Paket tan\\u0131m\\u0131 ''{0}'' klas\\u00F6r\\u00FCyle e\\u015Fle\\u015Fmiyor.\n+\n+parameter.assignment = ''{0}'' parametresine atama yap\\u0131lamaz.\n+\n+redundant.throws.classInfo = {0} i\\u00E7in s\\u0131n\\u0131f bilgisi al\\u0131nam\\u0131yor.\n+redundant.throws.duplicate = ''throws'' ifadesinde ''{0}'' tekrardan kullan\\u0131lm\\u0131\\u015F.\n+redundant.throws.subclass  = ''{0}'', ''{1}'' s\\u0131n\\u0131f\\u0131n\\u0131n alt s\\u0131n\\u0131f\\u0131d\\u0131r, ''throws'' kullan\\u0131m\\u0131 gereksizdir.\n+redundant.throws.unchecked = ''{0}'' ''unchecked'' bir istisnad\\u0131r, ''throws'' kullan\\u0131m\\u0131 gereksizdir.\n+\n+require.this.method           = ''{0}'' metoduna eri\\u015Fim \"this.\" kullan\\u0131larak yap\\u0131lmal\\u0131d\\u0131r.\n+require.this.unfound.variable = ''{0}'' ifadesinin nerede tan\\u0131mland\\u0131\\u011F\\u0131 bilinmiyor.\n+require.this.variable         = ''{0}'' de\\u011Fi\\u015Fkenine eri\\u015Fim \"this.\" kullan\\u0131larak yap\\u0131lmal\\u0131d\\u0131r.\n+\n+return.count = Kullan\\u0131lan ''return'' say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+\n+simplify.boolreturn = Ko\\u015Ful mant\\u0131\\u011F\\u0131 kald\\u0131r\\u0131labilir.\n+simplify.expression = \\u0130fade sadele\\u015Ftirilebilir.\n+\n+string.literal.equality = ''String'' ifadeleri ''{0}'' kullanarak de\\u011Fil, equals() metodu kullanarak kar\\u015F\\u0131la\\u015Ft\\u0131r\\u0131lmal\\u0131.\n+\n+unnecessary.paren.assign  = Atama ifadesinin sa\\u011F taraf\\u0131nda gereksiz parantez mevcut.\n+unnecessary.paren.expr    = \\u0130fadenin etraf\\u0131nda gereksiz parantez mevcut.\n+unnecessary.paren.ident   = ''{0}'' belirte\\u00E7inin etraf\\u0131nda gereksiz parantez mevcut.\n+unnecessary.paren.literal = ''{0}'' etraf\\u0131nda gereksiz parantez mevcut.\n+unnecessary.paren.return  = Geri d\\u00F6n\\u00FC\\u015F de\\u011Feri etraf\\u0131nda gereksiz parantez mevcut.\n+unnecessary.paren.string  = ''{0}'' etraf\\u0131nda gereksiz parantez mevcut.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/messages_tr.properties\nnew file mode 100644\nindex 000000000..5507c5766\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/messages_tr.properties\n@@ -0,0 +1,17 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+arrangement.members.before.inner = Alanlar ve metotlar i\\u00E7 s\\u0131n\\u0131flardan \\u00F6nce olmal\\u0131.\n+\n+design.forExtension = ''{0}'' metodu kendinden t\\u00FCretmek i\\u00E7in tasarlanmad\\u0131 - ''abstract'' ya da ''final'' olarak tan\\u0131mlanmal\\u0131, veya i\\u00E7i bo\\u015F olmal\\u0131.\n+\n+final.class = {0} s\\u0131n\\u0131f\\u0131 ''final'' olarak tan\\u0131mlanmal\\u0131.\n+\n+hide.utility.class = Utility s\\u0131n\\u0131flar\\u0131 (sadece ''static'' metotlar i\\u00E7eren s\\u0131n\\u0131flar) ''public'' ya da varsay\\u0131lan bir ''constructor'' i\\u00E7ermemelidir.\n+\n+interface.type = Aray\\u00FCzler bir t\\u00FCr olarak tan\\u0131mlanmal\\u0131, dolay\\u0131s\\u0131yla metotlar\\u0131 olmal\\u0131.\n+\n+mutable.exception = ''{0}'' alan\\u0131 ''final'' olarak tan\\u0131mlanmal\\u0131.\n+\n+throws.count = Kullan\\u0131lan ''throws'' say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen say\\u0131 {1,number,integer}).\n+\n+variable.notPrivate = ''{0}'' de\\u011Fi\\u015Fkeni ''private'' olarak tan\\u0131mlanmal\\u0131 ve  eri\\u015Fim metotlar\\u0131na(getter/setter) sahip olmal\\u0131.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/messages_tr.properties\nnew file mode 100644\nindex 000000000..4a3f27ea1\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/messages_tr.properties\n@@ -0,0 +1,3 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+duplicates.lines = ''{1}'' dosyas\\u0131nda {2} numaral\\u0131 sat\\u0131rdan itibaren {0} sat\\u0131r tekrarlanm\\u0131\\u015F ifade bulundu.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/messages_tr.properties\nnew file mode 100644\nindex 000000000..21c4c770e\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/messages_tr.properties\n@@ -0,0 +1,4 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+header.mismatch = Sat\\u0131r, beklenen ba\\u015Fl\\u0131k sat\\u0131r\\u0131 olan ''{0}'' ile e\\u015Fle\\u015Fmiyor.\n+header.missing  = Ba\\u015Fl\\u0131k eksik - dosyada yeterli sat\\u0131r yok.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/messages_tr.properties\nnew file mode 100644\nindex 000000000..dc913dc81\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/messages_tr.properties\n@@ -0,0 +1,14 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+import.avoidStar            = Y\\u0131ld\\u0131zl\\u0131 (''.*'' \\u015Feklinde) import kullan\\u0131lmamal\\u0131d\\u0131r - {0}.\n+import.avoidStatic          = ''static'' bir ifade ''import'' edilmemeli - {0}.\n+import.control.disallowed   = \\u0130zin verilmeyen ''import'' kullan\\u0131m\\u0131 - {0}\n+import.control.missing.file = ''import'' kontrol dosyas\\u0131 eksik.\n+import.control.unknown.pkg  = ''import'' kontrol dosyas\\u0131 bu paketi kapsam\\u0131yor.\n+import.duplicate            = ''import'' ifadesi {0,number,integer} sat\\u0131r\\u0131nda tekrarlanm\\u0131\\u015F - {1}.\n+import.illegal              = Ge\\u00E7ersiz paketten ''import'' yap\\u0131lm\\u0131\\u015F - {0}.\n+import.lang                 = ''java.lang'' paketinden gereksiz ''import'' yap\\u0131lm\\u0131\\u015F - {0}.\n+import.ordering             = ''{0}'' ''import'' ifadesinin s\\u0131ras\\u0131 hatal\\u0131.\n+import.same                 = Ayn\\u0131 paketten gereksiz ''import'' yap\\u0131lm\\u0131\\u015F - ''{0}''.\n+import.separation           = ''{0}'' ifadesi kendinden \\u00F6nceki ''import'' ifadelerinden ayr\\u0131lmal\\u0131.\n+import.unused               = Kullan\\u0131lmayan import - {0}.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/messages_tr.properties\nnew file mode 100644\nindex 000000000..69e2d8d30\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/messages_tr.properties\n@@ -0,0 +1,4 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+indentation.child.error = {0} ifadesi do\\u011Fru hizalanmam\\u0131\\u015F. Bulundu\\u011Fu s\\u00FCtun {1}, olmas\\u0131 gereken s\\u00FCtun {2}.\n+indentation.error       = {0} ifadesi do\\u011Fru hizalanmam\\u0131\\u015F. Bulundu\\u011Fu s\\u00FCtun {1}, olmas\\u0131 gereken s\\u00FCtun {2}.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/messages_tr.properties\nnew file mode 100644\nindex 000000000..63dd662c9\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/messages_tr.properties\n@@ -0,0 +1,23 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+javadoc.classInfo         = {0} etiketi ''{1}'' i\\u00E7in s\\u0131n\\u0131f bilgisi al\\u0131nam\\u0131yor.\n+javadoc.duplicateTag      = {0} etiketi tekrarlanm\\u0131\\u015F.\n+javadoc.empty             = Javadoc tan\\u0131m alan\\u0131 bo\\u015F b\\u0131rak\\u0131lm\\u0131\\u015F.\n+javadoc.expectedTag       = ''{1}'' i\\u00E7in {0} etiketi gerekli.\n+javadoc.extrahtml         = Fazladan HTML etiketi bulundu: {0}\n+javadoc.incompleteTag     = Tamamlanmam\\u0131\\u015F HTML etiketi bulundu: {0}\n+javadoc.invalidInheritDoc = '{'@inheritDoc'}' etiketi kullan\\u0131m\\u0131 ge\\u00E7ersiz.\n+javadoc.legacyPackageHtml = Eskide kalan package.html dosyalar\\u0131 kald\\u0131r\\u0131lmal\\u0131.\n+javadoc.missing           = Javadoc a\\u00E7\\u0131klamas\\u0131 eksik.\n+javadoc.noperiod          = \\u0130lk c\\u00FCmle nokta ile bitmeli.\n+javadoc.packageHtml       = Paket dok\\u00FCmantasyon dosyas\\u0131 eksik.\n+javadoc.packageInfo       = package-info.java dosyas\\u0131 eksik.\n+javadoc.return.expected   = @return etiketi eksik.\n+javadoc.unclosedhtml      = Kapat\\u0131lmam\\u0131\\u015F bir HTML etiketi bulundu: {0}\n+javadoc.unknownTag        = Bilinmeyen etiket: ''{0}''.\n+javadoc.unusedTag         = ''{1}'' i\\u00E7in kullan\\u0131lmayan {0} etiketi mevcut.\n+javadoc.unusedTagGeneral  = Kullan\\u0131lmayan Javadoc etiketi.\n+javadoc.writeTag          = {0}={1}\n+\n+type.missingTag = T\\u00FCr i\\u00E7in yaz\\u0131lan Javadoc a\\u00E7\\u0131klamas\\u0131nda {0} etiketi eksik.\n+type.tagFormat  = T\\u00FCr i\\u00E7in yaz\\u0131lan {0} Javadoc etiketi \\u015Fu kal\\u0131pta olmal\\u0131: ''{1}''.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/messages_tr.properties\nnew file mode 100644\nindex 000000000..9d29a2503\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/messages_tr.properties\n@@ -0,0 +1,34 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+array.type.style = Dizi parantezleri ge\\u00E7ersiz konumda bulunuyor.\n+\n+descendant.token.max     = ''{2}'' eleman\\u0131ndan t\\u00FCremi\\u015F ''{3}'' i\\u00E7in toplam {0} say\\u0131s\\u0131 maksimum {1} de\\u011Ferinden daha y\\u00FCksek.\n+descendant.token.min     = ''{2}'' eleman\\u0131ndan t\\u00FCremi\\u015F ''{3}'' i\\u00E7in toplam {0} say\\u0131s\\u0131 minimum {1} de\\u011Ferinden daha d\\u00FC\\u015F\\u00FCk.\n+descendant.token.sum.max = ''{2}'' alt\\u0131ndaki toplam {0} say\\u0131s\\u0131 maksimum {1} de\\u011Ferinden daha y\\u00FCksek.\n+descendant.token.sum.min = ''{2}'' alt\\u0131ndaki toplam {0} say\\u0131s\\u0131 minimum {1} de\\u011Ferinden daha d\\u00FC\\u015F\\u00FCk.\n+\n+duplicate.regexp = Tekrarlanm\\u00FD\\u00FEbir kal\\u0131p bulundu: ''{0}''.\n+\n+final.parameter = {0} parametresi ''final'' olarak tan\\u0131mlanmal\\u0131.\n+\n+illegal.regexp = Sat\\u0131rda ge\\u00E7ersiz bir kal\\u0131p var: ''{0}''.\n+\n+missing.switch.default = ''default'' durumu olmayan bir ''switch'' mevcut.\n+\n+noNewlineAtEOF = Dosyan\\u0131n sonunda yeni sat\\u0131r karakteri yok.\n+\n+required.regexp = Dosyada olmas\\u0131 gereken ''{0}'' kal\\u0131b\\u0131 yok.\n+\n+todo.match = A\\u00E7\\u0131klamalar, ''to-do'' format\\u0131 olan ''{0}'' ile \\u00E7ak\\u0131\\u015F\\u0131yor.\n+\n+trailing.comments = \\u0130zleyen (trailing) a\\u00E7\\u0131klamalar kullan\\u0131lmamal\\u0131d\\u0131r.\n+\n+translation.missingKey = ''{0}'' anahtar\\u0131 eksik.\n+\n+type.file.mismatch = En d\\u0131\\u015Ftaki t\\u00FCr\\u00FCn ad\\u0131 dosya ad\\u0131yla ayn\\u0131 de\\u011Fil.\n+\n+unable.open = ''{0}'' a\\u00E7\\u0131lam\\u0131yor.\n+\n+uncommented.main = ''main'' metoduna a\\u00E7\\u0131klama girilmeli.\n+\n+upperEll = B\\u00FCy\\u00FCk harf ''L'' kullan\\u0131lmal\\u0131.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/messages_tr.properties\nnew file mode 100644\nindex 000000000..9ff845974\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/messages_tr.properties\n@@ -0,0 +1,55 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+booleanExpressionComplexity = Mant\\u0131ksal ifadenin karma\\u015F\\u0131kl\\u0131\\u011F\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+\n+classDataAbstractionCoupling = Class Data Abstraction Coupling (CDAC) de\\u011Feri {0,number,integer} {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}). Nesnesi olu\\u015Fturulan s\\u0131n\\u0131flar {2}. (CDAC: Bir s\\u0131n\\u0131f\\u0131n, kendinden farkl\\u0131 ka\\u00E7 s\\u0131n\\u0131f\\u0131n nesnesini olu\\u015Fturdu\\u011Fu.)\n+\n+classFanOutComplexity = Class Fan-Out Complexity (CFOC) de\\u011Feri {0,number,integer} {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}). (CFOC: Bir s\\u0131n\\u0131f\\u0131n, kendinden ba\\u015Fka ka\\u00E7 farkl\\u0131 s\\u0131n\\u0131f\\u0131 kulland\\u0131\\u011F\\u0131)\n+\n+cyclomaticComplexity = Cyclomatic Complexity de\\u011Feri {0,number,integer} {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}). (Cyclomatic Complexity: Bir metodun, constructorun ya da statik blo\\u011Fun m\\u00FCmk\\u00FCn olan minimum ger\\u00E7eklenme yolu say\\u0131s\\u0131)\n+\n+duplicateLiteral = ''{0}'' s\\u00F6zc\\u00FC\\u011F\\u00FC kod i\\u00E7erisinde tekrarlanmamal\\u0131, tan\\u0131mlan\\u0131p \\u00F6yle kullan\\u0131lmal\\u0131.\n+\n+finalField = ''{0}'' alan\\u0131 ''final'' olarak tan\\u0131mlanmal\\u0131.\n+\n+illegalAbstractClassName = ''{0}'' s\\u0131n\\u0131f\\u0131n\\u0131n ad\\u0131 \\u015Fu kal\\u0131pta olmal\\u0131: ''{1}''.\n+\n+illegalCatch = ''{0}'' istisnas\\u0131n\\u0131/hatas\\u0131n\\u0131 yakalamaya izin verilmiyor.\n+\n+illegalThrows = ''{0}'' istisnas\\u0131n\\u0131/hatas\\u0131n\\u0131 f\\u0131rlatmaya izin verilmiyor.\n+\n+illegalToken = ''{0}'' kullanmaya izin verilmiyor.\n+\n+illegalType = ''{0}'' tipinde de\\u011Fi\\u015Fkenler, parametreler ya da geri d\\u00F6n\\u00FC\\u015F de\\u011Ferleri tan\\u0131mlamaya, izin verilmiyor.\n+\n+junit.methodName              = ''{0}'' metodunun ad\\u0131 ''{1}'' olmal\\u0131.\n+junit.methodParameters        = ''{0}'' metodu parametresiz olarak tan\\u0131mlanmal\\u0131.\n+junit.methodPublicAndStatic   = ''{0}'' metodu ''static'' olarak tan\\u0131mlanmal\\u0131.\n+junit.methodPublicOrProtected = {0} metodu ''public'' ya da ''protected'' olarak tan\\u0131mlanmal\\u0131.\n+junit.methodReturnType        = ''{0}'' metodunun geri d\\u00F6n\\u00FC\\u015F tipi ''void'' olmal\\u0131.\n+\n+mutableException = ''{0}'' alan\\u0131 ''final'' olarak tan\\u0131mlanmal\\u0131.\n+\n+ncss.class  = Bu s\\u0131n\\u0131f\\u0131n a\\u00E7\\u0131klama olmayan kaynak kod sat\\u0131r\\u0131 (NCSS) say\\u0131s\\u0131  {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+ncss.file   = Bu dosyan\\u0131n a\\u00E7\\u0131klama olmayan kaynak kod sat\\u0131r\\u0131 (NCSS) say\\u0131s\\u0131  {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+ncss.method = Bu metodun a\\u00E7\\u0131klama olmayan kaynak kod sat\\u0131r\\u0131 (NCSS) say\\u0131s\\u0131  {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+\n+nestedIfDepth = \\u0130\\u00E7 i\\u00E7e kullan\\u0131lan ''if-else'' say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+\n+nestedTryDepth = \\u0130\\u00E7 i\\u00E7e kullan\\u0131lan ''try'' say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+\n+npathComplexity = NPath Complexity de\\u011Feri {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}). (NPath Complexity: Bir metodun m\\u00FCmk\\u00FCn olan t\\u00FCm ger\\u00E7eklenme yollar\\u0131n\\u0131n say\\u0131s\\u0131)\n+\n+packageDeclaration = Paket tan\\u0131m\\u0131 eksik.\n+\n+parameterAssignment = ''{0}'' parametresine de\\u011Fer atanamaz.\n+\n+returnCount = ''return'' say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+\n+returnFromCatch = ''catch'' ifadesi i\\u00E7inde ''return'' kullan\\u0131lamaz.\n+\n+returnFromFinally = ''finally'' ifadesi i\\u00E7inde ''return'' kullan\\u0131lamaz.\n+\n+throwsCount = Kullan\\u0131lan ''throws'' say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+\n+unusedVariable = ''{0}'' de\\u011Fi\\u015Fkeni hi\\u00E7 kullan\\u0131lmam\\u0131\\u015F.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/messages_tr.properties\nnew file mode 100644\nindex 000000000..f0bdc3768\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/messages_tr.properties\n@@ -0,0 +1,7 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+annotation.order = ''{0}'' anotasyon niteleyicisi, anotasyon olmayan niteleyicilerden \\u00F6nce kullan\\u0131lmal\\u0131.\n+\n+mod.order = ''{0}'' niteleyicisi, Java taraf\\u0131ndan \\u00F6nerilen s\\u0131rada de\\u011Fil.\n+\n+redundantModifier = Gereksiz ''{0}'' niteleyicisi.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/messages_tr.properties\nnew file mode 100644\nindex 000000000..9d4024e72\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/messages_tr.properties\n@@ -0,0 +1,9 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+illegal.abstract.class.name = ''{0}'' ismi, \\u015Fu kal\\u0131pta olmal\\u0131: ''{1}''.\n+\n+method.name.equals.class.name = ''{0}'' metodunun ad\\u0131 kendini kapsayan t\\u00FCr ile ayn\\u0131 olmamal\\u0131.\n+\n+name.invalidPattern = ''{0}'' ismi, \\u015Fu kal\\u0131pta olmal\\u0131: ''{1}''.\n+\n+no.abstract.class.modifier = ''{0}'' s\\u0131n\\u0131f\\u0131 ''abstract'' olarak tan\\u0131mlanmal\\u0131.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/messages_tr.properties\nnew file mode 100644\nindex 000000000..46876eaa6\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/messages_tr.properties\n@@ -0,0 +1,4 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+regexp.exceeded = Sat\\u0131r, ge\\u00E7ersiz ''{0}'' kal\\u0131b\\u0131yla e\\u015Fle\\u015Fiyor.\n+regexp.minimum  = Dosya, ''{1}'' kal\\u0131b\\u0131 i\\u00E7in en az {0} e\\u015Fle\\u015Fme i\\u00E7ermiyor.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/messages_tr.properties\nnew file mode 100644\nindex 000000000..a6a5a4698\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/messages_tr.properties\n@@ -0,0 +1,19 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+executableStatementCount = Y\\u00FCr\\u00FCt\\u00FClebilir ifade say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+\n+maxLen.anonInner = \\u0130simsiz i\\u00E7 s\\u0131n\\u0131f uzunlu\\u011Fu  {0,number,integer} sat\\u0131r (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+maxLen.file      = Dosya uzunlu\\u011Fu {0,number,integer} sat\\u0131r (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+maxLen.method    = Metot uzunlu\\u011Fu {0,number,integer} sat\\u0131r (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+\n+maxLineLen = Sat\\u0131r {0,number,integer} de\\u011Ferinden daha uzun.\n+\n+maxOuterTypes = Tan\\u0131mlanan d\\u0131\\u015F t\\u00FCr say\\u0131s\\u0131  {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+\n+maxParam = {0,number,integer} de\\u011Ferinden daha fazla parametre mevcut.\n+\n+too.many.methods          = Toplam metot say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+too.many.packageMethods   = Toplam ''package'' eri\\u015Fimli metot say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+too.many.privateMethods   = Toplam ''private'' metot say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+too.many.protectedMethods = Toplam ''protected'' metot say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\n+too.many.publicMethods    = Toplam ''public'' metot say\\u0131s\\u0131 {0,number,integer} (maksimum izin verilen de\\u011Fer {1,number,integer}).\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/messages_tr.properties\nnew file mode 100644\nindex 000000000..b72bb29a5\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/messages_tr.properties\n@@ -0,0 +1,16 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+containsTab = Sat\\u0131r, sekme karakteri i\\u00E7ermekte.\n+\n+file.containsTab = Dosya, sekme karakterleri i\\u00E7ermekte (sadece ilk bulunan g\\u00F6steriliyor).\n+\n+line.alone    = ''{0}'' ifadesi sat\\u0131rda tek ba\\u015F\\u0131na olmal\\u0131.\n+line.new      = ''{0}'' ifadesi yeni bir sat\\u0131rda olmal\\u0131.\n+line.previous = ''{0}'' ifadesi \\u00F6nceki sat\\u0131rda olmal\\u0131.\n+line.same     = ''{0}'' ifadesi ayn\\u0131 sat\\u0131rda olmal\\u0131.\n+\n+ws.followed      = ''{0}'' ifadesinden sonra bo\\u015Fluk kullan\\u0131lm\\u0131\\u015F.\n+ws.illegalFollow = ''{0}'' ifadesinden sonra ge\\u00E7ersiz bir karakter kullan\\u0131lm\\u0131\\u015F.\n+ws.notFollowed   = ''{0}'' ifadesinden sonra bo\\u015Fluk kullan\\u0131lmam\\u0131\\u015F.\n+ws.notPreceded   = ''{0}'' ifadesinden \\u00F6nce bo\\u015Fluk kullan\\u0131lmam\\u0131\\u015F.\n+ws.preceded      = ''{0}'' ifadesinden \\u00F6nce bo\\u015Fluk kullan\\u0131lm\\u0131\\u015F.\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/messages_tr.properties b/src/checkstyle/com/puppycrawl/tools/checkstyle/messages_tr.properties\nnew file mode 100644\nindex 000000000..faae902a1\n--- /dev/null\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/messages_tr.properties\n@@ -0,0 +1,8 @@\n+#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)\n+\n+DefaultLogger.addException  = {0} denetlenirken hata olu\\u015Ftu.\n+DefaultLogger.auditFinished = Denetleme tamamland\\u0131.\n+DefaultLogger.auditStarted  = Denetleme ba\\u015Fl\\u0131yor...\n+\n+general.exception    = Bir istisna yakaland\\u0131 - {0}\n+general.fileNotFound = Dosya bulunamad\\u0131!\ndiff --git a/src/xdocs/releasenotes.xml b/src/xdocs/releasenotes.xml\nindex 8b62d59d3..93a855a02 100755\n--- a/src/xdocs/releasenotes.xml\n+++ b/src/xdocs/releasenotes.xml\n@@ -43,6 +43,10 @@\n           <a href=\"http://jeremymanson.blogspot.com.au/2008/05/double-checked-locking.html\">here</a>\n           for more details.\n         </li>\n+        <li>\n+          Added Turkish message translations. Thanks to poyrazus\n+          for patch #3460908.\n+        </li>\n       </ul>\n     </section>\n ",
    "Add ResTableResourceName": "diff --git a/resources/src/main/java/org/robolectric/res/android/ResTableResourceName.java b/resources/src/main/java/org/robolectric/res/android/ResTableResourceName.java\nnew file mode 100644\nindex 000000000..d141e40b4\n--- /dev/null\n+++ b/resources/src/main/java/org/robolectric/res/android/ResTableResourceName.java\n@@ -0,0 +1,9 @@\n+package org.robolectric.res.android;\n+\n+// transliterated from from https://android.googlesource.com/platform/frameworks/base/+/android-7.1.1_r13/include/androidfw/ResourceTypes.h\n+// struct resource_name\n+public class ResTableResourceName {\n+  public String packageName;\n+  public String type;\n+  public String name;\n+}",
    "prepare release 1 . 4 . 2": "diff --git a/benchmarks/pom.xml b/benchmarks/pom.xml\nindex 68cf5c159..f4e4eeb20 100644\n--- a/benchmarks/pom.xml\n+++ b/benchmarks/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>parent</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>benchmarks</artifactId>\ndiff --git a/pom.xml b/pom.xml\nindex b5ab19e6d..debd42da0 100755\n--- a/pom.xml\n+++ b/pom.xml\n@@ -19,7 +19,7 @@\n \n   <groupId>io.zipkin.java</groupId>\n   <artifactId>parent</artifactId>\n-  <version>1.4.2-SNAPSHOT</version>\n+  <version>1.4.2</version>\n   <packaging>pom</packaging>\n \n   <modules>\n@@ -113,7 +113,7 @@\n     <url>https://github.com/openzipkin/zipkin</url>\n     <connection>scm:git:https://github.com/openzipkin/zipkin.git</connection>\n     <developerConnection>scm:git:https://github.com/openzipkin/zipkin.git</developerConnection>\n-    <tag>HEAD</tag>\n+    <tag>1.4.2</tag>\n   </scm>\n \n   <developers>\ndiff --git a/zipkin-autoconfigure/collector-kafka/pom.xml b/zipkin-autoconfigure/collector-kafka/pom.xml\nindex 51c7204a1..e9ff9cce9 100644\n--- a/zipkin-autoconfigure/collector-kafka/pom.xml\n+++ b/zipkin-autoconfigure/collector-kafka/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>zipkin-autoconfigure</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-autoconfigure-collector-kafka</artifactId>\ndiff --git a/zipkin-autoconfigure/collector-scribe/pom.xml b/zipkin-autoconfigure/collector-scribe/pom.xml\nindex 8dd4dd2d0..0438cbcb3 100644\n--- a/zipkin-autoconfigure/collector-scribe/pom.xml\n+++ b/zipkin-autoconfigure/collector-scribe/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>zipkin-autoconfigure</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-autoconfigure-collector-scribe</artifactId>\ndiff --git a/zipkin-autoconfigure/metrics-prometheus/pom.xml b/zipkin-autoconfigure/metrics-prometheus/pom.xml\nindex db832c482..185b8e4c7 100644\n--- a/zipkin-autoconfigure/metrics-prometheus/pom.xml\n+++ b/zipkin-autoconfigure/metrics-prometheus/pom.xml\n@@ -18,7 +18,7 @@\n     <parent>\n         <artifactId>zipkin-autoconfigure</artifactId>\n         <groupId>io.zipkin.java</groupId>\n-        <version>1.4.2-SNAPSHOT</version>\n+        <version>1.4.2</version>\n     </parent>\n     <modelVersion>4.0.0</modelVersion>\n \ndiff --git a/zipkin-autoconfigure/pom.xml b/zipkin-autoconfigure/pom.xml\nindex e9c2417ad..7d360a85e 100644\n--- a/zipkin-autoconfigure/pom.xml\n+++ b/zipkin-autoconfigure/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>parent</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-autoconfigure</artifactId>\ndiff --git a/zipkin-autoconfigure/storage-cassandra/pom.xml b/zipkin-autoconfigure/storage-cassandra/pom.xml\nindex a9225b4b6..832b3f5d8 100644\n--- a/zipkin-autoconfigure/storage-cassandra/pom.xml\n+++ b/zipkin-autoconfigure/storage-cassandra/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>zipkin-autoconfigure</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-autoconfigure-storage-cassandra</artifactId>\ndiff --git a/zipkin-autoconfigure/storage-elasticsearch/pom.xml b/zipkin-autoconfigure/storage-elasticsearch/pom.xml\nindex 0e3d15e89..fc03d2183 100644\n--- a/zipkin-autoconfigure/storage-elasticsearch/pom.xml\n+++ b/zipkin-autoconfigure/storage-elasticsearch/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>zipkin-autoconfigure</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-autoconfigure-storage-elasticsearch</artifactId>\ndiff --git a/zipkin-autoconfigure/storage-mysql/pom.xml b/zipkin-autoconfigure/storage-mysql/pom.xml\nindex d78361d1d..f569ec702 100644\n--- a/zipkin-autoconfigure/storage-mysql/pom.xml\n+++ b/zipkin-autoconfigure/storage-mysql/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>zipkin-autoconfigure</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-autoconfigure-storage-mysql</artifactId>\ndiff --git a/zipkin-autoconfigure/ui/pom.xml b/zipkin-autoconfigure/ui/pom.xml\nindex ddde53fc2..df1ec1694 100644\n--- a/zipkin-autoconfigure/ui/pom.xml\n+++ b/zipkin-autoconfigure/ui/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>zipkin-autoconfigure</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-autoconfigure-ui</artifactId>\ndiff --git a/zipkin-collector/kafka/pom.xml b/zipkin-collector/kafka/pom.xml\nindex 07b28b61d..5158d9dd3 100644\n--- a/zipkin-collector/kafka/pom.xml\n+++ b/zipkin-collector/kafka/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>zipkin-collector</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-collector-kafka</artifactId>\ndiff --git a/zipkin-collector/pom.xml b/zipkin-collector/pom.xml\nindex 95c8fbb3c..aad511f47 100644\n--- a/zipkin-collector/pom.xml\n+++ b/zipkin-collector/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>parent</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-collector</artifactId>\ndiff --git a/zipkin-collector/scribe/pom.xml b/zipkin-collector/scribe/pom.xml\nindex 019592c98..6317c5e70 100644\n--- a/zipkin-collector/scribe/pom.xml\n+++ b/zipkin-collector/scribe/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>zipkin-collector</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-collector-scribe</artifactId>\ndiff --git a/zipkin-guava/pom.xml b/zipkin-guava/pom.xml\nindex 201cc504f..b57eba3cd 100644\n--- a/zipkin-guava/pom.xml\n+++ b/zipkin-guava/pom.xml\n@@ -18,7 +18,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>parent</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n   <modelVersion>4.0.0</modelVersion>\n \ndiff --git a/zipkin-junit/pom.xml b/zipkin-junit/pom.xml\nindex 46bfd56ba..16b7e4f6b 100644\n--- a/zipkin-junit/pom.xml\n+++ b/zipkin-junit/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>parent</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-junit</artifactId>\ndiff --git a/zipkin-server/pom.xml b/zipkin-server/pom.xml\nindex a1e649ac9..c79d1fb37 100644\n--- a/zipkin-server/pom.xml\n+++ b/zipkin-server/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>parent</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-server</artifactId>\ndiff --git a/zipkin-storage/cassandra/pom.xml b/zipkin-storage/cassandra/pom.xml\nindex b93918624..ada094d5e 100644\n--- a/zipkin-storage/cassandra/pom.xml\n+++ b/zipkin-storage/cassandra/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>zipkin-storage</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-storage-cassandra</artifactId>\ndiff --git a/zipkin-storage/elasticsearch/pom.xml b/zipkin-storage/elasticsearch/pom.xml\nindex 09d2a5bf3..a22e18557 100755\n--- a/zipkin-storage/elasticsearch/pom.xml\n+++ b/zipkin-storage/elasticsearch/pom.xml\n@@ -18,7 +18,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>zipkin-storage</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n   <modelVersion>4.0.0</modelVersion>\n \ndiff --git a/zipkin-storage/mysql/pom.xml b/zipkin-storage/mysql/pom.xml\nindex f76a61886..8d2483ef2 100644\n--- a/zipkin-storage/mysql/pom.xml\n+++ b/zipkin-storage/mysql/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>zipkin-storage</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-storage-mysql</artifactId>\ndiff --git a/zipkin-storage/pom.xml b/zipkin-storage/pom.xml\nindex 5b3e7b280..2df35d16b 100644\n--- a/zipkin-storage/pom.xml\n+++ b/zipkin-storage/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>parent</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-storage</artifactId>\ndiff --git a/zipkin-ui/pom.xml b/zipkin-ui/pom.xml\nindex 2065f0b46..48595835b 100644\n--- a/zipkin-ui/pom.xml\n+++ b/zipkin-ui/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>parent</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-ui</artifactId>\ndiff --git a/zipkin-zookeeper/pom.xml b/zipkin-zookeeper/pom.xml\nindex c6a13ed29..e73c7345b 100644\n--- a/zipkin-zookeeper/pom.xml\n+++ b/zipkin-zookeeper/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>parent</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin-zookeeper</artifactId>\ndiff --git a/zipkin/pom.xml b/zipkin/pom.xml\nindex 995557530..356e309b1 100644\n--- a/zipkin/pom.xml\n+++ b/zipkin/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>io.zipkin.java</groupId>\n     <artifactId>parent</artifactId>\n-    <version>1.4.2-SNAPSHOT</version>\n+    <version>1.4.2</version>\n   </parent>\n \n   <artifactId>zipkin</artifactId>",
    "added initial tests for interval set": "diff --git a/runtime/Go/antlr/interval_set_test.go b/runtime/Go/antlr/interval_set_test.go\nnew file mode 100644\nindex 000000000..832559df3\n--- /dev/null\n+++ b/runtime/Go/antlr/interval_set_test.go\n@@ -0,0 +1,51 @@\n+package antlr\n+\n+import (\n+\t\"testing\"\n+)\n+\n+func assertInterval(t *testing.T, i *Interval, l int){\n+\tif i.length() != l{\n+\t\tt.Errorf(\"For interval [%s] [%d] length is expected, [%d] is actual\", i.String(), l, i.length())\n+\t}\n+}\n+\n+func assertString(t *testing.T, result string, expected string){\n+\tif result != expected{\n+\t\tt.Errorf(\"expected: %s, result:%s\", result, expected)\n+\t}\n+}\n+\n+func TestDefaultIntervalLength(t *testing.T){\n+\tassertInterval(t, NewInterval(0,0), 1)\n+\tassertInterval(t, NewInterval(100, 100), 1)\n+\n+}\n+\n+func TestIntervalSetAbsorb(t *testing.T){\n+\ts := NewIntervalSet()\n+\ts.addRange(10,20)\n+\ts.addRange(11,19)\n+\tassertString(t, \"10..20\", s.toIndexString())\n+}\n+\n+func TestIntervalSetOverlap(t *testing.T){\n+\ts := NewIntervalSet()\n+\ts.addRange(10, 20)\n+\ts.addRange(15, 25)\n+\tassertString(t, \"10..25\", s.toIndexString())\n+}\n+\n+func TestIntervalSetIndependent(t *testing.T)  {\n+\ts := NewIntervalSet()\n+\ts.addRange(10, 20)\n+\ts.addRange(30, 40)\n+\tassertString(t, \"{10..20, 30..40}\", s.toIndexString())\n+}\n+\n+func TestIntervalSetAdjoint(t *testing.T)  {\n+\ts := NewIntervalSet()\n+\ts.addRange(10,20)\n+\ts.addRange(20, 30)\n+\tassertString(t, \"10..30\", s.toIndexString())\n+}\n\\ No newline at end of file",
    "Remove pre - 2 . 0 supercolumn compatibility code": "diff --git a/src/java/org/apache/cassandra/db/ColumnFamilySerializer.java b/src/java/org/apache/cassandra/db/ColumnFamilySerializer.java\nindex 92aa955fe0..7a1d16d77b 100644\n--- a/src/java/org/apache/cassandra/db/ColumnFamilySerializer.java\n+++ b/src/java/org/apache/cassandra/db/ColumnFamilySerializer.java\n@@ -60,13 +60,6 @@ public class ColumnFamilySerializer implements IVersionedSerializer<ColumnFamily\n \n             out.writeBoolean(true);\n             serializeCfId(cf.id(), out, version);\n-\n-            if (cf.metadata().isSuper() && version < MessagingService.VERSION_20)\n-            {\n-                SuperColumns.serializeSuperColumnFamily(cf, out, version);\n-                return;\n-            }\n-\n             cf.getComparator().deletionInfoSerializer().serialize(cf.deletionInfo(), out, version);\n             ColumnSerializer columnSerializer = cf.getComparator().columnSerializer();\n             int count = cf.getColumnCount();\n@@ -120,20 +113,11 @@ public class ColumnFamilySerializer implements IVersionedSerializer<ColumnFamily\n \n     public long contentSerializedSize(ColumnFamily cf, TypeSizes typeSizes, int version)\n     {\n-        long size = 0L;\n-\n-        if (cf.metadata().isSuper() && version < MessagingService.VERSION_20)\n-        {\n-            size += SuperColumns.serializedSize(cf, typeSizes, version);\n-        }\n-        else\n-        {\n-            size += cf.getComparator().deletionInfoSerializer().serializedSize(cf.deletionInfo(), typeSizes, version);\n-            size += typeSizes.sizeof(cf.getColumnCount());\n-            ColumnSerializer columnSerializer = cf.getComparator().columnSerializer();\n-            for (Cell cell : cf)\n-                size += columnSerializer.serializedSize(cell, typeSizes);\n-        }\n+        long size = cf.getComparator().deletionInfoSerializer().serializedSize(cf.deletionInfo(), typeSizes, version);\n+        size += typeSizes.sizeof(cf.getColumnCount());\n+        ColumnSerializer columnSerializer = cf.getComparator().columnSerializer();\n+        for (Cell cell : cf)\n+            size += columnSerializer.serializedSize(cell, typeSizes);\n         return size;\n     }\n \ndiff --git a/src/java/org/apache/cassandra/db/SuperColumns.java b/src/java/org/apache/cassandra/db/SuperColumns.java\nindex a7d44dc276..b854856e24 100644\n--- a/src/java/org/apache/cassandra/db/SuperColumns.java\n+++ b/src/java/org/apache/cassandra/db/SuperColumns.java\n@@ -18,15 +18,12 @@\n package org.apache.cassandra.db;\n \n import java.io.DataInput;\n-import java.io.DataOutput;\n import java.io.IOError;\n import java.io.IOException;\n import java.nio.ByteBuffer;\n import java.util.ArrayList;\n import java.util.Iterator;\n-import java.util.LinkedHashMap;\n import java.util.List;\n-import java.util.Map;\n import java.util.SortedSet;\n import java.util.TreeSet;\n \n@@ -43,68 +40,6 @@ public class SuperColumns\n         return new SCIterator(in, superColumnCount, flag, expireBefore, type);\n     }\n \n-    public static void serializeSuperColumnFamily(ColumnFamily scf, DataOutput out, int version) throws IOException\n-    {\n-        /*\n-         * There is 2 complications:\n-         *   1) We need to know the number of super columns in the column\n-         *   family to write in the header (so we do a first pass to group\n-         *   columns before serializing).\n-         *   2) For deletion infos, we need to figure out which are top-level\n-         *   deletions and which are super columns deletions (i.e. the\n-         *   subcolumns range deletions).\n-         */\n-        DeletionInfo delInfo = scf.deletionInfo();\n-        Map<CellName, List<Cell>> scMap = groupSuperColumns(scf);\n-\n-        // Actually Serialize\n-        scf.getComparator().deletionInfoSerializer().serialize(new DeletionInfo(delInfo.getTopLevelDeletion()), out, version);\n-        out.writeInt(scMap.size());\n-\n-        CellNameType subComparator = subType(scf.getComparator());\n-        for (Map.Entry<CellName, List<Cell>> entry : scMap.entrySet())\n-        {\n-            scf.getComparator().cellSerializer().serialize(entry.getKey(), out);\n-\n-            DeletionTime delTime = delInfo.rangeCovering(entry.getKey());\n-            DeletionInfo scDelInfo = delTime == null ? DeletionInfo.live() : new DeletionInfo(delTime);\n-            DeletionTime.serializer.serialize(scDelInfo.getTopLevelDeletion(), out);\n-\n-            out.writeInt(entry.getValue().size());\n-            ColumnSerializer serializer = subComparator.columnSerializer();\n-            for (Cell subCell : entry.getValue())\n-                serializer.serialize(subCell, out);\n-        }\n-    }\n-\n-    private static Map<CellName, List<Cell>> groupSuperColumns(ColumnFamily scf)\n-    {\n-        CellNameType type = scf.getComparator();\n-        // The order of insertion matters!\n-        Map<CellName, List<Cell>> scMap = new LinkedHashMap<>();\n-\n-        CellName scName = null;\n-        List<Cell> subCells = null;\n-        CellNameType scType = scType(type);\n-        CellNameType subType = subType(type);\n-        for (Cell cell : scf)\n-        {\n-            CellName newScName = scType.makeCellName(scName(cell.name()));\n-            CellName newSubName = subType.makeCellName(subName(cell.name()));\n-\n-            if (scName == null || scType.compare(scName, newScName) != 0)\n-            {\n-                // new super cell\n-                scName = newScName;\n-                subCells = new ArrayList<>();\n-                scMap.put(scName, subCells);\n-            }\n-\n-            subCells.add(((Cell) cell).withUpdatedName(newSubName));\n-        }\n-        return scMap;\n-    }\n-\n     public static void deserializerSuperColumnFamily(DataInput in, ColumnFamily cf, ColumnSerializer.Flag flag, int version) throws IOException\n     {\n         // Note that there was no way to insert a range tombstone in a SCF in 1.2\n@@ -116,32 +51,6 @@ public class SuperColumns\n             cf.addAtom(iter.next());\n     }\n \n-    public static long serializedSize(ColumnFamily scf, TypeSizes typeSizes, int version)\n-    {\n-        Map<CellName, List<Cell>> scMap = groupSuperColumns(scf);\n-        DeletionInfo delInfo = scf.deletionInfo();\n-\n-        // Actually Serialize\n-        long size = scType(scf.getComparator()).deletionInfoSerializer().serializedSize(new DeletionInfo(delInfo.getTopLevelDeletion()), version);\n-\n-        CellNameType scType = scType(scf.getComparator());\n-        CellNameType subType = subType(scf.getComparator());\n-        ColumnSerializer colSer = subType.columnSerializer();\n-        for (Map.Entry<CellName, List<Cell>> entry : scMap.entrySet())\n-        {\n-            size += scType.cellSerializer().serializedSize(entry.getKey(), typeSizes);\n-\n-            DeletionTime delTime = delInfo.rangeCovering(entry.getKey());\n-            DeletionInfo scDelInfo = delTime == null ? DeletionInfo.live() : new DeletionInfo(delTime);\n-            size += DeletionTime.serializer.serializedSize(scDelInfo.getTopLevelDeletion(), TypeSizes.NATIVE);\n-\n-            size += typeSizes.sizeof(entry.getValue().size());\n-            for (Cell subCell : entry.getValue())\n-                size += colSer.serializedSize(subCell, typeSizes);\n-        }\n-        return size;\n-    }\n-\n     private static class SCIterator implements Iterator<OnDiskAtom>\n     {\n         private final DataInput in;\n@@ -215,11 +124,6 @@ public class SuperColumns\n         }\n     }\n \n-    private static CellNameType scType(CellNameType type)\n-    {\n-        return new SimpleDenseCellNameType(type.subtype(0));\n-    }\n-\n     private static CellNameType subType(CellNameType type)\n     {\n         return new SimpleDenseCellNameType(type.subtype(1));\n@@ -259,121 +163,6 @@ public class SuperColumns\n         return CellNames.compositeDense(scName).end();\n     }\n \n-    public static SCFilter filterToSC(CellNameType type, IDiskAtomFilter filter)\n-    {\n-        if (filter instanceof NamesQueryFilter)\n-            return namesFilterToSC(type, (NamesQueryFilter)filter);\n-        else\n-            return sliceFilterToSC(type, (SliceQueryFilter)filter);\n-    }\n-\n-    public static SCFilter namesFilterToSC(CellNameType type, NamesQueryFilter filter)\n-    {\n-        ByteBuffer scName = null;\n-        CellNameType subComparator = subType(type);\n-        SortedSet<CellName> newColumns = new TreeSet<CellName>(subComparator);\n-        for (CellName name : filter.columns)\n-        {\n-            ByteBuffer newScName = scName(name);\n-\n-            if (scName == null)\n-            {\n-                scName = newScName;\n-            }\n-            else if (type.subtype(0).compare(scName, newScName) != 0)\n-            {\n-                // If we're selecting column across multiple SC, it's not something we can translate for an old node\n-                throw new RuntimeException(\"Cannot convert filter to old super column format. Update all nodes to Cassandra 2.0 first.\");\n-            }\n-\n-            newColumns.add(subComparator.makeCellName(name));\n-        }\n-        return new SCFilter(scName, new NamesQueryFilter(newColumns));\n-    }\n-\n-    private static boolean isEndOfRange(Composite c)\n-    {\n-        return c.eoc() == Composite.EOC.END;\n-    }\n-\n-    public static SCFilter sliceFilterToSC(CellNameType type, SliceQueryFilter filter)\n-    {\n-        /*\n-         * There is 3 main cases that we can translate back into super column\n-         * queries:\n-         *   1) We have only one slice where the first component of start and\n-         *   finish is the same, we translate as a slice query on one SC.\n-         *   2) We have only one slice, neither the start and finish have a 2nd\n-         *   component, and end has the 'end of component' set, we translate\n-         *   as a slice of SCs.\n-         *   3) Each slice has the same first component for start and finish, no\n-         *   2nd component and each finish has the 'end of component' set, we\n-         *   translate as a names query of SCs (the filter must then not be reversed).\n-         * Otherwise, we can't do much.\n-         */\n-\n-        boolean reversed = filter.reversed;\n-        if (filter.slices.length == 1)\n-        {\n-            Composite start = filter.slices[0].start;\n-            Composite finish = filter.slices[0].start;\n-\n-            if (filter.compositesToGroup == 1)\n-            {\n-                // Note: all the resulting filter must have compositeToGroup == 0 because this\n-                // make no sense for super column on the destination node otherwise\n-                if (start.isEmpty())\n-                {\n-                    if (finish.isEmpty())\n-                        // An 'IdentityFilter', keep as is (except for the compositeToGroup)\n-                        return new SCFilter(null, new SliceQueryFilter(filter.start(), filter.finish(), reversed, filter.count));\n-\n-                    if (subName(finish) == null\n-                            && ((!reversed && !isEndOfRange(finish)) || (reversed && isEndOfRange(finish))))\n-                        return new SCFilter(null, new SliceQueryFilter(Composites.EMPTY, CellNames.simpleDense(scName(finish)), reversed, filter.count));\n-                }\n-                else if (finish.isEmpty())\n-                {\n-                    if (subName(start) == null\n-                            && ((!reversed && isEndOfRange(start)) || (reversed && !isEndOfRange(start))))\n-                        return new SCFilter(null, new SliceQueryFilter(CellNames.simpleDense(scName(start)), Composites.EMPTY, reversed, filter.count));\n-                }\n-                else if (subName(start) == null && subName(finish) == null\n-                        && ((   reversed && !isEndOfRange(start) && isEndOfRange(finish))\n-                            || (!reversed &&  isEndOfRange(start) && !isEndOfRange(finish))))\n-                {\n-                    // A slice of supercolumns\n-                    return new SCFilter(null, new SliceQueryFilter(CellNames.simpleDense(scName(start)),\n-                                                                   CellNames.simpleDense(scName(finish)),\n-                                                                   reversed,\n-                                                                   filter.count));\n-                }\n-            }\n-            else if (filter.compositesToGroup == 0 && type.subtype(0).compare(scName(start), scName(finish)) == 0)\n-            {\n-                // A slice of subcolumns\n-         ",
    "Add a deleteArchiveDirectory to the archiver context .": "diff --git a/aeron-archive/src/main/java/io/aeron/archive/Archiver.java b/aeron-archive/src/main/java/io/aeron/archive/Archiver.java\nindex 5ce84a312..4142147ae 100644\n--- a/aeron-archive/src/main/java/io/aeron/archive/Archiver.java\n+++ b/aeron-archive/src/main/java/io/aeron/archive/Archiver.java\n@@ -19,6 +19,7 @@ import io.aeron.Aeron;\n import io.aeron.archive.client.AeronArchive;\n import org.agrona.CloseHelper;\n import org.agrona.ErrorHandler;\n+import org.agrona.IoUtil;\n import org.agrona.LangUtil;\n import org.agrona.collections.IntArrayList;\n import org.agrona.concurrent.*;\n@@ -746,6 +747,17 @@ public final class Archiver implements AutoCloseable\n             return presetRecordingFileName;\n         }\n \n+        /**\n+         * Delete the archive directory if the {@link #archiveDir()} value is not null.\n+         */\n+        public void deleteArchiveDirectory()\n+        {\n+            if (null != archiveDir)\n+            {\n+                IoUtil.delete(archiveDir, false);\n+            }\n+        }\n+\n         List<String> presetRecordingChannels()\n         {\n             return presetRecordingChannels;\ndiff --git a/aeron-archive/src/test/java/io/aeron/archive/ArchiverSystemTest.java b/aeron-archive/src/test/java/io/aeron/archive/ArchiverSystemTest.java\nindex 26298c8e2..d8a76db3f 100644\n--- a/aeron-archive/src/test/java/io/aeron/archive/ArchiverSystemTest.java\n+++ b/aeron-archive/src/test/java/io/aeron/archive/ArchiverSystemTest.java\n@@ -147,11 +147,7 @@ public class ArchiverSystemTest\n         CloseHelper.close(archiver);\n         CloseHelper.close(driver);\n \n-        if (null != archiver.context().archiveDir())\n-        {\n-            IoUtil.delete(archiver.context().archiveDir(), false);\n-        }\n-\n+        archiver.context().deleteArchiveDirectory();\n         driver.context().deleteAeronDirectory();\n     }\n \ndiff --git a/aeron-archive/src/test/java/io/aeron/archive/workloads/ArchiveRecordingLoadTest.java b/aeron-archive/src/test/java/io/aeron/archive/workloads/ArchiveRecordingLoadTest.java\nindex 82307daad..c51db6b2e 100644\n--- a/aeron-archive/src/test/java/io/aeron/archive/workloads/ArchiveRecordingLoadTest.java\n+++ b/aeron-archive/src/test/java/io/aeron/archive/workloads/ArchiveRecordingLoadTest.java\n@@ -32,7 +32,6 @@ import io.aeron.logbuffer.LogBufferDescriptor;\n import io.aeron.protocol.DataHeaderFlyweight;\n import org.agrona.BufferUtil;\n import org.agrona.CloseHelper;\n-import org.agrona.IoUtil;\n import org.agrona.concurrent.UnsafeBuffer;\n import org.junit.*;\n import org.junit.rules.TestWatcher;\n@@ -118,11 +117,7 @@ public class ArchiveRecordingLoadTest\n         CloseHelper.quietClose(archiver);\n         CloseHelper.quietClose(driver);\n \n-        if (null != archiver.context().archiveDir())\n-        {\n-            IoUtil.delete(archiver.context().archiveDir(), false);\n-        }\n-\n+        archiver.context().deleteArchiveDirectory();\n         driver.context().deleteAeronDirectory();\n     }\n \ndiff --git a/aeron-archive/src/test/java/io/aeron/archive/workloads/ArchiveReplayLoadTest.java b/aeron-archive/src/test/java/io/aeron/archive/workloads/ArchiveReplayLoadTest.java\nindex ab3dbc6c5..f10afb454 100644\n--- a/aeron-archive/src/test/java/io/aeron/archive/workloads/ArchiveReplayLoadTest.java\n+++ b/aeron-archive/src/test/java/io/aeron/archive/workloads/ArchiveReplayLoadTest.java\n@@ -35,7 +35,6 @@ import io.aeron.protocol.DataHeaderFlyweight;\n import org.agrona.BufferUtil;\n import org.agrona.CloseHelper;\n import org.agrona.DirectBuffer;\n-import org.agrona.IoUtil;\n import org.agrona.concurrent.UnsafeBuffer;\n import org.junit.*;\n import org.junit.rules.TestWatcher;\n@@ -126,11 +125,7 @@ public class ArchiveReplayLoadTest\n         CloseHelper.close(archiver);\n         CloseHelper.close(driver);\n \n-        if (null != archiver.context().archiveDir())\n-        {\n-            IoUtil.delete(archiver.context().archiveDir(), false);\n-        }\n-\n+        archiver.context().deleteArchiveDirectory();\n         driver.context().deleteAeronDirectory();\n     }\n ",
    "added test case for classpath suppression file and missing file .": "diff --git a/dependency-check-core/src/test/java/org/owasp/dependencycheck/analyzer/AbstractSuppressionAnalyzerTest.java b/dependency-check-core/src/test/java/org/owasp/dependencycheck/analyzer/AbstractSuppressionAnalyzerTest.java\nindex cfda81250..c82d91e0e 100644\n--- a/dependency-check-core/src/test/java/org/owasp/dependencycheck/analyzer/AbstractSuppressionAnalyzerTest.java\n+++ b/dependency-check-core/src/test/java/org/owasp/dependencycheck/analyzer/AbstractSuppressionAnalyzerTest.java\n@@ -17,39 +17,41 @@\n  */\n package org.owasp.dependencycheck.analyzer;\n \n-import java.net.MalformedURLException;\n-import java.net.URISyntaxException;\n-import java.util.List;\n-import java.util.Set;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNull;\n import org.junit.Before;\n+import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n import org.owasp.dependencycheck.BaseTest;\n import org.owasp.dependencycheck.Engine;\n import org.owasp.dependencycheck.analyzer.exception.AnalysisException;\n import org.owasp.dependencycheck.dependency.Dependency;\n+import org.owasp.dependencycheck.suppression.SuppressionParseException;\n import org.owasp.dependencycheck.suppression.SuppressionRule;\n import org.owasp.dependencycheck.utils.Settings;\n \n+import java.net.MalformedURLException;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+\n /**\n- *\n  * @author Jeremy Long <jeremy.long@owasp.org>\n  */\n public class AbstractSuppressionAnalyzerTest extends BaseTest {\n \n+    @Rule\n+    public ExpectedException exception = ExpectedException.none();\n+\n+    private AbstractSuppressionAnalyzer instance;\n+\n     @Before\n-    public void setUp() throws Exception {\n-        try {\n-            final String uri = this.getClass().getClassLoader().getResource(\"suppressions.xml\").toURI().toURL().toString();\n-            Settings.setString(Settings.KEYS.SUPPRESSION_FILE, uri);\n-        } catch (URISyntaxException ex) {\n-            Logger.getLogger(AbstractSuppressionAnalyzerTest.class.getName()).log(Level.SEVERE, null, ex);\n-        } catch (MalformedURLException ex) {\n-            Logger.getLogger(AbstractSuppressionAnalyzerTest.class.getName()).log(Level.SEVERE, null, ex);\n-        }\n+    public void createObjectUnderTest() throws Exception {\n+        instance = new AbstractSuppressionAnalyzerImpl();\n     }\n \n     /**\n@@ -57,32 +59,52 @@ public class AbstractSuppressionAnalyzerTest extends BaseTest {\n      */\n     @Test\n     public void testGetSupportedExtensions() {\n-        AbstractSuppressionAnalyzer instance = new AbstractSuppressionAnalyzerImpl();\n         Set<String> result = instance.getSupportedExtensions();\n         assertNull(result);\n     }\n \n     /**\n-     * Test of initialize method, of class AbstractSuppressionAnalyzer.\n+     * Test of getRules method, of class AbstractSuppressionAnalyzer for suppression file declared as URL.\n      */\n     @Test\n-    public void testInitialize() throws Exception {\n-        AbstractSuppressionAnalyzer instance = new AbstractSuppressionAnalyzerImpl();\n+    public void testGetRulesFromSuppressionFileFromURL() throws Exception {\n+        setSupressionFileFromURL();\n         instance.initialize();\n+        int expCount = 5;\n+        List<SuppressionRule> result = instance.getRules();\n+        assertEquals(expCount, result.size());\n     }\n \n     /**\n-     * Test of getRules method, of class AbstractSuppressionAnalyzer.\n+     * Test of getRules method, of class AbstractSuppressionAnalyzer for suppression file declared as URL.\n      */\n     @Test\n-    public void testGetRules() throws Exception {\n-        AbstractSuppressionAnalyzer instance = new AbstractSuppressionAnalyzerImpl();\n+    public void testGetRulesFromSuppressionFileInClasspath() throws Exception {\n+        Settings.setString(Settings.KEYS.SUPPRESSION_FILE, \"suppressions.xml\");\n         instance.initialize();\n         int expCount = 5;\n         List<SuppressionRule> result = instance.getRules();\n         assertEquals(expCount, result.size());\n     }\n \n+    @Test\n+    public void testFailureToLocateSuppressionFileInClasspath() throws Exception {\n+        Settings.setString(Settings.KEYS.SUPPRESSION_FILE, \"doesnotexist.xml\");\n+        exception.expect(SuppressionParseException.class);\n+        instance.initialize();\n+    }\n+\n+    private void setSupressionFileFromURL() throws Exception {\n+        try {\n+            final String uri = this.getClass().getClassLoader().getResource(\"suppressions.xml\").toURI().toURL().toString();\n+            Settings.setString(Settings.KEYS.SUPPRESSION_FILE, uri);\n+        } catch (URISyntaxException ex) {\n+            Logger.getLogger(AbstractSuppressionAnalyzerTest.class.getName()).log(Level.SEVERE, null, ex);\n+        } catch (MalformedURLException ex) {\n+            Logger.getLogger(AbstractSuppressionAnalyzerTest.class.getName()).log(Level.SEVERE, null, ex);\n+        }\n+    }\n+\n     public class AbstractSuppressionAnalyzerImpl extends AbstractSuppressionAnalyzer {\n \n         @Override",
    "Duplicate condition in \\' if \\' statement inspection ( <issue_id> )": "diff --git a/dubbo-rpc/dubbo-rpc-grpc/src/main/java/org/apache/dubbo/rpc/protocol/grpc/GrpcInvoker.java b/dubbo-rpc/dubbo-rpc-grpc/src/main/java/org/apache/dubbo/rpc/protocol/grpc/GrpcInvoker.java\nindex c7e074909..4ca6fb796 100644\n--- a/dubbo-rpc/dubbo-rpc-grpc/src/main/java/org/apache/dubbo/rpc/protocol/grpc/GrpcInvoker.java\n+++ b/dubbo-rpc/dubbo-rpc-grpc/src/main/java/org/apache/dubbo/rpc/protocol/grpc/GrpcInvoker.java\n@@ -111,8 +111,6 @@ public class GrpcInvoker<T> extends AbstractInvoker<T> {\n             Status status = statusException.getStatus();\n             if (status.getCode() == Status.Code.DEADLINE_EXCEEDED) {\n                 return RpcException.TIMEOUT_EXCEPTION;\n-            } else if (status.getCode() == Status.Code.DEADLINE_EXCEEDED) {\n-                //\n             }\n         }\n         return RpcException.UNKNOWN_EXCEPTION;",
    "freshen unit tests": "diff --git a/tool/test/org/antlr/v4/test/rt/csharp/TestParserErrors.java b/tool/test/org/antlr/v4/test/rt/csharp/TestParserErrors.java\nindex 6898f0e58..f05ad1a72 100644\n--- a/tool/test/org/antlr/v4/test/rt/csharp/TestParserErrors.java\n+++ b/tool/test/org/antlr/v4/test/rt/csharp/TestParserErrors.java\n@@ -39,7 +39,7 @@ public class TestParserErrors extends BaseTest {\n \tpublic void testSingleTokenDeletionConsumption() throws Exception {\n \t\tString grammar = \"grammar T;\\n\" +\n \t                  \"myset: ('b'|'c') ;\\n\" +\n-\t                  \"a: 'a' myset 'd' {Console.WriteLine($myset.stop);} ;\";\n+\t                  \"a: 'a' myset 'd' {Console.WriteLine(\\\"\\\" + $myset.stop);} ; \";\n \t\tString found = execParser(\"T.g4\", grammar, \"TParser\", \"TLexer\", \"a\", \"aabd\", false);\n \t\tassertEquals(\"[@2,2:2='b',<1>,1:2]\\n\", found);\n \t\tassertEquals(\"line 1:1 extraneous input 'a' expecting {'b', 'c'}\\n\", this.stderrDuringParse);\n@@ -80,7 +80,7 @@ public class TestParserErrors extends BaseTest {\n \tpublic void testSingleSetInsertionConsumption() throws Exception {\n \t\tString grammar = \"grammar T;\\n\" +\n \t                  \"myset: ('b'|'c') ;\\n\" +\n-\t                  \"a: 'a' myset 'd' {Console.WriteLine($myset.stop);} ;\";\n+\t                  \"a: 'a' myset 'd' {Console.WriteLine(\\\"\\\" + $myset.stop);} ; \";\n \t\tString found = execParser(\"T.g4\", grammar, \"TParser\", \"TLexer\", \"a\", \"ad\", false);\n \t\tassertEquals(\"[@0,0:0='a',<3>,1:0]\\n\", found);\n \t\tassertEquals(\"line 1:1 missing {'b', 'c'} at 'd'\\n\", this.stderrDuringParse);",
    "Add info about why we removed test fw docs ( <issue_id> ) ( <issue_id> ) .": "diff --git a/docs/reference/redirects.asciidoc b/docs/reference/redirects.asciidoc\nindex ef578170e4a..748b1df0875 100644\n--- a/docs/reference/redirects.asciidoc\n+++ b/docs/reference/redirects.asciidoc\n@@ -632,32 +632,67 @@ See <<cat-transforms>>.\n [role=\"exclude\",id=\"testing\"]\n === Testing\n \n-This page was deleted.\n+This page was deleted. \n+Information about the Java testing framework was removed \n+({es-issue}55257[#55257]) from the {es} Reference \n+because it was out of date and erroneously implied that it should be used by application developers.  \n+There is an issue ({es-issue}55258[#55258]) \n+for providing general testing guidance for applications that communicate with {es}. \n \n [role=\"exclude\",id=\"testing-framework\"]\n === Java testing framework\n \n This page was deleted.\n+Information about the Java testing framework was removed \n+({es-issue}55257[55257]) from the {es} Reference \n+because it was out of date and erroneously implied that it should be used by application developers.  \n+There is an issue ({es-issue}[#55258]) \n+for providing general testing guidance for applications that communicate with {es}. \n+\n \n [role=\"exclude\",id=\"why-randomized-testing\"]\n === Why randomized testing?\n \n This page was deleted.\n+Information about the Java testing framework was removed \n+({es-issue}55257[55257]) from the {es} Reference \n+because it was out of date and erroneously implied that it should be used by application developers.  \n+There is an issue ({es-issue}[#55258]) \n+for providing general testing guidance for applications that communicate with {es}. \n+\n \n [role=\"exclude\",id=\"using-elasticsearch-test-classes\"]\n === Using the {es} test classes\n \n This page was deleted.\n+Information about the Java testing framework was removed \n+({es-issue}55257[55257]) from the {es} Reference \n+because it was out of date and erroneously implied that it should be used by application developers.  \n+There is an issue ({es-issue}55258[#55258]) \n+for providing general testing guidance for applications that communicate with {es}. \n+\n \n [role=\"exclude\",id=\"unit-tests\"]\n === Unit tests\n \n This page was deleted.\n+Information about the Java testing framework was removed \n+({es-issue}55257[55257]) from the {es} Reference \n+because it was out of date and erroneously implied that it should be used by application developers.  \n+There is an issue ({es-issue}55258[#55258]) \n+for providing general testing guidance for applications that communicate with {es}. \n+\n \n [role=\"exclude\",id=\"integration-tests\"]\n === Integration tests\n \n This page was deleted.\n+Information about the Java testing framework was removed \n+({es-issue}55257[55257]) from the {es} Reference \n+because it was out of date and erroneously implied that it should be used by application developers.  \n+There is an issue ({es-issue}55258[#55258]) \n+for providing general testing guidance for applications that communicate with {es}. \n+\n \n [role=\"exclude\",id=\"number-of-shards\"]\n ==== Number of shards",
    "Create concurrent cache with flexible eviction policies .": "diff --git a/core/src/main/java/org/elasticsearch/common/cache/Cache.java b/core/src/main/java/org/elasticsearch/common/cache/Cache.java\nnew file mode 100644\nindex 00000000000..f0f72428989\n--- /dev/null\n+++ b/core/src/main/java/org/elasticsearch/common/cache/Cache.java\n@@ -0,0 +1,642 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.common.cache;\n+\n+import org.elasticsearch.common.collect.Tuple;\n+\n+import java.util.*;\n+import java.util.concurrent.atomic.LongAdder;\n+import java.util.concurrent.locks.ReadWriteLock;\n+import java.util.concurrent.locks.ReentrantLock;\n+import java.util.concurrent.locks.ReentrantReadWriteLock;\n+import java.util.function.Function;\n+import java.util.function.ToLongBiFunction;\n+\n+/**\n+ * A simple concurrent cache.\n+ *<p>\n+ * Cache is a simple concurrent cache that supports time-based and weight-based evictions, with notifications for all\n+ * evictions. The design goals for this cache were simplicity and read performance. This means that we are willing to\n+ * accept reduced write performance in exchange for easy-to-understand code. Cache statistics for hits, misses and\n+ * evictions are exposed.\n+ *<p>\n+ * The design of the cache is relatively simple. The cache is segmented into 256 segments which are backed by HashMaps.\n+ * The segments are protected by a re-entrant read/write lock. The read/write locks permit multiple concurrent readers\n+ * without contention, and the segments gives us write throughput without impacting readers (so readers are blocked only\n+ * if they are reading a segment that a writer is writing to).\n+ * <p>\n+ * The LRU functionality is backed by a single doubly-linked list chaining the entries in order of insertion. This\n+ * LRU list is protected by a lock that serializes all writes to it. There are opportunities for improvements\n+ * here if write throughput is a concern.\n+ * <ol>\n+ *     <li>LRU list mutations could be inserted into a blocking queue that a single thread is reading from\n+ *     and applying to the LRU list.</li>\n+ *     <li>Promotions could be deferred for entries that were \"recently\" promoted.</li>\n+ *     <li>Locks on the list could be taken per node being modified instead of globally.</li>\n+ * </ol>\n+ *\n+ * Evictions only occur after a mutation to the cache (meaning an entry promotion, a cache insertion, or a manual\n+ * invalidation) or an explicit call to {@link #refresh()}.\n+ *\n+ * @param <K> The type of the keys\n+ * @param <V> The type of the values\n+ */\n+public class Cache<K, V> {\n+    // positive if entries have an expiration\n+    private long expireAfter = -1;\n+\n+    // the number of entries in the cache\n+    private int count = 0;\n+\n+    // the weight of the entries in the cache\n+    private long weight = 0;\n+\n+    // the maximum weight that this cache supports\n+    private long maximumWeight = -1;\n+\n+    // the weigher of entries\n+    private ToLongBiFunction<K, V> weigher = (k, v) -> 1;\n+\n+    // the removal callback\n+    private RemovalListener<K, V> removalListener = notification -> {\n+    };\n+\n+    // use CacheBuilder to construct\n+    Cache() {\n+    }\n+\n+    void setExpireAfter(long expireAfter) {\n+        if (expireAfter <= 0) {\n+            throw new IllegalArgumentException(\"expireAfter <= 0\");\n+        }\n+        this.expireAfter = expireAfter;\n+    }\n+\n+    void setMaximumWeight(long maximumWeight) {\n+        if (maximumWeight < 0) {\n+            throw new IllegalArgumentException(\"maximumWeight < 0\");\n+        }\n+        this.maximumWeight = maximumWeight;\n+    }\n+\n+    void setWeigher(ToLongBiFunction<K, V> weigher) {\n+        Objects.requireNonNull(weigher);\n+        this.weigher = weigher;\n+    }\n+\n+    void setRemovalListener(RemovalListener<K, V> removalListener) {\n+        this.removalListener = removalListener;\n+    }\n+\n+    /**\n+     * The relative time used to track time-based evictions.\n+     *\n+     * @return the current relative time\n+     */\n+    protected long now() {\n+        // System.nanoTime takes non-negligible time, so we only use it if we need it\n+        return expireAfter == -1 ? 0 : System.nanoTime();\n+    }\n+\n+    // the state of an entry in the LRU list\n+    enum State {NEW, EXISTING, DELETED}\n+\n+    static class Entry<K, V> {\n+        final K key;\n+        final V value;\n+        long accessTime;\n+        Entry<K, V> before;\n+        Entry<K, V> after;\n+        State state = State.NEW;\n+\n+        public Entry(K key, V value, long accessTime) {\n+            this.key = key;\n+            this.value = value;\n+            this.accessTime = accessTime;\n+        }\n+\n+        @Override\n+        public boolean equals(Object obj) {\n+            if (obj == null) {\n+                return false;\n+            } else if (!(obj instanceof Entry)) {\n+                return false;\n+            } else {\n+                @SuppressWarnings(\"unchecked\")\n+                Entry<K, V> e = (Entry<K, V>) obj;\n+                return Objects.equals(key, e.key);\n+            }\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return Objects.hashCode(key);\n+        }\n+    }\n+\n+    /**\n+     * A cache segment.\n+     *\n+     * A CacheSegment is backed by a HashMap and is protected by a read/write lock.\n+     *\n+     * @param <K> the type of the keys\n+     * @param <V> the type of the values\n+     */\n+    private static class CacheSegment<K, V> {\n+        // read/write lock protecting mutations to the segment\n+        ReadWriteLock lock = new ReentrantReadWriteLock();\n+        Map<K, Entry<K, V>> map = new HashMap<>();\n+        SegmentStats segmentStats = new SegmentStats();\n+\n+        /**\n+         * get an entry from the segment\n+         *\n+         * @param key the key of the entry to get from the cache\n+         * @param now the access time of this entry\n+         * @return the entry if there was one, otherwise null\n+         */\n+        Entry<K, V> get(K key, long now) {\n+            lock.readLock().lock();\n+            Entry<K, V> entry = map.get(key);\n+            lock.readLock().unlock();\n+            if (entry != null) {\n+                segmentStats.hit();\n+                entry.accessTime = now;\n+            } else {\n+                segmentStats.miss();\n+            }\n+            return entry;\n+        }\n+\n+        /**\n+         * put an entry into the segment\n+         *\n+         * @param key the key of the entry to add to the cache\n+         * @param value the value of the entry to add to the cache\n+         * @param now the access time of this entry\n+         * @param onlyIfAbsent whether or not an existing entry should be replaced\n+         * @return a tuple of the new entry and the existing entry, if there was one otherwise null\n+         */\n+        Tuple<Entry<K, V>, Entry<K, V>> put(K key, V value, long now, boolean onlyIfAbsent) {\n+            Entry<K, V> entry = new Entry<>(key, value, now);\n+            lock.writeLock().lock();\n+            Entry<K, V> existing = null;\n+            if (!onlyIfAbsent || (onlyIfAbsent && map.get(key) == null)) {\n+                existing = map.put(key, entry);\n+            }\n+            lock.writeLock().unlock();\n+            return Tuple.tuple(entry, existing);\n+        }\n+\n+        /**\n+         * remove an entry from the segment\n+         *\n+         * @param key the key of the entry to remove from the cache\n+         * @return the removed entry if there was one, otherwise null\n+         */\n+        Entry<K, V> remove(K key) {\n+            lock.writeLock().lock();\n+            Entry<K, V> entry = map.remove(key);\n+            lock.writeLock().unlock();\n+            if (entry != null) {\n+                segmentStats.eviction();\n+            }\n+            return entry;\n+        }\n+\n+        private static class SegmentStats {\n+            private final LongAdder hits = new LongAdder();\n+            private final LongAdder misses = new LongAdder();\n+            private final LongAdder evictions = new LongAdder();\n+\n+            void hit() {\n+                hits.increment();\n+            }\n+\n+            void miss() {\n+                misses.increment();\n+            }\n+\n+            void eviction() {\n+                evictions.increment();\n+            }\n+        }\n+    }\n+\n+    private CacheSegment<K, V>[] segments = new CacheSegment[256];\n+\n+    {\n+        for (int i = 0; i < segments.length; i++) {\n+            segments[i] = new CacheSegment<>();\n+        }\n+    }\n+\n+    Entry<K, V> head;\n+    Entry<K, V> tail;\n+\n+    // lock protecting mutations to the LRU list\n+    private ReentrantLock lock = new ReentrantLock();\n+\n+    /**\n+     * Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.\n+     *\n+     * @param key the key whose associated value is to be returned\n+     * @return the value to which the specified key is mapped, or null if this map contains no mapping for the key\n+     */\n+    public V get(K key) {\n+        long now = now();\n+        CacheSegment<K, V> segment = getCacheSegment(key);\n+        Entry<K, V> entry = segment.get(key, now);\n+        if (entry == null || isExpired(entry, now)) {\n+            return null;\n+        } else {\n+            promote(entry, now);\n+            return entry.value;\n+        }\n+    }\n+\n+    /**\n+     * If the specified key is not already associated with a value (or is mapped to null), attempts to compute its\n+     * value using the given mapping function and enters it into this map unless null.\n+     *\n+     * @param key the key whose associated value is to be returned or computed for if non-existant\n+     * @param mappingFunction the function to compute a value given a key\n+     * @return the current (existing or computed) value associated with the specified key, or null if the computed\n+     * value is null\n+     */\n+    public V computeIfAbsent(K key, Function<K, V> mappingFunction) {\n+        long now = now();\n+        V value = get(key);\n+        if (value == null) {\n+            value = mappingFunction.apply(key);\n+            if (value != null) {\n+                put(key, value, now, true);\n+            }\n+        }\n+        return value;\n+    }\n+\n+    /**\n+     * Associates the specified value with the specified key in this map. If the map previously contained a mapping for\n+     * the key, the old value is replaced.\n+     *\n+     * @param key key with which the specified value is to be associated\n+     * @param value value to be associated with the specified key\n+     */\n+    public void put(K key, V value) {\n+        long now = now();\n+        put(key, value, now, false);\n+    }\n+\n+    private void put(K key, V value, long now, boolean onlyIfAbsent) {\n+        CacheSegment<K, V> segment = getCacheSegment(key);\n+        Tuple<Entry<K, V>, Entry<K, V>> tuple = segment.put(key, value, now, onlyIfAbsent);\n+        lock.lock();\n+        boolean replaced = false;\n+        if (tuple.v2() != null && tuple.v2().state == State.EXISTING) {\n+            if (unlink(tuple.v2())) {\n+                replaced = true;\n+            }\n+        }\n+        promote(tuple.v1(), now);\n+        lock.unlock();\n+        if (replaced) {\n+            removalListener.onRemoval(new RemovalNotification(tuple.v2().key, tuple.v2().value, RemovalNotification.RemovalReason.REPLACED));\n+        }\n+    }\n+\n+    /**\n+     * Invalidate the association for the specified key. A removal notification will be issued for invalidated\n+     * entries with {@link org.elasticsearch.common.cache.RemovalNotification.RemovalReason} INVALIDATED.\n+     *\n+     * @param key the key whose mapping is to be invalidated from the cache\n+     */\n+    public void invalidate(K key) {\n+        CacheSegment<K, V> segment = getCacheSegment(key);\n+        Entry<K, V> entry = segment.remove(key);\n+        if (entry != null) {\n+            lock.lock();\n+            delete(entry, RemovalNotification.RemovalReason.INVALIDATED);\n+            lock.unlock();\n+        }\n+    }\n+\n+    /**\n+     * Invalidate all cache entries. A removal notification will be issued for invalidated entries with\n+     * {@link org.elasticsearch.common.cache.RemovalNotification.RemovalReason} INVALIDATED.\n+     */\n+    public void invalidateAll() {\n+        Entry<K, V> h = head;\n+        Arrays.stream(segments).forEach(segment -> segment.lock.writeLock().lock());\n+        lock.lock();\n+        Arrays.stream(segments).forEach(segment -> segment.map = new HashMap<>());\n+        Entry<K, V> current = head;\n+        while (current != null) {\n+            current.state = State.DELETED;\n+            current = current.after;\n+        }\n+        head = tail = null;\n+        count = 0;\n+        weight = 0;\n+        lock.unlock();\n+        Arrays.stream(segments).forEach(segment -> segment.lock.writeLock().unlock());\n+        while (h != null) {\n+            removalListener.onRemoval(new RemovalNotification<>(h.key, h.value, RemovalNotification.RemovalReason.INVALIDATED));\n+            h = h.after;\n+        }\n+    }\n+\n+    /**\n+     * Force any outstanding size-based and time-based evictions to occur\n+     */\n+    public void refresh() {\n+        long now = now();\n+        lock.lock();\n+        evict(now);\n+        lock.unlock();\n+    }\n+\n+    /**\n+     * The number of entries in the cache.\n+     *\n+     * @return the number of entries in the cache\n+     */\n+    public int count() {\n+        return count;\n+    }\n+\n+    /**\n+     * The weight of the entries in the cache.\n+     *\n+     * @return the weight of the entries in the cache\n+     */\n+    public long weight() {\n+        return weight;\n+    }\n+\n+    /**\n+     * An LRU sequencing of the keys in the cache that supports removal.\n+     *\n+     * @return an LRU-ordered {@link Iterable} over the keys in the cache\n+     */\n+    public Iterable<K> keys() {\n+        return () -> new Iterator<K>() {\n+            private CacheIterator iterator = new CacheIterator(head);\n+\n+            @Override\n+            public boolean hasNext() {\n+                return iterator.hasNext();\n+            }\n+\n+            @Override\n+            public K next() {\n+                return iterator.next().key;\n+            }\n+\n+            @Override\n+            public void remove() {\n+                iterator.remove();\n+            }\n+        };\n+    }\n+\n+    /**\n+     * An LRU sequencing of the values in the cache.\n+     *\n+     * @return an LRU-ordered {@link Iterable} over the values in the cache\n+     */\n+    public Iterable<V> values() {\n+        return () -> new Iterator<V>() {\n+            private CacheIterator iterator = new CacheIterator(head);\n+\n+            @Override\n+            public boolean hasNext() {\n+                return iterator.hasNext();\n+            }\n+\n+            @Override\n+            public V next() {\n+                return iterator.next().value;\n+            }\n+        };\n+    }\n+\n+    private class CacheIterator implements Iterator<Entry<K, V>> {\n+        private Entry<K, V> current;\n+        private Entry<K, V> next;\n+\n+        CacheIterator(Entry<K, V> head) {\n+            current = null;\n+            next = head;\n+        }\n+\n+        @Override\n+        public boolean hasNext() {\n+            return next != null;\n+        }\n+\n+        @Override\n+        public Entry<K, V> next() {\n+            current = next;\n+            next = next.after;\n+            return current;\n+        }\n+\n+        @Override\n+        public void remove() {\n+            Entry<K, V> entry = current;\n+            if (entry != null) {\n+                CacheSegment<K, V> segment = getCacheSegment(entry.key);\n+                segment.remove(entry.key);\n+     ",
    "fixed broken lins": "diff --git a/examples/image_classifier/README.md b/examples/image_classifier/README.md\nindex 22ea3553..cf3b2547 100644\n--- a/examples/image_classifier/README.md\n+++ b/examples/image_classifier/README.md\n@@ -2,15 +2,15 @@\n \n * TorchVision Image Classification Models : Download a pre-trained model state_dict for computer vision model that classifies images from the following :\n \n-  * [Image Classification with AlexNet](image_classifier/alexnet) - https://download.pytorch.org/models/alexnet-owt-4df8aa71.pth\n-  * [Image Classification with DenseNet161](image_classifier/densenet_161) - https://download.pytorch.org/models/densenet161-8d451a50.pth\n-  * [Image Classification with ResNet18](image_classifier/resnet_18) - https://download.pytorch.org/models/resnet18-5c106cde.pth\n-  * [Image Classification with SqueezeNet 1_1](image_classifier/squeezenet) - https://download.pytorch.org/models/squeezenet1_1-f364aa15.pth\n-  * [Image Classification with VGG11](image_classifier/vgg_11) - https://download.pytorch.org/models/vgg11-bbd30ac9.pth\n+  * [Image Classification with AlexNet](alexnet) - https://download.pytorch.org/models/alexnet-owt-4df8aa71.pth\n+  * [Image Classification with DenseNet161](densenet_161) - https://download.pytorch.org/models/densenet161-8d451a50.pth\n+  * [Image Classification with ResNet18](resnet_18) - https://download.pytorch.org/models/resnet18-5c106cde.pth\n+  * [Image Classification with SqueezeNet 1_1](squeezenet) - https://download.pytorch.org/models/squeezenet1_1-f364aa15.pth\n+  * [Image Classification with VGG11](vgg_11) - https://download.pytorch.org/models/vgg11-bbd30ac9.pth\n \n * Create a model architecture file (model-file) based on selected model or use the sample provided with above examples.\n \n-* You can use the [index_to_name.json](image_classifier/index_to_name.json) file for mapping predicted index to class or use a custom one.\n+* You can use the [index_to_name.json](index_to_name.json) file for mapping predicted index to class or use a custom one.\n \n * Create a torch model archive file using the above provided syntax command.\n ",
    "Add More Logs to diagnose Dali Pig Ramp by HadoopPigJob ( <issue_id> ) .": "diff --git a/az-core/src/main/java/azkaban/utils/TimeUtils.java b/az-core/src/main/java/azkaban/utils/TimeUtils.java\nindex 43522fa9..a991b783 100644\n--- a/az-core/src/main/java/azkaban/utils/TimeUtils.java\n+++ b/az-core/src/main/java/azkaban/utils/TimeUtils.java\n@@ -37,6 +37,7 @@ public class TimeUtils {\n \n   private static final String DATE_TIME_ZONE_PATTERN = \"yyyy/MM/dd HH:mm:ss z\";\n   private static final String DATE_TIME_PATTERN = \"yyyy-MM-dd HH:mm:ss\";\n+  private static int ONE_DAY = 86400;\n \n   /**\n    * Formats the given millisecond instant into a string using the pattern \"yyyy/MM/dd HH:mm:ss z\"\n@@ -236,4 +237,13 @@ public class TimeUtils {\n   public static boolean timeEscapedOver(long referenceTime, int second) {\n     return ((System.currentTimeMillis() - referenceTime) / 1000F) > (second * 1.0);\n   }\n+\n+  /**\n+   * Check how many days escaped over\n+   * @param referenceTime reference time\n+   * @return number of days\n+   */\n+  public static int daysEscapedOver(long referenceTime) {\n+    return Math.round(((System.currentTimeMillis() - referenceTime) / 1000f) / (ONE_DAY * 1.0f) - 0.5f);\n+  }\n }\ndiff --git a/az-core/src/test/java/azkaban/utils/TimeUtilsTest.java b/az-core/src/test/java/azkaban/utils/TimeUtilsTest.java\nindex 597813cd..8c683cb0 100644\n--- a/az-core/src/test/java/azkaban/utils/TimeUtilsTest.java\n+++ b/az-core/src/test/java/azkaban/utils/TimeUtilsTest.java\n@@ -29,4 +29,14 @@ public class TimeUtilsTest {\n     Assert.assertTrue( TimeUtils.timeEscapedOver(baseTime, 1));\n     Assert.assertFalse(TimeUtils.timeEscapedOver(baseTime, 2));\n   }\n+\n+  @Test\n+  public void testDayEscapedOver() throws InterruptedException {\n+    long baseTime = System.currentTimeMillis();\n+    long oneDayBefore =  baseTime - 86399000;\n+    TimeUnit.SECONDS.sleep(3);\n+    Assert.assertEquals( TimeUtils.daysEscapedOver(baseTime), 0);\n+    Assert.assertEquals(TimeUtils.daysEscapedOver(oneDayBefore), 1);\n+  }\n+\n }\ndiff --git a/az-hadoop-jobtype-plugin/src/main/java/azkaban/jobtype/HadoopPigJob.java b/az-hadoop-jobtype-plugin/src/main/java/azkaban/jobtype/HadoopPigJob.java\nindex 8ab02dcb..7c53b003 100644\n--- a/az-hadoop-jobtype-plugin/src/main/java/azkaban/jobtype/HadoopPigJob.java\n+++ b/az-hadoop-jobtype-plugin/src/main/java/azkaban/jobtype/HadoopPigJob.java\n@@ -170,17 +170,29 @@ public class HadoopPigJob extends AbstractHadoopJavaProcessJob {\n         File srcFile = new File(getScriptAbsolutePath());\n         File dstFile = new File(getRunnableScriptAbsolutePath());\n         Path dstPath = Paths.get(getRunnableScriptDir());\n+        getLog().info(String.format(\"[Ramp Modification Start] [srcFile = %s, dstFile = %s, dstPath = %s]\",\n+            srcFile.toPath().toAbsolutePath().toString(),\n+            dstFile.toPath().toAbsolutePath().toString(),\n+            dstPath.toString()));\n         if (!Files.exists(dstPath)) {\n           Files.createDirectories(dstPath);\n+          getLog().info(String.format(\"[Ramp Modification Destination Directory Created. %s]\",\n+              dstPath.toAbsolutePath().toString()));\n         }\n         dstFile.createNewFile();\n+        getLog().info(String.format(\"[Ramp Modification Destination File Created. %s]\",\n+            dstFile.toPath().toAbsolutePath().toString()));\n         getLog().info(String.format(\"[Ramp Modify Script File] : old = %s, new = %s\",\n             srcFile.getAbsolutePath(), dstFile.getAbsolutePath()));\n         copyAndModifyScript(srcFile, dstFile, rampRegisterItems);\n+        getLog().info(String.format(\"[Ramp Modification End] [dstFile = %s]\",\n+            dstFile.toPath().toAbsolutePath().toString()));\n+        list.add(getRunnableScript());\n       } catch (IOException e) {\n-        e.printStackTrace();\n+        getLog().error(e);\n+        getLog().info(\"[Ramp cannot successfully modify the script, Failover to the baseline.]\");\n+        list.add(getScript());\n       }\n-      list.add(getRunnableScript());\n     }\n \n     return StringUtils.join((Collection<String>) list, \" \");\ndiff --git a/azkaban-common/src/main/java/azkaban/executor/ExecutableRamp.java b/azkaban-common/src/main/java/azkaban/executor/ExecutableRamp.java\nindex ff290835..4b077191 100644\n--- a/azkaban-common/src/main/java/azkaban/executor/ExecutableRamp.java\n+++ b/azkaban-common/src/main/java/azkaban/executor/ExecutableRamp.java\n@@ -215,7 +215,7 @@ public class ExecutableRamp implements IRefreshable<ExecutableRamp> {\n       this.numOfFailure = source.numOfFailure;\n       this.numOfIgnored = source.numOfFailure;\n \n-      this.isPaused = source.isPaused ? source.isPaused : this.isPaused;\n+      this.isPaused = source.isPaused;\n       this.rampStage = (source.rampStage > this.rampStage) ? source.rampStage : this.rampStage;\n       this.isActive = source.isActive;\n \n@@ -344,7 +344,12 @@ public class ExecutableRamp implements IRefreshable<ExecutableRamp> {\n \n   public boolean isActive() {\n     long diff = this.getState().startTime - System.currentTimeMillis();\n-    return this.getState().isActive && (!this.getState().isPaused) && (diff < 0);\n+    boolean isActive = this.getState().isActive && (!this.getState().isPaused) && (diff < 0);\n+    if (!isActive) {\n+      LOGGER.info(\"[Ramp Is Isolated] (isActive = {}, isPause = {}, timeDiff = {}\",\n+          this.getState().isActive, this.getState().isPaused, diff);\n+    }\n+    return isActive;\n   }\n \n   synchronized public void cacheResult(Action action) {\n@@ -363,13 +368,15 @@ public class ExecutableRamp implements IRefreshable<ExecutableRamp> {\n     this.state.lastUpdatedTime = System.currentTimeMillis();\n \n     // verify the failure threshold\n+    int trails = this.state.numOfTrail + this.state.cachedNumOfTrail;\n+    int fails = this.state.numOfFailure + this.state.cachedNumOfFailure;\n     int failure = this.metadata.isPercentageScaleForMaxFailure\n-        ?\n-        (int) (((this.state.numOfFailure + this.state.cachedNumOfFailure) * 100.0)\n-            / ((this.state.numOfTrail + this.state.cachedNumOfTrail) * 1.0))\n-        : (this.state.numOfFailure + this.state.cachedNumOfFailure);\n+        ? (trails == 0)\n+          ? 100\n+          : (int) ((fails * 100.0) / (trails * 1.0))\n+        : fails;\n \n-    LOGGER.info(String.format(\"Cache Ramp Result : [id = %s, action: %s, %s failure: %d, numOfTrail (%d, %d), numOfSuccess: (%d, %d), numOfFailure: (%d, %d), numOfIgnore: (%d, %d)]\"\n+    LOGGER.info(\"[Ramp Cached Result] (id = {}, action: {}, {} failure: {}, numOfTrail ({}, {}), numOfSuccess: ({}, {}), numOfFailure: ({}, {}), numOfIgnore: ({}, {}))\"\n         , this.id\n         , action.name()\n         , this.metadata.isPercentageScaleForMaxFailure ? \"Percentage\" : \" \"\n@@ -382,14 +389,26 @@ public class ExecutableRamp implements IRefreshable<ExecutableRamp> {\n         , this.state.cachedNumOfFailure\n         , this.state.numOfIgnored\n         , this.state.cachedNumOfIgnored\n-    ));\n-    if (failure > this.metadata.maxFailureToRampDown) {\n-      LOGGER.warn(String.format(\"Failure over the threshold to Ramp Down [id = %s, failure = %d, threshold = %d]\", this.id, failure, this.metadata.maxFailureToRampDown));\n-      if (this.state.rampStage > 0) {\n-        this.state.rampStage--;\n+    );\n+\n+    if (this.metadata.maxFailureToRampDown != 0) {\n+      if (failure > this.metadata.maxFailureToRampDown) {\n+        if (this.state.rampStage > 0) {\n+          int currentStage = this.state.rampStage;\n+          this.state.rampStage--;\n+          int futureStage = this.state.rampStage;\n+          LOGGER.warn(\"[RAMP DOWN] (rampId = {}, failure = {}, threshold = {}, from stage {} to stage {}.)\",\n+              this.getId(), failure, this.metadata.maxFailureToRampDown, currentStage, futureStage);\n+        }\n+      }\n+    }\n+\n+    if (this.metadata.maxFailureToPause != 0) {\n+      if (failure > this.metadata.maxFailureToPause) {\n+        this.state.setPaused(true);\n+        LOGGER.info(\"[RAMP STOP] (rampId = {}, failure = {}, threshold = {}, timestamp = {})\",\n+            this.getId(), failure, this.metadata.maxFailureToPause, System.currentTimeMillis());\n       }\n-    } else if (failure > this.metadata.maxFailureToPause) {\n-      LOGGER.warn(String.format(\"Failure over the threshold to Pause the Ramp [id = %s, failure = %d, threshold = %d]\", this.id, failure, this.metadata.maxFailureToRampDown));\n     }\n \n     this.getState().markChanged();\ndiff --git a/azkaban-common/src/main/java/azkaban/ramppolicy/SimpleAutoRampPolicy.java b/azkaban-common/src/main/java/azkaban/ramppolicy/SimpleAutoRampPolicy.java\nindex f59d7985..13d98991 100644\n--- a/azkaban-common/src/main/java/azkaban/ramppolicy/SimpleAutoRampPolicy.java\n+++ b/azkaban-common/src/main/java/azkaban/ramppolicy/SimpleAutoRampPolicy.java\n@@ -20,6 +20,8 @@ import azkaban.executor.ExecutableRamp;\n import azkaban.utils.Props;\n import azkaban.utils.TimeUtils;\n import com.google.common.collect.ImmutableList;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n \n /**\n@@ -31,11 +33,15 @@ import com.google.common.collect.ImmutableList;\n  *  stage 5: 100%\n  */\n public class SimpleAutoRampPolicy extends SimpleRampPolicy {\n-  private static int ONE_DAY = 86400;\n   private static final int MAX_RAMP_STAGE = 5;\n   private static final ImmutableList<Integer> RAMP_STAGE_RESCALE_TABLE = ImmutableList.<Integer>builder()\n       .add(5, 25, 50, 75)\n       .build();\n+  private static final ImmutableList<Integer> AUTO_RAMP_INTERVAL_TABLE = ImmutableList.<Integer>builder()\n+      .add(1, 2, 3, 4)\n+      .build();\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(SimpleAutoRampPolicy.class);\n \n \n   public SimpleAutoRampPolicy(Props sysProps, Props privateProps) {\n@@ -60,15 +66,34 @@ public class SimpleAutoRampPolicy extends SimpleRampPolicy {\n   }\n \n   @Override\n-  protected void preprocess(ExecutableRamp executableRamp) { // TODO VERIFY AUTO RAMP MECHANISM\n-    if (TimeUtils.timeEscapedOver(executableRamp.getState().getLastUpdatedTime(), ONE_DAY)) {\n-      int rampStage = executableRamp.getState().getRampStage();\n-      if (rampStage <= getMaxRampStage()) {\n-        executableRamp.getState().setRampStage(rampStage + 1);\n-        executableRamp.getState().setLastUpdatedTime(System.currentTimeMillis());\n-      } else {\n-        executableRamp.getState().setEndTime(System.currentTimeMillis());\n+  protected void preprocess(ExecutableRamp executableRamp) {\n+    int escapedDays = TimeUtils.daysEscapedOver(executableRamp.getState().getStartTime());\n+    int rampStage = executableRamp.getState().getRampStage();\n+    int maxStage = getMaxRampStage();\n+\n+    if (rampStage == 0) {\n+      // The ramp is still not stated yet. Auto Ramp should not be triggered.\n+      return;\n+    }\n+\n+    try {\n+      if (escapedDays >= AUTO_RAMP_INTERVAL_TABLE.get(rampStage - 1)) {\n+        if (rampStage < maxStage) {\n+          // Ramp up\n+          int newStage = rampStage + 1;\n+          long timeStamp = System.currentTimeMillis();\n+          executableRamp.getState().setRampStage(newStage);\n+          executableRamp.getState().setLastUpdatedTime(timeStamp);\n+          if (newStage == maxStage) {\n+            executableRamp.getState().setEndTime(timeStamp);\n+          }\n+          LOGGER.info(\"[AUTO RAMP UP] (rampId = {}, current Stage = {}, new Stage = {}, timeStamp = {}\",\n+              executableRamp.getId(), rampStage, newStage, timeStamp);\n+        }\n       }\n+    } catch (Exception e) {\n+      LOGGER.error(\"[AUTO RAMP ERROR] (rampId = {}, ramStage = {}, message = {}\",\n+          executableRamp.getId(), rampStage, e.getMessage());\n     }\n   }\n }\ndiff --git a/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRampManager.java b/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRampManager.java\nindex 14f839f7..d80be8da 100644\n--- a/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRampManager.java\n+++ b/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRampManager.java\n@@ -386,12 +386,20 @@ public class FlowRampManager implements EventListener, ThreadPoolExecutingListen\n       for (ExecutableRamp executableRamp : executableRampMap.getActivatedAll()) {\n         try {\n           String rampId = executableRamp.getId();\n+          LOGGER.info(\"[Ramp Check] (rampId = {}, rampStage = {}, executionId = {}, flowName = {}, RampPercentageId = {})\",\n+              rampId,\n+              executableRamp.getState().getRampStage(),\n+              executableFlow.getExecutionId(),\n+              flowName,\n+              executableFlow.getRampPercentageId()\n+          );\n \n           // get Base Props\n           Props baseProps = new Props();\n           baseProps.putAll(executableRampDependencyMap.getDefaultValues(executableRampItemsMap.getDependencies(rampId)));\n \n           ExecutableRampStatus status = executableRampExceptionalFlowItemsMap.check(rampId, flowName);\n+          LOGGER.info(\"[Ramp Status] (Status = {}, flowName = {})\", status.name(), flowName);\n           switch (status) {\n             case BLACKLISTED: // blacklist\n               executableFlowRampMetadata.setRampProps(\n@@ -402,7 +410,7 @@ public class FlowRampManager implements EventListener, ThreadPoolExecutingListen\n                       ExecutableRampStatus.BLACKLISTED.name()\n                   )\n               );\n-              LOGGER.info(\"Ramp Flow As BlackListed Item. [rampid = {}, flowName = {}]\", rampId, flowName);\n+              LOGGER.info(\"[Ramp BlackListed]. [rampId = {}, flowName = {}]\", rampId, flowName);\n               break;\n \n             case WHITELISTED: // whitelist\n@@ -414,7 +422,7 @@ public class FlowRampManager implements EventListener, ThreadPoolExecutingListen\n                       ExecutableRampStatus.WHITELISTED.name()\n                   )\n               );\n-              LOGGER.info(\"Ramp Flow As WhiteListed Item. [rampid = {}, flowName = {}]\", rampId, flowName);\n+              LOGGER.info(\"[Ramp WhiteListed]. [rampId = {}, flowName = {}]\", rampId, flowName);\n               break;\n \n             case SELECTED: // selected\n@@ -426,7 +434,7 @@ public class FlowRampManager implements EventListener, ThreadPoolExecutingListen\n                       ExecutableRampStatus.SELECTED.name()\n                   )\n               );\n-              LOGGER.info(\"Ramp Flow As Selected Item. [rampid = {}, flowName = {}]\", rampId, flowName);\n+              LOGGER.info(\"[Ramp Selected]. [rampId = {}, flowName = {}]\", rampId, flowName);\n               break;\n \n             case UNSELECTED: // selected\n@@ -438,8 +446,7 @@ public class FlowRampManager implements EventListener, ThreadPoolExecutingListen\n                       ExecutableRampStatus.UNSELECTED.name()\n                   )\n               );\n-              LOGGER.info(\"Ramp Flow As Unselected Item. [rampid = {}, flowName = {}]\",\n-                  rampId, flowName);\n+              LOGGER.info(\"[Ramp Unselected]. [rampId = {}, flowName = {}]\", rampId, flowName);\n               break;\n \n             case EXCLUDED:\n@@ -451,12 +458,18 @@ public class FlowRampManager implements EventListener, ThreadPoolExecutingListen\n                       ExecutableRampStatus.EXCLUDED.name()\n                   )\n               );\n-              LOGGER.info(\"Ramp Flow As Excluded Item. [rampid = {}, flowName = {}]\",\n-                  rampId, flowName);\n+              LOGGER.info(\"[Ramp Excluded]. [rampId = {}, flowName = {}]\", rampId, flowName);\n               break;\n \n             default:\n               RampPolicy rampPolicy = rampPolicyManager.buildRampPolicyExecutor(executableRamp.getPolicy(), globalProps);\n+              LOGGER.info (\"[Ramp Policy Selecting]. [policy = {}, rampId = {}, flowName = {}, executionId = {}, RampPercentageId = {}]\",\n+                  rampPolicy.getClass().getName(),\n+                  rampId,\n+                  flowName,\n+                  executableFlow.getExecutionId(),\n+                  executableFlow.getRampPercentageId()\n+              );\n               if (rampPolicy.check(executableFlow, executableRamp)) {\n                 // Ramp Enabled\n                 executableFlowRampMetadata.setRampProps(\n@@ -467,8 +480,7 @@ public class FlowRampManager implements EventListener, ThreadPoolExecutingListen\n                         ExecutableRampStatus.SELECTED.name()\n                     )\n                 );\n-                LOGGER.info(\"Undetermined Ramp Flow is selected for Ramping. [rampid = {}, flowName = {}]\",\n-                    rampId, flowName);\n+                LOGGER.info(\"[Ramp Policy Selected]. [rampId = {}, flowName = {}]\", rampId, flowName);\n               } else {\n                 executableFlowRampMetadata.setRampProps(\n                     rampId,\n@@ -478,8 +490,7 @@ public class FlowRampManager implements EventListener, ThreadPoolExecutingListen\n                         ExecutableRampStatus.UNSELECTED.name()\n                     )\n                 );\n-                LOGGER.info(\"Undetermined Ramp Flow is not selected for Ramping. [rampid = {}, flowName = {}]\",\n-                    rampId, flowName);\n+                LOGGER.info(\"[Ramp Policy Unselected]. [rampId = {}, flowName = {}]\", rampId, flowName);\n               }\n               break;\n           }\n@@ -522,6 +533,10 @@ public class FlowRampManager implements EventListener, ThreadPoolExecutingListen\n   private void moveFiles(File sourceDir, File destinationDir, String regExpression) {\n     try {\n       FileIOUtils.moveFiles(sourceDir, destinationDir, regExpression);\n+      LOGGER.info(\"Success to move files from {} to {} with REGEXP {}\",\n+          sourceDir.getAbsolutePath(),\n+          destinationDir.getAbsolutePath(),\n+          regExpression);\n     } catch (IOException e) {\n       LOGGER.error(\n           String.format(\"Fail to move files from %s to %s with REGEXP %s\",\n@@ -575,8 +590,12 @@ public class FlowRampManager implements EventListener, ThreadPoolExecutingListen\n             if (!Action.SUCCEEDED.equals(action)) {\n               String rampId = executableRamp.getId();\n               String flowName =  flowRunner.getExecutableFlow().getFlowName();\n-              LOGGER.warn(\"Flow will be excluded from ramping. [rampId = {}, flow = {}, action = {}]\",\n-                  rampId, rampId, action.name());\n+              LOGGER.warn(\"[Ramp Exclude Flow]. [executionId = {}, rampId = {}, flowName = {}, action = {}]\",\n+                  flowRunner.getExecutableFlow().getExecutionId(),\n+                  rampId,\n+                  flowName,\n+                  action.name()\n+              );\n               executableRampExceptionalFlowItemsMap.add(rampId, flowName, ExecutableRampStatus.EXCLUDED,\n                   System.currentTimeMillis(), true);\n             }",
    "Remove extra unneeded linear layout": "diff --git a/github-android/res/layout/issue_view.xml b/github-android/res/layout/issue_view.xml\nindex e9c2d1e5..e7b08361 100644\n--- a/github-android/res/layout/issue_view.xml\n+++ b/github-android/res/layout/issue_view.xml\n@@ -5,66 +5,60 @@\n     android:background=\"@color/item_background\"\n     android:orientation=\"vertical\" >\n \n+    <TextView\n+        android:id=\"@+id/tv_issue_number\"\n+        android:layout_width=\"fill_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:paddingLeft=\"5dp\"\n+        android:paddingTop=\"5dp\"\n+        android:singleLine=\"true\"\n+        android:textAppearance=\"?android:attr/textAppearanceLarge\"\n+        android:textColor=\"@color/item_text_color\" />\n+\n     <LinearLayout\n         android:layout_width=\"fill_parent\"\n         android:layout_height=\"wrap_content\"\n-        android:orientation=\"vertical\" >\n+        android:orientation=\"horizontal\"\n+        android:paddingBottom=\"5dp\"\n+        android:paddingLeft=\"5dp\"\n+        android:paddingTop=\"2dp\" >\n \n-        <TextView\n-            android:id=\"@+id/tv_issue_number\"\n-            android:layout_width=\"fill_parent\"\n-            android:layout_height=\"wrap_content\"\n-            android:paddingLeft=\"5dp\"\n-            android:paddingTop=\"5dp\"\n-            android:singleLine=\"true\"\n-            android:textAppearance=\"?android:attr/textAppearanceLarge\"\n-            android:textColor=\"@color/item_text_color\" />\n+        <ImageView\n+            android:id=\"@+id/iv_gravatar\"\n+            android:layout_width=\"32dp\"\n+            android:layout_height=\"32dp\"\n+            android:layout_gravity=\"center_vertical\"\n+            android:src=\"@drawable/gravatar_icon\" />\n \n         <LinearLayout\n             android:layout_width=\"fill_parent\"\n             android:layout_height=\"wrap_content\"\n-            android:orientation=\"horizontal\"\n-            android:paddingBottom=\"5dp\"\n-            android:paddingLeft=\"5dp\"\n-            android:paddingTop=\"2dp\" >\n-\n-            <ImageView\n-                android:id=\"@+id/iv_gravatar\"\n-                android:layout_width=\"32dp\"\n-                android:layout_height=\"32dp\"\n-                android:layout_gravity=\"center_vertical\"\n-                android:src=\"@drawable/gravatar_icon\" />\n+            android:orientation=\"vertical\"\n+            android:paddingLeft=\"5dp\" >\n \n-            <LinearLayout\n+            <TextView\n+                android:id=\"@+id/tv_issue_title\"\n                 android:layout_width=\"fill_parent\"\n                 android:layout_height=\"wrap_content\"\n-                android:orientation=\"vertical\"\n-                android:paddingLeft=\"5dp\" >\n+                android:textColor=\"@color/item_text_color\"\n+                android:textStyle=\"bold\" />\n \n-                <TextView\n-                    android:id=\"@+id/tv_issue_title\"\n-                    android:layout_width=\"fill_parent\"\n-                    android:layout_height=\"wrap_content\"\n-                    android:textColor=\"@color/item_text_color\"\n-                    android:textStyle=\"bold\" />\n-\n-                <TextView\n-                    android:id=\"@+id/tv_issue_creation\"\n-                    android:layout_width=\"fill_parent\"\n-                    android:layout_height=\"wrap_content\"\n-                    android:paddingTop=\"1dp\"\n-                    android:singleLine=\"true\"\n- ",
    "Determine type for Local Variable using the initializer \\' s expression": "diff --git a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java\nindex fc3c297fcc..6c0009ebac 100644\n--- a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java\n+++ b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java\n@@ -51,6 +51,7 @@ import net.sourceforge.pmd.lang.java.ast.ASTImportDeclaration;\n import net.sourceforge.pmd.lang.java.ast.ASTInclusiveOrExpression;\n import net.sourceforge.pmd.lang.java.ast.ASTInstanceOfExpression;\n import net.sourceforge.pmd.lang.java.ast.ASTLiteral;\n+import net.sourceforge.pmd.lang.java.ast.ASTLocalVariableDeclaration;\n import net.sourceforge.pmd.lang.java.ast.ASTMarkerAnnotation;\n import net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration;\n import net.sourceforge.pmd.lang.java.ast.ASTMultiplicativeExpression;\n@@ -80,6 +81,7 @@ import net.sourceforge.pmd.lang.java.ast.ASTUnaryExpression;\n import net.sourceforge.pmd.lang.java.ast.ASTUnaryExpressionNotPlusMinus;\n import net.sourceforge.pmd.lang.java.ast.ASTVariableDeclarator;\n import net.sourceforge.pmd.lang.java.ast.ASTVariableDeclaratorId;\n+import net.sourceforge.pmd.lang.java.ast.ASTVariableInitializer;\n import net.sourceforge.pmd.lang.java.ast.ASTWildcardBounds;\n import net.sourceforge.pmd.lang.java.ast.AbstractJavaTypeNode;\n import net.sourceforge.pmd.lang.java.ast.JavaNode;\n@@ -624,6 +626,22 @@ public class ClassTypeResolver extends JavaParserVisitorAdapter {\n         return data;\n     }\n \n+    @Override\n+    public Object visit(ASTLocalVariableDeclaration node, Object data) {\n+        super.visit(node, data);\n+        // resolve \"var\" types: Upward projection of the type of the initializer expression\n+        ASTType type = node.getFirstChildOfType(ASTType.class);\n+        if (type.isVarType()) {\n+            ASTVariableInitializer initializer = node.getFirstDescendantOfType(ASTVariableInitializer.class);\n+            if (initializer.jjtGetChild(0) instanceof ASTExpression) {\n+                // only Expression is allowed, ArrayInitializer is not allowed in combination with \"var\".\n+                ASTExpression expression = (ASTExpression) initializer.jjtGetChild(0);\n+                type.setTypeDefinition(expression.getTypeDefinition());\n+            }\n+        }\n+        return data;\n+    }\n+\n     @Override\n     public Object visit(ASTReferenceType node, Object data) {\n         super.visit(node, data);\ndiff --git a/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ParserTstUtil.java b/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ParserTstUtil.java\nindex e64f803c47..f6955f9288 100644\n--- a/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ParserTstUtil.java\n+++ b/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ParserTstUtil.java\n@@ -244,4 +244,17 @@ public class ParserTstUtil {\n         }\n         return source;\n     }\n+\n+    public static ASTCompilationUnit parseAndTypeResolveJava(String javaVersion, String sourceCode) {\n+        LanguageVersionHandler languageVersionHandler = getLanguageVersionHandler(javaVersion);\n+        ASTCompilationUnit rootNode = (ASTCompilationUnit) languageVersionHandler\n+                .getParser(languageVersionHandler.getDefaultParserOptions())\n+                    .parse(null, new StringReader(sourceCode));\n+        languageVersionHandler.getQualifiedNameResolutionFacade(ParserTstUtil.class.getClassLoader()).start(rootNode);\n+        languageVersionHandler.getSymbolFacade().start(rootNode);\n+        languageVersionHandler.getDataFlowFacade().start(rootNode);\n+        languageVersionHandler.getTypeResolutionFacade(ParserTstUtil.class.getClassLoader()).start(rootNode);\n+        languageVersionHandler.getMultifileFacade().start(rootNode);\n+        return rootNode;\n+    }\n }\ndiff --git a/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/Java10Test.java b/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/Java10Test.java\nindex 04c7e983b8..88a76d52b5 100644\n--- a/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/Java10Test.java\n+++ b/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/Java10Test.java\n@@ -8,10 +8,12 @@ import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertSame;\n import static org.junit.Assert.assertTrue;\n \n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n import java.util.List;\n \n import org.apache.commons.io.IOUtils;\n@@ -33,7 +35,9 @@ public class Java10Test {\n     @Test\n     public void testLocalVarInferenceBeforeJava10() {\n         // note, it can be parsed, but we'll have a ReferenceType of \"var\"\n-        ASTCompilationUnit compilationUnit = ParserTstUtil.parseJava9(loadSource(\"LocalVariableTypeInference.java\"));\n+        ASTCompilationUnit compilationUnit = ParserTstUtil.parseAndTypeResolveJava(\"9\",\n+                loadSource(\"LocalVariableTypeInference.java\"));\n+\n         List<ASTLocalVariableDeclaration> localVars = compilationUnit.findDescendantsOfType(ASTLocalVariableDeclaration.class);\n         assertEquals(2, localVars.size());\n \n@@ -51,11 +55,19 @@ public class Java10Test {\n         assertNull(classType.getType());\n         assertNull(type.getType());\n         assertFalse(type.isVarType());\n+\n+        // check the type of the variable initializer's expression\n+        ASTExpression initExpression = localVars.get(0)\n+                .getFirstChildOfType(ASTVariableDeclarator.class)\n+                .getFirstChildOfType(ASTVariableInitializer.class)\n+                .getFirstChildOfType(ASTExpression.class);\n+        assertSame(\"type should be ArrayList\", ArrayList.class, initExpression.getType());\n     }\n \n     @Test\n     public void testLocalVarInferenceCanBeParsedJava10() {\n-        ASTCompilationUnit compilationUnit = ParserTstUtil.parseJava10(loadSource(\"LocalVariableTypeInference.java\"));\n+        ASTCompilationUnit compilationUnit = ParserTstUtil.parseAndTypeResolveJava(\"10\",\n+                loadSource(\"LocalVariableTypeInference.java\"));\n         List<ASTLocalVariableDeclaration> localVars = compilationUnit.findDescendantsOfType(ASTLocalVariableDeclaration.class);\n         assertEquals(2, localVars.size());\n \n@@ -64,5 +76,6 @@ public class Java10Test {\n         assertEquals(\"var\", type.getImage());\n         assertTrue(type.isVarType());\n         assertEquals(0, type.jjtGetNumChildren());\n+        assertSame(\"type should be ArrayList\", ArrayList.class, type.getType());\n     }\n }",
    "Prepare Manifests for next version": "diff --git a/library/AndroidManifest.xml b/library/AndroidManifest.xml\nindex 5c0ac56..188f848 100644\n--- a/library/AndroidManifest.xml\n+++ b/library/AndroidManifest.xml\n@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     package=\"com.nostra13.universalimageloader\"\n-    android:versionCode=\"34\"\n-    android:versionName=\"1.8.6\" >\n+    android:versionCode=\"35\"\n+    android:versionName=\"1.8.7\" >\n \n     <uses-sdk\n         android:minSdkVersion=\"5\"\ndiff --git a/sample/AndroidManifest.xml b/sample/AndroidManifest.xml\nindex 304d350..50f9ffb 100644\n--- a/sample/AndroidManifest.xml\n+++ b/sample/AndroidManifest.xml\n@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     package=\"com.nostra13.example.universalimageloader\"\n-    android:versionCode=\"34\"\n-    android:versionName=\"1.8.6\" >\n+    android:versionCode=\"35\"\n+    android:versionName=\"1.8.7\" >\n \n     <uses-sdk\n         android:minSdkVersion=\"5\"",
    "Redo FileType @ AutoCodec : it is risky to assume that all subclasses are totally described by their extensions , since many are not .": "diff --git a/src/main/java/com/google/devtools/build/lib/util/FileType.java b/src/main/java/com/google/devtools/build/lib/util/FileType.java\nindex 6cfead9578..599851dbbb 100644\n--- a/src/main/java/com/google/devtools/build/lib/util/FileType.java\n+++ b/src/main/java/com/google/devtools/build/lib/util/FileType.java\n@@ -20,6 +20,7 @@ import com.google.common.base.Predicates;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Iterables;\n import com.google.devtools.build.lib.skyframe.serialization.autocodec.AutoCodec;\n+import com.google.devtools.build.lib.skyframe.serialization.autocodec.AutoCodec.VisibleForSerialization;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n@@ -27,9 +28,9 @@ import javax.annotation.concurrent.Immutable;\n \n /** A base class for FileType matchers. */\n @Immutable\n-@AutoCodec\n public abstract class FileType implements Predicate<String> {\n   // A special file type\n+  @AutoCodec @VisibleForSerialization\n   public static final FileType NO_EXTENSION =\n       new FileType() {\n         @Override\n@@ -40,37 +41,48 @@ public abstract class FileType implements Predicate<String> {\n       };\n \n   public static FileType of(final String ext) {\n-    return new FileType() {\n-      @Override\n-      public boolean apply(String path) {\n-        return path.endsWith(ext);\n-      }\n-\n-      @Override\n-      public List<String> getExtensions() {\n-        return ImmutableList.of(ext);\n-      }\n-    };\n+    return new ListFileType(ImmutableList.of(ext));\n   }\n \n-  @AutoCodec.Instantiator\n   public static FileType of(final List<String> extensions) {\n-    return new FileType() {\n-      @Override\n-      public boolean apply(String path) {\n-        for (String ext : extensions) {\n-          if (path.endsWith(ext)) {\n-            return true;\n-          }\n+    return new ListFileType(ImmutableList.copyOf(extensions));\n+  }\n+\n+  @AutoCodec.VisibleForSerialization\n+  @AutoCodec\n+  static final class ListFileType extends FileType {\n+    private final ImmutableList<String> extensions;\n+\n+    @AutoCodec.VisibleForSerialization\n+    ListFileType(ImmutableList<String> extensions) {\n+      this.extensions = Preconditions.checkNotNull(extensions);\n+    }\n+\n+    @Override\n+    public boolean apply(String path) {\n+      for (String ext : extensions) {\n+        if (path.endsWith(ext)) {\n+          return true;\n         }\n-        return false;\n       }\n+      return false;\n+    }\n \n-      @Override\n-      public List<String> getExtensions() {\n-        return ImmutableList.copyOf(extensions);\n-      }\n-    };\n+    @Override\n+    public List<String> getExtensions() {\n+      return ImmutableList.copyOf(extensions);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+      return extensions.hashCode();\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+      return (obj instanceof ListFileType\n+          && this.extensions.equals(((ListFileType) obj).extensions));\n+    }\n   }\n \n   public static FileType of(final String... extensions) {",
    "Stabilize RareClusterState ( <issue_id> ) .": "diff --git a/server/src/test/java/org/elasticsearch/cluster/coordination/RareClusterStateIT.java b/server/src/test/java/org/elasticsearch/cluster/coordination/RareClusterStateIT.java\nindex ccde363fdc5..dc3cd4eb46f 100644\n--- a/server/src/test/java/org/elasticsearch/cluster/coordination/RareClusterStateIT.java\n+++ b/server/src/test/java/org/elasticsearch/cluster/coordination/RareClusterStateIT.java\n@@ -146,7 +146,8 @@ public class RareClusterStateIT extends ESIntegTestCase {\n     private <Req extends ActionRequest, Res extends ActionResponse> ActionFuture<Res> executeAndCancelCommittedPublication(\n             ActionRequestBuilder<Req, Res> req) throws Exception {\n         ActionFuture<Res> future = req.execute();\n-        assertBusy(() -> assertTrue(((Coordinator)internalCluster().getMasterNodeInstance(Discovery.class)).cancelCommittedPublication()));\n+        assertBusy(\n+            () -> assertTrue(((Coordinator)internalCluster().getCurrentMasterNodeInstance(Discovery.class)).cancelCommittedPublication()));\n         return future;\n     }\n \n@@ -276,7 +277,6 @@ public class RareClusterStateIT extends ESIntegTestCase {\n         });\n     }\n \n-    @AwaitsFix(bugUrl=\"https://github.com/elastic/elasticsearch/issues/36813\")\n     public void testDelayedMappingPropagationOnReplica() throws Exception {\n         // This is essentially the same thing as testDelayedMappingPropagationOnPrimary\n         // but for replicas",
    "removed options for stopwords which are not used": "diff --git a/htroot/CrawlStartExpert_p.html b/htroot/CrawlStartExpert_p.html\nindex 5baece971..59a7dff61 100644\n--- a/htroot/CrawlStartExpert_p.html\n+++ b/htroot/CrawlStartExpert_p.html\n@@ -310,14 +310,6 @@\n             so they can omit starting a crawl with the same start point.\n           </td>\n         </tr>\n-        <tr valign=\"top\" class=\"TableCellDark\">\n-          <td><label for=\"xsstopw\">Exclude <em>static</em> Stop-Words</label>:</td>\n-          <td><input type=\"checkbox\" name=\"xsstopw\" id=\"xsstopw\" #(xsstopwChecked)#::checked=\"checked\"#(/xsstopwChecked)# /></td>\n-          <td>\n-            This can be useful to circumvent that extremely common words are added to the database, i.e. \"the\", \"he\", \"she\", \"it\"... To exclude all words given in the file <tt>yacy.stopwords</tt> from indexing,\n-            check this box.\n-          </td>\n-        </tr>\n         <tr valign=\"top\" class=\"TableCellLight\">\n           <td><label for=\"collection\">Add Crawl result to collection(s)</label>:</td>\n           <td>\n@@ -327,24 +319,6 @@\n             A crawl result can be tagged with names which are candidates for a collection request. These tags can be selected with the <a href=\"/gsa/search?q=www&site=#[collection]#\">GSA interface</a> using the 'site' operator. To use this option, the 'collection_sxt'-field must be switched on in the <a href=\"/IndexFederated_p.html\">Solr Schema</a>\n           </td>\n         </tr>\n-        <!--\n-        <tr valign=\"top\" class=\"TableCellDark\">\n-          <td>Exclude <em>dynamic</em> Stop-Words</td>\n-          <td><input type=\"checkbox\" name=\"xdstopw\" #(xdstopwChecked)#::checked=\"checked\"#(/xdstopwChecked)# /></td>\n-          <td colspan=\"3\">\n-            Excludes all words from indexing which are listed by statistic rules.\n-            <em>THIS IS NOT YET FUNCTIONAL</em>\n-          </td>\n-        </tr>\n-        <tr valign=\"top\" class=\"TableCellDark\">\n-          <td>Exclude <em>parent-indexed</em> words</td>\n-          <td><input type=\"checkbox\" name=\"xpstopw\" #(xpstopwChecked)#::checked=\"checked\"#(/xpstopwChecked)# /></td>\n-          <td colspan=\"3\">\n-            Excludes all words from indexing which had been indexed in the parent web page.\n-            <em>THIS IS NOT YET FUNCTIONAL</em>\n-          </td>\n-        </tr>\n-        -->\n         <tr valign=\"top\" class=\"TableCellSummary\">\n           <td colspan=\"5\"><input type=\"submit\" name=\"crawlingstart\" value=\"Start New Crawl\" class=\"submitready\"/></td>\n         </tr>\ndiff --git a/htroot/CrawlStartSite_p.html b/htroot/CrawlStartSite_p.html\nindex 38a83864e..15978b66b 100644\n--- a/htroot/CrawlStartSite_p.html\n+++ b/htroot/CrawlStartSite_p.html\n@@ -101,9 +101,6 @@\n         <input type=\"hidden\" name=\"indexText\" id=\"indexText\" value=\"on\" />\r\n         <input type=\"hidden\" name=\"indexMedia\" id=\"indexMedia\" value=\"on\" />\r\n         <input type=\"hidden\" name=\"intention\" id=\"intention\" value=\"\" />\r\n-        <input type=\"hidden\" name=\"xsstopw\" id=\"xsstopw\" value=\"on\" />\r\n-        <input type=\"hidden\" name=\"xdstopw\" id=\"xdstopw\" value=\"off\" />\r\n-        <input type=\"hidden\" name=\"xpstopw\" id=\"xpstopw\" value=\"off\" />\r\n         <input type=\"hidden\" name=\"collection\" id=\"collection\" value=\"\" />\r\n         </dd>\r\n         <dt><label>Start</label></dt>\r\ndiff --git a/htroot/Crawler_p.java b/htroot/Crawler_p.java\nindex 615393757..ee147811f 100644\n--- a/htroot/Crawler_p.java\n+++ b/htroot/Crawler_p.java\n@@ -265,15 +265,6 @@ public class Crawler_p {\n                 CacheStrategy cachePolicy = CacheStrategy.parse(post.get(\"cachePolicy\", \"iffresh\"));\n                 if (cachePolicy == null) cachePolicy = CacheStrategy.IFFRESH;\n \n-                final boolean xsstopw = \"on\".equals(post.get(\"xsstopw\", \"off\"));\n-                env.setConfig(\"xsstopw\", xsstopw);\n-\n-                final boolean xdstopw = \"on\".equals(post.get(\"xdstopw\", \"off\"));\n-                env.setConfig(\"xdstopw\", xdstopw);\n-\n-                final boolean xpstopw = \"on\".equals(post.get(\"xpstopw\", \"off\"));\n-                env.setConfig(\"xpstopw\", xpstopw);\n-\n                 String crawlingMode = post.get(\"crawlingMode\",\"url\");\n                 \n                 if (\"file\".equals(crawlingMode) && post.containsKey(\"crawlingFile\")) {\n@@ -365,9 +356,6 @@ public class Crawler_p {\n                         indexMedia,\n                         storeHTCache,\n                         crawlOrder,\n-                        xsstopw,\n-                        xdstopw,\n-                        xpstopw,\n                         cachePolicy,\n                         collection);\n                 byte[] handle = ASCII.getBytes(profile.handle());\ndiff --git a/htroot/QuickCrawlLink_p.java b/htroot/QuickCrawlLink_p.java\nindex 894427fce..18fa543dc 100644\n--- a/htroot/QuickCrawlLink_p.java\n+++ b/htroot/QuickCrawlLink_p.java\n@@ -102,9 +102,6 @@ public class QuickCrawlLink_p {\n         final boolean indexMedia     = post.get(\"indexMedia\", \"off\").equals(\"on\");\r\n         final boolean storeHTCache   = post.get(\"storeHTCache\", \"\").equals(\"on\");\r\n         final boolean remoteIndexing = post.get(\"crawlOrder\", \"\").equals(\"on\");\r\n-        final boolean xsstopw        = post.get(\"xsstopw\", \"\").equals(\"on\");\r\n-        final boolean xdstopw        = post.get(\"xdstopw\", \"\").equals(\"on\");\r\n-        final boolean xpstopw        = post.get(\"xpstopw\", \"\").equals(\"on\");\r\n         final String collection      = post.get(\"collection\", \"user\");\r\n \r\n         prop.put(\"mode_url\", (crawlingStart == null) ? \"unknown\" : crawlingStart);\r\n@@ -151,9 +148,6 @@ public class QuickCrawlLink_p {\n                         indexMedia,\r\n                         storeHTCache,\r\n                         remoteIndexing,\r\n-                        xsstopw,\r\n-                        xdstopw,\r\n-                        xpstopw,\r\n                         CacheStrategy.IFFRESH,\r\n                         collection);\r\n                 sb.crawler.putActive(pe.handle().getBytes(), pe);\r\ndiff --git a/source/net/yacy/crawler/CrawlSwitchboard.java b/source/net/yacy/crawler/CrawlSwitchboard.java\nindex a5a3fe7fe..c09072efb 100644\n--- a/source/net/yacy/crawler/CrawlSwitchboard.java\n+++ b/source/net/yacy/crawler/CrawlSwitchboard.java\n@@ -245,9 +245,6 @@ public final class CrawlSwitchboard {\n                 true /*getConfigBool(PROXY_INDEXING_LOCAL_MEDIA, true)*/,\n                 true,\n                 false /*getConfigBool(PROXY_INDEXING_REMOTE, false)*/,\n-                true,\n-                true,\n-                true,\n                 CacheStrategy.IFFRESH,\n                 \"robot_\" + CRAWL_PROFILE_PROXY);\n         this.profilesActiveCrawls.put(\n@@ -274,9 +271,6 @@ public final class CrawlSwitchboard {\n                 true,\n                 false,\n                 false,\n-                true,\n-                true,\n-                false,\n                 CacheStrategy.IFFRESH,\n                 \"robot_\" + CRAWL_PROFILE_REMOTE);\n         this.profilesActiveCrawls.put(\n@@ -303,9 +297,6 @@ public final class CrawlSwitchboard {\n                 false,\n                 true,\n                 false,\n-                true,\n-                true,\n-                false,\n                 CacheStrategy.IFEXIST,\n                 \"robot_\" + CRAWL_PROFILE_SNIPPET_LOCAL_TEXT);\n         this.profilesActiveCrawls.put(\n@@ -332,9 +323,6 @@ public final class CrawlSwitchboard {\n                 true,\n                 true,\n                 false,\n-                true,\n-                true,\n-                false,\n                 CacheStrategy.IFEXIST,\n                 \"robot_\" + CRAWL_PROFILE_SNIPPET_GLOBAL_TEXT);\n         this.profilesActiveCrawls.put(\n@@ -362,9 +350,6 @@ public final class CrawlSwitchboard {\n             ",
    "Ensure UTC for new DateTime objects .": "diff --git a/src/main/java/org/graylog/plugins/netflow/flows/cflow/NetFlowV5Packet.java b/src/main/java/org/graylog/plugins/netflow/flows/cflow/NetFlowV5Packet.java\nindex 0880e34ec3..f27ef95ccf 100644\n--- a/src/main/java/org/graylog/plugins/netflow/flows/cflow/NetFlowV5Packet.java\n+++ b/src/main/java/org/graylog/plugins/netflow/flows/cflow/NetFlowV5Packet.java\n@@ -7,6 +7,7 @@ import org.graylog.plugins.netflow.flows.FlowException;\n import org.graylog.plugins.netflow.flows.InvalidFlowVersionException;\n import org.graylog.plugins.netflow.utils.UUIDs;\n import org.joda.time.DateTime;\n+import org.joda.time.DateTimeZone;\n \n import java.net.InetSocketAddress;\n import java.util.Collection;\n@@ -122,7 +123,7 @@ public class NetFlowV5Packet implements NetFlowPacket {\n         }\n \n         final long uptime = getUnsignedInteger(buf, 4, 4);\n-        final DateTime timestamp = new DateTime(getUnsignedInteger(buf, 8, 4) * 1000);\n+        final DateTime timestamp = new DateTime(getUnsignedInteger(buf, 8, 4) * 1000, DateTimeZone.UTC);\n         final UUID id = UUIDs.startOf(timestamp.getMillis());\n         final long flowSequence = getUnsignedInteger(buf, 16, 4);\n         final int engineType = (int) getUnsignedInteger(buf, 20, 1);\ndiff --git a/src/test/java/org/graylog/plugins/netflow/flows/cflow/NetFlowV5PacketTest.java b/src/test/java/org/graylog/plugins/netflow/flows/cflow/NetFlowV5PacketTest.java\nindex e4be860410..ec604505d4 100644\n--- a/src/test/java/org/graylog/plugins/netflow/flows/cflow/NetFlowV5PacketTest.java\n+++ b/src/test/java/org/graylog/plugins/netflow/flows/cflow/NetFlowV5PacketTest.java\n@@ -12,6 +12,7 @@ import org.junit.Test;\n import java.net.InetSocketAddress;\n import java.net.URL;\n \n+import static org.joda.time.DateTimeZone.UTC;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotEquals;\n import static org.junit.Assert.assertNotNull;\n@@ -48,8 +49,8 @@ public class NetFlowV5PacketTest {\n         assertEquals(0, message1.getField(\"nf_dst_mask\"));\n         assertEquals(6, message1.getField(\"nf_proto\"));\n         assertEquals(16, message1.getField(\"nf_tcp_flags\"));\n-        assertEquals(new DateTime(\"2015-06-21T13:40:51.914+02:00\"), message1.getField(\"nf_start\"));\n-        assertEquals(new DateTime(\"2015-05-02T18:38:07.196Z\"), message1.getField(\"nf_stop\"));\n+        assertEquals(new DateTime(\"2015-06-21T13:40:51.914+02:00\", UTC), message1.getField(\"nf_start\"));\n+        assertEquals(new DateTime(\"2015-05-02T18:38:07.196Z\", UTC), message1.getField(\"nf_stop\"));\n         assertEquals(230L, message1.getField(\"nf_bytes\"));\n         assertEquals(5L, message1.getField(\"nf_pkts\"));\n \n@@ -67,8 +68,8 @@ public class NetFlowV5PacketTest {\n         assertEquals(0, message2.getField(\"nf_dst_mask\"));\n         assertEquals(6, message2.getField(\"nf_proto\"));\n         assertEquals(24, message2.getField(\"nf_tcp_flags\"));\n-        assertEquals(new DateTime(\"2015-06-21T13:40:51.914+02:00\"), message2.getField(\"nf_start\"));\n-        assertEquals(new DateTime(\"2015-05-02T18:38:07.196Z\"), message2.getField(\"nf_stop\"));\n+        assertEquals(new DateTime(\"2015-06-21T13:40:51.914+02:00\", UTC), message2.getField(\"nf_start\"));\n+        assertEquals(new DateTime(\"2015-05-02T18:38:07.196Z\", UTC), message2.getField(\"nf_stop\"));\n         assertEquals(304L, message2.getField(\"nf_bytes\"));\n         assertEquals(4L, message2.getField(\"nf_pkts\"));\n     }",
    "Validate pattern name in AFTER . . .": "diff --git a/core/src/main/java/org/apache/calcite/runtime/CalciteResource.java b/core/src/main/java/org/apache/calcite/runtime/CalciteResource.java\nindex a9129696c..5cb45dc13 100644\n--- a/core/src/main/java/org/apache/calcite/runtime/CalciteResource.java\n+++ b/core/src/main/java/org/apache/calcite/runtime/CalciteResource.java\n@@ -670,31 +670,34 @@ ExInst<CalciteException> illegalArgumentForTableFunctionCall(String a0,\n   ExInst<SqlValidatorException> auxiliaryWithoutMatchingGroupCall(String func1, String func2);\n \n   @BaseMessage(\"Pattern variable ''{0}'' has already been defined\")\n-  ExInst<SqlValidatorException> PatternVarAlreadyDefined(String varName);\n+  ExInst<SqlValidatorException> patternVarAlreadyDefined(String varName);\n \n   @BaseMessage(\"Cannot use PREV/NEXT in MEASURE ''{0}''\")\n-  ExInst<SqlValidatorException> PatternPrevFunctionInMeasure(String call);\n+  ExInst<SqlValidatorException> patternPrevFunctionInMeasure(String call);\n \n   @BaseMessage(\"Cannot nest PREV/NEXT under LAST/FIRST ''{0}''\")\n-  ExInst<SqlValidatorException> PatternPrevFunctionOrder(String call);\n+  ExInst<SqlValidatorException> patternPrevFunctionOrder(String call);\n \n   @BaseMessage(\"Cannot use aggregation in navigation ''{0}''\")\n-  ExInst<SqlValidatorException> PatternAggregationInNavigation(String call);\n+  ExInst<SqlValidatorException> patternAggregationInNavigation(String call);\n \n   @BaseMessage(\"Invalid number of parameters to COUNT method\")\n-  ExInst<SqlValidatorException> PatternCountFunctionArg();\n+  ExInst<SqlValidatorException> patternCountFunctionArg();\n \n   @BaseMessage(\"Cannot use RUNNING/FINAL in DEFINE ''{0}''\")\n-  ExInst<SqlValidatorException> PatternRunningFunctionInDefine(String call);\n+  ExInst<SqlValidatorException> patternRunningFunctionInDefine(String call);\n \n   @BaseMessage(\"Multiple pattern variables in ''{0}''\")\n-  ExInst<SqlValidatorException> PatternFunctionVariableCheck(String call);\n+  ExInst<SqlValidatorException> patternFunctionVariableCheck(String call);\n \n   @BaseMessage(\"Function ''{0}'' can only be used in MATCH_RECOGNIZE\")\n-  ExInst<SqlValidatorException> FunctionMatchRecognizeOnly(String call);\n+  ExInst<SqlValidatorException> functionMatchRecognizeOnly(String call);\n \n   @BaseMessage(\"Null parameters in ''{0}''\")\n-  ExInst<SqlValidatorException> PatternFunctionNullCheck(String call);\n+  ExInst<SqlValidatorException> patternFunctionNullCheck(String call);\n+\n+  @BaseMessage(\"Unknown pattern ''{0}''\")\n+  ExInst<SqlValidatorException> unknownPattern(String call);\n }\n \n // End CalciteResource.java\ndiff --git a/core/src/main/java/org/apache/calcite/sql/validate/MatchRecognizeScope.java b/core/src/main/java/org/apache/calcite/sql/validate/MatchRecognizeScope.java\nindex c0be246ac..1b6741cd6 100644\n--- a/core/src/main/java/org/apache/calcite/sql/validate/MatchRecognizeScope.java\n+++ b/core/src/main/java/org/apache/calcite/sql/validate/MatchRecognizeScope.java\n@@ -21,12 +21,12 @@\n import org.apache.calcite.sql.SqlMatchRecognize;\n import org.apache.calcite.sql.SqlNode;\n \n-import com.google.common.collect.Sets;\n-\n import java.util.HashMap;\n+import java.util.LinkedHashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import java.util.TreeSet;\n \n /**\n  * Scope for expressions in a {@code MATCH_RECOGNIZE} clause.\n@@ -38,14 +38,17 @@ public class MatchRecognizeScope extends ListScope {\n \n   //~ Instance fields ---------------------------------------------\n   private final SqlMatchRecognize matchRecognize;\n-  private Set<String> patternVars;\n+  private final Set<String> patternVars;\n \n   /** Creates a MatchRecognizeScope. */\n   public MatchRecognizeScope(SqlValidatorScope parent,\n       SqlMatchRecognize matchRecognize) {\n     super(parent);\n     this.matchRecognize = matchRecognize;\n-    patternVars = Sets.newHashSet(STAR);\n+    patternVars = validator.getCatalogReader().nameMatcher().isCaseSensitive()\n+        ? new LinkedHashSet<String>()\n+        : new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n+    patternVars.add(STAR);\n   }\n \n   @Override public SqlNode getNode() {\ndiff --git a/core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java b/core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java\nindex c458aabaf..28c4047d6 100644\n--- a/core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java\n+++ b/core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java\n@@ -4473,6 +4473,17 @@ public void validateWindow(\n \n     validateDefinitions(matchRecognize, scope);\n \n+    // validate AFTER ... SKIP TO\n+    final SqlNode skipTo = matchRecognize.getAfter();\n+    if (skipTo instanceof SqlCall) {\n+      final SqlCall skipToCall = (SqlCall) skipTo;\n+      final SqlIdentifier id = skipToCall.operand(0);\n+      if (!scope.getPatternVars().contains(id.getSimple())) {\n+        throw newValidationError(id,\n+            RESOURCE.unknownPattern(id.getSimple()));\n+      }\n+    }\n+\n     List<Map.Entry<String, RelDataType>> fields =\n         validateMeasure(matchRecognize, scope);\n     final RelDataType rowType = typeFactory.createStructType(fields);\n@@ -4537,12 +4548,14 @@ private SqlNode navigationInMeasure(SqlNode node) {\n \n   private void validateDefinitions(SqlMatchRecognize mr,\n       MatchRecognizeScope scope) {\n-    final Set<String> aliases = new HashSet<>();\n+    final Set<String> aliases = catalogReader.nameMatcher().isCaseSensitive()\n+        ? new LinkedHashSet<String>()\n+        : new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n     for (SqlNode item : mr.getPatternDefList().getList()) {\n       final String alias = alias(item);\n       if (!aliases.add(alias)) {\n         throw newValidationError(item,\n-            Static.RESOURCE.PatternVarAlreadyDefined(alias));\n+            Static.RESOURCE.patternVarAlreadyDefined(alias));\n       }\n       scope.addPatternVar(alias);\n     }\n@@ -4655,7 +4668,7 @@ public void validateCall(\n             == SqlFunctionCategory.MATCH_RECOGNIZE\n         && !(operandScope instanceof MatchRecognizeScope)) {\n       throw newValidationError(call,\n-          Static.RESOURCE.FunctionMatchRecognizeOnly(call.toString()));\n+          Static.RESOURCE.functionMatchRecognizeOnly(call.toString()));\n     }\n     // Delegate validation to the operator.\n     operator.validateCall(call, this, scope, operandScope);\n@@ -5417,28 +5430,28 @@ private class PatternValidator extends SqlBasicVisitor<Set<String>> {\n         if (isPhysicalNavigation(kind)) {\n           if (isMeasure) {\n             throw newValidationError(call,\n-                Static.RESOURCE.PatternPrevFunctionInMeasure(call.toString()));\n+                Static.RESOURCE.patternPrevFunctionInMeasure(call.toString()));\n           }\n           if (firstLastCount != 0) {\n             throw newValidationError(call,\n-                Static.RESOURCE.PatternPrevFunctionOrder(call.toString()));\n+                Static.RESOURCE.patternPrevFunctionOrder(call.toString()));\n           }\n           prevNextCount++;\n         } else if (isLogicalNavigation(kind)) {\n           if (firstLastCount != 0) {\n             throw newValidationError(call,\n-                Static.RESOURCE.PatternPrevFunctionOrder(call.toString()));\n+                Static.RESOURCE.patternPrevFunctionOrder(call.toString()));\n           }\n           firstLastCount++;\n         } else if (isAggregation(kind)) {\n           // cannot apply aggregation in PREV/NEXT, FIRST/LAST\n           if (firstLastCount != 0 || prevNextCount != 0) {\n             throw newValidationError(call,\n-                Static.RESOURCE.PatternAggregationInNavigation(call.toString()));\n+                Static.RESOURCE.patternAggregationInNavigation(call.toString()));\n           }\n           if (kind == SqlKind.COUNT && call.getOperandList().size() > 1) {\n             throw newValidationError(call,\n-                Static.RESOURCE.PatternCountFunctionArg());\n+                Static.RESOURCE.patternCountFunctionArg());\n           }\n           aggregateCount++;\n         }\n@@ -5446,7 +5459,7 @@ private class PatternValidator extends SqlBasicVisitor<Set<String>> {\n \n       if (isRunningOrFinal(kind) && !isMeasure) {\n         throw newValidationError(call,\n-            Static.RESOURCE.PatternRunningFunctionInDefine(call.toString()));\n+            Static.RESOURCE.patternRunningFunctionInDefine(call.toString()));\n       }\n \n       for (SqlNode node : operands) {\n@@ -5461,17 +5474,17 @@ private class PatternValidator extends SqlBasicVisitor<Set<String>> {\n         case COUNT:\n           if (vars.size() > 1) {\n             throw newValidationError(call,\n-                Static.RESOURCE.PatternCountFunctionArg());\n+                Static.RESOURCE.patternCountFunctionArg());\n           }\n           break;\n         default:\n           if (vars.isEmpty()) {\n             throw newValidationError(call,\n-              Static.RESOURCE.PatternFunctionNullCheck(call.toString()));\n+              Static.RESOURCE.patternFunctionNullCheck(call.toString()));\n           }\n           if (vars.size() != 1) {\n             throw newValidationError(call,\n-                Static.RESOURCE.PatternFunctionVariableCheck(call.toString()));\n+                Static.RESOURCE.patternFunctionVariableCheck(call.toString()));\n           }\n           break;\n         }\ndiff --git a/core/src/main/resources/org/apache/calcite/runtime/CalciteResource.properties b/core/src/main/resources/org/apache/calcite/runtime/CalciteResource.properties\nindex 45a9b70d4..0006022d5 100644\n--- a/core/src/main/resources/org/apache/calcite/runtime/CalciteResource.properties\n+++ b/core/src/main/resources/org/apache/calcite/runtime/CalciteResource.properties\n@@ -226,4 +226,5 @@ PatternRunningFunctionInDefine=Cannot use RUNNING/FINAL in DEFINE ''{0}''\n PatternFunctionVariableCheck=Multiple pattern variables in ''{0}''\n FunctionMatchRecognizeOnly=Function ''{0}'' can only be used in MATCH_RECOGNIZE\n PatternFunctionNullCheck=Null parameters in ''{0}''\n+UnknownPattern=Unknown pattern ''{0}''\n # End CalciteResource.properties\ndiff --git a/core/src/test/java/org/apache/calcite/test/SqlValidatorMatchTest.java b/core/src/test/java/org/apache/calcite/test/SqlValidatorMatchTest.java\nindex 144c43c9c..c0fca1c81 100644\n--- a/core/src/test/java/org/apache/calcite/test/SqlValidatorMatchTest.java\n+++ b/core/src/test/java/org/apache/calcite/test/SqlValidatorMatchTest.java\n@@ -159,6 +159,42 @@ public class SqlValidatorMatchTest extends SqlValidatorTestCase {\n         .fails(\"(?s).*Encountered \\\"measures\\\" at .*\");\n   }\n \n+  @Test public void testMatchRecognizeSkipTo3() throws Exception {\n+    final String sql = \"select *\\n\"\n+        + \"from emp match_recognize (\\n\"\n+        + \"  measures\\n\"\n+        + \"    STRT.sal as start_sal,\\n\"\n+        + \"    LAST(up.sal) as end_sal\\n\"\n+        + \"    after match skip to ^no_exists^\\n\"\n+        + \"    pattern (strt down+ up+)\\n\"\n+        + \"    define\\n\"\n+        + \"      down as down.sal < PREV(down.sal),\\n\"\n+        + \"      up as up.sal > prev(up.sal)\\n\"\n+        + \"  ) mr\";\n+    sql(sql)\n+        .fails(\"Unknown pattern 'NO_EXISTS'\");\n+  }\n+\n+  @Test public void testMatchRecognizeSkipToCaseInsensitive() throws Exception {\n+    final String sql = \"select *\\n\"\n+        + \"from emp match_recognize (\\n\"\n+        + \"  measures\\n\"\n+        + \"    STRT.sal as start_sal,\\n\"\n+        + \"    LAST(up.sal) as end_sal\\n\"\n+        + \"    after match skip to ^\\\"strt\\\"^\\n\"\n+        + \"    pattern (strt down+ up+)\\n\"\n+        + \"    define\\n\"\n+        + \"      down as down.sal < PREV(down.sal),\\n\"\n+        + \"      up as up.sal > prev(up.sal)\\n\"\n+        + \"  ) mr\";\n+    sql(sql)\n+        .fails(\"Unknown pattern 'strt'\");\n+    sql(sql)\n+        .tester(tester.withCaseSensitive(false))\n+        .sansCarets()\n+        .ok();\n+  }\n+\n }\n \n // End SqlValidatorMatchTest.java\ndiff --git a/core/src/test/java/org/apache/calcite/test/SqlValidatorTestCase.java b/core/src/test/java/org/apache/calcite/test/SqlValidatorTestCase.java\nindex 025de3aa7..cc66e3f3e 100644\n--- a/core/src/test/java/org/apache/calcite/test/SqlValidatorTestCase.java\n+++ b/core/src/test/java/org/apache/calcite/test/SqlValidatorTestCase.java\n@@ -580,6 +580,10 @@ public void checkParameters(RelDataType parameterRowType) {\n           SqlTests.ANY_RESULT_CHECKER);\n       return this;\n     }\n+\n+    public Sql sansCarets() {\n+      return new Sql(tester, sql.replace(\"^\", \"\"));\n+    }\n   }\n }\n \ndiff --git a/core/src/test/java/org/apache/calcite/util/UtilTest.java b/core/src/test/java/org/apache/calcite/util/UtilTest.java\nindex 2f48d64c7..34b61d662 100644\n--- a/core/src/test/java/org/apache/calcite/util/UtilTest.java\n+++ b/core/src/test/java/org/apache/calcite/util/UtilTest.java\n@@ -51,6 +51,7 @@\n import java.io.UnsupportedEncodingException;\n import java.lang.management.MemoryType;\n import java.lang.reflect.Method;\n+import java.lang.reflect.Modifier;\n import java.math.BigDecimal;\n import java.sql.Timestamp;\n import java.text.MessageFormat;\n@@ -1498,6 +1499,16 @@ public List<String> list(String... xs) {\n \n   @Test public void testResources() {\n     Resources.validate(Static.RESOURCE);\n+    checkResourceMethodNames(Static.RESOURCE);\n+  }\n+\n+  private void checkResourceMethodNames(Object resource) {\n+    for (Method method : resource.getClass().getMethods()) {\n+      if (!Modifier.isStatic(method.getModifiers())\n+          && !method.getName().matches(\"^[a-z][A-Za-z0-9_]*$\")) {\n+        fail(\"resource method name must be camel case: \" + method.getName());\n+      }\n+    }\n   }\n \n   /** Tests that sorted sets behave the way we expect. */",
    "Add documentation for Glue Catalog support in Hive": "diff --git a/presto-docs/src/main/sphinx/connector/hive.rst b/presto-docs/src/main/sphinx/connector/hive.rst\nindex 6c0f6da148..3670bf370e 100644\n--- a/presto-docs/src/main/sphinx/connector/hive.rst\n+++ b/presto-docs/src/main/sphinx/connector/hive.rst\n@@ -114,14 +114,9 @@ Hive Configuration Properties\n ================================================== ============================================================ ============\n Property Name                                      Description                                                  Default\n ================================================== ============================================================ ============\n-``hive.metastore.uri``                             The URI(s) of the Hive metastore to connect to using the\n-                                                   Thrift protocol. If multiple URIs are provided, the first\n-                                                   URI is used by default and the rest of the URIs are\n-                                                   fallback metastores. This property is required.\n-                                                   Example: ``thrift://192.0.2.3:9083`` or\n-                                                   ``thrift://192.0.2.3:9083,thrift://192.0.2.4:9083``\n-\n-``hive.metastore.username``                        The username Presto will use to access the Hive metastore.\n+``hive.metastore``                                 The type of Hive metastore to use. Presto currently supports ``thrift``\n+                                                   the default Hive Thrift metastore (``thrift``), and the AWS\n+                                                   Glue Catalog (``glue``) as metadata sources.\n \n ``hive.config.resources``                          An optional comma-separated list of HDFS\n                                                    configuration files. These files must exist on the\n@@ -152,16 +147,6 @@ Property Name                                      Description\n \n ``hive.max-partitions-per-scan``                   Maximum number of partitions for a single table scan.        100,000\n \n-``hive.metastore.authentication.type``             Hive metastore authentication type.                          ``NONE``\n-                                                   Possible values are ``NONE`` or ``KERBEROS``.\n-\n-``hive.metastore.service.principal``               The Kerberos principal of the Hive metastore service.\n-\n-``hive.metastore.client.principal``                The Kerberos principal that Presto will use when connecting\n-                                                   to the Hive metastore service.\n-\n-``hive.metastore.client.keytab``                   Hive metastore client keytab location.\n-\n ``hive.hdfs.authentication.type``                  HDFS authentication type.                                    ``NONE``\n                                                    Possible values are ``NONE`` or ``KERBEROS``.\n \n@@ -191,6 +176,65 @@ Property Name                                      Description\n                                                    :ref:`s3selectpushdown`.\n ================================================== ============================================================ ============\n \n+Hive Thrift Metastore Configuration Properties\n+----------------------------------------------\n+\n+================================================== ============================================================\n+Property Name                                      Description\n+================================================== ============================================================\n+``hive.metastore.uri``                             The URI(s) of the Hive metastore to connect to using the\n+                                                   Thrift protocol. If multiple URIs are provided, the first\n+                                                   URI is used by default and the rest of the URIs are\n+                                                   fallback metastores. This property is required.\n+                                                   Example: ``thrift://192.0.2.3:9083`` or\n+                                                   ``thrift://192.0.2.3:9083,thrift://192.0.2.4:9083``\n+\n+``hive.metastore.username``                        The username Presto will use to access the Hive metastore.\n+\n+``hive.metastore.authentication.type``             Hive metastore authentication type.\n+                                                   Possible values are ``NONE`` or ``KERBEROS``\n+                                                   (defaults to ``NONE``).\n+\n+``hive.metastore.service.principal``               The Kerberos principal of the Hive metastore service.\n+\n+``hive.metastore.client.principal``                The Kerberos principal that Presto will use when connecting\n+                                                   to the Hive metastore service.\n+\n+``hive.metastore.client.keytab``                   Hive metastore client keytab location.\n+================================================== ============================================================\n+\n+AWS Glue Catalog Configuration Properties\n+-----------------------------------------\n+\n+==================================================== ============================================================\n+Property Name                                        Description\n+==================================================== ============================================================\n+``hive.metastore.glue.region``                       AWS region of the Glue Catalog. This is required when not\n+                                                     running in EC2, or when the catalog is in a different region.\n+                                                     Example: ``us-east-1``\n+\n+``hive.metastore.glue.pin-client-to-current-region`` Pin Glue requests to the same region as the EC2 instance\n+                                                     where Presto is running (defaults to ``false``).\n+\n+``hive.metastore.glue.max-connections``              Max number of concurrent connections to Glue\n+                                                     (defaults to ``5``).\n+\n+``hive.metastore.glue.default-warehouse-dir``        Hive Glue metastore default warehouse directory\n+\n+``hive.metastore.glue.aws-access-key``               AWS access key to use to connect to the Glue Catalog. If\n+                               ",
    "Broaden Samsung workaround to API level 25 + J7 .": "diff --git a/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java b/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java\nindex d965b662be..ef7d691c5b 100644\n--- a/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java\n+++ b/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java\n@@ -1141,8 +1141,9 @@ public abstract class MediaCodecRenderer extends BaseRenderer {\n    * @return The mode specifying when the adaptation workaround should be enabled.\n    */\n   private @AdaptationWorkaroundMode int codecAdaptationWorkaroundMode(String name) {\n-    if (Util.SDK_INT <= 24 && \"OMX.Exynos.avc.dec.secure\".equals(name)\n-        && (Util.MODEL.startsWith(\"SM-T585\") || Util.MODEL.startsWith(\"SM-A520\"))) {\n+    if (Util.SDK_INT <= 25 && \"OMX.Exynos.avc.dec.secure\".equals(name)\n+        && (Util.MODEL.startsWith(\"SM-T585\") || Util.MODEL.startsWith(\"SM-A510\")\n+        || Util.MODEL.startsWith(\"SM-A520\") || Util.MODEL.startsWith(\"SM-J700\"))) {\n       return ADAPTATION_WORKAROUND_MODE_ALWAYS;\n     } else if (Util.SDK_INT < 24\n         && (\"OMX.Nvidia.h264.decode\".equals(name) || \"OMX.Nvidia.h264.decode.secure\".equals(name))",
    "Add transaction commit / abort functions for participant": "diff --git a/examples/transactions_distributed/initiator.bal b/examples/transactions_distributed/initiator.bal\nindex 8aba5efd01f..b8d7ce36a10 100644\n--- a/examples/transactions_distributed/initiator.bal\n+++ b/examples/transactions_distributed/initiator.bal\n@@ -46,11 +46,11 @@ service<http:Service> InitiatorService bind {port: 8080} {\n }\n \n function printAbort(string transactionId) {\n-    log:printInfo(\"Transaction: \" + transactionId + \" aborted\");\n+    log:printInfo(\"Initiated transaction: \" + transactionId + \" aborted\");\n }\n \n function printCommit(string transactionId) {\n-    log:printInfo(\"Transaction: \" + transactionId + \" committed\");\n+    log:printInfo(\"Initiated transaction: \" + transactionId + \" committed\");\n }\n \n function callBusinessService() returns boolean {\ndiff --git a/examples/transactions_distributed/participant.bal b/examples/transactions_distributed/participant.bal\nindex fdcae6d5e61..fddaacff24b 100644\n--- a/examples/transactions_distributed/participant.bal\n+++ b/examples/transactions_distributed/participant.bal\n@@ -19,7 +19,7 @@ service<http:Service> ParticipantService bind {port: 8889} {\n \n         // At the beginning of the transaction statement, since a transaction context has been received, this service\n         // will register with the initiator as a participant.\n-        transaction {\n+        transaction with oncommit = printParticipantCommit, onabort = printParticipantAbort {\n             var updateReq = untaint req.getJsonPayload();\n             match updateReq{\n                 json updateReqJson => {\n@@ -46,3 +46,11 @@ service<http:Service> ParticipantService bind {port: 8889} {\n         }\n     }\n }\n+\n+function printParticipantAbort(string transactionId) {\n+    log:printInfo(\"Participated transaction: \" + transactionId + \" aborted\");\n+}\n+\n+function printParticipantCommit(string transactionId) {\n+    log:printInfo(\"Participated transaction: \" + transactionId + \" committed\");\n+}\ndiff --git a/examples/transactions_distributed/transactions_distributed.out b/examples/transactions_distributed/transactions_distributed.out\nindex 505297235a2..c6371934413 100644\n--- a/examples/transactions_distributed/transactions_distributed.out\n+++ b/examples/transactions_distributed/transactions_distributed.out\n@@ -16,26 +16,27 @@ $ curl -v localhost:8080\n \n Output from initiator:\n \n-2018-04-23 23:42:53,992 INFO  [] - Initiating transaction...\n-2018-04-23 23:42:54,009 INFO  [ballerina.transactions] - Created transaction: 29d99da9-9998-4b0b-b5e4-6ea031f4a245\n-2018-04-23 23:42:54,011 INFO  [] - Started transaction: 29d99da9-9998-4b0b-b5e4-6ea031f4a245:1\n-2018-04-23 23:42:54,591 INFO  [ballerina.transactions] - Registered remote participant: 962f02e7-908f-4f5d-b72a-4897119f824a:1 for transaction: 29d99da9-9998-4b0b-b5e4-6ea031f4a245\n-2018-04-23 23:42:54,645 INFO  [] - Got response from bizservice\n-2018-04-23 23:42:54,647 INFO  [ballerina.transactions] - Running 2-phase commit for transaction: 29d99da9-9998-4b0b-b5e4-6ea031f4a245:1\n-2018-04-23 23:42:54,652 INFO  [ballerina.transactions] - Preparing remote participant: 962f02e7-908f-4f5d-b72a-4897119f824a:1\n-2018-04-23 23:42:54,670 INFO  [ballerina.transactions] - Remote participant: 962f02e7-908f-4f5d-b72a-4897119f824a:1 prepared\n-2018-04-23 23:42:54,671 INFO  [ballerina.transactions] - Notify(commit) remote participant: http://192.168.1.4:60142/balcoordinator/participant/2pc/1\n-2018-04-23 23:42:54,678 INFO  [ballerina.transactions] - Remote participant: 962f02e7-908f-4f5d-b72a-4897119f824a:1 committed\n-2018-04-23 23:42:54,679 INFO  [] - Transaction: 29d99da9-9998-4b0b-b5e4-6ea031f4a245:1 committed\n-2018-04-23 23:42:54,682 INFO  [] - Sent response back to client\n+2018-04-24 00:07:09,112 INFO  [] - Initiating transaction...\n+2018-04-24 00:07:09,130 INFO  [ballerina.transactions] - Created transaction: 45936431-ae9e-43e0-bc54-4ab7769734da\n+2018-04-24 00:07:09,131 INFO  [] - Started transaction: 45936431-ae9e-43e0-bc54-4ab7769734da:1\n+2018-04-24 00:07:09,724 INFO  [ballerina.transactions] - Registered remote participant: facb8e2e-dc82-4fd0-bd0f-c7e80369e423:1 for transaction: 45936431-ae9e-43e0-bc54-4ab7769734da\n+2018-04-24 00:07:09,779 INFO  [] - Got response from bizservice\n+2018-04-24 00:07:09,781 INFO  [ballerina.transactions] - Running 2-phase commit for transaction: 45936431-ae9e-43e0-bc54-4ab7769734da:1\n+2018-04-24 00:07:09,785 INFO  [ballerina.transactions] - Preparing remote participant: facb8e2e-dc82-4fd0-bd0f-c7e80369e423:1\n+2018-04-24 00:07:09,801 INFO  [ballerina.transactions] - Remote participant: facb8e2e-dc82-4fd0-bd0f-c7e80369e423:1 prepared\n+2018-04-24 00:07:09,804 INFO  [ballerina.transactions] - Notify(commit) remote participant: http://192.168.1.4:60366/balcoordinator/participant/2pc/1\n+2018-04-24 00:07:09,814 INFO  [ballerina.transactions] - Remote participant: facb8e2e-dc82-4fd0-bd0f-c7e80369e423:1 committed\n+2018-04-24 00:07:09,815 INFO  [] - Initiated transaction: 45936431-ae9e-43e0-bc54-4ab7769734da:1 committed\n+2018-04-24 00:07:09,818 INFO  [] - Sent response back to client\n \n Output from participant:\n \n-2018-04-23 23:42:54,316 INFO  [] - Received update stockquote request\n-2018-04-23 23:42:54,336 INFO  [ballerina.transactions] - Registering for transaction: 29d99da9-9998-4b0b-b5e4-6ea031f4a245:1 with coordinator: http://192.168.1.4:60137/balcoordinator/initiator/1/register\n-2018-04-23 23:42:54,607 INFO  [ballerina.transactions] - Registered with coordinator for transaction: 29d99da9-9998-4b0b-b5e4-6ea031f4a245\n-2018-04-23 23:42:54,609 INFO  [] - Update stock quote request received. symbol:GOOG, price:244.95873638912178\n-2018-04-23 23:42:54,643 INFO  [] - Sent response back to initiator\n-2018-04-23 23:42:54,662 INFO  [ballerina.transactions] - Prepare received for transaction: 29d99da9-9998-4b0b-b5e4-6ea031f4a245:1\n-2018-04-23 23:42:54,663 INFO  [ballerina.transactions] - Prepared transaction: 29d99da9-9998-4b0b-b5e4-6ea031f4a245\n-2018-04-23 23:42:54,675 INFO  [ballerina.transactions] - Notify(commit) received for transaction: 29d99da9-9998-4b0b-b5e4-6ea031f4a245:1\n+2018-04-24 00:07:09,433 INFO  [] - Received update stockquote request\n+2018-04-24 00:07:09,458 INFO  [ballerina.transactions] - Registering for transaction: 45936431-ae9e-43e0-bc54-4ab7769734da:1 with coordinator: http://192.168.1.4:60365/balcoordinator/initiator/1/register\n+2018-04-24 00:07:09,743 INFO  [ballerina.transactions] - Registered with coordinator for transaction: 45936431-ae9e-43e0-bc54-4ab7769734da\n+2018-04-24 00:07:09,746 INFO  [] - Update stock quote request received. symbol:GOOG, price:206.76007974989048\n+2018-04-24 00:07:09,777 INFO  [] - Sent response back to initiator\n+2018-04-24 00:07:09,794 INFO  [ballerina.transactions] - Prepare received for transaction: 45936431-ae9e-43e0-bc54-4ab7769734da:1\n+2018-04-24 00:07:09,795 INFO  [ballerina.transactions] - Prepared transaction: 45936431-ae9e-43e0-bc54-4ab7769734da\n+2018-04-24 00:07:09,809 INFO  [ballerina.transactions] - Notify(commit) received for transaction: 45936431-ae9e-43e0-bc54-4ab7769734da:1\n+2018-04-24 00:07:09,810 INFO  [] - Participated transaction: 45936431-ae9e-43e0-bc54-4ab7769734da:1 committed",
    "Removed broken url in read me": "diff --git a/README.md b/README.md\nindex 5e234e1468d..52fe84b4987 100644\n--- a/README.md\n+++ b/README.md\n@@ -34,8 +34,6 @@ For Unix/Linux\n \n The command line will display the URL you can use to access the Composer in your browser.\n \n-For complete instructions on creating your integrations and using the Composer, see the [Ballerina documentation](http://ballerinalang.org/docs/user-guide/0.8/quick-tour/#run-the-composer).\n-\n ## How to build\n The build process of the composer works on Maven and Node Package Manager(npm).\n ",
    "modify Java doc to improve readable": "diff --git a/skywalking-sniffer/skywalking-toolkit-activation/skywalking-toolkit-opentracing-activation/src/main/java/com/a/eye/skywalking/toolkit/activation/opentracing/span/interceptor/SpanSetTagInterceptor.java b/skywalking-sniffer/skywalking-toolkit-activation/skywalking-toolkit-opentracing-activation/src/main/java/com/a/eye/skywalking/toolkit/activation/opentracing/span/interceptor/SpanSetTagInterceptor.java\nindex 6be7711856..2eaec73a53 100644\n--- a/skywalking-sniffer/skywalking-toolkit-activation/skywalking-toolkit-opentracing-activation/src/main/java/com/a/eye/skywalking/toolkit/activation/opentracing/span/interceptor/SpanSetTagInterceptor.java\n+++ b/skywalking-sniffer/skywalking-toolkit-activation/skywalking-toolkit-opentracing-activation/src/main/java/com/a/eye/skywalking/toolkit/activation/opentracing/span/interceptor/SpanSetTagInterceptor.java\n@@ -54,13 +54,12 @@ public class SpanSetTagInterceptor implements InstanceMethodsAroundInterceptor {\n     }\n \n     /**\n-     * Check current tag is peer tag.\n+     * Check whether current tag is one of {@link Tags#PEER_HOSTNAME}, {@link Tags#PEER_HOST_IPV4} and {@link Tags#PEER_HOST_IPV6}.\n+     * If yes, will use the {@link com.a.eye.skywalking.trace.tag.Tags#PEER_HOST} as the key, instead of original key,\n+     * in {@link #adaptTag(String)}.\n      *\n-     * Skywalking put the tag value of {@link Tags#PEER_HOSTNAME}, {@link Tags#PEER_HOST_IPV4} and\n-     * {@link Tags#PEER_HOST_IPV6} into {@link com.a.eye.skywalking.trace.tag.Tags#PEER_HOST} which\n-     * facilitate analysis.\n-     *\n-     * @param key tag key\n+     * @param key of current tag\n+     * @return true if this tag is a host related.\n      */\n     private boolean isPeerTag(String key) {\n         return Tags.PEER_HOST_IPV4.equals(key) || Tags.PEER_HOST_IPV6.equals(key) || Tags.PEER_HOSTNAME.equals(key);",
    "Treat unknown fields as multi - line fields ( <issue_id> ) .": "diff --git a/src/main/java/org/jabref/gui/fieldeditors/FieldEditors.java b/src/main/java/org/jabref/gui/fieldeditors/FieldEditors.java\nindex f1f588faca..d44cb882aa 100644\n--- a/src/main/java/org/jabref/gui/fieldeditors/FieldEditors.java\n+++ b/src/main/java/org/jabref/gui/fieldeditors/FieldEditors.java\n@@ -90,14 +90,12 @@ public class FieldEditors {\n             return new PersonsEditor(field, suggestionProvider, preferences, fieldCheckers, isSingleLine);\n         } else if (StandardField.KEYWORDS.equals(field)) {\n             return new KeywordsEditor(field, suggestionProvider, fieldCheckers, preferences);\n-        } else if (fieldProperties.contains(FieldProperty.MULTILINE_TEXT)) {\n-            return new MultilineEditor(field, suggestionProvider, fieldCheckers, preferences);\n         } else if (field == InternalField.KEY_FIELD) {\n             return new BibtexKeyEditor(field, preferences, suggestionProvider, fieldCheckers, databaseContext, undoManager, dialogService);\n+        } else {\n+            // default\n+            return new SimpleEditor(field, suggestionProvider, fieldCheckers, preferences, isSingleLine);\n         }\n-\n-        // default\n-        return new SimpleEditor(field, suggestionProvider, fieldCheckers, preferences, isSingleLine);\n     }\n \n     @SuppressWarnings(\"unchecked\")\ndiff --git a/src/main/java/org/jabref/gui/fieldeditors/MultilineEditor.java b/src/main/java/org/jabref/gui/fieldeditors/MultilineEditor.java\ndeleted file mode 100644\nindex ac1323c973..0000000000\n--- a/src/main/java/org/jabref/gui/fieldeditors/MultilineEditor.java\n+++ /dev/null\n@@ -1,18 +0,0 @@\n-package org.jabref.gui.fieldeditors;\n-\n-import org.jabref.gui.autocompleter.AutoCompleteSuggestionProvider;\n-import org.jabref.logic.integrity.FieldCheckers;\n-import org.jabref.model.entry.field.Field;\n-import org.jabref.preferences.JabRefPreferences;\n-\n-public class MultilineEditor extends SimpleEditor implements FieldEditorFX {\n-\n-    public MultilineEditor(Field field, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n-        super(field, suggestionProvider, fieldCheckers, preferences);\n-    }\n-\n-    @Override\n-    public double getWeight() {\n-        return 4;\n-    }\n-}\ndiff --git a/src/main/java/org/jabref/model/entry/field/FieldFactory.java b/src/main/java/org/jabref/model/entry/field/FieldFactory.java\nindex 8c41d8f210..a5086283f6 100644\n--- a/src/main/java/org/jabref/model/entry/field/FieldFactory.java\n+++ b/src/main/java/org/jabref/model/entry/field/FieldFactory.java\n@@ -139,7 +139,13 @@ public class FieldFactory {\n         return defaultGeneralFields;\n     }\n \n+    // TODO: Move somewhere more appropriate and make user-configurable\n     public static boolean isSingleLineField(final Field field) {\n-        return !field.getProperties().contains(FieldProperty.MULTILINE_TEXT);\n+        if (field.equals(StandardField.ABSTRACT) || field.equals(StandardField.COMMENT)) {\n+            return false;\n+        }\n+\n+        // Treat unknown fields as multi-line fields\n+        return !(field instanceof UnknownField);\n     }\n }\ndiff --git a/src/main/java/org/jabref/model/entry/field/FieldProperty.java b/src/main/java/org/jabref/model/entry/field/FieldProperty.java\nindex c774c6880e..df6603868b 100644\n--- a/src/main/java/org/jabref/model/entry/field/FieldProperty.java\n+++ b/src/main/java/org/jabref/model/entry/field/FieldProperty.java\n@@ -13,7 +13,6 @@ public enum FieldProperty {\n     JOURNAL_NAME,\n     LANGUAGE,\n     MONTH,\n-    MULTILINE_TEXT,\n     MULTIPLE_ENTRY_LINK,\n     NUMERIC,\n     PAGES,\ndiff --git a/src/main/java/org/jabref/model/entry/field/StandardField.java b/src/main/java/org/jabref/model/entry/field/StandardField.java\nindex 6acf86dfbc..2b3c7ebf53 100644\n--- a/src/main/java/org/jabref/model/entry/field/StandardField.java\n+++ b/src/main/java/org/jabref/model/entry/field/StandardField.java\n@@ -11,7 +11,7 @@ import java.util.Set;\n  */\n public enum StandardField implements Field {\n \n-    ABSTRACT(\"abstract\", FieldProperty.MULTILINE_TEXT),\n+    ABSTRACT(\"abstract\"),\n     ADDENDUM(\"addendum\"),\n     ADDRESS(\"address\"),\n     AFTERWORD(\"afterword\", FieldProperty.PERSON_NAMES),\n@@ -28,7 +28,7 @@ public enum StandardField implements Field {\n     BOOKTITLEADDON(\"booktitleaddon\"),\n     CHAPTER(\"chapter\"),\n     COMMENTATOR(\"commentator\", FieldProperty.PERSON_NAMES),\n-    COMMENT(\"comment\", FieldProperty.MULTILINE_TEXT),\n+    COMMENT(\"comment\"),\n     CROSSREF(\"crossref\", FieldProperty.SINGLE_ENTRY_LINK),\n     DATE(\"date\", FieldProperty.DATE),\n     DAY(\"day\"),",
    "Add cross - references to Annotations section of User Guide .": "diff --git a/documentation/src/docs/asciidoc/user-guide/writing-tests.adoc b/documentation/src/docs/asciidoc/user-guide/writing-tests.adoc\nindex 133a7a62a4..0b134cc721 100644\n--- a/documentation/src/docs/asciidoc/user-guide/writing-tests.adoc\n+++ b/documentation/src/docs/asciidoc/user-guide/writing-tests.adoc\n@@ -27,20 +27,21 @@ module.\n | `@TestTemplate`          | Denotes that a method is a <<writing-tests-test-templates, template for test cases>> designed to be invoked multiple times depending on the number of invocation contexts returned by the registered <<extensions-test-templates, providers>>. Such methods are _inherited_ unless they are _overridden_.\n | `@TestMethodOrder`       | Used to configure the <<writing-tests-test-execution-order, test method execution order>> for the annotated test class; similar to JUnit 4's `@FixMethodOrder`. Such annotations are _inherited_.\n | `@TestInstance`          | Used to configure the <<writing-tests-test-instance-lifecycle, test instance lifecycle>> for the annotated test class. Such annotations are _inherited_.\n-| `@DisplayName`           | Declares a custom display name for the test class or test method. Such annotations are not _inherited_.\n-| `@DisplayNameGeneration` | Declares a custom display name generator for the test class. Such annotations are _inherited_.\n+| `@DisplayName`           | Declares a custom <<writing-tests-display-names,display name>> for the test class or test method. Such annotations are not _inherited_.\n+| `@DisplayNameGeneration` | Declares a custom <<writing-tests-display-name-generator,display name generator>> for the test class. Such annotations are _inherited_.\n | `@BeforeEach`            | Denotes that the annotated method should be executed _before_ *each* `@Test`, `@RepeatedTest`, `@ParameterizedTest`, or `@TestFactory` method in the current class; analogous to JUnit 4's `@Before`. Such methods are _inherited_ unless they are _overridden_.\n | `@AfterEach`             | Denotes that the annotated method should be executed _after_ *each* `@Test`, `@RepeatedTest`, `@ParameterizedTest`, or `@TestFactory` method in the current class; analogous to JUnit 4's `@After`. Such methods are _inherited_ unless they are _overridden_.\n | `@BeforeAll`             | Denotes that the annotated method should be executed _before_ *all* `@Test`, `@RepeatedTest`, `@ParameterizedTest`, and `@TestFactory` methods in the current class; analogous to JUnit 4's `@BeforeClass`. Such methods are _inherited_ (unless they are _hidden_ or _overridden_) and must be `static` (unless the \"per-class\" <<writing-tests-test-instance-lifecycle, test instance lifecycle>> is used).\n | `@AfterAll`              | Denotes that the annotated method should be executed _after_ *all* `@Test`, `@RepeatedTest`, `@ParameterizedTest`, and `@TestFactory` methods in the current class; analogous to JUnit 4's `@AfterClass`. Such methods are _inherited_ (unless they are _hidden_ or _overridden_) and must be `static` (unless the \"per-class\" <<writing-tests-test-instance-lifecycle, test instance lifecycle>> is used).\n-| `@Nested`                | Denotes that the annotated class is a nested, non-static test class. `@BeforeAll` and `@AfterAll` methods cannot be used directly in a `@Nested` test class unless the \"per-class\" <<writing-tests-test-instance-lifecycle, test instance lifecycle>> is used. Such annotations are not _inherited_.\n-| `@Tag`                   | Used to declare _tags_ for filtering tests, either at the class or method level; analogous to test groups in TestNG or Categories in JUnit 4. Such annotations are _inherited_ at the class level but not at the method level.\n-| `@Disabled`              | Used to _disable_ a test class or test method; analogous to JUnit 4's `@Ignore`. Such annotations are not _inherited_.\n-| `@ExtendWith`            | Used to register custom <<extensions,extensions>>. Such annotations are _inherited_.\n+| `@Nested`                | Denotes that the annotated class is a non-static <<writing-tests-nested,nested test class>>. `@BeforeAll` and `@AfterAll` methods cannot be used directly in a `@Nested` test class unless the \"per-class\" <<writing-tests-test-instance-lifecycle, test instance lifecycle>> is used. Such annotations are not _inherited_.\n+| `@Tag`                   | Used to declare <<writing-tests-tagging-and-filtering,tags for filtering tests>>, either at the class or method level; analogous to test groups in TestNG or Categories in JUnit 4. Such annotations are _inherited_ at the class level but not at the method level.\n+| `@Disabled`              | Used to <<writing-tests-disabling,disable>> a test class or test method; analogous to JUnit 4's `@Ignore`. Such annotations are not _inherited_.\n+| `@ExtendWith`            | Used to <<extensions-registration-declarative,register extensions declaratively>>. Such annotations are _inherited_.\n+| `@RegisterExtension`     | Used to <<extensions-registration-programmatic,register extensions programmatically>> via fields. Such fields are _inherited_ unless they are _shadowed_.\n |===\n \n-Methods annotated with `@Test`, `@TestTemplate`, `@RepeatedTest`, `@BeforeAll`,\n-`@AfterAll`, `@BeforeEach`, or `@AfterEach` annotations must not return a value.\n+Any method annotated with `@Test`, `@TestTemplate`, `@RepeatedTest`, `@ParameterizedTest`,\n+`@BeforeAll`, `@AfterAll`, `@BeforeEach`, or `@AfterEach` must not return a value.\n \n WARNING: Some annotations may currently be _experimental_. Consult the table in\n <<api-evolution-experimental-apis>> for details.\n@@ -65,9 +66,10 @@ include::{testDir}/example/Fast.java[tags=user_guide]\n [[writing-tests-classes-and-methods]]\n === Test Classes and Methods\n \n-A _test method_ is any instance method that is directly or meta-annotated with `@Test`,\n-`@RepeatedTest`, `@ParameterizedTest`, `@TestFactory`, or `@TestTemplate`. A _test class_\n-is any top level or static member class that contains at least one test method.\n+A _test method_ is any instance method that is directly annotated or meta-annotated with\n+`@Test`, `@RepeatedTest`, `@ParameterizedTest`, `@TestFactory`, or `@TestTemplate`. A\n+_test class_ is any top-level or `static` member class that contains at least one _test\n+method_.\n \n [source,java,indent=0]\n .A standard test class",
    "Move more scope tests into compile - testing style tests .": "diff --git a/compiler/src/it/multiple-scopes/invoker.properties b/compiler/src/it/multiple-scopes/invoker.properties\ndeleted file mode 100644\nindex fdd3d204..00000000\n--- a/compiler/src/it/multiple-scopes/invoker.properties\n+++ /dev/null\n@@ -1 +0,0 @@\n-invoker.buildResult=failure\ndiff --git a/compiler/src/it/multiple-scopes/pom.xml b/compiler/src/it/multiple-scopes/pom.xml\ndeleted file mode 100644\nindex a45735a2..00000000\n--- a/compiler/src/it/multiple-scopes/pom.xml\n+++ /dev/null\n@@ -1,51 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-  Copyright (C) 2013 Google, Inc.\n-  Copyright (C) 2013 Square, Inc.\n-\n-  Licensed under the Apache License, Version 2.0 (the \"License\");\n-  you may not use this file except in compliance with the License.\n-  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<project\n-    xmlns=\"http://maven.apache.org/POM/4.0.0\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n-  <modelVersion>4.0.0</modelVersion>\n-  <groupId>com.example.dagger.tests</groupId>\n-  <artifactId>multiple-scopes</artifactId>\n-  <version>HEAD-SNAPSHOT</version>\n-  <dependencies>\n-    <dependency>\n-      <groupId>@dagger.groupId@</groupId>\n-      <artifactId>dagger</artifactId>\n-      <version>@dagger.version@</version>\n-    </dependency>\n-    <dependency>\n-      <groupId>@dagger.groupId@</groupId>\n-      <artifactId>dagger-compiler</artifactId>\n-      <version>@dagger.version@</version>\n-      <optional>true</optional>\n-    </dependency>\n-  </dependencies>\n-  <build>\n-    <plugins>\n-      <plugin>\n-        <artifactId>maven-compiler-plugin</artifactId>\n-        <version>3.1</version>\n-        <configuration>\n-          <source>1.5</source>\n-          <target>1.5</target>\n-        </configuration>\n-      </plugin>\n-    </plugins>\n-  </build>\n-</project>\ndiff --git a/compiler/src/it/multiple-scopes/src/main/java/test/TestApp.java b/compiler/src/it/multiple-scopes/src/main/java/test/TestApp.java\ndeleted file mode 100644\nindex 06b36a6d..00000000\n--- a/compiler/src/it/multiple-scopes/src/main/java/test/TestApp.java\n+++ /dev/null\n@@ -1,51 +0,0 @@\n-/*\n- * Copyright (C) 2013 Google, Inc.\n- * Copyright (C) 2013 Square, Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package test;\n-\n-import dagger.Module;\n-import dagger.Provides;\n-import java.lang.annotation.Retention;\n-import javax.inject.Inject;\n-import javax.inject.Scope;\n-import javax.inject.Singleton;\n-\n-import static java.lang.annotation.RetentionPolicy.RUNTIME;;\n-\n-class TestApp {\n-\n-  @Singleton\n-  @CustomScope\n-  static class InjectableClass {\n-    @Inject\n-    String string;\n-  }\n-\n-  @Module(injects = InjectableClass.class)\n-  static class TestModule {\n-    @Singleton\n-    @CustomScope\n-    @Provides\n-    String string() {\n-      return \"string\";\n-    }\n-  }\n-\n-  @Scope\n-  @Retention(value = RUNTIME)\n-  public @interface CustomScope {\n-  }\n-}\ndiff --git a/compiler/src/it/multiple-scopes/verify.bsh b/compiler/src/it/multiple-scopes/verify.bsh\ndeleted file mode 100644\nindex 78491d57..00000000\n--- a/compiler/src/it/multiple-scopes/verify.bsh\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-import dagger.testing.it.BuildLogValidator;\n-import java.io.File;\n-\n-File buildLog = new File(basedir, \"build.log\");\n-new BuildLogValidator().assertHasText(buildLog, new String[]{\n-    \"Only one scoping annotation is allowed per element: test.TestApp.InjectableClass\"});\n-new BuildLogValidator().assertHasText(buildLog, new String[]{\n-    \"Only one scoping annotation is allowed per element: test.TestApp.TestModule.string()\"});\ndiff --git a/compiler/src/test/java/dagger/tests/integration/validation/ScopeAnnotationUseTest.java b/compiler/src/test/java/dagger/tests/integration/validation/ScopeAnnotationUseTest.java\nindex 2ac52ef0..88d4ff5f 100644\n--- a/compiler/src/test/java/dagger/tests/integration/validation/ScopeAnnotationUseTest.java\n+++ b/compiler/src/test/java/dagger/tests/integration/validation/ScopeAnnotationUseTest.java\n@@ -24,7 +24,9 @@ import org.junit.runner.RunWith;\n import org.junit.runners.JUnit4;\n \n import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;\n+import static com.google.testing.compile.JavaSourcesSubjectFactory.javaSources;\n import static dagger.tests.integration.ProcessorTestUtils.daggerProcessors;\n+import static java.util.Arrays.asList;\n import static org.truth0.Truth.ASSERT;\n \n /**\n@@ -103,6 +105,38 @@ public class ScopeAnnotationUseTest {\n         .withErrorContaining(\"intParam\").in(sourceFile).onLine(7).atColumn(49);\n   }\n \n+  @Test public void compileFailsWithMultipleScopeAnnotations() {\n+    JavaFileObject annotation = JavaFileObjects.forSourceString(\"MyScope\", Joiner.on(\"\\n\").join(\n+        \"import java.lang.annotation.Retention;\",\n+        \"import javax.inject.Scope;\",\n+        \"import static java.lang.annotation.RetentionPolicy.RUNTIME;\",\n+        \"@Scope @Retention(RUNTIME) public @interface MyScope { }\"));\n+\n+    JavaFileObject module = JavaFileObjects.forSourceString(\"MyModule\", Joiner.on(\"\\n\").join(\n+        \"import dagger.Module;\",\n+        \"import dagger.Provides;\",\n+        \"import javax.inject.Singleton;\",\n+        \"@Module(library = true, injects = Injectable.class)\",\n+        \"class MyModule {\",\n+        \"  @Provides @Singleton @MyScope String method() { return \\\"\\\"; }\",\n+        \"}\"));\n+\n+    JavaFileObject injectable = JavaFileObjects.forSourceString(\"Test\", Joiner.on(\"\\n\").join(\n+        \"import javax.inject.Inject;\",\n+        \"import javax.inject.Singleton;\",\n+        \"@Singleton @MyScope\",\n+        \"class Injectable {\",\n+        \"  @Inject String string;\",\n+        \"}\"));\n+\n+    String error = \"Only one scoping annotation is allowed per element: \";\n+\n+    ASSERT.about(javaSources()).that(asList(annotation, module, injectable))\n+        .processedWith(daggerProcessors()).failsToCompile()\n+        .withErrorContaining(error + \"MyModule.method()\").in(module).onLine(6).atColumn(40).and()\n+        .withErrorContaining(error + \"Injectable\").in(injectable).onLine(4).atColumn(1);\n+  }\n+\n   @Test public void compileFailsWithScopeOnConstructor() {\n     JavaFileObject sourceFile = JavaFileObjects.forSourceString(\"Test\", Joiner.on(\"\\n\").join(\n         \"import dagger.Module;\",",
    "added support for computing seconds": "diff --git a/logback-core/src/main/java/ch/qos/logback/core/util/TimeUtil.java b/logback-core/src/main/java/ch/qos/logback/core/util/TimeUtil.java\nindex 71e7703c4..030e0623f 100644\n--- a/logback-core/src/main/java/ch/qos/logback/core/util/TimeUtil.java\n+++ b/logback-core/src/main/java/ch/qos/logback/core/util/TimeUtil.java\n@@ -5,7 +5,16 @@ import java.util.Date;\n \r\n public class TimeUtil {\r\n \r\n-  static long computeStartOfNextDay(long now) {\r\n+  \r\n+  public static long computeStartOfNextSecond(long now) {\r\n+    Calendar cal = Calendar.getInstance();\r\n+    cal.setTime(new Date(now));\r\n+    cal.set(Calendar.MILLISECOND, 0);\r\n+    cal.add(Calendar.SECOND, 1);\r\n+    return cal.getTime().getTime();\r\n+  }\r\n+  \r\n+  public static long computeStartOfNextDay(long now) {\r\n     Calendar cal = Calendar.getInstance();\r\n     cal.setTime(new Date(now));\r\n \r\n@@ -17,7 +26,7 @@ public class TimeUtil {\n     return cal.getTime().getTime();\r\n   }\r\n   \r\n-  static long computeStartOfNextWeek(long now) {\r\n+  public static long computeStartOfNextWeek(long now) {\r\n     Calendar cal = Calendar.getInstance();\r\n     cal.setTime(new Date(now));\r\n     \r\n@@ -30,7 +39,7 @@ public class TimeUtil {\n     return cal.getTime().getTime();\r\n   }\r\n \r\n-  static long computeStartOfNextMonth(long now) {\r\n+  public static long computeStartOfNextMonth(long now) {\r\n     Calendar cal = Calendar.getInstance();\r\n     cal.setTime(new Date(now));\r\n \r\ndiff --git a/logback-core/src/test/java/ch/qos/logback/core/util/TimeUtilTest.java b/logback-core/src/test/java/ch/qos/logback/core/util/TimeUtilTest.java\nindex f4053f572..ed3293b2c 100644\n--- a/logback-core/src/test/java/ch/qos/logback/core/util/TimeUtilTest.java\n+++ b/logback-core/src/test/java/ch/qos/logback/core/util/TimeUtilTest.java\n@@ -19,6 +19,15 @@ public class TimeUtilTest extends TestCase {\n     super.tearDown();\r\n   }\r\n \r\n+  public void testSecond() {\r\n+    // Mon Nov 20 18:05:17,522 CET 2006\r\n+    long now = 1164042317522L;\r\n+    // Mon Nov 20 18:06:00,000 CET 2006\r\n+    long expected = 1164042318000L;\r\n+    long computed = TimeUtil.computeStartOfNextSecond(now);\r\n+    assertEquals(expected - now, 478); \r\n+    assertEquals(expected, computed);\r\n+  }\r\n   \r\n   public void testDay() {\r\n     // Mon Nov 20 18:05:17 CET 2006\r",
    "skip azure cache only if explicitly defined ; not defined is expanded : eq ( \\' \\' , \\' false \\' )": "diff --git a/azure-pipelines.yml b/azure-pipelines.yml\nindex 6403e38f7..affb9146f 100644\n--- a/azure-pipelines.yml\n+++ b/azure-pipelines.yml\n@@ -155,7 +155,7 @@ steps:\n       maven\n     path: $(MAVEN_CACHE_FOLDER)\n   displayName: Cache Maven local repo\n-  condition: eq(variables.SKIP_CACHE, 'false')\n+  condition: ne(variables.SKIP_CACHE, 'true')\n \n - bash: |\n     set -e",
    "improve performance": "diff --git a/src/main/java/com/alibaba/fastjson/serializer/SerializeWriter.java b/src/main/java/com/alibaba/fastjson/serializer/SerializeWriter.java\nindex 7747d281c..32278fcbb 100644\n--- a/src/main/java/com/alibaba/fastjson/serializer/SerializeWriter.java\n+++ b/src/main/java/com/alibaba/fastjson/serializer/SerializeWriter.java\n@@ -641,7 +641,7 @@ public final class SerializeWriter extends Writer {\n         if (text == null) {\r\n             writeNull();\r\n             if (seperator != 0) {\r\n-            \twrite(seperator);\r\n+                write(seperator);\r\n             }\r\n             return;\r\n         }\r\n@@ -755,6 +755,7 @@ public final class SerializeWriter extends Writer {\n \r\n         int specialCount = 0;\r\n         int lastSpecialIndex = -1;\r\n+        int firstSpecialIndex = -1;\r\n         char lastSpecial = '\\0';\r\n         if (checkSpecial) {\r\n             for (int i = start; i < end; ++i) {\r\n@@ -778,6 +779,10 @@ public final class SerializeWriter extends Writer {\n                     specialCount++;\r\n                     lastSpecialIndex = i;\r\n                     lastSpecial = ch;\r\n+\r\n+                    if (firstSpecialIndex == -1) {\r\n+                        firstSpecialIndex = i;\r\n+                    }\r\n                 }\r\n             }\r\n         }\r\n@@ -793,21 +798,20 @@ public final class SerializeWriter extends Writer {\n             buf[lastSpecialIndex] = '\\\\';\r\n             buf[++lastSpecialIndex] = replaceChars[(int) lastSpecial];\r\n         } else if (specialCount > 1) {\r\n-            System.arraycopy(buf, lastSpecialIndex + 1, buf, lastSpecialIndex + 2, end - lastSpecialIndex - 1);\r\n-            buf[lastSpecialIndex] = '\\\\';\r\n-            buf[++lastSpecialIndex] = replaceChars[(int) lastSpecial];\r\n-            end++;\r\n-            for (int i = lastSpecialIndex - 2; i >= start; --i) {\r\n-                char ch = buf[i];\r\n+            int textIndex = firstSpecialIndex - start;\r\n+            int bufIndex = firstSpecialIndex;\r\n+            for (int i = textIndex; i < text.length(); ++i) {\r\n+                char ch = text.charAt(i);\r\n \r\n                 if (ch < CharTypes.specicalFlags_doubleQuotes.length\r\n                     && CharTypes.specicalFlags_doubleQuotes[ch] //\r\n                     || (ch == '\\t' && isEnabled(SerializerFeature.WriteTabAsSpecial))\r\n                     || (ch == '/' && isEnabled(SerializerFeature.WriteSlashAsSpecial))) {\r\n-                    System.arraycopy(buf, i + 1, buf, i + 2, end - i - 1);\r\n-                    buf[i] = '\\\\';\r\n-                    buf[i + 1] = replaceChars[(int) ch];\r\n+                    buf[bufIndex++] = '\\\\';\r\n+                    buf[bufIndex++] = replaceChars[(int) ch];\r\n                     end++;\r\n+                } else {\r\n+                    buf[bufIndex++] = ch;\r\n                 }\r\n             }\r\n         }\r\n@@ -1187,13 +1191,15 @@ public final class SerializeWriter extends Writer {\n                     expandCapacity(newcount);\r\n                 }\r\n                 count = newcount;\r\n-                \r\n+\r\n                 if (specialCount == 1) {\r\n- ",
    "Rename method to better indicate its function": "diff --git a/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/athenz/filter/UserAuthWithAthenzPrincipalFilter.java b/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/athenz/filter/UserAuthWithAthenzPrincipalFilter.java\nindex 206c1adfbac..f16d3a42322 100644\n--- a/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/athenz/filter/UserAuthWithAthenzPrincipalFilter.java\n+++ b/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/athenz/filter/UserAuthWithAthenzPrincipalFilter.java\n@@ -46,7 +46,7 @@ public class UserAuthWithAthenzPrincipalFilter extends AthenzPrincipalFilter {\n     public void filter(DiscFilterRequest request, ResponseHandler responseHandler) {\n         if (request.getMethod().equals(\"OPTIONS\")) return; // Skip authentication on OPTIONS - required for Javascript CORS\n \n-        switch (fromHttpRequest(request)) {\n+        switch (getUserAuthenticationResult(request)) {\n             case USER_COOKIE_MISSING:\n             case USER_COOKIE_ALTERNATIVE_MISSING:\n                 super.filter(request, responseHandler); // Cookie-based authentication failed, delegate to Athenz\n@@ -60,7 +60,7 @@ public class UserAuthWithAthenzPrincipalFilter extends AthenzPrincipalFilter {\n         }\n     }\n \n-    private UserAuthenticationResult fromHttpRequest(DiscFilterRequest request) {\n+    private UserAuthenticationResult getUserAuthenticationResult(DiscFilterRequest request) {\n         if (!request.containsAttribute(userAuthenticationPassThruAttribute)) {\n             throw new IllegalStateException(\"User authentication filter passthru attribute missing\");\n         }",
    "remove isActive from AppState interface .": "diff --git a/engine/src/core/com/jme3/app/state/AppState.java b/engine/src/core/com/jme3/app/state/AppState.java\nindex 77450b1a0..d94a35f6f 100644\n--- a/engine/src/core/com/jme3/app/state/AppState.java\n+++ b/engine/src/core/com/jme3/app/state/AppState.java\n@@ -63,26 +63,6 @@ public interface AppState {\n      */\n     public boolean isInitialized();\n \n-    /**\n-     * Use setEnabled() instead.\n-     * Activate or deactivate the functionality of the <code>AppState</code>.\n-     * The effect of this call depends on implementation. An \n-     * <code>AppState</code> starts as being active by default.\n-     * \n-     * @param active activate the AppState or not.\n-     */\n-    @Deprecated\n-    public void setActive(boolean active);\n-\n-    /**\n-     * Use isEnabled() instead.\n-     * @return True if the <code>AppState</code> is active, false otherwise.\n-     * \n-     * @see AppState#setActive(boolean)\n-     */\n-    @Deprecated\n-    public boolean isActive();\n-\n     /**\n      * Enable or disable the functionality of the <code>AppState</code>.\n      * The effect of this call depends on implementation. An ",
    "fix the bug for non - recurring schedules to be scheduled correctly": "diff --git a/src/web/js/azkaban.schedule.panel.view.js b/src/web/js/azkaban.schedule.panel.view.js\nindex e445a5e9..af81c0c4 100644\n--- a/src/web/js/azkaban.schedule.panel.view.js\n+++ b/src/web/js/azkaban.schedule.panel.view.js\n@@ -54,7 +54,7 @@ azkaban.SchedulePanelView= Backbone.View.extend({\n   \t console.log(\"Creating schedule for \"+projectName+\".\"+scheduleData.flow);\n \tvar scheduleTime = $('#hour').val() + \",\" + $('#minutes').val() + \",\" + $('#am_pm').val() + \",\" + $('#timezone').val();\n \tvar scheduleDate = $('#datepicker').val();\n-\tvar is_recurring = $('#is_recurring').val();\n+\tvar is_recurring = document.getElementById('is_recurring').checked ? 'on' : 'off'; \n \tvar period = $('#period').val() + $('#period_units').val();\n \t\n \tscheduleData.ajax = \"scheduleFlow\";",
    "Create compat ripples that are based on MaterialShapeDrawable and only draw when enabled and in the pressed , focused , or hovered states . . PiperOrigin - RevId : 253783048": "diff --git a/lib/java/com/google/android/material/ripple/RippleDrawableCompat.java b/lib/java/com/google/android/material/ripple/RippleDrawableCompat.java\nnew file mode 100644\nindex 000000000..fa18a20c6\n--- /dev/null\n+++ b/lib/java/com/google/android/material/ripple/RippleDrawableCompat.java\n@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2019 The Android Open Source Project\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.material.ripple;\n+\n+import android.graphics.Canvas;\n+import androidx.annotation.RestrictTo;\n+import androidx.annotation.RestrictTo.Scope;\n+import com.google.android.material.shape.MaterialShapeDrawable;\n+import com.google.android.material.shape.ShapeAppearanceModel;\n+\n+/**\n+ * A compat {@link android.graphics.drawable.Drawable} to be used pre-Lollipop for drawing an\n+ * overlay on top of a background for pressed, focused, and hovered states.\n+ *\n+ * <p>This Drawable is a {@link MaterialShapeDrawable} so that it can be shaped to match a\n+ * MaterialShapeDrawable background.\n+ *\n+ * <p>Unlike the framework {@link android.graphics.drawable.RippleDrawable}, this will <b>not</b>\n+ * apply different alphas for pressed, focused, and hovered states and it does not provide a ripple\n+ * animation for the pressed state.\n+ */\n+@RestrictTo(Scope.LIBRARY_GROUP)\n+public class RippleDrawableCompat extends MaterialShapeDrawable {\n+\n+  /**\n+   * Whether this compat ripple should be drawn. True when enabled and (pressed, focused, or\n+   * enabled).\n+   */\n+  private boolean shouldDrawRipple = false;\n+\n+  /**\n+   * Creates a {@link RippleDrawableCompat} with the given shape.\n+   *\n+   * @param shapeAppearanceModel the {@link ShapeAppearanceModel} containing the path that will be\n+   *     rendered in this drawable.\n+   */\n+  public RippleDrawableCompat(ShapeAppearanceModel shapeAppearanceModel) {\n+    super(shapeAppearanceModel);\n+  }\n+\n+  @Override\n+  public void draw(Canvas canvas) {\n+    if (shouldDrawRipple) {\n+      super.draw(canvas);\n+    }\n+  }\n+\n+  @Override\n+  protected boolean onStateChange(int[] stateSet) {\n+    final boolean changed = super.onStateChange(stateSet);\n+    boolean enabled = false;\n+    boolean pressed = false;\n+    boolean focused = false;\n+    boolean hovered = false;\n+\n+    for (int state : stateSet) {\n+      if (state == android.R.attr.state_enabled) {\n+        enabled = true;\n+      } else if (state == android.R.attr.state_focused) {\n+        focused = true;\n+      } else if (state == android.R.attr.state_pressed) {\n+        pressed = true;\n+      } else if (state == android.R.attr.state_hovered) {\n+        hovered = true;\n+      }\n+    }\n+    shouldDrawRipple = enabled && (pressed || focused || hovered);\n+    return changed;\n+  }\n+}",
    "prepare release v6 . 8 . 0": "diff --git a/archetype/pom.xml b/archetype/pom.xml\nindex 5e33c96af..e410f6e1d 100644\n--- a/archetype/pom.xml\n+++ b/archetype/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-archetype</artifactId>\ndiff --git a/cdi2/pom.xml b/cdi2/pom.xml\nindex 0012b2a21..02b83eeba 100644\n--- a/cdi2/pom.xml\n+++ b/cdi2/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-cdi2</artifactId>\ndiff --git a/compatibility/pom.xml b/compatibility/pom.xml\nindex ae5f82491..3935f9b87 100644\n--- a/compatibility/pom.xml\n+++ b/compatibility/pom.xml\n@@ -3,7 +3,7 @@\n     <parent>\n         <artifactId>cucumber-jvm</artifactId>\n         <groupId>io.cucumber</groupId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n     <modelVersion>4.0.0</modelVersion>\n \ndiff --git a/core/pom.xml b/core/pom.xml\nindex 876e47950..4fd7217ed 100644\n--- a/core/pom.xml\n+++ b/core/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-core</artifactId>\ndiff --git a/deltaspike/pom.xml b/deltaspike/pom.xml\nindex e5bc753eb..d3d23f0a1 100644\n--- a/deltaspike/pom.xml\n+++ b/deltaspike/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-deltaspike</artifactId>\ndiff --git a/docstring/pom.xml b/docstring/pom.xml\nindex 1a00509b1..019fdc25f 100644\n--- a/docstring/pom.xml\n+++ b/docstring/pom.xml\n@@ -3,7 +3,7 @@\n     <parent>\n         <artifactId>cucumber-jvm</artifactId>\n         <groupId>io.cucumber</groupId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n     <modelVersion>4.0.0</modelVersion>\n \ndiff --git a/examples/java-calculator-junit5/pom.xml b/examples/java-calculator-junit5/pom.xml\nindex 5f904e979..5d662a037 100644\n--- a/examples/java-calculator-junit5/pom.xml\n+++ b/examples/java-calculator-junit5/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-examples</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>java-calculator-junit5</artifactId>\ndiff --git a/examples/java-calculator-testng/pom.xml b/examples/java-calculator-testng/pom.xml\nindex 77bfff816..516f2242b 100644\n--- a/examples/java-calculator-testng/pom.xml\n+++ b/examples/java-calculator-testng/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-examples</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>java-calculator-testng</artifactId>\ndiff --git a/examples/java-calculator/pom.xml b/examples/java-calculator/pom.xml\nindex 4e3ae96f7..cdab410f1 100644\n--- a/examples/java-calculator/pom.xml\n+++ b/examples/java-calculator/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-examples</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>java-calculator</artifactId>\ndiff --git a/examples/java-wicket/java-wicket-main/pom.xml b/examples/java-wicket/java-wicket-main/pom.xml\nindex fb2b31489..68bb834a0 100644\n--- a/examples/java-wicket/java-wicket-main/pom.xml\n+++ b/examples/java-wicket/java-wicket-main/pom.xml\n@@ -3,7 +3,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>java-wicket</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n     <artifactId>java-wicket-main</artifactId>\n     <name>Examples: Wicket application</name>\ndiff --git a/examples/java-wicket/java-wicket-test/pom.xml b/examples/java-wicket/java-wicket-test/pom.xml\nindex 66f5caab2..245ef92a8 100644\n--- a/examples/java-wicket/java-wicket-test/pom.xml\n+++ b/examples/java-wicket/java-wicket-test/pom.xml\n@@ -3,7 +3,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>java-wicket</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n     <artifactId>java-wicket-test</artifactId>\n     <name>Examples: Wicket application tested with Selenium</name>\ndiff --git a/examples/java-wicket/pom.xml b/examples/java-wicket/pom.xml\nindex f272607b9..960e8debe 100644\n--- a/examples/java-wicket/pom.xml\n+++ b/examples/java-wicket/pom.xml\n@@ -3,7 +3,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-examples</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n     <artifactId>java-wicket</artifactId>\n     <packaging>pom</packaging>\ndiff --git a/examples/java8-calculator/pom.xml b/examples/java8-calculator/pom.xml\nindex bb8d675ee..40f217915 100644\n--- a/examples/java8-calculator/pom.xml\n+++ b/examples/java8-calculator/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-examples</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>java8-calculator</artifactId>\ndiff --git a/examples/pom.xml b/examples/pom.xml\nindex 85fa5437d..14e056746 100644\n--- a/examples/pom.xml\n+++ b/examples/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-examples</artifactId>\ndiff --git a/examples/spring-txn/pom.xml b/examples/spring-txn/pom.xml\nindex 2041c3b9a..a1e9ca19d 100644\n--- a/examples/spring-txn/pom.xml\n+++ b/examples/spring-txn/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-examples</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>spring-txn</artifactId>\ndiff --git a/gherkin-messages/pom.xml b/gherkin-messages/pom.xml\nindex 444064753..fadd61672 100644\n--- a/gherkin-messages/pom.xml\n+++ b/gherkin-messages/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <properties>\ndiff --git a/gherkin/pom.xml b/gherkin/pom.xml\nindex 05a787fa9..cd8ac6110 100644\n--- a/gherkin/pom.xml\n+++ b/gherkin/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <properties>\ndiff --git a/guice/pom.xml b/guice/pom.xml\nindex 2759e7881..bcb1a27ec 100644\n--- a/guice/pom.xml\n+++ b/guice/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-guice</artifactId>\ndiff --git a/jakarta-cdi/pom.xml b/jakarta-cdi/pom.xml\nindex 2b97ad3ae..03730ceff 100644\n--- a/jakarta-cdi/pom.xml\n+++ b/jakarta-cdi/pom.xml\n@@ -12,7 +12,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-jakarta-cdi</artifactId>\ndiff --git a/java/pom.xml b/java/pom.xml\nindex 31a0ea41b..075fb4163 100644\n--- a/java/pom.xml\n+++ b/java/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-java</artifactId>\ndiff --git a/java8/pom.xml b/java8/pom.xml\nindex 7e14f3bad..13e45bc1e 100644\n--- a/java8/pom.xml\n+++ b/java8/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-java8</artifactId>\ndiff --git a/junit-platform-engine/pom.xml b/junit-platform-engine/pom.xml\nindex ea6c769e3..ad244c077 100644\n--- a/junit-platform-engine/pom.xml\n+++ b/junit-platform-engine/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-junit-platform-engine</artifactId>\ndiff --git a/junit/pom.xml b/junit/pom.xml\nindex 968b269be..ef2875f78 100644\n--- a/junit/pom.xml\n+++ b/junit/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-junit</artifactId>\ndiff --git a/kotlin-java8/pom.xml b/kotlin-java8/pom.xml\nindex e1292dd55..8fb39b794 100644\n--- a/kotlin-java8/pom.xml\n+++ b/kotlin-java8/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-kotlin-java8</artifactId>\ndiff --git a/needle/pom.xml b/needle/pom.xml\nindex 3eb5f1051..519e0dce9 100644\n--- a/needle/pom.xml\n+++ b/needle/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-needle</artifactId>\ndiff --git a/openejb/pom.xml b/openejb/pom.xml\nindex dcc1b5ce5..b26147e3f 100644\n--- a/openejb/pom.xml\n+++ b/openejb/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-openejb</artifactId>\ndiff --git a/picocontainer/pom.xml b/picocontainer/pom.xml\nindex 638c9ab79..eeda89f44 100644\n--- a/picocontainer/pom.xml\n+++ b/picocontainer/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-picocontainer</artifactId>\ndiff --git a/plugin/pom.xml b/plugin/pom.xml\nindex 04cf44f98..259a05ce1 100644\n--- a/plugin/pom.xml\n+++ b/plugin/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-plugin</artifactId>\ndiff --git a/pom.xml b/pom.xml\nindex 4f1616544..03b248c78 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -6,7 +6,7 @@\n         <version>2.1.1</version>\n     </parent>\n     <artifactId>cucumber-jvm</artifactId>\n-    <version>6.8.0-SNAPSHOT</version>\n+    <version>6.8.0</version>\n     <packaging>pom</packaging>\n     <name>Cucumber-JVM</name>\n     <description>Cucumber for the JVM</description>\n@@ -45,7 +45,7 @@\n         <connection>scm:git:git://github.com/cucumber/cucumber-jvm.git</connection>\n         <developerConnection>scm:git:git@github.com:cucumber/cucumber-jvm.git</developerConnection>\n         <url>git://github.com/cucumber/cucumber-jvm.git</url>\n-        <tag>HEAD</tag>\n+        <tag>v6.8.0</tag>\n     </scm>\n \n     <dependencyManagement>\ndiff --git a/spring/pom.xml b/spring/pom.xml\nindex 0e0d2bfd0..c7a7bed41 100644\n--- a/spring/pom.xml\n+++ b/spring/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-spring</artifactId>\ndiff --git a/testng/pom.xml b/testng/pom.xml\nindex 3a593e317..21f093127 100644\n--- a/testng/pom.xml\n+++ b/testng/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-testng</artifactId>\ndiff --git a/weld/pom.xml b/weld/pom.xml\nindex 6de436e1c..db2c510dd 100644\n--- a/weld/pom.xml\n+++ b/weld/pom.xml\n@@ -4,7 +4,7 @@\n     <parent>\n         <groupId>io.cucumber</groupId>\n         <artifactId>cucumber-jvm</artifactId>\n-        <version>6.8.0-SNAPSHOT</version>\n+        <version>6.8.0</version>\n     </parent>\n \n     <artifactId>cucumber-weld</artifactId>",
    "Retrieve section QUERIES": "diff --git a/community/community-it/cypher-it/src/test/scala/org/neo4j/internal/collector/DataCollectorQueriesAcceptanceTest.scala b/community/community-it/cypher-it/src/test/scala/org/neo4j/internal/collector/DataCollectorQueriesAcceptanceTest.scala\nnew file mode 100644\nindex 00000000000..2dd4169f08e\n--- /dev/null\n+++ b/community/community-it/cypher-it/src/test/scala/org/neo4j/internal/collector/DataCollectorQueriesAcceptanceTest.scala\n@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2002-2018 \"Neo4j,\"\n+ * Neo4j Sweden AB [http://neo4j.com]\n+ *\n+ * This file is part of Neo4j.\n+ *\n+ * Neo4j is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.neo4j.internal.collector\n+\n+import org.neo4j.cypher._\n+\n+class DataCollectorQueriesAcceptanceTest extends ExecutionEngineFunSuite {\n+\n+  import DataCollectorMatchers._\n+\n+  test(\"should collect and retrieve queries\") {\n+    // given\n+    execute(\"RETURN 'not collected!'\")\n+    execute(\"CALL db.stats.collect('QUERIES')\").single\n+\n+    execute(\"MATCH (n) RETURN count(n)\")\n+    execute(\"MATCH (n)-->(m) RETURN n,m\")\n+    execute(\"WITH 'hi' AS x RETURN x+'-ho'\")\n+\n+    execute(\"CALL db.stats.stop('QUERIES')\").single\n+    execute(\"RETURN 'not collected!'\")\n+\n+    // when\n+    val res = execute(\"CALL db.stats.retrieve('QUERIES')\").toList\n+\n+    // then\n+    res should beListWithoutOrder(\n+      beMapContaining(\n+        \"section\" -> \"QUERIES\",\n+        \"data\" -> beMapContaining(\n+          \"query\" -> \"MATCH (n) RETURN count(n)\"\n+        )\n+      ),\n+      beMapContaining(\n+        \"section\" -> \"QUERIES\",\n+        \"data\" -> beMapContaining(\n+          \"query\" -> \"MATCH (n)-->(m) RETURN n,m\"\n+        )\n+      ),\n+      beMapContaining(\n+        \"section\" -> \"QUERIES\",\n+        \"data\" -> beMapContaining(\n+          \"query\" -> \"WITH 'hi' AS x RETURN x+'-ho'\"\n+        )\n+      )\n+    )\n+  }\n+\n+  test(\"should clear queries\") {\n+    // given\n+    execute(\"CALL db.stats.collect('QUERIES')\").single\n+    execute(\"MATCH (n) RETURN count(n)\")\n+    execute(\"CALL db.stats.stop('QUERIES')\").single\n+\n+    // when\n+    execute(\"CALL db.stats.clear('QUERIES')\").single\n+    execute(\"CALL db.stats.collect('QUERIES')\").single\n+    execute(\"CALL db.stats.stop('QUERIES')\").single\n+\n+    // then\n+    execute(\"CALL db.stats.retrieve('QUERIES')\").toList should be(empty)\n+  }\n+}\ndiff --git a/community/data-collector/src/main/java/org/neo4j/internal/collector/CollectorStateMachine.java b/community/data-collector/src/main/java/org/neo4j/internal/collector/CollectorStateMachine.java\nindex d9c72b30888..ac4c9ed44df 100644\n--- a/community/data-collector/src/main/java/org/neo4j/internal/collector/CollectorStateMachine.java\n+++ b/community/data-collector/src/main/java/org/neo4j/internal/collector/CollectorStateMachine.java\n@@ -22,7 +22,7 @@ package org.neo4j.internal.collector;\n /**\n  * Base class for managing state transitions of data-collector daemons.\n  */\n-abstract class CollectorStateMachine\n+abstract class CollectorStateMachine<DATA>\n {\n     private enum State { IDLE, COLLECTING, HAS_DATA }\n \n@@ -132,7 +132,23 @@ abstract class CollectorStateMachine\n         }\n     }\n \n+    public synchronized DATA getData()\n+    {\n+        switch ( state )\n+        {\n+        case IDLE:\n+            throw new IllegalStateException( \"Collector is idle and has no data.\" );\n+        case COLLECTING:\n+            throw new IllegalStateException( \"Collector is still collecting.\");\n+        case HAS_DATA:\n+            return doGetData();\n+        default:\n+            throw new IllegalStateException( \"Unknown state \" + state );\n+        }\n+    }\n+\n     abstract Result doCollect();\n     abstract Result doStop();\n     abstract Result doClear();\n+    abstract DATA doGetData();\n }\ndiff --git a/community/data-collector/src/main/java/org/neo4j/internal/collector/DataCollector.java b/community/data-collector/src/main/java/org/neo4j/internal/collector/DataCollector.java\nindex 0c1c1ffaa5d..e1749b92cc4 100644\n--- a/community/data-collector/src/main/java/org/neo4j/internal/collector/DataCollector.java\n+++ b/community/data-collector/src/main/java/org/neo4j/internal/collector/DataCollector.java\n@@ -20,6 +20,7 @@\n package org.neo4j.internal.collector;\n \n import org.neo4j.internal.kernel.api.Kernel;\n+import org.neo4j.kernel.monitoring.Monitors;\n import org.neo4j.scheduler.JobScheduler;\n \n public class DataCollector implements AutoCloseable\n@@ -28,11 +29,12 @@ public class DataCollector implements AutoCloseable\n     final JobScheduler jobScheduler;\n     final QueryCollector queryCollector;\n \n-    DataCollector( Kernel kernel, JobScheduler jobScheduler )\n+    DataCollector( Kernel kernel, JobScheduler jobScheduler, Monitors monitors )\n     {\n         this.kernel = kernel;\n         this.jobScheduler = jobScheduler;\n         this.queryCollector = new QueryCollector();\n+        monitors.addMonitorListener( queryCollector );\n     }\n \n     @Override\ndiff --git a/community/data-collector/src/main/java/org/neo4j/internal/collector/DataCollectorModule.java b/community/data-collector/src/main/java/org/neo4j/internal/collector/DataCollectorModule.java\nindex e3b2c978857..02c6dea739c 100644\n--- a/community/data-collector/src/main/java/org/neo4j/internal/collector/DataCollectorModule.java\n+++ b/community/data-collector/src/main/java/org/neo4j/internal/collector/DataCollectorModule.java\n@@ -22,6 +22,7 @@ package org.neo4j.internal.collector;\n import org.neo4j.internal.kernel.api.Kernel;\n import org.neo4j.internal.kernel.api.exceptions.KernelException;\n import org.neo4j.kernel.impl.proc.Procedures;\n+import org.neo4j.kernel.monitoring.Monitors;\n import org.neo4j.scheduler.JobScheduler;\n import org.neo4j.util.Preconditions;\n \n@@ -33,10 +34,11 @@ public class DataCollectorModule\n \n     public static AutoCloseable setupDataCollector( Procedures procedures,\n                                                     JobScheduler jobScheduler,\n-                                                    Kernel kernel ) throws KernelException\n+                                                    Kernel kernel,\n+                                                    Monitors monitors ) throws KernelException\n     {\n         Preconditions.checkState( kernel != null, \"Kernel was null\" );\n-        DataCollector dataCollector = new DataCollector( kernel, jobScheduler );\n+        DataCollector dataCollector = new DataCollector( kernel, jobScheduler, monitors );\n         procedures.registerComponent( DataCollector.class, ctx -> dataCollector, false );\n         procedures.registerProcedure( DataCollectorProcedures.class );\n         return dataCollector;\ndiff --git a/community/data-collector/src/main/java/org/neo4j/internal/collector/DataCollectorProcedures.java b/community/data-collector/src/main/java/org/neo4j/internal/collector/DataCollectorProcedures.java\nindex b3d1352ba28..b2baab3f7a5 100644\n--- a/community/data-collector/src/main/java/org/neo4j/internal/collector/DataCollectorProcedures.java\n+++ b/community/data-collector/src/main/java/org/neo4j/internal/collector/DataCollectorProcedures.java\n@@ -20,7 +20,6 @@\n package org.neo4j.internal.collector;\n \n import java.time.ZonedDateTime;\n-import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n@@ -42,11 +41,9 @@ public class DataCollectorProcedures\n     @Context\n     public DataCollector dataCollector;\n \n-    private static String[] SECTIONS = {GraphCountsSection.NAME, TokensSection.NAME, QueriesSection.NAME};\n-\n     @Admin\n     @Description( \"Retrieve statistical data about the current database. Valid sections are '\" +\n-                  GraphCountsSection.NAME + \"', '\" + TokensSection.NAME + \"', '\" + QueriesSection.NAME + \"'\" )\n+                  Sections.GRAPH_COUNTS + \"', '\" + Sections.TOKENS + \"', '\" + Sections.QUERIES + \"'\" )\n     @Procedure( name = \"db.stats.retrieve\", mode = Mode.READ )\n     public Stream<RetrieveResult> retrieve( @Name( value = \"section\" ) String section )\n             throws InvalidArgumentsException, IndexNotFoundKernelException, TransactionFailureException\n@@ -54,17 +51,17 @@ public class DataCollectorProcedures\n         String upperSection = section.toUpperCase();\n         switch ( upperSection )\n         {\n-        case GraphCountsSection.NAME:\n-            return GraphCountsSection.collect( dataCollector.kernel, Anonymizer.PLAIN_TEXT );\n+        case Sections.GRAPH_COUNTS:\n+            return GraphCountsSection.retrieve( dataCollector.kernel, Anonymizer.PLAIN_TEXT );\n \n-        case TokensSection.NAME:\n-            return TokensSection.collect( dataCollector.kernel );\n+        case Sections.TOKENS:\n+            return TokensSection.retrieve( dataCollector.kernel );\n \n-        case QueriesSection.NAME:\n-            throw new UnsupportedOperationException( \"not implemented\" );\n+        case Sections.QUERIES:\n+            return QueriesSection.retrieve( dataCollector.queryCollector.doGetData() );\n \n         default:\n-            throw unknownSectionException( section );\n+            throw Sections.unknownSectionException( section );\n         }\n     }\n \n@@ -80,7 +77,7 @@ public class DataCollectorProcedures\n         TokensSection.putTokenCounts( metaData, dataCollector.kernel );\n         Stream<RetrieveResult> meta = Stream.of( new RetrieveResult( \"META\", metaData ) );\n \n-        return Stream.concat( meta, GraphCountsSection.collect( dataCollector.kernel, Anonymizer.IDS ) );\n+        return Stream.concat( meta, GraphCountsSection.retrieve( dataCollector.kernel, Anonymizer.IDS ) );\n     }\n \n     @Admin\n@@ -89,7 +86,7 @@ public class DataCollectorProcedures\n     public Stream<StatusResult> status()\n     {\n         CollectorStateMachine.Status status = dataCollector.queryCollector.status();\n-        return Stream.of( new StatusResult( QueriesSection.NAME, status.message, Collections.emptyMap() ) );\n+        return Stream.of( new StatusResult( Sections.QUERIES, status.message, Collections.emptyMap() ) );\n     }\n \n     @Admin\n@@ -123,19 +120,13 @@ public class DataCollectorProcedures\n     {\n         switch ( section )\n         {\n-        case TokensSection.NAME:\n-        case GraphCountsSection.NAME:\n+        case Sections.TOKENS:\n+        case Sections.GRAPH_COUNTS:\n             throw new InvalidArgumentsException( \"Section '%s' does not have to be explicitly collected, it can always be directly retrieved.\" );\n-        case QueriesSection.NAME:\n+        case Sections.QUERIES:\n             return dataCollector.queryCollector;\n         default:\n-            throw unknownSectionException( section );\n+            throw Sections.unknownSectionException( section );\n         }\n     }\n-\n-    private InvalidArgumentsException unknownSectionException( @Name( \"section\" ) String section )\n-    {\n-        return new InvalidArgumentsException( String.format( \"Unknown section '%s', known sections are %s\",\n-                                                             section, Arrays.toString( SECTIONS ) ) );\n-    }\n }\ndiff --git a/community/data-collector/src/main/java/org/neo4j/internal/collector/GraphCountsSection.java b/community/data-collector/src/main/java/org/neo4j/internal/collector/GraphCountsSection.java\nindex fa11ed0b579..e84b7f1f73b 100644\n--- a/community/data-collector/src/main/java/org/neo4j/internal/collector/GraphCountsSection.java\n+++ b/community/data-collector/src/main/java/org/neo4j/internal/collector/GraphCountsSection.java\n@@ -53,13 +53,11 @@ import org.neo4j.register.Registers;\n  */\n final class GraphCountsSection\n {\n-    static final String NAME = \"GRAPH COUNTS\";\n-\n     private GraphCountsSection()\n     { // only static functionality\n     }\n \n-    static Stream<RetrieveResult> collect( Kernel kernel, Anonymizer anonymizer )\n+    static Stream<RetrieveResult> retrieve( Kernel kernel, Anonymizer anonymizer )\n             throws TransactionFailureException, IndexNotFoundKernelException\n     {\n         try ( Transaction tx = kernel.beginTransaction( Transaction.Type.explicit, LoginContext.AUTH_DISABLED ) )\n@@ -73,7 +71,7 @@ final class GraphCountsSection\n             data.put( \"indexes\", indexes( tokens, tx.schemaRead(), anonymizer ) );\n             data.put( \"constraints\", constraints( tokens, tx.schemaRead(), anonymizer ) );\n \n-            return Stream.of( new RetrieveResult( NAME, data ) );\n+            return Stream.of( new RetrieveResult( Sections.GRAPH_COUNTS, data ) );\n         }\n     }\n \ndiff --git a/community/data-collector/src/main/java/org/neo4j/internal/collector/QueryCollector.java b/community/data-collector/src/main/java/org/neo4j/internal/collector/QueryCollector.java\nindex dc785840ae6..1c6d8bafc03 100644\n--- a/community/data-collector/src/main/java/org/neo4j/internal/collector/QueryCollector.java\n+++ b/community/data-collector/src/main/java/org/neo4j/internal/collector/QueryCollector.java\n@@ -19,23 +19,77 @@\n  */\n package org.neo4j.internal.collector;\n \n-final class QueryCollector extends CollectorStateMachine\n+import java.util.Iterator;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+\n+import org.neo4j.kernel.api.query.ExecutingQuery;\n+import org.neo4j.kernel.api.query.QuerySnapshot;\n+import org.neo4j.kernel.impl.query.QueryExecutionMonitor;\n+\n+/**\n+ * Simple Thread-safe query collector.\n+ *\n+ * Note that is has several potentially not-so-nice properties:\n+ *\n+ *  - It buffers all query data until collection is done. On high-workload systems\n+ *    this could use substantial memory\n+ *\n+ *  - All threads that report queries on {@link QueryCollector#endSuccess(org.neo4j.kernel.api.query.ExecutingQuery)}\n+ *    contend for writing to the queue, which might cause delays at query close time on highly concurrent systems\n+ */\n+class QueryCollector extends CollectorStateMachine<Iterator<QuerySnapshot>> implements QueryExecutionMonitor\n {\n+    private volatile boolean on;\n+    private final ConcurrentLinkedQueue<QuerySnapshot> queries;\n+\n+    QueryCollector()\n+    {\n+        on = false;\n+        queries = new ConcurrentLinkedQueue<>();\n+    }\n+\n+    // CollectorStateMachine\n+\n     @Override\n     Result doCollect()\n     {\n+        on = true;\n         return success( \"Collection started.\" );\n     }\n \n     @Override\n     Result doStop()\n     {\n+        on = false;\n         return success( \"Collection stopped.\" );\n     }\n \n     @Override\n     Result doClear()\n     {\n+        queries.clear();\n         return success( \"Data cleared.\" );\n     }\n+\n+    @Override\n+    Iterator<QuerySnapshot> doGetData()\n+    {\n+        return queries.iterator();\n+    }\n+\n+    // QueryExecutionMonitor\n+\n+    @Override\n+    public void endFailure( ExecutingQuery query, Throwable failure )\n+    {\n+    }\n+\n+    @Override\n+    public void endSuccess( ExecutingQuery query )\n+    {\n+        if ( on )\n+        {\n+            queries.add( query.snapshot() );\n+        }\n+    }\n }\ndiff --git a/community/data-collector/src/main/java/org/neo4j/internal/collector/QueriesSection.java b/community/data-collector/src/main/java/org/neo4j/internal/collector/Sections.java\nsimilarity index 51%\nrename from community/data-collector/src/main/java/org/neo4j/internal/collector/QueriesSection.java\nrename to community/data-collector/src/main/java/org/neo4j/internal/collector/Sections.java\nindex b1961dbb407..d35b8965e77 100644\n--- a/community/data-collector/src/main/java/org/neo4j/internal/collector/QueriesSection.java\n+++ b/community/data-collector/src/main/java/org/neo4j/internal/collector/Sections.java\n@@ -19,7 +19,27 @@\n  */\n package org.neo4j.internal.collector;\n \n-final class QueriesSection\n+import java.util.Arrays;\n+\n+import org.neo4j.kernel.api.exceptions.InvalidArgumentsException;\n+\n+@SuppressWarnings( \"WeakerAccess\" )\n+class Sections\n {\n-    static final String NAME = \"QUERIES\";\n+    private Sections()\n+    { // only static methods\n+    }\n+\n+    static final String GRAPH_COUNTS = \"GRAPH COUNTS\";\n+    static final String TOKENS = \"TOKENS\";\n+    static final String QUERIES = \"QUERIES\";\n+\n+    static final String[] SECTIONS = {GRAPH_COUNTS, TOKENS, QUERIES};\n+    static final String NAMES = Arrays.toString( SECTIONS );\n+\n+    static InvalidArgumentsException unknownSectionException( String section )\n+    {\n+        return new InvalidArgumentsException( String.format( \"Unknown section '%s', known sections are %s\",\n+                                                             section, NAMES ) );\n+    }\n }\ndiff --git a/community/data-collector/src/main/java/org/neo4j/internal/collector/TokensSection.java b/community/data-collector/src/main/java/org/neo4j/internal/collector/TokensSection.java\nindex d8427e0e33d..7de31b9a9eb 100644\n--- a/community/data-collector/src/main/java/org/neo4j/internal/collector/TokensSection.java\n+++ b/community/data-collector/src/main/java/org/neo4j/internal/collector/TokensSection.java\n@@ -31,15 +31,17 @@ import org.neo4j.internal.kernel.api.Transaction;\n import org.neo4j.internal.kernel.api.exceptions.TransactionFailureException;\n import org.neo4j.internal.kernel.api.security.LoginContext;\n \n+/**\n+ * Data collector section that simply return all tokens (propertyKeys, labels and relationship types) that\n+ * are known to the database.\n+ */\n final class TokensSection\n {\n-    static final String NAME = \"TOKENS\";\n-\n     private TokensSection()\n     { // only static methods\n     }\n \n-    static Stream<RetrieveResult> collect( Kernel kernel ) throws TransactionFailureException\n+    static Stream<RetrieveResult> retrieve( Kernel kernel ) throws TransactionFailureException\n     {\n         try ( Transaction tx = kernel.beginTransaction( Transaction.Type.explicit, LoginContext.AUTH_DISABLED ) )\n         {\n@@ -58,7 +60,7 @@ final class TokensSection\n             data.put( \"labels\", labels );\n             data.put( \"relationshipTypes\", relationshipTypes );\n             data.put( \"propertyKeys\", propertyKeys );\n-            return Stream.of( new RetrieveResult( NAME, data ) );\n+            return Stream.of( new RetrieveResult( Sections.TOKENS, data ) );\n         }\n     }\n \ndiff --git a/community/data-collector/src/main/scala/org/neo4j/internal/collector/QueriesSection.scala b/community/data-collector/src/main/scala/org/neo4j/internal/collector/QueriesSection.scala\nnew file mode 100644\nindex 00000000000..f1337b344d0\n--- /dev/null\n+++ b/community/data-collector/src/main/scala/org/neo4j/internal/collector/QueriesSection.scala\n@@ -0,0 +1,98 @@\n+/*\n+ * Copyright (c) 2002-2018 \"Neo4j,\"\n+ * Neo4j Sweden AB [http://neo4j.com]\n+ *\n+ * This file is part of Neo4j.\n+ *\n+ * Neo4j is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.neo4j.internal.collector\n+\n+import java.util\n+import java.util.{Spliterator, Spliterators}\n+import java.util.stream.{Stream, StreamSupport}\n+\n+import org.neo4j.kernel.api.query.QuerySnapshot\n+import org.neo4j.values.virtual.MapValue\n+\n+import scala.collection.mutable\n+import scala.collection.mutable.ArrayBuffer\n+\n+/**\n+  * Data collector section which contains query invocation data. This includes the query itself,\n+  * the logical plan, cardinality information, and listing of seen invocations.\n+  */\n+object QueriesSection {\n+\n+  sealed trait InvocationData\n+  case class SingleInvocation(queryParameters: MapValue,\n+                              elapsedTimeMicros: Long,\n+                              compilationTimeMicros: Long) extends InvocationData\n+\n+  case class ProfileData(dbHits: util.ArrayList[Long], rows: util.ArrayList[Long], params: util.Map[String, AnyRef])\n+\n+  case class QueryKey(queryText: String)\n+\n+  class QueryData() {\n+    val invocations = new ArrayBuffer[SingleInvocation]\n+    val profiles = new ArrayBuffer[ProfileData]\n+  }\n+\n+  def retrieve(querySnapshots: java.util.Iterator[QuerySnapshot]): Stream[RetrieveResult] = {\n+    val queries = new mutable.HashMap[QueryKey, QueryData]()\n+    while (querySnapshots.hasNext) {\n+      val snapshot = querySnapshots.next()\n+      val queryString = snapshot.queryText()\n+      if (!queryString.contains(\"CALL db.stats.\")) {\n+        val snapshotList = queries.getOrElseUpdate(QueryKey(queryString), new QueryData())\n+        snapshotList.invocations += SingleInvocation(snapshot.queryParameters(),\n+                                                     snapshot.elapsedTimeMicros(),\n+                                                     snapshot.compilationTimeMicros())\n+      }\n+    }\n+\n+    asRetrieveStream(queries.toIterator.map({\n+      case (queryKey, queryData) =>\n+        val data = new util.HashMap[String, AnyRef]()\n+        data.put(\"query\", queryKey.queryText)\n+        data.put(\"invocations\", invocations(queryData.invocations))\n+        new RetrieveResult(Sections.QUERIES, data)\n+    }))\n+  }\n+\n+  private def invocations(invocations: ArrayBuffer[QueriesSection.SingleInvocation]): util.ArrayList[util.Map[String, AnyRef]] = {\n+    val result = new util.ArrayList[util.Map[String, AnyRef]]()\n+    for (invocationData <- invocations) {\n+      invocationData match {\n+        case SingleInvocation(queryParameters, elapsedTimeMicros, compilationTimeMicros) =>\n+          val data = new util.HashMap[String, AnyRef]()\n+          val compileTime = compilationTimeMicros\n+          val elapsed = elapsedTimeMicros\n+          if (compileTime > 0) {\n+            data.put(\"elapsedCompileTimeInUs\", java.lang.Long.valueOf(compileTime))\n+            data.put(\"elapsedExecutionTimeInUs\", java.lang.Long.valueOf(elapsed - compileTime))\n+          } else\n+            data.put(\"elapsedExecutionTimeInUs\", java.lang.Long.valueOf(elapsed))\n+          result.add(data)\n+      }\n+    }\n+\n+    result\n+  }\n+\n+  private def asRetrieveStream(iterator: Iterator[RetrieveResult]): Stream[RetrieveResult] = {\n+    import scala.collection.JavaConverters._\n+    StreamSupport.stream(Spliterators.spliterator(iterator.asJava, 0L, Spliterator.NONNULL), false)\n+  }\n+}\ndiff --git a/community/neo4j/src/main/java/org/neo4j/graphdb/facade/GraphDatabaseFacadeFactory.java b/community/neo4j/src/main/java/org/neo4j/graphdb/facade/GraphDatabaseFacadeFactory.java\nindex c81f5c29573..67e4f7fed43 100644\n--- a/community/neo4j/src/main/java/org/neo4j/graphdb/facade/GraphDatabaseFacadeFactory.java\n+++ b/community/neo4j/src/main/java/org/neo4j/graphdb/facade/GraphDatabaseFacadeFactory.java\n@@ -177,7 +177,11 @@ public class GraphDatabaseFacadeFactory\n         platform.life.add( databaseManager );\n         platform.dependencies.satisfyDependency( databaseManager );\n \n-        DataCollectorManager dataCollectorManager = new DataCollectorManager( platform.dataSourceManager, platform.jobScheduler, procedures );\n+        DataCollectorManager dataCollectorManager =\n+                new DataCollectorManager( platform.dataSourceManager,\n+                                          platform.jobScheduler,\n+                                          procedures,\n+                                          platform.monitors );\n         platform.life.add( dataCollectorManager );\n \n         edition.createSecurityModule( platform, procedures );\ndiff --git a/community/neo4j/src/main/java/org/neo4j/internal/DataCollectorManager.java b/community/neo4j/src/main/java/org/neo4j/internal/DataCollectorManager.java\nindex 1b5bd939e88..a8b1eb5b574 100644\n--- a/community/neo4j/src/main/java/org/neo4j/internal/DataCollectorManager.java\n+++ b/community/neo4j/src/main/java/org/neo4j/internal/DataCollectorManager.java\n@@ -28,6 +28,7 @@ import org.neo4j.kernel.NeoStoreDataSource;\n import org.neo4j.kernel.impl.proc.Procedures;\n import org.neo4j.kernel.impl.transaction.state.DataSourceManager;\n import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n+import org.neo4j.kernel.monitoring.Monitors;\n import org.neo4j.scheduler.JobScheduler;\n \n public class DataCollectorManager extends LifecycleAdapter\n@@ -35,15 +36,18 @@ public class DataCollectorManager extends LifecycleAdapter\n     private final DataSourceManager dataSourceManager;\n     private final JobScheduler jobScheduler;\n     private final Procedures procedures;\n+    private final Monitors monitors;\n     private final List<AutoCloseable> dataCollectors;\n \n     public DataCollectorManager( DataSourceManager dataSourceManager,\n                                  JobScheduler jobScheduler,\n-                                 Procedures procedures )\n+                                 Procedures procedures,\n+                                 Monitors monitors )\n     {\n         this.dataSourceManager = dataSourceManager;\n         this.jobScheduler = jobScheduler;\n         this.procedures = procedures;\n+        this.monitors = monitors;\n         this.dataCollectors = new ArrayList<>();\n     }\n \n@@ -52,7 +56,10 @@ public class DataCollectorManager extends LifecycleAdapter\n     {\n         // When we have multiple dbs, this has to be suitably modified to get the right kernel and procedures\n         NeoStoreDataSource dataSource = dataSourceManager.getDataSource();\n-        dataCollectors.add( DataCollectorModule.setupDataCollector( procedures, jobScheduler, dataSource.getKernel() ) );\n+        dataCollectors.add( DataCollectorModule.setupDataCollector( procedures,\n+                                                         ",
    "adds cli application configs for secure - redirection": "diff --git a/wherehows-web/app/router.js b/wherehows-web/app/router.js\nindex 0c41564c59a..d3055f7cdf7 100644\n--- a/wherehows-web/app/router.js\n+++ b/wherehows-web/app/router.js\n@@ -2,7 +2,7 @@ import Router from '@ember/routing/router';\n import { get, getWithDefault } from '@ember/object';\n import { inject as service } from '@ember/service';\n import { scheduleOnce } from '@ember/runloop';\n-import config from './config/environment';\n+import config from 'wherehows-web/config/environment';\n import { redirectToHttps } from 'wherehows-web/utils/build-url';\n \n const AppRouter = Router.extend({\n@@ -13,9 +13,12 @@ const AppRouter = Router.extend({\n   metrics: service(),\n \n   willTransition() {\n+    const { APP: { useSecureRedirect } } = config;\n     this._super(...arguments);\n \n-    redirectToHttps(window.location);\n+    if (useSecureRedirect) {\n+      redirectToHttps(window.location);\n+    }\n   },\n \n   didTransition() {\ndiff --git a/wherehows-web/config/environment.js b/wherehows-web/config/environment.js\nindex ba060ae48a6..c63f18343b6 100644\n--- a/wherehows-web/config/environment.js\n+++ b/wherehows-web/config/environment.js\n@@ -18,8 +18,7 @@ module.exports = function(environment) {\n     },\n \n     APP: {\n-      // Here you can pass flags/options to your application instance\n-      // when it is created\n+      useSecureRedirect: true\n     },\n \n     eyeglass: {",
    "Adjust logging level for kafka consumer ( <issue_id> )": "diff --git a/wherehows-dao/src/main/java/wherehows/dao/table/DictDatasetDao.java b/wherehows-dao/src/main/java/wherehows/dao/table/DictDatasetDao.java\nindex be575a63828..c9e09e1404f 100644\n--- a/wherehows-dao/src/main/java/wherehows/dao/table/DictDatasetDao.java\n+++ b/wherehows-dao/src/main/java/wherehows/dao/table/DictDatasetDao.java\n@@ -71,7 +71,7 @@ public class DictDatasetDao extends BaseDao {\n     try {\n       dataset = findBy(DictDataset.class, \"urn\", urn);\n     } catch (Exception e) {\n-      log.info(\"Can't find dataset \" + urn, e.toString());\n+      log.debug(\"Can't find dataset \" + urn, e.toString());\n     }\n     // if not found, create new entity\n     if (dataset == null) {\ndiff --git a/wherehows-kafka/src/main/java/wherehows/actors/KafkaWorker.java b/wherehows-kafka/src/main/java/wherehows/actors/KafkaWorker.java\nindex 29f3a21cf2f..4674a167bf7 100644\n--- a/wherehows-kafka/src/main/java/wherehows/actors/KafkaWorker.java\n+++ b/wherehows-kafka/src/main/java/wherehows/actors/KafkaWorker.java\n@@ -64,7 +64,7 @@ public class KafkaWorker extends UntypedActor {\n             }\n \n             if (_receivedRecordCount % 1000 == 0) {\n-              log.debug(_topic + \" received \" + _receivedRecordCount);\n+              log.info(_topic + \" received \" + _receivedRecordCount);\n             }\n           }\n ",
    "Added old keys / dumps path to help & info + made it HTML5 conform .": "diff --git a/Mifare Classic Tool/app/src/main/assets/help/help.html b/Mifare Classic Tool/app/src/main/assets/help/help.html\nindex b94e2ae..836c342 100644\n--- a/Mifare Classic Tool/app/src/main/assets/help/help.html\t\n+++ b/Mifare Classic Tool/app/src/main/assets/help/help.html\t\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+\n <!--\n /*\n  * Copyright 2013 Gerhard Klostermeier\n@@ -18,10 +20,6 @@\n  */\n -->\n \n-\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\">\n <head>\n   <title>Help and Info</title>\n </head>\n@@ -30,7 +28,7 @@\n   <div align=\"center\">\n     <img src=\"mct_logo.png\" width=\"250px\" alt=\"logo\" />\n   </div>\n-  <hr />\n+  <hr>\n   <h1>Help and Info</h1>\n   <h2>Table of Contents</h2>\n   <ul>\n@@ -83,7 +81,9 @@\n     </li>\n     <li><a href=\"#external_nfc\">8. External NFC</a></li>\n   </ul>\n-  <hr />\n+\n+\n+  <hr>\n \n   <h2 id=\"general_information\">1. General Information</h2>\n     This tool provides several features to interact with (and only with)\n@@ -177,7 +177,10 @@\n   external storage (SD card) in a folder named <i>MifareClassicTool</i>. Dump files are\n   in the format <i>.mct</i> and key files are in the format <i>.keys</i>. It is possible\n   to import multiple files at once.\n-  <br /><br />\n+  <ul>\n+    <li>Dump files: /sdcard/MifareClassicTool/dump-files/ (import as .mct)</li>\n+    <li>Key files: /sdcard/MifareClassicTool/key-files/ (import as .keys)</li>\n+  </ul>\n   The regular version and the\n   <a href=\"https://play.google.com/store/apps/details?id=de.syss.MifareClassicToolDonate\">donate version</a>\n   of MCT can not share the same storage. Therefore each version has its own dump an key files.\n@@ -190,24 +193,26 @@\n     2012/2013. It is free software under the\n     <a href=\"https://www.gnu.org/licenses/gpl-3.0.txt\">\n       GNU General Public License v3.0 (GPLv3)</a>.\n-    <br /><br />\n+    <br><br>\n     Icons used in this application:\n     <ul>\n \t  <li>Logo: <a href=\"http://www.beneketraub.com/\">Beneke Traub</a>\n-        <br />(<a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative\n+        <br>(<a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative\n         Commons 4.0</a>)\n       </li>\n       <li>Oxygen Icons: <a href=\"http://www.oxygen-icons.org/\">www.oxygen-icons.org</a>\n-        <br />(<a href=\"http://www.gnu.org/licenses/lgpl.html\">GNU\n+        <br>(<a href=\"http://www.gnu.org/licenses/lgpl.html\">GNU\n           Lesser General Public License</a>)\n       </li>\n       <li>RFID Tag: <a href=\"http://www.nfc-tag.de/\">www.nfc-tag.de</a>\n-        <br />(<a href=\"http://creativecommons.org/licenses/by/3.0/\">Creative\n+        <br>(<a href=\"http://creativecommons.org/licenses/by/3.0/\">Creative\n           Commons 3.0</a>)\n       </li>\n     </ul>\n     MIFARE&reg; is a registered trademark of NXP Semiconductors.\n-  <hr />\n+\n+\n+  <hr>\n \n \n   <h2 id=\"getting_started\">2. Getting Started</h2>\n@@ -218,30 +223,30 @@\n     normal RFID-Readers and some special software\n     (<a href=\"https://github.com/nfc-tools/mfcuk\">mfcuk</a>,\n     <a href=\"https://github.com/nfc-tools/mfoc\">mfoc</a>).\n-    <br /><br />\n+    <br><br>\n     The application comes with standard key files called\n     <i>std.keys</i> and <i>extended-std.keys</i>, which contains the\n     well known keys and some standard keys from a short Google search.\n     You can try to read a tag with this key file using\n     &quot;Read Tag&quot; from main menu.\n-    <br /><br />\n+    <br><br>\n     Once you know some keys, you cam to put them into a simple text\n     file (one key per line). You can do this on your PC and import\n     the file using MCT's <a href=\"#import_export_tool\">Import/Export\n     Tool</a>, or you can create a new key file via &quot;Edit or Add\n     Key File&quot; from main menu. If you are finished setting up your\n     key file, you can read a tag using &quot;Read Tag&quot; from main menu.\n-    <br /><br />\n+    <br><br>\n     <b>Advantages of the Key Files Concept:</b>\n     <ul>\n       <li>\n         <b>You don't have to worry about which key is for which\n-        sector.</b><br />\n+        sector.</b><br>\n         The application tries to authenticate with all keys from the key\n         file against all sectors (like a dictionary-attack).\n       </li>\n       <li>\n-        <b>You don't have to know all the keys.</b><br />\n+        <b>You don't have to know all the keys.</b><br>\n         If neither key A nor key B for a specific sector is found in the\n         key file (dictionary), the application will skip reading said\n         sector.\n@@ -250,22 +255,24 @@\n     This dictionary-attack based mapping process\n     (keys &lt;-&gt; sectors) makes it easy for you to read as much as\n     possible with the keys you know!\n-  <hr />\n+\n+\n+  <hr>\n \n \n   <h2 id=\"read_tag\">3. Read Tag</h2>\n     Technically speaking, reading an RFID-Tag is done in two steps:\n     <ul>\n       <li>\n-        <i>Choose a key file</i><br />\n+        <i>Choose a key file</i><br>\n         Press &quot;Read Tag&quot; in the main menu. Now select\n         key files which (perhaps) contain the keys for the tag.\n         You can also specify the range of sectors you want to read.\n-        Start the mapping process with the lower right button.<br />\n+        Start the mapping process with the lower right button.<br>\n         But: For large key files this could take quite some time!\n       </li>\n       <li>\n-        <i>Read tag</i><br />\n+        <i>Read tag</i><br>\n         After the keys are mapped to sectors based on a kind of\n         dictionary-attack, the application will instantly start\n         to read the tag. The result will be displayed in a\n@@ -273,7 +280,9 @@\n         <a href=\"#edit_dump_file\">Edit Tag Dump File</a>.)\n       </li>\n     </ul>\n-  <hr />\n+\n+\n+  <hr>\n \n \n   <h2 id=\"write_tag\">4. Write Tag</h2>\n@@ -295,32 +304,32 @@\n     If you want to clone a tag, you first have to read and then dump\n     the original tag. The second step is to restore the dumped data on another\n     tag (for which you know the keys). You need the keys with write privileges\n-    for all sectors you want to write.<br />\n+    for all sectors you want to write.<br>\n     After selecting the dump, the sectors and the key files, the App will check\n     everything for you! If there are issues like 'block is read-only', 'key\n     with write access not known', etc., you will get a report before writing.\n-    <br /><br />\n+    <br><br>\n     <b>Options:</b>\n     <ul>\n       <li>\n-        <i>Use static (custom) Access Conditions</i><br />\n+        <i>Use static (custom) Access Conditions</i><br>\n         By enabling this option, all Access Conditions from the dump\n         will be replaced with the chosen ones.\n-        <br />This is useful if the dump contains Access Conditions\n+        <br>This is useful if the dump contains Access Conditions\n         that will be permanent for a tag. In case the reader does not check\n         them, you can easily use custom ones to make the tag reusable.\n       </li>\n       <li>\n-        <i>Write to Manufacturer Block</i><br />\n+        <i>Write to Manufacturer Block</i><br>\n         The first block of the first sector of an <b>original</b>\n         MIFARE Classic tag is read-only i.e. not writable. But there are\n         <b>special</b> MIFARE Classic tags (aka <i>magic tags</i> 2nd gen/gen2) that support\n         writing to the manufacturer block with a simple write command. This App is\n         able to write to such tags and can therefore create fully correct clones.\n-        <br />However, some special tags require a special command sequence to\n+        <br>However, some special tags require a special command sequence to\n         put them into the state where writing to the manufacturer block is\n         possible. These tags will not work.\n-        <br />Also, make sure the the BCC value (see\n+        <br>Also, make sure the the BCC value (see\n         <a href=\"#bcc_tool\">BCC Calculator</a>), the SAK and the ATQA values are\n         correct. If you just want to clone a UID, please use the\n         <a href=\"#clone_uid_tool\">Clone UID Tool</a>.\n@@ -351,13 +360,15 @@\n       </li>\n     </ul>\n     If a increment or decrement fails due to an interrupted and therefore\n-    incomplete transaction, the Value Block could become unusable.<br /><br />\n+    incomplete transaction, the Value Block could become unusable.<br><br>\n \n     If you don't know what a MIFARE Classic Value Block is, you should read\n     chapter 8.6.2.1 of the\n     <a href=\"https://www.nxp.com/docs/en/data-sheet/MF1S50YYX_V1.pdf\">\n     MIFARE Classic (1k) Datasheet</a> (PDF).\n-  <hr />\n+\n+\n+  <hr>\n \n \n   <h2 id=\"edit_dump_file\">5. Edit Tag Dump File</h2>\n@@ -365,12 +376,12 @@\n     This editor can be accessed by two different ways:\n     <ul>\n       <li>\n-        <i>Read a tag</i><br />\n+        <i>Read a tag</i><br>\n         After reading a tag the result is displayed in this\n         editor (See chapter <a href=\"#read_tag\">Read Tag</a>.)\n       </li>\n       <li>\n-        <i>Open a saved tag</i><br />\n+        <i>Open a saved tag</i><br>\n         You can edit a saved dump via &quot;Edit Tag Dump&quot; from\n         main menu.\n       </li>\n@@ -381,7 +392,7 @@\n   <h3 id=\"share_dump\">5.1 Share a Dump</h3>\n     From the dump editor you can share a dump (via toolbar or menu item).\n     You can choose between Apps that are willing to process the dump file.\n-    Note that some Apps fail to process the dump.<br />\n+    Note that some Apps fail to process the dump.<br>\n     Apps which are known to work with MCT: Gmail, Bluetooth, etc.\n \n   <h3 id=\"display_ascii\">5.2 Display Data as ASCII</h3>\n@@ -407,14 +418,14 @@\n \n   <h3 id=\"display_manuf_date\">5.5 Display the date of manufacture</h3>\n     From the dump editor you can decode the date of manufacture (via the menu).\n-    <br /><br />\n+    <br><br>\n     The last 2 bytes of the manufacturer block (sector 0, block 0) are\n     representing the date of manufacture. They should be in binary\n     coded decimal format (BCD, only digits, no letters). The first byte\n     represents the week of manufacture and must be between 1 and 53.\n     The second byte represents the year of manufacture and must be between 0\n     and the current year (e.g. 12, meaning 2012).\n-    <br /><br />\n+    <br><br>\n     This is not a standard. Some manufacturers don't stick to this.\n     So it is possible that MCT can't display the date of manufacture\n     or display a wrong one.\n@@ -432,17 +443,19 @@\n     You can save the keys of the currently viewed tag into a key file.\n     This could be used to speed up the mapping process for the corresponding tag\n     because the new key file will only contain valid keys.\n-  <hr />\n+\n+\n+  <hr>\n \n \n   <h2 id=\"edit_key_file\">6. Edit or Add Key File</h2>\n     There are two ways to create a key file:\n     <ul>\n-      <li><i>This Application</i><br />\n+      <li><i>This Application</i><br>\n         You can create a new key file via\n         &quot;Edit/Add Key File&quot; from main menu.\n       </li>\n-      <li><i>On your Computer</i><br />\n+      <li><i>On your Computer</i><br>\n         You can create a simple text file on your computer and\n         import it using MCT's <a href=\"#import_export_tool\">Import/Export Tool</a>.\n       </li>\n@@ -451,21 +464,23 @@\n     key per line (hexadecimal, 6 bytes, 12 characters).\n     Lines <b>starting</b> with # as well as empty lines are\n     ignored.\n-    <br /><br />\n+    <br><br>\n     You can edit key files any time you want with\n     &quot;Edit/Add Key File&quot; from main menu.\n-    <br /><br />\n+    <br><br>\n     Because key files are used like dictionaries in dictionary-attacks,\n     it is sufficient to enter only different keys (even if the key\n     is used for multiple sectors). You can remove duplicates\n     in a key file (via menu) from the key editor. Also it is possible to\n     share key files like dump files (see chapter\n     <a href=\"#share_dump\">Share a Dump</a>).\n-    <br /><br />\n+    <br><br>\n     For other advantages see chapter\n     <a href=\"#getting_started\">Getting Started</a>, section\n     &quot;Advantages of the key files concept&quot;.\n-  <hr />\n+\n+\n+  <hr>\n \n \n   <h2 id=\"tools\">7. Tools</h2>\n@@ -474,11 +489,11 @@\n   <h3 id=\"tag_info_tool\">7.1 Display Tag Info</h3>\n     In this view you can see some generic information\n     (like UID, ATQA, SAK, Tag size, etc.) about the RFID-Tag.\n-    <br /><br />\n+    <br><br>\n     If your device does not support MIFARE Classic, this is the\n     only thing you can do with this App. :(\n-    <br /><br />\n-    <b>Tag type and manufacturer identification:</b><br />\n+    <br><br>\n+    <b>Tag type and manufacturer identification:</b><br>\n     The identification mechanism is based on\n     <a href=\"http://nfc-tools.org/index.php?title=ISO14443A\">this website</a>.\n     If you want to have a closer look at MIFARE tag identification read\n@@ -487,7 +502,7 @@\n     <a href=\"http://ludovic.rousseau.free.fr/softwares/pcsc-tools/smartcard_list.txt\">\n     helpful file</a> for ATS (ATR) based identification is provided\n     by the PCSC project.\n-    <br /><br />\n+    <br><br>\n     The tag type and manufacturer determined by MCT could be wrong for\n     several reasons:\n     <ul>\n@@ -502,9 +517,9 @@\n     chapter 8.6.2.1 of the\n     <a href=\"https://www.nxp.com/docs/en/data-sheet/MF1S50YYX_V1.pdf\">\n     MIFARE Classic (1k) Datasheet</a> (PDF).\n-    <br /><br />\n+    <br><br>\n     In most cases the &quot;Addr&quot; of a value block is 00 (hex)\n-    because it is not used. However, according to NXP it<br />\n+    because it is not used. However, according to NXP it<br>\n     &quot;can be used to save the storage address of a\n     block, when implementing a powerful backup management.&quot;.\n \n@@ -526,7 +541,7 @@\n     This tool can calculate the Bit Count Check (BCC) value. For MIFARE\n     Classic tags with a 4-byte UID, the BCC must be the 5th byte of the very\n     first block (manufacturers block).\n-    <br /><br />\n+    <br><br>\n     More information about calculating the BCC and how it is used during\n     the anti-collision phase can be found in\n     <a href=\"http://cache.nxp.com/documents/application_note/AN10927.pdf\">NXP's AN10927</a>.\n@@ -545,7 +560,7 @@\n     .bin/.mfd/.dump (Proxmark, libnfc, mfoc, others), .eml (Proxmark emulator) and\n     .json (Proxmark, Chameleon Mini GUI). For converting a dump file from e.g.\n     .bin to .json, it can be simply imported and then exported again.\n-    <br /><br />\n+    <br><br>\n     A full backup of all dump and key files can be made using the backup function.\n     The data will be saved as ZIP archive.\n \n@@ -564,7 +579,7 @@\n     or shared with other apps.\n \n \n-  <hr />\n+  <hr>\n \n \n   <h2 id=\"external_nfc\">8. External NFC</h2>\n@@ -572,7 +587,7 @@\n     <a href=\"https://play.google.com/store/apps/details?id=eu.dedb.nfc.service\">External NFC</a>.\n     This app allows you to connect an external USB-based RFID reader to\n     your Android device. Not every RFID reader is supported by External\n-    NFC and your Android device must be USB-OTG enabled.<br /><br />\n+    NFC and your Android device must be USB-OTG enabled.<br><br>\n \n     Readers which should work:\n     <ul>\n@@ -581,7 +596,7 @@\n       <li>PN532 via USB-UART adapters</li>\n     </ul>\n \n-    According to user reports, the ACR 122U reader works the best.<br /><br />\n+    According to user reports, the ACR 122U reader works the best.<br><br>\n \n     For questions regarding the External NFC app please have a look at its\n     <a href=\"https://play.google.com/store/apps/details?id=eu.dedb.nfc.service\">Play Store</a>",
    "Fixing up test failures .": "diff --git a/core/client/src/main/java/alluxio/client/file/options/CompleteUfsFileOptions.java b/core/client/src/main/java/alluxio/client/file/options/CompleteUfsFileOptions.java\nindex a0f2df91a1..a090d40e3f 100644\n--- a/core/client/src/main/java/alluxio/client/file/options/CompleteUfsFileOptions.java\n+++ b/core/client/src/main/java/alluxio/client/file/options/CompleteUfsFileOptions.java\n@@ -140,9 +140,8 @@ public final class CompleteUfsFileOptions {\n     if (!mGroup.isEmpty()) {\n       options.setGroup(mGroup);\n     }\n-    short mode = mMode.toShort();\n-    if (mode != Constants.INVALID_MODE) {\n-      options.setMode(mode);\n+    if (mMode != null && mMode.toShort() != Constants.INVALID_MODE) {\n+      options.setMode(mMode.toShort());\n     }\n     return options;\n   }\ndiff --git a/core/client/src/main/java/alluxio/client/file/options/CreateDirectoryOptions.java b/core/client/src/main/java/alluxio/client/file/options/CreateDirectoryOptions.java\nindex 8dac92d1a9..23f88dc7a0 100644\n--- a/core/client/src/main/java/alluxio/client/file/options/CreateDirectoryOptions.java\n+++ b/core/client/src/main/java/alluxio/client/file/options/CreateDirectoryOptions.java\n@@ -35,7 +35,7 @@ import javax.annotation.concurrent.NotThreadSafe;\n @JsonInclude(Include.NON_EMPTY)\n public final class CreateDirectoryOptions {\n   private boolean mAllowExists;\n-  private Mode mMode; // null if creating the dir using system default mode\n+  private Mode mMode;\n   private long mTtl;\n   private TtlAction mTtlAction;\n   private boolean mRecursive;\n@@ -51,7 +51,7 @@ public final class CreateDirectoryOptions {\n   private CreateDirectoryOptions() {\n     mRecursive = false;\n     mAllowExists = false;\n-    mMode = null;\n+    mMode = Mode.defaults().applyDirectoryUMask();\n     mTtl = Constants.NO_TTL;\n     mTtlAction = TtlAction.DELETE;\n     mWriteType =\ndiff --git a/core/client/src/main/java/alluxio/client/file/options/CreateFileOptions.java b/core/client/src/main/java/alluxio/client/file/options/CreateFileOptions.java\nindex 26a028cc77..8713388230 100644\n--- a/core/client/src/main/java/alluxio/client/file/options/CreateFileOptions.java\n+++ b/core/client/src/main/java/alluxio/client/file/options/CreateFileOptions.java\n@@ -45,7 +45,7 @@ public final class CreateFileOptions {\n   private long mBlockSizeBytes;\n   private long mTtl;\n   private TtlAction mTtlAction;\n-  private Mode mMode; // null if creating the file using system default mode\n+  private Mode mMode;\n   private int mWriteTier;\n   private WriteType mWriteType;\n \n@@ -70,7 +70,7 @@ public final class CreateFileOptions {\n     mWriteType = Configuration.getEnum(PropertyKey.USER_FILE_WRITE_TYPE_DEFAULT, WriteType.class);\n     mTtl = Constants.NO_TTL;\n     mTtlAction = TtlAction.DELETE;\n-    mMode = null;\n+    mMode = Mode.defaults().applyFileUMask();\n   }\n \n   /**\ndiff --git a/core/client/src/main/java/alluxio/client/file/options/CreateUfsFileOptions.java b/core/client/src/main/java/alluxio/client/file/options/CreateUfsFileOptions.java\nindex 78f76626d4..cbda3d68fc 100644\n--- a/core/client/src/main/java/alluxio/client/file/options/CreateUfsFileOptions.java\n+++ b/core/client/src/main/java/alluxio/client/file/options/CreateUfsFileOptions.java\n@@ -140,9 +140,8 @@ public final class CreateUfsFileOptions {\n     if (!mGroup.isEmpty()) {\n       options.setGroup(mGroup);\n     }\n-    short mode = mMode.toShort();\n-    if (mode != Constants.INVALID_MODE) {\n-      options.setMode(mode);\n+    if (mMode != null && mMode.toShort() != Constants.INVALID_MODE) {\n+      options.setMode(mMode.toShort());\n     }\n     return options;\n   }\ndiff --git a/core/client/src/main/java/alluxio/client/file/options/OutStreamOptions.java b/core/client/src/main/java/alluxio/client/file/options/OutStreamOptions.java\nindex e773000d01..7baaadbfa9 100644\n--- a/core/client/src/main/java/alluxio/client/file/options/OutStreamOptions.java\n+++ b/core/client/src/main/java/alluxio/client/file/options/OutStreamOptions.java\n@@ -69,13 +69,8 @@ public final class OutStreamOptions {\n     }\n     mWriteTier = Configuration.getInt(PropertyKey.USER_FILE_WRITE_TIER_DEFAULT);\n     mWriteType = Configuration.getEnum(PropertyKey.USER_FILE_WRITE_TYPE_DEFAULT, WriteType.class);\n-    try {\n-      // Set user and group from user login module.\n-      mOwner = SecurityUtils.getOwnerFromLoginModule();\n-      mGroup = SecurityUtils.getGroupFromLoginModule();\n-    } catch (IOException e) {\n-      // Fall through to system property approach\n-    }\n+    mOwner = SecurityUtils.getOwnerFromLoginModule();\n+    mGroup = SecurityUtils.getGroupFromLoginModule();\n     mMode = Mode.defaults().applyFileUMask();\n   }\n \ndiff --git a/core/client/src/test/java/alluxio/client/file/options/CompleteUfsFileOptionsTest.java b/core/client/src/test/java/alluxio/client/file/options/CompleteUfsFileOptionsTest.java\nindex 7b8ffd5520..009dd1709a 100644\n--- a/core/client/src/test/java/alluxio/client/file/options/CompleteUfsFileOptionsTest.java\n+++ b/core/client/src/test/java/alluxio/client/file/options/CompleteUfsFileOptionsTest.java\n@@ -70,7 +70,7 @@ public final class CompleteUfsFileOptionsTest {\n     CompleteUfsFileOptions options = CompleteUfsFileOptions.defaults();\n     Assert.assertEquals(TEST_USER, options.getOwner());\n     Assert.assertEquals(TEST_USER, options.getGroup());\n-    Assert.assertEquals(Mode.defaults().applyDirectoryUMask(), options.getMode());\n+    Assert.assertEquals(Mode.defaults().applyFileUMask(), options.getMode());\n   }\n \n   /**\ndiff --git a/core/client/src/test/java/alluxio/client/file/options/CreateDirectoryOptionsTest.java b/core/client/src/test/java/alluxio/client/file/options/CreateDirectoryOptionsTest.java\nindex 91a0b6f4c8..eea027fd3b 100644\n--- a/core/client/src/test/java/alluxio/client/file/options/CreateDirectoryOptionsTest.java\n+++ b/core/client/src/test/java/alluxio/client/file/options/CreateDirectoryOptionsTest.java\n@@ -31,9 +31,6 @@ import java.util.Random;\n /**\n  * Tests for the {@link CreateDirectoryOptions} class.\n  */\n-@RunWith(PowerMockRunner.class)\n-// Need to mock Mode to use CommonTestUtils#testEquals.\n-@PrepareForTest(Mode.class)\n public class CreateDirectoryOptionsTest {\n   private final WriteType mDefaultWriteType =\n       Configuration.getEnum(PropertyKey.USER_FILE_WRITE_TYPE_DEFAULT, WriteType.class);\ndiff --git a/core/client/src/test/java/alluxio/client/file/options/CreateFileOptionsTest.java b/core/client/src/test/java/alluxio/client/file/options/CreateFileOptionsTest.java\nindex c0c2113608..f6be7f54ea 100644\n--- a/core/client/src/test/java/alluxio/client/file/options/CreateFileOptionsTest.java\n+++ b/core/client/src/test/java/alluxio/client/file/options/CreateFileOptionsTest.java\n@@ -33,9 +33,6 @@ import java.util.Random;\n /**\n  * Tests for the {@link CreateFileOptions} class.\n  */\n-@RunWith(PowerMockRunner.class)\n-// Need to mock Mode to use CommonTestUtils#testEquals.\n-@PrepareForTest(Mode.class)\n public class CreateFileOptionsTest {\n   private final long mDefaultBlockSizeBytes = Configuration.getBytes(\n       PropertyKey.USER_BLOCK_SIZE_BYTES_DEFAULT);\ndiff --git a/core/client/src/test/java/alluxio/client/file/options/CreateUfsFileOptionsTest.java b/core/client/src/test/java/alluxio/client/file/options/CreateUfsFileOptionsTest.java\nindex 3242ab838f..4d9122e89c 100644\n--- a/core/client/src/test/java/alluxio/client/file/options/CreateUfsFileOptionsTest.java\n+++ b/core/client/src/test/java/alluxio/client/file/options/CreateUfsFileOptionsTest.java\n@@ -70,7 +70,7 @@ public final class CreateUfsFileOptionsTest {\n     CreateUfsFileOptions options = CreateUfsFileOptions.defaults();\n     Assert.assertEquals(TEST_USER, options.getOwner());\n     Assert.assertEquals(TEST_USER, options.getGroup());\n-    Assert.assertEquals(Mode.defaults().applyDirectoryUMask(), options.getMode());\n+    Assert.assertEquals(Mode.defaults().applyFileUMask(), options.getMode());\n   }\n \n   /**\ndiff --git a/core/client/src/test/java/alluxio/client/file/options/OutStreamOptionsTest.java b/core/client/src/test/java/alluxio/client/file/options/OutStreamOptionsTest.java\nindex 347fa44a21..b88e3a996f 100644\n--- a/core/client/src/test/java/alluxio/client/file/options/OutStreamOptionsTest.java\n+++ b/core/client/src/test/java/alluxio/client/file/options/OutStreamOptionsTest.java\n@@ -60,9 +60,9 @@ public class OutStreamOptionsTest {\n     Assert.assertEquals(alluxioType, options.getAlluxioStorageType());\n     Assert.assertEquals(64 * Constants.MB, options.getBlockSizeBytes());\n     Assert.assertTrue(options.getLocationPolicy() instanceof LocalFirstPolicy);\n-    Assert.assertEquals(\"\", options.getOwner());\n+    Assert.assertEquals(\"test\", options.getOwner());\n     Assert.assertEquals(\"\", options.getGroup());\n-    Assert.assertEquals(Mode.defaults().applyDirectoryUMask(), options.getMode());\n+    Assert.assertEquals(Mode.defaults().applyFileUMask(), options.getMode());\n     Assert.assertEquals(Constants.NO_TTL, options.getTtl());\n     Assert.assertEquals(TtlAction.DELETE, options.getTtlAction());\n     Assert.assertEquals(ufsType, options.getUnderStorageType());\ndiff --git a/core/common/src/main/java/alluxio/security/authorization/Mode.java b/core/common/src/main/java/alluxio/security/authorization/Mode.java\nindex 9f447f94b2..b87c349407 100644\n--- a/core/common/src/main/java/alluxio/security/authorization/Mode.java\n+++ b/core/common/src/main/java/alluxio/security/authorization/Mode.java\n@@ -59,7 +59,11 @@ public final class Mode {\n     return new Mode(Bits.ALL, Bits.ALL, Bits.ALL);\n   }\n \n-  private Mode() {} // needed for JSON serialization and deserialization\n+  private Mode() {\n+    mOwnerBits = Bits.NONE;\n+    mGroupBits = Bits.NONE;\n+    mOtherBits = Bits.NONE;\n+  } // needed for equality testing and JSON serialization and deserialization\n \n   /**\n    * Constructs an instance of {@link Mode} with the given {@link Bits}.\n@@ -238,7 +242,7 @@ public final class Mode {\n   private void applyUMask(Mode umask) {\n     mOwnerBits = mOwnerBits.and(umask.mOwnerBits.not());\n     mGroupBits = mGroupBits.and(umask.mGroupBits.not());\n-    mOwnerBits = mOtherBits.and(umask.mOtherBits.not());\n+    mOtherBits = mOtherBits.and(umask.mOtherBits.not());\n   }\n \n   /**\n@@ -250,7 +254,7 @@ public final class Mode {\n     int umask = Constants.DEFAULT_FILE_SYSTEM_UMASK;\n     String confUmask = Configuration.get(PropertyKey.SECURITY_AUTHORIZATION_PERMISSION_UMASK);\n     if (confUmask != null) {\n-      if ((confUmask.length() > 4) || !tryParseInt(confUmask)) {\n+      if ((confUmask.length() > 4) || !isValid(confUmask)) {\n         throw new IllegalArgumentException(ExceptionMessage.INVALID_CONFIGURATION_VALUE\n             .getMessage(confUmask, PropertyKey.SECURITY_AUTHORIZATION_PERMISSION_UMASK));\n       }\n@@ -264,7 +268,7 @@ public final class Mode {\n     return new Mode((short) umask);\n   }\n \n-  private static boolean tryParseInt(String value) {\n+  private static boolean isValid(String value) {\n     try {\n       Integer.parseInt(value);\n       return true;\ndiff --git a/core/common/src/main/java/alluxio/util/SecurityUtils.java b/core/common/src/main/java/alluxio/util/SecurityUtils.java\nindex fe504c3765..395b5a7ac7 100644\n--- a/core/common/src/main/java/alluxio/util/SecurityUtils.java\n+++ b/core/common/src/main/java/alluxio/util/SecurityUtils.java\n@@ -58,23 +58,43 @@ public final class SecurityUtils {\n     return Configuration.getBoolean(PropertyKey.SECURITY_AUTHORIZATION_PERMISSION_ENABLED);\n   }\n \n-  public static String getOwnerFromLoginModule() throws IOException {\n-    return LoginUser.get().getName();\n+  public static String getOwnerFromLoginModule() {\n+    try {\n+      return LoginUser.get().getName();\n+    } catch (IOException| UnsupportedOperationException e) {\n+      return \"\";\n+    }\n   }\n \n-  public static String getOwnerFromThriftClient() throws IOException {\n-    User user = AuthenticatedClientUser.get();\n-    if (user == null) {\n-      throw new IOException(ExceptionMessage.AUTHORIZED_CLIENT_USER_IS_NULL.getMessage());\n+  public static String getOwnerFromThriftClient() {\n+    try {\n+      User user = AuthenticatedClientUser.get();\n+      if (user == null) {\n+        return \"\";\n+      }\n+      return user.getName();\n+    } catch (IOException e) {\n+      return \"\";\n     }\n-    return user.getName();\n   }\n \n-  public static String getGroupFromLoginModule() throws IOException {\n-    return CommonUtils.getPrimaryGroupName(getOwnerFromLoginModule());\n+  public static String getGroupFromLoginModule() {\n+    try {\n+      return CommonUtils.getPrimaryGroupName(LoginUser.get().getName());\n+    } catch (IOException | UnsupportedOperationException e) {\n+      return \"\";\n+    }\n   }\n \n-  public static String getGroupFromThriftClient() throws IOException {\n-    return CommonUtils.getPrimaryGroupName(getOwnerFromThriftClient());\n+  public static String getGroupFromThriftClient() {\n+    try {\n+      User user = AuthenticatedClientUser.get();\n+      if (user == null) {\n+        return \"\";\n+      }\n+      return CommonUtils.getPrimaryGroupName(user.getName());\n+    } catch (IOException e) {\n+      return \"\";\n+    }\n   }\n }\ndiff --git a/core/common/src/test/java/alluxio/underfs/options/CreateOptionsTest.java b/core/common/src/test/java/alluxio/underfs/options/CreateOptionsTest.java\nindex f46ebb0063..290c50ba07 100644\n--- a/core/common/src/test/java/alluxio/underfs/options/CreateOptionsTest.java\n+++ b/core/common/src/test/java/alluxio/underfs/options/CreateOptionsTest.java\n@@ -43,7 +43,7 @@ public final class CreateOptionsTest {\n     Assert.assertTrue(options.isEnsureAtomic());\n     Assert.assertEquals(\"\", options.getOwner());\n     Assert.assertEquals(\"\", options.getGroup());\n-    Assert.assertEquals(Mode.defaults().applyDirectoryUMask(), options.getMode());\n+    Assert.assertEquals(Mode.defaults().applyFileUMask(), options.getMode());\n   }\n \n   /**\n@@ -64,7 +64,7 @@ public final class CreateOptionsTest {\n     Assert.assertTrue(options.isEnsureAtomic());\n     Assert.assertEquals(\"\", options.getOwner());\n     Assert.assertEquals(\"\", options.getGroup());\n-    Assert.assertEquals(Mode.defaults().applyDirectoryUMask(), options.getMode());\n+    Assert.assertEquals(Mode.defaults().applyFileUMask(), options.getMode());\n   }\n \n   /**\ndiff --git a/core/common/src/test/java/alluxio/util/SecurityUtilsTest.java b/core/common/src/test/java/alluxio/util/SecurityUtilsTest.java\nindex e0e79a1765..c12a71dcbb 100644\n--- a/core/common/src/test/java/alluxio/util/SecurityUtilsTest.java\n+++ b/core/common/src/test/java/alluxio/util/SecurityUtilsTest.java\n@@ -27,6 +27,7 @@ public class SecurityUtilsTest {\n \n   @After\n   public void after() {\n+    LoginUserTestUtils.resetLoginUser();\n     ConfigurationTestUtils.resetConfiguration();\n   }\n \n@@ -76,7 +77,6 @@ public class SecurityUtilsTest {\n     Configuration.set(PropertyKey.SECURITY_LOGIN_USERNAME, \"test_login_user\");\n     Configuration.set(PropertyKey.SECURITY_GROUP_MAPPING_CLASS,\n         IdentityUserGroupsMapping.class.getName());\n-    LoginUserTestUtils.resetLoginUser();\n     Assert.assertEquals(\"test_login_user\", SecurityUtils.getOwnerFromLoginModule());\n   }\n \n@@ -84,7 +84,7 @@ public class SecurityUtilsTest {\n    * Tests the {@link SecurityUtils#getGroupFromLoginModule()} method.\n    */\n   @Test\n-  public void getGroupFromLoginModule() throws Exception {\n+  public void getGroupFromLoginModuleError() throws Exception {\n     // When security is not enabled, user and group are not set\n     Configuration.set(PropertyKey.SECURITY_AUTHENTICATION_TYPE, AuthType.NOSASL.getAuthName());\n     Assert.assertEquals(\"\", SecurityUtils.getGroupFromLoginModule());\ndiff --git a/core/server/src/test/java/alluxio/master/file/meta/InodeTreeTest.java b/core/server/src/test/java/alluxio/master/file/meta/InodeTreeTest.java\nindex b5216b4f2c..74b79b1cdc 100644\n--- a/core/server/src/test/java/alluxio/master/file/meta/InodeTreeTest.java\n+++ b/core/server/src/test/java/alluxio/master/file/meta/InodeTreeTest.java\n@@ -142,7 +142,7 @@ public final class InodeTreeTest {\n     Assert.assertEquals(TEST_PATH, test.getName());\n     Assert.assertTrue(test.isDirectory());\n     Assert.assertEquals(\"user1\", test.getOwner());\n-    Assert.assertTrue(test.getGroup().isEmpty());\n+    Assert.assertEquals(\"group1\", test.getGroup());\n     Assert.assertEquals((short) 0755, test.getMode());\n \n     // create nested directory\n@@ -153,7 +153,7 @@ public final class InodeTreeTest {\n     Assert.assertEquals(2, nested.getParentId());\n     Assert.assertTrue(test.isDirectory());\n     Assert.assertEquals(\"user1\", test.getOwner());\n-    Assert.assertTrue(test.getGroup().isEmpty());\n+    Assert.assertEquals(\"group1\", test.getGroup());\n     Assert.assertEquals((short) 0755, test.getMode());\n   }\n \n@@ -209,7 +209,7 @@ public final class InodeTreeTest {\n     Assert.assertEquals(2, nestedFile.getParentId());\n     Assert.assertTrue(nestedFile.isFile());\n     Assert.assertEquals(\"user1\", nestedFile.getOwner());\n-    Assert.assertTrue(nestedFile.getGroup().isEmpty());\n+    Assert.assertEquals(\"group1\", nestedFile.getGroup());\n     Assert.assertEquals((short) 0644, nestedFile.getMode());\n   }\n ",
    "Adds resources string for the mute / unmute global shortcut feature .": "diff --git a/resources/languages/resources.properties b/resources/languages/resources.properties\nindex dffa5525f..ac433864f 100644\n--- a/resources/languages/resources.properties\n+++ b/resources/languages/resources.properties\n@@ -1070,6 +1070,7 @@ plugin.keybindings.OPEN_SMILIES=Show Smileys\n plugin.keybindings.globalchooser.ANSWER_CALL=Answer call\r\n plugin.keybindings.globalchooser.HANGUP_CALL=Hangup call\r\n plugin.keybindings.globalchooser.SHOW_CONTACTLIST=Show contact list\r\n+plugin.keybindings.globalchooser.MUTE_CALLS=Mute calls\r\n plugin.keybindings.globalchooser.SHORTCUT_NAME=Name\r\n plugin.keybindings.globalchooser.SHORTCUT_PRIMARY=Primary shortcut\r\n plugin.keybindings.globalchooser.SHORTCUT_SECOND=Second shortcut\r",
    "handle fonts": "diff --git a/src/cpp/desktop/DesktopInfo.cpp b/src/cpp/desktop/DesktopInfo.cpp\nindex 339028cefa..b6e3e80ab5 100644\n--- a/src/cpp/desktop/DesktopInfo.cpp\n+++ b/src/cpp/desktop/DesktopInfo.cpp\n@@ -34,9 +34,10 @@ namespace desktop {\n \n namespace {\n \n-QString s_platform          = kUnknown;\n-QString s_version           = kUnknown;\n-QString s_sumatraPdfExePath = kUnknown;\n+QString s_platform           = kUnknown;\n+QString s_version            = kUnknown;\n+QString s_sumatraPdfExePath  = kUnknown;\n+QString s_fixedWidthFontList = kUnknown;\n \n #ifdef Q_OS_LINUX\n \n@@ -129,7 +130,24 @@ DesktopInfo::DesktopInfo(QObject* parent)\n {\n    initialize();\n \n-   QObject::connect(this, &DesktopInfo::sumatraPdfExePathChanged, &DesktopInfo::setSumatraPdfExePath);\n+   QObject::connect(\n+            this,\n+            &DesktopInfo::sumatraPdfExePathChanged,\n+            &DesktopInfo::setSumatraPdfExePath);\n+\n+   QObject::connect(\n+            this,\n+            &DesktopInfo::fixedWidthFontListChanged,\n+            &DesktopInfo::setFixedWidthFontList);\n+\n+   // TODO: consider deferring this work as it may\n+   // be expensive (don't want it to slow down startup)\n+   QFontDatabase db;\n+   QStringList fonts;\n+   for (QString family : db.families())\n+      if (db.isFixedPitch(family))\n+         fonts.append(family);\n+   s_fixedWidthFontList = fonts.join(QStringLiteral(\"\\n\"));\n }\n \n QString DesktopInfo::getPlatform()\n@@ -155,8 +173,12 @@ QString DesktopInfo::getScrollingCompensationType()\n \n QString DesktopInfo::getFixedWidthFontList()\n {\n-   // TODO: read from QFont database\n-   return QStringLiteral(\"None\");\n+   return s_fixedWidthFontList;\n+}\n+\n+void DesktopInfo::setFixedWidthFontList(QString list)\n+{\n+   s_fixedWidthFontList = list;\n }\n \n QString DesktopInfo::getFixedWidthFont()\ndiff --git a/src/cpp/desktop/DesktopInfo.hpp b/src/cpp/desktop/DesktopInfo.hpp\nindex bcda94f00f..4d6be15bc0 100644\n--- a/src/cpp/desktop/DesktopInfo.hpp\n+++ b/src/cpp/desktop/DesktopInfo.hpp\n@@ -30,6 +30,7 @@ class DesktopInfo : public QObject\n \n Q_SIGNALS:\n    void sumatraPdfExePathChanged(QString value);\n+   void fixedWidthFontListChanged(QString value);\n \n public:\n    explicit DesktopInfo(QObject* parent = nullptr);\n@@ -44,7 +45,11 @@ public:\n    Q_PROPERTY(QString scrollingCompensationType READ getScrollingCompensationType CONSTANT)\n \n    Q_INVOKABLE QString getFixedWidthFontList();\n-   Q_PROPERTY(QString fixedWidthFontList READ getFixedWidthFontList CONSTANT)\n+   Q_INVOKABLE void setFixedWidthFontList(QString list);\n+   Q_PROPERTY(QString fixedWidthFontList\n+              READ getFixedWidthFontList\n+              WRITE setFixedWidthFontList\n+              NOTIFY fixedWidthFontListChanged)\n \n    Q_INVOKABLE QString getFixedWidthFont();\n    Q_PROPERTY(QString fixedWidthFont READ getFixedWidthFont CONSTANT)\n@@ -60,7 +65,10 @@ public:\n \n    Q_INVOKABLE QString getSumatraPdfExePath();\n    Q_INVOKABLE void setSumatraPdfExePath(QString path);\n-   Q_PROPERTY(QString sumatraPdfExePath READ getSumatraPdfExePath WRITE setSumatraPdfExePath NOTIFY sumatraPdfExePathChanged)\n+   Q_PROPERTY(QString sumatraPdfExePath\n+              READ getSumatraPdfExePath\n+              WRITE setSumatraPdfExePath\n+              NOTIFY sumatraPdfExePathChanged)\n };\n \n inline DesktopInfo& desktopInfo()",
    "Removed double iteration of iterables on conversion": "diff --git a/jodd-core/src/main/java/jodd/typeconverter/impl/BooleanArrayConverter.java b/jodd-core/src/main/java/jodd/typeconverter/impl/BooleanArrayConverter.java\nindex 4f9cced5e..c9caaa2a3 100644\n--- a/jodd-core/src/main/java/jodd/typeconverter/impl/BooleanArrayConverter.java\n+++ b/jodd-core/src/main/java/jodd/typeconverter/impl/BooleanArrayConverter.java\n@@ -5,9 +5,9 @@ package jodd.typeconverter.impl;\n import jodd.typeconverter.TypeConverter;\n import jodd.typeconverter.TypeConverterManagerBean;\n import jodd.util.StringUtil;\n+import jodd.util.collection.BooleanArrayList;\n \n import java.util.Collection;\n-import java.util.Iterator;\n import java.util.List;\n \n /**\n@@ -83,20 +83,12 @@ public class BooleanArrayConverter implements TypeConverter<boolean[]> {\n \t\tif (value instanceof Iterable) {\n \t\t\tIterable iterable = (Iterable) value;\n \n-            int count = 0;\n-\t\t\tIterator iterator = iterable.iterator();\n-\t\t\twhile (iterator.hasNext()) {\n-\t\t\t\titerator.next();\n-\t\t\t\tcount++;\n-\t\t\t}\n-\n-\t\t\tboolean[] target = new boolean[count];\n-\t\t\tint i = 0;\n+\t\t\tBooleanArrayList booleanArrayList = new BooleanArrayList();\n \t\t\tfor (Object element : iterable) {\n-\t\t\t\ttarget[i] = convertType(element);\n-            \ti++;\n+\t\t\t\tboolean convertedValue = convertType(element);\n+\t\t\t\tbooleanArrayList.add(convertedValue);\n             }\n-\t\t\treturn target;\n+\t\t\treturn booleanArrayList.toArray();\n \t\t}\n \n \t\tif (value instanceof CharSequence) {\ndiff --git a/jodd-core/src/main/java/jodd/typeconverter/impl/ByteArrayConverter.java b/jodd-core/src/main/java/jodd/typeconverter/impl/ByteArrayConverter.java\nindex 4592c3706..77b3825a8 100644\n--- a/jodd-core/src/main/java/jodd/typeconverter/impl/ByteArrayConverter.java\n+++ b/jodd-core/src/main/java/jodd/typeconverter/impl/ByteArrayConverter.java\n@@ -7,6 +7,7 @@ import jodd.typeconverter.TypeConversionException;\n import jodd.typeconverter.TypeConverter;\n import jodd.typeconverter.TypeConverterManagerBean;\n import jodd.util.StringUtil;\n+import jodd.util.collection.ByteArrayList;\n \n import java.io.File;\n import java.io.IOException;\n@@ -111,19 +112,13 @@ public class ByteArrayConverter implements TypeConverter<byte[]> {\n \t\tif (value instanceof Iterable) {\n \t\t\tIterable iterable = (Iterable) value;\n \n-            int count = 0;\n+\t\t\tByteArrayList byteArrayList = new ByteArrayList();\n \t\t\tfor (Object element : iterable) {\n-\t\t\t\tcount++;\n-\t\t\t}\n-\n-\t\t\tbyte[] target = new byte[count];\n-\t\t\tint i = 0;\n-\t\t\tfor (Object element : iterable) {\n-\t\t\t\ttarget[i] = convertType(element);\n-            \ti++;\n+\t\t\t\tbyte convertedValue = convertType(element);\n+\t\t\t\tbyteArrayList.add(convertedValue);\n             }\n \n-\t\t\treturn target;\n+\t\t\treturn byteArrayList.toArray();\n \t\t}\n \n \t\tif (value instanceof CharSequence) {\ndiff --git a/jodd-core/src/main/java/jodd/typeconverter/impl/CharacterArrayConverter.java b/jodd-core/src/main/java/jodd/typeconverter/impl/CharacterArrayConverter.java\nindex 08e04a15c..9a0fedede 100644\n--- a/jodd-core/src/main/java/jodd/typeconverter/impl/CharacterArrayConverter.java\n+++ b/jodd-core/src/main/java/jodd/typeconverter/impl/CharacterArrayConverter.java\n@@ -5,6 +5,7 @@ package jodd.typeconverter.impl;\n \r\n import jodd.typeconverter.TypeConverter;\r\n import jodd.typeconverter.TypeConverterManagerBean;\r\n+import jodd.util.collection.CharArrayList;\r\n \r\n import java.util.Collection;\r\n import java.util.List;\r\n@@ -84,19 +85,13 @@ public class CharacterArrayConverter implements TypeConverter<char[]> {\n \t\tif (value instanceof Iterable) {\r\n \t\t\tIterable iterable = (Iterable) value;\r\n \r\n-            int count = 0;\r\n+\t\t\tCharArrayList charArrayList = new CharArrayList();\r\n \t\t\tfor (Object element : iterable) {\r\n-\t\t\t\tcount++;\r\n-\t\t\t}\r\n-\r\n-\t\t\tchar[] target = new char[count];\r\n-\t\t\tint i = 0;\r\n-\t\t\tfor (Object element : iterable) {\r\n-\t\t\t\ttarget[i] = convertType(element);\r\n-            \ti++;\r\n+\t\t\t\tchar convertedValue = convertType(element);\r\n+\t\t\t\tcharArrayList.add(convertedValue);\r\n             }\r\n \r\n-\t\t\treturn target;\r\n+\t\t\treturn charArrayList.toArray();\r\n \t\t}\r\n \r\n \t\tif (value instanceof CharSequence) {\r\ndiff --git a/jodd-core/src/main/java/jodd/typeconverter/impl/DoubleArrayConverter.java b/jodd-core/src/main/java/jodd/typeconverter/impl/DoubleArrayConverter.java\nindex c75837e32..dbff6fa96 100644\n--- a/jodd-core/src/main/java/jodd/typeconverter/impl/DoubleArrayConverter.java\n+++ b/jodd-core/src/main/java/jodd/typeconverter/impl/DoubleArrayConverter.java\n@@ -5,6 +5,7 @@ package jodd.typeconverter.impl;\n import jodd.typeconverter.TypeConverter;\n import jodd.typeconverter.TypeConverterManagerBean;\n import jodd.util.StringUtil;\n+import jodd.util.collection.DoubleArrayList;\n \n import java.util.Collection;\n import java.util.List;\n@@ -84,19 +85,14 @@ public class DoubleArrayConverter implements TypeConverter<double[]> {\n \t\tif (value instanceof Iterable) {\n \t\t\tIterable iterable = (Iterable) value;\n \n-            int count = 0;\n-\t\t\tfor (Object element : iterable) {\n-\t\t\t\tcount++;\n-\t\t\t}\n+\t\t\tDoubleArrayList doubleArrayList = new DoubleArrayList();\n \n-\t\t\tdouble[] target = new double[count];\n-\t\t\tint i = 0;\n \t\t\tfor (Object element : iterable) {\n-\t\t\t\ttarget[i] = convertType(element);\n-            \ti++;\n+\t\t\t\tdouble convertedValue = convertType(element);\n+\t\t\t\tdoubleArrayList.add(convertedValue);\n             }\n \n-\t\t\treturn target;\n+\t\t\treturn doubleArrayList.toArray();\n \t\t}\n \n \t\tif (value instanceof CharSequence) {\ndiff --git a/jodd-core/src/main/java/jodd/typeconverter/impl/FloatArrayConverter.java b/jodd-core/src/main/java/jodd/typeconverter/impl/FloatArrayConverter.java\nindex 0a0f5a9f9..813981cec 100644\n--- a/jodd-core/src/main/java/jodd/typeconverter/impl/FloatArrayConverter.java\n+++ b/jodd-core/src/main/java/jodd/typeconverter/impl/FloatArrayConverter.java\n@@ -5,6 +5,7 @@ package jodd.typeconverter.impl;\n import jodd.typeconverter.TypeConverter;\n import jodd.typeconverter.TypeConverterManagerBean;\n import jodd.util.StringUtil;\n+import jodd.util.collection.FloatArrayList;\n \n import java.util.Collection;\n import java.util.List;\n@@ -84,19 +85,14 @@ public class FloatArrayConverter implements TypeConverter<float[]> {\n \t\tif (value instanceof Iterable) {\n \t\t\tIterable iterable = (Iterable) value;\n \n-            int count = 0;\n-\t\t\tfor (Object element : iterable) {\n-\t\t\t\tcount++;\n-\t\t\t}\n+\t\t\tFloatArrayList floatArrayList = new FloatArrayList();\n \n-\t\t\tfloat[] target = new float[count];\n-\t\t\tint i = 0;\n \t\t\tfor (Object element : iterable) {\n-\t\t\t\ttarget[i] = convertType(element);\n-            \ti++;\n+\t\t\t\tfloat convertedValue = convertType(element);\n+\t\t\t\tfloatArrayList.add(convertedValue);\n             }\n \n-\t\t\treturn target;\n+\t\t\treturn floatArrayList.toArray();\n \t\t}\n \n \t\tif (value instanceof CharSequence) {\ndiff --git a/jodd-core/src/main/java/jodd/typeconverter/impl/IntegerArrayConverter.java b/jodd-core/src/main/java/jodd/typeconverter/impl/IntegerArrayConverter.java\nindex ef794b986..acb6e18ef 100644\n--- a/jodd-core/src/main/java/jodd/typeconverter/impl/IntegerArrayConverter.java\n+++ b/jodd-core/src/main/java/jodd/typeconverter/impl/IntegerArrayConverter.java\n@@ -5,9 +5,9 @@ package jodd.typeconverter.impl;\n import jodd.typeconverter.TypeConverter;\n import jodd.typeconverter.TypeConverterManagerBean;\n import jodd.util.StringUtil;\n+import jodd.util.collection.IntArrayList;\n \n import java.util.Collection;\n-import java.util.Iterator;\n import java.util.List;\n \n /**\n@@ -84,21 +84,14 @@ public class IntegerArrayConverter implements TypeConverter<int[]> {\n \t\tif (value instanceof Iterable) {\n \t\t\tIterable iterable = (Iterable) value;\n \n-\t\t\tint count = 0;\n-\t\t\tIterator iterator = iterable.iterator();\n-\t\t\twhile (iterator.hasNext()) {\n-\t\t\t\titerator.next();\n-\t\t\t\tcount++;\n-\t\t\t}\n+\t\t\tIntArrayList intArrayList = new IntArrayList();\n \n-\t\t\tint[] target = new int[count];\n-\t\t\tint i = 0;\n \t\t\tfor (Object element : iterable) {\n-\t\t\t\ttarget[i] = convertType(element);\n-\t\t\t\ti++;\n+\t\t\t\tint convertedValue = convertType(element);\n+\t\t\t\tintArrayList.add(convertedValue);\n \t\t\t}\n \n-\t\t\treturn target;\n+\t\t\treturn intArrayList.toArray();\n \t\t}\n \n \t\tif (value instanceof CharSequence) {\ndiff --git a/jodd-core/src/main/java/jodd/typeconverter/impl/LongArrayConverter.java b/jodd-core/src/main/java/jodd/typeconverter/impl/LongArrayConverter.java\nindex 541a0b765..79e0a4a7f 100644\n--- a/jodd-core/src/main/java/jodd/typeconverter/impl/LongArrayConverter.java\n+++ b/jodd-core/src/main/java/jodd/typeconverter/impl/LongArrayConverter.java\n@@ -5,6 +5,7 @@ package jodd.typeconverter.impl;\n import jodd.typeconverter.TypeConverter;\n import jodd.typeconverter.TypeConverterManagerBean;\n import jodd.util.StringUtil;\n+import jodd.util.collection.LongArrayList;\n \n import java.util.Collection;\n import java.util.List;\n@@ -84,19 +85,14 @@ public class LongArrayConverter implements TypeConverter<long[]> {\n \t\tif (value instanceof Iterable) {\n \t\t\tIterable iterable = (Iterable) value;\n \n-            int count = 0;\n-\t\t\tfor (Object element : iterable) {\n-\t\t\t\tcount++;\n-\t\t\t}\n+\t\t\tLongArrayList longArrayList = new LongArrayList();\n \n-\t\t\tlong[] target = new long[count];\n-\t\t\tint i = 0;\n \t\t\tfor (Object element : iterable) {\n-\t\t\t\ttarget[i] = convertType(element);\n-            \ti++;\n+\t\t\t\tlong convertedValue = convertType(element);\n+            \tlongArrayList.add(convertedValue);\n             }\n \n-\t\t\treturn target;\n+\t\t\treturn longArrayList.toArray();\n \t\t}\n \n \t\tif (value instanceof CharSequence) {\ndiff --git a/jodd-core/src/main/java/jodd/typeconverter/impl/ShortArrayConverter.java b/jodd-core/src/main/java/jodd/typeconverter/impl/ShortArrayConverter.java\nindex 8dda8280c..147d2e07e 100644\n--- a/jodd-core/src/main/java/jodd/typeconverter/impl/ShortArrayConverter.java\n+++ b/jodd-core/src/main/java/jodd/typeconverter/impl/ShortArrayConverter.java\n@@ -5,6 +5,7 @@ package jodd.typeconverter.impl;\n import jodd.typeconverter.TypeConverter;\n import jodd.typeconverter.TypeConverterManagerBean;\n import jodd.util.StringUtil;\n+import jodd.util.collection.ShortArrayList;\n \n import java.util.Collection;\n import java.util.List;\n@@ -84,19 +85,14 @@ public class ShortArrayConverter implements TypeConverter<short[]> {\n \t\tif (value instanceof Iterable) {\n \t\t\tIterable iterable = (Iterable) value;\n \n-            int count = 0;\n-\t\t\tfor (Object element : iterable) {\n-\t\t\t\tcount++;\n-\t\t\t}\n+\t\t\tShortArrayList shortArrayList = new ShortArrayList();\n \n-\t\t\tshort[] target = new short[count];\n-\t\t\tint i = 0;\n \t\t\tfor (Object element : iterable) {\n-\t\t\t\ttarget[i] = convertType(element);\n-            \ti++;\n+\t\t\t\tshort convertedValue = convertType(element);\n+            \tshortArrayList.add(convertedValue);\n             }\n \n-\t\t\treturn target;\n+\t\t\treturn shortArrayList.toArray();\n \t\t}\n \n \t\tif (value instanceof CharSequence) {",
    "prepare release immutables - 2 . 2 . 7": "diff --git a/android-stub/pom.xml b/android-stub/pom.xml\nindex f7fd2f37..e13f32b1 100644\n--- a/android-stub/pom.xml\n+++ b/android-stub/pom.xml\n@@ -19,7 +19,7 @@\n   <parent>\n     <artifactId>immutables</artifactId>\n     <groupId>org.immutables</groupId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n   <artifactId>android-stub</artifactId>\n   <description>\ndiff --git a/builder/pom.xml b/builder/pom.xml\nindex c2dac25c..93ebed20 100644\n--- a/builder/pom.xml\n+++ b/builder/pom.xml\n@@ -19,7 +19,7 @@\n   <parent>\n     <artifactId>immutables</artifactId>\n     <groupId>org.immutables</groupId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n   <artifactId>builder</artifactId>\n   <name>${project.groupId}.${project.artifactId}</name>\ndiff --git a/cases/pom.xml b/cases/pom.xml\nindex 1f41c994..a6928144 100644\n--- a/cases/pom.xml\n+++ b/cases/pom.xml\n@@ -19,7 +19,7 @@\n   <parent>\n     <artifactId>immutables</artifactId>\n     <groupId>org.immutables</groupId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n   <artifactId>cases</artifactId>\n \ndiff --git a/func/pom.xml b/func/pom.xml\nindex 19bcaa6a..821007f7 100644\n--- a/func/pom.xml\n+++ b/func/pom.xml\n@@ -19,7 +19,7 @@\n   <parent>\n     <artifactId>immutables</artifactId>\n     <groupId>org.immutables</groupId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n   <artifactId>func</artifactId>\n   <description>Contains annotations for function and predicate generation for Guava pre-java8</description>\ndiff --git a/generator-fixture/pom.xml b/generator-fixture/pom.xml\nindex fc188599..cbfe47fa 100644\n--- a/generator-fixture/pom.xml\n+++ b/generator-fixture/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>org.immutables</groupId>\n     <artifactId>immutables</artifactId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n \n   <artifactId>generator-fixture</artifactId>\ndiff --git a/generator-processor/pom.xml b/generator-processor/pom.xml\nindex 1a6e2448..33527144 100644\n--- a/generator-processor/pom.xml\n+++ b/generator-processor/pom.xml\n@@ -18,7 +18,7 @@\n   <parent>\n     <artifactId>immutables</artifactId>\n     <groupId>org.immutables</groupId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n   <modelVersion>4.0.0</modelVersion>\n \ndiff --git a/generator/pom.xml b/generator/pom.xml\nindex 93398e3a..edbc1729 100644\n--- a/generator/pom.xml\n+++ b/generator/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>org.immutables</groupId>\n     <artifactId>immutables</artifactId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n \n   <artifactId>generator</artifactId>\ndiff --git a/gson/pom.xml b/gson/pom.xml\nindex 6687ae83..c5fe4da7 100644\n--- a/gson/pom.xml\n+++ b/gson/pom.xml\n@@ -19,7 +19,7 @@\n   <parent>\n     <artifactId>immutables</artifactId>\n     <groupId>org.immutables</groupId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n   <artifactId>gson</artifactId>\n \ndiff --git a/metainf/pom.xml b/metainf/pom.xml\nindex 6c9cd2fd..acab22de 100644\n--- a/metainf/pom.xml\n+++ b/metainf/pom.xml\n@@ -19,7 +19,7 @@\n   <parent>\n     <artifactId>immutables</artifactId>\n     <groupId>org.immutables</groupId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n \n   <artifactId>metainf</artifactId>\ndiff --git a/mirror/pom.xml b/mirror/pom.xml\nindex b588e16a..6bde82cc 100644\n--- a/mirror/pom.xml\n+++ b/mirror/pom.xml\n@@ -18,7 +18,7 @@\n   <parent>\n     <artifactId>immutables</artifactId>\n     <groupId>org.immutables</groupId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n   <modelVersion>4.0.0</modelVersion>\n \ndiff --git a/mongo/pom.xml b/mongo/pom.xml\nindex 342bb346..8704f398 100644\n--- a/mongo/pom.xml\n+++ b/mongo/pom.xml\n@@ -18,7 +18,7 @@\n   <parent>\n     <artifactId>immutables</artifactId>\n     <groupId>org.immutables</groupId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n   <modelVersion>4.0.0</modelVersion>\n   <artifactId>mongo</artifactId>\ndiff --git a/ordinal/pom.xml b/ordinal/pom.xml\nindex eeb65cd6..fb409c6f 100644\n--- a/ordinal/pom.xml\n+++ b/ordinal/pom.xml\n@@ -19,7 +19,7 @@\n   <parent>\n     <artifactId>immutables</artifactId>\n     <groupId>org.immutables</groupId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n   <artifactId>ordinal</artifactId>\n   <name>${project.groupId}.${project.artifactId}</name>\ndiff --git a/pom.xml b/pom.xml\nindex acce1444..0ee9a92a 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -25,7 +25,7 @@\n \n   <groupId>org.immutables</groupId>\n   <artifactId>immutables</artifactId>\n-  <version>2.2.7-SNAPSHOT</version>\n+  <version>2.2.7</version>\n   <packaging>pom</packaging>\n \n   <name>${project.groupId}.${project.artifactId}</name>\ndiff --git a/serial/pom.xml b/serial/pom.xml\nindex 261efae2..98a8c831 100644\n--- a/serial/pom.xml\n+++ b/serial/pom.xml\n@@ -19,7 +19,7 @@\n   <parent>\n     <artifactId>immutables</artifactId>\n     <groupId>org.immutables</groupId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n   <artifactId>serial</artifactId>\n   <name>${project.groupId}.${project.artifactId}</name>\ndiff --git a/testing/pom.xml b/testing/pom.xml\nindex 3815847e..1912c174 100644\n--- a/testing/pom.xml\n+++ b/testing/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>org.immutables</groupId>\n     <artifactId>immutables</artifactId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n \n   <artifactId>testing</artifactId>\ndiff --git a/utility/pom.xml b/utility/pom.xml\nindex c06ffa73..6258c2b1 100644\n--- a/utility/pom.xml\n+++ b/utility/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>org.immutables</groupId>\n     <artifactId>immutables</artifactId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n \n   <groupId>org.immutables.dependency</groupId>\ndiff --git a/value-fixture/pom.xml b/value-fixture/pom.xml\nindex dae7a293..dd102695 100644\n--- a/value-fixture/pom.xml\n+++ b/value-fixture/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>org.immutables</groupId>\n     <artifactId>immutables</artifactId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n \n   <artifactId>value-fixture</artifactId>\ndiff --git a/value-processor/pom.xml b/value-processor/pom.xml\nindex 8c1e3ecf..69033539 100644\n--- a/value-processor/pom.xml\n+++ b/value-processor/pom.xml\n@@ -20,7 +20,7 @@\n   <parent>\n     <groupId>org.immutables</groupId>\n     <artifactId>immutables</artifactId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n \n   <artifactId>value-processor</artifactId>\ndiff --git a/value/pom.xml b/value/pom.xml\nindex d9750ec4..482ca65f 100644\n--- a/value/pom.xml\n+++ b/value/pom.xml\n@@ -18,7 +18,7 @@\n   <parent>\n     <artifactId>immutables</artifactId>\n     <groupId>org.immutables</groupId>\n-    <version>2.2.7-SNAPSHOT</version>\n+    <version>2.2.7</version>\n   </parent>\n   <modelVersion>4.0.0</modelVersion>\n ",
    "updating CHANGES . txt .": "diff --git a/enterprise/CHANGES.txt b/enterprise/CHANGES.txt\nindex e69de29bb2d..4dba816efec 100644\n--- a/enterprise/CHANGES.txt\n+++ b/enterprise/CHANGES.txt\n@@ -0,0 +1,61 @@\n+1.2.M04 (2010-11-18)\r\n+--------------------\r\n+\r\n+o added a server packaging as part of neo4j\n+o added more configuration options to neo4j-lucene-index\r\n+o generating javadocs for all components automatically to components.neo4j.org/{component-name}\r\n+o Added ImpermanentGraphDatabase to aid in testing\r\n+\r\n+1.2.M03 (2010-11-04)\r\n+--------------------\r\n+\r\n+o Monitoring/management over JMX was moved to the new neo4j-management component.\r\n+o Added ability to get the name and configuration of existing integrated indexes.\r\n+\r\n+1.2.M02 (2010-10-21)\r\n+--------------------\r\n+\r\n+-New components\r\n+o Lucene index, an implementation of the integrated index framework\r\n+  using lucene as backend. Planned to replace current index service.\r\n+\r\n+-Important changes\r\n+o Fixed shutdown issue regarding UDC leaving a thread running.\r\n+o A new index framework integrated into the kernel API.\r\n+o Getting relationships is faster due to less cache lookups.\r\n+\r\n+1.2.M01 (2010-10-08)\r\n+--------------------\r\n+\r\n+-New components\r\n+o Udc\r\n+\r\n+-Important changes\r\n+o Index:\r\n+   - Lucene version upgraded to 3.0.1\r\n+o Shell:\r\n+   - Apps discoverable with service locator\r\n+   - Added read-only mode on server\r\n+   - 'host' and 'config' options\r\n+o Graph-algo:\r\n+   - Find paths of certain length\r\n+o Kernel:\r\n+   - Lower memory footprint\r\n+   - Higher throughput/concurrency for reads\r\n+   - Common interface for loading kernel extensions (f.ex. shell)\r\n+\r\n+1.1 (2010-07-29)\r\n+----------------\r\n+\r\n+-New components\r\n+o Graph-algo\r\n+o Online-backup\r\n+\r\n+1.0 (2010-02-16)\r\n+----------------\r\n+\r\n+-Initial components\r\n+o Kernel\r\n+o Index\r\n+o Remote-graphdb\r\n+o Shell\r",
    "Remove verbose option": "diff --git a/misc/metrics-extensions/modules/ballerina-prometheus-extension/src/main/java/org/ballerinalang/observe/metrics/extension/prometheus/PrometheusMeterRegistryProvider.java b/misc/metrics-extensions/modules/ballerina-prometheus-extension/src/main/java/org/ballerinalang/observe/metrics/extension/prometheus/PrometheusMeterRegistryProvider.java\nindex 2506c038105..abf3a1e58ef 100644\n--- a/misc/metrics-extensions/modules/ballerina-prometheus-extension/src/main/java/org/ballerinalang/observe/metrics/extension/prometheus/PrometheusMeterRegistryProvider.java\n+++ b/misc/metrics-extensions/modules/ballerina-prometheus-extension/src/main/java/org/ballerinalang/observe/metrics/extension/prometheus/PrometheusMeterRegistryProvider.java\n@@ -42,7 +42,6 @@ import static org.ballerinalang.util.observability.ObservabilityConstants.CONFIG\n public class PrometheusMeterRegistryProvider implements MeterRegistryProvider {\n \n     private static final String METRICS_PORT = CONFIG_TABLE_METRICS + \".port\";\n-    private static final String VERBOSE = CONFIG_TABLE_METRICS + \".verbose\";\n     private static final int DEFAULT_PORT = 9797;\n \n     private static final PrintStream console = System.out;\n@@ -55,7 +54,6 @@ public class PrometheusMeterRegistryProvider implements MeterRegistryProvider {\n     @Override\n     public MeterRegistry get() {\n         ConfigRegistry configRegistry = ConfigRegistry.getInstance();\n-        final boolean verbose = Boolean.valueOf(configRegistry.getConfiguration(VERBOSE));\n         PrometheusMeterRegistry registry = new PrometheusMeterRegistry(new BallerinaPrometheusConfig());\n         String portConfigValue = configRegistry.getConfiguration(METRICS_PORT);\n         int configuredPort = 0;\n@@ -69,7 +67,7 @@ public class PrometheusMeterRegistryProvider implements MeterRegistryProvider {\n         // Start in default port if there is no configured port.\n         int port = configuredPort > 0 ? configuredPort : DEFAULT_PORT;\n         try {\n-            startServer(port, registry, verbose);\n+            startServer(port, registry);\n         } catch (BindException e) {\n             if (configuredPort > 0) {\n                 // User has configured a port and the program should exit.\n@@ -86,7 +84,7 @@ public class PrometheusMeterRegistryProvider implements MeterRegistryProvider {\n                     } catch (IOException e1) {\n                         // Ignore IOException on close()\n                     }\n-                    startServer(port, registry, true);\n+                    startServer(port, registry);\n                 } catch (IOException e1) {\n                     throw new IllegalStateException(\"Failed to bind Prometheus HTTP endpoint to port \"\n                             + port + \": \" + e.getMessage(), e);\n@@ -98,13 +96,11 @@ public class PrometheusMeterRegistryProvider implements MeterRegistryProvider {\n         return registry;\n   ",
    "Add SSA test file to the demo app .": "diff --git a/demos/main/src/main/assets/media.exolist.json b/demos/main/src/main/assets/media.exolist.json\nindex 8550377ddf..4375bdf3a7 100644\n--- a/demos/main/src/main/assets/media.exolist.json\n+++ b/demos/main/src/main/assets/media.exolist.json\n@@ -600,6 +600,13 @@\n         \"subtitle_uri\": \"https://storage.googleapis.com/exoplayer-test-media-1/ttml/netflix_ttml_sample.xml\",\n         \"subtitle_mime_type\": \"application/ttml+xml\",\n         \"subtitle_language\": \"en\"\n+      },\n+      {\n+        \"name\": \"SSA/ASS position & alignment\",\n+        \"uri\": \"https://storage.googleapis.com/exoplayer-test-media-1/gen-3/screens/dash-vod-single-segment/video-avc-baseline-480.mp4\",\n+        \"subtitle_uri\": \"https://storage.googleapis.com/exoplayer-test-media-1/ssa/test-subs-position.ass\",\n+        \"subtitle_mime_type\": \"text/x-ssa\",\n+        \"subtitle_language\": \"en\"\n       }\n     ]\n   }",
    "Provide dependency to javax . annotation . Generated for android with Retrofit 2 .": "diff --git a/modules/swagger-codegen/src/main/resources/Java/libraries/retrofit2/build.gradle.mustache b/modules/swagger-codegen/src/main/resources/Java/libraries/retrofit2/build.gradle.mustache\nindex a5cfd0ebef2..9f34c16afc5 100644\n--- a/modules/swagger-codegen/src/main/resources/Java/libraries/retrofit2/build.gradle.mustache\n+++ b/modules/swagger-codegen/src/main/resources/Java/libraries/retrofit2/build.gradle.mustache\n@@ -46,6 +46,10 @@ if(hasProperty('target') && target == 'android') {\n \t            }\n \t        }\n \t    }\n+\n+      dependencies {\n+          provided 'javax.annotation:jsr250-api:1.0'\n+      }\n \t}\n \n \tafterEvaluate {\ndiff --git a/samples/client/petstore/java/retrofit2/build.gradle b/samples/client/petstore/java/retrofit2/build.gradle\nindex ae27a595eb5..ab71653f739 100644\n--- a/samples/client/petstore/java/retrofit2/build.gradle\n+++ b/samples/client/petstore/java/retrofit2/build.gradle\n@@ -46,6 +46,10 @@ if(hasProperty('target') && target == 'android') {\n \t            }\n \t        }\n \t    }\n+\n+      dependencies {\n+          provided 'javax.annotation:jsr250-api:1.0'\n+      }\n \t}\n \n \tafterEvaluate {",
    "Remove current child before adding new one in transform func - to - func connection": "diff --git a/modules/web/js/ballerina/components/transform-node-manager.js b/modules/web/js/ballerina/components/transform-node-manager.js\nindex 8c1b5725cd1..b4d80e0b2a5 100644\n--- a/modules/web/js/ballerina/components/transform-node-manager.js\n+++ b/modules/web/js/ballerina/components/transform-node-manager.js\n@@ -148,13 +148,16 @@ class TransformNodeManager {\n         // based on how the nested invocation is drawn. i.e. : adding two function nodes and then drawing\n         // will be different from removing a param from a function and then drawing the connection\n         // to the parent function invocation.\n-        const assignmentStmtTarget = this.getParentAssignmentStmt(target.funcInv);\n         const assignmentStmtSource = this.getParentAssignmentStmt(source.funcInv);\n \n-        const funcNode = assignmentStmtTarget.getRightExpression();\n-\n         // remove the source assignment statement since it is now included in the target assignment statement.\n         this._transformStmt.removeChild(assignmentStmtSource, true);\n+\n+        const currentChild = target.funcInv.getChildren()[target.index];\n+        if(currentChild) {\n+            target.funcInv.removeChild(currentChild, true);\n+        }\n+\n         target.funcInv.addChild(source.funcInv, target.index);\n     }\n ",
    "Added sample transformation for the Rules Accumulator step .": "diff --git a/assembly/package-res/samples/transformations/Rules Accumulator - Solve Golfer Rule.ktr b/assembly/package-res/samples/transformations/Rules Accumulator - Solve Golfer Rule.ktr\nnew file mode 100644\nindex 0000000000..b931c363a7\n--- /dev/null\n+++ b/assembly/package-res/samples/transformations/Rules Accumulator - Solve Golfer Rule.ktr\t\n@@ -0,0 +1,356 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<transformation>\n+  <info>\n+    <name>Rules Accumulator - Solve Golfer Rule</name>\n+    <description/>\n+    <extended_description/>\n+    <trans_version/>\n+    <trans_type>Normal</trans_type>\n+    <trans_status>0</trans_status>\n+    <directory>&#x2f;</directory>\n+    <parameters>\n+    </parameters>\n+    <log>\n+<trans-log-table><connection/>\n+<schema/>\n+<table/>\n+<size_limit_lines/>\n+<interval/>\n+<timeout_days/>\n+<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field><field><id>EXECUTING_SERVER</id><enabled>N</enabled><name>EXECUTING_SERVER</name></field><field><id>EXECUTING_USER</id><enabled>N</enabled><name>EXECUTING_USER</name></field><field><id>CLIENT</id><enabled>N</enabled><name>CLIENT</name></field></trans-log-table>\n+<perf-log-table><connection/>\n+<schema/>\n+<table/>\n+<interval/>\n+<timeout_days/>\n+<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>\n+<channel-log-table><connection/>\n+<schema/>\n+<table/>\n+<timeout_days/>\n+<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>\n+<step-log-table><connection/>\n+<schema/>\n+<table/>\n+<timeout_days/>\n+<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>\n+<metrics-log-table><connection/>\n+<schema/>\n+<table/>\n+<timeout_days/>\n+<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>METRICS_DATE</id><enabled>Y</enabled><name>METRICS_DATE</name></field><field><id>METRICS_CODE</id><enabled>Y</enabled><name>METRICS_CODE</name></field><field><id>METRICS_DESCRIPTION</id><enabled>Y</enabled><name>METRICS_DESCRIPTION</name></field><field><id>METRICS_SUBJECT</id><enabled>Y</enabled><name>METRICS_SUBJECT</name></field><field><id>METRICS_TYPE</id><enabled>Y</enabled><name>METRICS_TYPE</name></field><field><id>METRICS_VALUE</id><enabled>Y</enabled><name>METRICS_VALUE</name></field></metrics-log-table>\n+    </log>\n+    <maxdate>\n+      <connection/>\n+      <table/>\n+      <field/>\n+      <offset>0.0</offset>\n+      <maxdiff>0.0</maxdiff>\n+    </maxdate>\n+    <size_rowset>10000</size_rowset>\n+    <sleep_time_empty>50</sleep_time_empty>\n+    <sleep_time_full>50</sleep_time_full>\n+    <unique_connections>N</unique_connections>\n+    <feedback_shown>Y</feedback_shown>\n+    <feedback_size>50000</feedback_size>\n+    <using_thread_priorities>Y</using_thread_priorities>\n+    <shared_objects_file/>\n+    <capture_step_performance>N</capture_step_performance>\n+    <step_performance_capturing_delay>1000</step_performance_capturing_delay>\n+    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>\n+    <dependencies>\n+    </dependencies>\n+    <partitionschemas>\n+    </partitionschemas>\n+    <slaveservers>\n+    </slaveservers>\n+    <clusterschemas>\n+    </clusterschemas>\n+  <created_user>-</created_user>\n+  <created_date>2011&#x2f;08&#x2f;29 13&#x3a;57&#x3a;42.720</created_date>\n+  <modified_user>-</modified_user>\n+  <modified_date>2011&#x2f;08&#x2f;29 13&#x3a;57&#x3a;42.720</modified_date>\n+  </info>\n+  <notepads>\n+    <notepad>\n+      <note>Puzzle rules&#x3a;&#xa;&#xa;- A foursome of golfers is standing at a tee, in a line from left to right.&#xa;- Each golfer wears different colored pants&#x3b; one is wearing red pants.&#xa;- The golfer to Fred&#x2019;s immediate right is wearing blue pants.&#xa;- Joe is second in line.&#xa;- Bob is wearing plaid pants.&#xa;- Tom isn&#x2019;t in position one or four, and he isn&#x2019;t wearing the hideous orange pants.&#xa;- In what order will the four golfers tee off, and what color are each golfer&#x2019;s pants&#x3f;&#x201d;</note>\n+      <xloc>28</xloc>\n+      <yloc>365</yloc>\n+      <width>630</width>\n+      <heigth>186</heigth>\n+      <fontname>Arial</fontname>\n+      <fontsize>10</fontsize>\n+      <fontbold>N</fontbold>\n+      <fontitalic>N</fontitalic>\n+      <fontcolorred>0</fontcolorred>\n+      <fontcolorgreen>0</fontcolorgreen>\n+      <fontcolorblue>0</fontcolorblue>\n+      <backgroundcolorred>255</backgroundcolorred>\n+      <backgroundcolorgreen>165</backgroundcolorgreen>\n+      <backgroundcolorblue>0</backgroundcolorblue>\n+      <bordercolorred>100</bordercolorred>\n+      <bordercolorgreen>100</bordercolorgreen>\n+      <bordercolorblue>100</bordercolorblue>\n+      <drawshadow>Y</drawshadow>\n+    </notepad>\n+  </notepads>\n+  <order>\n+  <hop> <from>Generate Golfers</from><to>Insert Position</to><enabled>Y</enabled> </hop>\n+  <hop> <from>Generate Position</from><to>Insert Position</to><enabled>Y</enabled> </hop>\n+  <hop> <from>Insert Position</from><to>Insert Color</to><enabled>Y</enabled> </hop>\n+  <hop> <from>Generate Color</from><to>Insert Color</to><enabled>Y</enabled> </hop>\n+  <hop> <from>Insert Color</from><to>Rule Accumulator</to><enabled>Y</enabled> </hop>\n+  <hop> <from>Rule Accumulator</from><to>Sort rows</to><enabled>Y</enabled> </hop>\n+  </order>\n+  <step>\n+    <name>Generate Color</name>\n+    <type>DataGrid</type>\n+    <description/>\n+    <distribute>Y</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+    <fields>\n+      <field>\n+        <name>color</name>\n+        <type/>\n+        <format/>\n+        <currency/>\n+        <decimal/>\n+        <group/>\n+        <length>-1</length>\n+        <precision>-1</precision>\n+        <set_empty_string>N</set_empty_string>\n+      </field>\n+    </fields>\n+    <data>\n+      <line> <item>red</item> </line>\n+      <line> <item>blue</item> </line>\n+      <line> <item>plaid</item> </line>\n+      <line> <item>orange</item> </line>\n+    </data>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>453</xloc>\n+      <yloc>24</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step>\n+    <name>Generate Golfers</name>\n+    <type>DataGrid</type>\n+    <description/>\n+    <distribute>Y</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+    <fields>\n+      <field>\n+        <name>name</name>\n+        <type>String</type>\n+        <format/>\n+        <currency/>\n+        <decimal/>\n+        <group/>\n+        <length>-1</length>\n+        <precision>-1</precision>\n+        <set_empty_string>N</set_empty_string>\n+      </field>\n+    </fields>\n+    <data>\n+      <line> <item>Fred</item> </line>\n+      <line> <item>Joe</item> </line>\n+      <line> <item>Bob</item> </line>\n+      <line> <item>Tom</item> </line>\n+    </data>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>101</xloc>\n+      <yloc>126</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step>\n+    <name>Generate Position</name>\n+    <type>DataGrid</type>\n+    <description/>\n+    <distribute>Y</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+    <fields>\n+      <field>\n+        <name>position</name>\n+        <type>Integer</type>\n+        <format/>\n+        <currency/>\n+        <decimal/>\n+        <group/>\n+        <length>-1</length>\n+        <precision>-1</precision>\n+        <set_empty_string>N</set_empty_string>\n+      </field>\n+    </fields>\n+    <data>\n+      <line> <item>1</item> </line>\n+      <line> <item>2</item> </line>\n+      <line> <item>3</item> </line>\n+      <line> <item>4</item> </line>\n+    </data>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>271</xloc>\n+      <yloc>24</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step>\n+    <name>Insert Color</name>\n+    <type>JoinRows</type>\n+    <description/>\n+    <distribute>N</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>\n+      <prefix>out</prefix>\n+      <cache_size>500</cache_size>\n+      <main/>\n+    <compare>\n+<condition>\n+ <negated>N</negated>\n+ <leftvalue>name</leftvalue>\n+ <function>IS NOT NULL</function>\n+ <rightvalue/>\n+ </condition>\n+    </compare>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>453</xloc>\n+      <yloc>126</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step>\n+    <name>Insert Position</name>\n+    <type>JoinRows</type>\n+    <description/>\n+    <distribute>Y</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>\n+      <prefix>out</prefix>\n+      <cache_size>500</cache_size>\n+      <main/>\n+    <compare>\n+<condition>\n+ <negated>N</negated>\n+ <leftvalue>name</leftvalue>\n+ <function>IS NOT NULL</function>\n+ <rightvalue/>\n+ </condition>\n+    </compare>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>271</xloc>\n+      <yloc>126</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step>\n+    <name>Rule Accumulator</name>\n+    <type>RuleAccumulator</type>\n+    <description/>\n+    <distribute>Y</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+    <fields>\n+      <field>\n+        <column-name>position</column-name>\n+        <column-type>Integer</column-type>\n+      </field>\n+      <field>\n+        <column-name>name</column-name>\n+        <column-type>String</column-type>\n+      </field>\n+      <field>\n+        <column-name>color</column-name>\n+        <column-type>String</column-type>\n+      </field>\n+    </fields>\n+    <rule-file/>\n+    <rule-definition>package org.pentaho.di.trans.steps.rules&#xa; &#xa;import org.pentaho.di.trans.steps.rules.Rules.Row&#x3b;&#xa;&#xa;&#x23; Courtesy of http&#x3a;&#x2f;&#x2f;docs.huihoo.com&#x2f;drools&#x2f;4.0.7&#x2f;ch10.html&#xa;&#xa;rule &#x22;Golfers problem&#x22;&#xa;    dialect &#x22;mvel&#x22;&#xa;    when&#xa;&#xa;\t&#x23; Define Fred&#xa;\t&#x24;fred &#x3a; Row &#x28; externalSource &#x3d;&#x3d; true,&#xa;\t\t\t\tcolumn&#x5b;&#x22;name&#x22;&#x5d; &#x3d;&#x3d; &#x22;Fred&#x22;&#xa;\t&#x29;&#xa;&#xa;\t&#x23; Define Joe&#xa;\t&#x24;joe &#x3a; Row &#x28; \texternalSource &#x3d;&#x3d; true, &#xa;\t\t\t      \tcolumn&#x5b;&#x22;name&#x22;&#x5d; &#x3d;&#x3d; &#x22;Joe&#x22;,&#xa;\t\t\t      \tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x3d;&#x3d; 2,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; &#x24;fred.column&#x5b;&#x22;position&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x24;fred.column&#x5b;&#x22;color&#x22;&#x5d;&#xa;\t&#x29;&#xa;       &#xa;\t&#x23; Define Bob&#xa;\t&#x24;bob &#x3a; Row &#x28; externalSource &#x3d;&#x3d; true,&#xa;\t\t\t\tcolumn&#x5b;&#x22;name&#x22;&#x5d; &#x3d;&#x3d; &#x22;Bob&#x22;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; &#x24;fred.column&#x5b;&#x22;position&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; &#x24;joe.column&#x5b;&#x22;position&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x3d;&#x3d; &#x22;plaid&#x22;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x24;fred.column&#x5b;&#x22;color&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x24;joe.column&#x5b;&#x22;color&#x22;&#x5d;&#xa;\t&#x29;&#xa;&#xa;\t&#x23; Define Tom&#xa;\t&#x24;tom &#x3a; Row &#x28; externalSource &#x3d;&#x3d; true,&#xa;\t\t\t\tcolumn&#x5b;&#x22;name&#x22;&#x5d; &#x3d;&#x3d; &#x22;Tom&#x22;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; 1,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; 4,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; &#x24;fred.column&#x5b;&#x22;position&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; &#x24;joe.column&#x5b;&#x22;position&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; &#x24;bob.column&#x5b;&#x22;position&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x22;orange&#x22;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x24;fred.column&#x5b;&#x22;color&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x24;joe.column&#x5b;&#x22;color&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x24;bob.column&#x5b;&#x22;color&#x22;&#x5d;&#xa;\t&#x29;&#xa;&#xa;\t&#x23; Define Unknown&#xa;\t&#x24;unknown &#x3a; Row &#x28; externalSource &#x3d;&#x3d; true,&#xa;\t\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x3d;&#x3d; &#x28;&#x24;fred.column&#x5b;&#x22;position&#x22;&#x5d; &#x2b; 1&#x29;,&#xa;\t\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x3d;&#x3d; &#x22;blue&#x22;,&#xa;\t\t\t\t\tthis in &#x28; &#x24;joe, &#x24;bob, &#x24;tom&#x29;&#xa;\t&#x29;&#xa;&#xa;    then&#xa;&#xa;      Row fredRow &#x3d; new Row&#x28;&#x29;&#x3b;&#xa;      Row joeRow &#x3d; new Row&#x28;&#x29;&#x3b;&#xa;      Row bobRow &#x3d; new Row&#x28;&#x29;&#x3b;&#xa;      Row tomRow &#x3d; new Row&#x28;&#x29;&#x3b;&#xa;&#xa;\tfredRow.addColumn&#x28;&#x22;name&#x22;, &#x22;Fred&#x22;&#x29;&#x3b;&#xa;\tfredRow.addColumn&#x28;&#x22;position&#x22;, &#x24;fred.column&#x5b;&#x22;position&#x22;&#x5d;&#x29;&#x3b;&#xa;\tfredRow.addColumn&#x28;&#x22;color&#x22;, &#x24;fred.column&#x5b;&#x22;color&#x22;&#x5d;&#x29;&#x3b;&#xa;&#xa;\tjoeRow.addColumn&#x28;&#x22;name&#x22;, &#x22;Joe&#x22;&#x29;&#x3b;&#xa;\tjoeRow.addColumn&#x28;&#x22;position&#x22;, &#x24;joe.column&#x5b;&#x22;position&#x22;&#x5d;&#x29;&#x3b;&#xa;\tjoeRow.addColumn&#x28;&#x22;color&#x22;, &#x24;joe.column&#x5b;&#x22;color&#x22;&#x5d;&#x29;&#x3b;&#xa;&#xa;\tbobRow.addColumn&#x28;&#x22;name&#x22;, &#x22;Bob&#x22;&#x29;&#x3b;&#xa;\tbobRow.addColumn&#x28;&#x22;position&#x22;, &#x24;bob.column&#x5b;&#x22;position&#x22;&#x5d;&#x29;&#x3b;&#xa;\tbobRow.addColumn&#x28;&#x22;color&#x22;, &#x24;bob.column&#x5b;&#x22;color&#x22;&#x5d;&#x29;&#x3b;&#xa;&#xa;\ttomRow.addColumn&#x28;&#x22;name&#x22;, &#x22;Tom&#x22;&#x29;&#x3b;&#xa;\ttomRow.addColumn&#x28;&#x22;position&#x22;, &#x24;tom.column&#x5b;&#x22;position&#x22;&#x5d;&#x29;&#x3b;&#xa;\ttomRow.addColumn&#x28;&#x22;color&#x22;, &#x24;tom.column&#x5b;&#x22;color&#x22;&#x5d;&#x29;&#x3b;&#xa;&#xa;      \tinsert&#x28;fredRow&#x29;&#x3b;&#xa;      \tinsert&#x28;joeRow&#x29;&#x3b;&#xa;      \tinsert&#x28;bobRow&#x29;&#x3b;&#xa;      \tinsert&#x28;tomRow&#x29;&#x3b; &#xa;&#xa;end</rule-definition>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>656</xloc>\n+      <yloc>126</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step>\n+    <name>Sort rows</name>\n+    <type>SortRows</type>\n+    <description/>\n+    <distribute>Y</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>\n+      <prefix>out</prefix>\n+      <sort_size>1000000</sort_size>\n+      <free_memory/>\n+      <compress>N</compress>\n+      <compress_variable/>\n+      <unique_rows>N</unique_rows>\n+    <fields>\n+      <field>\n+        <name>position</name>\n+        <ascending>Y</ascending>\n+        <case_sensitive>N</case_sensitive>\n+        <presorted>N</presorted>\n+      </field>\n+    </fields>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>846</xloc>\n+      <yloc>126</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step_error_handling>\n+  </step_error_handling>\n+   <slave-step-copy-partition-distribution>\n+</slave-step-copy-partition-distribution>\n+   <slave_transformation>N</slave_transformation>\n+\n+</transformation>\ndiff --git a/testfiles/blackbox/tests/trans/steps/rule/golf_rule.ktr b/testfiles/blackbox/tests/trans/steps/rule/golf_rule.ktr\nnew file mode 100644\nindex 0000000000..b931c363a7\n--- /dev/null\n+++ b/testfiles/blackbox/tests/trans/steps/rule/golf_rule.ktr\n@@ -0,0 +1,356 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<transformation>\n+  <info>\n+    <name>Rules Accumulator - Solve Golfer Rule</name>\n+    <description/>\n+    <extended_description/>\n+    <trans_version/>\n+    <trans_type>Normal</trans_type>\n+    <trans_status>0</trans_status>\n+    <directory>&#x2f;</directory>\n+    <parameters>\n+    </parameters>\n+    <log>\n+<trans-log-table><connection/>\n+<schema/>\n+<table/>\n+<size_limit_lines/>\n+<interval/>\n+<timeout_days/>\n+<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field><field><id>EXECUTING_SERVER</id><enabled>N</enabled><name>EXECUTING_SERVER</name></field><field><id>EXECUTING_USER</id><enabled>N</enabled><name>EXECUTING_USER</name></field><field><id>CLIENT</id><enabled>N</enabled><name>CLIENT</name></field></trans-log-table>\n+<perf-log-table><connection/>\n+<schema/>\n+<table/>\n+<interval/>\n+<timeout_days/>\n+<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>\n+<channel-log-table><connection/>\n+<schema/>\n+<table/>\n+<timeout_days/>\n+<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>\n+<step-log-table><connection/>\n+<schema/>\n+<table/>\n+<timeout_days/>\n+<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>\n+<metrics-log-table><connection/>\n+<schema/>\n+<table/>\n+<timeout_days/>\n+<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>METRICS_DATE</id><enabled>Y</enabled><name>METRICS_DATE</name></field><field><id>METRICS_CODE</id><enabled>Y</enabled><name>METRICS_CODE</name></field><field><id>METRICS_DESCRIPTION</id><enabled>Y</enabled><name>METRICS_DESCRIPTION</name></field><field><id>METRICS_SUBJECT</id><enabled>Y</enabled><name>METRICS_SUBJECT</name></field><field><id>METRICS_TYPE</id><enabled>Y</enabled><name>METRICS_TYPE</name></field><field><id>METRICS_VALUE</id><enabled>Y</enabled><name>METRICS_VALUE</name></field></metrics-log-table>\n+    </log>\n+    <maxdate>\n+      <connection/>\n+      <table/>\n+      <field/>\n+      <offset>0.0</offset>\n+      <maxdiff>0.0</maxdiff>\n+    </maxdate>\n+    <size_rowset>10000</size_rowset>\n+    <sleep_time_empty>50</sleep_time_empty>\n+    <sleep_time_full>50</sleep_time_full>\n+    <unique_connections>N</unique_connections>\n+    <feedback_shown>Y</feedback_shown>\n+    <feedback_size>50000</feedback_size>\n+    <using_thread_priorities>Y</using_thread_priorities>\n+    <shared_objects_file/>\n+    <capture_step_performance>N</capture_step_performance>\n+    <step_performance_capturing_delay>1000</step_performance_capturing_delay>\n+    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>\n+    <dependencies>\n+    </dependencies>\n+    <partitionschemas>\n+    </partitionschemas>\n+    <slaveservers>\n+    </slaveservers>\n+    <clusterschemas>\n+    </clusterschemas>\n+  <created_user>-</created_user>\n+  <created_date>2011&#x2f;08&#x2f;29 13&#x3a;57&#x3a;42.720</created_date>\n+  <modified_user>-</modified_user>\n+  <modified_date>2011&#x2f;08&#x2f;29 13&#x3a;57&#x3a;42.720</modified_date>\n+  </info>\n+  <notepads>\n+    <notepad>\n+      <note>Puzzle rules&#x3a;&#xa;&#xa;- A foursome of golfers is standing at a tee, in a line from left to right.&#xa;- Each golfer wears different colored pants&#x3b; one is wearing red pants.&#xa;- The golfer to Fred&#x2019;s immediate right is wearing blue pants.&#xa;- Joe is second in line.&#xa;- Bob is wearing plaid pants.&#xa;- Tom isn&#x2019;t in position one or four, and he isn&#x2019;t wearing the hideous orange pants.&#xa;- In what order will the four golfers tee off, and what color are each golfer&#x2019;s pants&#x3f;&#x201d;</note>\n+      <xloc>28</xloc>\n+      <yloc>365</yloc>\n+      <width>630</width>\n+      <heigth>186</heigth>\n+      <fontname>Arial</fontname>\n+      <fontsize>10</fontsize>\n+      <fontbold>N</fontbold>\n+      <fontitalic>N</fontitalic>\n+      <fontcolorred>0</fontcolorred>\n+      <fontcolorgreen>0</fontcolorgreen>\n+      <fontcolorblue>0</fontcolorblue>\n+      <backgroundcolorred>255</backgroundcolorred>\n+      <backgroundcolorgreen>165</backgroundcolorgreen>\n+      <backgroundcolorblue>0</backgroundcolorblue>\n+      <bordercolorred>100</bordercolorred>\n+      <bordercolorgreen>100</bordercolorgreen>\n+      <bordercolorblue>100</bordercolorblue>\n+      <drawshadow>Y</drawshadow>\n+    </notepad>\n+  </notepads>\n+  <order>\n+  <hop> <from>Generate Golfers</from><to>Insert Position</to><enabled>Y</enabled> </hop>\n+  <hop> <from>Generate Position</from><to>Insert Position</to><enabled>Y</enabled> </hop>\n+  <hop> <from>Insert Position</from><to>Insert Color</to><enabled>Y</enabled> </hop>\n+  <hop> <from>Generate Color</from><to>Insert Color</to><enabled>Y</enabled> </hop>\n+  <hop> <from>Insert Color</from><to>Rule Accumulator</to><enabled>Y</enabled> </hop>\n+  <hop> <from>Rule Accumulator</from><to>Sort rows</to><enabled>Y</enabled> </hop>\n+  </order>\n+  <step>\n+    <name>Generate Color</name>\n+    <type>DataGrid</type>\n+    <description/>\n+    <distribute>Y</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+    <fields>\n+      <field>\n+        <name>color</name>\n+        <type/>\n+        <format/>\n+        <currency/>\n+        <decimal/>\n+        <group/>\n+        <length>-1</length>\n+        <precision>-1</precision>\n+        <set_empty_string>N</set_empty_string>\n+      </field>\n+    </fields>\n+    <data>\n+      <line> <item>red</item> </line>\n+      <line> <item>blue</item> </line>\n+      <line> <item>plaid</item> </line>\n+      <line> <item>orange</item> </line>\n+    </data>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>453</xloc>\n+      <yloc>24</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step>\n+    <name>Generate Golfers</name>\n+    <type>DataGrid</type>\n+    <description/>\n+    <distribute>Y</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+    <fields>\n+      <field>\n+        <name>name</name>\n+        <type>String</type>\n+        <format/>\n+        <currency/>\n+        <decimal/>\n+        <group/>\n+        <length>-1</length>\n+        <precision>-1</precision>\n+        <set_empty_string>N</set_empty_string>\n+      </field>\n+    </fields>\n+    <data>\n+      <line> <item>Fred</item> </line>\n+      <line> <item>Joe</item> </line>\n+      <line> <item>Bob</item> </line>\n+      <line> <item>Tom</item> </line>\n+    </data>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>101</xloc>\n+      <yloc>126</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step>\n+    <name>Generate Position</name>\n+    <type>DataGrid</type>\n+    <description/>\n+    <distribute>Y</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+    <fields>\n+      <field>\n+        <name>position</name>\n+        <type>Integer</type>\n+        <format/>\n+        <currency/>\n+        <decimal/>\n+        <group/>\n+        <length>-1</length>\n+        <precision>-1</precision>\n+        <set_empty_string>N</set_empty_string>\n+      </field>\n+    </fields>\n+    <data>\n+      <line> <item>1</item> </line>\n+      <line> <item>2</item> </line>\n+      <line> <item>3</item> </line>\n+      <line> <item>4</item> </line>\n+    </data>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>271</xloc>\n+      <yloc>24</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step>\n+    <name>Insert Color</name>\n+    <type>JoinRows</type>\n+    <description/>\n+    <distribute>N</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>\n+      <prefix>out</prefix>\n+      <cache_size>500</cache_size>\n+      <main/>\n+    <compare>\n+<condition>\n+ <negated>N</negated>\n+ <leftvalue>name</leftvalue>\n+ <function>IS NOT NULL</function>\n+ <rightvalue/>\n+ </condition>\n+    </compare>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>453</xloc>\n+      <yloc>126</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step>\n+    <name>Insert Position</name>\n+    <type>JoinRows</type>\n+    <description/>\n+    <distribute>Y</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>\n+      <prefix>out</prefix>\n+      <cache_size>500</cache_size>\n+      <main/>\n+    <compare>\n+<condition>\n+ <negated>N</negated>\n+ <leftvalue>name</leftvalue>\n+ <function>IS NOT NULL</function>\n+ <rightvalue/>\n+ </condition>\n+    </compare>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>271</xloc>\n+      <yloc>126</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step>\n+    <name>Rule Accumulator</name>\n+    <type>RuleAccumulator</type>\n+    <description/>\n+    <distribute>Y</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+    <fields>\n+      <field>\n+        <column-name>position</column-name>\n+        <column-type>Integer</column-type>\n+      </field>\n+      <field>\n+        <column-name>name</column-name>\n+        <column-type>String</column-type>\n+      </field>\n+      <field>\n+        <column-name>color</column-name>\n+        <column-type>String</column-type>\n+      </field>\n+    </fields>\n+    <rule-file/>\n+    <rule-definition>package org.pentaho.di.trans.steps.rules&#xa; &#xa;import org.pentaho.di.trans.steps.rules.Rules.Row&#x3b;&#xa;&#xa;&#x23; Courtesy of http&#x3a;&#x2f;&#x2f;docs.huihoo.com&#x2f;drools&#x2f;4.0.7&#x2f;ch10.html&#xa;&#xa;rule &#x22;Golfers problem&#x22;&#xa;    dialect &#x22;mvel&#x22;&#xa;    when&#xa;&#xa;\t&#x23; Define Fred&#xa;\t&#x24;fred &#x3a; Row &#x28; externalSource &#x3d;&#x3d; true,&#xa;\t\t\t\tcolumn&#x5b;&#x22;name&#x22;&#x5d; &#x3d;&#x3d; &#x22;Fred&#x22;&#xa;\t&#x29;&#xa;&#xa;\t&#x23; Define Joe&#xa;\t&#x24;joe &#x3a; Row &#x28; \texternalSource &#x3d;&#x3d; true, &#xa;\t\t\t      \tcolumn&#x5b;&#x22;name&#x22;&#x5d; &#x3d;&#x3d; &#x22;Joe&#x22;,&#xa;\t\t\t      \tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x3d;&#x3d; 2,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; &#x24;fred.column&#x5b;&#x22;position&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x24;fred.column&#x5b;&#x22;color&#x22;&#x5d;&#xa;\t&#x29;&#xa;       &#xa;\t&#x23; Define Bob&#xa;\t&#x24;bob &#x3a; Row &#x28; externalSource &#x3d;&#x3d; true,&#xa;\t\t\t\tcolumn&#x5b;&#x22;name&#x22;&#x5d; &#x3d;&#x3d; &#x22;Bob&#x22;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; &#x24;fred.column&#x5b;&#x22;position&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; &#x24;joe.column&#x5b;&#x22;position&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x3d;&#x3d; &#x22;plaid&#x22;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x24;fred.column&#x5b;&#x22;color&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x24;joe.column&#x5b;&#x22;color&#x22;&#x5d;&#xa;\t&#x29;&#xa;&#xa;\t&#x23; Define Tom&#xa;\t&#x24;tom &#x3a; Row &#x28; externalSource &#x3d;&#x3d; true,&#xa;\t\t\t\tcolumn&#x5b;&#x22;name&#x22;&#x5d; &#x3d;&#x3d; &#x22;Tom&#x22;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; 1,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; 4,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; &#x24;fred.column&#x5b;&#x22;position&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; &#x24;joe.column&#x5b;&#x22;position&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x21;&#x3d; &#x24;bob.column&#x5b;&#x22;position&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x22;orange&#x22;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x24;fred.column&#x5b;&#x22;color&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x24;joe.column&#x5b;&#x22;color&#x22;&#x5d;,&#xa;\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x21;&#x3d; &#x24;bob.column&#x5b;&#x22;color&#x22;&#x5d;&#xa;\t&#x29;&#xa;&#xa;\t&#x23; Define Unknown&#xa;\t&#x24;unknown &#x3a; Row &#x28; externalSource &#x3d;&#x3d; true,&#xa;\t\t\t\t\tcolumn&#x5b;&#x22;position&#x22;&#x5d; &#x3d;&#x3d; &#x28;&#x24;fred.column&#x5b;&#x22;position&#x22;&#x5d; &#x2b; 1&#x29;,&#xa;\t\t\t\t\tcolumn&#x5b;&#x22;color&#x22;&#x5d; &#x3d;&#x3d; &#x22;blue&#x22;,&#xa;\t\t\t\t\tthis in &#x28; &#x24;joe, &#x24;bob, &#x24;tom&#x29;&#xa;\t&#x29;&#xa;&#xa;    then&#xa;&#xa;      Row fredRow &#x3d; new Row&#x28;&#x29;&#x3b;&#xa;      Row joeRow &#x3d; new Row&#x28;&#x29;&#x3b;&#xa;      Row bobRow &#x3d; new Row&#x28;&#x29;&#x3b;&#xa;      Row tomRow &#x3d; new Row&#x28;&#x29;&#x3b;&#xa;&#xa;\tfredRow.addColumn&#x28;&#x22;name&#x22;, &#x22;Fred&#x22;&#x29;&#x3b;&#xa;\tfredRow.addColumn&#x28;&#x22;position&#x22;, &#x24;fred.column&#x5b;&#x22;position&#x22;&#x5d;&#x29;&#x3b;&#xa;\tfredRow.addColumn&#x28;&#x22;color&#x22;, &#x24;fred.column&#x5b;&#x22;color&#x22;&#x5d;&#x29;&#x3b;&#xa;&#xa;\tjoeRow.addColumn&#x28;&#x22;name&#x22;, &#x22;Joe&#x22;&#x29;&#x3b;&#xa;\tjoeRow.addColumn&#x28;&#x22;position&#x22;, &#x24;joe.column&#x5b;&#x22;position&#x22;&#x5d;&#x29;&#x3b;&#xa;\tjoeRow.addColumn&#x28;&#x22;color&#x22;, &#x24;joe.column&#x5b;&#x22;color&#x22;&#x5d;&#x29;&#x3b;&#xa;&#xa;\tbobRow.addColumn&#x28;&#x22;name&#x22;, &#x22;Bob&#x22;&#x29;&#x3b;&#xa;\tbobRow.addColumn&#x28;&#x22;position&#x22;, &#x24;bob.column&#x5b;&#x22;position&#x22;&#x5d;&#x29;&#x3b;&#xa;\tbobRow.addColumn&#x28;&#x22;color&#x22;, &#x24;bob.column&#x5b;&#x22;color&#x22;&#x5d;&#x29;&#x3b;&#xa;&#xa;\ttomRow.addColumn&#x28;&#x22;name&#x22;, &#x22;Tom&#x22;&#x29;&#x3b;&#xa;\ttomRow.addColumn&#x28;&#x22;position&#x22;, &#x24;tom.column&#x5b;&#x22;position&#x22;&#x5d;&#x29;&#x3b;&#xa;\ttomRow.addColumn&#x28;&#x22;color&#x22;, &#x24;tom.column&#x5b;&#x22;color&#x22;&#x5d;&#x29;&#x3b;&#xa;&#xa;      \tinsert&#x28;fredRow&#x29;&#x3b;&#xa;      \tinsert&#x28;joeRow&#x29;&#x3b;&#xa;      \tinsert&#x28;bobRow&#x29;&#x3b;&#xa;      \tinsert&#x28;tomRow&#x29;&#x3b; &#xa;&#xa;end</rule-definition>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>656</xloc>\n+      <yloc>126</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step>\n+    <name>Sort rows</name>\n+    <type>SortRows</type>\n+    <description/>\n+    <distribute>Y</distribute>\n+    <custom_distribution/>\n+    <copies>1</copies>\n+         <partitioning>\n+           <method>none</method>\n+           <schema_name/>\n+           </partitioning>\n+      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>\n+      <prefix>out</prefix>\n+      <sort_size>1000000</sort_size>\n+      <free_memory/>\n+      <compress>N</compress>\n+      <compress_variable/>\n+      <unique_rows>N</unique_rows>\n+    <fields>\n+      <field>\n+        <name>position</name>\n+        <ascending>Y</ascending>\n+        <case_sensitive>N</case_sensitive>\n+        <presorted>N</presorted>\n+      </field>\n+    </fields>\n+     <cluster_schema/>\n+ <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>\n+      <xloc>846</xloc>\n+      <yloc>126</yloc>\n+      <draw>Y</draw>\n+      </GUI>\n+    </step>\n+\n+  <step_error_handling>\n+  </step_error_handling>\n+   <slave-step-copy-partition-distribution>\n+</slave-step-copy-partition-distribution>\n+   <slave_transformation>N</slave_transformation>\n+\n+</transformation>",
    "expose filealreadyexistexception in mkdir .": "diff --git a/src/main/java/tachyon/command/TFsShell.java b/src/main/java/tachyon/command/TFsShell.java\nindex 3134870e80..2658acf15f 100644\n--- a/src/main/java/tachyon/command/TFsShell.java\n+++ b/src/main/java/tachyon/command/TFsShell.java\n@@ -47,7 +47,7 @@ public class TFsShell {\n     return 0;\n   }\n \n-  public int mkdir(String argv[]) throws InvalidPathException {\n+  public int mkdir(String argv[]) throws InvalidPathException, FileAlreadyExistException {\n     if (argv.length != 2) {\n       System.out.println(\"Usage: tfs mkdir <path>\");\n       return -1;\ndiff --git a/src/main/java/tachyon/hadoop/TFileInputStreamHdfs.java b/src/main/java/tachyon/hadoop/TFileInputStreamHdfs.java\nindex b558e008a1..d8cf188d80 100644\n--- a/src/main/java/tachyon/hadoop/TFileInputStreamHdfs.java\n+++ b/src/main/java/tachyon/hadoop/TFileInputStreamHdfs.java\n@@ -123,10 +123,6 @@ implements Seekable, PositionedReadable {\n \n   @Override\n   public int read() throws IOException {\n-    if (mHdfsInputStream != null) {\n-      return readFromHdfsBuffer();\n-    }\n-\n     if (mTachyonFileInputStream != null) {\n       int ret = 0;\n       try {\n@@ -139,6 +135,10 @@ implements Seekable, PositionedReadable {\n       }\n     }\n \n+    if (mHdfsInputStream != null) {\n+      return readFromHdfsBuffer();\n+    }\n+\n     FileSystem fs = mHdfsPath.getFileSystem(mHadoopConf);\n     mHdfsInputStream = fs.open(mHdfsPath, mHadoopBufferSize);\n     mHdfsInputStream.seek(mCurrentPosition);",
    "Added setMethodRef and setFieldRef methods to InvokeExpr and FieldRef .": "diff --git a/src/soot/jimple/FieldRef.java b/src/soot/jimple/FieldRef.java\nindex 4de1fe0c90..dc58d86e6c 100644\n--- a/src/soot/jimple/FieldRef.java\n+++ b/src/soot/jimple/FieldRef.java\n@@ -37,5 +37,6 @@ import java.util.*;\n public interface FieldRef extends ConcreteRef\n {\n     public SootFieldRef getFieldRef();\n+    public void setFieldRef(SootFieldRef sfr);\n     public SootField getField();\n }\ndiff --git a/src/soot/jimple/InvokeExpr.java b/src/soot/jimple/InvokeExpr.java\nindex 96cbbc618b..7395edecdc 100644\n--- a/src/soot/jimple/InvokeExpr.java\n+++ b/src/soot/jimple/InvokeExpr.java\n@@ -35,6 +35,7 @@ import java.util.*;\n \n public interface InvokeExpr extends Expr\n {\n+    public void setMethodRef(SootMethodRef smr);\n     public SootMethodRef getMethodRef();\n     public SootMethod getMethod();\n     public List getArgs();\ndiff --git a/src/soot/jimple/StaticFieldRef.java b/src/soot/jimple/StaticFieldRef.java\nindex 46ec9b65cb..50caff4f37 100644\n--- a/src/soot/jimple/StaticFieldRef.java\n+++ b/src/soot/jimple/StaticFieldRef.java\n@@ -39,7 +39,9 @@ import java.io.*;\n \n public class StaticFieldRef implements FieldRef, ConvertToBaf\n {\n-    protected SootFieldRef fieldRef;\n+\n+\n+\tprotected SootFieldRef fieldRef;\n \n     protected StaticFieldRef(SootFieldRef fieldRef)\n     {\n@@ -65,6 +67,10 @@ public class StaticFieldRef implements FieldRef, ConvertToBaf\n     {\n         return fieldRef;\n     }\n+\n+\tpublic void setFieldRef(SootFieldRef fieldRef) {\n+\t\tthis.fieldRef = fieldRef;\n+\t}\n     public SootField getField()\n     {\n         return fieldRef.resolve();\ndiff --git a/src/soot/jimple/internal/AbstractInstanceFieldRef.java b/src/soot/jimple/internal/AbstractInstanceFieldRef.java\nindex 0618ae8a71..b2ca96a657 100644\n--- a/src/soot/jimple/internal/AbstractInstanceFieldRef.java\n+++ b/src/soot/jimple/internal/AbstractInstanceFieldRef.java\n@@ -41,7 +41,7 @@ public abstract class AbstractInstanceFieldRef implements InstanceFieldRef, Conv\n     protected SootFieldRef fieldRef;\n     ValueBox baseBox;\n \n-    protected AbstractInstanceFieldRef(ValueBox baseBox, SootFieldRef fieldRef)\n+\tprotected AbstractInstanceFieldRef(ValueBox baseBox, SootFieldRef fieldRef)\n     {\n         if( fieldRef.isStatic() ) throw new RuntimeException(\"wrong static-ness\");\n         this.baseBox = baseBox;\n@@ -82,6 +82,9 @@ public abstract class AbstractInstanceFieldRef implements InstanceFieldRef, Conv\n     {\n         return fieldRef;\n     }\n+\tpublic void setFieldRef(SootFieldRef fieldRef) {\n+\t\tthis.fieldRef = fieldRef;\n+\t}\n \n     public SootField getField()\n     {\ndiff --git a/src/soot/jimple/internal/AbstractInvokeExpr.java b/src/soot/jimple/internal/AbstractInvokeExpr.java\nindex 1ff4092cb8..9e72a7e674 100644\n--- a/src/soot/jimple/internal/AbstractInvokeExpr.java\n+++ b/src/soot/jimple/internal/AbstractInvokeExpr.java\n@@ -41,6 +41,10 @@ abstract public class AbstractInvokeExpr implements InvokeExpr\n     protected SootMethodRef methodRef;\n     protected ValueBox[] argBoxes;\n \n+\tpublic void setMethodRef(SootMethodRef methodRef) {\n+\t\tthis.methodRef = methodRef;\n+\t}\n+\t\n     public SootMethodRef getMethodRef()\n     {\n         return methodRef;",
    "Throw contextual error when compiling value xmls with > 1 period in filename with aapt2 , instead of just failing with \\\" < file > . arsc . flat does not exist after aapt2 ran \\\" : .": "diff --git a/src/tools/android/java/com/google/devtools/build/android/aapt2/ResourceCompiler.java b/src/tools/android/java/com/google/devtools/build/android/aapt2/ResourceCompiler.java\nindex 92ca14b34e..8f7fedf03e 100644\n--- a/src/tools/android/java/com/google/devtools/build/android/aapt2/ResourceCompiler.java\n+++ b/src/tools/android/java/com/google/devtools/build/android/aapt2/ResourceCompiler.java\n@@ -172,10 +172,29 @@ public class ResourceCompiler {\n     }\n \n     static String interpolateAapt2Filename(Qualifiers qualifiers, String filename) {\n-      return qualifiers.asFolderType().equals(ResourceFolderType.VALUES)\n-          ? (filename.indexOf('.') != -1 ? filename.substring(0, filename.indexOf('.')) : filename)\n-              + \".arsc\"\n-          : filename;\n+      // res/<not values>/foo.bar -> foo.bar\n+      if (!qualifiers.asFolderType().equals(ResourceFolderType.VALUES)) {\n+        return filename;\n+      }\n+\n+      int periodIndex = filename.indexOf('.');\n+\n+      // res/values/foo -> foo.arsc\n+      if (periodIndex == -1) {\n+        return filename + \".arsc\";\n+      }\n+\n+      // res/values/foo.bar.baz -> throw error.\n+      if (filename.lastIndexOf('.') != periodIndex) {\n+        throw new CompileError(\n+            new IllegalArgumentException(\n+                \"aapt2 does not support compiling resource xmls with multiple periods in the \"\n+                    + \"filename: \"\n+                    + filename));\n+      }\n+\n+      // res/values/foo.xml -> foo.arsc\n+      return filename.substring(0, periodIndex) + \".arsc\";\n     }\n \n     private void compile(",
    "rotate ( ) check for zero vectors , fixed naming error in PGL . Context class": "diff --git a/core/src/processing/core/PMatrix3D.java b/core/src/processing/core/PMatrix3D.java\nindex 2840d4ec1..4732ed6eb 100644\n--- a/core/src/processing/core/PMatrix3D.java\n+++ b/core/src/processing/core/PMatrix3D.java\n@@ -229,7 +229,19 @@ public final class PMatrix3D implements PMatrix /*, PConstants*/ {\n \n \n   public void rotate(float angle, float v0, float v1, float v2) {\n-    // TODO should make sure this vector is normalized\n+    float norm2 = v0 * v0 + v1 * v1 + v2 * v2;\n+    if (norm2 < PConstants.EPSILON) {\n+      // The vector is zero, cannot apply rotation.\n+      return;\n+    }    \n+    \n+    if (Math.abs(norm2 - 1) > PConstants.EPSILON) {\n+      // The rotation vector is not normalized.\n+      float norm = PApplet.sqrt(norm2);\n+      v0 /= norm;\n+      v1 /= norm;\n+      v2 /= norm;\n+    } \n \n     float c = cos(angle);\n     float s = sin(angle);\ndiff --git a/java/libraries/opengl/src/processing/opengl/PGL.java b/java/libraries/opengl/src/processing/opengl/PGL.java\nindex 59d01b93b..76be3eb24 100644\n--- a/java/libraries/opengl/src/processing/opengl/PGL.java\n+++ b/java/libraries/opengl/src/processing/opengl/PGL.java\n@@ -1135,14 +1135,14 @@ public class PGL {\n \n   \n   public class Context {\n-    protected GLContext context;\n+    protected GLContext glContext;\n \n     Context() {\n-      context = null;    \n+      glContext = null;    \n     }\n     \n     Context(GLContext context) {\n-      this.context = context;\n+      glContext = context;\n     }\n \n     boolean current() {\n@@ -1150,20 +1150,20 @@ public class PGL {\n     }    \n     \n     boolean equal(GLContext context) {\n-      if (this.context == null || context == null) {\n+      if (glContext == null || context == null) {\n         // A null context means a still non-created resource,\n         // so it is considered equal to the argument.\n         return true; \n       } else {        \n-        return this.context.hashCode() == context.hashCode();\n+        return glContext.hashCode() == context.hashCode();\n       }\n     }\n     \n     int code() {\n-      if (context == null) {\n+      if (glContext == null) {\n         return -1;\n       } else {\n-        return context.hashCode();\n+        return glContext.hashCode();\n       }\n     }\n   }\ndiff --git a/java/libraries/opengl/src/processing/opengl/PGraphicsOpenGL.java b/java/libraries/opengl/src/processing/opengl/PGraphicsOpenGL.java\nindex 7e764b095..4eae32c9a 100644\n--- a/java/libraries/opengl/src/processing/opengl/PGraphicsOpenGL.java\n+++ b/java/libraries/opengl/src/processing/opengl/PGraphicsOpenGL.java\n@@ -1429,8 +1429,8 @@ public class PGraphicsOpenGL extends PGraphics {\n       } else {\n         setFramebuffer(offscreenFramebuffer);\n       }\n-      pgl.glDrawBuffer(PGL.GL_COLOR_ATTACHMENT0);\n       pgl.updateOffscreen(pg.pgl);\n+      pgl.glDrawBuffer(PGL.GL_COLOR_ATTACHMENT0);      \n     }\n \n     // We are ready to go!\n@@ -3159,14 +3159,12 @@ public class PGraphicsOpenGL extends PGraphics {\n       flush();\n     }\n \n-    modelview.rotate(angle, v0, v1, v2);\n-    invRotate(modelviewInv, angle, v0, v1, v2);\n-    calcProjmodelview(); // Possibly cheaper than doing projmodelview.rotate()\n-  }\n-\n-\n-  static private void invRotate(PMatrix3D matrix, float angle, float v0, float v1, float v2) {\n     float norm2 = v0 * v0 + v1 * v1 + v2 * v2;\n+    if (norm2 < EPSILON) {\n+      // The vector is zero, cannot apply rotation.\n+      return;\n+    }    \n+    \n     if (Math.abs(norm2 - 1) > EPSILON) {\n       // The rotation vector is not normalized.\n       float norm = PApplet.sqrt(norm2);\n@@ -3175,6 +3173,13 @@ public class PGraphicsOpenGL extends PGraphics {\n       v2 /= norm;\n     }    \n     \n+    modelview.rotate(angle, v0, v1, v2);\n+    invRotate(modelviewInv, angle, v0, v1, v2);\n+    calcProjmodelview(); // Possibly cheaper than doing projmodelview.rotate()\n+  }\n+\n+\n+  static private void invRotate(PMatrix3D matrix, float angle, float v0, float v1, float v2) {\n     float c = PApplet.cos(-angle);\n     float s = PApplet.sin(-angle);\n     float t = 1.0f - c;\n@@ -5010,10 +5015,10 @@ public class PGraphicsOpenGL extends PGraphics {\n     // Getting the context and capabilities from the main renderer.\n     pg = (PGraphicsOpenGL)parent.g;\n     pgl.initOffscreenSurface(pg.pgl);\n-\n     pgl.updateOffscreen(pg.pgl);\n+    \n     loadTextureImpl(BILINEAR);\n-\n+    \n     // In case of reinitialization (for example, when the smooth level\n     // is changed), we make sure that all the OpenGL resources associated\n     // to the surface are released by calling delete().",
    "Add soft error for large LithoViews .": "diff --git a/litho-core/src/main/java/com/facebook/litho/LithoView.java b/litho-core/src/main/java/com/facebook/litho/LithoView.java\nindex b081e6c034..5e734bd599 100644\n--- a/litho-core/src/main/java/com/facebook/litho/LithoView.java\n+++ b/litho-core/src/main/java/com/facebook/litho/LithoView.java\n@@ -23,6 +23,7 @@ import static com.facebook.litho.ThreadUtils.assertMainThread;\n import android.content.Context;\n import android.graphics.Canvas;\n import android.graphics.Rect;\n+import android.os.Build;\n import android.util.AttributeSet;\n import android.view.View;\n import android.view.ViewGroup;\n@@ -47,6 +48,7 @@ public class LithoView extends Host {\n   public static final String ZERO_HEIGHT_LOG = \"LithoView:0-height\";\n   public static final String SET_ALREADY_ATTACHED_COMPONENT_TREE =\n       \"LithoView:SetAlreadyAttachedComponentTree\";\n+  private static final int TOO_BIG_TEXTURE_SIZE = 4096;\n   private boolean mIsMountStateDirty;\n   private final boolean mUseExtensions;\n   private final @Nullable MountDelegateTarget mMountDelegateTarget;\n@@ -449,6 +451,25 @@ public class LithoView extends Host {\n             \"Trying to layout a LithoView holding onto a released ComponentTree\");\n       }\n \n+      if (bottom - top >= TOO_BIG_TEXTURE_SIZE || right - left >= TOO_BIG_TEXTURE_SIZE) {\n+        if (isDeviceThatCantHandleTooBigTextures()) {\n+          ComponentsReporter.emitMessage(\n+              ComponentsReporter.LogLevel.ERROR,\n+              \"TextureTooBig\",\n+              \"LithoView has measured greater than \"\n+                  + TOO_BIG_TEXTURE_SIZE\n+                  + \" in one dimension. Size: \"\n+                  + (right - left)\n+                  + \"x\"\n+                  + (bottom - top)\n+                  + \", component: \"\n+                  + (mComponentTree.getRoot() != null\n+                      ? mComponentTree.getRoot().getSimpleName()\n+                      : null),\n+              100);\n+        }\n+      }\n+\n       if (mDoMeasureInLayout || mComponentTree.getMainThreadLayoutState() == null) {\n         final int widthWithoutPadding =\n             Math.max(0, right - left - getPaddingRight() - getPaddingLeft());\n@@ -1327,6 +1348,20 @@ public class LithoView extends Host {\n     forceRelayout();\n   }\n \n+  private static boolean isDeviceThatCantHandleTooBigTextures() {\n+    switch (Build.MODEL) {\n+      case \"SM-J610F\":\n+   "
}